{"sha":"91d7bba36bcfa59638102c74c6d855cd9d8889be","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkxZDdiYmEzNmJjZmE1OTYzODEwMmM3NGM2ZDg1NWNkOWQ4ODg5YmU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-19T13:04:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-19T13:04:39Z"},"message":"[SYNCOPE-290] Preliminary refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1603867 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3ff0b0537c5824947a5ce5e4bf71e2c50f759f7d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3ff0b0537c5824947a5ce5e4bf71e2c50f759f7d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/91d7bba36bcfa59638102c74c6d855cd9d8889be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/91d7bba36bcfa59638102c74c6d855cd9d8889be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/91d7bba36bcfa59638102c74c6d855cd9d8889be","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/91d7bba36bcfa59638102c74c6d855cd9d8889be/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4fd7a195fd35d91bd3a6e7de4d8c504bd0be16fd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fd7a195fd35d91bd3a6e7de4d8c504bd0be16fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4fd7a195fd35d91bd3a6e7de4d8c504bd0be16fd"}],"stats":{"total":1495,"additions":786,"deletions":709},"files":[{"sha":"cee7afbfb61c41e496fdd287fd73e6bb3a4e7922","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClient.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -18,19 +18,19 @@\n  */\n package org.apache.syncope.client;\n \n-import org.apache.syncope.common.search.UserFiqlSearchConditionBuilder;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.rest.RestClientFactoryBean;\n import org.apache.syncope.common.search.OrderByClauseBuilder;\n import org.apache.syncope.common.search.RoleFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.services.UserSelfService;\n import org.apache.syncope.common.services.WorkflowService;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.common.types.SubjectType;\n \n /**\n  * Entry point for client access to all REST services exposed by Syncope core; obtain instances via\n@@ -222,26 +222,23 @@ public boolean isSelfRegistrationAllowed() {\n     /**\n      * Checks whether Activiti workflow is enabled for users / roles, by calling <tt>WorkflowService</tt>'s options.\n      *\n-     * @param attributableType user / role\n+     * @param subjectType user / role\n      * @return whether Activiti workflow is enabled for given attributable type\n      * @see WorkflowService#getOptions(org.apache.syncope.common.types.AttributableType)\n      */\n-    public boolean isActivitiEnabledFor(final AttributableType attributableType) {\n-        Response options = getService(WorkflowService.class).getOptions(attributableType);\n+    public boolean isActivitiEnabledFor(final SubjectType subjectType) {\n+        Response options = getService(WorkflowService.class).getOptions(subjectType);\n \n         boolean result;\n-        switch (attributableType) {\n+        switch (subjectType) {\n             case USER:\n+            default:\n                 result = Boolean.valueOf(options.getHeaderString(RESTHeaders.ACTIVITI_USER_ENABLED));\n                 break;\n \n             case ROLE:\n                 result = Boolean.valueOf(options.getHeaderString(RESTHeaders.ACTIVITI_ROLE_ENABLED));\n                 break;\n-\n-            case MEMBERSHIP:\n-            default:\n-                result = false;\n         }\n \n         return result;"},{"sha":"0c53c7a50bd25707fee6f454ab7f5364ce487004","filename":"common/src/main/java/org/apache/syncope/common/mod/AbstractAttributableMod.java","status":"modified","additions":7,"deletions":42,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -40,37 +40,17 @@ public abstract class AbstractAttributableMod extends AbstractBaseBean {\n \r\n     protected long id;\r\n \r\n-    protected Set<AttributeMod> attrsToUpdate;\r\n+    protected final Set<AttributeMod> attrsToUpdate = new HashSet<AttributeMod>();\r\n \r\n-    protected Set<String> attrsToRemove;\r\n+    protected final Set<String> attrsToRemove = new HashSet<String>();\r\n \r\n-    protected Set<String> derAttrsToAdd;\r\n+    protected final Set<String> derAttrsToAdd = new HashSet<String>();\r\n \r\n-    protected Set<String> derAttrsToRemove;\r\n+    protected final Set<String> derAttrsToRemove = new HashSet<String>();\r\n \r\n-    protected Set<AttributeMod> virAttrsToUpdate;\r\n+    protected final Set<AttributeMod> virAttrsToUpdate = new HashSet<AttributeMod>();\r\n \r\n-    protected Set<String> virAttrsToRemove;\r\n-\r\n-    protected Set<String> resourcesToAdd;\r\n-\r\n-    protected Set<String> resourcesToRemove;\r\n-\r\n-    /**\r\n-     * All attributes are initialized to empty sets.\r\n-     */\r\n-    public AbstractAttributableMod() {\r\n-        super();\r\n-\r\n-        attrsToUpdate = new HashSet<AttributeMod>();\r\n-        attrsToRemove = new HashSet<String>();\r\n-        derAttrsToAdd = new HashSet<String>();\r\n-        derAttrsToRemove = new HashSet<String>();\r\n-        virAttrsToUpdate = new HashSet<AttributeMod>();\r\n-        virAttrsToRemove = new HashSet<String>();\r\n-        resourcesToAdd = new HashSet<String>();\r\n-        resourcesToRemove = new HashSet<String>();\r\n-    }\r\n+    protected final Set<String> virAttrsToRemove = new HashSet<String>();\r\n \r\n     public long getId() {\r\n         return id;\r\n@@ -122,27 +102,12 @@ public Set<AttributeMod> getVirAttrsToUpdate() {\n         return virAttrsToUpdate;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToAdd\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToAdd\")\r\n-    public Set<String> getResourcesToAdd() {\r\n-        return resourcesToAdd;\r\n-    }\r\n-\r\n-    @XmlElementWrapper(name = \"resourcesToRemove\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToRemove\")\r\n-    public Set<String> getResourcesToRemove() {\r\n-        return resourcesToRemove;\r\n-    }\r\n-\r\n     /**\r\n      * @return true is all backing Sets are empty.\r\n      */\r\n     public boolean isEmpty() {\r\n         return attrsToUpdate.isEmpty() && attrsToRemove.isEmpty()\r\n                 && derAttrsToAdd.isEmpty() && derAttrsToRemove.isEmpty()\r\n-                && virAttrsToUpdate.isEmpty() && virAttrsToRemove.isEmpty()\r\n-                && resourcesToAdd.isEmpty() && resourcesToRemove.isEmpty();\r\n+                && virAttrsToUpdate.isEmpty() && virAttrsToRemove.isEmpty();\r\n     }\r\n }\r"},{"sha":"82def2fbb43dbd35541a3f509f2d4ad467bfe4ee","filename":"common/src/main/java/org/apache/syncope/common/mod/AbstractSubjectMod.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractSubjectMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractSubjectMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractSubjectMod.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.mod;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlType\n+public abstract class AbstractSubjectMod extends AbstractAttributableMod {\n+\n+    private static final long serialVersionUID = -6404459635536484024L;\n+\n+    protected final Set<String> resourcesToAdd = new HashSet<String>();\n+\n+    protected final Set<String> resourcesToRemove = new HashSet<String>();\n+\n+    @XmlElementWrapper(name = \"resourcesToAdd\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resourcesToAdd\")\n+    public Set<String> getResourcesToAdd() {\n+        return resourcesToAdd;\n+    }\n+\n+    @XmlElementWrapper(name = \"resourcesToRemove\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resourcesToRemove\")\n+    public Set<String> getResourcesToRemove() {\n+        return resourcesToRemove;\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return super.isEmpty() && resourcesToAdd.isEmpty() && resourcesToRemove.isEmpty();\n+    }\n+\n+}"},{"sha":"885c59c3d3506edf22bd519ca1ef3d53bbd25f43","filename":"common/src/main/java/org/apache/syncope/common/mod/MembershipMod.java","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -19,12 +19,6 @@\n package org.apache.syncope.common.mod;\r\n \r\n import com.fasterxml.jackson.annotation.JsonIgnore;\r\n-import com.fasterxml.jackson.annotation.JsonProperty;\r\n-import java.util.Collections;\r\n-import java.util.Set;\r\n-\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n@@ -44,22 +38,6 @@ public void setRole(long role) {\n         this.role = role;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToAdd\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToAdd\")\r\n-    @Override\r\n-    public Set<String> getResourcesToAdd() {\r\n-        return Collections.emptySet();\r\n-    }\r\n-\r\n-    @XmlElementWrapper(name = \"resourcesToRemove\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToRemove\")\r\n-    @Override\r\n-    public Set<String> getResourcesToRemove() {\r\n-        return Collections.emptySet();\r\n-    }\r\n-\r\n     @JsonIgnore\r\n     @Override\r\n     public boolean isEmpty() {\r"},{"sha":"c599b833b48adf383adaacbecc7183226c399d33","filename":"common/src/main/java/org/apache/syncope/common/mod/RoleMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -30,7 +30,7 @@\n \r\n @XmlRootElement(name = \"roleMod\")\r\n @XmlType\r\n-public class RoleMod extends AbstractAttributableMod {\r\n+public class RoleMod extends AbstractSubjectMod {\r\n \r\n     private static final long serialVersionUID = 7455805264680210747L;\r\n \r"},{"sha":"acfe6074d611343e54605feda3e6a5476282196f","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -29,7 +29,7 @@\n \r\n @XmlRootElement(name = \"userMod\")\r\n @XmlType\r\n-public class UserMod extends AbstractAttributableMod {\r\n+public class UserMod extends AbstractSubjectMod {\r\n \r\n     private static final long serialVersionUID = 3081848906558106204L;\r\n \r"},{"sha":"ce0693409d9728568ae0feb204917ddc8a241a76","filename":"common/src/main/java/org/apache/syncope/common/search/SearchableFields.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FSearchableFields.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FSearchableFields.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FSearchableFields.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n \n public class SearchableFields {\n \n@@ -36,8 +36,8 @@ public class SearchableFields {\n         \"propagationTOs\", \"propagationStatusMap\"\n     };\n \n-    public static final List<String> get(final AttributableType attributableType) {\n-        return get(attributableType == AttributableType.USER\n+    public static final List<String> get(final SubjectType subjectType) {\n+        return get(subjectType == SubjectType.USER\n                 ? UserTO.class\n                 : RoleTO.class);\n     }"},{"sha":"2b7004aa3ce328cc56a1963fbc441671d87aa5ec","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -33,13 +33,12 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\r\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n-\r\n import org.apache.syncope.common.reqres.BulkAction;\r\n import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n-import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n import org.apache.syncope.common.wrap.PropagationActionClass;\r\n import org.apache.syncope.common.wrap.SubjectId;\r\n \r\n@@ -61,7 +60,7 @@ public interface ResourceService extends JAXRSService {\n     @Path(\"{resourceName}/{type}/{id}\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\r\n-            @PathParam(\"type\") AttributableType type, @PathParam(\"id\") Long id);\r\n+            @PathParam(\"type\") SubjectType type, @PathParam(\"id\") Long id);\r\n \r\n     /**\r\n      * Returns a list of classes that can be used to customize the propagation process.\r\n@@ -150,10 +149,10 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n     boolean check(ResourceTO resourceTO);\r\n \r\n     /**\r\n-     * De-associate users or roles (depending on the provided attributable type) from the given resource.\r\n+     * De-associate users or roles (depending on the provided subject type) from the given resource.\r\n      *\r\n      * @param resourceName name of resource\r\n-     * @param attrType attributable type (user or role)\r\n+     * @param subjectType subject type (user or role)\r\n      * @param type resource de-association action type\r\n      * @param subjectIds users or roles against which the bulk action will be performed\r\n      * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\r\n@@ -167,7 +166,7 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     BulkActionResult bulkDeassociation(@PathParam(\"resourceName\") String resourceName,\r\n-            @PathParam(\"attrType\") AttributableType attrType,\r\n+            @PathParam(\"attrType\") SubjectType subjectType,\r\n             @PathParam(\"type\") ResourceDeassociationActionType type, List<SubjectId> subjectIds);\r\n \r\n     /**\r"},{"sha":"3ea09130b62af26b3a57c4d836eba6b5bb3a3f7b","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -30,9 +30,8 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\r\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n-\r\n-import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.RESTHeaders;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n \r\n /**\r\n  * REST operations for workflow definition management.\r\n@@ -43,7 +42,7 @@ public interface WorkflowService extends JAXRSService {\n     /**\r\n      * Checks whether Activiti is enabled (for users or roles).\r\n      *\r\n-     * @param kind can be USER or ROLE only!\r\n+     * @param kind user or role\r\n      * @return <tt>Response</tt> contains special syncope HTTP header indicating if Activiti is enabled for\r\n      * users / roles\r\n      * @see org.apache.syncope.common.types.RESTHeaders#ACTIVITI_USER_ENABLED\r\n@@ -54,36 +53,36 @@ public interface WorkflowService extends JAXRSService {\n                 value = \"Contains special syncope HTTP header indicating if Activiti is enabled for users / roles\")\r\n     })\r\n     @OPTIONS\r\n-    Response getOptions(@PathParam(\"kind\") AttributableType kind);\r\n+    Response getOptions(@PathParam(\"kind\") SubjectType kind);\r\n \r\n     /**\r\n      * Exports workflow definition for matching kind.\r\n      *\r\n-     * @param kind can be USER or ROLE only!\r\n+     * @param kind user or role\r\n      * @return workflow definition for matching kind\r\n      */\r\n     @GET\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    Response exportDefinition(@PathParam(\"kind\") AttributableType kind);\r\n+    Response exportDefinition(@PathParam(\"kind\") SubjectType kind);\r\n \r\n     /**\r\n      * Exports workflow diagram representation.\r\n      *\r\n-     * @param kind can be USER or ROLE only!\r\n+     * @param kind user or role\r\n      * @return workflow diagram representation\r\n      */\r\n     @GET\r\n     @Path(\"diagram.png\")\r\n     @Produces({ RESTHeaders.MEDIATYPE_IMAGE_PNG })\r\n-    Response exportDiagram(@PathParam(\"kind\") AttributableType kind);\r\n+    Response exportDiagram(@PathParam(\"kind\") SubjectType kind);\r\n \r\n     /**\r\n      * Imports workflow definition for matching kind.\r\n      *\r\n-     * @param kind can be USER or ROLE only!\r\n+     * @param kind user or role\r\n      * @param definition workflow definition for matching kind\r\n      */\r\n     @PUT\r\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    void importDefinition(@PathParam(\"kind\") AttributableType kind, String definition);\r\n+    void importDefinition(@PathParam(\"kind\") SubjectType kind, String definition);\r\n }\r"},{"sha":"d9865c014aec85267ab5b7a25a6083781b6047ee","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":2,"deletions":46,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -23,10 +23,8 @@\n import java.util.ArrayList;\r\n import java.util.Collections;\r\n import java.util.HashMap;\r\n-import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Map;\r\n-import java.util.Set;\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlType;\r\n@@ -38,22 +36,9 @@ public abstract class AbstractAttributableTO extends ConnObjectTO {\n \r\n     private long id;\r\n \r\n-    private List<AttributeTO> derAttrs;\r\n+    private final List<AttributeTO> derAttrs = new ArrayList<AttributeTO>();\r\n \r\n-    private List<AttributeTO> virAttrs;\r\n-\r\n-    private Set<String> resources;\r\n-\r\n-    private final List<PropagationStatus> propagationStatusTOs;\r\n-\r\n-    protected AbstractAttributableTO() {\r\n-        super();\r\n-\r\n-        derAttrs = new ArrayList<AttributeTO>();\r\n-        virAttrs = new ArrayList<AttributeTO>();\r\n-        resources = new HashSet<String>();\r\n-        propagationStatusTOs = new ArrayList<PropagationStatus>();\r\n-    }\r\n+    private final List<AttributeTO> virAttrs = new ArrayList<AttributeTO>();\r\n \r\n     public long getId() {\r\n         return id;\r\n@@ -98,33 +83,4 @@ public List<AttributeTO> getDerAttrs() {\n     public List<AttributeTO> getVirAttrs() {\r\n         return virAttrs;\r\n     }\r\n-\r\n-    @XmlElementWrapper(name = \"resources\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resources\")\r\n-    public Set<String> getResources() {\r\n-        return resources;\r\n-    }\r\n-\r\n-    public boolean removePropagationTO(final String resource) {\r\n-        if (resource != null && getPropagationStatusTOs().isEmpty()) {\r\n-            final List<PropagationStatus> toBeRemoved = new ArrayList<PropagationStatus>();\r\n-\r\n-            for (PropagationStatus propagationTO : getPropagationStatusTOs()) {\r\n-                if (resource.equals(propagationTO.getResource())) {\r\n-                    toBeRemoved.add(propagationTO);\r\n-                }\r\n-            }\r\n-\r\n-            return propagationStatusTOs.removeAll(toBeRemoved);\r\n-        }\r\n-        return false;\r\n-    }\r\n-\r\n-    @XmlElementWrapper(name = \"propagationStatuses\")\r\n-    @XmlElement(name = \"propagationStatus\")\r\n-    @JsonProperty(\"propagationStatuses\")\r\n-    public List<PropagationStatus> getPropagationStatusTOs() {\r\n-        return propagationStatusTOs;\r\n-    }\r\n }\r"},{"sha":"9cfae4e4c2c5dd066765c18b739b25d22618bdd0","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractSubjectTO.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSubjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSubjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSubjectTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlType\n+public abstract class AbstractSubjectTO extends AbstractAttributableTO {\n+\n+    private static final long serialVersionUID = 114668706977919206L;\n+\n+    private final Set<String> resources = new HashSet<String>();\n+\n+    private final List<PropagationStatus> propagationStatusTOs = new ArrayList<PropagationStatus>();\n+\n+    @XmlElementWrapper(name = \"resources\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resources\")\n+    public Set<String> getResources() {\n+        return resources;\n+    }\n+\n+    public boolean removePropagationTO(final String resource) {\n+        if (resource != null && getPropagationStatusTOs().isEmpty()) {\n+            final List<PropagationStatus> toBeRemoved = new ArrayList<PropagationStatus>();\n+\n+            for (PropagationStatus propagationTO : getPropagationStatusTOs()) {\n+                if (resource.equals(propagationTO.getResource())) {\n+                    toBeRemoved.add(propagationTO);\n+                }\n+            }\n+\n+            return propagationStatusTOs.removeAll(toBeRemoved);\n+        }\n+        return false;\n+    }\n+\n+    @XmlElementWrapper(name = \"propagationStatuses\")\n+    @XmlElement(name = \"propagationStatus\")\n+    @JsonProperty(\"propagationStatuses\")\n+    public List<PropagationStatus> getPropagationStatusTOs() {\n+        return propagationStatusTOs;\n+    }\n+\n+}"},{"sha":"f58ba01227e7694ed7bd17cecf7ca6ef1c48ad1b","filename":"common/src/main/java/org/apache/syncope/common/to/ConnObjectTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -36,7 +36,7 @@ public class ConnObjectTO extends AbstractSysInfoTO {\n \r\n     private static final long serialVersionUID = 5139554911265442497L;\r\n \r\n-    private List<AttributeTO> attrs = new ArrayList<AttributeTO>();\r\n+    private final List<AttributeTO> attrs = new ArrayList<AttributeTO>();\r\n \r\n     @XmlElementWrapper(name = \"attributes\")\r\n     @XmlElement(name = \"attribute\")\r"},{"sha":"f9d955f0c7b67fb367783e96c4227d9d6794d0d6","filename":"common/src/main/java/org/apache/syncope/common/to/MembershipTO.java","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -18,13 +18,6 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n-import com.fasterxml.jackson.annotation.JsonProperty;\r\n-import java.util.Collections;\r\n-import java.util.List;\r\n-import java.util.Set;\r\n-\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n@@ -53,17 +46,4 @@ public String getRoleName() {\n     public void setRoleName(String roleName) {\r\n         this.roleName = roleName;\r\n     }\r\n-\r\n-    @Override\r\n-    @XmlElementWrapper(name = \"resources\")\r\n-    @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resources\")\r\n-    public Set<String> getResources() {\r\n-        return Collections.<String>emptySet();\r\n-    }\r\n-\r\n-    @Override\r\n-    public List<PropagationStatus> getPropagationStatusTOs() {\r\n-        return Collections.<PropagationStatus>emptyList();\r\n-    }\r\n }\r"},{"sha":"7d6db749c8c8752e230cf20e3a731c1bb0699db0","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationTaskTO.java","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -20,10 +20,9 @@\n \r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n-import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.PropagationMode;\r\n import org.apache.syncope.common.types.ResourceOperation;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n \r\n @XmlRootElement(name = \"propagationTask\")\r\n @XmlType\r\n@@ -45,47 +44,47 @@ public class PropagationTaskTO extends AbstractTaskTO {\n \r\n     private String objectClassName;\r\n \r\n-    private AttributableType subjectType;\r\n+    private SubjectType subjectType;\r\n \r\n     private Long subjectId;\r\n \r\n     public String getAccountId() {\r\n         return accountId;\r\n     }\r\n \r\n-    public void setAccountId(String accountId) {\r\n+    public void setAccountId(final String accountId) {\r\n         this.accountId = accountId;\r\n     }\r\n \r\n     public String getOldAccountId() {\r\n         return oldAccountId;\r\n     }\r\n \r\n-    public void setOldAccountId(String oldAccountId) {\r\n+    public void setOldAccountId(final String oldAccountId) {\r\n         this.oldAccountId = oldAccountId;\r\n     }\r\n \r\n     public PropagationMode getPropagationMode() {\r\n         return propagationMode;\r\n     }\r\n \r\n-    public void setPropagationMode(PropagationMode propagationMode) {\r\n+    public void setPropagationMode(final PropagationMode propagationMode) {\r\n         this.propagationMode = propagationMode;\r\n     }\r\n \r\n     public String getResource() {\r\n         return resource;\r\n     }\r\n \r\n-    public void setResource(String resource) {\r\n+    public void setResource(final String resource) {\r\n         this.resource = resource;\r\n     }\r\n \r\n     public ResourceOperation getPropagationOperation() {\r\n         return propagationOperation;\r\n     }\r\n \r\n-    public void setPropagationOperation(ResourceOperation propagationOperation) {\r\n+    public void setPropagationOperation(final ResourceOperation propagationOperation) {\r\n \r\n         this.propagationOperation = propagationOperation;\r\n     }\r\n@@ -94,31 +93,31 @@ public String getXmlAttributes() {\n         return xmlAttributes;\r\n     }\r\n \r\n-    public void setXmlAttributes(String xmlAttributes) {\r\n+    public void setXmlAttributes(final String xmlAttributes) {\r\n         this.xmlAttributes = xmlAttributes;\r\n     }\r\n \r\n     public String getObjectClassName() {\r\n         return objectClassName;\r\n     }\r\n \r\n-    public void setObjectClassName(String objectClassName) {\r\n+    public void setObjectClassName(final String objectClassName) {\r\n         this.objectClassName = objectClassName;\r\n     }\r\n \r\n-    public AttributableType getSubjectType() {\r\n+    public SubjectType getSubjectType() {\r\n         return subjectType;\r\n     }\r\n \r\n-    public void setSubjectType(AttributableType subjectType) {\r\n+    public void setSubjectType(final SubjectType subjectType) {\r\n         this.subjectType = subjectType;\r\n     }\r\n \r\n     public Long getSubjectId() {\r\n         return subjectId;\r\n     }\r\n \r\n-    public void setSubjectId(Long subjectId) {\r\n+    public void setSubjectId(final Long subjectId) {\r\n         this.subjectId = subjectId;\r\n     }\r\n }\r"},{"sha":"b352c2fdd1f706c1fe63af339dfccf44d1d181d6","filename":"common/src/main/java/org/apache/syncope/common/to/RoleTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -30,8 +30,8 @@\n \r\n @XmlRootElement(name = \"role\")\r\n @XmlType\r\n-@JsonIgnoreProperties({\"displayName\"})\r\n-public class RoleTO extends AbstractAttributableTO {\r\n+@JsonIgnoreProperties({ \"displayName\" })\r\n+public class RoleTO extends AbstractSubjectTO {\r\n \r\n     private static final long serialVersionUID = -7785920258290147542L;\r\n \r"},{"sha":"de259918a4f7db8325b06eac20b1b8ad74eee40e","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -36,7 +36,7 @@\n \r\n @XmlRootElement(name = \"user\")\r\n @XmlType\r\n-public class UserTO extends AbstractAttributableTO {\r\n+public class UserTO extends AbstractSubjectTO {\r\n \r\n     private static final long serialVersionUID = 7791304495192615740L;\r\n \r"},{"sha":"2c052e5a77d189bccd2f3cc08fc661e365c7beea","filename":"common/src/main/java/org/apache/syncope/common/types/IntMappingType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FIntMappingType.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -102,6 +102,7 @@ public static Set<IntMappingType> getAttributeTypes(final AttributableType attri\n                 enumset = EnumSet.allOf(MembershipMappingType.class);\r\n                 break;\r\n \r\n+            case USER:\r\n             default:\r\n                 enumset = EnumSet.allOf(UserMappingType.class);\r\n         }\r"},{"sha":"be5b05b216ec17852ac49d321f147616440bef63","filename":"common/src/main/java/org/apache/syncope/common/types/SubjectType.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSubjectType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSubjectType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSubjectType.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -0,0 +1,34 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.types;\r\n+\r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n+public enum SubjectType {\r\n+\r\n+    USER,\r\n+    ROLE;\r\n+\r\n+    public AttributableType asAttributableType() {\r\n+        return this == USER\r\n+                ? AttributableType.USER\r\n+                : AttributableType.ROLE;\r\n+    }\r\n+}\r"},{"sha":"6b675735920984a5862488565b10195f109dc839","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":19,"deletions":12,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -27,12 +27,14 @@\n import java.util.Set;\r\n import org.apache.commons.lang3.SerializationUtils;\r\n import org.apache.syncope.common.mod.AbstractAttributableMod;\r\n+import org.apache.syncope.common.mod.AbstractSubjectMod;\r\n import org.apache.syncope.common.mod.AttributeMod;\r\n import org.apache.syncope.common.mod.MembershipMod;\r\n import org.apache.syncope.common.mod.ReferenceMod;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.mod.UserMod;\r\n import org.apache.syncope.common.to.AbstractAttributableTO;\r\n+import org.apache.syncope.common.to.AbstractSubjectTO;\r\n import org.apache.syncope.common.to.AttributeTO;\r\n import org.apache.syncope.common.to.MembershipTO;\r\n import org.apache.syncope.common.to.RoleTO;\r\n@@ -178,18 +180,22 @@ private static void diff(\n         populate(updatedAttrs, originalAttrs, result, true);\r\n \r\n         // 5. resources\r\n-        Set<String> updatedRes = new HashSet<String>(updated.getResources());\r\n-        Set<String> originalRes = new HashSet<String>(original.getResources());\r\n+        if (original instanceof AbstractSubjectTO && updated instanceof AbstractSubjectTO\r\n+                && result instanceof AbstractSubjectMod) {\r\n \r\n-        updatedRes.removeAll(originalRes);\r\n-        result.getResourcesToAdd().clear();\r\n-        result.getResourcesToAdd().addAll(updatedRes);\r\n+            Set<String> updatedRes = new HashSet<String>(((AbstractSubjectTO) updated).getResources());\r\n+            Set<String> originalRes = new HashSet<String>(((AbstractSubjectTO) original).getResources());\r\n \r\n-        originalRes.removeAll(updated.getResources());\r\n+            updatedRes.removeAll(originalRes);\r\n+            ((AbstractSubjectMod) result).getResourcesToAdd().clear();\r\n+            ((AbstractSubjectMod) result).getResourcesToAdd().addAll(updatedRes);\r\n \r\n-        if (!incremental) {\r\n-            result.getResourcesToRemove().clear();\r\n-            result.getResourcesToRemove().addAll(originalRes);\r\n+            originalRes.removeAll(((AbstractSubjectTO) updated).getResources());\r\n+\r\n+            if (!incremental) {\r\n+                ((AbstractSubjectMod) result).getResourcesToRemove().clear();\r\n+                ((AbstractSubjectMod) result).getResourcesToRemove().addAll(originalRes);\r\n+            }\r\n         }\r\n     }\r\n \r\n@@ -266,7 +272,6 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n                         membMod.getAttrsToRemove().add(attrMod.getSchema());\r\n                     }\r\n                 }\r\n-                membMod.getResourcesToAdd().addAll(entry.getValue().getResources());\r\n             }\r\n \r\n             if (!membMod.isEmpty()) {\r\n@@ -450,8 +455,10 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n                 mod.getVirAttrsToRemove(), mod.getVirAttrsToUpdate()));\r\n \r\n         // 4. resources\r\n-        result.getResources().removeAll(mod.getResourcesToRemove());\r\n-        result.getResources().addAll(mod.getResourcesToAdd());\r\n+        if (result instanceof AbstractSubjectTO && mod instanceof AbstractSubjectMod) {\r\n+            ((AbstractSubjectTO) result).getResources().removeAll(((AbstractSubjectMod) mod).getResourcesToRemove());\r\n+            ((AbstractSubjectTO) result).getResources().addAll(((AbstractSubjectMod) mod).getResourcesToAdd());\r\n+        }\r\n     }\r\n \r\n     public static UserTO apply(final UserTO userTO, final UserMod userMod) {\r"},{"sha":"9b08c70bb4b902724d09f87c11839b820450e930","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -28,7 +28,7 @@\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n import org.apache.wicket.protocol.http.WebApplication;\n@@ -90,7 +90,7 @@ public boolean isSelfRegistrationAllowed() {\n         return client.isSelfRegistrationAllowed();\n     }\n \n-    public boolean isActivitiEnabledFor(final AttributableType type) {\n+    public boolean isActivitiEnabledFor(final SubjectType type) {\n         SyncopeClient client = clients.isEmpty()\n                 ? clientFactory.createAnonymous()\n                 : clients.values().iterator().next();"},{"sha":"aae7a315582b205b6ffb5a97abee7511ae320979","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusUtils.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -27,6 +27,7 @@\n import java.util.Map;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.console.commons.ConnIdSpecialAttributeName;\n@@ -59,38 +60,38 @@ public StatusUtils(final AbstractAttributableRestClient restClient) {\n         this.restClient = restClient;\n     }\n \n-    public List<ConnObjectWrapper> getConnectorObjects(final AbstractAttributableTO attributable) {\n+    public List<ConnObjectWrapper> getConnectorObjects(final AbstractSubjectTO subject) {\n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n-        objects.addAll(getConnectorObjects(attributable, attributable.getResources()));\n+        objects.addAll(getConnectorObjects(subject, subject.getResources()));\n         return objects;\n     }\n \n     public List<ConnObjectWrapper> getConnectorObjects(\n-            final Collection<AbstractAttributableTO> attributables, final Collection<String> resources) {\n+            final Collection<AbstractSubjectTO> subjects, final Collection<String> resources) {\n \n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n \n-        for (AbstractAttributableTO attributableTO : attributables) {\n-            objects.addAll(getConnectorObjects(attributableTO, resources));\n+        for (AbstractSubjectTO subject : subjects) {\n+            objects.addAll(getConnectorObjects(subject, resources));\n         }\n \n         return objects;\n     }\n \n     private List<ConnObjectWrapper> getConnectorObjects(\n-            final AbstractAttributableTO attributable, final Collection<String> resources) {\n+            final AbstractSubjectTO subject, final Collection<String> resources) {\n \n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n \n         for (String resourceName : resources) {\n             ConnObjectTO objectTO = null;\n             try {\n-                objectTO = restClient.getConnectorObject(resourceName, attributable.getId());\n+                objectTO = restClient.getConnectorObject(resourceName, subject.getId());\n             } catch (Exception e) {\n-                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributable.getId(), resourceName);\n+                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", subject.getId(), resourceName);\n             }\n \n-            objects.add(new ConnObjectWrapper(attributable, resourceName, objectTO));\n+            objects.add(new ConnObjectWrapper(subject, resourceName, objectTO));\n         }\n \n         return objects;"},{"sha":"58954fd7a4c2f1e7749180058f9b9a5fbe1131cc","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -190,17 +191,17 @@ public StatusBeanProvider() {\n         public List<StatusBean> getStatusBeans() {\n             final String fiql = SyncopeClient.getUserSearchConditionBuilder().hasResources(resourceTO.getName()).query();\n \n-            final List<T> attributables = new ArrayList<T>();\n+            final List<T> subjects = new ArrayList<T>();\n             if (UserTO.class.isAssignableFrom(typeRef)) {\n-                attributables.addAll((List<T>) userRestClient.search(fiql, 1, ROWS_PER_PAGE,\n+                subjects.addAll((List<T>) userRestClient.search(fiql, 1, ROWS_PER_PAGE,\n                         new SortParam<String>(\"id\", true)));\n             } else {\n-                attributables.addAll((List<T>) roleRestClient.search(fiql, 1, ROWS_PER_PAGE,\n+                subjects.addAll((List<T>) roleRestClient.search(fiql, 1, ROWS_PER_PAGE,\n                         new SortParam<String>(\"id\", true)));\n             }\n \n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(\n-                    (List<AbstractAttributableTO>) attributables, Collections.<String>singleton(resourceTO.getName()));\n+                    (List<AbstractSubjectTO>) subjects, Collections.<String>singleton(resourceTO.getName()));\n \n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n             final LinkedHashMap<String, StatusBean> initialStatusBeanMap = new LinkedHashMap<String, StatusBean>("},{"sha":"b3bf2e442201899e3fda37bf24894a47b2a864b3","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,7 +26,7 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PropagationStatus;\n@@ -67,7 +67,7 @@ public class ResultStatusModalPage extends BaseModalPage {\n     @SpringBean(name = \"anonymousUser\")\n     private String anonymousUser;\n \n-    private final AbstractAttributableTO attributable;\n+    private final AbstractSubjectTO subject;\n \n     private final UserModalPage.Mode mode;\n \n@@ -84,11 +84,11 @@ public static class Builder implements Serializable {\n \n         private UserModalPage.Mode mode;\n \n-        private AbstractAttributableTO attributable;\n+        private AbstractSubjectTO subject;\n \n-        public Builder(final ModalWindow window, final AbstractAttributableTO attributable) {\n+        public Builder(final ModalWindow window, final AbstractSubjectTO attributable) {\n             this.window = window;\n-            this.attributable = attributable;\n+            this.subject = attributable;\n         }\n \n         public ResultStatusModalPage.Builder mode(final UserModalPage.Mode mode) {\n@@ -103,7 +103,7 @@ public ResultStatusModalPage build() {\n \n     private ResultStatusModalPage(final Builder builder) {\n         super();\n-        this.attributable = builder.attributable;\n+        this.subject = builder.subject;\n         statusUtils = new StatusUtils(this.userRestClient);\n         if (builder.mode == null) {\n             this.mode = UserModalPage.Mode.ADMIN;\n@@ -131,14 +131,14 @@ private ResultStatusModalPage(final Builder builder) {\n \n             List<PropagationStatus> propagations = new ArrayList<PropagationStatus>();\n             propagations.add(syncope);\n-            propagations.addAll(attributable.getPropagationStatusTOs());\n+            propagations.addAll(subject.getPropagationStatusTOs());\n \n             fragment.add(new Label(\"info\",\n-                    ((attributable instanceof UserTO) && ((UserTO) attributable).getUsername() != null)\n-                    ? ((UserTO) attributable).getUsername()\n-                    : ((attributable instanceof RoleTO) && ((RoleTO) attributable).getName() != null)\n-                    ? ((RoleTO) attributable).getName()\n-                    : String.valueOf(attributable.getId())));\n+                    ((subject instanceof UserTO) && ((UserTO) subject).getUsername() != null)\n+                    ? ((UserTO) subject).getUsername()\n+                    : ((subject instanceof RoleTO) && ((RoleTO) subject).getName() != null)\n+                    ? ((RoleTO) subject).getName()\n+                    : String.valueOf(subject.getId())));\n \n             final ListView<PropagationStatus> propRes = new ListView<PropagationStatus>(\"resources\",\n                     propagations) {\n@@ -266,7 +266,7 @@ private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n \n         // sorted in reversed presentation order\n         final List<String> head = new ArrayList<String>();\n-        if (attributable instanceof UserTO) {\n+        if (subject instanceof UserTO) {\n             head.add(ConnIdSpecialAttributeName.PASSWORD);\n             head.add(ConnIdSpecialAttributeName.ENABLE);\n         }\n@@ -285,7 +285,7 @@ private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n         attributes.addAll(beforeAttrMap.keySet());\n         attributes.addAll(afterAttrMap.keySet());\n \n-        if (!(attributable instanceof UserTO)) {\n+        if (!(subject instanceof UserTO)) {\n             attributes.remove(ConnIdSpecialAttributeName.PASSWORD);\n             attributes.remove(ConnIdSpecialAttributeName.ENABLE);\n         }\n@@ -381,7 +381,7 @@ private Fragment getStatusIcon(final String id, final String resourceName, final\n         final Image image;\n         final String alt, title;\n         switch (statusUtils.getStatusBean(\n-                attributable, resourceName, objectTO, this.attributable instanceof RoleTO).getStatus()) {\n+                subject, resourceName, objectTO, this.subject instanceof RoleTO).getStatus()) {\n \n             case ACTIVE:\n                 image = new Image(\"status\", IMG_STATUSES + Status.ACTIVE.toString()"},{"sha":"a48405ef1d14e4a3897c60a1d989e269b6ebcfed","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":47,"deletions":46,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -24,17 +24,17 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.status.StatusBean;\n-import org.apache.syncope.console.commons.status.StatusUtils;\n+import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n import org.apache.syncope.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.console.commons.status.Status;\n-import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n@@ -60,11 +60,11 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class StatusModalPage<T extends AbstractAttributableTO> extends AbstractStatusModalPage {\n+public class StatusModalPage<T extends AbstractSubjectTO> extends AbstractStatusModalPage {\n \n     private static final long serialVersionUID = -9148734710505211261L;\n \n-    private final AbstractAttributableTO attributableTO;\n+    private final AbstractSubjectTO subjectTO;\n \n     private int rowsPerPage = 10;\n \n@@ -99,24 +99,25 @@\n     public StatusModalPage(\n             final PageReference pageRef,\n             final ModalWindow window,\n-            final AbstractAttributableTO attributableTO) {\n+            final AbstractSubjectTO attributableTO) {\n+\n         this(pageRef, window, attributableTO, false);\n     }\n \n     public StatusModalPage(\n             final PageReference pageRef,\n             final ModalWindow window,\n-            final AbstractAttributableTO attributableTO,\n+            final AbstractSubjectTO subjectTO,\n             final boolean statusOnly) {\n \n         super();\n \n         this.pageRef = pageRef;\n         this.window = window;\n         this.statusOnly = statusOnly;\n-        this.attributableTO = attributableTO;\n+        this.subjectTO = subjectTO;\n \n-        statusUtils = new StatusUtils(attributableTO instanceof UserTO ? userRestClient : roleRestClient);\n+        statusUtils = new StatusUtils(subjectTO instanceof UserTO ? userRestClient : roleRestClient);\n \n         columns = new ArrayList<IColumn<StatusBean, String>>();\n         columns.add(new AbstractColumn<StatusBean, String>(\n@@ -190,7 +191,7 @@ public boolean isElementEnabled(final StatusBean element) {\n                 };\n         table.setOutputMarkupId(true);\n \n-        final String pageId = attributableTO instanceof RoleTO ? \"Roles\" : \"Users\";\n+        final String pageId = subjectTO instanceof RoleTO ? \"Roles\" : \"Users\";\n \n         final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n         addOrReplace(pwdMgtFragment);\n@@ -259,7 +260,7 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         userRestClient.reactivate(\n-                                attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n \n@@ -280,7 +281,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         userRestClient.suspend(\n-                                attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n                         if (pageRef.getPage() instanceof BasePage) {\n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -302,12 +303,12 @@ public void onClick(final AjaxRequestTarget target) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n-                        if (attributableTO instanceof UserTO) {\n+                        if (subjectTO instanceof UserTO) {\n                             userRestClient.unlink(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             roleRestClient.unlink(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -327,12 +328,12 @@ public void onClick(final AjaxRequestTarget target) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n-                        if (attributableTO instanceof UserTO) {\n+                        if (subjectTO instanceof UserTO) {\n                             userRestClient.link(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             roleRestClient.link(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -353,12 +354,12 @@ public void onClick(final AjaxRequestTarget target) {\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         final BulkActionResult bulkActionResult;\n-                        if (attributableTO instanceof UserTO) {\n+                        if (subjectTO instanceof UserTO) {\n                             bulkActionResult = userRestClient.deprovision(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             bulkActionResult = roleRestClient.deprovision(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -378,13 +379,13 @@ public void onClick(final AjaxRequestTarget target) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n \n-                    if (attributableTO instanceof UserTO) {\n+                    if (subjectTO instanceof UserTO) {\n                         StatusModalPage.this.passwordManagement(\n                                 target, ResourceAssociationActionType.PROVISION, table.getModelObject());\n                     } else {\n                         try {\n                             final BulkActionResult bulkActionResult = roleRestClient.provision(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n                             loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n@@ -395,7 +396,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         }\n                     }\n                 }\n-            }.feedbackPanelAutomaticReload(!(attributableTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n+            }.feedbackPanelAutomaticReload(!(subjectTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n \n             table.addAction(new ActionLink() {\n \n@@ -405,12 +406,12 @@ public void onClick(final AjaxRequestTarget target) {\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         final BulkActionResult bulkActionResult;\n-                        if (attributableTO instanceof UserTO) {\n+                        if (subjectTO instanceof UserTO) {\n                             bulkActionResult = userRestClient.unassign(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             bulkActionResult = roleRestClient.unassign(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -429,13 +430,13 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n-                    if (attributableTO instanceof UserTO) {\n+                    if (subjectTO instanceof UserTO) {\n                         StatusModalPage.this.passwordManagement(\n                                 target, ResourceAssociationActionType.ASSIGN, table.getModelObject());\n                     } else {\n                         try {\n                             final BulkActionResult bulkActionResult = roleRestClient.assign(\n-                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n                             loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n@@ -446,7 +447,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         }\n                     }\n                 }\n-            }.feedbackPanelAutomaticReload(!(attributableTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n+            }.feedbackPanelAutomaticReload(!(subjectTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n         }\n \n         table.addCancelButton(window);\n@@ -469,32 +470,32 @@ public List<StatusBean> getStatusBeans() {\n                 resources.add(resourceTO.getName());\n             }\n \n-            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(attributableTO);\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(subjectTO);\n \n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n \n             for (ConnObjectWrapper entry : connObjects) {\n                 final StatusBean statusBean = statusUtils.getStatusBean(\n-                        attributableTO,\n+                        subjectTO,\n                         entry.getResourceName(),\n                         entry.getConnObjectTO(),\n-                        attributableTO instanceof RoleTO);\n+                        subjectTO instanceof RoleTO);\n \n                 statusBeans.add(statusBean);\n                 resources.remove(entry.getResourceName());\n             }\n \n             if (statusOnly) {\n-                final StatusBean syncope = new StatusBean(attributableTO, \"Syncope\");\n+                final StatusBean syncope = new StatusBean(subjectTO, \"Syncope\");\n \n-                syncope.setAccountLink(((UserTO) attributableTO).getUsername());\n+                syncope.setAccountLink(((UserTO) subjectTO).getUsername());\n \n                 Status syncopeStatus = Status.UNDEFINED;\n-                if (((UserTO) attributableTO).getStatus() != null) {\n+                if (((UserTO) subjectTO).getStatus() != null) {\n                     try {\n-                        syncopeStatus = Status.valueOf(((UserTO) attributableTO).getStatus().toUpperCase());\n+                        syncopeStatus = Status.valueOf(((UserTO) subjectTO).getStatus().toUpperCase());\n                     } catch (IllegalArgumentException e) {\n-                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) attributableTO).getStatus(), e);\n+                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) subjectTO).getStatus(), e);\n                     }\n                 }\n                 syncope.setStatus(syncopeStatus);\n@@ -503,10 +504,10 @@ public List<StatusBean> getStatusBeans() {\n             } else {\n                 for (String resource : resources) {\n                     final StatusBean statusBean = statusUtils.getStatusBean(\n-                            attributableTO,\n+                            subjectTO,\n                             resource,\n                             null,\n-                            attributableTO instanceof RoleTO);\n+                            subjectTO instanceof RoleTO);\n \n                     statusBean.setLinked(false);\n                     statusBeans.add(statusBean);\n@@ -539,14 +540,14 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                             switch (type) {\n                                 case ASSIGN:\n                                     bulkActionResult = userRestClient.assign(\n-                                            attributableTO.getId(),\n+                                            subjectTO.getId(),\n                                             new ArrayList<StatusBean>(selection),\n                                             changepwd.getModelObject(),\n                                             password.getModelObject());\n                                     break;\n                                 case PROVISION:\n                                     bulkActionResult = userRestClient.provision(\n-                                            attributableTO.getId(),\n+                                            subjectTO.getId(),\n                                             new ArrayList<StatusBean>(selection),\n                                             changepwd.getModelObject(),\n                                             password.getModelObject());\n@@ -590,16 +591,16 @@ private void loadBulkActionResultPage(\n         }\n \n         final List<ConnObjectWrapper> connObjects =\n-                statusUtils.getConnectorObjects(Collections.singletonList(attributableTO), resources);\n+                statusUtils.getConnectorObjects(Collections.singletonList(subjectTO), resources);\n \n         final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size());\n \n         for (ConnObjectWrapper entry : connObjects) {\n             final StatusBean statusBean = statusUtils.getStatusBean(\n-                    attributableTO,\n+                    subjectTO,\n                     entry.getResourceName(),\n                     entry.getConnObjectTO(),\n-                    attributableTO instanceof RoleTO);\n+                    subjectTO instanceof RoleTO);\n \n             statusBeans.add(statusBean);\n         }"},{"sha":"4366573caa2399eafb21d531f640f947397763ae","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.common.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.console.rest.AuthRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n@@ -157,7 +158,8 @@ protected void populate() {\n \n             @Override\n             protected List<String> load() {\n-                return SearchableFields.get(attributableType);\n+                return SearchableFields.get(attributableType == AttributableType.USER\n+                        ? SubjectType.USER : SubjectType.ROLE);\n             }\n         };\n "},{"sha":"86fd7bc19976c1f963e5d219a236775934a68d94","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -61,10 +61,10 @@ public class NotificationTasks extends AbstractTasks {\n     private ModalWindow window;\n \n     private AjaxDataTablePanel<AbstractTaskTO, String> table;\n-    \n+\n     public NotificationTasks(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n-        \n+\n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n@@ -103,8 +103,10 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setInitialWidth(WIN_WIDTH);\n         window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n+        @SuppressWarnings(\"rawtypes\")\n         final Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -239,7 +241,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 return panel;\n             }\n         });\n-        \n+\n         return columns;\n     }\n "},{"sha":"7923c992ba2bf423d06cb548ede29a40a95ac3ff","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -106,8 +106,10 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setInitialWidth(WIN_WIDTH);\n         window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\n                 \"rowsChooser\", new PropertyModel(this, \"paginatorRows\"), prefMan.getPaginatorChoices());\n \n@@ -258,7 +260,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 return panel;\n             }\n         });\n-        \n+\n         return columns;\n     }\n "},{"sha":"8b323b138f8ea0c1b4ce1a062f86e078f81817c5","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -24,7 +24,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n@@ -58,7 +58,7 @@ public class ResourcesPanel extends Panel {\n     @SpringBean\n     private RoleTreeBuilder roleTreeBuilder;\n \n-    private final AbstractAttributableTO attributableTO;\n+    private final AbstractSubjectTO subjectTO;\n \n     private final Set<String> previousResources;\n \n@@ -95,8 +95,8 @@ public ResourcesPanel build() {\n \n     private ResourcesPanel(final Builder builder) {\n         super(builder.id);\n-        attributableTO = (AbstractAttributableTO) builder.to;\n-        previousResources = new HashSet<String>(attributableTO.getResources());\n+        subjectTO = (AbstractSubjectTO) builder.to;\n+        previousResources = new HashSet<String>(subjectTO.getResources());\n         allResources = new ArrayList<String>();\n         for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n             allResources.add(resourceTO.getName());\n@@ -105,13 +105,13 @@ private ResourcesPanel(final Builder builder) {\n \n         AjaxPalettePanel<String> resourcesPalette = null;\n \n-        if (attributableTO instanceof UserTO) {\n+        if (subjectTO instanceof UserTO) {\n             resourcesPalette = new AjaxRecordingPalettePanel<String>(\"resourcesPalette\",\n-                    new PropertyModel<List<String>>(attributableTO, \"resources\"),\n+                    new PropertyModel<List<String>>(subjectTO, \"resources\"),\n                     new ListModel<String>(allResources), builder.statusPanel);\n-        } else if (attributableTO instanceof RoleTO) {\n+        } else if (subjectTO instanceof RoleTO) {\n             resourcesPalette = new AjaxPalettePanel<String>(\"resourcesPalette\",\n-                    new PropertyModel<List<String>>(attributableTO, \"resources\"), new ListModel<String>(allResources));\n+                    new PropertyModel<List<String>>(subjectTO, \"resources\"), new ListModel<String>(allResources));\n         }\n         add(resourcesPalette);\n     }\n@@ -146,8 +146,8 @@ protected Recorder<T> newRecorderComponent() {\n \n                         @Override\n                         protected void onUpdate(final AjaxRequestTarget target) {\n-                            if (attributableTO instanceof UserTO) {\n-                                UserTO userTO = (UserTO) attributableTO;\n+                            if (subjectTO instanceof UserTO) {\n+                                UserTO userTO = (UserTO) subjectTO;\n \n                                 Set<String> resourcesToRemove = new HashSet<String>(previousResources);\n                                 resourcesToRemove.removeAll(userTO.getResources());"},{"sha":"d0c5bfdf7f5b25d45b3415a32a5b33d15791214b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -63,10 +63,10 @@ public class SchedTasks extends AbstractTasks {\n     private ModalWindow window;\n \n     private AjaxDataTablePanel<AbstractTaskTO, String> table;\n-    \n+\n     public SchedTasks(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n-        \n+\n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n@@ -92,8 +92,10 @@ public SchedTasks(final String id, final PageReference pageRef) {\n \n         container.add(table);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -146,7 +148,7 @@ public Page createPage() {\n \n         add(createLink);\n     }\n-    \n+\n     private List<IColumn<AbstractTaskTO, String>> getColumns() {\n         final List<IColumn<AbstractTaskTO, String>> columns = new ArrayList<IColumn<AbstractTaskTO, String>>();\n "},{"sha":"5fab4943a5c324d4adc86b9d343db4ce44efcc05","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,6 +26,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -93,7 +94,7 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n \n     public <T extends AbstractAttributableTO> StatusPanel(\n             final String id,\n-            final AbstractAttributableTO attributable,\n+            final AbstractSubjectTO subject,\n             final List<StatusBean> selectedResources,\n             final PageReference pageref) {\n \n@@ -106,29 +107,29 @@ public <T extends AbstractAttributableTO> StatusPanel(\n         connObjectWin.setCookieName(\"connobject-modal\");\n         add(connObjectWin);\n \n-        statusUtils = new StatusUtils(attributable instanceof RoleTO ? roleRestClient : userRestClient);\n+        statusUtils = new StatusUtils(subject instanceof RoleTO ? roleRestClient : userRestClient);\n \n-        connObjects = statusUtils.getConnectorObjects(attributable);\n+        connObjects = statusUtils.getConnectorObjects(subject);\n \n         final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n         initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(connObjects.size() + 1);\n \n-        final StatusBean syncope = new StatusBean(attributable, \"syncope\");\n+        final StatusBean syncope = new StatusBean(subject, \"syncope\");\n \n-        if (attributable instanceof UserTO) {\n-            syncope.setAccountLink(((UserTO) attributable).getUsername());\n+        if (subject instanceof UserTO) {\n+            syncope.setAccountLink(((UserTO) subject).getUsername());\n \n             Status syncopeStatus = Status.UNDEFINED;\n-            if (((UserTO) attributable).getStatus() != null) {\n+            if (((UserTO) subject).getStatus() != null) {\n                 try {\n-                    syncopeStatus = Status.valueOf(((UserTO) attributable).getStatus().toUpperCase());\n+                    syncopeStatus = Status.valueOf(((UserTO) subject).getStatus().toUpperCase());\n                 } catch (IllegalArgumentException e) {\n-                    LOG.warn(\"Unexpected status found: {}\", ((UserTO) attributable).getStatus(), e);\n+                    LOG.warn(\"Unexpected status found: {}\", ((UserTO) subject).getStatus(), e);\n                 }\n             }\n             syncope.setStatus(syncopeStatus);\n-        } else if (attributable instanceof RoleTO) {\n-            syncope.setAccountLink(((RoleTO) attributable).getDisplayName());\n+        } else if (subject instanceof RoleTO) {\n+            syncope.setAccountLink(((RoleTO) subject).getDisplayName());\n             syncope.setStatus(Status.ACTIVE);\n         }\n \n@@ -140,7 +141,7 @@ public <T extends AbstractAttributableTO> StatusPanel(\n                     entry.getAttributable(),\n                     entry.getResourceName(),\n                     entry.getConnObjectTO(),\n-                    attributable instanceof RoleTO);\n+                    subject instanceof RoleTO);\n \n             initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n             statusBeans.add(statusBean);\n@@ -160,7 +161,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(checkGroup);\n \n         CheckGroupSelector groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n-        if (attributable instanceof RoleTO) {\n+        if (subject instanceof RoleTO) {\n             groupSelector.setVisible(false);\n         }\n         add(groupSelector);\n@@ -174,7 +175,7 @@ protected void populateItem(final ListItem<StatusBean> item) {\n                 item.add(statusUtils.getStatusImage(\"icon\", item.getModelObject().getStatus()));\n \n                 final Check<StatusBean> check = new Check<StatusBean>(\"check\", item.getModel(), checkGroup);\n-                if (attributable instanceof RoleTO) {\n+                if (subject instanceof RoleTO) {\n                     check.setVisible(false);\n                 }\n                 item.add(check);"},{"sha":"cfc889a8e128ad15d96c8646ee669e00c7e86266","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -94,8 +94,10 @@ public SyncTasks(final String id, final PageReference pageRef) {\n \n         container.add(table);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n "},{"sha":"304ceddfc9d077ea05db6ccaa0762b26746b2f1f","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -25,10 +25,10 @@\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.wrap.SubjectId;\n import org.springframework.stereotype.Component;\n \n@@ -95,7 +95,7 @@ public BulkActionResult bulkAssociationAction(\n             final ResourceDeassociationActionType type, final List<SubjectId> subjtectIds) {\n \n         return getService(ResourceService.class).bulkDeassociation(resourceName,\n-                UserTO.class.isAssignableFrom(typeRef) ? AttributableType.USER : AttributableType.ROLE,\n+                UserTO.class.isAssignableFrom(typeRef) ? SubjectType.USER : SubjectType.ROLE,\n                 type, subjtectIds);\n     }\n }"},{"sha":"4eef5d1a8a07df967a08ea885b449c3f28b823ec","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -30,9 +30,9 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n@@ -73,7 +73,7 @@ public List<RoleTO> search(final String fiql, final int page, final int size, fi\n \n     @Override\n     public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n-        return getService(ResourceService.class).getConnectorObject(resourceName, AttributableType.ROLE, id);\n+        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.ROLE, id);\n     }\n \n     public RoleTO create(final RoleTO roleTO) {"},{"sha":"28970093784af05b7f90c7944c11cf914dd25ce3","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -29,12 +29,12 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -94,7 +94,7 @@ public List<UserTO> search(final String fiql, final int page, final int size, fi\n \n     @Override\n     public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n-        return getService(ResourceService.class).getConnectorObject(resourceName, AttributableType.USER, id);\n+        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.USER, id);\n     }\n \n     public void suspend(final long userId, final List<StatusBean> statuses) {"},{"sha":"c99d4e9146e449319b264942ecc74263ed0a6b36","filename":"console/src/main/java/org/apache/syncope/console/rest/WorkflowRestClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -24,9 +24,9 @@\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.common.services.WorkflowService;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.console.SyncopeSession;\n import org.springframework.stereotype.Component;\n \n@@ -40,15 +40,15 @@ private WorkflowService getService(final MediaType mediaType) {\n     }\n \n     public InputStream getDefinition(final MediaType mediaType) {\n-        Response response = getService(mediaType).exportDefinition(AttributableType.USER);\n+        Response response = getService(mediaType).exportDefinition(SubjectType.USER);\n \n         return (InputStream) response.getEntity();\n     }\n \n     public byte[] getDiagram() {\n         WorkflowService service = getService(WorkflowService.class);\n         WebClient.client(service).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n-        Response response = service.exportDiagram(AttributableType.USER);\n+        Response response = service.exportDiagram(SubjectType.USER);\n \n         byte[] diagram;\n         try {\n@@ -63,7 +63,7 @@ public byte[] getDiagram() {\n     public boolean isActivitiEnabledForUsers() {\n         Boolean result = null;\n         try {\n-            result = SyncopeSession.get().isActivitiEnabledFor(AttributableType.USER);\n+            result = SyncopeSession.get().isActivitiEnabledFor(SubjectType.USER);\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While seeking if Activiti is enabled for users\", e);\n         }\n@@ -74,6 +74,6 @@ public boolean isActivitiEnabledForUsers() {\n     }\n \n     public void updateDefinition(final MediaType mediaType, final String definition) {\n-        getService(mediaType).importDefinition(AttributableType.USER, definition);\n+        getService(mediaType).importDefinition(SubjectType.USER, definition);\n     }\n }"},{"sha":"d4b43b59a682cf32ebd5117ba4ffc4d838ac8c20","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":62,"deletions":57,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -29,6 +29,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MembershipTO;\n@@ -44,6 +45,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n@@ -151,10 +153,10 @@ public ObjectClass fromAttributable(final AbstractAttributable attributable) {\n      * @return UserTO for the user to be created\n      */\n     @Transactional(readOnly = true)\n-    public <T extends AbstractAttributableTO> T getAttributableTO(final ConnectorObject obj, final SyncTask syncTask,\n+    public <T extends AbstractSubjectTO> T getSubjectTO(final ConnectorObject obj, final SyncTask syncTask,\n             final AttributableUtil attrUtil) {\n \n-        T subjectTO = getAttributableTOFromConnObject(obj, syncTask, attrUtil);\n+        T subjectTO = getSubjectTOFromConnObject(obj, syncTask, attrUtil);\n \n         // (for users) if password was not set above, generate\n         if (subjectTO instanceof UserTO && StringUtils.isBlank(((UserTO) subjectTO).getPassword())) {\n@@ -218,7 +220,7 @@ public <T extends AbstractAttributableMod> T getAttributableMod(final Long id, f\n             final AbstractAttributableTO original, final SyncTask syncTask, final AttributableUtil attrUtil)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        final AbstractAttributableTO updated = getAttributableTOFromConnObject(obj, syncTask, attrUtil);\n+        final AbstractAttributableTO updated = getSubjectTOFromConnObject(obj, syncTask, attrUtil);\n         updated.setId(id);\n \n         if (AttributableType.USER == attrUtil.getType()) {\n@@ -248,10 +250,10 @@ public <T extends AbstractAttributableMod> T getAttributableMod(final Long id, f\n         return null;\n     }\n \n-    private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(final ConnectorObject obj,\n+    private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final ConnectorObject obj,\n             final SyncTask syncTask, final AttributableUtil attrUtil) {\n \n-        final T attributableTO = attrUtil.newAttributableTO();\n+        final T subjectTO = attrUtil.newSubjectTO();\n \n         // 1. fill with data from connector object\n         for (AbstractMappingItem item : attrUtil.getMappingItems(\n@@ -266,33 +268,33 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                     break;\n \n                 case Password:\n-                    if (attributableTO instanceof UserTO && attribute != null && attribute.getValue() != null\n+                    if (subjectTO instanceof UserTO && attribute != null && attribute.getValue() != null\n                             && !attribute.getValue().isEmpty()) {\n \n-                        ((UserTO) attributableTO).setPassword(getPassword(attribute.getValue().get(0)));\n+                        ((UserTO) subjectTO).setPassword(getPassword(attribute.getValue().get(0)));\n                     }\n                     break;\n \n                 case Username:\n-                    if (attributableTO instanceof UserTO) {\n-                        ((UserTO) attributableTO).setUsername(attribute == null || attribute.getValue().isEmpty()\n+                    if (subjectTO instanceof UserTO) {\n+                        ((UserTO) subjectTO).setUsername(attribute == null || attribute.getValue().isEmpty()\n                                 || attribute.getValue().get(0) == null\n                                 ? null\n                                 : attribute.getValue().get(0).toString());\n                     }\n                     break;\n \n                 case RoleName:\n-                    if (attributableTO instanceof RoleTO) {\n-                        ((RoleTO) attributableTO).setName(attribute == null || attribute.getValue().isEmpty()\n+                    if (subjectTO instanceof RoleTO) {\n+                        ((RoleTO) subjectTO).setName(attribute == null || attribute.getValue().isEmpty()\n                                 || attribute.getValue().get(0) == null\n                                 ? null\n                                 : attribute.getValue().get(0).toString());\n                     }\n                     break;\n \n                 case RoleOwnerSchema:\n-                    if (attributableTO instanceof RoleTO && attribute != null) {\n+                    if (subjectTO instanceof RoleTO && attribute != null) {\n                         // using a special attribute (with schema \"\", that will be ignored) for carrying the\n                         // RoleOwnerSchema value\n                         attributeTO = new AttributeTO();\n@@ -303,7 +305,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             attributeTO.getValues().add(attribute.getValue().get(0).toString());\n                         }\n \n-                        ((RoleTO) attributableTO).getAttrs().add(attributeTO);\n+                        ((RoleTO) subjectTO).getAttrs().add(attributeTO);\n                     }\n                     break;\n \n@@ -337,14 +339,14 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                         }\n                     }\n \n-                    attributableTO.getAttrs().add(attributeTO);\n+                    subjectTO.getAttrs().add(attributeTO);\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n-                    attributableTO.getDerAttrs().add(attributeTO);\n+                    subjectTO.getDerAttrs().add(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n@@ -361,103 +363,103 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                         }\n                     }\n \n-                    attributableTO.getVirAttrs().add(attributeTO);\n+                    subjectTO.getVirAttrs().add(attributeTO);\n                     break;\n \n                 default:\n             }\n         }\n \n         // 2. add data from defined template (if any)\n-        AbstractAttributableTO template = AttributableType.USER == attrUtil.getType()\n+        AbstractSubjectTO template = AttributableType.USER == attrUtil.getType()\n                 ? syncTask.getUserTemplate() : syncTask.getRoleTemplate();\n \n         if (template != null) {\n             if (template instanceof UserTO) {\n                 if (StringUtils.isNotBlank(((UserTO) template).getUsername())) {\n-                    String evaluated = JexlUtil.evaluate(((UserTO) template).getUsername(), attributableTO);\n+                    String evaluated = JexlUtil.evaluate(((UserTO) template).getUsername(), subjectTO);\n                     if (StringUtils.isNotBlank(evaluated)) {\n-                        ((UserTO) attributableTO).setUsername(evaluated);\n+                        ((UserTO) subjectTO).setUsername(evaluated);\n                     }\n                 }\n \n                 if (StringUtils.isNotBlank(((UserTO) template).getPassword())) {\n-                    String evaluated = JexlUtil.evaluate(((UserTO) template).getPassword(), attributableTO);\n+                    String evaluated = JexlUtil.evaluate(((UserTO) template).getPassword(), subjectTO);\n                     if (StringUtils.isNotBlank(evaluated)) {\n-                        ((UserTO) attributableTO).setPassword(evaluated);\n+                        ((UserTO) subjectTO).setPassword(evaluated);\n                     }\n                 }\n \n-                Map<Long, MembershipTO> currentMembs = ((UserTO) attributableTO).getMembershipMap();\n+                Map<Long, MembershipTO> currentMembs = ((UserTO) subjectTO).getMembershipMap();\n                 for (MembershipTO membTO : ((UserTO) template).getMemberships()) {\n                     MembershipTO membTBU;\n                     if (currentMembs.containsKey(membTO.getRoleId())) {\n                         membTBU = currentMembs.get(membTO.getRoleId());\n                     } else {\n                         membTBU = new MembershipTO();\n                         membTBU.setRoleId(membTO.getRoleId());\n-                        ((UserTO) attributableTO).getMemberships().add(membTBU);\n+                        ((UserTO) subjectTO).getMemberships().add(membTBU);\n                     }\n                     fillFromTemplate(membTBU, membTO);\n                 }\n             }\n             if (template instanceof RoleTO) {\n                 if (StringUtils.isNotBlank(((RoleTO) template).getName())) {\n-                    String evaluated = JexlUtil.evaluate(((RoleTO) template).getName(), attributableTO);\n+                    String evaluated = JexlUtil.evaluate(((RoleTO) template).getName(), subjectTO);\n                     if (StringUtils.isNotBlank(evaluated)) {\n-                        ((RoleTO) attributableTO).setName(evaluated);\n+                        ((RoleTO) subjectTO).setName(evaluated);\n                     }\n                 }\n \n                 if (((RoleTO) template).getParent() != 0) {\n                     final SyncopeRole parentRole = roleDAO.find(((RoleTO) template).getParent());\n                     if (parentRole != null) {\n-                        ((RoleTO) attributableTO).setParent(parentRole.getId());\n+                        ((RoleTO) subjectTO).setParent(parentRole.getId());\n                     }\n                 }\n \n                 if (((RoleTO) template).getUserOwner() != null) {\n                     final SyncopeUser userOwner = userDAO.find(((RoleTO) template).getUserOwner());\n                     if (userOwner != null) {\n-                        ((RoleTO) attributableTO).setUserOwner(userOwner.getId());\n+                        ((RoleTO) subjectTO).setUserOwner(userOwner.getId());\n                     }\n                 }\n                 if (((RoleTO) template).getRoleOwner() != null) {\n                     final SyncopeRole roleOwner = roleDAO.find(((RoleTO) template).getRoleOwner());\n                     if (roleOwner != null) {\n-                        ((RoleTO) attributableTO).setRoleOwner(roleOwner.getId());\n+                        ((RoleTO) subjectTO).setRoleOwner(roleOwner.getId());\n                     }\n                 }\n \n-                ((RoleTO) attributableTO).getEntitlements().addAll(((RoleTO) template).getEntitlements());\n-\n-                ((RoleTO) attributableTO).getRAttrTemplates().addAll(((RoleTO) template).getRAttrTemplates());\n-                ((RoleTO) attributableTO).getRDerAttrTemplates().addAll(((RoleTO) template).getRDerAttrTemplates());\n-                ((RoleTO) attributableTO).getRVirAttrTemplates().addAll(((RoleTO) template).getRVirAttrTemplates());\n-                ((RoleTO) attributableTO).getMAttrTemplates().addAll(((RoleTO) template).getMAttrTemplates());\n-                ((RoleTO) attributableTO).getMDerAttrTemplates().addAll(((RoleTO) template).getMDerAttrTemplates());\n-                ((RoleTO) attributableTO).getMVirAttrTemplates().addAll(((RoleTO) template).getMVirAttrTemplates());\n-\n-                ((RoleTO) attributableTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n-                ((RoleTO) attributableTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n-\n-                ((RoleTO) attributableTO).setInheritOwner(((RoleTO) template).isInheritOwner());\n-                ((RoleTO) attributableTO).setInheritTemplates(((RoleTO) template).isInheritTemplates());\n-                ((RoleTO) attributableTO).setInheritAttrs(((RoleTO) template).isInheritAttrs());\n-                ((RoleTO) attributableTO).setInheritDerAttrs(((RoleTO) template).isInheritDerAttrs());\n-                ((RoleTO) attributableTO).setInheritVirAttrs(((RoleTO) template).isInheritVirAttrs());\n-                ((RoleTO) attributableTO).setInheritPasswordPolicy(((RoleTO) template).isInheritPasswordPolicy());\n-                ((RoleTO) attributableTO).setInheritAccountPolicy(((RoleTO) template).isInheritAccountPolicy());\n+                ((RoleTO) subjectTO).getEntitlements().addAll(((RoleTO) template).getEntitlements());\n+\n+                ((RoleTO) subjectTO).getRAttrTemplates().addAll(((RoleTO) template).getRAttrTemplates());\n+                ((RoleTO) subjectTO).getRDerAttrTemplates().addAll(((RoleTO) template).getRDerAttrTemplates());\n+                ((RoleTO) subjectTO).getRVirAttrTemplates().addAll(((RoleTO) template).getRVirAttrTemplates());\n+                ((RoleTO) subjectTO).getMAttrTemplates().addAll(((RoleTO) template).getMAttrTemplates());\n+                ((RoleTO) subjectTO).getMDerAttrTemplates().addAll(((RoleTO) template).getMDerAttrTemplates());\n+                ((RoleTO) subjectTO).getMVirAttrTemplates().addAll(((RoleTO) template).getMVirAttrTemplates());\n+\n+                ((RoleTO) subjectTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n+                ((RoleTO) subjectTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n+\n+                ((RoleTO) subjectTO).setInheritOwner(((RoleTO) template).isInheritOwner());\n+                ((RoleTO) subjectTO).setInheritTemplates(((RoleTO) template).isInheritTemplates());\n+                ((RoleTO) subjectTO).setInheritAttrs(((RoleTO) template).isInheritAttrs());\n+                ((RoleTO) subjectTO).setInheritDerAttrs(((RoleTO) template).isInheritDerAttrs());\n+                ((RoleTO) subjectTO).setInheritVirAttrs(((RoleTO) template).isInheritVirAttrs());\n+                ((RoleTO) subjectTO).setInheritPasswordPolicy(((RoleTO) template).isInheritPasswordPolicy());\n+                ((RoleTO) subjectTO).setInheritAccountPolicy(((RoleTO) template).isInheritAccountPolicy());\n             }\n \n-            fillFromTemplate(attributableTO, template);\n+            fillFromTemplate(subjectTO, template);\n \n             for (String resource : template.getResources()) {\n-                attributableTO.getResources().add(resource);\n+                subjectTO.getResources().add(resource);\n             }\n         }\n \n-        return attributableTO;\n+        return subjectTO;\n     }\n \n     /**\n@@ -580,8 +582,9 @@ private void retrieveVirAttrValue(\n \n             // SYNCOPE-458 if virattr owner is a Membership, owner must become user involved in membership because \n             // membership mapping is contained in user mapping\n-            final AbstractAttributable realOwner = owner instanceof Membership ? ((Membership) owner).getSyncopeUser()\n-                    : owner;\n+            final AbstractSubject realOwner = owner instanceof Membership\n+                    ? ((Membership) owner).getSyncopeUser()\n+                    : (AbstractSubject) owner;\n \n             final Set<ExternalResource> targetResources = owner instanceof Membership ? getTargetResource(virAttr, type,\n                     attrUtil, realOwner.getResources()) : getTargetResource(virAttr, type, attrUtil);\n@@ -662,12 +665,14 @@ private Set<ExternalResource> getTargetResource(\n \n         final Set<ExternalResource> resources = new HashSet<ExternalResource>();\n \n-        for (ExternalResource res : attr.getOwner().getResources()) {\n-            if (!MappingUtil.getMatchingMappingItems(\n-                    attrUtil.getMappingItems(res, MappingPurpose.BOTH),\n-                    attr.getSchema().getName(), type).isEmpty()) {\n+        if (attr.getOwner() instanceof AbstractSubject) {\n+            for (ExternalResource res : ((AbstractSubject) attr.getOwner()).getResources()) {\n+                if (!MappingUtil.getMatchingMappingItems(\n+                        attrUtil.getMappingItems(res, MappingPurpose.BOTH),\n+                        attr.getSchema().getName(), type).isEmpty()) {\n \n-                resources.add(res);\n+                    resources.add(res);\n+                }\n             }\n         }\n "},{"sha":"459b71ac8e56f7b7c1e12d0229ab0f0048c33283","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -19,11 +19,9 @@\n package org.apache.syncope.core.persistence.beans;\n \n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n \n public abstract class AbstractAttributable extends AbstractSysInfo {\n \n@@ -130,36 +128,4 @@ protected Map<AbstractVirSchema, AbstractVirAttr> getVirAttrMap() {\n     public abstract List<? extends AbstractVirAttr> getVirAttrs();\n \n     public abstract void setVirAttrs(List<? extends AbstractVirAttr> virtualAttributes);\n-\n-    protected abstract Set<ExternalResource> internalGetResources();\n-\n-    public boolean addResource(final ExternalResource resource) {\n-        return internalGetResources().add(resource);\n-    }\n-\n-    public boolean removeResource(final ExternalResource resource) {\n-        return internalGetResources().remove(resource);\n-    }\n-\n-    public Set<ExternalResource> getResources() {\n-        return internalGetResources();\n-    }\n-\n-    public Set<String> getResourceNames() {\n-        Set<ExternalResource> ownResources = getResources();\n-\n-        Set<String> result = new HashSet<String>(ownResources.size());\n-        for (ExternalResource resource : ownResources) {\n-            result.add(resource.getName());\n-        }\n-\n-        return result;\n-    }\n-\n-    public void setResources(final Set<ExternalResource> resources) {\n-        internalGetResources().clear();\n-        if (resources != null) {\n-            internalGetResources().addAll(resources);\n-        }\n-    }\n }"},{"sha":"a4225cc2c29375ab3d2ddb88eeec8377ed78af58","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSubject.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSubject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSubject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSubject.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public abstract class AbstractSubject extends AbstractAttributable {\n+\n+    private static final long serialVersionUID = -6876467491398928855L;\n+\n+    protected abstract Set<ExternalResource> internalGetResources();\n+\n+    public boolean addResource(final ExternalResource resource) {\n+        return internalGetResources().add(resource);\n+    }\n+\n+    public boolean removeResource(final ExternalResource resource) {\n+        return internalGetResources().remove(resource);\n+    }\n+\n+    public Set<ExternalResource> getResources() {\n+        return internalGetResources();\n+    }\n+\n+    public Set<String> getResourceNames() {\n+        Set<ExternalResource> ownResources = getResources();\n+\n+        Set<String> result = new HashSet<String>(ownResources.size());\n+        for (ExternalResource resource : ownResources) {\n+            result.add(resource.getName());\n+        }\n+\n+        return result;\n+    }\n+\n+    public void setResources(final Set<ExternalResource> resources) {\n+        internalGetResources().clear();\n+        if (resources != null) {\n+            internalGetResources().addAll(resources);\n+        }\n+    }\n+\n+}"},{"sha":"646172ff3e1527b1c6896e218000c8e8e9071811","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.core.persistence.beans.membership;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n@@ -34,7 +32,6 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n-import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n \n@@ -79,11 +76,6 @@ public Long getId() {\n         return id;\n     }\n \n-    @Override\n-    protected Set<ExternalResource> internalGetResources() {\n-        return Collections.emptySet();\n-    }\n-\n     public SyncopeRole getSyncopeRole() {\n         return syncopeRole;\n     }\n@@ -230,31 +222,6 @@ public void setVirAttrs(final List<? extends AbstractVirAttr> virAttrs) {\n         }\n     }\n \n-    @Override\n-    public boolean addResource(final ExternalResource resource) {\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean removeResource(final ExternalResource resource) {\n-        return false;\n-    }\n-\n-    @Override\n-    public Set<ExternalResource> getResources() {\n-        return Collections.emptySet();\n-    }\n-\n-    @Override\n-    public Set<String> getResourceNames() {\n-        return Collections.emptySet();\n-    }\n-\n-    @Override\n-    public void setResources(final Set<ExternalResource> resources) {\n-        // Memberships cannot be directly associated to resources.\n-    }\n-\n     @Override\n     public String toString() {\n         return \"Membership[\" + \"id=\" + id + \", \" + syncopeUser + \", \" + syncopeRole + ']';"},{"sha":"19297b56735f4018ab7d352b9192f7bac529988a","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -44,11 +44,11 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n@@ -66,7 +66,7 @@\n         @UniqueConstraint(columnNames = { \"name\", \"parent_id\" }))\n @Cacheable\n @SyncopeRoleCheck\n-public class SyncopeRole extends AbstractAttributable {\n+public class SyncopeRole extends AbstractSubject {\n \n     private static final long serialVersionUID = -5281258853142421875L;\n "},{"sha":"e238813987cfce2b1d9d8ebc6c4a4fa04ec9e289","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -49,8 +49,8 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n@@ -65,7 +65,7 @@\n @Entity\n @Cacheable\n @SyncopeUserCheck\n-public class SyncopeUser extends AbstractAttributable {\n+public class SyncopeUser extends AbstractSubject {\n \n     private static final long serialVersionUID = -3905046855521446823L;\n "},{"sha":"5bd2053a5137e2b7f40bc0b1175aaaedf43fd9dd","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.notification.NotificationManager;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n@@ -255,8 +255,8 @@ protected void createOrUpdate(\n                 connObjectUtil);\n     }\n \n-    protected AbstractAttributable getSubject(final PropagationTask task) {\n-        AbstractAttributable subject = null;\n+    protected AbstractSubject getSubject(final PropagationTask task) {\n+        AbstractSubject subject = null;\n \n         if (task.getSubjectId() != null) {\n             switch (task.getSubjectType()) {\n@@ -305,7 +305,7 @@ protected void delete(final PropagationTask task, final ConnectorObject beforeOb\n              * update, this user / role used to have the current resource assigned by more than one mean (for example,\n              * two different memberships with the same resource).\n              */\n-            AbstractAttributable subject = getSubject(task);\n+            AbstractSubject subject = getSubject(task);\n             if (subject == null || !subject.getResourceNames().contains(task.getResource().getName())) {\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getName());\n "},{"sha":"a7390be6e8e070179781ab2c07fd32f5a72ad841","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DBPasswordPropagationActions.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -38,7 +38,7 @@\n \n /**\n  * Propagate a non-cleartext password out to a resource, if the PropagationManager has not already\n- * added a password. \n+ * added a password.\n  */\n public class DBPasswordPropagationActions extends DefaultPropagationActions {\n \n@@ -49,7 +49,7 @@ public class DBPasswordPropagationActions extends DefaultPropagationActions {\n     @Override\n     public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n         super.before(task, beforeObj);\n-        \n+\n         if (AttributableType.USER == task.getSubjectType()) {\n             SyncopeUser user = userDAO.find(task.getSubjectId());\n             if (user != null && user.getPassword() != null) {\n@@ -65,16 +65,15 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n                     Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n                     attributes.add(passwordAttribute);\n                     attributes.remove(missing);\n-                    \n-                    Attribute hashedPasswordAttribute = \n-                        AttributeBuilder.build(\n+\n+                    Attribute hashedPasswordAttribute = AttributeBuilder.build(\n                             AttributeUtil.createSpecialName(\"HASHED_PASSWORD\"), Boolean.TRUE);\n                     attributes.add(hashedPasswordAttribute);\n-                    \n+\n                     task.setAttributes(attributes);\n                 }\n             }\n         }\n     }\n-    \n+\n }"},{"sha":"7f337c62ecdddb2a44e3836461e4689eee969d2d","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n@@ -333,25 +334,25 @@ public List<PropagationTask> getRoleUpdateTaskIds(final WorkflowResult<Long> wfR\n                 Collections.<MembershipMod>emptySet());\n     }\n \n-    protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attributable,\n+    protected List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n             final String password, final boolean changePwd, final Boolean enable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n             final PropagationByResource propByRes, final Collection<String> noPropResourceNames,\n             final Set<MembershipMod> membershipsToAdd)\n             throws NotFoundException {\n \n-        AbstractAttributableDataBinder binder = attributable instanceof SyncopeUser\n+        AbstractAttributableDataBinder binder = subject instanceof SyncopeUser\n                 ? userDataBinder : roleDataBinder;\n \n-        PropagationByResource localPropByRes = binder.fillVirtual(attributable, vAttrsToBeRemoved == null\n+        PropagationByResource localPropByRes = binder.fillVirtual(subject, vAttrsToBeRemoved == null\n                 ? Collections.<String>emptySet()\n                 : vAttrsToBeRemoved, vAttrsToBeUpdated == null\n                 ? Collections.<AttributeMod>emptySet()\n-                : vAttrsToBeUpdated, AttributableUtil.getInstance(attributable));\n+                : vAttrsToBeUpdated, AttributableUtil.getInstance(subject));\n \n         // SYNCOPE-458 fill membership virtual attributes\n-        if (attributable instanceof SyncopeUser) {\n-            final SyncopeUser user = (SyncopeUser) attributable;\n+        if (subject instanceof SyncopeUser) {\n+            final SyncopeUser user = (SyncopeUser) subject;\n             for (Membership membership : user.getMemberships()) {\n                 if (membership.getVirAttrs() != null && !membership.getVirAttrs().isEmpty()) {\n                     final MembershipMod membershipMod = findMembershipMod(membership, membershipsToAdd);\n@@ -368,7 +369,7 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n         }\n \n         if (propByRes == null || propByRes.isEmpty()) {\n-            localPropByRes.addAll(ResourceOperation.UPDATE, attributable.getResourceNames());\n+            localPropByRes.addAll(ResourceOperation.UPDATE, subject.getResourceNames());\n         } else {\n             localPropByRes.merge(propByRes);\n         }\n@@ -399,7 +400,7 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n             membVAttrsToBeRemoved.addAll(membershipMod.getVirAttrsToRemove());\n         }\n \n-        return createTasks(attributable, password, changePwd,\n+        return createTasks(subject, password, changePwd,\n                 vAttrsToBeRemoved, vAttrsToBeUpdatedMap, membVAttrsToBeRemoved, membVAttrsToBeUpdatedMap, enable, false,\n                 localPropByRes);\n     }"},{"sha":"14c1dd921e0aa017fb94fa5ee1e4313e911137e5","filename":"core/src/main/java/org/apache/syncope/core/report/RoleReportlet.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.report.RoleReportletConf;\n import org.apache.syncope.common.report.RoleReportletConf.Feature;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -84,17 +85,16 @@ private int count() {\n                         AttributableUtil.getInstance(AttributableType.ROLE));\n     }\n \n-    private void doExtractResources(final ContentHandler handler, final AbstractAttributableTO attributableTO)\n+    private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)\n             throws SAXException {\n \n-        if (attributableTO.getResources().isEmpty()) {\n-            LOG.debug(\"No resources found for {}[{}]\", attributableTO.getClass().getSimpleName(), attributableTO\n-                    .getId());\n+        if (subjectTO.getResources().isEmpty()) {\n+            LOG.debug(\"No resources found for {}[{}]\", subjectTO.getClass().getSimpleName(), subjectTO.getId());\n         } else {\n             AttributesImpl atts = new AttributesImpl();\n             handler.startElement(\"\", \"\", \"resources\", null);\n \n-            for (String resourceName : attributableTO.getResources()) {\n+            for (String resourceName : subjectTO.getResources()) {\n                 atts.clear();\n \n                 atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, resourceName);"},{"sha":"aeaa081eedff5a677bd5c851a5ec2c2365ac5036","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -23,10 +23,10 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-\n import org.apache.syncope.common.report.UserReportletConf;\n import org.apache.syncope.common.report.UserReportletConf.Feature;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -38,8 +38,8 @@\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n-import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.rest.data.SearchCondConverter;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.DataFormat;\n import org.apache.syncope.core.util.EntitlementUtil;\n@@ -92,17 +92,16 @@ private int count() {\n                         AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n-    private void doExtractResources(final ContentHandler handler, final AbstractAttributableTO attributableTO)\n+    private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)\n             throws SAXException {\n \n-        if (attributableTO.getResources().isEmpty()) {\n-            LOG.debug(\"No resources found for {}[{}]\", attributableTO.getClass().getSimpleName(), attributableTO\n-                    .getId());\n+        if (subjectTO.getResources().isEmpty()) {\n+            LOG.debug(\"No resources found for {}[{}]\", subjectTO.getClass().getSimpleName(), subjectTO.getId());\n         } else {\n             AttributesImpl atts = new AttributesImpl();\n             handler.startElement(\"\", \"\", \"resources\", null);\n \n-            for (String resourceName : attributableTO.getResources()) {\n+            for (String resourceName : subjectTO.getResources()) {\n                 atts.clear();\n \n                 atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, resourceName);"},{"sha":"3f03a6794affc31178ecb4a5ff550d1e058087fc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -28,10 +28,10 @@\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n@@ -169,7 +169,7 @@ public List<ResourceTO> list(final Long connInstanceId) {\n \n     @PreAuthorize(\"hasRole('RESOURCE_GETCONNECTOROBJECT')\")\n     @Transactional(readOnly = true)\n-    public ConnObjectTO getConnectorObject(final String resourceName, final AttributableType type, final Long id) {\n+    public ConnObjectTO getConnectorObject(final String resourceName, final SubjectType type, final Long id) {\n         ExternalResource resource = resourceDAO.find(resourceName);\n         if (resource == null) {\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n@@ -178,22 +178,19 @@ public ConnObjectTO getConnectorObject(final String resourceName, final Attribut\n         AbstractAttributable attributable = null;\n         switch (type) {\n             case USER:\n+            default:\n                 attributable = userDAO.find(id);\n                 break;\n \n             case ROLE:\n                 attributable = roleDAO.find(id);\n                 break;\n-\n-            case MEMBERSHIP:\n-            default:\n-                throw new IllegalArgumentException(\"Not supported for MEMBERSHIP\");\n         }\n         if (attributable == null) {\n             throw new NotFoundException(type + \" \" + id);\n         }\n \n-        final AttributableUtil attrUtil = AttributableUtil.getInstance(type);\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(type.asAttributableType());\n \n         AbstractMappingItem accountIdItem = attrUtil.getAccountIdItem(resource);\n         if (accountIdItem == null) {\n@@ -203,7 +200,7 @@ public ConnObjectTO getConnectorObject(final String resourceName, final Attribut\n         final String accountIdValue = MappingUtil.getAccountIdValue(\n                 attributable, resource, attrUtil.getAccountIdItem(resource));\n \n-        final ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n+        final ObjectClass objectClass = SubjectType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n \n         final Connector connector = connFactory.getConnector(resource);\n         final ConnectorObject connectorObject = connector.getObject(objectClass, new Uid(accountIdValue),"},{"sha":"d8b3ccdb2ef667219e9894d29d9832b2a91d2543","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":93,"deletions":69,"changes":162,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,17 +26,19 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.SyncopeClientCompositeException;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n+import org.apache.syncope.common.mod.AbstractSubjectMod;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.SyncopeClientCompositeException;\n-import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n@@ -45,6 +47,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n@@ -84,8 +87,8 @@\n import org.apache.syncope.core.persistence.validation.attrvalue.InvalidAttrValueException;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.util.AttributableUtil;\n-import org.apache.syncope.core.util.jexl.JexlUtil;\n import org.apache.syncope.core.util.MappingUtil;\n+import org.apache.syncope.core.util.jexl.JexlUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -250,10 +253,14 @@ private boolean evaluateMandatoryCondition(final AttributableUtil attrUtil,\n \n         boolean result = false;\n \n-        for (Iterator<ExternalResource> itor = attributable.getResources().iterator(); itor.hasNext() && !result;) {\n-            final ExternalResource resource = itor.next();\n-            if (resource.isEnforceMandatoryCondition()) {\n-                result |= evaluateMandatoryCondition(attrUtil, resource, attributable, intAttrName, intMappingType);\n+        if (attributable instanceof AbstractSubject) {\n+            for (Iterator<ExternalResource> itor = ((AbstractSubject) attributable).getResources().iterator();\n+                    itor.hasNext() && !result;) {\n+\n+                final ExternalResource resource = itor.next();\n+                if (resource.isEnforceMandatoryCondition()) {\n+                    result |= evaluateMandatoryCondition(attrUtil, resource, attributable, intAttrName, intMappingType);\n+                }\n             }\n         }\n \n@@ -263,10 +270,7 @@ private boolean evaluateMandatoryCondition(final AttributableUtil attrUtil,\n     private SyncopeClientException checkMandatory(final AttributableUtil attrUtil,\n             final AbstractAttributable attributable) {\n \n-        SyncopeClientException reqValMissing = SyncopeClientException.build(\n-                ClientExceptionType.RequiredValuesMissing);\n-\n-        LOG.debug(\"Check mandatory constraint among resources {}\", attributable.getResources());\n+        SyncopeClientException reqValMissing = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n \n         // Check if there is some mandatory schema defined for which no value has been provided\n         List<? extends AbstractNormalSchema> normalSchemas;\n@@ -421,7 +425,9 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n         PropagationByResource propByRes = new PropagationByResource();\n \n         final Set<ExternalResource> externalResources = new HashSet<ExternalResource>();\n-        externalResources.addAll(attributable.getResources());\n+        if (attributable instanceof AbstractSubject) {\n+            externalResources.addAll(((AbstractSubject) attributable).getResources());\n+        }\n \n         if (attributable instanceof Membership) {\n             externalResources.clear();\n@@ -513,27 +519,29 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n         SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n \n-        // 1. resources to be removed\n-        for (String resourceToBeRemoved : attributableMod.getResourcesToRemove()) {\n-            ExternalResource resource = getResource(resourceToBeRemoved);\n-            if (resource != null) {\n-                propByRes.add(ResourceOperation.DELETE, resource.getName());\n-                attributable.removeResource(resource);\n+        if (attributable instanceof AbstractSubject && attributableMod instanceof AbstractSubjectMod) {\n+            // 1. resources to be removed\n+            for (String resourceToBeRemoved : ((AbstractSubjectMod) attributableMod).getResourcesToRemove()) {\n+                ExternalResource resource = getResource(resourceToBeRemoved);\n+                if (resource != null) {\n+                    propByRes.add(ResourceOperation.DELETE, resource.getName());\n+                    ((AbstractSubject) attributable).removeResource(resource);\n+                }\n             }\n-        }\n \n-        LOG.debug(\"Resources to be removed:\\n{}\", propByRes);\n+            LOG.debug(\"Resources to be removed:\\n{}\", propByRes);\n \n-        // 2. resources to be added\n-        for (String resourceToBeAdded : attributableMod.getResourcesToAdd()) {\n-            ExternalResource resource = getResource(resourceToBeAdded);\n-            if (resource != null) {\n-                propByRes.add(ResourceOperation.CREATE, resource.getName());\n-                attributable.addResource(resource);\n+            // 2. resources to be added\n+            for (String resourceToBeAdded : ((AbstractSubjectMod) attributableMod).getResourcesToAdd()) {\n+                ExternalResource resource = getResource(resourceToBeAdded);\n+                if (resource != null) {\n+                    propByRes.add(ResourceOperation.CREATE, resource.getName());\n+                    ((AbstractSubject) attributable).addResource(resource);\n+                }\n             }\n-        }\n \n-        LOG.debug(\"Resources to be added:\\n{}\", propByRes);\n+            LOG.debug(\"Resources to be added:\\n{}\", propByRes);\n+        }\n \n         // 3. attributes to be removed\n         for (String attributeToBeRemoved : attributableMod.getAttrsToRemove()) {\n@@ -558,19 +566,22 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                     }\n                 }\n \n-                for (ExternalResource resource : resourceDAO.findAll()) {\n-                    for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n-                        if (schema.getName().equals(mapItem.getIntAttrName())\n-                                && mapItem.getIntMappingType() == attrUtil.intMappingType()\n-                                && attributable.getResources().contains(resource)) {\n+                if (attributable instanceof AbstractSubject) {\n+                    for (ExternalResource resource : resourceDAO.findAll()) {\n+                        for (AbstractMappingItem mapItem : attrUtil.\n+                                getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n+                            if (schema.getName().equals(mapItem.getIntAttrName())\n+                                    && mapItem.getIntMappingType() == attrUtil.intMappingType()\n+                                    && ((AbstractSubject) attributable).getResources().contains(resource)) {\n \n-                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                                propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n-                            if (mapItem.isAccountid() && attr != null\n-                                    && !attr.getValuesAsStrings().isEmpty()) {\n+                                if (mapItem.isAccountid() && attr != null\n+                                        && !attr.getValuesAsStrings().isEmpty()) {\n \n-                                propByRes.addOldAccountId(resource.getName(),\n-                                        attr.getValuesAsStrings().iterator().next());\n+                                    propByRes.addOldAccountId(resource.getName(),\n+                                            attr.getValuesAsStrings().iterator().next());\n+                                }\n                             }\n                         }\n                     }\n@@ -599,13 +610,16 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n             }\n \n             if (schema != null && attr != null && attr.getSchema() != null) {\n-                for (ExternalResource resource : resourceDAO.findAll()) {\n-                    for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n-                        if (schema.getName().equals(mapItem.getIntAttrName())\n-                                && mapItem.getIntMappingType() == attrUtil.intMappingType()\n-                                && attributable.getResources().contains(resource)) {\n-\n-                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                if (attributable instanceof AbstractSubject) {\n+                    for (ExternalResource resource : resourceDAO.findAll()) {\n+                        for (AbstractMappingItem mapItem : attrUtil.\n+                                getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n+                            if (schema.getName().equals(mapItem.getIntAttrName())\n+                                    && mapItem.getIntMappingType() == attrUtil.intMappingType()\n+                                    && ((AbstractSubject) attributable).getResources().contains(resource)) {\n+\n+                                propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                            }\n                         }\n                     }\n                 }\n@@ -664,19 +678,22 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                     derAttrDAO.delete(derAttr);\n                 }\n \n-                for (ExternalResource resource : resourceDAO.findAll()) {\n-                    for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n-                        if (derSchema.getName().equals(mapItem.getIntAttrName())\n-                                && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n-                                && attributable.getResources().contains(resource)) {\n+                if (attributable instanceof AbstractSubject) {\n+                    for (ExternalResource resource : resourceDAO.findAll()) {\n+                        for (AbstractMappingItem mapItem : attrUtil.\n+                                getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n+                            if (derSchema.getName().equals(mapItem.getIntAttrName())\n+                                    && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n+                                    && ((AbstractSubject) attributable).getResources().contains(resource)) {\n \n-                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                                propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n-                            if (mapItem.isAccountid() && derAttr != null\n-                                    && !derAttr.getValue(attributable.getAttrs()).isEmpty()) {\n+                                if (mapItem.isAccountid() && derAttr != null\n+                                        && !derAttr.getValue(attributable.getAttrs()).isEmpty()) {\n \n-                                propByRes.addOldAccountId(resource.getName(),\n-                                        derAttr.getValue(attributable.getAttrs()));\n+                                    propByRes.addOldAccountId(resource.getName(),\n+                                            derAttr.getValue(attributable.getAttrs()));\n+                                }\n                             }\n                         }\n                     }\n@@ -690,13 +707,16 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         for (String derAttrToBeAdded : attributableMod.getDerAttrsToAdd()) {\n             AbstractDerSchema derSchema = getDerSchema(derAttrToBeAdded, attrUtil.derSchemaClass());\n             if (derSchema != null) {\n-                for (ExternalResource resource : resourceDAO.findAll()) {\n-                    for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n-                        if (derSchema.getName().equals(mapItem.getIntAttrName())\n-                                && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n-                                && attributable.getResources().contains(resource)) {\n-\n-                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                if (attributable instanceof AbstractSubject) {\n+                    for (ExternalResource resource : resourceDAO.findAll()) {\n+                        for (AbstractMappingItem mapItem : attrUtil.\n+                                getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n+                            if (derSchema.getName().equals(mapItem.getIntAttrName())\n+                                    && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n+                                    && ((AbstractSubject) attributable).getResources().contains(resource)) {\n+\n+                                propByRes.add(ResourceOperation.UPDATE, resource.getName());\n+                            }\n                         }\n                     }\n                 }\n@@ -839,11 +859,13 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         fillVirtual(attributable, attributableTO.getVirAttrs(), attributableUtil);\n \n         // 4. resources\n-        for (String resourceName : attributableTO.getResources()) {\n-            ExternalResource resource = getResource(resourceName);\n+        if (attributable instanceof AbstractSubject && attributableTO instanceof AbstractSubjectTO) {\n+            for (String resourceName : ((AbstractSubjectTO) attributableTO).getResources()) {\n+                ExternalResource resource = getResource(resourceName);\n \n-            if (resource != null) {\n-                attributable.addResource(resource);\n+                if (resource != null) {\n+                    ((AbstractSubject) attributable).addResource(resource);\n+                }\n             }\n         }\n \n@@ -892,8 +914,10 @@ protected void fillTO(final AbstractAttributableTO attributableTO,\n             attributableTO.getVirAttrs().add(attributeTO);\n         }\n \n-        for (ExternalResource resource : resources) {\n-            attributableTO.getResources().add(resource.getName());\n+        if (attributableTO instanceof AbstractSubjectTO) {\n+            for (ExternalResource resource : resources) {\n+                ((AbstractSubjectTO) attributableTO).getResources().add(resource.getName());\n+            }\n         }\n     }\n }"},{"sha":"3184ae5b5ddc338bb4395bbc7492c106f64a1579","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -435,7 +435,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n \n             fillTO(membershipTO,\n                     membership.getAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n-                    membership.getResources());\n+                    Collections.<ExternalResource>emptyList());\n \n             userTO.getMemberships().add(membershipTO);\n         }"},{"sha":"e126972bf61ba889857a702d838bc11514681e34","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":8,"deletions":13,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -23,20 +23,19 @@\n import java.util.List;\r\n import java.util.Set;\r\n import javax.ws.rs.BadRequestException;\r\n-\r\n import javax.ws.rs.core.Response;\r\n-\r\n-import org.apache.syncope.common.services.ResourceService;\r\n-import org.apache.syncope.common.to.AbstractAttributableTO;\r\n import org.apache.syncope.common.reqres.BulkAction;\r\n import org.apache.syncope.common.reqres.BulkActionResult;\r\n+import org.apache.syncope.common.services.ResourceService;\r\n+import org.apache.syncope.common.to.AbstractAttributableTO;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n-import org.apache.syncope.common.wrap.PropagationActionClass;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n+import org.apache.syncope.common.wrap.PropagationActionClass;\r\n import org.apache.syncope.common.wrap.SubjectId;\r\n import org.apache.syncope.core.rest.controller.AbstractResourceAssociator;\r\n import org.apache.syncope.core.rest.controller.ResourceController;\r\n@@ -97,7 +96,7 @@ public List<ResourceTO> list(final Long connInstanceId) {\n     }\r\n \r\n     @Override\r\n-    public ConnObjectTO getConnectorObject(final String resourceName, final AttributableType type, final Long id) {\r\n+    public ConnObjectTO getConnectorObject(final String resourceName, final SubjectType type, final Long id) {\r\n         return controller.getConnectorObject(resourceName, type, id);\r\n     }\r\n \r\n@@ -112,14 +111,10 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n     }\r\n \r\n     @Override\r\n-    public BulkActionResult bulkDeassociation(final String resourceName, final AttributableType attrType,\r\n+    public BulkActionResult bulkDeassociation(final String resourceName, final SubjectType subjectType,\r\n             final ResourceDeassociationActionType type, final List<SubjectId> subjectIds) {\r\n \r\n-        if (attrType == AttributableType.MEMBERSHIP) {\r\n-            throw new BadRequestException();\r\n-        }\r\n-\r\n-        AbstractResourceAssociator<? extends AbstractAttributableTO> associator = attrType == AttributableType.USER\r\n+        AbstractResourceAssociator<? extends AbstractAttributableTO> associator = subjectType == SubjectType.USER\r\n                 ? userController\r\n                 : roleController;\r\n \r\n@@ -146,7 +141,7 @@ public BulkActionResult bulkDeassociation(final String resourceName, final Attri\n \r\n                 res.add(id, BulkActionResult.Status.SUCCESS);\r\n             } catch (Exception e) {\r\n-                LOG.warn(\"While executing {} on {} {}\", type, attrType, id.getElement(), e);\r\n+                LOG.warn(\"While executing {} on {} {}\", type, subjectType, id.getElement(), e);\r\n                 res.add(id, BulkActionResult.Status.FAILURE);\r\n             }\r\n         }\r"},{"sha":"f461af53588467682a244419717f7e71bd4dbd03","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -25,10 +25,9 @@\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import javax.ws.rs.core.StreamingOutput;\r\n-\r\n import org.apache.syncope.common.services.WorkflowService;\r\n-import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.RESTHeaders;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n import org.apache.syncope.core.rest.controller.WorkflowController;\r\n import org.apache.syncope.core.workflow.ActivitiDetector;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n@@ -41,11 +40,12 @@ public class WorkflowServiceImpl extends AbstractServiceImpl implements Workflow\n     private WorkflowController controller;\r\n \r\n     @Override\r\n-    public Response getOptions(final AttributableType kind) {\r\n+    public Response getOptions(final SubjectType kind) {\r\n         String key = null;\r\n         String value = null;\r\n         switch (kind) {\r\n             case USER:\r\n+            default:\r\n                 key = RESTHeaders.ACTIVITI_USER_ENABLED;\r\n                 value = Boolean.toString(ActivitiDetector.isActivitiEnabledForUsers());\r\n                 break;\r\n@@ -54,9 +54,6 @@ public Response getOptions(final AttributableType kind) {\n                 key = RESTHeaders.ACTIVITI_ROLE_ENABLED;\r\n                 value = Boolean.toString(ActivitiDetector.isActivitiEnabledForRoles());\r\n                 break;\r\n-\r\n-            case MEMBERSHIP:\r\n-            default:\r\n         }\r\n \r\n         Response.ResponseBuilder builder = Response.ok().header(HttpHeaders.ALLOW, OPTIONS_ALLOW);\r\n@@ -67,7 +64,7 @@ public Response getOptions(final AttributableType kind) {\n     }\r\n \r\n     @Override\r\n-    public Response exportDefinition(final AttributableType kind) {\r\n+    public Response exportDefinition(final SubjectType kind) {\r\n         final MediaType accept =\r\n                 messageContext.getHttpHeaders().getAcceptableMediaTypes().contains(MediaType.APPLICATION_JSON_TYPE)\r\n                 ? MediaType.APPLICATION_JSON_TYPE\r\n@@ -98,22 +95,20 @@ public void write(final OutputStream os) throws IOException {\n     }\r\n \r\n     @Override\r\n-    public Response exportDiagram(final AttributableType kind) {\r\n+    public Response exportDiagram(final SubjectType kind) {\r\n         StreamingOutput sout = new StreamingOutput() {\r\n \r\n             @Override\r\n             public void write(final OutputStream os) throws IOException {\r\n                 switch (kind) {\r\n                     case USER:\r\n+                    default:\r\n                         controller.exportUserDiagram(os);\r\n                         break;\r\n \r\n                     case ROLE:\r\n                         controller.exportRoleDiagram(os);\r\n                         break;\r\n-\r\n-                    default:\r\n-                        throw new BadRequestException();\r\n                 }\r\n             }\r\n         };\r\n@@ -124,23 +119,21 @@ public void write(final OutputStream os) throws IOException {\n     }\r\n \r\n     @Override\r\n-    public void importDefinition(final AttributableType kind, final String definition) {\r\n+    public void importDefinition(final SubjectType kind, final String definition) {\r\n         final MediaType contentType =\r\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\r\n                 ? MediaType.APPLICATION_JSON_TYPE\r\n                 : MediaType.APPLICATION_XML_TYPE;\r\n \r\n         switch (kind) {\r\n             case USER:\r\n+            default:\r\n                 controller.importUserDefinition(contentType, definition);\r\n                 break;\r\n \r\n             case ROLE:\r\n                 controller.importRoleDefinition(contentType, definition);\r\n                 break;\r\n-\r\n-            default:\r\n-                throw new BadRequestException();\r\n         }\r\n     }\r\n }\r"},{"sha":"521c24bafb24b777c020ea2c0501211c371ecddf","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.sync.impl;\n \n import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n+\n import java.util.AbstractMap;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -34,6 +35,7 @@\n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -392,8 +394,7 @@ protected List<SyncResult> assign(\n             final SyncDelta delta, final AttributableUtil attrUtil, final boolean dryRun)\n             throws JobExecutionException {\n \n-        final AbstractAttributableTO subjectTO =\n-                connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n+        final AbstractSubjectTO subjectTO = connObjectUtil.getSubjectTO(delta.getObject(), syncTask, attrUtil);\n \n         subjectTO.getResources().add(getSyncTask().getResource().getName());\n \n@@ -410,7 +411,7 @@ protected List<SyncResult> create(\n             throws JobExecutionException {\n \n         final AbstractAttributableTO subjectTO =\n-                connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n+                connObjectUtil.getSubjectTO(delta.getObject(), syncTask, attrUtil);\n \n         SyncDelta _delta = delta;\n         for (SyncActions action : actions) {"},{"sha":"7e84ed3c9c5a72b18038ebd27dcce68a18cf80ef","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":26,"deletions":4,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -23,12 +23,14 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n@@ -87,7 +89,7 @@ public final class AttributableUtil {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(AttributableUtil.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(AttributableUtil.class);\n \n     private final AttributableType type;\n \n@@ -235,15 +237,19 @@ public <T extends AbstractMappingItem> List<T> getMappingItems(\n         switch (purpose) {\n             case SYNCHRONIZATION:\n                 for (T item : items) {\n-                    if (MappingPurpose.PROPAGATION != item.getPurpose() && MappingPurpose.NONE != item.getPurpose()) {\n+                    if (MappingPurpose.PROPAGATION != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n                         result.add(item);\n                     }\n                 }\n                 break;\n \n             case PROPAGATION:\n                 for (T item : items) {\n-                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose() && MappingPurpose.NONE != item.getPurpose()) {\n+                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n                         result.add(item);\n                     }\n                 }\n@@ -708,7 +714,6 @@ public List<String> getAltSearchSchemas(final SyncPolicySpec policySpec) {\n     }\n \n     public SyncCorrelationRule getCorrelationRule(final SyncPolicySpec policySpec) {\n-\n         String clazz;\n \n         switch (type) {\n@@ -753,4 +758,21 @@ public <T extends AbstractAttributableTO> T newAttributableTO() {\n \n         return result;\n     }\n+\n+    public <T extends AbstractSubjectTO> T newSubjectTO() {\n+        T result = null;\n+\n+        switch (type) {\n+            case USER:\n+                result = (T) new UserTO();\n+                break;\n+            case ROLE:\n+                result = (T) new RoleTO();\n+                break;\n+            case MEMBERSHIP:\n+                break;\n+        }\n+\n+        return result;\n+    }\n }"},{"sha":"6a31904eb24f8126f9f27f122f22673f599b2fb3","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":32,"deletions":31,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -34,29 +34,30 @@\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.SyncopeClient;\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.reqres.PagedResult;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.reqres.PagedResult;\n-import org.apache.syncope.common.wrap.ResourceName;\n+import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MappingTO;\n+import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n-import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.mod.AttributeMod;\n-import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.to.MappingItemTO;\n-import org.apache.syncope.common.to.MappingTO;\n-import org.apache.syncope.common.to.ResourceTO;\n-import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.types.SchemaType;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n+import org.apache.syncope.common.wrap.ResourceName;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -128,7 +129,7 @@ public void create() {\n         assertTrue(roleTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, roleTO.getId());\n         assertNotNull(connObjectTO);\n         assertNotNull(connObjectTO.getAttrMap().get(\"owner\"));\n     }\n@@ -408,7 +409,7 @@ public void unlink() {\n         RoleTO actual = createRole(buildRoleTO(\"unlink\"));\n         assertNotNull(actual);\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.UNLINK,\n@@ -419,7 +420,7 @@ public void unlink() {\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n     }\n \n     @Test\n@@ -431,7 +432,7 @@ public void link() {\n         assertNotNull(actual);\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -446,7 +447,7 @@ public void link() {\n         assertFalse(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -458,7 +459,7 @@ public void unassign() {\n         RoleTO actual = createRole(buildRoleTO(\"unassign\"));\n         assertNotNull(actual);\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.UNASSIGN,\n@@ -470,7 +471,7 @@ public void unassign() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -486,7 +487,7 @@ public void assign() {\n         assertNotNull(actual);\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -499,15 +500,15 @@ public void assign() {\n \n         actual = roleService.read(actual.getId());\n         assertFalse(actual.getResources().isEmpty());\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n     }\n \n     @Test\n     public void deprovision() {\n         RoleTO actual = createRole(buildRoleTO(\"deprovision\"));\n         assertNotNull(actual);\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.DEPROVISION,\n@@ -519,7 +520,7 @@ public void deprovision() {\n         assertFalse(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -535,7 +536,7 @@ public void provision() {\n         assertNotNull(actual);\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -549,7 +550,7 @@ public void provision() {\n         actual = roleService.read(actual.getId());\n         assertTrue(actual.getResources().isEmpty());\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n     }\n \n     @Test\n@@ -561,7 +562,7 @@ public void deprovisionUnlinked() {\n         assertNotNull(actual);\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -575,7 +576,7 @@ public void deprovisionUnlinked() {\n         actual = roleService.read(actual.getId());\n         assertTrue(actual.getResources().isEmpty());\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.DEPROVISION,\n@@ -587,7 +588,7 @@ public void deprovisionUnlinked() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -687,7 +688,7 @@ public void issueSYNCOPE455() {\n         assertTrue(parent.getResources().contains(RESOURCE_NAME_LDAP));\n \n         final ConnObjectTO parentRemoteObject =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, parent.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, parent.getId());\n         assertNotNull(parentRemoteObject);\n         assertNotNull(getLdapRemoteObject(parentRemoteObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n \n@@ -700,7 +701,7 @@ public void issueSYNCOPE455() {\n         assertTrue(child.getResources().contains(RESOURCE_NAME_LDAP));\n \n         final ConnObjectTO childRemoteObject =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, child.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, child.getId());\n         assertNotNull(childRemoteObject);\n         assertNotNull(getLdapRemoteObject(childRemoteObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n \n@@ -737,7 +738,7 @@ public void issueSYNCOPE493() {\n         roleTO = createRole(roleTO);\n         assertTrue(roleTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n-        ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE,\n+        ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE,\n                 roleTO.getId());\n         assertNotNull(actual);\n \n@@ -784,7 +785,7 @@ public void issueSYNCOPE493() {\n         // check update on Syncope\n         assertEquals(\"TITLENEW\", roleTO.getAttrMap().get(\"title\").getValues().get(0));\n \n-        final ConnObjectTO newRole = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE,\n+        final ConnObjectTO newRole = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE,\n                 roleTO.getId());\n \n         // due to NONE mapping for attribute title external attribute description must not be present"},{"sha":"1ecb0939a4a79c8f1673ae40b03c60d948630983","filename":"core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -33,6 +33,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.client.SyncopeClient;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.StatusMod;\n@@ -43,11 +44,10 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n-import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n@@ -104,7 +104,7 @@ public void createAndApprove() {\n         assertFalse(userTO.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userTO.getId());\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -119,7 +119,7 @@ public void createAndApprove() {\n         userTO = userWorkflowService.submitForm(form);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userTO.getId()));\n     }\n \n     @Test\n@@ -195,7 +195,7 @@ public void updateWitApproval() {\n         // no propagation happened\n         assertTrue(updated.getResources().isEmpty());\n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, updated.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, updated.getId());\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -215,7 +215,7 @@ public void updateWitApproval() {\n \n         // check that propagation also happened\n         assertTrue(updated.getResources().contains(RESOURCE_NAME_TESTDB));\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, updated.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, updated.getId()));\n     }\n \n     @Test"},{"sha":"e34f54db3c5060ce488e0bbcdf78ebb2f9f59c67","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":68,"deletions":71,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -26,69 +26,66 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n import java.security.AccessControlException;\n import java.text.SimpleDateFormat;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n-\n+import javax.naming.NamingException;\n+import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.Response;\n-\n+import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.cxf.common.util.Base64Utility;\n+import org.apache.cxf.helpers.IOUtils;\n+import org.apache.syncope.client.SyncopeClient;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n+import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.reqres.BulkAction;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.reqres.BulkActionResult.Status;\n+import org.apache.syncope.common.reqres.PagedResult;\n import org.apache.syncope.common.services.PolicyService;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.UserSelfService;\n+import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.to.AttributeTO;\n-import org.apache.syncope.common.reqres.BulkAction;\n-import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.reqres.BulkActionResult.Status;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.common.to.PropagationTaskTO;\n-import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.CipherAlgorithm;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.PolicyType;\n+import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n-import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n-import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.Collection;\n-import javax.naming.NamingException;\n-import javax.ws.rs.core.EntityTag;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.cxf.common.util.Base64Utility;\n-import org.apache.cxf.helpers.IOUtils;\n-import org.apache.syncope.client.SyncopeClient;\n-import org.apache.syncope.common.mod.ResourceAssociationMod;\n-import org.apache.syncope.common.services.UserService;\n-import org.apache.syncope.common.reqres.PagedResult;\n-import org.apache.syncope.common.to.MappingTO;\n-import org.apache.syncope.common.types.MappingPurpose;\n-import org.apache.syncope.common.types.Preference;\n-import org.apache.syncope.common.types.RESTHeaders;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -923,10 +920,10 @@ public void suspendReactivateOnResource() {\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n+                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userId);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, userId);\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n@@ -940,7 +937,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n@@ -953,7 +950,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userId);\n         assertTrue(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n     }\n \n@@ -1152,7 +1149,7 @@ public void roleAttrPropagation() {\n         assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1180,7 +1177,7 @@ public void membershipAttrPropagation() {\n         assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n@@ -1241,7 +1238,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getResources().size());\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1256,7 +1253,7 @@ public void issueSYNCOPE108() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1273,7 +1270,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1291,7 +1288,7 @@ public void issueSYNCOPE108() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail(\"Read should not succeeed\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -1323,7 +1320,7 @@ public void issueSYNCOPE111() {\n         assertEquals(2, actual.getMemberships().size());\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, actual.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         AttributeTO postalAddress = connObjectTO.getAttrMap().get(\"postalAddress\");\n@@ -1352,7 +1349,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, actual.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttrMap().get(\"postalAddress\");\n@@ -1384,7 +1381,7 @@ public void issueSYNCOPE185() {\n \n         // 3. try (and fail) to find this user on the external LDAP resource\n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, userTO.getId());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -1437,7 +1434,7 @@ public void issueSYNCOPE267() {\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_DBVIRATTR, AttributableType.USER, userTO.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_DBVIRATTR, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1495,15 +1492,15 @@ public void issueSYNCOPE122() {\n         final String pwdOnSyncope = userTO.getPassword();\n \n         ConnObjectTO userOnDb = resourceService.getConnectorObject(\n-                RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n+                RESOURCE_NAME_TESTDB, SubjectType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDbAttr = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 = resourceService.getConnectorObject(\n-                RESOURCE_NAME_TESTDB2, AttributableType.USER, userTO.getId());\n+                RESOURCE_NAME_TESTDB2, SubjectType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n@@ -1530,15 +1527,15 @@ public void issueSYNCOPE122() {\n         assertEquals(pwdOnSyncope, userTO.getPassword());\n \n         // 3c. verify that password *has* changed on testdb\n-        userOnDb = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n+        userOnDb = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n-        userOnDb2 = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB2, AttributableType.USER, userTO.getId());\n+        userOnDb2 = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB2, SubjectType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n@@ -1627,7 +1624,7 @@ public void mappingPurpose() {\n         assertNotNull(actual);\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n         assertNull(connObjectTO.getAttrMap().get(\"email\"));\n     }\n \n@@ -1715,7 +1712,7 @@ public void issueSYNCOPE354() {\n \n         // 3. read role on resource, check that user DN is included in uniqueMember\n         ConnObjectTO connObj = resourceService.getConnectorObject(\n-                RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n+                RESOURCE_NAME_LDAP, SubjectType.ROLE, roleTO.getId());\n         assertNotNull(connObj);\n         assertTrue(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n@@ -1729,7 +1726,7 @@ public void issueSYNCOPE354() {\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         // 5. read role on resource, check that user DN was removed from uniqueMember\n-        connObj = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n+        connObj = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, roleTO.getId());\n         assertNotNull(connObj);\n         assertFalse(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n@@ -1770,7 +1767,7 @@ public void issueSYNCOPE357() throws IOException {\n \n         // 3. read user on resource\n         ConnObjectTO connObj = resourceService.getConnectorObject(\n-                RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+                RESOURCE_NAME_LDAP, SubjectType.USER, userTO.getId());\n         assertNotNull(connObj);\n         AttributeTO registeredAddress = connObj.getAttrMap().get(\"registeredAddress\");\n         assertNotNull(registeredAddress);\n@@ -1784,7 +1781,7 @@ public void issueSYNCOPE357() throws IOException {\n \n         // 5. try to read user on resource: fail\n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, userTO.getId());\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n@@ -1875,7 +1872,7 @@ public void unlink() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.UNLINK,\n@@ -1886,7 +1883,7 @@ public void unlink() {\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n     }\n \n     @Test\n@@ -1903,7 +1900,7 @@ public void link() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -1920,7 +1917,7 @@ public void link() {\n         assertFalse(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -1939,7 +1936,7 @@ public void unassign() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.UNASSIGN,\n@@ -1951,7 +1948,7 @@ public void unassign() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -1972,7 +1969,7 @@ public void assign() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -1989,7 +1986,7 @@ public void assign() {\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n         assertFalse(actual.getResources().isEmpty());\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n     }\n \n     @Test\n@@ -2004,7 +2001,7 @@ public void deprovision() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.DEPROVISION,\n@@ -2016,7 +2013,7 @@ public void deprovision() {\n         assertFalse(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -2037,7 +2034,7 @@ public void provision() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -2055,7 +2052,7 @@ public void provision() {\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n     }\n \n     @Test\n@@ -2072,7 +2069,7 @@ public void deprovisionUnlinked() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -2090,7 +2087,7 @@ public void deprovisionUnlinked() {\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n-        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n                 ResourceDeassociationActionType.DEPROVISION,\n@@ -2102,7 +2099,7 @@ public void deprovisionUnlinked() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, SubjectType.USER, actual.getId());\n             fail();\n         } catch (Exception e) {\n             assertNotNull(e);\n@@ -2207,7 +2204,7 @@ public void issueSYNCOPE454() throws NamingException {\n \n         // 2. read resource configuration for LDAP binding\n         ConnObjectTO connObject =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, userTO.getId());\n \n         // 3. try (and succeed) to perform simple LDAP binding with provided password ('password123')\n         assertNotNull(getLdapRemoteObject(\n@@ -2240,7 +2237,7 @@ public void issueSYNCOPE493() {\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n \n-        final ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_WS1, AttributableType.USER, userTO.\n+        final ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_WS1, SubjectType.USER, userTO.\n                 getId());\n         assertNotNull(actual);\n         // check if mapping attribute with purpose NONE really hasn't been propagated\n@@ -2281,7 +2278,7 @@ public void issueSYNCOPE493() {\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n \n-        final ConnObjectTO newUser = resourceService.getConnectorObject(RESOURCE_NAME_WS1, AttributableType.USER,\n+        final ConnObjectTO newUser = resourceService.getConnectorObject(RESOURCE_NAME_WS1, SubjectType.USER,\n                 userTO.getId());\n \n         assertNotNull(newUser.getAttrMap().get(\"NAME\"));"},{"sha":"62f7c1da99f610bfd058b264cad4cf60d05f35fe","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -25,8 +25,8 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collections;\n-import org.apache.commons.lang3.SerializationUtils;\n import java.util.Map;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n@@ -42,11 +42,11 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n+import org.apache.syncope.common.types.SubjectType;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -102,7 +102,7 @@ public void issueSYNCOPE260() {\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+                resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -126,7 +126,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -139,7 +139,7 @@ public void issueSYNCOPE260() {\n         userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n@@ -149,7 +149,7 @@ public void issueSYNCOPE260() {\n         userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n@@ -174,7 +174,7 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"Surname2\", connObjectTO.getAttrMap().get(\"SURNAME\").getValues().get(0));\n \n@@ -197,7 +197,7 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, SubjectType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n \n         // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n@@ -771,7 +771,6 @@ public void issueSYNCOPE501() {\n                 get(0));\n \n         // ----------------------------------------------------------\n-        \n         // PHASE 2: update only membership virtual attributes\n         // -------------------------------------------\n         // Update resource-db-virattr mapping adding new membership virtual schema mapping"},{"sha":"488caaa01582241166de27ce345bff1c1033a512","filename":"core/src/test/java/org/apache/syncope/core/rest/WorkflowTestITCase.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/91d7bba36bcfa59638102c74c6d855cd9d8889be/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java?ref=91d7bba36bcfa59638102c74c6d855cd9d8889be","patch":"@@ -27,7 +27,7 @@\n import java.io.InputStream;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.commons.io.IOUtils;\r\n-import org.apache.syncope.common.types.AttributableType;\r\n+import org.apache.syncope.common.types.SubjectType;\r\n import org.apache.syncope.core.workflow.ActivitiDetector;\r\n import org.junit.Assume;\r\n import org.junit.Test;\r\n@@ -37,14 +37,12 @@ public class WorkflowTestITCase extends AbstractTest {\n     @Test\r\n     public void isActivitiEnabled() {\r\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers(),\r\n-                adminClient.isActivitiEnabledFor(AttributableType.USER));\r\n+                adminClient.isActivitiEnabledFor(SubjectType.USER));\r\n         assertEquals(ActivitiDetector.isActivitiEnabledForRoles(),\r\n-                adminClient.isActivitiEnabledFor(AttributableType.ROLE));\r\n-        assertEquals(false,\r\n-                adminClient.isActivitiEnabledFor(AttributableType.MEMBERSHIP));\r\n+                adminClient.isActivitiEnabledFor(SubjectType.ROLE));\r\n     }\r\n \r\n-    private void exportDefinition(final AttributableType type) throws IOException {\r\n+    private void exportDefinition(final SubjectType type) throws IOException {\r\n         Response response = workflowService.exportDefinition(type);\r\n         assertTrue(response.getMediaType().toString().\r\n                 startsWith(clientFactory.getContentType().getMediaType().toString()));\r\n@@ -57,16 +55,16 @@ private void exportDefinition(final AttributableType type) throws IOException {\n     @Test\r\n     public void exportUserDefinition() throws IOException {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\r\n-        exportDefinition(AttributableType.USER);\r\n+        exportDefinition(SubjectType.USER);\r\n     }\r\n \r\n     @Test\r\n     public void getRoleDefinition() throws IOException {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForRoles());\r\n-        exportDefinition(AttributableType.ROLE);\r\n+        exportDefinition(SubjectType.ROLE);\r\n     }\r\n \r\n-    private void importDefinition(final AttributableType type) throws IOException {\r\n+    private void importDefinition(final SubjectType type) throws IOException {\r\n         Response response = workflowService.exportDefinition(type);\r\n         String definition = IOUtils.toString((InputStream) response.getEntity());\r\n \r\n@@ -77,13 +75,13 @@ private void importDefinition(final AttributableType type) throws IOException {\n     public void updateUserDefinition() throws IOException {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\r\n \r\n-        importDefinition(AttributableType.USER);\r\n+        importDefinition(SubjectType.USER);\r\n     }\r\n \r\n     @Test\r\n     public void updateRoleDefinition() throws IOException {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForRoles());\r\n \r\n-        importDefinition(AttributableType.ROLE);\r\n+        importDefinition(SubjectType.ROLE);\r\n     }\r\n }\r"}]}