{"sha":"8cad5aad7629d36fbddb3730531392b76e57d7f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjYWQ1YWFkNzYyOWQzNmZiZGRiMzczMDUzMTM5MmI3NmU1N2Q3ZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T07:59:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T07:59:31Z"},"message":"[SYNCOPE-892] Using shared CookieUtils instance","tree":{"sha":"70a73d0d76a3be35ca27e8cbad6aad9a75a478c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/70a73d0d76a3be35ca27e8cbad6aad9a75a478c2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8cad5aad7629d36fbddb3730531392b76e57d7f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cad5aad7629d36fbddb3730531392b76e57d7f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8cad5aad7629d36fbddb3730531392b76e57d7f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cad5aad7629d36fbddb3730531392b76e57d7f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"942eb2eed4e73d8e22850c8171e4d918cf963841","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/942eb2eed4e73d8e22850c8171e4d918cf963841","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/942eb2eed4e73d8e22850c8171e4d918cf963841"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"5df1e4bfb6a60d4ef37138a8d6a2473713359d92","filename":"client/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cad5aad7629d36fbddb3730531392b76e57d7f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cad5aad7629d36fbddb3730531392b76e57d7f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=8cad5aad7629d36fbddb3730531392b76e57d7f4","patch":"@@ -55,12 +55,12 @@ public class PreferenceManager implements Serializable {\n \n     private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[] { 10, 25, 50 });\n \n-    private final transient CookieUtils cookieUtils;\n+    private static final CookieUtils COOKIE_UTILS;\n \n-    public PreferenceManager() {\n+    static {\n         CookieDefaults cookieDefaults = new CookieDefaults();\n         cookieDefaults.setMaxAge(ONE_YEAR_TIME);\n-        this.cookieUtils = new CookieUtils(cookieDefaults);\n+        COOKIE_UTILS = new CookieUtils(cookieDefaults);\n     }\n \n     public List<Integer> getPaginatorChoices() {\n@@ -93,7 +93,7 @@ private String setPrefs(final Map<String, String> prefs) throws IOException {\n     public String get(final Request request, final String key) {\n         String result = null;\n \n-        String prefString = cookieUtils.load(COOKIE_NAME);\n+        String prefString = COOKIE_UTILS.load(COOKIE_NAME);\n         if (prefString != null) {\n             final Map<String, String> prefs = getPrefs(new String(Base64.decodeBase64(prefString.getBytes())));\n             result = prefs.get(key);\n@@ -129,7 +129,7 @@ public List<String> getList(final Request request, final String key) {\n     public void set(final Request request, final Response response, final Map<String, List<String>> prefs) {\n         Map<String, String> current = new HashMap<>();\n \n-        String prefString = cookieUtils.load(COOKIE_NAME);\n+        String prefString = COOKIE_UTILS.load(COOKIE_NAME);\n         if (prefString != null) {\n             current.putAll(getPrefs(new String(Base64.decodeBase64(prefString.getBytes()))));\n         }\n@@ -140,14 +140,14 @@ public void set(final Request request, final Response response, final Map<String\n         }\n \n         try {\n-            cookieUtils.save(COOKIE_NAME, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n+            COOKIE_UTILS.save(COOKIE_NAME, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n         } catch (IOException e) {\n             LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n         }\n     }\n \n     public void set(final Request request, final Response response, final String key, final String value) {\n-        String prefString = cookieUtils.load(COOKIE_NAME);\n+        String prefString = COOKIE_UTILS.load(COOKIE_NAME);\n \n         final Map<String, String> current = new HashMap<>();\n         if (prefString != null) {\n@@ -158,7 +158,7 @@ public void set(final Request request, final Response response, final String key\n         current.put(key, value);\n \n         try {\n-            cookieUtils.save(COOKIE_NAME, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n+            COOKIE_UTILS.save(COOKIE_NAME, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n         } catch (IOException e) {\n             LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n         }"}]}