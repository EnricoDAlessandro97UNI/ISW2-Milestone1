{"sha":"2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIxNDM4MDllZmExOWE3MTI4ZjQxZWM1ZDljMDNlMWFlNWVmMDFmZjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-13T13:07:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-13T13:07:02Z"},"message":"Remove useless method","tree":{"sha":"2d7fa594038c08519d7e98510bfa195a79190e07","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2d7fa594038c08519d7e98510bfa195a79190e07"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f22c28db1e995f35fd0b6044609b2ee6dee3411c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f22c28db1e995f35fd0b6044609b2ee6dee3411c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f22c28db1e995f35fd0b6044609b2ee6dee3411c"}],"stats":{"total":32,"additions":5,"deletions":27},"files":[{"sha":"2e06e8bd5246d5a67143ac065cc6ef2be9637cb5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":5,"deletions":27,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","patch":"@@ -22,11 +22,11 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n-import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.collections.IteratorChain;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n@@ -177,30 +177,6 @@ protected List<PropagationActions> getPropagationActions(final ExternalResource\n         return result;\n     }\n \n-    /**\n-     * Transform a {@link Collection} of {@link Attribute} instances into a {@link Map}.\n-     * The key to each element in the map is the {@code name} of an {@link Attribute}.\n-     * The value of each element in the map is the {@link Attribute} instance with that name.\n-     * <br/>\n-     * Different from the original because:\n-     * <ul>\n-     * <li>map keys are transformed toUpperCase()</li>\n-     * <li>returned map is mutable</li>\n-     * </ul>\n-     *\n-     * @param attributes set of attribute to transform to a map.\n-     * @return a map of string and attribute.\n-     *\n-     * @see org.identityconnectors.framework.common.objects.AttributeUtil#toMap(java.util.Collection)\n-     */\n-    private Map<String, Attribute> toMap(final Collection<? extends Attribute> attributes) {\n-        Map<String, Attribute> map = new HashMap<>();\n-        attributes.forEach(attr -> {\n-            map.put(attr.getName().toUpperCase(), attr);\n-        });\n-        return map;\n-    }\n-\n     protected Uid createOrUpdate(\n             final PropagationTask task,\n             final ConnectorObject beforeObj,\n@@ -251,8 +227,10 @@ protected Uid createOrUpdate(\n \n             // 2. check wether anything is actually needing to be propagated, i.e. if there is attribute\n             // difference between beforeObj - just read above from the connector - and the values to be propagated\n-            Map<String, Attribute> originalAttrMap = toMap(beforeObj.getAttributes());\n-            Map<String, Attribute> updateAttrMap = toMap(attributes);\n+            Map<String, Attribute> originalAttrMap = beforeObj.getAttributes().stream().\n+                    collect(Collectors.toMap(attr -> attr.getName().toUpperCase(), attr -> attr));\n+            Map<String, Attribute> updateAttrMap = attributes.stream().\n+                    collect(Collectors.toMap(attr -> attr.getName().toUpperCase(), attr -> attr));\n \n             // Only compare attribute from beforeObj that are also being updated\n             Set<String> skipAttrNames = originalAttrMap.keySet();"}]}