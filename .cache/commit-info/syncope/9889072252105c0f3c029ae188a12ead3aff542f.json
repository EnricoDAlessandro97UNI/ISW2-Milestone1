{"sha":"9889072252105c0f3c029ae188a12ead3aff542f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk4ODkwNzIyNTIxMDVjMGYzYzAyOWFlMTg4YTEyZWFkM2FmZjU0MmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-06T15:07:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-10T06:34:14Z"},"message":"[SYNCOPE-956] Console implementation","tree":{"sha":"be8ac435fe68c7a859cc63e3856812c2ccfddc79","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/be8ac435fe68c7a859cc63e3856812c2ccfddc79"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9889072252105c0f3c029ae188a12ead3aff542f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9889072252105c0f3c029ae188a12ead3aff542f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9889072252105c0f3c029ae188a12ead3aff542f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9889072252105c0f3c029ae188a12ead3aff542f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f08a17b1b8b619390556b229f293ee53d0d85527","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f08a17b1b8b619390556b229f293ee53d0d85527","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f08a17b1b8b619390556b229f293ee53d0d85527"}],"stats":{"total":2816,"additions":2197,"deletions":619},"files":[{"sha":"4da9446a16101b3eecd86b71c95140f71bbf23ab","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -61,7 +61,7 @@ private void printPlanSchemaDetailed(final PlainSchemaTO schemaTO) {\n         System.out.println(\"    conversion pattern: \" + schemaTO.getConversionPattern());\n         System.out.println(\"    mandatory condition: \" + schemaTO.getMandatoryCondition());\n         System.out.println(\"    mime type: \" + schemaTO.getMimeType());\n-        System.out.println(\"    validator class: \" + schemaTO.getValidatorClass());\n+        System.out.println(\"    validator class: \" + schemaTO.getValidator());\n         System.out.println(\"    cipher algorithm: \" + (schemaTO.getCipherAlgorithm() == null\n                 ? \"\" : schemaTO.getCipherAlgorithm().getAlgorithm()));\n         System.out.println(\"\");"},{"sha":"c71fdbc191c614e9da953a12cca466f709ce47b1","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -121,6 +121,8 @@ public final class Constants {\n \n     public static final String PREF_NOTIFICATION_PAGINATOR_ROWS = \"notification.paginator.rows\";\n \n+    public static final String PREF_IMPLEMENTATION_PAGINATOR_ROWS = \"implementation.paginator.rows\";\n+\n     public static final String PREF_MAIL_TEMPLATE_PAGINATOR_ROWS = \"mail.template.paginator.rows\";\n \n     public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";"},{"sha":"ed60e6c9bb929ae2addb8077495b4389c1796ed8","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":43,"deletions":5,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -21,7 +21,9 @@\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.ObjectUtils;\n import org.apache.syncope.client.console.pages.BaseExtPage;\n@@ -32,6 +34,9 @@\n import org.apache.syncope.client.console.panels.SSOLoginFormPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.console.widgets.BaseExtWidget;\n+import org.apache.syncope.common.lib.policy.AccountRuleConf;\n+import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.report.ReportletConf;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n@@ -42,7 +47,7 @@ public class ClassPathScanImplementationLookup {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ClassPathScanImplementationLookup.class);\n \n-    private static final String DEFAULT_BASE_PACKAGE = \"org.apache.syncope.client.console\";\n+    private static final String DEFAULT_BASE_PACKAGE = \"org.apache.syncope\";\n \n     private List<Class<? extends BasePage>> pages;\n \n@@ -54,6 +59,12 @@ public class ClassPathScanImplementationLookup {\n \n     private List<Class<? extends SSOLoginFormPanel>> ssoLoginFormPanels;\n \n+    private Map<String, Class<? extends ReportletConf>> reportletConfs;\n+\n+    private Map<String, Class<? extends AccountRuleConf>> accountRuleConfs;\n+\n+    private Map<String, Class<? extends PasswordRuleConf>> passwordRuleConfs;\n+\n     /**\n      * This method can be overridden by subclasses to customize classpath scan.\n      *\n@@ -70,13 +81,19 @@ public void load() {\n         extPages = new ArrayList<>();\n         extWidgets = new ArrayList<>();\n         ssoLoginFormPanels = new ArrayList<>();\n+        reportletConfs = new HashMap<>();\n+        accountRuleConfs = new HashMap<>();\n+        passwordRuleConfs = new HashMap<>();\n \n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtWidget.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SSOLoginFormPanel.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(ReportletConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AccountRuleConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRuleConf.class));\n \n         scanner.findCandidateComponents(getBasePackage()).forEach(bd -> {\n             try {\n@@ -105,6 +122,12 @@ public void load() {\n                         previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n                     } else if (SSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n                         ssoLoginFormPanels.add((Class<? extends SSOLoginFormPanel>) clazz);\n+                    } else if (ReportletConf.class.isAssignableFrom(clazz)) {\n+                        reportletConfs.put(clazz.getName(), (Class<? extends ReportletConf>) clazz);\n+                    } else if (AccountRuleConf.class.isAssignableFrom(clazz)) {\n+                        accountRuleConfs.put(clazz.getName(), (Class<? extends AccountRuleConf>) clazz);\n+                    } else if (PasswordRuleConf.class.isAssignableFrom(clazz)) {\n+                        passwordRuleConfs.put(clazz.getName(), (Class<? extends PasswordRuleConf>) clazz);\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -128,10 +151,17 @@ public void load() {\n \n         ssoLoginFormPanels = Collections.unmodifiableList(ssoLoginFormPanels);\n \n+        reportletConfs = Collections.unmodifiableMap(reportletConfs);\n+        accountRuleConfs = Collections.unmodifiableMap(accountRuleConfs);\n+        passwordRuleConfs = Collections.unmodifiableMap(passwordRuleConfs);\n+\n         LOG.debug(\"Binary previewers found: {}\", previewers);\n         LOG.debug(\"Extension pages found: {}\", extPages);\n         LOG.debug(\"Extension widgets found: {}\", extWidgets);\n         LOG.debug(\"SSO Login pages found: {}\", ssoLoginFormPanels);\n+        LOG.debug(\"Reportlet configurations found: {}\", reportletConfs);\n+        LOG.debug(\"Account Rule configurations found: {}\", accountRuleConfs);\n+        LOG.debug(\"Password Rule configurations found: {}\", passwordRuleConfs);\n     }\n \n     public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n@@ -152,10 +182,6 @@ public List<Class<? extends BasePage>> getPageClasses() {\n         return pages;\n     }\n \n-    public List<Class<? extends AbstractBinaryPreviewer>> getPreviewerClasses() {\n-        return previewers;\n-    }\n-\n     public List<Class<? extends BaseExtPage>> getExtPageClasses() {\n         return extPages;\n     }\n@@ -168,4 +194,16 @@ public List<Class<? extends SSOLoginFormPanel>> getSSOLoginFormPanels() {\n         return ssoLoginFormPanels;\n     }\n \n+    public Map<String, Class<? extends ReportletConf>> getReportletConfs() {\n+        return reportletConfs;\n+    }\n+\n+    public Map<String, Class<? extends AccountRuleConf>> getAccountRuleConfs() {\n+        return accountRuleConfs;\n+    }\n+\n+    public Map<String, Class<? extends PasswordRuleConf>> getPasswordRuleConfs() {\n+        return passwordRuleConfs;\n+    }\n+\n }"},{"sha":"bdc9269d36a6ffcc527da12768255e338cabe3f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -141,8 +141,8 @@ public void onClick(final AjaxRequestTarget target, final NotificationTO ignore)\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n                     LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                            getName() : e.getMessage());\n+                    SyncopeConsoleSession.get().error(\n+                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }"},{"sha":"3602b44a968c247b2ea29d549faef83a72cd0fcd","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":15,"deletions":20,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,23 +18,22 @@\n  */\n package org.apache.syncope.client.console.notifications;\n \n-import org.apache.syncope.client.console.events.EventCategoryPanel;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.events.EventCategoryPanel;\n import org.apache.syncope.client.console.panels.search.AbstractSearchPanel;\n import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.LoggerRestClient;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n@@ -44,7 +43,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.NotificationTO;\n@@ -80,6 +78,8 @@ public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationWra\n \n     private final LoggerRestClient loggerRestClient = new LoggerRestClient();\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     /**\n      * Construct.\n      *\n@@ -107,10 +107,10 @@ protected Serializable onApplyInternal(final NotificationWrapper modelObject) {\n \n     @Override\n     protected WizardModel buildModelSteps(final NotificationWrapper modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new NotificationWizardBuilder.Details(modelObject));\n-        wizardModel.add(new NotificationWizardBuilder.Recipients(modelObject));\n-        wizardModel.add(new NotificationWizardBuilder.Events(modelObject));\n-        wizardModel.add(new NotificationWizardBuilder.Abouts(modelObject));\n+        wizardModel.add(new Details(modelObject));\n+        wizardModel.add(new Recipients(modelObject));\n+        wizardModel.add(new Events(modelObject));\n+        wizardModel.add(new Abouts(modelObject));\n         return wizardModel;\n     }\n \n@@ -332,13 +332,8 @@ public class Recipients extends WizardStep {\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> providers = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.RECIPIENTS_PROVIDER);\n-                List<String> load = providers.isPresent()\n-                        ? new ArrayList<>(providers.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.RECIPIENTS_PROVIDER).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n@@ -371,11 +366,11 @@ public Recipients(final NotificationWrapper modelObject) {\n                     new PropertyModel<>(modelObject, \"recipientClauses\")).\n                     required(false).build(\"recipients\"));\n \n-            AjaxDropDownChoicePanel<String> recipientsProviderClassName = new AjaxDropDownChoicePanel<>(\n-                    \"recipientsProviderClassName\", \"recipientsProviderClassName\",\n-                    new PropertyModel<>(notificationTO, \"recipientsProviderClassName\"), false);\n-            recipientsProviderClassName.setChoices(recipientProviders.getObject());\n-            add(recipientsProviderClassName);\n+            AjaxDropDownChoicePanel<String> recipientsProvider = new AjaxDropDownChoicePanel<>(\n+                    \"recipientsProvider\", \"recipientsProvider\",\n+                    new PropertyModel<>(notificationTO, \"recipientsProvider\"), false);\n+            recipientsProvider.setChoices(recipientProviders.getObject());\n+            add(recipientsProvider);\n \n             AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\",\n                     getString(\"selfAsRecipient\"), new PropertyModel<>(notificationTO, \"selfAsRecipient\"));"},{"sha":"09ab57e62ed5fb1d2f871d80cc7830c50746d305","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Audit.java","status":"modified","additions":13,"deletions":14,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n@@ -49,15 +49,14 @@ public Audit(final PageParameters parameters) {\n \n         final LoggerRestClient loggerRestClient = new LoggerRestClient();\n \n-        List<String> events = new ArrayList<>();\n-        for (AuditLoggerName audit : loggerRestClient.listAudits()) {\n-            events.add(AuditLoggerName.buildEvent(\n-                    audit.getType(),\n-                    audit.getCategory(),\n-                    audit.getSubcategory(),\n-                    audit.getEvent(),\n-                    audit.getResult()));\n-        }\n+        List<String> events = loggerRestClient.listAudits().stream().\n+                map(audit -> AuditLoggerName.buildEvent(\n+                audit.getType(),\n+                audit.getCategory(),\n+                audit.getSubcategory(),\n+                audit.getEvent(),\n+                audit.getResult())).\n+                collect(Collectors.toList());\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n@@ -89,7 +88,7 @@ public void onEventAction(final IEvent<?> event) {\n                     final SelectedEventsPanel.EventSelectionChanged eventSelectionChanged =\n                             (SelectedEventsPanel.EventSelectionChanged) event.getPayload();\n \n-                    for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n+                    eventSelectionChanged.getToBeRemoved().forEach(toBeRemoved -> {\n                         Pair<EventCategoryTO, AuditElements.Result> eventCategory =\n                                 AuditLoggerName.parseEventCategory(toBeRemoved);\n \n@@ -102,9 +101,9 @@ public void onEventAction(final IEvent<?> event) {\n                                 eventCategory.getValue());\n \n                         loggerRestClient.disableAudit(auditLoggerName);\n-                    }\n+                    });\n \n-                    for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n+                    eventSelectionChanged.getToBeAdded().forEach(toBeAdded -> {\n                         Pair<EventCategoryTO, AuditElements.Result> eventCategory =\n                                 AuditLoggerName.parseEventCategory(toBeAdded);\n \n@@ -117,7 +116,7 @@ public void onEventAction(final IEvent<?> event) {\n                                 eventCategory.getValue());\n \n                         loggerRestClient.enableAudit(auditLoggerName);\n-                    }\n+                    });\n                 }\n             }\n         });"},{"sha":"0cff36ccf9b97307288d59c20157069dc8f3d742","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -193,6 +193,12 @@ public void onClick() {\n         MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, StandardEntitlement.AUDIT_LIST);\n         liContainer.add(link);\n \n+        liContainer = new WebMarkupContainer(getLIContainerId(\"implementations\"));\n+        confULContainer.add(liContainer);\n+        link = BookmarkablePageLinkBuilder.build(\"implementations\", Implementations.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, StandardEntitlement.IMPLEMENTATION_LIST);\n+        liContainer.add(link);\n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"logs\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"logs\", Logs.class);"},{"sha":"0cd1c43a63093f4044f36a1ece51683553ee6f0b","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Implementations.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.panels.ImplementationDirectoryPanel;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class Implementations extends BasePage {\n+\n+    private static final long serialVersionUID = -4562707092152823781L;\n+\n+    public Implementations(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        content.setMarkupId(\"implementations\");\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n+        body.add(content);\n+    }\n+\n+    private List<ITab> buildTabList() {\n+        return Arrays.stream(ImplementationType.values()).\n+                filter(type -> type != ImplementationType.JWT_SSO_PROVIDER\n+                && type != ImplementationType.AUDIT_APPENDER).\n+                sorted(Comparator.comparing(ImplementationType::name)).\n+                map(type -> new AbstractTab(Model.of(type.name())) {\n+\n+            private static final long serialVersionUID = -5861786415855103549L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new ImplementationDirectoryPanel(panelId, type, getPageReference());\n+            }\n+        }).collect(Collectors.toList());\n+    }\n+}"},{"sha":"60a56d1a7f1880f68c18353ef4c60a10061f96fd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel.java","status":"added","additions":232,"deletions":0,"changes":232,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,232 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.ImplementationDirectoryPanel.ImplementationProvider;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class ImplementationDirectoryPanel extends DirectoryPanel<\n+        ImplementationTO, ImplementationTO, ImplementationProvider, ImplementationRestClient> {\n+\n+    private static final long serialVersionUID = 1868839768348072635L;\n+\n+    private final ImplementationType type;\n+\n+    public ImplementationDirectoryPanel(final String id, final ImplementationType type, final PageReference pageRef) {\n+        super(id, pageRef, true);\n+        this.type = type;\n+\n+        ImplementationTO implementation = new ImplementationTO();\n+        implementation.setType(type);\n+\n+        disableCheckBoxes();\n+\n+        modal.size(Modal.Size.Large);\n+        modal.addSubmitButton();\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                implementation.setEngine(null);\n+                updateResultTable(target);\n+                modal.show(false);\n+            }\n+        });\n+        setFooterVisibility(true);\n+\n+        restClient = new ImplementationRestClient();\n+\n+        initResultTable();\n+\n+        ImplementationEngineTogglePanel engineTogglePanel =\n+                new ImplementationEngineTogglePanel(\"engineTogglePanel\", implementation, pageRef) {\n+\n+            private static final long serialVersionUID = -112426445257072782L;\n+\n+            @Override\n+            protected void onSubmit(final ImplementationEngine engine, final AjaxRequestTarget target) {\n+                implementation.setKey(null);\n+                implementation.setBody(null);\n+\n+                target.add(ImplementationDirectoryPanel.this.modal.setContent(new ImplementationModalPanel(\n+                        ImplementationDirectoryPanel.this.modal, implementation, pageRef)));\n+                ImplementationDirectoryPanel.this.modal.header(\n+                        new StringResourceModel(\"any.new\", Model.of(implementation)));\n+                ImplementationDirectoryPanel.this.modal.show(true);\n+            }\n+        };\n+        addInnerObject(engineTogglePanel);\n+\n+        AjaxLink<Void> replaceAddLink = new AjaxLink<Void>(\"add\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                send(ImplementationDirectoryPanel.this, Broadcast.BREADTH,\n+                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                engineTogglePanel.setHeaderLabel(target);\n+                engineTogglePanel.toggle(target, true);\n+            }\n+        };\n+        ((WebMarkupContainer) get(\"container:content\")).addOrReplace(replaceAddLink);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.IMPLEMENTATION_CREATE);\n+    }\n+\n+    @Override\n+    protected List<IColumn<ImplementationTO, String>> getColumns() {\n+        List<IColumn<ImplementationTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new PropertyColumn<>(new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<>(new StringResourceModel(\"engine\", this), \"engine\", \"engine\"));\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected ActionsPanel<ImplementationTO> getActions(final IModel<ImplementationTO> model) {\n+        final ActionsPanel<ImplementationTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<ImplementationTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ImplementationTO ignore) {\n+                target.add(modal.setContent(\n+                        new ImplementationModalPanel(modal, model.getObject(), pageRef)));\n+                modal.header(new StringResourceModel(\"any.edit\", Model.of(model.getObject())));\n+                modal.show(true);\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.IMPLEMENTATION_UPDATE);\n+\n+        panel.add(new ActionLink<ImplementationTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ImplementationTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(\n+                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.IMPLEMENTATION_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    @Override\n+    protected ImplementationProvider dataProvider() {\n+        return new ImplementationProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_IMPLEMENTATION_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    protected class ImplementationProvider extends DirectoryDataProvider<ImplementationTO> {\n+\n+        private static final long serialVersionUID = 8594921866993979224L;\n+\n+        private final SortableDataProviderComparator<ImplementationTO> comparator;\n+\n+        public ImplementationProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<ImplementationTO> iterator(final long first, final long count) {\n+            List<ImplementationTO> list = restClient.list(type);\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.list(type).size();\n+        }\n+\n+        @Override\n+        public IModel<ImplementationTO> model(final ImplementationTO implementation) {\n+            return new AbstractReadOnlyModel<ImplementationTO>() {\n+\n+                private static final long serialVersionUID = 999513782683391483L;\n+\n+                @Override\n+                public ImplementationTO getObject() {\n+                    return implementation;\n+                }\n+            };\n+        }\n+    }\n+\n+}"},{"sha":"49819d538bfa4e33ae409d7ab8f9329f5123a6b9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationEngineTogglePanel.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public abstract class ImplementationEngineTogglePanel extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -7869528596656778267L;\n+\n+    public ImplementationEngineTogglePanel(\n+            final String id,\n+            final ImplementationTO implementation,\n+            final PageReference pageRef) {\n+\n+        super(id, pageRef);\n+\n+        Form<?> form = new Form<>(\"implementationEngineForm\");\n+        addInnerObject(form);\n+\n+        PropertyModel<ImplementationEngine> engineModel = new PropertyModel<>(implementation, \"engine\");\n+\n+        form.add(new AjaxDropDownChoicePanel<>(\n+                \"engine\", \"Engine\", engineModel, false).\n+                setNullValid(false).\n+                setChoices(Arrays.stream(ImplementationEngine.values()).collect(Collectors.toList())).\n+                setStyleSheet(\"form-control\").\n+                hideLabel());\n+\n+        form.add(new AjaxSubmitLink(\"changeit\", form) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                ImplementationEngineTogglePanel.this.onSubmit(engineModel.getObject(), target);\n+                target.add(form);\n+                toggle(target, false);\n+\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        });\n+\n+    }\n+\n+    protected abstract void onSubmit(ImplementationEngine engine, AjaxRequestTarget target);\n+\n+    public void setHeaderLabel(final AjaxRequestTarget target) {\n+        setHeader(target, getString(\"engine\"));\n+    }\n+\n+}"},{"sha":"a2d46905840ee5d160ed49c55517ab917d6b7fb0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"added","additions":329,"deletions":0,"changes":329,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,329 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.info.JavaImplInfo;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+public class ImplementationModalPanel extends AbstractModalPanel<ImplementationTO> {\n+\n+    private static final long serialVersionUID = 5283548960927517342L;\n+\n+    private enum ViewMode {\n+        JAVA_CLASS,\n+        JSON_BODY,\n+        GROOVY_BODY\n+\n+    }\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private final ImplementationRestClient restClient = new ImplementationRestClient();\n+\n+    private final ImplementationTO implementation;\n+\n+    private final ViewMode viewMode;\n+\n+    private boolean create = false;\n+\n+    public ImplementationModalPanel(\n+            final BaseModal<ImplementationTO> modal,\n+            final ImplementationTO implementation,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.implementation = implementation;\n+        this.viewMode = implementation.getEngine() == ImplementationEngine.GROOVY\n+                ? ViewMode.GROOVY_BODY\n+                : implementation.getType() == ImplementationType.REPORTLET\n+                || implementation.getType() == ImplementationType.ACCOUNT_RULE\n+                || implementation.getType() == ImplementationType.PASSWORD_RULE\n+                ? ViewMode.JSON_BODY\n+                : ViewMode.JAVA_CLASS;\n+        this.create = implementation.getKey() == null;\n+\n+        add(new AjaxTextFieldPanel(\n+                \"key\", \"key\", new PropertyModel<>(implementation, \"key\"), false).\n+                addRequiredLabel().setEnabled(create));\n+\n+        List<String> classes = Collections.emptyList();\n+        if (viewMode == ViewMode.JAVA_CLASS) {\n+            Optional<JavaImplInfo> javaClasses = SyncopeConsoleSession.get().getPlatformInfo().\n+                    getJavaImplInfo(implementation.getType());\n+            classes = javaClasses.isPresent()\n+                    ? new ArrayList<>(javaClasses.get().getClasses())\n+                    : new ArrayList<>();\n+        } else if (viewMode == ViewMode.JSON_BODY) {\n+            ClassPathScanImplementationLookup implementationLookup =\n+                    (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n+                            getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+\n+            switch (implementation.getType()) {\n+                case REPORTLET:\n+                    classes = implementationLookup.getReportletConfs().keySet().stream().\n+                            collect(Collectors.toList());\n+                    break;\n+\n+                case ACCOUNT_RULE:\n+                    classes = implementationLookup.getAccountRuleConfs().keySet().stream().\n+                            collect(Collectors.toList());\n+                    break;\n+\n+                case PASSWORD_RULE:\n+                    classes = implementationLookup.getPasswordRuleConfs().keySet().stream().\n+                            collect(Collectors.toList());\n+                    break;\n+\n+                default:\n+            }\n+        }\n+        Collections.sort(classes);\n+\n+        AjaxDropDownChoicePanel<String> javaClass = new AjaxDropDownChoicePanel<>(\n+                \"javaClass\", \"Class\", new PropertyModel<>(implementation, \"body\"));\n+        javaClass.setNullValid(false);\n+        javaClass.setChoices(classes);\n+        javaClass.addRequiredLabel();\n+        javaClass.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true);\n+        javaClass.setVisible(viewMode == ViewMode.JAVA_CLASS);\n+        add(javaClass);\n+\n+        AjaxDropDownChoicePanel<String> jsonClass = new AjaxDropDownChoicePanel<>(\n+                \"jsonClass\", \"Class\", new Model<>());\n+        jsonClass.setNullValid(false);\n+        jsonClass.setChoices(classes);\n+        jsonClass.addRequiredLabel();\n+        jsonClass.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true);\n+        jsonClass.setVisible(viewMode == ViewMode.JSON_BODY);\n+        if (viewMode == ViewMode.JSON_BODY && StringUtils.isNotBlank(implementation.getBody())) {\n+            try {\n+                JsonNode node = MAPPER.readTree(implementation.getBody());\n+                if (node.has(\"@class\")) {\n+                    jsonClass.setModelObject(node.get(\"@class\").asText());\n+                }\n+            } catch (IOException e) {\n+                LOG.error(\"Could not parse as JSON payload: {}\", implementation.getBody(), e);\n+            }\n+        }\n+        jsonClass.setReadOnly(jsonClass.getModelObject() != null);\n+        add(jsonClass);\n+\n+        WebMarkupContainer groovyClassContainer = new WebMarkupContainer(\"groovyClassContainer\");\n+        groovyClassContainer.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true);\n+        groovyClassContainer.setVisible(viewMode != ViewMode.JAVA_CLASS);\n+        add(groovyClassContainer);\n+\n+        if (StringUtils.isBlank(implementation.getBody())\n+                && implementation.getEngine() == ImplementationEngine.GROOVY) {\n+\n+            String templateClassName = null;\n+\n+            switch (implementation.getType()) {\n+                case REPORTLET:\n+                    templateClassName = \"MyReportlet\";\n+                    break;\n+\n+                case ACCOUNT_RULE:\n+                    templateClassName = \"MyAccountRule\";\n+                    break;\n+\n+                case PASSWORD_RULE:\n+                    templateClassName = \"MyPasswordRule\";\n+                    break;\n+\n+                case ITEM_TRANSFORMER:\n+                    templateClassName = \"MyItemTransformer\";\n+                    break;\n+\n+                case TASKJOB_DELEGATE:\n+                    templateClassName = \"MySchedTaskJobDelegate\";\n+                    break;\n+\n+                case RECON_FILTER_BUILDER:\n+                    templateClassName = \"MyReconFilterBuilder\";\n+                    break;\n+\n+                case LOGIC_ACTIONS:\n+                    templateClassName = \"MyLogicActions\";\n+                    break;\n+\n+                case PROPAGATION_ACTIONS:\n+                    templateClassName = \"MyPropagationActions\";\n+                    break;\n+\n+                case PULL_ACTIONS:\n+                    templateClassName = \"MyPullActions\";\n+                    break;\n+\n+                case PUSH_ACTIONS:\n+                    templateClassName = \"MyPushActions\";\n+                    break;\n+\n+                case PULL_CORRELATION_RULE:\n+                    templateClassName = \"MyPullCorrelationRule\";\n+                    break;\n+\n+                case VALIDATOR:\n+                    templateClassName = \"MyValidator\";\n+                    break;\n+\n+                case RECIPIENTS_PROVIDER:\n+                    templateClassName = \"MyRecipientsProvider\";\n+                    break;\n+\n+                default:\n+            }\n+\n+            if (templateClassName != null) {\n+                try {\n+                    implementation.setBody(StringUtils.substringAfter(IOUtils.toString(getClass().\n+                            getResourceAsStream(\n+                                    \"/org/apache/syncope/client/console/implementations/\" + templateClassName\n+                                    + \".groovy\")),\n+                            \"*/\\n\"));\n+                } catch (IOException e) {\n+                    LOG.error(\"Could not load the expected Groovy template {} for {}\",\n+                            templateClassName, implementation.getType(), e);\n+                }\n+            }\n+        }\n+\n+        TextArea<String> groovyClass = new TextArea<>(\"groovyClass\", new PropertyModel<>(implementation, \"body\"));\n+        groovyClass.setMarkupId(\"groovyClass\").setOutputMarkupPlaceholderTag(true);\n+        groovyClass.setVisible(viewMode != ViewMode.JAVA_CLASS);\n+        groovyClass.setRequired(true);\n+        groovyClassContainer.add(groovyClass);\n+\n+        jsonClass.add(new AjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = 5538299138211283825L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                ClassPathScanImplementationLookup implementationLookup =\n+                        (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n+                                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+\n+                Class<?> clazz = null;\n+                switch (implementation.getType()) {\n+                    case REPORTLET:\n+                        clazz = implementationLookup.getReportletConfs().get(jsonClass.getModelObject());\n+                        break;\n+\n+                    case ACCOUNT_RULE:\n+                        clazz = implementationLookup.getAccountRuleConfs().get(jsonClass.getModelObject());\n+                        break;\n+\n+                    case PASSWORD_RULE:\n+                        clazz = implementationLookup.getPasswordRuleConfs().get(jsonClass.getModelObject());\n+                        break;\n+\n+                    default:\n+                }\n+\n+                if (clazz != null) {\n+                    try {\n+                        target.appendJavaScript(\"editor.getDoc().setValue('\"\n+                                + MAPPER.writeValueAsString(clazz.newInstance())\n+                                + \"');\");\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not generate a value for {}\", jsonClass.getModelObject(), e);\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public ImplementationTO getItem() {\n+        return implementation;\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        if (viewMode != ViewMode.JAVA_CLASS) {\n+            response.render(OnLoadHeaderItem.forScript(\n+                    \"editor = CodeMirror.fromTextArea(\"\n+                    + \"document.getElementById('groovyClassForm').children['groovyClass'], {\"\n+                    + \"  readOnly: false, \"\n+                    + \"  lineNumbers: true, \"\n+                    + \"  lineWrapping: true, \"\n+                    + \"  matchBrackets: true,\"\n+                    + \"  autoCloseBrackets: true,\"\n+                    + (viewMode == ViewMode.GROOVY_BODY ? \"  mode: 'text/x-groovy',\" : \"\")\n+                    + \"  autoRefresh: true\"\n+                    + \"});\"\n+                    + \"editor.on('change', updateTextArea);\"));\n+        }\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            if (create) {\n+                restClient.create(implementation);\n+            } else {\n+                restClient.update(implementation);\n+            }\n+\n+            modal.close(target);\n+            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating AttrTO\", e);\n+            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                    ? e.getClass().getName()\n+                    : e.getMessage());\n+        }\n+        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+\n+}"},{"sha":"e85a39e6192bece71c7551542086060d54fc55d5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersEditModalPanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -35,9 +35,7 @@ public class ParametersEditModalPanel extends AbstractModalPanel<AttrTO> {\n \n     private final AttrTO attrTO;\n \n-    private final BaseModal<AttrTO> parametersModal;\n-\n-    private final ConfRestClient confRestClient = new ConfRestClient();\n+    private final ConfRestClient restClient = new ConfRestClient();\n \n     public ParametersEditModalPanel(\n             final BaseModal<AttrTO> modal,\n@@ -46,7 +44,6 @@ public ParametersEditModalPanel(\n \n         super(modal, pageRef);\n         this.attrTO = attrTO;\n-        this.parametersModal = modal;\n         add(new ParametersDetailsPanel(\"parametersDetailsPanel\", getItem()));\n     }\n \n@@ -58,8 +55,8 @@ public final AttrTO getItem() {\n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         try {\n-            confRestClient.set(attrTO);\n-            parametersModal.close(target);\n+            restClient.set(attrTO);\n+            modal.close(target);\n             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating AttrTO\", e);"},{"sha":"e79c013cde733daf3b3ec910cbf46c4d10393850","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":13,"deletions":16,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -24,21 +24,21 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Optional;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.PropertyList;\n import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n@@ -61,6 +61,8 @@ public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n     private static final MIMETypesLoader MIME_TYPES_LOADER = (MIMETypesLoader) SyncopeConsoleApplication.get().\n             getServletContext().getAttribute(ConsoleInitializer.MIMETYPES_LOADER);\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     private final MultiFieldPanel<String> enumerationValues;\n \n     private final MultiFieldPanel<String> enumerationKeys;\n@@ -235,26 +237,21 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n         );\n \n-        IModel<List<String>> validatorsList = new LoadableDetachableModel<List<String>>() {\n+        IModel<List<String>> validators = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> validators = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.VALIDATOR);\n-                List<String> load = validators.isPresent()\n-                        ? new ArrayList<>(validators.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.VALIDATOR).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n-        final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<>(\"validatorClass\",\n-                getString(\"validatorClass\"), new PropertyModel<>(schemaTO, \"validatorClass\"));\n-        ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n-        validatorClass.setChoices(validatorsList.getObject());\n-        schemaForm.add(validatorClass);\n+        final AjaxDropDownChoicePanel<String> validator = new AjaxDropDownChoicePanel<>(\"validator\",\n+                getString(\"validator\"), new PropertyModel<>(schemaTO, \"validator\"));\n+        ((DropDownChoice) validator.getField()).setNullValid(true);\n+        validator.setChoices(validators.getObject());\n+        schemaForm.add(validator);\n \n         AutoCompleteTextField<String> mandatoryCondition = new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n "},{"sha":"763422e12f0019e01e3c375fe4d50f413f303e81","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":15,"deletions":21,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,12 +19,10 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -34,7 +32,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.ImplementationType;\n@@ -59,6 +56,8 @@ public class RealmDetails extends Panel {\n \n     private final PolicyRestClient policyRestClient = new PolicyRestClient();\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n@@ -81,19 +80,14 @@ protected Map<String, String> load() {\n         }\n     };\n \n-    private final IModel<List<String>> logicActionsClasses = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> logicActions = new LoadableDetachableModel<List<String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n-            Optional<JavaImplInfo> actions = SyncopeConsoleSession.get().getPlatformInfo().\n-                    getJavaImplInfo(ImplementationType.LOGIC_ACTIONS);\n-            List<String> load = actions.isPresent()\n-                    ? new ArrayList<>(actions.get().getClasses())\n-                    : new ArrayList<>();\n-            Collections.sort(load);\n-            return load;\n+            return implRestClient.list(ImplementationType.LOGIC_ACTIONS).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n@@ -106,7 +100,7 @@ public RealmDetails(final String id, final RealmTO realmTO) {\n     public RealmDetails(\n             final String id,\n             final RealmTO realmTO,\n-            final ActionsPanel<?> actions,\n+            final ActionsPanel<?> actionsPanel,\n             final boolean unwrapped) {\n \n         super(id);\n@@ -149,13 +143,13 @@ public RealmDetails(\n         ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n         container.add(passwordPolicy);\n \n-        AjaxPalettePanel<String> actionsClassNames = new AjaxPalettePanel.Builder<String>().\n+        AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                 setAllowMoveAll(true).setAllowOrder(true).\n-                build(\"actionsClassNames\",\n-                        new PropertyModel<List<String>>(realmTO, \"actionsClassNames\"),\n-                        new ListModel<>(logicActionsClasses.getObject()));\n-        actionsClassNames.setOutputMarkupId(true);\n-        container.add(actionsClassNames);\n+                build(\"actions\",\n+                        new PropertyModel<List<String>>(realmTO, \"actions\"),\n+                        new ListModel<>(logicActions.getObject()));\n+        actions.setOutputMarkupId(true);\n+        container.add(actions);\n \n         container.add(new AjaxPalettePanel.Builder<>().build(\"resources\",\n                 new PropertyModel<>(realmTO, \"resources\"),\n@@ -165,11 +159,11 @@ public RealmDetails(\n                 setEnabled(!SyncopeConstants.ROOT_REALM.equals(realmTO.getName())).\n                 setVisible(!SyncopeConstants.ROOT_REALM.equals(realmTO.getName())));\n \n-        if (actions == null) {\n+        if (actionsPanel == null) {\n             add(new Fragment(\"actions\", \"emptyFragment\", this).setRenderBodyOnly(true));\n         } else {\n             Fragment fragment = new Fragment(\"actions\", \"actionsFragment\", this);\n-            fragment.add(actions);\n+            fragment.add(actionsPanel);\n             add(fragment.setRenderBodyOnly(true));\n         }\n     }"},{"sha":"dd89ea168713de9c7c178a17036b15b86ef21af6","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/AccountPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -75,7 +75,7 @@ public void onClick(final AjaxRequestTarget target, final AccountPolicyTO ignore\n                         ruleCompositionModal, model.getObject().getKey(), PolicyType.ACCOUNT, pageRef)));\n \n                 ruleCompositionModal.header(new StringResourceModel(\n-                        \"policy.rule.conf\", AccountPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                        \"policy.rules\", AccountPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n                         ruleCompositionModal.getForm(), ENABLE, StandardEntitlement.POLICY_UPDATE);"},{"sha":"32fce976d4adcc8c453ae73901b10f0c4e4b00f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PasswordPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -72,7 +72,7 @@ public void onClick(final AjaxRequestTarget target, final PasswordPolicyTO ignor\n                         ruleCompositionModal, model.getObject().getKey(), PolicyType.PASSWORD, pageRef)));\n \n                 ruleCompositionModal.header(new StringResourceModel(\n-                        \"policy.rule.conf\", PasswordPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                        \"policy.rules\", PasswordPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n                         ruleCompositionModal.getForm(), ENABLE, StandardEntitlement.POLICY_UPDATE);"},{"sha":"2b5f8d4858c49c46ff5e34bd2b8dc443c9d36f52","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":54,"deletions":11,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,12 +18,14 @@\n  */\n package org.apache.syncope.client.console.policies;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -33,6 +35,7 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -44,6 +47,8 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.ComposablePolicy;\n import org.apache.syncope.common.lib.policy.RuleConf;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -72,6 +77,8 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n     private final BaseModal<T> baseModal;\n \n     private final String policy;\n@@ -88,7 +95,8 @@ protected PolicyRuleDirectoryPanel(\n \n         enableExitButton();\n \n-        this.addNewItemPanelBuilder(new PolicyRuleWizardBuilder(policy, type, new PolicyRuleWrapper(), pageRef), true);\n+        this.addNewItemPanelBuilder(\n+                new PolicyRuleWizardBuilder(policy, type, new PolicyRuleWrapper(true), pageRef), true);\n \n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.POLICY_UPDATE);\n         initResultTable();\n@@ -99,7 +107,7 @@ protected List<IColumn<PolicyRuleWrapper, String>> getColumns() {\n         final List<IColumn<PolicyRuleWrapper, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<>(\n-                new StringResourceModel(\"ruleConf\", this), \"name\", \"name\"));\n+                new StringResourceModel(\"rule\", this), \"implementationKey\", \"implementationKey\"));\n \n         columns.add(new AbstractColumn<PolicyRuleWrapper, String>(\n                 new StringResourceModel(\"configuration\", this)) {\n@@ -111,7 +119,12 @@ public void populateItem(\n                     final Item<ICellPopulator<PolicyRuleWrapper>> cellItem,\n                     final String componentId,\n                     final IModel<PolicyRuleWrapper> rowModel) {\n-                cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n+\n+                if (rowModel.getObject().getConf() == null) {\n+                    cellItem.add(new Label(componentId, \"\"));\n+                } else {\n+                    cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n+                }\n             }\n         });\n         return columns;\n@@ -131,9 +144,7 @@ public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper igno\n \n                 PolicyRuleDirectoryPanel.this.getTogglePanel().close(target);\n                 send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new PolicyRuleWrapper().setConf(clone).setName(null),\n-                                target));\n+                        new AjaxWizard.EditItemActionEvent<>(new PolicyRuleWrapper(true).setConf(clone), target));\n             }\n         }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_CREATE);\n         panel.add(new ActionLink<PolicyRuleWrapper>() {\n@@ -143,8 +154,13 @@ public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper igno\n             @Override\n             public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n                 PolicyRuleDirectoryPanel.this.getTogglePanel().close(target);\n-                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                if (model.getObject().getConf() == null) {\n+                    SyncopeConsoleSession.get().info(getString(\"noConf\"));\n+                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                } else {\n+                    send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n+                            new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                }\n             }\n         }, ActionLink.ActionType.EDIT, StandardEntitlement.POLICY_UPDATE);\n         panel.add(new ActionLink<PolicyRuleWrapper>() {\n@@ -214,21 +230,46 @@ protected class PolicyRuleDataProvider extends DirectoryDataProvider<PolicyRuleW\n \n         private static final long serialVersionUID = 4725679400450513556L;\n \n+        private final ImplementationRestClient implementationClient = new ImplementationRestClient();\n+\n         private final SortableDataProviderComparator<PolicyRuleWrapper> comparator;\n \n         public PolicyRuleDataProvider(final int paginatorRows) {\n             super(paginatorRows);\n \n             // Default sorting\n-            setSort(\"name\", SortOrder.ASCENDING);\n+            setSort(\"implementationKey\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n+        @SuppressWarnings(\"unchecked\")\n+        private List<PolicyRuleWrapper> getPolicyRuleWrappers(final ComposablePolicy policy) {\n+            return policy.getRules().stream().map(rule -> {\n+                ImplementationTO implementation = implementationClient.read(rule);\n+\n+                PolicyRuleWrapper wrapper = new PolicyRuleWrapper(false).\n+                        setImplementationKey(implementation.getKey()).\n+                        setImplementationEngine(implementation.getEngine());\n+                if (implementation.getEngine() == ImplementationEngine.JAVA) {\n+                    try {\n+                        RuleConf ruleConf = MAPPER.readValue(implementation.getBody(), RuleConf.class);\n+                        wrapper.setConf(ruleConf);\n+                    } catch (Exception e) {\n+                        LOG.error(\"During deserialization\", e);\n+                    }\n+                }\n+\n+                return wrapper;\n+            }).collect(Collectors.toList());\n+        }\n+\n         @Override\n         public Iterator<PolicyRuleWrapper> iterator(final long first, final long count) {\n             final T actual = restClient.getPolicy(policy);\n \n-            List<PolicyRuleWrapper> rules = PolicyRuleWizardBuilder.getPolicyRuleWrappers(actual);\n+            List<PolicyRuleWrapper> rules = actual instanceof ComposablePolicy\n+                    ? getPolicyRuleWrappers((ComposablePolicy) actual)\n+                    : Collections.emptyList();\n \n             Collections.sort(rules, comparator);\n             return rules.subList((int) first, (int) (first + count)).iterator();\n@@ -237,7 +278,9 @@ public Iterator<PolicyRuleWrapper> iterator(final long first, final long count)\n         @Override\n         public long size() {\n             final T actual = restClient.getPolicy(policy);\n-            return PolicyRuleWizardBuilder.getPolicyRuleWrappers(actual).size();\n+            return actual instanceof ComposablePolicy\n+                    ? getPolicyRuleWrappers((ComposablePolicy) actual).size()\n+                    : 0;\n         }\n \n         @Override"},{"sha":"91428814348f601c2ca088a5a0ffce4c20dfd98b","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleWizardBuilder.java","status":"modified","additions":55,"deletions":98,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -21,28 +21,25 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.BeanPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n-import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.ComposablePolicy;\n import org.apache.syncope.common.lib.policy.RuleConf;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.core.util.lang.PropertyResolver;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.LoadableDetachableModel;\n@@ -54,33 +51,7 @@ public class PolicyRuleWizardBuilder extends AjaxWizardBuilder<PolicyRuleWrapper\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private static final ImplementationRestClient IMPLEMENTATION_CLIENT = new ImplementationRestClient();\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public static List<PolicyRuleWrapper> getPolicyRuleWrappers(final AbstractPolicyTO policyTO) {\n-        Object rules = PropertyResolver.getValue(\"rules\", policyTO);\n-        if (rules instanceof List) {\n-            return ((List<String>) rules).stream().map(rule -> {\n-                ImplementationTO implementation = IMPLEMENTATION_CLIENT.read(rule);\n-\n-                PolicyRuleWrapper wrapper = null;\n-                if (implementation.getEngine() == ImplementationEngine.JAVA) {\n-                    try {\n-                        RuleConf ruleConf = MAPPER.readValue(implementation.getBody(), RuleConf.class);\n-                        wrapper = new PolicyRuleWrapper().\n-                                setImplementationKey(implementation.getKey()).\n-                                setName(ruleConf.getName());\n-                    } catch (Exception e) {\n-                        LOG.error(\"During deserialization\", e);\n-                    }\n-                }\n-\n-                return wrapper;\n-            }).filter(wrapper -> wrapper != null).collect(Collectors.toList());\n-        } else {\n-            return null;\n-        }\n-    }\n+    private final ImplementationRestClient implementationClient = new ImplementationRestClient();\n \n     private final PolicyRestClient restClient = new PolicyRestClient();\n \n@@ -91,9 +62,11 @@ public static List<PolicyRuleWrapper> getPolicyRuleWrappers(final AbstractPolicy\n     public PolicyRuleWizardBuilder(\n             final String policy,\n             final PolicyType type,\n-            final PolicyRuleWrapper reportlet,\n+            final PolicyRuleWrapper policyWrapper,\n             final PageReference pageRef) {\n-        super(reportlet, pageRef);\n+\n+        super(policyWrapper, pageRef);\n+\n         this.policy = policy;\n         this.type = type;\n     }\n@@ -109,28 +82,19 @@ protected Serializable onApplyInternal(final PolicyRuleWrapper modelObject) {\n             throw new IllegalStateException(\"Non composable policy\");\n         }\n \n-        ImplementationTO rule = new ImplementationTO();\n-        rule.setKey(modelObject.getName());\n-        rule.setEngine(ImplementationEngine.JAVA);\n-        rule.setType(composable instanceof AccountPolicyTO\n-                ? ImplementationType.ACCOUNT_RULE : ImplementationType.PASSWORD_RULE);\n-        try {\n-            rule.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n-\n-            rule = IMPLEMENTATION_CLIENT.create(rule);\n-        } catch (Exception e) {\n-            throw new IllegalStateException(\"Could not create rule\", e);\n+        if (modelObject.getImplementationEngine() == ImplementationEngine.JAVA) {\n+            ImplementationTO rule = implementationClient.read(modelObject.getImplementationKey());\n+            try {\n+                rule.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n+                implementationClient.update(rule);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n         }\n \n-        if (!modelObject.isNew()) {\n-            List<PolicyRuleWrapper> wrappers = getPolicyRuleWrappers(policyTO);\n-            wrappers.removeAll(wrappers.stream().\n-                    filter(wrapper -> wrapper.getName().equals(modelObject.getOldName())).collect(Collectors.toSet()));\n-            composable.getRules().clear();\n-            composable.getRules().addAll(wrappers.stream().\n-                    map(PolicyRuleWrapper::getImplementationKey).collect(Collectors.toSet()));\n+        if (modelObject.isNew()) {\n+            composable.getRules().add(modelObject.getImplementationKey());\n         }\n-        composable.getRules().add(rule.getKey());\n \n         restClient.updatePolicy(policyTO);\n         return modelObject;\n@@ -147,75 +111,69 @@ public class Profile extends WizardStep {\n \n         private static final long serialVersionUID = -3043839139187792810L;\n \n+        private final PolicyRuleWrapper rule;\n+\n         public Profile(final PolicyRuleWrapper rule) {\n-            final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                    \"name\", \"rule\", new PropertyModel<>(rule, \"name\"), false);\n-            name.addRequiredLabel();\n-            add(name);\n+            this.rule = rule;\n \n             final AjaxDropDownChoicePanel<String> conf = new AjaxDropDownChoicePanel<>(\n-                    \"configuration\", \"configuration\", new PropertyModel<String>(rule, \"conf\") {\n-\n-                private static final long serialVersionUID = -6427731218492117883L;\n-\n-                @Override\n-                public String getObject() {\n-                    return rule.getConf() == null ? null : rule.getConf().getClass().getName();\n-                }\n-\n-                @Override\n-                public void setObject(final String object) {\n-                    RuleConf conf = null;\n+                    \"rule\", \"rule\", new PropertyModel<>(rule, \"implementationKey\"));\n \n-                    try {\n-                        conf = RuleConf.class.cast(Class.forName(object).newInstance());\n-                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-                        LOG.warn(\"Error retrieving reportlet configuration instance\", e);\n-                    }\n-\n-                    rule.setConf(conf);\n-                }\n-            });\n-\n-            Optional<JavaImplInfo> providers;\n             List<String> choices;\n             switch (type) {\n                 case ACCOUNT:\n-                    providers = SyncopeConsoleSession.get().getPlatformInfo().\n-                            getJavaImplInfo(ImplementationType.ACCOUNT_RULE);\n-                    choices = providers.isPresent()\n-                            ? new ArrayList<>(providers.get().getClasses())\n-                            : new ArrayList<>();\n+                    choices = implementationClient.list(ImplementationType.ACCOUNT_RULE).stream().\n+                            map(EntityTO::getKey).sorted().collect(Collectors.toList());\n                     break;\n \n                 case PASSWORD:\n-                    providers = SyncopeConsoleSession.get().getPlatformInfo().\n-                            getJavaImplInfo(ImplementationType.PASSWORD_RULE);\n-                    choices = providers.isPresent()\n-                            ? new ArrayList<>(providers.get().getClasses())\n-                            : new ArrayList<>();\n+                    choices = implementationClient.list(ImplementationType.PASSWORD_RULE).stream().\n+                            map(EntityTO::getKey).sorted().collect(Collectors.toList());\n                     break;\n \n                 default:\n                     choices = new ArrayList<>();\n             }\n \n-            Collections.<String>sort(choices);\n             conf.setChoices(choices);\n-\n             conf.addRequiredLabel();\n+            conf.setNullValid(false);\n+            conf.setEnabled(rule.isNew());\n+            conf.add(new AjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -7133385027739964990L;\n+\n+                @Override\n+                protected void onEvent(final AjaxRequestTarget target) {\n+                    ImplementationTO implementation = implementationClient.read(conf.getModelObject());\n+                    rule.setImplementationEngine(implementation.getEngine());\n+                    if (implementation.getEngine() == ImplementationEngine.JAVA) {\n+                        try {\n+                            RuleConf ruleConf = MAPPER.readValue(implementation.getBody(), RuleConf.class);\n+                            rule.setConf(ruleConf);\n+                        } catch (Exception e) {\n+                            LOG.error(\"During deserialization\", e);\n+                        }\n+                    }\n+                }\n+            });\n             add(conf);\n         }\n+\n+        @Override\n+        public void applyState() {\n+            if (rule.getImplementationEngine() == ImplementationEngine.GROOVY) {\n+                getWizardModel().finish();\n+            }\n+        }\n     }\n \n     public class Configuration extends WizardStep {\n \n         private static final long serialVersionUID = -785981096328637758L;\n \n-        private final LoadableDetachableModel<Serializable> bean;\n-\n         public Configuration(final PolicyRuleWrapper rule) {\n-            bean = new LoadableDetachableModel<Serializable>() {\n+            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<Serializable>() {\n \n                 private static final long serialVersionUID = 2092144708018739371L;\n \n@@ -224,7 +182,6 @@ protected Serializable load() {\n                     return rule.getConf();\n                 }\n             };\n-\n             add(new BeanPanel<>(\"bean\", bean).setRenderBodyOnly(true));\n         }\n     }"},{"sha":"c8d52ea9f7defff1a5e578cb46fba4822092a475","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleWrapper.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWrapper.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,42 +20,43 @@\n \n import java.io.Serializable;\n import org.apache.syncope.common.lib.policy.RuleConf;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n \n public class PolicyRuleWrapper implements Serializable {\n \n     private static final long serialVersionUID = 2472755929742424558L;\n \n-    private String implementationKey;\n+    private final boolean isNew;\n \n-    private String oldname;\n+    private String implementationKey;\n \n-    private String name;\n+    private ImplementationEngine implementationEngine;\n \n     private RuleConf conf;\n \n-    public String getImplementationKey() {\n-        return implementationKey;\n+    public PolicyRuleWrapper(final boolean isNew) {\n+        this.isNew = isNew;\n     }\n \n     public boolean isNew() {\n-        return oldname == null;\n-    }\n-\n-    public String getOldName() {\n-        return this.oldname;\n+        return isNew;\n     }\n \n-    public String getName() {\n-        return this.name;\n+    public String getImplementationKey() {\n+        return implementationKey;\n     }\n \n     public PolicyRuleWrapper setImplementationKey(final String implementationKey) {\n         this.implementationKey = implementationKey;\n         return this;\n     }\n \n-    public PolicyRuleWrapper setName(final String name) {\n-        this.name = name;\n+    public ImplementationEngine getImplementationEngine() {\n+        return implementationEngine;\n+    }\n+\n+    public PolicyRuleWrapper setImplementationEngine(final ImplementationEngine implementationEngine) {\n+        this.implementationEngine = implementationEngine;\n         return this;\n     }\n "},{"sha":"313d869f511e4a794b6c9c83c42532da6e61ab59","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicySpecModalPanel.java","status":"modified","additions":42,"deletions":40,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -26,22 +26,21 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -61,6 +60,12 @@ public class PolicySpecModalPanel extends AbstractModalPanel<PullPolicyTO> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n \n+    private enum CorrelationRuleType {\n+        PLAIN_ATTRIBUTES,\n+        CUSTOM;\n+\n+    }\n+\n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n     private final IModel<List<CorrelationRule>> model;\n@@ -83,13 +88,9 @@ public PolicySpecModalPanel(\n \n             private static final long serialVersionUID = -8168676563540297301L;\n \n-            private List<CorrelationRule> rules =\n-                    (policyTO.getSpecification().getCorrelationRules() == null\n-                            ? Collections.<String>emptySet()\n-                            : policyTO.getSpecification().getCorrelationRules().keySet()).stream().\n-                            map(rule -> new CorrelationRule(\n-                            rule, policyTO.getSpecification().getCorrelationRules().get(rule))).\n-                            collect(Collectors.toList());\n+            private List<CorrelationRule> rules = policyTO.getSpecification().getCorrelationRules().keySet().stream().\n+                    map(rule -> new CorrelationRule(rule, policyTO.getSpecification().getCorrelationRules().get(rule))).\n+                    collect(Collectors.toList());\n \n             @Override\n             public List<CorrelationRule> getObject() {\n@@ -143,7 +144,9 @@ public static class CorrelationRulePanel extends Panel {\n \n         private static final long serialVersionUID = -4708008994320210839L;\n \n-        public CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule) {\n+        private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n+        CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule) {\n             super(id);\n \n             AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n@@ -152,25 +155,21 @@ public CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule)\n                     setChoices(new AnyTypeRestClient().list());\n             add(anyType);\n \n-            final AjaxDropDownChoicePanel<String> ruleType = new AjaxDropDownChoicePanel<>(\n-                    \"ruleType\", \"rule.type\", new PropertyModel<String>(rule.getObject(), \"type\"), false).\n+            final AjaxDropDownChoicePanel<CorrelationRuleType> ruleType = new AjaxDropDownChoicePanel<>(\n+                    \"ruleType\", \"rule.type\", new PropertyModel<CorrelationRuleType>(rule.getObject(), \"type\"), false).\n                     setNullValid(true).\n-                    setChoices(Arrays.asList(\"PLAIN ATTRIBUTES\", \"JAVA\"));\n+                    setChoices(Arrays.stream(CorrelationRuleType.values()).collect(Collectors.toList()));\n             add(ruleType);\n \n             // ---------------------------------------------------------------\n-            // Java rule palette\n+            // Custom rule palette\n             // ---------------------------------------------------------------\n-            Optional<JavaImplInfo> pullCorrelationRules = SyncopeConsoleSession.get().getPlatformInfo().\n-                    getJavaImplInfo(ImplementationType.PULL_CORRELATION_RULE);\n-            List<String> load = pullCorrelationRules.isPresent()\n-                    ? new ArrayList<>(pullCorrelationRules.get().getClasses())\n-                    : new ArrayList<>();\n-            Collections.sort(load);\n-            final AjaxDropDownChoicePanel<String> javaRule = new AjaxDropDownChoicePanel<>(\n-                    \"javaRule\", \"rule.java\", new PropertyModel<String>(rule.getObject(), \"rule\")).setChoices(load);\n-            javaRule.setOutputMarkupPlaceholderTag(true);\n-            add(javaRule.setVisible(\"JAVA\".equals(rule.getObject().getType())));\n+            List<String> rules = implRestClient.list(ImplementationType.PULL_CORRELATION_RULE).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+            final AjaxDropDownChoicePanel<String> customRule = new AjaxDropDownChoicePanel<>(\n+                    \"customRule\", \"rule.custom\", new PropertyModel<String>(rule.getObject(), \"rule\")).setChoices(rules);\n+            customRule.setOutputMarkupPlaceholderTag(true);\n+            add(customRule.setVisible(CorrelationRuleType.CUSTOM == rule.getObject().getType()));\n             // ---------------------------------------------------------------\n \n             // ---------------------------------------------------------------\n@@ -245,7 +244,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n \n-            add(jsonRule.setVisible(\"PLAIN ATTRIBUTES\".equals(rule.getObject().getType())));\n+            add(jsonRule.setVisible(CorrelationRuleType.PLAIN_ATTRIBUTES == rule.getObject().getType()));\n             // ---------------------------------------------------------------\n \n             ruleType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -254,23 +253,25 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n-                    switch (ruleType.getModelObject() == null ? StringUtils.EMPTY : ruleType.getModelObject()) {\n-                        case \"PLAIN ATTRIBUTES\":\n+                    switch (ruleType.getModelObject()) {\n+                        case PLAIN_ATTRIBUTES:\n                             jsonRule.setVisible(true);\n-                            javaRule.setVisible(false);\n+                            customRule.setVisible(false);\n                             jsonRule.reload(target);\n                             break;\n-                        case \"JAVA\":\n+\n+                        case CUSTOM:\n                             jsonRule.setVisible(false);\n-                            javaRule.setVisible(true);\n+                            customRule.setVisible(true);\n                             break;\n+\n                         default:\n-                            javaRule.setVisible(false);\n+                            customRule.setVisible(false);\n                             jsonRule.setVisible(false);\n \n                     }\n                     target.add(jsonRule);\n-                    target.add(javaRule);\n+                    target.add(customRule);\n                 }\n             });\n         }\n@@ -293,33 +294,34 @@ private static List<String> getPlainSchemas(final CorrelationRule rule) {\n         }\n     }\n \n-    protected static class CorrelationRule implements Serializable {\n+    private static class CorrelationRule implements Serializable {\n \n         private static final long serialVersionUID = 5250228867297353011L;\n \n         private String any;\n \n-        private String type;\n+        private CorrelationRuleType type;\n \n         private String rule;\n \n-        public CorrelationRule() {\n+        CorrelationRule() {\n             this.any = AnyTypeKind.USER.name();\n-            this.type = \"PLAIN ATTRIBUTES\";\n+            this.type = CorrelationRuleType.PLAIN_ATTRIBUTES;\n             this.rule = \"[]\";\n         }\n \n-        public CorrelationRule(final String any, final String rule) {\n+        CorrelationRule(final String any, final String rule) {\n             this.any = any;\n-            this.type = StringUtils.isEmpty(rule) || rule.trim().startsWith(\"[\") ? \"PLAIN ATTRIBUTES\" : \"JAVA\";\n+            this.type = StringUtils.isEmpty(rule) || rule.trim().startsWith(\"[\") ? CorrelationRuleType.PLAIN_ATTRIBUTES\n+                    : CorrelationRuleType.CUSTOM;\n             this.rule = rule;\n         }\n \n         public String getAny() {\n             return any;\n         }\n \n-        public String getType() {\n+        public CorrelationRuleType getType() {\n             return type;\n         }\n \n@@ -331,7 +333,7 @@ public void setAny(final String any) {\n             this.any = any;\n         }\n \n-        public void setType(final String type) {\n+        public void setType(final CorrelationRuleType type) {\n             this.type = type;\n         }\n "},{"sha":"4d55249b14a9cee529bcff68a934c7d2969f8886","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -63,7 +63,7 @@ public void onClick(final AjaxRequestTarget target, final PullPolicyTO ignore) {\n                         new PolicySpecModalPanel(model.getObject(), policySpecModal, pageRef)));\n \n                 policySpecModal.header(new StringResourceModel(\n-                        \"policy.rule.conf\", PullPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                        \"policy.rules\", PullPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n                         policySpecModal.getForm(), ENABLE, StandardEntitlement.POLICY_UPDATE);"},{"sha":"667cc92e80115e14b7ff5db390780456ae0ae9fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":47,"deletions":10,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,12 +18,14 @@\n  */\n package org.apache.syncope.client.console.reports;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -33,6 +35,7 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -42,7 +45,9 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.report.ReportletConf;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -68,6 +73,8 @@ public class ReportletDirectoryPanel extends DirectoryPanel<\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n     private final BaseModal<ReportTO> baseModal;\n \n     private final String report;\n@@ -84,7 +91,8 @@ public ReportletDirectoryPanel(\n \n         enableExitButton();\n \n-        this.addNewItemPanelBuilder(new ReportletWizardBuilder(report, new ReportletWrapper(), pageRef), true);\n+        this.addNewItemPanelBuilder(\n+                new ReportletWizardBuilder(report, new ReportletWrapper(true), pageRef), true);\n \n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.REPORT_UPDATE);\n         initResultTable();\n@@ -95,7 +103,7 @@ protected List<IColumn<ReportletWrapper, String>> getColumns() {\n         final List<IColumn<ReportletWrapper, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<>(\n-                new StringResourceModel(\"reportlet\", this), \"name\", \"name\"));\n+                new StringResourceModel(\"reportlet\", this), \"implementationKey\", \"implementationKey\"));\n \n         columns.add(new AbstractColumn<ReportletWrapper, String>(\n                 new StringResourceModel(\"configuration\", this)) {\n@@ -108,7 +116,11 @@ public void populateItem(\n                     final String componentId,\n                     final IModel<ReportletWrapper> rowModel) {\n \n-                cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n+                if (rowModel.getObject().getConf() == null) {\n+                    cellItem.add(new Label(componentId, \"\"));\n+                } else {\n+                    cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n+                }\n             }\n         });\n \n@@ -130,8 +142,7 @@ public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignor\n \n                 send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n                         new AjaxWizard.EditItemActionEvent<>(\n-                                new ReportletWrapper().setConf(clone).setName(null),\n-                                target));\n+                                new ReportletWrapper(true).setConf(clone), target));\n             }\n         }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_CREATE);\n         panel.add(new ActionLink<ReportletWrapper>() {\n@@ -141,8 +152,12 @@ public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignor\n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n                 ReportletDirectoryPanel.this.getTogglePanel().close(target);\n-                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                if (model.getObject().getConf() == null) {\n+                    SyncopeConsoleSession.get().info(getString(\"noConf\"));\n+                } else {\n+                    send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n+                            new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                }\n             }\n         }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE);\n         panel.add(new ActionLink<ReportletWrapper>() {\n@@ -210,21 +225,43 @@ protected class ReportDataProvider extends DirectoryDataProvider<ReportletWrappe\n \n         private static final long serialVersionUID = 4725679400450513556L;\n \n+        private final ImplementationRestClient implementationClient = new ImplementationRestClient();\n+\n         private final SortableDataProviderComparator<ReportletWrapper> comparator;\n \n         public ReportDataProvider(final int paginatorRows) {\n             super(paginatorRows);\n \n             //Default sorting\n-            setSort(\"name\", SortOrder.ASCENDING);\n+            setSort(\"implementationKey\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n+        private List<ReportletWrapper> getReportletWrappers(final ReportTO reportTO) {\n+            return reportTO.getReportlets().stream().map(reportlet -> {\n+                ImplementationTO implementation = implementationClient.read(reportlet);\n+\n+                ReportletWrapper wrapper = new ReportletWrapper(false).\n+                        setImplementationKey(implementation.getKey()).\n+                        setImplementationEngine(implementation.getEngine());\n+                if (implementation.getEngine() == ImplementationEngine.JAVA) {\n+                    try {\n+                        ReportletConf reportletConf = MAPPER.readValue(implementation.getBody(), ReportletConf.class);\n+                        wrapper.setConf(reportletConf);\n+                    } catch (Exception e) {\n+                        LOG.error(\"During deserialization\", e);\n+                    }\n+                }\n+\n+                return wrapper;\n+            }).filter(wrapper -> wrapper != null).collect(Collectors.toList());\n+        }\n+\n         @Override\n         public Iterator<ReportletWrapper> iterator(final long first, final long count) {\n             final ReportTO actual = restClient.read(report);\n \n-            List<ReportletWrapper> reportlets = ReportletWizardBuilder.getReportletWrappers(actual);\n+            List<ReportletWrapper> reportlets = getReportletWrappers(actual);\n \n             Collections.sort(reportlets, comparator);\n             return reportlets.subList((int) first, (int) (first + count)).iterator();\n@@ -233,7 +270,7 @@ public Iterator<ReportletWrapper> iterator(final long first, final long count) {\n         @Override\n         public long size() {\n             final ReportTO actual = restClient.read(report);\n-            return ReportletWizardBuilder.getReportletWrappers(actual).size();\n+            return getReportletWrappers(actual).size();\n         }\n \n         @Override"},{"sha":"86681031a39f300f0cff7b04e34dc4e77949dde3","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":34,"deletions":79,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,25 +20,22 @@\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.BeanPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n-import org.apache.syncope.common.lib.report.AbstractReportletConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.PropertyModel;\n@@ -50,27 +47,7 @@ public class ReportletWizardBuilder extends AjaxWizardBuilder<ReportletWrapper>\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private static final ImplementationRestClient IMPLEMENTATION_CLIENT = new ImplementationRestClient();\n-\n-    public static List<ReportletWrapper> getReportletWrappers(final ReportTO reportTO) {\n-        return reportTO.getReportlets().stream().map(reportlet -> {\n-            ImplementationTO implementation = IMPLEMENTATION_CLIENT.read(reportlet);\n-\n-            ReportletWrapper wrapper = null;\n-            if (implementation.getEngine() == ImplementationEngine.JAVA) {\n-                try {\n-                    ReportletConf reportletCOnf = MAPPER.readValue(implementation.getBody(), ReportletConf.class);\n-                    wrapper = new ReportletWrapper().\n-                            setImplementationKey(implementation.getKey()).\n-                            setName(reportletCOnf.getName());\n-                } catch (Exception e) {\n-                    LOG.error(\"During deserialization\", e);\n-                }\n-            }\n-\n-            return wrapper;\n-        }).filter(wrapper -> wrapper != null).collect(Collectors.toList());\n-    }\n+    private final ImplementationRestClient implementationClient = new ImplementationRestClient();\n \n     private final ReportRestClient restClient = new ReportRestClient();\n \n@@ -86,28 +63,20 @@ public ReportletWizardBuilder(\n \n     @Override\n     protected Serializable onApplyInternal(final ReportletWrapper modelObject) {\n-        ImplementationTO reportlet = new ImplementationTO();\n-        reportlet.setKey(modelObject.getName());\n-        reportlet.setEngine(ImplementationEngine.JAVA);\n-        reportlet.setType(ImplementationType.REPORTLET);\n-        try {\n-            reportlet.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n-\n-            reportlet = IMPLEMENTATION_CLIENT.create(reportlet);\n-        } catch (Exception e) {\n-            throw new IllegalStateException(\"Could not create reportlet\", e);\n+        if (modelObject.getImplementationEngine() == ImplementationEngine.JAVA) {\n+            ImplementationTO reportlet = implementationClient.read(modelObject.getImplementationKey());\n+            try {\n+                reportlet.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n+                implementationClient.update(reportlet);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n         }\n \n         ReportTO reportTO = restClient.read(report);\n-        if (!modelObject.isNew()) {\n-            List<ReportletWrapper> wrappers = getReportletWrappers(reportTO);\n-            wrappers.removeAll(wrappers.stream().\n-                    filter(wrapper -> wrapper.getName().equals(modelObject.getOldName())).collect(Collectors.toSet()));\n-            reportTO.getReportlets().clear();\n-            reportTO.getReportlets().addAll(wrappers.stream().\n-                    map(ReportletWrapper::getImplementationKey).collect(Collectors.toSet()));\n+        if (modelObject.isNew()) {\n+            reportTO.getReportlets().add(modelObject.getImplementationKey());\n         }\n-        reportTO.getReportlets().add(reportlet.getKey());\n \n         restClient.update(reportTO);\n         return modelObject;\n@@ -126,45 +95,32 @@ public class Profile extends WizardStep {\n         private static final long serialVersionUID = -3043839139187792810L;\n \n         public Profile(final ReportletWrapper reportlet) {\n-\n-            final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                    \"name\", \"reportlet\", new PropertyModel<>(reportlet, \"name\"), false);\n-            name.addRequiredLabel();\n-            name.setEnabled(true);\n-            add(name);\n-\n             final AjaxDropDownChoicePanel<String> conf = new AjaxDropDownChoicePanel<>(\n-                    \"configuration\", getString(\"configuration\"), new PropertyModel<String>(reportlet, \"conf\") {\n+                    \"reportlet\", getString(\"reportlet\"), new PropertyModel<String>(reportlet, \"implementationKey\"));\n \n-                private static final long serialVersionUID = -6427731218492117883L;\n+            conf.setChoices(implementationClient.list(ImplementationType.REPORTLET).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList()));\n+            conf.addRequiredLabel();\n+            conf.setNullValid(false);\n+            conf.setEnabled(reportlet.isNew());\n+            conf.add(new AjaxEventBehavior(Constants.ON_CHANGE) {\n \n-                @Override\n-                public String getObject() {\n-                    return reportlet.getConf() == null ? null : reportlet.getConf().getClass().getName();\n-                }\n+                private static final long serialVersionUID = -7133385027739964990L;\n \n                 @Override\n-                public void setObject(final String object) {\n-                    AbstractReportletConf conf = null;\n-\n-                    try {\n-                        conf = AbstractReportletConf.class.cast(Class.forName(object).newInstance());\n-                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-                        LOG.warn(\"Error retrieving reportlet configuration instance\", e);\n+                protected void onEvent(final AjaxRequestTarget target) {\n+                    ImplementationTO implementation = implementationClient.read(conf.getModelObject());\n+                    reportlet.setImplementationEngine(implementation.getEngine());\n+                    if (implementation.getEngine() == ImplementationEngine.JAVA) {\n+                        try {\n+                            ReportletConf conf = MAPPER.readValue(implementation.getBody(), ReportletConf.class);\n+                            reportlet.setConf(conf);\n+                        } catch (Exception e) {\n+                            LOG.error(\"During deserialization\", e);\n+                        }\n                     }\n-\n-                    reportlet.setConf(conf);\n                 }\n             });\n-\n-            Optional<JavaImplInfo> reportlets = SyncopeConsoleSession.get().getPlatformInfo().\n-                    getJavaImplInfo(ImplementationType.REPORTLET);\n-            List<String> choices = reportlets.isPresent()\n-                    ? new ArrayList<>(reportlets.get().getClasses())\n-                    : new ArrayList<>();\n-            conf.setChoices(choices);\n-\n-            conf.addRequiredLabel();\n             add(conf);\n         }\n     }\n@@ -183,8 +139,7 @@ protected Serializable load() {\n                     return reportlet.getConf();\n                 }\n             };\n-\n-            add(new BeanPanel<>(\"bean\", bean, reportlet.getSCondWrapper(), \"name\", \"reportletClassName\").\n+            add(new BeanPanel<>(\"bean\", bean, reportlet.getSCondWrapper(), \"name\", \"reportlet\").\n                     setRenderBodyOnly(true));\n         }\n     }"},{"sha":"be628a7e6fe3ead9ca8e637a909716899ee894a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWrapper.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWrapper.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -26,28 +26,29 @@\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n \n public class ReportletWrapper implements Serializable {\n \n     private static final long serialVersionUID = 2472755929742424558L;\n \n-    private String implementationKey;\n+    private final boolean isNew;\n \n-    private String oldname;\n+    private String implementationKey;\n \n-    private String name;\n+    private ImplementationEngine implementationEngine;\n \n     private ReportletConf conf;\n \n     private final Map<String, Pair<AbstractFiqlSearchConditionBuilder, List<SearchClause>>> scondWrapper;\n \n-    public ReportletWrapper() {\n-        this(null);\n+    public ReportletWrapper(final boolean isNew) {\n+        this.isNew = isNew;\n+        this.scondWrapper = new HashMap<>();\n     }\n \n-    public ReportletWrapper(final String name) {\n-        this.oldname = name;\n-        this.scondWrapper = new HashMap<>();\n+    public boolean isNew() {\n+        return isNew;\n     }\n \n     public String getImplementationKey() {\n@@ -59,20 +60,12 @@ public ReportletWrapper setImplementationKey(final String implementationKey) {\n         return this;\n     }\n \n-    public boolean isNew() {\n-        return oldname == null;\n-    }\n-\n-    public String getOldName() {\n-        return this.oldname;\n-    }\n-\n-    public String getName() {\n-        return this.name;\n+    public ImplementationEngine getImplementationEngine() {\n+        return implementationEngine;\n     }\n \n-    public ReportletWrapper setName(final String name) {\n-        this.name = name;\n+    public ReportletWrapper setImplementationEngine(final ImplementationEngine implementationEngine) {\n+        this.implementationEngine = implementationEngine;\n         return this;\n     }\n "},{"sha":"106d2715034870450ed42f65a7822c85fde29fe1","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ImplementationRestClient.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FImplementationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FImplementationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FImplementationRestClient.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,17 +18,20 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getObject;\n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n+import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.rest.api.service.ImplementationService;\n \n public class ImplementationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -4111950555473526287L;\n \n+    public List<ImplementationTO> list(final ImplementationType type) {\n+        return getService(ImplementationService.class).list(type);\n+    }\n+\n     public ImplementationTO read(final String key) {\n         return getService(ImplementationService.class).read(key);\n     }\n@@ -38,4 +41,13 @@ public ImplementationTO create(final ImplementationTO implementation) {\n         Response response = service.create(implementation);\n         return getObject(service, response.getLocation(), ImplementationTO.class);\n     }\n+\n+    public void update(final ImplementationTO implementation) {\n+        getService(ImplementationService.class).update(implementation);\n+    }\n+\n+    public void delete(final String key) {\n+        getService(ImplementationService.class).delete(key);\n+    }\n+\n }"},{"sha":"5135193cfc6935a22698c2321988a8ebcfbc955a","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -132,8 +132,8 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"name\", this), \"name\", \"name\"));\n \n-        columns.add(new PropertyColumn<T, String>(new StringResourceModel(\n-                \"jobDelegateClassName\", this), \"jobDelegateClassName\", \"jobDelegateClassName\") {\n+        columns.add(new PropertyColumn<T, String>(\n+                new StringResourceModel(\"jobDelegate\", this), \"jobDelegate\", \"jobDelegate\") {\n \n             private static final long serialVersionUID = -3223917055078733093L;\n "},{"sha":"03e4338fa4b9223426aeb599fee86cac686053a6","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":41,"deletions":63,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,14 +19,12 @@\n package org.apache.syncope.client.console.tasks;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n@@ -35,8 +33,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n@@ -61,6 +59,8 @@\n \n     private final TaskRestClient taskRestClient = new TaskRestClient();\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     private PushTaskWrapper wrapper;\n \n     private CrontabPanel crontabPanel;\n@@ -113,68 +113,47 @@ public class Profile extends WizardStep {\n \n         private static final long serialVersionUID = -3043839139187792810L;\n \n-        private final IModel<List<String>> taskJobClasses = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> taskJobDelegates = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> taskJobDelegates = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.TASKJOB_DELEGATE);\n-                List<String> load = taskJobDelegates.isPresent()\n-                        ? new ArrayList<>(taskJobDelegates.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.TASKJOB_DELEGATE).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n-        private final IModel<List<String>> reconciliationFilterBuilderClasses =\n-                new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> reconFilterBuilders = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> reconFilterBuilders = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.RECON_FILTER_BUILDER);\n-                List<String> load = reconFilterBuilders.isPresent()\n-                        ? new ArrayList<>(reconFilterBuilders.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.RECON_FILTER_BUILDER).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n-        private final IModel<List<String>> pullActionsClasses = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> pullActions = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> pullActions = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.PULL_ACTIONS);\n-                List<String> load = pullActions.isPresent()\n-                        ? new ArrayList<>(pullActions.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.PULL_ACTIONS).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n-        private final IModel<List<String>> pushActionsClasses = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> pushActions = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                Optional<JavaImplInfo> pushActions = SyncopeConsoleSession.get().getPlatformInfo().\n-                        getJavaImplInfo(ImplementationType.PUSH_ACTIONS);\n-                List<String> load = pushActions.isPresent()\n-                        ? new ArrayList<>(pushActions.get().getClasses())\n-                        : new ArrayList<>();\n-                Collections.sort(load);\n-                return load;\n+                return implRestClient.list(ImplementationType.PUSH_ACTIONS).stream().\n+                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n@@ -194,14 +173,13 @@ public Profile(final SchedTaskTO taskTO) {\n                     false);\n             add(active);\n \n-            AjaxDropDownChoicePanel<String> jobDelegateClassName = new AjaxDropDownChoicePanel<>(\n-                    \"jobDelegateClassName\", \"jobDelegateClassName\",\n-                    new PropertyModel<>(taskTO, \"jobDelegateClassName\"), false);\n-            jobDelegateClassName.setChoices(taskJobClasses.getObject());\n-            jobDelegateClassName.addRequiredLabel();\n-            jobDelegateClassName.setEnabled(taskTO.getKey() == null);\n-            jobDelegateClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n-            add(jobDelegateClassName);\n+            AjaxDropDownChoicePanel<String> jobDelegate = new AjaxDropDownChoicePanel<>(\n+                    \"jobDelegate\", \"jobDelegate\", new PropertyModel<>(taskTO, \"jobDelegate\"), false);\n+            jobDelegate.setChoices(taskJobDelegates.getObject());\n+            jobDelegate.addRequiredLabel();\n+            jobDelegate.setEnabled(taskTO.getKey() == null);\n+            jobDelegate.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n+            add(jobDelegate);\n \n             // ------------------------------\n             // Only for pull tasks\n@@ -225,26 +203,26 @@ public Profile(final SchedTaskTO taskTO) {\n             pullMode.setNullValid(!(taskTO instanceof PullTaskTO));\n             pullTaskSpecifics.add(pullMode);\n \n-            final AjaxDropDownChoicePanel<String> reconciliationFilterBuilderClassName = new AjaxDropDownChoicePanel<>(\n-                    \"reconciliationFilterBuilderClassName\", \"reconciliationFilterBuilderClassName\",\n-                    new PropertyModel<>(taskTO, \"reconciliationFilterBuilderClassName\"), false);\n-            reconciliationFilterBuilderClassName.setChoices(reconciliationFilterBuilderClasses.getObject());\n-            reconciliationFilterBuilderClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n-            reconciliationFilterBuilderClassName.setEnabled(isFiltered);\n-            reconciliationFilterBuilderClassName.setRequired(isFiltered);\n-            pullTaskSpecifics.add(reconciliationFilterBuilderClassName);\n+            final AjaxDropDownChoicePanel<String> reconFilterBuilder = new AjaxDropDownChoicePanel<>(\n+                    \"reconFilterBuilder\", \"reconFilterBuilder\",\n+                    new PropertyModel<>(taskTO, \"reconFilterBuilder\"), false);\n+            reconFilterBuilder.setChoices(reconFilterBuilders.getObject());\n+            reconFilterBuilder.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n+            reconFilterBuilder.setEnabled(isFiltered);\n+            reconFilterBuilder.setRequired(isFiltered);\n+            pullTaskSpecifics.add(reconFilterBuilder);\n \n             pullMode.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n-                    reconciliationFilterBuilderClassName.setEnabled(\n+                    reconFilterBuilder.setEnabled(\n                             pullMode.getModelObject() == PullMode.FILTERED_RECONCILIATION);\n-                    reconciliationFilterBuilderClassName.setRequired(\n+                    reconFilterBuilder.setRequired(\n                             pullMode.getModelObject() == PullMode.FILTERED_RECONCILIATION);\n-                    target.add(reconciliationFilterBuilderClassName);\n+                    target.add(reconFilterBuilder);\n                 }\n             });\n \n@@ -285,19 +263,19 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             add(provisioningTaskSpecifics.setRenderBodyOnly(true));\n \n             if (taskTO instanceof AbstractProvisioningTaskTO) {\n-                jobDelegateClassName.setEnabled(false).setVisible(false);\n+                jobDelegate.setEnabled(false).setVisible(false);\n             } else {\n                 provisioningTaskSpecifics.setEnabled(false).setVisible(false);\n             }\n \n-            AjaxPalettePanel<String> actionsClassNames = new AjaxPalettePanel.Builder<String>().\n+            AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                     setAllowMoveAll(true).setAllowOrder(true).\n-                    build(\"actionsClassNames\",\n-                            new PropertyModel<List<String>>(taskTO, \"actionsClassNames\"),\n+                    build(\"actions\",\n+                            new PropertyModel<List<String>>(taskTO, \"actions\"),\n                             new ListModel<>(taskTO instanceof PushTaskTO\n-                                    ? pushActionsClasses.getObject() : pullActionsClasses.getObject()));\n-            actionsClassNames.setOutputMarkupId(true);\n-            provisioningTaskSpecifics.add(actionsClassNames);\n+                                    ? pushActions.getObject() : pullActions.getObject()));\n+            actions.setOutputMarkupId(true);\n+            provisioningTaskSpecifics.add(actions);\n \n             AjaxDropDownChoicePanel<MatchingRule> matchingRule = new AjaxDropDownChoicePanel<>(\n                     \"matchingRule\", \"matchingRule\", new PropertyModel<>(taskTO, \"matchingRule\"), false);"},{"sha":"da5f45139278dd3e3fa9dd0707d6c68408b48f0d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -112,11 +112,11 @@ public void updateHeader(\n         } else if (modelObject instanceof StatusBean) {\n             header = ((StatusBean) modelObject).getResource();\n         } else if (modelObject instanceof PolicyRuleWrapper) {\n-            header = ((PolicyRuleWrapper) modelObject).getName();\n+            header = ((PolicyRuleWrapper) modelObject).getImplementationKey();\n         } else if (modelObject instanceof PolicyRuleWrapper) {\n-            header = ((PolicyRuleWrapper) modelObject).getName();\n+            header = ((PolicyRuleWrapper) modelObject).getImplementationKey();\n         } else if (modelObject instanceof ReportletWrapper) {\n-            header = ((ReportletWrapper) modelObject).getName();\n+            header = ((ReportletWrapper) modelObject).getImplementationKey();\n         } else if (modelObject instanceof JobTO) {\n             header = ((JobTO) modelObject).getRefKey() == null\n                     ? ((JobTO) modelObject).getRefDesc() : ((JobTO) modelObject).getRefKey();"},{"sha":"6e9a8924cb92c08ab2a0cf551a93450abac9ca4b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -54,7 +54,7 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n@@ -65,7 +65,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class Ownership extends WizardStep implements WizardModel.ICondition {\n+public class Ownership extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 855618618337931784L;\n "},{"sha":"2c333b13add87f72e94853c3ba5f52d2c5643c3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -63,7 +63,7 @@\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.wizard.IWizard;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n@@ -77,7 +77,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class Relationships extends WizardStep implements WizardModel.ICondition {\n+public class Relationships extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 855618618337931784L;\n "},{"sha":"ccf71f24cff8a555a0e5d5465376c99f3efcc90a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -32,13 +32,13 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class Resources extends WizardStep implements WizardModel.ICondition {\n+public class Resources extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 552437609667518888L;\n "},{"sha":"c93d6b0bd41ef76e4bef36d30250820f405b9e18","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -29,17 +29,15 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public abstract class AbstractConnConfPanel<T extends AbstractBaseBean>\n-        extends WizardStep\n-        implements WizardModel.ICondition {\n+public abstract class AbstractConnConfPanel<T extends AbstractBaseBean> extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n "},{"sha":"1aa783f1c6855c1598bfb9e9e808cbf3c5e9274a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ItemTransformersTogglePanel.java","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,15 +19,14 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.wicket.PageReference;\n@@ -44,6 +43,8 @@ public class ItemTransformersTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -3195479265440591519L;\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     private ItemTO item;\n \n     public ItemTransformersTogglePanel(final WebMarkupContainer container, final PageReference pageRef) {\n@@ -65,12 +66,8 @@ protected List<String> load() {\n         Form<?> form = new Form<>(\"form\");\n         addInnerObject(form);\n \n-        Optional<JavaImplInfo> itemTransformers = SyncopeConsoleSession.get().getPlatformInfo().\n-                getJavaImplInfo(ImplementationType.ITEM_TRANSFORMER);\n-        List<String> choices = itemTransformers.isPresent()\n-                ? new ArrayList<>(itemTransformers.get().getClasses())\n-                : new ArrayList<>();\n-        Collections.sort(choices);\n+        List<String> choices = implRestClient.list(ImplementationType.ITEM_TRANSFORMER).stream().\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n \n         form.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).setRenderer(new IChoiceRenderer<String>() {\n \n@@ -109,11 +106,6 @@ public String getObject(final String id, final IModel<? extends List<? extends S\n             @Override\n             public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 toggle(target, false);\n-\n-                // [!] this is required to disable changed with close button\n-                item.getTransformers().clear();\n-                item.getTransformers().addAll(model.getObject());\n-\n                 target.add(container);\n             }\n "},{"sha":"0f1428499f4a963c93b20db84464ce89f88a4897","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ObjectTypeTogglePanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -34,21 +34,17 @@ public abstract class ObjectTypeTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -1366846136630731264L;\n \n-    protected PropertyModel<String> typeModel;\n-\n-    private final Form<Object> form;\n-\n     ObjectTypeTogglePanel(\n             final String id,\n             final ResourceProvision item,\n             final LoadableDetachableModel<List<String>> anyTypes,\n             final PageReference pageRef) {\n         super(id, pageRef);\n \n-        form = new Form<>(\"objectTypeForm\");\n+        Form<?> form = new Form<>(\"objectTypeForm\");\n         addInnerObject(form);\n \n-        typeModel = new PropertyModel<>(item, \"anyType\");\n+        PropertyModel<String> typeModel = new PropertyModel<>(item, \"anyType\");\n \n         form.add(new AjaxDropDownChoicePanel<>(\n                 \"type\", \"type\", typeModel, false)."},{"sha":"ce2943844ff5f7125bb0d98d726d45f54b90961e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -37,6 +37,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.Model;\n@@ -92,7 +93,7 @@ protected void setObjectClassModelObject(final String type) {\n     /**\n      * AuxClasses definition step.\n      */\n-    private static final class AuxClasses extends WizardStep implements WizardModel.ICondition {\n+    private static final class AuxClasses extends WizardStep implements ICondition {\n \n         private static final long serialVersionUID = 5315236191866427500L;\n "},{"sha":"52f3b0da9b1bb4a7a88c89b4a3df5b9e06b5bf9b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.java","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,19 +18,16 @@\n  */\n package org.apache.syncope.client.console.wizards.resources;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.info.JavaImplInfo;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -47,19 +44,16 @@ public class ResourceDetailsPanel extends WizardStep {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private final IModel<List<String>> propagationActionsClasses = new LoadableDetachableModel<List<String>>() {\n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n+    private final IModel<List<String>> propagationActions = new LoadableDetachableModel<List<String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n-            Optional<JavaImplInfo> propagationActions = SyncopeConsoleSession.get().getPlatformInfo().\n-                    getJavaImplInfo(ImplementationType.PROPAGATION_ACTIONS);\n-            List<String> load = propagationActions.isPresent()\n-                    ? new ArrayList<>(propagationActions.get().getClasses())\n-                    : new ArrayList<>();\n-            Collections.sort(load);\n-            return load;\n+            return implRestClient.list(ImplementationType.PROPAGATION_ACTIONS).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n@@ -98,9 +92,9 @@ public ResourceDetailsPanel(final ResourceTO resourceTO, final boolean createFla\n \n         container.add(new AjaxPalettePanel.Builder<String>().\n                 setAllowMoveAll(true).setAllowOrder(true).\n-                build(\"propagationActionsClassNames\",\n-                        new PropertyModel<List<String>>(resourceTO, \"propagationActionsClassNames\"),\n-                        new ListModel<>(propagationActionsClasses.getObject())).\n+                build(\"propagationActions\",\n+                        new PropertyModel<List<String>>(resourceTO, \"propagationActions\"),\n+                        new ListModel<>(propagationActions.getObject())).\n                 setOutputMarkupId(true));\n \n         container.add(new AjaxDropDownChoicePanel<>("},{"sha":"bc9a0099bb54bbfe51e5ef27a1d9eca6cb91ad39","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -41,6 +41,7 @@ page.topology=org.apache.syncope.client.console.topology.Topology\n page.reports=org.apache.syncope.client.console.pages.Reports\n page.workflow=org.apache.syncope.client.console.pages.Workflow\n page.audit=org.apache.syncope.client.console.pages.Audit\n+page.implementations=org.apache.syncope.client.console.pages.Implementations\n page.logs=org.apache.syncope.client.console.pages.Logs\n page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n page.types=org.apache.syncope.client.console.pages.Types"},{"sha":"cca9deaecf7c7abbc4e4b94b27e3da6bdd0a27fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -71,3 +71,4 @@ connectors.confirm.reload=This request is potentially dangerous for running oper\n intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n confirmGlobalLogout=Do you really want to perform global logout?\n administration=Administration\n+implementations=Implementations"},{"sha":"8aadcef18272d0c75aedfd1d591cb52a19a4a951","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -71,3 +71,4 @@ connectors.confirm.reload=Questa richiesta \\u00e8 potenzialmente dannosa per le\n intAttrNameInfo.help=Oltre agli attributi auto-completati, \\u00e8 possibile fare riferimento anche a gruppi, any object e membership (se applicabile); ad esempio:\n confirmGlobalLogout=Vuoi davvero procedere al logout globale?\n administration=Amministrazione\n+implementations=Implementazioni"},{"sha":"6916cf26347bed97ec16675cbba1ce9210839509","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -71,3 +71,4 @@ connectors.confirm.reload=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigos\n intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n confirmGlobalLogout=Do you really want to perform global logout?\n administration=Administra\\u00e7\\u00e3o\n+implementations=Implementa\\u00e7\\u00f5es"},{"sha":"fc2a17aa4aa29d56c73ba2f5658a058093aca4b4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -31,7 +31,7 @@ confirmUnlink=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u043\n confirmUnassign=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c \\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u0430 \\u0434\\u043b\\u044f \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432?\n confirmDeprovision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043e\\u0442\\u043e\\u0437\\u0432\\u0430\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n confirmProvision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n-confirmClone=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043a\\u043b\\u043e\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b\\u003f\n+confirmClone=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043a\\u043b\\u043e\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n dropDownChoiceField.nullValid=\\u0412\\u044b\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\n DateTimeField$HoursValidator=\\u0427\\u0430\\u0441\\u044b \\u0434\\u043e\\u043b\\u0436\\u043d\\u044b \\u0431\\u044b\\u0442\\u044c \\u0443\\u043a\\u0430\\u0437\\u0430\\u043d\\u044b \\u0432 \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0435 (1, 12)\n error=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430\n@@ -70,3 +70,4 @@ connectors.confirm.reload=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\n intAttrNameInfo.help=\\u041f\\u043e\\u043c\\u0438\\u043c\\u043e \\u0430\\u0432\\u0442\\u043e\\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u043e\\u0432, \\u0432\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0433\\u0440\\u0443\\u043f\\u043f\\u044b, \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b \\u0438 \\u0447\\u043b\\u0435\\u043d\\u0441\\u0442\\u0432\\u043e (\\u043f\\u0440\\u0438 \\u043d\\u0430\\u043b\\u0438\\u0447\\u0438\\u0438), \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\n confirmGlobalLogout=Do you really want to perform global logout?\n administration=Administration\n+implementations=\\u0420\\u0435\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438"},{"sha":"978e76db1e8578c10d94f7bd66031ddc633d414f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyAccountRule.groovy","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyAccountRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyAccountRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyAccountRule.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.AccountRule\n+import org.apache.syncope.core.persistence.api.entity.user.User\n+\n+@CompileStatic\n+class MyAccountRule implements AccountRule {\n+  \n+  void enforce(User user) {\n+  }\n+\n+}"},{"sha":"fd4b5d41cc2d12b651dec3fa3f1b5382d0657097","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyItemTransformer.groovy","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyItemTransformer.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyItemTransformer.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyItemTransformer.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.to.EntityTO\n+import org.apache.syncope.core.persistence.api.entity.Entity\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue\n+import org.apache.syncope.core.persistence.api.entity.resource.Item\n+import org.apache.syncope.core.provisioning.api.data.ItemTransformer\n+\n+@CompileStatic\n+class MyItemTransformer implements ItemTransformer {\n+\t\n+  @Override\n+  List<PlainAttrValue> beforePropagation(\n+    Item item,\n+    Entity entity,\n+    List<PlainAttrValue> values) {\n+\n+    return values;\n+  }\n+    \n+  @Override\n+  List<Object> beforePull(\n+    Item item,\n+    EntityTO entityTO,\n+    List<Object> values) {\n+\n+    return values;\n+  }\n+}"},{"sha":"df22aa231bf61092d18e3258b1b5f42a1d793368","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyLogicActions.groovy","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.patch.AnyPatch\n+import org.apache.syncope.common.lib.patch.AttrPatch\n+import org.apache.syncope.common.lib.to.AnyTO\n+import org.apache.syncope.common.lib.to.AttrTO\n+import org.apache.syncope.core.provisioning.api.LogicActions\n+\n+@CompileStatic\n+class MyLogicActions implements LogicActions {\n+  \n+  @Override\n+  <A extends AnyTO> A beforeCreate(final A input) {\n+    return input;\n+  }\n+\n+  @Override\n+  <M extends AnyPatch> M beforeUpdate(final M input) {\n+    return input;\n+  }\n+}"},{"sha":"dab38baca8abf80bc6a0cd3e175f4a59c52de93a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPasswordRule.groovy","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPasswordRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPasswordRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPasswordRule.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.PasswordRule\n+import org.apache.syncope.core.persistence.api.entity.user.User\n+\n+@CompileStatic\n+class MyPasswordRule implements PasswordRule {\n+  \n+  void enforce(User user) {\n+  }\n+}"},{"sha":"6a24777af2e21d92643673f13529b4921f9bd86f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPropagationActions.groovy","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,43 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationActions\n+import org.identityconnectors.framework.common.objects.ConnectorObject\n+\n+@CompileStatic\n+class MyPropagationActions implements PropagationActions {\n+  \n+  @Override\n+  void before(PropagationTask task, ConnectorObject beforeObj) {\n+    // do nothing\n+  }\n+\n+  @Override\n+  void onError(PropagationTask task, TaskExec execution, Exception error) {\n+    // do nothing\n+  }\n+\n+  @Override\n+  void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj) {\n+    // do nothing\n+  }\n+}"},{"sha":"4d50971d8701d07d3b44f71625b232d9b5c59999","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullActions.groovy","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.patch.AnyPatch\n+import org.apache.syncope.common.lib.to.EntityTO\n+import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions\n+import org.identityconnectors.framework.common.objects.SyncDelta\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MyPullActions implements PullActions {\n+  \n+  @Override\n+  SyncDelta beforeProvision(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeAssign(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeUnassign(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeDeprovision(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeUnlink(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeLink(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  <P extends AnyPatch> SyncDelta beforeUpdate(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity,\n+    P anyPatch) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  SyncDelta beforeDelete(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+    return delta;\n+  }\n+\n+  @Override\n+  void after(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity,\n+    ProvisioningReport result) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+\n+  @Override\n+  IgnoreProvisionException onError(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    Exception e) throws JobExecutionException {\n+\n+    return null;\n+  }\n+}"},{"sha":"6f48a4cabe0df8fcf6c4ede078c186ff2bc5caa6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullCorrelationRule.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond\n+import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule\n+import org.identityconnectors.framework.common.objects.ConnectorObject\n+\n+@CompileStatic\n+class MyPullCorrelationRule implements PullCorrelationRule {\n+\n+  @Override\n+  SearchCond getSearchCond(ConnectorObject connObj) {\n+    \n+  }\n+}"},{"sha":"dad420636fd335fbbacff700f99d6d6b67ab2d2d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPushActions.groovy","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,112 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.entity.Entity\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MyPushActions implements PushActions {\n+  \n+  @Override \n+  Entity beforeAssign(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeProvision(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUpdate(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeLink(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUnlink(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUnassign(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeDeprovision(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeDelete(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  void onError(\n+    ProvisioningProfile profile,\n+    Entity entity,\n+    ProvisioningReport result,\n+    Exception error) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+\n+  @Override \n+  void after(\n+    ProvisioningProfile profile,\n+    Entity entity,\n+    ProvisioningReport result) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+}"},{"sha":"d118861800cadfb65171839bcc5fe08431c0d7d9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyRecipientsProvider.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyRecipientsProvider.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyRecipientsProvider.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyRecipientsProvider.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.entity.Notification\n+import org.apache.syncope.core.provisioning.api.notification.RecipientsProvider\n+\n+@CompileStatic\n+class MyRecipientsProvider implements RecipientsProvider {\n+  \n+  @Override\n+  Set<String> provideRecipients(Notification notification) {\n+    return Collections.emptyList();\n+  }\n+}"},{"sha":"b19b88e66aa9eaf3c5db4e93b77f1f9706b26508","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyReconFilterBuilder.groovy","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReconFilterBuilder.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReconFilterBuilder.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReconFilterBuilder.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder\n+import org.identityconnectors.framework.common.objects.filter.Filter\n+\n+@CompileStatic\n+class MyReconFilterBuilder implements ReconFilterBuilder {\n+  \n+  @Override\n+  Filter build() {\n+    return PASS_THROUGH;\n+  }\n+}"},{"sha":"07447c21cb6e1f3924c38a8d78df88f45193f7a9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyReportlet.groovy","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReportlet.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReportlet.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyReportlet.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.dao.Reportlet\n+import org.xml.sax.SAXException\n+\n+@CompileStatic\n+class MyReportlet implements Reportlet {\n+  \n+  @Override\n+  void extract(ContentHandler handler) throws SAXException {\n+  }\n+}"},{"sha":"3356319b044dcce5e57bde13c03991a2a651a58b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MySchedTaskJobDelegate.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMySchedTaskJobDelegate.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMySchedTaskJobDelegate.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMySchedTaskJobDelegate.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate\n+import org.quartz.JobExecutionContext\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MySchedTaskJobDelegate implements SchedTaskJobDelegate {\n+\t\n+  @Override\n+  void execute(String taskKey, boolean dryRun, JobExecutionContext context) throws JobExecutionException {\n+   \n+  }\n+}"},{"sha":"b0c3e377501d16b280d06800fd14f5930d8210aa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyValidator.groovy","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyValidator.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyValidator.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyValidator.groovy?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema\n+\n+@CompileStatic\n+class MyValidator implements Validator {\n+  \n+  @Override\n+  void setSchema(PlainSchema schema) {\n+  }\n+\n+  @Override\n+  void validate(String value, PlainAttrValue attrValue) {      \n+  }\n+}"},{"sha":"c79089d177211c24872390aa46f5004b7bc2f554","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients.html","status":"modified","additions":22,"deletions":25,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,33 +17,30 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"staticRecipients\">[staticRecipients]</span>\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"staticRecipients\">[staticRecipients]</span>\n+    </div>\n+    <div class=\"form-group form-group-inline\">\n+      <span wicket:id=\"recipients\">[recipients]</span>\n+    </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"recipientAttrName\">[recipientAttrName]</span>\n+    </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"recipientsProvider\">[recipientsProvider]</span>\n+    </div>\n+    <div id=\"userFilter\" class=\"form-group box\">\n+      <div id=\"title\">\n+        <span for=\"userNotifications\"><wicket:message key=\"userNotifications\"/></span>\n       </div>\n-      <div class=\"form-group form-group-inline\">\n-        <span wicket:id=\"recipients\">[recipients]</span>\n+      <div id=\"warning\">\n+        <span for=\"userNotificationsWarning\"><wicket:message key=\"userNotificationsWarning\"/></span>\n       </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"recipientAttrName\">[recipientAttrName]</span>\n+      <div id=\"check\">\n+        <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n       </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"recipientsProviderClassName\">[recipientsProviderClassName]</span>\n-      </div>\n-      <div id=\"userFilter\" class=\"form-group box\">\n-        <div id=\"title\">\n-          <span for=\"userNotifications\"><wicket:message key=\"userNotifications\"/></span>\n-        </div>\n-        <div id=\"warning\">\n-          <span for=\"userNotificationsWarning\"><wicket:message key=\"userNotificationsWarning\"/></span>\n-        </div>\n-        <div id=\"check\">\n-          <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n-        </div>\n-      </div>\n-    </wicket:panel>\n-  </body>\n+    </div>\n+  </wicket:panel>\n </html>\n "},{"sha":"df81b9610cb787063ab8f920fcfee72c308b3bdd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n recipients=Recipients\n-recipientsProviderClassName=Notification recipient provider\n+recipientsProvider=Notification recipient provider\n staticRecipients=Static recipients\n selfAsRecipient=Include users matching About\n userNotifications=User notifications"},{"sha":"ce5b93eae5d51402e731ba7f65a041a4b4774110","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,5 +20,5 @@ selfAsRecipient=Includi i soggetti\n userNotifications=Notifiche utente\n userNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente utenti\n search=Cerca destinatari\n-recipientsProviderClassName=Provider destinatari notifica\n+recipientsProvider=Provider destinatari notifica\n recipientAttrName=Attributo e-mail destinatari"},{"sha":"99808bb09fd1325871cfee5bf7c0caf3ae19cfad","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,5 +20,5 @@ selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n userNotifications=Notifica\\u00e7\\u00f5es do usu\\u00e1rio\n userNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n search=Pesquisa para os destinat\\u00e1rios\n-recipientsProviderClassName=Notification recipient provider\n+recipientsProvider=Notification recipient provider\n recipientAttrName=Destinat\\u00e1rios de e-mail para atributos"},{"sha":"173230f26a8cd17581ea6d54df93b40aadd4ac49","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -21,5 +21,5 @@ selfAsRecipient=\\u0412\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u044c \\u0432 \\u0443\\u\n userNotifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n userNotificationsWarning=\\u041d\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u043b\\u0430\\u0433, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n search=\\u041f\\u043e\\u0438\\u0441\\u043a \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-recipientsProviderClassName=Notification recipient provider\n+recipientsProvider=Notification recipient provider\n recipientAttrName=\\u041d\\u0430\\u0438\\u043c\\u0435\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439"},{"sha":"55baf8473c6f7637994da332fef8be93e1e0d3c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -110,6 +110,7 @@\n               <ul wicket:id=\"configurationUL\" class=\"treeview-menu\">\n                 <li wicket:id=\"administrationLI\"><a href=\"#\" wicket:id=\"administration\"><i class=\"fa fa-lock\"></i><wicket:message key=\"administration\"/></a></li>\n                 <li wicket:id=\"auditLI\"><a href=\"#\" wicket:id=\"audit\"><i class=\"fa fa-check-square-o\"></i><wicket:message key=\"audit\"/></a></li>\n+                <li wicket:id=\"implementationsLI\"><a href=\"#\" wicket:id=\"implementations\"><i class=\"fa fa-file-code-o\"></i><wicket:message key=\"implementations\"/></a></li>\n                 <li wicket:id=\"logsLI\"><a href=\"#\" wicket:id=\"logs\"><i class=\"fa fa-file-text-o\"></i><wicket:message key=\"logs\"/></a></li>\n                 <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-envelope-o\"></i><wicket:message key=\"notifications\"/></a></li>\n                 <li wicket:id=\"parametersLI\"><a href=\"#\" wicket:id=\"parameters\"><i class=\"fa fa-cog\"></i><wicket:message key=\"parameters\"/></a></li>"},{"sha":"6982aeb956bdcb4e977b34f8a9038a711e991e81","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Implementations.html","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FImplementations.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,36 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"></wicket:message></a></li>\n+        <li class=\"active\"><wicket:message key=\"configuration\"/></li>\n+        <li class=\"active\"><wicket:message key=\"implementations\"></wicket:message></li>\n+      </ol>\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"tabbedPanel\"/>\n+      </div>\n+    </section>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"a0502c1995881154b58c58a7c72e70a9ae06fbaf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <span wicket:id=\"engineTogglePanel\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"ffea34cb3b16b2cfa793073a60376ea3000ff46d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit implementation ${key}\n+any.new=New ${type} implementation\n+engine=Engine"},{"sha":"81b05494786f03108ab6141c5718f0216e7995bb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica implementazione ${key}\n+any.new=Nuova implementazione di ${type}\n+engine=Engine"},{"sha":"ffea34cb3b16b2cfa793073a60376ea3000ff46d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit implementation ${key}\n+any.new=New ${type} implementation\n+engine=Engine"},{"sha":"00982209e041c355a99b4a7551f1d39953ac7652","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel_ru.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+any.edit=Edit implementation ${key}\n+any.new=New ${type} implementation\n+engine=Engine"},{"sha":"4094a8f4f5ea0c09aa88dc67619e1fcb972962ab","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationEngineTogglePanel.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,32 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div id=\"startAtContainer\">\n+      <form wicket:id=\"implementationEngineForm\">\n+        <div class=\"input-group\">\n+          <span wicket:id=\"engine\"/>\n+          <div class=\"input-group-addon\">\n+            <a wicket:id=\"changeit\"><i class=\"fa fa-list-alt\" alt=\"implementation engine icon\" title=\"ImplementationEngine\"></i></a>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"c181f9fc0ceec7f81cf1362c0629f50b607a1e0a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImplementationModalPanel.html","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -0,0 +1,62 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+    <script type=\"text/javascript\">\n+      var editor;\n+    </script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/groovy/groovy.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/matchbrackets.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closebrackets.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {\n+        document.getElementById(\"groovyClassForm\").children[\"groovyClass\"].value = editor.getValue();\n+      }\n+    </script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        margin-top: 5px;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"key\"></span>\n+      <span wicket:id=\"javaClass\"></span>\n+      <span wicket:id=\"jsonClass\"></span>\n+      <div wicket:id=\"groovyClassContainer\">\n+        <div class=\"w_content_3\" id=\"groovyClassForm\">\n+          <textarea wicket:id=\"groovyClass\" name=\"groovyClass\" style=\"width: 100%; height: 350px;\">\n+          </textarea>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"d4fff440b5ee3b883cdc78a13916a00accb75f9b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -55,7 +55,7 @@\n       </div>\n \n       <div class=\"form-group\">\n-        <span wicket:id=\"validatorClass\">[validatorClass]</span>\n+        <span wicket:id=\"validator\">[validator]</span>\n       </div>\n \n       <div class=\"form-group\">"},{"sha":"b3f99bb0cef292d104d78dcee05caa99f606baac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,7 +22,7 @@ uniqueConstraint=Unique\n multivalue=Multivalue\n multivalueAndUniqueConstr.validation='Multivalue' and 'Unique constraint' options can't be both checked\n type=Type\n-validatorClass=Validator class\n+validator=Validator\n conversionPattern=Conversion pattern\n action=Action\n edit_attribute=Edit attribute"},{"sha":"bd4766beb8e6c61ac9716936bf53ad46fe1e92b6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,7 +20,7 @@ enumerationValues= Valori enumeration\n enumerationKeys= Label enumeration\n multivalue=Multivalore\n type=Tipo\n-validatorClass=Validatore\n+validator=Validatore\n conversionPattern=Conversion pattern\n action=Azione\n edit_attribute=Modifica attributo"},{"sha":"f607f9984734d04e8777697bacebbe84540c3565","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,7 +22,7 @@ uniqueConstraint=\\u00danico\n multivalue=Multivalorado\n multivalueAndUniqueConstr.validation=As op\\u00e7\\u00f5es 'Multivalorado' e 'Restri\\u00e7\\u00e3o \\u00fanica' n\\u00e3o podem serem ambas selecionadas\n type=Tipo\n-validatorClass=Classe de Valida\\u00e7\\u00e3o\n+validator=Valida\\u00e7\\u00e3o\n conversionPattern=Padr\\u00e3o de Convers\\u00e3o\n action=A\\u00e7\\u00e3o\n edit_attribute=Editar Atributo"},{"sha":"b190c79917e7fe9f0378906ee1118419aa94fb7f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails_ru.properties","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -15,37 +15,37 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# required_alert=Все поля обязательны для заполнения.\n+# required_alert=\\u00d0\\u0092\\u00d1\\u0081\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008f\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f.\n required_alert=\\u0412\\u0441\\u0435 \\u043f\\u043e\\u043b\\u044f \\u043e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b \\u0434\\u043b\\u044f \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f.\n-# mandatoryCondition=Обязательный\n+# mandatoryCondition=\\u00d0\\u009e\\u00d0\\u00b1\\u00d1\\u008f\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b9\n mandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439\n-# enumerationValues=Перечень значений\n+# enumerationValues=\\u00d0\\u009f\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d1\\u008c \\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b9\n enumerationValues=\\u041f\\u0435\\u0440\\u0435\\u0447\\u0435\\u043d\\u044c \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0439\n-# enumerationKeys=Перечень наименований\n+# enumerationKeys=\\u00d0\\u009f\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d1\\u008c \\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b8\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b9\n enumerationKeys=\\u041f\\u0435\\u0440\\u0435\\u0447\\u0435\\u043d\\u044c \\u043d\\u0430\\u0438\\u043c\\u0435\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u0439\n-# uniqueConstraint=Уникальный\n+# uniqueConstraint=\\u00d0\\u00a3\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b9\n uniqueConstraint=\\u0423\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439\n-# multivalue=Множественные значения\n+# multivalue=\\u00d0\\u009c\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b6\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n multivalue=\\u041c\\u043d\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f\n-# multivalueAndUniqueConstr.validation=Свойства 'Множественные значения' и 'Уникальный' не могут использоваться одновременно\n+# multivalueAndUniqueConstr.validation=\\u00d0\\u00a1\\u00d0\\u00b2\\u00d0\\u00be\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b0 '\\u00d0\\u009c\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b6\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f' \\u00d0\\u00b8 '\\u00d0\\u00a3\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b9' \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bc\\u00d0\\u00be\\u00d0\\u00b3\\u00d1\\u0083\\u00d1\\u0082 \\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c\\u00d1\\u0081\\u00d1\\u008f \\u00d0\\u00be\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b2\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00bd\\u00d0\\u00be\n multivalueAndUniqueConstr.validation=\\u0421\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430 '\\u041c\\u043d\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f' \\u0438 '\\u0423\\u043d\\u0438\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439' \\u043d\\u0435 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u043e\\u0434\\u043d\\u043e\\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u043e\n-# type=Тип\n+# type=\\u00d0\\u00a2\\u00d0\\u00b8\\u00d0\\u00bf\n type=\\u0422\\u0438\\u043f\n-# validatorClass=Класс валидатора\n-validatorClass=\\u041a\\u043b\\u0430\\u0441\\u0441 \\u0432\\u0430\\u043b\\u0438\\u0434\\u0430\\u0442\\u043e\\u0440\\u0430\n-# conversionPattern=Шаблон преобразования\n+# validatorClass=\\u00d0\\u009a\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0081 \\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d0\\u00b0\n+validator=\\u0432\\u0430\\u043b\\u0438\\u0434\\u0430\\u0442\\u043e\\u0440\\u0430\n+# conversionPattern=\\u00d0\\u00a8\\u00d0\\u00b0\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00bd \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n conversionPattern=\\u0428\\u0430\\u0431\\u043b\\u043e\\u043d \\u043f\\u0440\\u0435\\u043e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# action=Действие\n+# action=\\u00d0\\u0094\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d0\\u00b5\n action=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\n-# edit_attribute=Изменить атрибут\n+# edit_attribute=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\n edit_attribute=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\n-# title=Атрибут\n+# title=\\u00d0\\u0090\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\n title=\\u0410\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\n-# readonly=Только чтение\n+# readonly=\\u00d0\\u00a2\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00ba\\u00d0\\u00be \\u00d1\\u0087\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n readonly=\\u0422\\u043e\\u043b\\u044c\\u043a\\u043e \\u0447\\u0442\\u0435\\u043d\\u0438\\u0435\n-# secretKey=Ключ шифрования\n+# secretKey=\\u00d0\\u009a\\u00d0\\u00bb\\u00d1\\u008e\\u00d1\\u0087 \\u00d1\\u0088\\u00d0\\u00b8\\u00d1\\u0084\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n secretKey=\\u041a\\u043b\\u044e\\u0447 \\u0448\\u0438\\u0444\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# cipherAlgorithm=Алгоритм шифрования\n+# cipherAlgorithm=\\u00d0\\u0090\\u00d0\\u00bb\\u00d0\\u00b3\\u00d0\\u00be\\u00d1\\u0080\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00bc \\u00d1\\u0088\\u00d0\\u00b8\\u00d1\\u0084\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n cipherAlgorithm=\\u0410\\u043b\\u0433\\u043e\\u0440\\u0438\\u0442\\u043c \\u0448\\u0438\\u0444\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# mimeType=Тип MIME\n+# mimeType=\\u00d0\\u00a2\\u00d0\\u00b8\\u00d0\\u00bf MIME\n mimeType=\\u0422\\u0438\\u043f MIME"},{"sha":"b1062295868535b5fe11aa26974d8cd3f561571f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -34,7 +34,7 @@\n         <span wicket:id=\"passwordPolicy\">[passwordPolicy]</span>\n       </div>\n       <div class=\"form-group form-palette\">\n-        <span wicket:id=\"actionsClassNames\">[actionsClassNames]</span>\n+        <span wicket:id=\"actions\">[actions]</span>\n       </div>\n       <div class=\"form-group form-palette\">\n         <span wicket:id=\"resources\">[resources]</span>"},{"sha":"5b76f1c1365f0eaca78c30d235f0bc2f74e4fc7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,5 +17,5 @@\n fullPath=Path\n accountPolicy=Account Policy\n passwordPolicy=Password Policy\n-actionsClassNames=Actions\n+actions=Actions\n resources=Assigned resources"},{"sha":"68d53166dc28c6866507e7a05ef072e2ba822b7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,5 +17,5 @@\n fullPath=Percorso\n accountPolicy=Account Policy\n passwordPolicy=Password Policy\n-actionsClassNames=Azioni\n+actions=Azioni\n resources=Risorse assegnate"},{"sha":"43092e5665db6c46bbbc90ba37313ff05527b7e4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,5 +17,5 @@\n fullPath=Caminho\n accountPolicy=Pol\\u00edtica de Conta\n passwordPolicy=Pol\\u00edtica de Senha\n-actionsClassNames=Actions\n+actions=Actions\n resources=Assigned resources"},{"sha":"67a7bcbaca128584106154c579e574dbd9fa80b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,5 +18,5 @@\n fullPath=\\u041f\\u0443\\u0442\\u044c\n accountPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u0443\\u0447\\u0435\\u0442\\u043d\\u044b\\u0445 \\u0437\\u0430\\u043f\\u0438\\u0441\\u0435\\u0439\n passwordPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u043f\\u0430\\u0440\\u043e\\u043b\\u0435\\u0439\n-actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n resources=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u044b"},{"sha":"be212f80b77521edc1057e476fc0a67b1789c5b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,8 +22,9 @@ maxAuthenticationAttempts=Max Authentication Attempts\n propagateSuspension=Propagate Suspension\n historyLength=History Length\n allowNullPassword=Allow Null Password\n-policy.rule.conf=Policy '${description}' Rule Configuration\n+policy.rules=${description} Rules\n any.edit=Edit ${description}\n any.new=New Policy\n any.finish=Submit ${description}\n any.cancel=Cancel ${description}\n+compose.title=rules"},{"sha":"9a00b8d55b8e6ba4764eb3723dba9300c9784a15","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,8 +22,9 @@ maxAuthenticationAttempts=Numero Massimo Tentativi Authenticazione\n propagateSuspension=Propagare Sospensione\n historyLength=Lunghezza Storico\n allowNullPassword=Permetti Password Nulla\n-policy.rule.conf=Configurazione Regola Policy '${description}'\n+policy.rules=Configurazione Regole di ${description}\n any.edit=Modifica ${description}\n any.new=Nuova Policy\n any.finish=Invia ${description}\n any.cancel=Annulla ${description}\n+compose.title=regole"},{"sha":"be212f80b77521edc1057e476fc0a67b1789c5b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,8 +22,9 @@ maxAuthenticationAttempts=Max Authentication Attempts\n propagateSuspension=Propagate Suspension\n historyLength=History Length\n allowNullPassword=Allow Null Password\n-policy.rule.conf=Policy '${description}' Rule Configuration\n+policy.rules=${description} Rules\n any.edit=Edit ${description}\n any.new=New Policy\n any.finish=Submit ${description}\n any.cancel=Cancel ${description}\n+compose.title=rules"},{"sha":"afbd4302344f654534ba37e8c5d275c26d45acf7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -23,8 +23,9 @@ maxAuthenticationAttempts=\\u041c\\u0430\\u043a\\u0441\\u0438\\u043c\\u0430\\u043b\\u044c\n propagateSuspension=\\u041f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0432\\u0430\\u0442\\u044c \\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e \\u043f\\u0440\\u0438\\u043e\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u043a\\u0435\n historyLength=\\u0420\\u0430\\u0437\\u043c\\u0435\\u0440 \\u0438\\u0441\\u0442\\u043e\\u0440\\u0438\\u0438\n allowNullPassword=\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044c \\u043f\\u0443\\u0441\\u0442\\u043e\\u0439 \\u043f\\u0430\\u0440\\u043e\\u043b\\u044c\n-policy.rule.conf=\\u041d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0430 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438 '${description}'\n+policy.rules=\\u041d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0430 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438 '${description}'\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${description}\n any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0443\n any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${description}\n any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${description}\n+compose.title=rules"},{"sha":"8ac598c65ec96fa5bf3d34cc702243944e112b66","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-ruleConf=Rule\n-configuration=Type\n+rule=Rule\n+configuration=Configuration\n+noConf=No configuration available"},{"sha":"abd8c4e11490fabe4ecffe7c7efa4e8a358c6950","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel_it.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-ruleConf=Regola\n-configuration=Tipo\n+rule=Regola\n+configuration=Configurazione\n+noConf=Nessuna configurazione"},{"sha":"91afb1bc1d1a79c78e98cfa5c8a43405e41ad38c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel_pt_BR.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-ruleConf=Rule\n-configuration=Type\n+rule=Rule\n+configuration=Configura\\u00e7\\u00e3o\n+noConf=Nenhuma configura\\u00e7\\u00e3o dispon\\u00edvel"},{"sha":"330887f53ebc4f4a2cb818e1b7898969f35db475","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel_ru.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -15,5 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-ruleConf=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e\n-configuration=\\u0422\\u0438\\u043f\n+rule=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e\n+configuration=\\u043a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n+noConf=No configuration available"},{"sha":"4acf4dbf1abb0c33f8eb9f3a053af7ab549343f3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyRuleWizardBuilder$Profile.html","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder%24Profile.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,10 +19,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div class=\"form-group\">\n-      <span wicket:id=\"name\"/>\n-    </div>\n-    <div class=\"form-group\">\n-      <span wicket:id=\"configuration\"/>\n+      <span wicket:id=\"rule\"/>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"d51460491035f83f969a5e48960332a2049a6220","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel$CorrelationRulePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel%24CorrelationRulePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel%24CorrelationRulePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel%24CorrelationRulePanel.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -25,7 +25,7 @@\n       <span wicket:id=\"ruleType\"/>\n     </div>\n     <div class=\"form-group\">\n-      <span wicket:id=\"javaRule\"/>\n+      <span wicket:id=\"customRule\"/>\n       <span wicket:id=\"jsonRule\"/>\n     </div>\n   </wicket:panel>"},{"sha":"1c6b31c7edebb02c0a83000ba320c62566d9a391","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,11 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.java=Java Class\n+rule.custom=Custom\n rule.json=Plain attributes\n rule.type=Rule Type\n-JSON=Plain attributes\n-JAVA=Java Class\n any.type=Applies to\n correlationRules=Correlation Rules\n conflictResolutionAction=Conflict Resolution Action"},{"sha":"040e8fdfd696938788a3168d0c3945ba4f98f004","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_it.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,11 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.java=Classe Java\n+rule.custom=Custom\n rule.json=Attributi\n rule.type=Tipo Regola\n-JSON=Attributi\n-JAVA=Classe Java\n any.type=Applicata a\n correlationRules=Regole di Correlazione\n conflictResolutionAction=Azione di Risoluzione Conflitti"},{"sha":"1c6b31c7edebb02c0a83000ba320c62566d9a391","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_pt_BR.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,11 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.java=Java Class\n+rule.custom=Custom\n rule.json=Plain attributes\n rule.type=Rule Type\n-JSON=Plain attributes\n-JAVA=Java Class\n any.type=Applies to\n correlationRules=Correlation Rules\n conflictResolutionAction=Conflict Resolution Action"},{"sha":"8d3554886dbacd22b2306006f12d4209215d6294","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_ru.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -15,11 +15,9 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-rule.java=\\u041a\\u043b\\u0430\\u0441\\u0441 Java\n+rule.custom=Custom\n rule.json=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e JSON\n rule.type=\\u0422\\u0438\\u043f \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\n-JSON=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e JSON\n-JAVA=\\u041a\\u043b\\u0430\\u0441\\u0441 Java\n any.type=\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438\n correlationRules=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430 \\u043a\\u043e\\u0440\\u0440\\u0435\\u043b\\u044f\\u0446\\u0438\\u0438\n conflictResolutionAction=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043f\\u0440\\u0438 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0438 \\u043a\\u043e\\u043d\\u0444\\u043b\\u0438\\u043a\\u0442\\u043e\\u0432"},{"sha":"d3e5cde376ae2a2ddce01a1640758fc4afc8234d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,3 +17,4 @@\n reportlet=Reportlet\n profile=Profile\n configuration=Configuration\n+noConf=No configuration available"},{"sha":"96bcb850f78ee9f451ca26f31d45b0b230d318c8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,3 +17,4 @@\n reportlet=Reportlet\n profile=Profilo\n configuration=Configurazione\n+noConf=Nessuna configurazione"},{"sha":"234178a875d1ac3ed021b22550518127e3b12477","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,3 +17,4 @@\n reportlet=Reportlet\n profile=Profile\n configuration=Configuration\n+noConf=Nenhuma configura\\u00e7\\u00e3o dispon\\u00edvel"},{"sha":"f075681e4fbe6525f2cd2ac6fa485bc742e4cdfc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,3 +17,4 @@\n reportlet=\\u041f\\u0430\\u043d\\u0435\\u043b\\u044c \\u043e\\u0442\\u0447\\u0435\\u0442\\u0430\n profile=\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c\n configuration=\\u041a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n+noConf=No configuration available"},{"sha":"39e019b4118d549ce76253df3e52cc55a21b8efe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,7 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"form-group\"><span wicket:id=\"name\">[name]</span></div>\n-    <div class=\"form-group\"><span wicket:id=\"configuration\">[configuration]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"reportlet\">[reportlet]</span></div>\n   </wicket:panel>\n </html>"},{"sha":"43ef1b7683ceb5708ad1d628e92536bf20e188ec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-name=Name\n+reportlet=Reportlet\n configuration=Configuration"},{"sha":"da2ac02b37fc9dad76cd65b10309f778b6b68108","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-name=Name\n+reportlet=Reportlet\n configuration=Configurazione"},{"sha":"43ef1b7683ceb5708ad1d628e92536bf20e188ec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-name=Name\n+reportlet=Reportlet\n configuration=Configuration"},{"sha":"015497366d8e9295835dd7b0339411978f3e5950","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -15,5 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-name=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\n+reportlet=Reportlet\n configuration=\\u041a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f"},{"sha":"a14b3f614190ef894bb77278c1735e9236d54460","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,7 +17,7 @@\n name=Name\n description=Description\n destinationRealm=Destination Realm\n-jobDelegateClassName=Job Delegate\n+jobDelegate=Job Delegate\n lastExec=Last execution\n nextExec=Next execution\n active=Active\n@@ -27,6 +27,6 @@ any.new=New task\n any.finish=Submit ${name}\n any.cancel=Cancel ${name}\n pullMode=Pull Mode\n-reconciliationFilterBuilderClassName=Reconciliation Filter Builder\n-actionsClassNames=Actions\n+reconFilterBuilder=Reconciliation Filter Builder\n+actions=Actions\n sourceRealm=Source Realm"},{"sha":"960b17adfa6a061f7f668aa048d437cabad48db5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,7 +17,7 @@\n name=Nome\n description=Descrizione\n destinationRealm=Realm di destinazione\n-jobDelegateClassName=JobJob Delegate\n+jobDelegate=JobJob Delegate\n lastExec=Ultima esecuszione\n nextExec=Prossima esecuzione\n active=Attivo\n@@ -27,6 +27,6 @@ any.new=Nuovo Task\n any.finish=Invia ${name}\n any.cancel=Annulla ${name}\n pullMode=Pull Mode\n-reconciliationFilterBuilderClassName=Reconciliation Filter Builder\n-actionsClassNames=Actions\n+reconFilterBuilder=Reconciliation Filter Builder\n+actions=Actions\n sourceRealm=Realm sorgente"},{"sha":"a14b3f614190ef894bb77278c1735e9236d54460","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,7 +17,7 @@\n name=Name\n description=Description\n destinationRealm=Destination Realm\n-jobDelegateClassName=Job Delegate\n+jobDelegate=Job Delegate\n lastExec=Last execution\n nextExec=Next execution\n active=Active\n@@ -27,6 +27,6 @@ any.new=New task\n any.finish=Submit ${name}\n any.cancel=Cancel ${name}\n pullMode=Pull Mode\n-reconciliationFilterBuilderClassName=Reconciliation Filter Builder\n-actionsClassNames=Actions\n+reconFilterBuilder=Reconciliation Filter Builder\n+actions=Actions\n sourceRealm=Source Realm"},{"sha":"9339ef79ad5021e6e485954aa5cb31eaf039bc9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel_ru.properties","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,8 +20,7 @@ name=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\n description=\\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435\n # destinationRealm=\\u00d0\\u009e\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u008f\n destinationRealm=\\u041e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n-# jobDelegateClassName=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00ba\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0081\\u00d0\\u00b0\n-jobDelegateClassName=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430\n+jobDelegate=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430\n # lastExec=\\u00d0\\u009f\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d1\\u008b\\u00d0\\u00b4\\u00d1\\u0083\\u00d1\\u0089\\u00d0\\u00b8\\u00d0\\u00b9 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\n lastExec=\\u041f\\u0440\\u0435\\u0434\\u044b\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0437\\u0430\\u043f\\u0443\\u0441\\u043a\n # nextExec=\\u00d0\\u00a1\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b4\\u00d1\\u0083\\u00d1\\u008e\\u00d1\\u0089\\u00d0\\u00b8\\u00d0\\u00b9 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\n@@ -39,8 +38,6 @@ any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${name}\n any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${name}\n # pullMode=\\u00d0\\u00a0\\u00d0\\u00b5\\u00d0\\u00b6\\u00d0\\u00b8\\u00d0\\u00bc \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d1\\u0085\n pullMode=\\u0420\\u0435\\u0436\\u0438\\u043c \\u043f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u044f \\u0434\\u0430\\u043d\\u043d\\u044b\\u0445\n-# reconciliationFilterBuilderClassName=\\u00d0\\u00a4\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080 \\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00ba\\u00d0\\u00be\\u00d0\\u00bd\\u00d1\\u0081\\u00d0\\u00b8\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d0\\u00b8\n-reconciliationFilterBuilderClassName=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u0440\\u0435\\u043a\\u043e\\u043d\\u0441\\u0438\\u043b\\u0438\\u0430\\u0446\\u0438\\u0438\n-# actionsClassNames=\\u00d0\\u0094\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u008f\n-actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+reconFilterBuilder=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u0440\\u0435\\u043a\\u043e\\u043d\\u0441\\u0438\\u043b\\u0438\\u0430\\u0446\\u0438\\u0438\n+actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n sourceRealm=Source Realm"},{"sha":"d45da13484fee2b5a277dcff6f5db0ce31c13226","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -22,12 +22,12 @@\n     <div class=\"form-group\"><span wicket:id=\"description\">[anyKey]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"active\">[active]</span></div>\n \n-    <div class=\"form-group\"><span wicket:id=\"jobDelegateClassName\">[jobDelegateClassName]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"jobDelegate\">[jobDelegate]</span></div>\n \n     <span wicket:id=\"pullTaskSpecifics\">\n       <div class=\"form-group\"><span wicket:id=\"destinationRealm\">[destinationRealm]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"pullMode\">[pullMode]</span></div>\n-      <div class=\"form-group\"><span wicket:id=\"reconciliationFilterBuilderClassName\">[filter]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"reconFilterBuilder\">[filter]</span></div>\n     </span>      \n \n     <span wicket:id=\"pushTaskSpecifics\">\n@@ -36,7 +36,7 @@\n \n     <span wicket:id=\"provisioningTaskSpecifics\">\n       <div class=\"form-group form-palette\">\n-        <span wicket:id=\"actionsClassNames\">[actionsClassNames]</span>\n+        <span wicket:id=\"actions\">[actions]</span>\n       </div>\n       <div class=\"form-group\"><span wicket:id=\"matchingRule\">[matchingRule]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"unmatchingRule\">[unmatchingRule]</span></div>"},{"sha":"8200501a3c66b2c9283a3b22e16e8cc07f7317d5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Name\n description=Description\n-jobDelegateClassName=Class\n+jobDelegate=Class\n matchingRule=Matching rule\n unmatchingRule=Unmatching rule\n performCreate=Allow create"},{"sha":"5cddafd4cfe4f01dbe3e1c81706276d9921c5ef9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Name\n description=Description\n-jobDelegateClassName=Class\n+jobDelegate=Class\n matchingRule=Regola di matching\n unmatchingRule=Regola di unmatching\n performCreate=Consenti creazione"},{"sha":"8200501a3c66b2c9283a3b22e16e8cc07f7317d5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Name\n description=Description\n-jobDelegateClassName=Class\n+jobDelegate=Class\n matchingRule=Matching rule\n unmatchingRule=Unmatching rule\n performCreate=Allow create"},{"sha":"3b79aadf1ac24b78eca04140e533575b45958f53","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -17,7 +17,7 @@\n #\n name=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\n description=\\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435\n-jobDelegateClassName=\\u041a\\u043b\\u0430\\u0441\\u0441\n+jobDelegate=\\u041a\\u043b\\u0430\\u0441\\u0441\n matchingRule=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043f\\u0440\\u0438 \\u0441\\u043e\\u0432\\u043f\\u0430\\u0434\\u0435\\u043d\\u0438\\u0438\n unmatchingRule=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043f\\u0440\\u0438 \\u043d\\u0435\\u0441\\u043e\\u0432\\u043f\\u0430\\u0434\\u0435\\u043d\\u0438\\u0438\n performCreate=\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044c \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u0435"},{"sha":"a3d250b61324145298f20410a79b3d5bc26c2542","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ObjectTypeTogglePanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -18,5 +18,5 @@\n type.title=Specifica il tipo del provisioning\n type.summary=\n \n-type=Type\n-type.Required=Type \\u00e8 richiesto\n+type=Tipo\n+type.Required=Tipo \\u00e8 richiesto"},{"sha":"c730e8476ea63321d0478be452d9a2b0e78a83e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -40,7 +40,7 @@\n       </div>\n \n       <div class=\"form-group form-palette\">\n-        <span wicket:id=\"propagationActionsClassNames\">[propagationActionsClassNames]</span>\n+        <span wicket:id=\"propagationActions\">[propagationActions]</span>\n       </div>\n \n       <div class=\"form-group\">"},{"sha":"5e588e59058f573188c75481e2f6797dcaf64e8a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,7 +19,7 @@ connector=Connector\n enforceMandatoryCondition=Enforce mandatory condition\n propagationPriority=Propagation priority\n randomPwdIfNotProvided=Generate random passwords when missing\n-propagationActionsClassNames=Propagation Actions\n+propagationActions=Propagation Actions\n createTraceLevel=Propagation: create trace level\n updateTraceLevel=Propagation: update trace level\n deleteTraceLevel=Propagation: delete trace level"},{"sha":"33422f1745b5d3ba7611e38f2dae1b77c65522ec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,7 +19,7 @@ connector=Connettore\n enforceMandatoryCondition=Abilita mandatory condition\n propagationPriority=Priorit\\u00e0 in propagazione\n randomPwdIfNotProvided=Genera password casuali se mancanti\n-propagationActionsClassNames=Azioni di Propagazione\n+propagationActions=Azioni di Propagazione\n createTraceLevel=Propagazione: tracciamento creazione\n updateTraceLevel=Propagazione: tracciamento aggiornamento\n deleteTraceLevel=Propagazione: tracciamento rimozione"},{"sha":"d2c71192fd8f2e77dc9252dd0f33794923edb20d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,7 +19,7 @@ connector=Conector\n enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver\n-propagationActionsClassNames=A\\u00e7\\u00f5es de Propaga\\u00e7\\u00e3o\n+propagationActions=A\\u00e7\\u00f5es de Propaga\\u00e7\\u00e3o\n createTraceLevel=Propagation: create trace level\n updateTraceLevel=Propagation: update trace level\n deleteTraceLevel=Propagation: delete trace level"},{"sha":"2340913b0024f99e2706c3073554698264d2dfff","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -20,7 +20,7 @@ connector=\\u041a\\u043e\\u043d\\u043d\\u0435\\u043a\\u0442\\u043e\\u0440\n enforceMandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439 (\\u043f\\u0440\\u0438\\u043d\\u0443\\u0434\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e)\n propagationPriority=\\u041f\\u0440\\u0438\\u043e\\u0440\\u0438\\u0442\\u0435\\u0442 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439\n randomPwdIfNotProvided=\\u0421\\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0441\\u043b\\u0443\\u0447\\u0430\\u0439\\u043d\\u044b\\u0439 \\u043f\\u0430\\u0440\\u043e\\u043b\\u044c, \\u0435\\u0441\\u043b\\u0438 \\u043e\\u043d \\u043d\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043d\n-propagationActionsClassNames=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u044f\\u0435\\u043c\\u044b\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+propagationActions=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u044f\\u0435\\u043c\\u044b\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n createTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044e\n updateTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044e\n deleteTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0443\\u0434\\u0430\\u043b\\u0435\\u043d\\u0438\\u044e"},{"sha":"8b3403b9da78f72a85ae56f8a12c89690563688d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/ReconciliationReportletConf.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -21,7 +21,6 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;"},{"sha":"fc177027c55e58e47e6ed918865f41bd117fdb8b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PlainSchemaTO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -43,7 +43,7 @@ public class PlainSchemaTO extends AbstractSchemaTO {\n \n     private String conversionPattern;\n \n-    private String validatorClass;\n+    private String validator;\n \n     private String enumerationValues;\n \n@@ -105,12 +105,12 @@ public void setType(final AttrSchemaType type) {\n         this.type = type;\n     }\n \n-    public String getValidatorClass() {\n-        return validatorClass;\n+    public String getValidator() {\n+        return validator;\n     }\n \n-    public void setValidatorClass(final String validatorClass) {\n-        this.validatorClass = validatorClass;\n+    public void setValidator(final String validator) {\n+        this.validator = validator;\n     }\n \n     public String getEnumerationValues() {"},{"sha":"fadaa151404e12858d4685d21138077f13aac445","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ImplementationLogic.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FImplementationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FImplementationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FImplementationLogic.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -23,9 +23,12 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -63,6 +66,17 @@ public ImplementationTO read(final String key) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.IMPLEMENTATION_CREATE + \"')\")\n     public ImplementationTO create(final ImplementationTO implementationTO) {\n+        if (StringUtils.isBlank(implementationTO.getKey())) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(\"Implementation key\");\n+            throw sce;\n+        }\n+\n+        Implementation implementation = implementationDAO.find(implementationTO.getKey());\n+        if (implementation != null) {\n+            throw new DuplicateException(implementationTO.getKey());\n+        }\n+\n         return binder.getImplementationTO(implementationDAO.save(binder.create(implementationTO)));\n     }\n "},{"sha":"4f7cbd9fe2f286245c384c00d6cb58ef8862d49f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAccountRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAccountRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAccountRule.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -26,7 +26,8 @@\n  */\n public interface AccountRule {\n \n-    void setConf(AccountRuleConf conf);\n+    default void setConf(AccountRuleConf conf) {\n+    }\n \n     void enforce(User user);\n }"},{"sha":"3b23d6e12789c9e891f11929c5c9241bb37a1b89","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPasswordRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPasswordRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPasswordRule.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -26,9 +26,12 @@\n  */\n public interface PasswordRule {\n \n-    PasswordRuleConf getConf();\n+    default PasswordRuleConf getConf() {\n+        return null;\n+    }\n \n-    void setConf(PasswordRuleConf conf);\n+    default void setConf(PasswordRuleConf conf) {\n+    }\n \n     void enforce(User user);\n }"},{"sha":"ab05f4af115e9470d1bd9a684764dbcf741b8995","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/Reportlet.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportlet.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -34,7 +34,8 @@ public interface Reportlet {\n      *\n      * @param conf configuration\n      */\n-    void setConf(ReportletConf conf);\n+    default void setConf(ReportletConf conf) {\n+    }\n \n     /**\n      * Actual data extraction for reporting."},{"sha":"72a7a447ee17e47b6cc3fbf1fd12621f4258de3a","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -196,9 +196,9 @@ under the License.\n   <AccountPolicyRule policy_id=\"06e2ed52-6966-44aa-a177-a0ca7434201f\" implementation_id=\"DefaultAccountRuleConf2\"/>\n   <PullPolicy id=\"4ad10d94-e002-4b3f-b771-16089cc71da9\" description=\"pull policy 1\" specification='{\"conflictResolutionAction\":\"IGNORE\"}'/>\n   <PasswordPolicy id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" description=\"sample password policy\" historyLength=\"0\" allowNullPassword=\"0\"/> \n-  <Implementation id=\"DefaultAccountRuleConf3\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n+  <Implementation id=\"DefaultPasswordRuleConf3\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n                   body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n-  <PasswordPolicyRule policy_id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" implementation_id=\"DefaultAccountRuleConf3\"/>\n+  <PasswordPolicyRule policy_id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" implementation_id=\"DefaultPasswordRuleConf3\"/>\n   <PullPolicy id=\"9454b0d7-2610-400a-be82-fc23cf553dd6\" description=\"pull policy for java rule\"\n               specification='{\"conflictResolutionAction\":\"IGNORE\"}'/>\n "},{"sha":"65aa6f69471b2a8b6942ba786e07c293fcef7b29","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ImplementationDataBinderImpl.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.data;\n \n import java.lang.reflect.Modifier;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.RuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n@@ -66,15 +67,20 @@ public Implementation create(final ImplementationTO implementationTO) {\n \n     @Override\n     public void update(final Implementation implementation, final ImplementationTO implementationTO) {\n-        BeanUtils.copyProperties(implementationTO, implementation);\n-\n         SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidImplementation);\n \n-        if (implementation.getBody() == null) {\n+        if (implementation.getType() != null && implementation.getType() != implementationTO.getType()) {\n+            sce.getElements().add(\"ImplementationType cannot be changed\");\n+            throw sce;\n+        }\n+\n+        if (StringUtils.isBlank(implementationTO.getBody())) {\n             sce.getElements().add(\"No actual implementation provided\");\n             throw sce;\n         }\n \n+        BeanUtils.copyProperties(implementationTO, implementation);\n+\n         if (implementation.getEngine() == ImplementationEngine.JAVA) {\n             Class<?> base = null;\n             switch (implementation.getType()) {"},{"sha":"0632e2c6ddeb38e8280dd202c8164a86926269ca","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SchemaDataBinderImpl.java","status":"modified","additions":21,"deletions":1,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -37,12 +37,14 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n+import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.slf4j.Logger;\n@@ -55,7 +57,7 @@ public class SchemaDataBinderImpl implements SchemaDataBinder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SchemaDataBinder.class);\n \n-    private static final String[] IGNORE_PROPERTIES = { \"anyTypeClass\", \"provision\", \"resource\" };\n+    private static final String[] IGNORE_PROPERTIES = { \"anyTypeClass\", \"provision\", \"resource\", \"validator\" };\n \n     @Autowired\n     private AnyTypeClassDAO anyTypeClassDAO;\n@@ -75,6 +77,9 @@ public class SchemaDataBinderImpl implements SchemaDataBinder {\n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n \n+    @Autowired\n+    private ImplementationDAO implementationDAO;\n+\n     @Autowired\n     private EntityFactory entityFactory;\n \n@@ -91,6 +96,18 @@ private PlainSchema fill(final PlainSchema schema, final PlainSchemaTO schemaTO)\n \n         BeanUtils.copyProperties(schemaTO, schema, IGNORE_PROPERTIES);\n \n+        if (schemaTO.getValidator() == null) {\n+            schema.setValidator(null);\n+        } else {\n+            Implementation validator = implementationDAO.find(schemaTO.getValidator());\n+            if (validator == null) {\n+                LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \" {}, ignoring...\",\n+                        schemaTO.getValidator());\n+            } else {\n+                schema.setValidator(validator);\n+            }\n+        }\n+\n         PlainSchema merged = plainSchemaDAO.save(schema);\n \n         if (schemaTO.getAnyTypeClass() != null\n@@ -155,6 +172,9 @@ public PlainSchemaTO getPlainSchemaTO(final PlainSchema schema) {\n         PlainSchemaTO schemaTO = new PlainSchemaTO();\n         BeanUtils.copyProperties(schema, schemaTO, IGNORE_PROPERTIES);\n         schemaTO.setAnyTypeClass(schema.getAnyTypeClass() == null ? null : schema.getAnyTypeClass().getKey());\n+        if (schema.getValidator() != null) {\n+            schemaTO.setValidator(schema.getValidator().getKey());\n+        }\n \n         return schemaTO;\n     }"},{"sha":"f46a5f8cc2d1501018c11a8d9804981cc8ad33bd","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9889072252105c0f3c029ae188a12ead3aff542f/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9889072252105c0f3c029ae188a12ead3aff542f/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=9889072252105c0f3c029ae188a12ead3aff542f","patch":"@@ -144,7 +144,6 @@ protected void onConfigure() {\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-//                target.add(content);\n                 templateModal.show(false);\n             }\n         });\n@@ -164,7 +163,6 @@ public void onClick(final AjaxRequestTarget target) {\n                 importMetadata.toggle(target, true);\n             }\n         };\n-\n         ((WebMarkupContainer) get(\"container:content\")).addOrReplace(importMetadataLink);\n     }\n \n@@ -193,7 +191,7 @@ protected List<IColumn<SAML2IdPTO, String>> getColumns() {\n         columns.add(new BooleanPropertyColumn<>(\n                 new ResourceModel(\"useDeflateEncoding\"), \"useDeflateEncoding\", \"useDeflateEncoding\"));\n         columns.add(new BooleanPropertyColumn<>(\n-            new ResourceModel(\"supportUnsolicited\"), \"supportUnsolicited\", \"supportUnsolicited\"));\n+                new ResourceModel(\"supportUnsolicited\"), \"supportUnsolicited\", \"supportUnsolicited\"));\n         columns.add(new PropertyColumn<>(\n                 new ResourceModel(\"bindingType\"), \"bindingType\", \"bindingType\"));\n         columns.add(new BooleanPropertyColumn<>("}]}