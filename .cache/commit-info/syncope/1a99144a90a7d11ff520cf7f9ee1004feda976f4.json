{"sha":"1a99144a90a7d11ff520cf7f9ee1004feda976f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhOTkxNDRhOTBhN2QxMWZmNTIwY2Y3ZjllZTEwMDRmZWRhOTc2ZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-24T08:34:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-24T09:36:04Z"},"message":"[SYNCOPE-957] Reverting changes to Actions classes, as transactional support for Functions is troublesome","tree":{"sha":"4a73a975f186527f3dc61639d63e38237e4327e1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4a73a975f186527f3dc61639d63e38237e4327e1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1a99144a90a7d11ff520cf7f9ee1004feda976f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a99144a90a7d11ff520cf7f9ee1004feda976f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a99144a90a7d11ff520cf7f9ee1004feda976f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a99144a90a7d11ff520cf7f9ee1004feda976f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f3a3367c1748186b3046d684a795f9169a18ce88","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f3a3367c1748186b3046d684a795f9169a18ce88","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f3a3367c1748186b3046d684a795f9169a18ce88"}],"stats":{"total":316,"additions":126,"deletions":190},"files":[{"sha":"abdb3a4c1d92b3a1391b7bdf8d56f47eb00c5250","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyLogicActions.groovy","status":"modified","additions":13,"deletions":40,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyLogicActions.groovy?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -17,68 +17,41 @@\n  * under the License.\n  */\n import groovy.transform.CompileStatic\n-import java.util.List\n-import java.util.function.Function\n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyUR;\n-import org.apache.syncope.common.lib.to.AnyTO\n-import org.apache.syncope.common.lib.to.PropagationStatus\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.core.provisioning.api.LogicActions\n \n @CompileStatic\n class MyLogicActions implements LogicActions {\n   \n   @Override\n-  <C extends AnyCR> Function<C, C> beforeCreate() {\n-    Function function = { \n-      C input ->\n-      return input;        \n-    }\n-    return function;\n+  <C extends AnyCR> C beforeCreate(C input) {\n+    return input;\n   }\n \n   @Override\n-  <A extends AnyTO> Function<A, A> afterCreate(List<PropagationStatus> statuses) {\n-    Function function = { \n-      A input ->\n-      return input;        \n-    }\n-    return function;\n+  <A extends AnyTO> A afterCreate(A input) {\n+    return input;\n   }\n \n   @Override\n-  <U extends AnyUR> Function<U, U> beforeUpdate() {\n-    Function function = { \n-      U input ->\n-      return input;        \n-    }\n-    return function;\n+  <U extends AnyUR> U beforeUpdate(U input) {\n+    return input;\n   }\n \n   @Override\n-  <A extends AnyTO> Function<A, A> afterUpdate(List<PropagationStatus> statuses) {\n-    Function function = { \n-      A input ->\n-      return input;        \n-    }\n-    return function;\n+  <A extends AnyTO> A afterUpdate(A input) {\n+    return input;\n   }\n \n   @Override\n-  <A extends AnyTO> Function<A, A> beforeDelete() {\n-    Function function = { \n-      A input ->\n-      return input;        \n-    }\n-    return function;\n+  <A extends AnyTO> A beforeDelete(A input) {\n+    return input;\n   }\n \n   @Override\n-  <A extends AnyTO> Function<A, A> afterDelete(List<PropagationStatus> statuses) {\n-    Function function = { \n-      A input ->\n-      return input;        \n-    }\n-    return function;\n+  <A extends AnyTO> A afterDelete(A input) {\n+    return input;\n   }\n }\n\\ No newline at end of file"},{"sha":"ce039eb2f0dbf193411199408e5b4fd4d3274431","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullActions.groovy","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -29,18 +29,13 @@ import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions\n import org.identityconnectors.framework.common.objects.SyncDelta\n import org.quartz.JobExecutionException\n-import java.util.function.Function\n \n @CompileStatic\n class MyPullActions implements PullActions {\n   \n   @Override\n-  Function<SyncDelta, SyncDelta> preprocess(ProvisioningProfile<?, ?> profile) {\n-    Function function = { \n-      SyncDelta delta ->\n-      return delta;        \n-    }\n-    return function;\n+  SyncDelta preprocess(ProvisioningProfile profile, SyncDelta delta) {\n+    return delta;\n   }\n   \n   @Override\n@@ -142,4 +137,4 @@ class MyPullActions implements PullActions {\n \n     return null;\n   }\n-}\n+}\n\\ No newline at end of file"},{"sha":"0828f03bed6829a3d5dce6a7cffb1718aa8be496","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPushActions.groovy","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -109,4 +109,4 @@ class MyPushActions implements PushActions {\n \n     // do nothing\n   }\n-}\n+}\n\\ No newline at end of file"},{"sha":"3b045ffcb1abfe72d505998f285d3f50c2d27241","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":18,"deletions":26,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -22,7 +22,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.function.Function;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.AnyCR;\n@@ -114,11 +113,9 @@ protected Pair<C, List<LogicActions>> beforeCreate(final C input) {\n         templateUtils.apply(anyCR, realm.getTemplate(anyType));\n \n         List<LogicActions> actions = getActions(realm);\n-\n-        anyCR = (C) actions.stream().\n-                map(action -> action.beforeCreate()).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(anyCR);\n+        for (LogicActions action : actions) {\n+            anyCR = action.beforeCreate(anyCR);\n+        }\n \n         LOG.debug(\"Input: {}\\nOutput: {}\\n\", input, anyCR);\n \n@@ -137,10 +134,9 @@ protected Pair<U, List<LogicActions>> beforeUpdate(final U input, final String r\n         U update = input;\n \n         List<LogicActions> actions = getActions(realm);\n-        update = (U) actions.stream().\n-                map(action -> action.beforeUpdate()).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(update);\n+        for (LogicActions action : actions) {\n+            update = action.beforeUpdate(update);\n+        }\n \n         LOG.debug(\"Input: {}\\nOutput: {}\\n\", input, update);\n \n@@ -159,10 +155,9 @@ protected Pair<TO, List<LogicActions>> beforeDelete(final TO input) {\n         TO any = input;\n \n         List<LogicActions> actions = getActions(realm);\n-        any = (TO) actions.stream().\n-                map(action -> action.beforeDelete()).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(any);\n+        for (LogicActions action : actions) {\n+            any = action.beforeDelete(any);\n+        }\n \n         LOG.debug(\"Input: {}\\nOutput: {}\\n\", input, any);\n \n@@ -175,10 +170,9 @@ protected ProvisioningResult<TO> afterCreate(\n \n         TO any = input;\n \n-        any = (TO) actions.stream().\n-                map(action -> action.afterCreate(statuses)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(any);\n+        for (LogicActions action : actions) {\n+            any = action.afterCreate(any, statuses);\n+        }\n \n         ProvisioningResult<TO> result = new ProvisioningResult<>();\n         result.setEntity(any);\n@@ -207,10 +201,9 @@ protected ProvisioningResult<TO> afterUpdate(\n \n         TO any = input;\n \n-        any = (TO) actions.stream().\n-                map(action -> action.afterUpdate(statuses)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(any);\n+        for (LogicActions action : actions) {\n+            any = action.afterUpdate(any, statuses);\n+        }\n \n         ProvisioningResult<TO> result = new ProvisioningResult<>();\n         result.setEntity(any);\n@@ -225,10 +218,9 @@ protected ProvisioningResult<TO> afterDelete(\n \n         TO any = input;\n \n-        any = (TO) actions.stream().\n-                map(action -> action.afterDelete(statuses)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(any);\n+        for (LogicActions action : actions) {\n+            any = action.afterDelete(any, statuses);\n+        }\n \n         ProvisioningResult<TO> result = new ProvisioningResult<>();\n         result.setEntity(any);"},{"sha":"5c5b766a3f0af6266c82dfd84188fc644c5f9675","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/LogicActions.java","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.provisioning.api;\n \n import java.util.List;\n-import java.util.function.Function;\n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyUR;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -30,27 +29,27 @@\n  */\n public interface LogicActions {\n \n-    default <C extends AnyCR> Function<C, C> beforeCreate() {\n-        return Function.identity();\n+    default <C extends AnyCR> C beforeCreate(C input) {\n+        return input;\n     }\n \n-    default <A extends AnyTO> Function<A, A> afterCreate(List<PropagationStatus> statuses) {\n-        return Function.identity();\n+    default <A extends AnyTO> A afterCreate(A input, List<PropagationStatus> statuses) {\n+        return input;\n     }\n \n-    default <U extends AnyUR> Function<U, U> beforeUpdate() {\n-        return Function.identity();\n+    default <U extends AnyUR> U beforeUpdate(U input) {\n+        return input;\n     }\n \n-    default <A extends AnyTO> Function<A, A> afterUpdate(List<PropagationStatus> statuses) {\n-        return Function.identity();\n+    default <A extends AnyTO> A afterUpdate(A input, List<PropagationStatus> statuses) {\n+        return input;\n     }\n \n-    default <A extends AnyTO> Function<A, A> beforeDelete() {\n-        return Function.identity();\n+    default <A extends AnyTO> A beforeDelete(A input) {\n+        return input;\n     }\n \n-    default <A extends AnyTO> Function<A, A> afterDelete(List<PropagationStatus> statuses) {\n-        return Function.identity();\n+    default <A extends AnyTO> A afterDelete(A input, List<PropagationStatus> statuses) {\n+        return input;\n     }\n }"},{"sha":"a9e93ca988e86699b755e9216a37a0f4814178b6","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullActions.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyUR;\n-import java.util.function.Function;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -38,10 +37,11 @@ public interface PullActions extends ProvisioningActions {\n      * Pre-process the pull information received by the underlying connector, before any internal activity occurs.\n      *\n      * @param profile profile of the pull being executed.\n-     * @return pull information, possibly altered\n+     * @param delta retrieved pull information\n+     * @return pull information, possibly altered.\n      */\n-    default Function<SyncDelta, SyncDelta> preprocess(ProvisioningProfile<?, ?> profile) {\n-        return Function.identity();\n+    default SyncDelta preprocess(ProvisioningProfile<?, ?> profile, SyncDelta delta) {\n+        return delta;\n     }\n \n     /**"},{"sha":"15ec68660c1c7d9c5e7de64c9ee2c378fa6923a3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -22,7 +22,6 @@\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.AnyOperations;\n@@ -848,10 +847,10 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n         LOG.debug(\"Process {} for {} as {}\",\n                 delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n \n-        SyncDelta finalDelta = profile.getActions().stream().\n-                map(action -> action.preprocess(profile)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(delta);\n+        SyncDelta finalDelta = delta;\n+        for (PullActions action : profile.getActions()) {\n+            finalDelta = action.preprocess(profile, finalDelta);\n+        }\n \n         LOG.debug(\"Transformed {} for {} as {}\",\n                 finalDelta.getDeltaType(), finalDelta.getUid().getUidValue(), finalDelta.getObject().getObjectClass());"},{"sha":"1c5250d3d020e346e9b1e14425f9a4fec77c33a6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n-import java.util.function.Function;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -630,10 +629,10 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         LOG.debug(\"Process {} for {} as {}\",\n                 delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n \n-        SyncDelta finalDelta = profile.getActions().stream().\n-                map(action -> action.preprocess(profile)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(delta);\n+        SyncDelta finalDelta = delta;\n+        for (PullActions action : profile.getActions()) {\n+            finalDelta = action.preprocess(profile, finalDelta);\n+        }\n \n         LOG.debug(\"Transformed {} for {} as {}\",\n                 finalDelta.getDeltaType(), finalDelta.getUid().getUidValue(), finalDelta.getObject().getObjectClass());"},{"sha":"dd9c0f0ad4d2a5cedbbcd35172f698eb6495ff94","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDCUserManager.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -23,7 +23,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -242,10 +241,9 @@ public String create(final OIDCProvider op, final OIDCLoginResponseTO responseTO\n         }\n \n         List<OIDCProviderActions> actions = getActions(op);\n-        userCR = actions.stream().\n-                map(action -> action.beforeCreate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userCR);\n+        for (OIDCProviderActions action : actions) {\n+            userCR = action.beforeCreate(userCR, responseTO);\n+        }\n \n         UserTO userTO = new UserTO();\n         fill(op, responseTO, userTO);\n@@ -261,10 +259,9 @@ public String create(final OIDCProvider op, final OIDCLoginResponseTO responseTO\n         Pair<String, List<PropagationStatus>> created = provisioningManager.create(userCR, false);\n         userTO = binder.getUserTO(created.getKey());\n \n-        userTO = actions.stream().\n-                map(action -> action.afterCreate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userTO);\n+        for (OIDCProviderActions action : actions) {\n+            userTO = action.afterCreate(userTO, responseTO);\n+        }\n \n         return userTO.getUsername();\n     }\n@@ -279,18 +276,16 @@ public String update(final String username, final OIDCProvider op, final OIDCLog\n         UserUR userUR = AnyOperations.diff(userTO, original, true);\n \n         List<OIDCProviderActions> actions = getActions(op);\n-        userUR = actions.stream().\n-                map(action -> action.beforeUpdate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userUR);\n+        for (OIDCProviderActions action : actions) {\n+            userUR = action.beforeUpdate(userUR, responseTO);\n+        }\n \n         Pair<UserUR, List<PropagationStatus>> updated = provisioningManager.update(userUR, false);\n         userTO = binder.getUserTO(updated.getLeft().getKey());\n \n-        userTO = actions.stream().\n-                map(action -> action.afterUpdate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userTO);\n+        for (OIDCProviderActions action : actions) {\n+            userTO = action.afterUpdate(userTO, responseTO);\n+        }\n \n         return userTO.getUsername();\n     }"},{"sha":"6a08e7031defa1227bc24b7fd49c4c2d86fe3f70","filename":"ext/oidcclient/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/OIDCProviderActions.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Foidcclient%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCProviderActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Foidcclient%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCProviderActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCProviderActions.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -18,27 +18,26 @@\n  */\n package org.apache.syncope.core.provisioning.api;\n \n-import java.util.function.Function;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public interface OIDCProviderActions {\n \n-    default Function<UserCR, UserCR> beforeCreate(OIDCLoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserCR beforeCreate(UserCR input, OIDCLoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserTO, UserTO> afterCreate(OIDCLoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserTO afterCreate(UserTO input, OIDCLoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserUR, UserUR> beforeUpdate(OIDCLoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserUR beforeUpdate(UserUR input, OIDCLoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserTO, UserTO> afterUpdate(OIDCLoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserTO afterUpdate(UserTO input, OIDCLoginResponseTO loginResponse) {\n+        return input;\n     }\n }"},{"sha":"0a6b857c6e5d339d7d7aae102b86ca4f9b850fb6","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -23,7 +23,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -260,10 +259,9 @@ public String create(final SAML2IdPEntity idp, final SAML2LoginResponseTO respon\n         }\n \n         List<SAML2IdPActions> actions = getActions(idp);\n-        userCR = actions.stream().\n-                map(action -> action.beforeCreate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userCR);\n+        for (SAML2IdPActions action : actions) {\n+            userCR = action.beforeCreate(userCR, responseTO);\n+        }\n \n         UserTO userTO = new UserTO();\n         fill(idp.getKey(), responseTO, userTO);\n@@ -279,10 +277,9 @@ public String create(final SAML2IdPEntity idp, final SAML2LoginResponseTO respon\n         Pair<String, List<PropagationStatus>> created = provisioningManager.create(userCR, false);\n         userTO = binder.getUserTO(created.getKey());\n \n-        userTO = actions.stream().\n-                map(action -> action.afterCreate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userTO);\n+        for (SAML2IdPActions action : actions) {\n+            userTO = action.afterCreate(userTO, responseTO);\n+        }\n \n         return userTO.getUsername();\n     }\n@@ -297,18 +294,16 @@ public String update(final String username, final SAML2IdPEntity idp, final SAML\n         UserUR userUR = AnyOperations.diff(userTO, original, true);\n \n         List<SAML2IdPActions> actions = getActions(idp);\n-        userUR = actions.stream().\n-                map(action -> action.beforeUpdate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userUR);\n+        for (SAML2IdPActions action : actions) {\n+            userUR = action.beforeUpdate(userUR, responseTO);\n+        }\n \n         Pair<UserUR, List<PropagationStatus>> updated = provisioningManager.update(userUR, false);\n         userTO = binder.getUserTO(updated.getLeft().getKey());\n \n-        userTO = actions.stream().\n-                map(action -> action.afterUpdate(responseTO)).\n-                reduce(Function.identity(), Function::andThen).\n-                apply(userTO);\n+        for (SAML2IdPActions action : actions) {\n+            userTO = action.afterUpdate(userTO, responseTO);\n+        }\n \n         return userTO.getUsername();\n     }"},{"sha":"dddc6dc14c33a554f9f4393908a3c840853b4009","filename":"ext/saml2sp/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/SAML2IdPActions.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -18,27 +18,26 @@\n  */\n package org.apache.syncope.core.provisioning.api;\n \n-import java.util.function.Function;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public interface SAML2IdPActions {\n \n-    default Function<UserCR, UserCR> beforeCreate(SAML2LoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserCR beforeCreate(UserCR input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserTO, UserTO> afterCreate(SAML2LoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserTO afterCreate(UserTO input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserUR, UserUR> beforeUpdate(SAML2LoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserUR beforeUpdate(UserUR input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n     }\n \n-    default Function<UserTO, UserTO> afterUpdate(SAML2LoginResponseTO loginResponse) {\n-        return Function.identity();\n+    default UserTO afterUpdate(UserTO input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n     }\n }"},{"sha":"720eeca85e3a885672e532799f0ccc64bf94d2c4","filename":"fit/core-reference/src/test/resources/DoubleValueLogicActions.groovy","status":"modified","additions":27,"deletions":36,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a99144a90a7d11ff520cf7f9ee1004feda976f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FDoubleValueLogicActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a99144a90a7d11ff520cf7f9ee1004feda976f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FDoubleValueLogicActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FDoubleValueLogicActions.groovy?ref=1a99144a90a7d11ff520cf7f9ee1004feda976f4","patch":"@@ -22,7 +22,6 @@ import org.apache.syncope.common.lib.Attr\n import org.apache.syncope.common.lib.request.AnyCR\n import org.apache.syncope.common.lib.request.AnyUR\n import org.apache.syncope.common.lib.request.AttrPatch\n-import java.util.function.Function\n import org.apache.syncope.core.provisioning.api.LogicActions\n \n /**\n@@ -34,50 +33,42 @@ class DoubleValueLogicActions implements LogicActions {\n   private static final String NAME = \"makeItDouble\";\n \n   @Override\n-  <C extends AnyCR> Function<C, C> beforeCreate() {\n-    Function function = { \n-      C input ->\n-      for (Attr attr : input.getPlainAttrs()) {\n-        if (NAME.equals(attr.getSchema())) {\n-          List<String> values = new ArrayList<String>(attr.getValues().size());\n-          for (String value : attr.getValues()) {\n-            try {\n-              values.add(String.valueOf(2 * Long.parseLong(value)));\n-            } catch (NumberFormatException e) {\n-              // ignore\n-            }\n+  <C extends AnyCR> C beforeCreate(final C input) {\n+    for (Attr attr : input.getPlainAttrs()) {\n+      if (NAME.equals(attr.getSchema())) {\n+        List<String> values = new ArrayList<String>(attr.getValues().size());\n+        for (String value : attr.getValues()) {\n+          try {\n+            values.add(String.valueOf(2 * Long.parseLong(value)));\n+          } catch (NumberFormatException e) {\n+            // ignore\n           }\n-          attr.getValues().clear();\n-          attr.getValues().addAll(values);\n         }\n+        attr.getValues().clear();\n+        attr.getValues().addAll(values);\n       }\n-\n-      return input;        \n     }\n-    return function;\n+\n+    return input;\n   }\n \n   @Override\n-  <R extends AnyUR> Function<R, R> beforeUpdate() {\n-    Function function = { \n-      R input ->\n-      for (AttrPatch patch : input.getPlainAttrs()) {\n-        if (NAME.equals(patch.getAttr().getSchema())) {\n-          List<String> values = new ArrayList<String>(patch.getAttr().getValues().size());\n-          for (String value : patch.getAttr().getValues()) {\n-            try {\n-              values.add(String.valueOf(2 * Long.parseLong(value)));\n-            } catch (NumberFormatException e) {\n-              // ignore\n-            }\n+  <R extends AnyUR> R beforeUpdate(final R input) {\n+    for (AttrPatch patch : input.getPlainAttrs()) {\n+      if (NAME.equals(patch.getAttr().getSchema())) {\n+        List<String> values = new ArrayList<String>(patch.getAttr().getValues().size());\n+        for (String value : patch.getAttr().getValues()) {\n+          try {\n+            values.add(String.valueOf(2 * Long.parseLong(value)));\n+          } catch (NumberFormatException e) {\n+            // ignore\n           }\n-          patch.getAttr().getValues().clear();\n-          patch.getAttr().getValues().addAll(values);\n         }\n+        patch.getAttr().getValues().clear();\n+        patch.getAttr().getValues().addAll(values);\n       }\n-\n-      return input;\n     }\n-    return function;\n+\n+    return input;\n   }\n-}\n+}\n\\ No newline at end of file"}]}