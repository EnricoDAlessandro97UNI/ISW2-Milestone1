{"sha":"0e99ce817aea4945ee0d44938e452c77a88d7928","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlOTljZTgxN2FlYTQ5NDVlZTBkNDQ5MzhlNDUyYzc3YTg4ZDc5Mjg=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-05-22T15:55:47Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-05-22T15:55:47Z"},"message":"now get form returns a result only if user in candidate or assignee","tree":{"sha":"eba98883fbf416bc4fb5225e3e0c92aa46bf70bb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/eba98883fbf416bc4fb5225e3e0c92aa46bf70bb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e99ce817aea4945ee0d44938e452c77a88d7928","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e99ce817aea4945ee0d44938e452c77a88d7928","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e99ce817aea4945ee0d44938e452c77a88d7928","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e99ce817aea4945ee0d44938e452c77a88d7928/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"f76bff30c0b4c7018c2d84f9ac258dfd1c823c6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f76bff30c0b4c7018c2d84f9ac258dfd1c823c6e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f76bff30c0b4c7018c2d84f9ac258dfd1c823c6e"}],"stats":{"total":88,"additions":56,"deletions":32},"files":[{"sha":"caf4ae816aaf353a510cc666f3c19791fda7196b","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/Flowable.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -149,7 +149,8 @@ public UserRequestDetails(final String id, final UserRequest userRequest) {\n             super(id);\n \n             final UserRequestForm formTO = userRequest.getHasForm()\n-                    ? userRequestRestClient.getForm(userRequest.getTaskId()).orElse(null)\n+                    ? userRequestRestClient.getForm(SyncopeEnduserSession.get().getSelfTO().getUsername(), userRequest.\n+                            getTaskId()).orElse(null)\n                     : null;\n \n             add(formTO == null || formTO.getProperties() == null || formTO.getProperties().isEmpty()"},{"sha":"4eccef8e4b722366535c25c31d198617d4430356","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserRequestRestClient.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -70,8 +70,11 @@ public List<UserRequestForm> getForms(final int page, final int size, final Sort\n                 getResult();\n     }\n \n-    public Optional<UserRequestForm> getForm(final String taskId) {\n-        return Optional.ofNullable(getService(UserRequestService.class).getForm(taskId));\n+    public Optional<UserRequestForm> getForm(final String username, final String taskId) {\n+        return Optional.ofNullable(getService(UserRequestService.class).getForm(StringUtils.isBlank(username)\n+                ? SyncopeEnduserSession.get().getSelfTO().getUsername()\n+                : username,\n+                taskId));\n     }\n \n     public void submitForm(final UserRequestForm form) {"},{"sha":"ac1ab10154dd109b47487b9fb829c6d8ecbab1bb","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/api/UserRequestHandler.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -87,10 +87,11 @@ Pair<Integer, List<UserRequest>> getUserRequests(\n     /**\n      * Get the form matching the provided task id.\n      *\n-     * @param taskId  user key (optional)\n+     * @param userKey user key\n+     * @param taskId task id\n      * @return the form for the given task id\n      */\n-    UserRequestForm getForm(String taskId);\n+    UserRequestForm getForm(String userKey, String taskId);\n \n     /**\n      * Get the forms matching the provided parameters.\n@@ -111,7 +112,7 @@ Pair<Integer, List<UserRequestForm>> getForms(\n      * @return updated form\n      */\n     UserRequestForm claimForm(String taskId);\n-    \n+\n     /**\n      * Unclaim a form for a given object.\n      *"},{"sha":"6df04f19e3c5d9a62ec6b748fbccef7b8240039d","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -299,7 +299,9 @@ protected UserRequestFormPropertyType fromFlowableFormType(final FormType flowab\n     }\n \n     protected UserRequestForm getForm(final Task task) {\n-        return FlowableUserRequestHandler.this.getForm(task, engine.getFormService().getTaskFormData(task.getId()));\n+        return task == null\n+                ? null\n+                : FlowableUserRequestHandler.this.getForm(task, engine.getFormService().getTaskFormData(task.getId()));\n     }\n \n     protected UserRequestForm getForm(final Task task, final TaskFormData fd) {\n@@ -449,8 +451,17 @@ protected UserRequestForm getForm(\n     }\n \n     @Override\n-    public UserRequestForm getForm(final String taskId) {\n-        return getForm(getTask(taskId));\n+    public UserRequestForm getForm(final String userKey, final String taskId) {\n+        TaskQuery query = engine.getTaskService().createTaskQuery().taskId(taskId);\n+        if (userKey != null) {\n+            query.processInstanceBusinessKeyLike(FlowableRuntimeUtils.getProcBusinessKey(\"%\", userKey));\n+        }\n+\n+        String authUser = AuthContextUtils.getUsername();\n+\n+        return adminUser.equals(authUser)\n+                ? getForm(getTask(taskId))\n+                : getForm(query.taskCandidateOrAssigned(authUser).singleResult());\n     }\n \n     @Transactional(readOnly = true)"},{"sha":"2fb2135793a5d66f8951d0bd26367d031c88f2e1","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/UserRequestLogic.java","status":"modified","additions":24,"deletions":19,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -153,33 +153,21 @@ public UserRequestForm unclaimForm(final String taskId) {\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public UserRequestForm getForm(final String taskId) {\n-        return userRequestHandler.getForm(taskId);\n+    public UserRequestForm getForm(final String userKey, final String taskId) {\n+        evaluateKey(userKey);\n+\n+        return userRequestHandler.getForm(userKey, taskId);\n     }\n-    \n+\n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     public Pair<Integer, List<UserRequestForm>> getForms(\n             final String userKey,\n             final int page,\n             final int size,\n             final List<OrderByClause> orderByClauses) {\n-\n-        if (userKey == null) {\n-            securityChecks(null,\n-                    FlowableEntitlement.USER_REQUEST_FORM_LIST,\n-                    \"Listing forms not allowed\");\n-        } else {\n-            User user = userDAO.find(userKey);\n-            if (user == null) {\n-                throw new NotFoundException(\"User \" + userKey);\n-            }\n-\n-            securityChecks(user.getUsername(),\n-                    FlowableEntitlement.USER_REQUEST_FORM_LIST,\n-                    \"Listing forms for user\" + user.getUsername() + \" not allowed\");\n-        }\n-\n+        evaluateKey(userKey);\n+        \n         return userRequestHandler.getForms(userKey, page, size, orderByClauses);\n     }\n \n@@ -225,4 +213,21 @@ protected EntityTO resolveReference(final Method method, final Object... args)\n \n         throw new UnresolvedReferenceException();\n     }\n+\n+    private void evaluateKey(final String userKey) {\n+        if (userKey == null) {\n+            securityChecks(null,\n+                    FlowableEntitlement.USER_REQUEST_FORM_LIST,\n+                    \"Listing forms not allowed\");\n+        } else {\n+            User user = userDAO.find(userKey);\n+            if (user == null) {\n+                throw new NotFoundException(\"User \" + userKey);\n+            }\n+\n+            securityChecks(user.getUsername(),\n+                    FlowableEntitlement.USER_REQUEST_FORM_LIST,\n+                    \"Listing forms for user\" + user.getUsername() + \" not allowed\");\n+        }\n+    }\n }"},{"sha":"5de65a54f255ae3e81b11979d5d4b0bd5b520b52","filename":"ext/flowable/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserRequestService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -94,13 +94,16 @@ void cancel(\n     /**\n      * Returns a user request form matching the given task id.\n      *\n+     * @param username username of the logged user\n      * @param taskId workflow task id\n      * @return the form for the given task id\n      */\n     @GET\n-    @Path(\"forms/{taskId}\")\n+    @Path(\"forms/{username}/{taskId}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    UserRequestForm getForm(@NotNull @PathParam(\"taskId\") String taskId);\n+    UserRequestForm getForm(\n+            @NotNull @PathParam(\"username\") String username,\n+            @NotNull @PathParam(\"taskId\") String taskId);\n \n     /**\n      * Returns a list of user request forms matching the given query."},{"sha":"d339ac8a413c6b882a9431be3cecaf77f9f08403","filename":"ext/flowable/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserRequestServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e99ce817aea4945ee0d44938e452c77a88d7928/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java?ref=0e99ce817aea4945ee0d44938e452c77a88d7928","patch":"@@ -75,8 +75,8 @@ public UserRequestForm unclaimForm(final String taskId) {\n     }\n \n     @Override\n-    public UserRequestForm getForm(final String taskId) {\n-        return logic.getForm(taskId);\n+    public UserRequestForm getForm(final String username, final String taskId) {\n+        return logic.getForm(getActualKey(userDAO, username), taskId);\n     }\n \n     @Override"}]}