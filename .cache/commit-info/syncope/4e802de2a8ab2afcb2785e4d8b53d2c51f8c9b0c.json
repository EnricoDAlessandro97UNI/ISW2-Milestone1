{"sha":"4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRlODAyZGUyYThhYjJhZmNiMjc4NWU0ZDhiNTNkMmM1MWY4YzliMGM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-20T12:41:43Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-20T12:41:43Z"},"message":"(Fixes issue 77)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247155 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fa6420c899ec9d2d0965cb54f115e06fe4f5b763","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fa6420c899ec9d2d0965cb54f115e06fe4f5b763"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/comments","author":null,"committer":null,"parents":[{"sha":"123df26956ac7442b3b870d6d6eeba365edb5a01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/123df26956ac7442b3b870d6d6eeba365edb5a01","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/123df26956ac7442b3b870d6d6eeba365edb5a01"}],"stats":{"total":1952,"additions":1103,"deletions":849},"files":[{"sha":"b531d6582d366ded62d84efeb497359bd1c9c19c","filename":"client/src/main/java/org/syncope/client/to/ResourceTO.java","status":"modified","additions":30,"deletions":13,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -45,10 +45,11 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private String accountLink;\n \n-    /**\n-     * Propagation mode to be used when not mandatory in propagation.\n-     */\n-    private PropagationMode optionalPropagationMode;\n+    private boolean propagationPrimary;\n+\n+    private int propagationPriority;\n+\n+    private PropagationMode propagationMode;\n \n     /**\n      * Force mandatory constraint.\n@@ -57,10 +58,10 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private TraceLevel createTraceLevel;\n \n-    private TraceLevel deleteTraceLevel;\n-\n     private TraceLevel updateTraceLevel;\n \n+    private TraceLevel deleteTraceLevel;\n+\n     private Long passwordPolicy;\n \n     private Long accountPolicy;\n@@ -70,10 +71,12 @@ public class ResourceTO extends AbstractBaseBean {\n     public ResourceTO() {\n         mappings = new ArrayList<SchemaMappingTO>();\n         connectorConfigurationProperties = new HashSet<ConnConfProperty>();\n-        optionalPropagationMode = PropagationMode.ASYNC;\n+        propagationMode = PropagationMode.ASYNC;\n+        propagationPriority = 0;\n+\n         createTraceLevel = TraceLevel.ALL;\n-        deleteTraceLevel = TraceLevel.ALL;\n         updateTraceLevel = TraceLevel.ALL;\n+        deleteTraceLevel = TraceLevel.ALL;\n     }\n \n     public boolean isForceMandatoryConstraint() {\n@@ -124,14 +127,28 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public PropagationMode getOptionalPropagationMode() {\n-        return optionalPropagationMode;\n+    public boolean isPropagationPrimary() {\n+        return propagationPrimary;\n     }\n \n-    public void setOptionalPropagationMode(\n-            PropagationMode optionalPropagationMode) {\n+    public void setPropagationPrimary(boolean propagationPrimary) {\n+        this.propagationPrimary = propagationPrimary;\n+    }\n+\n+    public int getPropagationPriority() {\n+        return propagationPriority;\n+    }\n+\n+    public void setPropagationPriority(int propagationPriority) {\n+        this.propagationPriority = propagationPriority;\n+    }\n+\n+    public PropagationMode getPropagationMode() {\n+        return propagationMode;\n+    }\n \n-        this.optionalPropagationMode = optionalPropagationMode;\n+    public void setPropagationMode(PropagationMode propagationMode) {\n+        this.propagationMode = propagationMode;\n     }\n \n     public TraceLevel getCreateTraceLevel() {"},{"sha":"cda5509a9f01621298ee49093a8d38e8e5611f65","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":26,"deletions":14,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -54,6 +54,7 @@\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxIntFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n@@ -181,15 +182,30 @@ protected List<ConnConfProperty> load() {\n                 false);\n         form.add(forceMandatoryConstraint);\n \n-        final AjaxDropDownChoicePanel<PropagationMode> optionalPropagationMode =\n+        final AjaxCheckBoxPanel propagationPrimary =\n+                new AjaxCheckBoxPanel(\n+                \"propagationPrimary\",\n+                getString(\"propagationPrimary\"),\n+                new PropertyModel<Boolean>(resourceTO,\n+                \"propagationPrimary\"),\n+                false);\n+        form.add(propagationPrimary);\n+\n+        final AjaxIntFieldPanel propagationPriority = new AjaxIntFieldPanel(\n+                \"propagationPriority\", getString(\"propagationPriority\"),\n+                new PropertyModel<Integer>(resourceTO, \"propagationPriority\"),\n+                false);\n+        form.add(propagationPriority);\n+\n+        final AjaxDropDownChoicePanel<PropagationMode> propagationMode =\n                 new AjaxDropDownChoicePanel<PropagationMode>(\n-                \"optionalPropagationMode\",\n-                getString(\"optionalPropagationMode\"),\n-                new PropertyModel(resourceTO, \"optionalPropagationMode\"),\n+                \"propagationMode\",\n+                getString(\"propagationMode\"),\n+                new PropertyModel(resourceTO, \"propagationMode\"),\n                 false);\n-        optionalPropagationMode.setChoices(\n+        propagationMode.setChoices(\n                 Arrays.asList(PropagationMode.values()));\n-        form.add(optionalPropagationMode);\n+        form.add(propagationMode);\n \n         final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel =\n                 new AjaxDropDownChoicePanel<TraceLevel>(\"createTraceLevel\",\n@@ -378,8 +394,7 @@ public CharSequence preDecorateScript(\n                                 intAttrNames);\n \n                         mappingTypesPanel.setRequired(true);\n-                        mappingTypesPanel.setChoices(intMappingTypes.\n-                                getObject());\n+                        mappingTypesPanel.setChoices(intMappingTypes.getObject());\n                         mappingTypesPanel.setStyleShet(\n                                 \"ui-widget-content ui-corner-all short_fixedsize\");\n                         item.add(mappingTypesPanel);\n@@ -623,8 +638,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                 }\n                 if (accountIdCount == 0 || accountIdCount > 1) {\n                     error(getString(\"accountIdValidation\"));\n-                    ((Resources) callPageRef.getPage()).setOperationResult(\n-                            false);\n+                    target.add(feedbackPanel);\n                 } else {\n                     try {\n                         if (createFlag) {\n@@ -637,12 +651,10 @@ protected void onSubmit(final AjaxRequestTarget target,\n                                 true);\n                         window.close(target);\n                     } catch (SyncopeClientCompositeErrorException e) {\n-                        error(getString(\"error\") + \":\" + e.getMessage());\n-                        ((Resources) callPageRef.getPage()).setOperationResult(\n-                                false);\n-\n                         LOG.error(\"While creating/updating resource {}\",\n                                 resourceTO);\n+                        error(getString(\"error\") + \":\" + e.getMessage());\n+                        target.add(feedbackPanel);\n                     }\n                 }\n             }"},{"sha":"7aefe416f39d927c2ac4337493e5953a8f2c0ac8","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -98,6 +98,12 @@ public Resources(PageParameters parameters) {\n \n         columns.add(new PropertyColumn(\n                 new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"propagationPrimary\"),\n+                \"propagationPrimary\", \"propagationPrimary\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"propagationPriority\"),\n+                \"propagationPriority\", \"propagationPriority\"));\n \n         columns.add(new AbstractColumn<ResourceTO>(new ResourceModel(\"edit\")) {\n "},{"sha":"b3dcc5f302d73ab08b2702b324d261e7e96390f9","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxIntFieldPanel.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -0,0 +1,56 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxIntFieldPanel extends FieldPanel<Integer> {\n+\n+    private static final long serialVersionUID = 238940918106696068L;\n+\n+    private List<String> choices = Collections.EMPTY_LIST;\n+\n+    public AjaxIntFieldPanel(\n+            final String id,\n+            final String name,\n+            final IModel<Integer> model,\n+            final boolean active) {\n+\n+        super(id, name, model, active);\n+\n+        field = new TextField<Integer>(\"intField\", model);\n+\n+        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+\n+        if (active) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                private static final long serialVersionUID =\n+                        -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+}"},{"sha":"a049c8b2506561c29838b68ccdff97402eb612bc","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -79,10 +79,28 @@\n \n                         <div class=\"tablerow\">\n                             <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"optionalPropagationMode\"><wicket:message key=\"optionalPropagationMode\"/></label>\n+                                <label for=\"propagationPrimary\"><wicket:message key=\"propagationPrimary\"/></label>\n                             </div>\n                             <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"optionalPropagationMode\">[optionalPropagationMode]</span>\n+                                <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"propagationPriority\"><wicket:message key=\"propagationPriority\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"propagationMode\">[propagationMode]</span>\n                             </div>\n                         </div>\n "},{"sha":"3116fe9c6e1cfa9fa8fb4c9b8a5cfd9925429fc0","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -23,9 +23,11 @@ forceMandatoryConstraint=Force mandatory constraint\n fieldName=Field name\n \n accountIdValidation=There must be exactly one AccountId\n-optionalPropagationMode=Mode for non-mandatory propagations\n+propagationMode=Propagation mode\n accountLink=Account link\n \n createTraceLevel=Create trace level\n updateTraceLevel=Update trace level\n deleteTraceLevel=Delete trace level\n+propagationPriority=Propagation priority\n+propagationPrimary=Propagation primary"},{"sha":"ab173cabbe670376c2aae1bba724eca740cc8814","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -1,7 +1,7 @@\n resource=Dettagli Risorsa\n mappings=Schema Mapping\n \n-connectorProperties=Proprietà Connettore\n+connectorProperties=Propriet\\u00c3\\u00a0 Connettore\n create_attribute=Crea nuova risorsa\n required_alert=Tutti i campi sono richiesti\n name=Nome\n@@ -24,9 +24,11 @@ forceMandatoryConstraint=Forza mandatory constraint\n fieldName=Nome campo\n \n accountIdValidation=Deve essere definito esattamente un AccountId\n-optionalPropagationMode=Modalit\\u00e0 per propagazioni non obbligatorie\n+propagationMode=Modalit\\u00e0 di propagazione\n accountLink=Account link\n \n createTraceLevel=Livello di tracciamento delle creazioni\n updateTraceLevel=Livello di tracciamento degli aggiornamenti\n deleteTraceLevel=Livello di tracciamento delle cancellazioni\n+propagationPriority=Priorit\\u00e0 in propagazione\n+propagationPrimary=Primaria in propagazione"},{"sha":"0bbc4f884d04ef99f5bd56f1bf5564996bb3c5e7","filename":"console/src/main/resources/org/syncope/console/pages/Resources.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -22,7 +22,7 @@\n             </li>\n         </ul>\n         <div id=\"tabs-1\">\n-            <div id=\"users-contain\" class=\"ui-widget\">\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n                 <span wicket:id=\"container\">\n                     <table class=\"ui-widget ui-widget-content table-hover\"\n                            wicket:id=\"datatable\"/>"},{"sha":"5bbc654ea79cbf9f7b9c80f9a3667e850e1f63af","filename":"console/src/main/resources/org/syncope/console/pages/Resources.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.properties?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -2,4 +2,6 @@ tab1=Resources\n name=Name\n edit=Edit\n delete=Delete\n-create-link=Create new resource\n\\ No newline at end of file\n+create-link=Create new resource\n+propagationPriority=Propagation priority\n+propagationPrimary=Propagation primary"},{"sha":"d7ca4b58dd20a23b8ff15c8f16a013c3beb7aba1","filename":"console/src/main/resources/org/syncope/console/pages/Resources_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -3,3 +3,5 @@ name=Nome\n edit=Modifica\n delete=Elimina\n create-link=Crea nuova risorsa\n+propagationPriority=Priorit\\u00e0 in propagazione\n+propagationPrimary=Primaria in propagazione"},{"sha":"1824324bdfcc4754282faef5cec872d2c4a085a4","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/AjaxIntFieldPanel.html","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxIntFieldPanel.html?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -0,0 +1,21 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+\n+<wicket:extend>\n+    <input type=\"text\" class=\"ui-widget-content ui-corner-all long_dynamicsize\"\n+           wicket:id=\"intField\" />\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"ff8e646b659b17c751d9fee820c6ebaad79f40ca","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -37,7 +37,7 @@\n import org.hibernate.annotations.Type;\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.springframework.context.ConfigurableApplicationContext;\n-import org.syncope.core.persistence.util.XmlConfiguration;\n+import org.syncope.core.persistence.util.XmlSerializer;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.ConnectorCapability;\n@@ -160,7 +160,7 @@ public void setConnectorName(String connectorName) {\n \n     public Set<ConnConfProperty> getConfiguration() {\n         Set<ConnConfProperty> result =\n-                XmlConfiguration.<HashSet<ConnConfProperty>>deserialize(\n+                XmlSerializer.<HashSet<ConnConfProperty>>deserialize(\n                 xmlConfiguration);\n         if (result == null) {\n             result = Collections.emptySet();\n@@ -169,7 +169,7 @@ public Set<ConnConfProperty> getConfiguration() {\n     }\n \n     public void setConfiguration(final Set<ConnConfProperty> configuration) {\n-        xmlConfiguration = XmlConfiguration.serialize(\n+        xmlConfiguration = XmlSerializer.serialize(\n                 new HashSet<ConnConfProperty>(configuration));\n     }\n "},{"sha":"fec4563dc5d1874f3ee4dc3d4cd2e0dfd0a32b4b","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":46,"deletions":13,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -41,7 +41,7 @@\n import org.hibernate.annotations.Type;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.util.XmlConfiguration;\n+import org.syncope.core.persistence.util.XmlSerializer;\n import org.syncope.core.persistence.validation.entity.ExternalResourceCheck;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n@@ -105,21 +105,36 @@ public class ExternalResource extends AbstractBaseBean {\n      */\n     private String accountLink;\n \n+    /**\n+     * Is this resource primary, for propagations?\n+     */\n+    @Column(nullable = false)\n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer propagationPrimary;\n+\n+    /**\n+     * Priority index for propagation ordering.\n+     */\n+    @Column(nullable = false)\n+    private Integer propagationPriority;\n+\n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n-    private PropagationMode optionalPropagationMode;\n+    private PropagationMode propagationMode;\n \n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n     private TraceLevel createTraceLevel;\n \n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n-    private TraceLevel deleteTraceLevel;\n+    private TraceLevel updateTraceLevel;\n \n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n-    private TraceLevel updateTraceLevel;\n+    private TraceLevel deleteTraceLevel;\n \n     @ManyToOne(fetch = FetchType.EAGER, optional = true)\n     private PasswordPolicy passwordPolicy;\n@@ -144,11 +159,13 @@ public ExternalResource() {\n         users = new HashSet<SyncopeUser>();\n         roles = new HashSet<SyncopeRole>();\n         mappings = new ArrayList<SchemaMapping>();\n-        optionalPropagationMode = PropagationMode.ASYNC;\n+        propagationPrimary = 0;\n+        propagationPriority = 0;\n+        propagationMode = PropagationMode.ASYNC;\n \n         createTraceLevel = TraceLevel.FAILURES;\n-        deleteTraceLevel = TraceLevel.FAILURES;\n         updateTraceLevel = TraceLevel.FAILURES;\n+        deleteTraceLevel = TraceLevel.FAILURES;\n     }\n \n     public boolean isForceMandatoryConstraint() {\n@@ -168,14 +185,30 @@ public void setConnector(ConnInstance connector) {\n         this.connector = connector;\n     }\n \n-    public PropagationMode getOptionalPropagationMode() {\n-        return optionalPropagationMode;\n+    public boolean isPropagationPrimary() {\n+        return isBooleanAsInteger(propagationPrimary);\n+    }\n+\n+    public void setPropagationPrimary(boolean propagationPrimary) {\n+        this.propagationPrimary = getBooleanAsInteger(propagationPrimary);\n     }\n \n-    public void setOptionalPropagationMode(\n-            PropagationMode optionalPropagationMode) {\n+    public Integer getPropagationPriority() {\n+        return propagationPriority;\n+    }\n+\n+    public void setPropagationPriority(Integer propagationPriority) {\n+        if (propagationPriority != null) {\n+            this.propagationPriority = propagationPriority;\n+        }\n+    }\n+\n+    public PropagationMode getPropagationMode() {\n+        return propagationMode;\n+    }\n \n-        this.optionalPropagationMode = optionalPropagationMode;\n+    public void setPropagationMode(PropagationMode propagationMode) {\n+        this.propagationMode = propagationMode;\n     }\n \n     public List<SchemaMapping> getMappings() {\n@@ -322,7 +355,7 @@ public void setConnectorConfigurationProperties(\n             final Set<ConnConfProperty> properties) {\n \n         // create new set to make sure it's a serializable set implementation.\n-        xmlConfiguration = XmlConfiguration.serialize(\n+        xmlConfiguration = XmlSerializer.serialize(\n                 new HashSet<ConnConfProperty>(properties));\n     }\n \n@@ -331,7 +364,7 @@ public Set<ConnConfProperty> getConfiguration() {\n \n         Set<ConnConfProperty> deserializedSet;\n         if (StringUtils.isNotBlank(xmlConfiguration)) {\n-            deserializedSet = XmlConfiguration.<HashSet<ConnConfProperty>>deserialize(xmlConfiguration);\n+            deserializedSet = XmlSerializer.<HashSet<ConnConfProperty>>deserialize(xmlConfiguration);\n             if (deserializedSet != null) {\n                 result = deserializedSet;\n             }"},{"sha":"ca9cf20a97478f4e3cdbfb262b046b5b31aa2afa","filename":"core/src/main/java/org/syncope/core/persistence/beans/Policy.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -22,7 +22,7 @@\n import javax.persistence.Lob;\n \n import org.hibernate.annotations.Type;\n-import org.syncope.core.persistence.util.XmlConfiguration;\n+import org.syncope.core.persistence.util.XmlSerializer;\n import org.syncope.core.persistence.validation.entity.PolicyCheck;\n import org.syncope.types.AbstractPolicySpec;\n import org.syncope.types.PolicyType;\n@@ -72,11 +72,11 @@ public void setType(PolicyType type) {\n     }\n \n     public <T extends AbstractPolicySpec> T getSpecification() {\n-        T result = XmlConfiguration.<T>deserialize(specification);\n+        T result = XmlSerializer.<T>deserialize(specification);\n         return result;\n     }\n \n     public <T extends AbstractPolicySpec> void setSpecification(final T policy) {\n-        specification = XmlConfiguration.serialize(policy);\n+        specification = XmlSerializer.serialize(policy);\n     }\n }"},{"sha":"76ff7a761ff8a2d738436d7d18c60afa838781e6","filename":"core/src/main/java/org/syncope/core/persistence/beans/package-info.java","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -0,0 +1,18 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+/**\n+ * Package for JPA entity beans.\n+ */\n+package org.syncope.core.persistence.beans;"},{"sha":"aaac6c71cd5b0e3c0d3b0477c511593f6eb17704","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -42,6 +42,7 @@\n import javax.persistence.OneToMany;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n+import javax.persistence.Transient;\n import javax.validation.Valid;\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang.RandomStringUtils;\n@@ -79,7 +80,8 @@ public class SyncopeUser extends AbstractAttributable {\n     @NotNull\n     private String password;\n \n-    private transient String clearPassword;\n+    @Transient\n+    private String clearPassword;\n \n     @OneToMany(cascade = CascadeType.MERGE, mappedBy = \"syncopeUser\")\n     @Valid\n@@ -179,6 +181,17 @@ public Set<SyncopeRole> getRoles() {\n         return result;\n     }\n \n+    public Set<Long> getRoleIds() {\n+        Set<SyncopeRole> roles = getRoles();\n+\n+        Set<Long> result = new HashSet<Long>(roles.size());\n+        for (SyncopeRole role : roles) {\n+            result.add(role.getId());\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public Set<ExternalResource> getExternalResources() {\n         Set<ExternalResource> result = new HashSet<ExternalResource>();"},{"sha":"d9af86e5b57b4b774ae64801403a5e7a17214704","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -26,6 +26,8 @@ public interface ResourceDAO extends DAO {\n \n     List<ExternalResource> findAll();\n \n+    List<ExternalResource> findAllByPriority();\n+\n     ExternalResource save(ExternalResource resource)\n             throws InvalidEntityException;\n "},{"sha":"1120db2eb9876c185bdd47e02d6842c4958cb302","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -67,6 +67,14 @@ public List<ExternalResource> findAll() {\n         return query.getResultList();\n     }\n \n+    @Override\n+    public List<ExternalResource> findAllByPriority() {\n+        Query query = entityManager.createQuery(\"SELECT e \"\n+                + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e \"\n+                + \"ORDER BY e.propagationPriority\");\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public ExternalResource save(final ExternalResource resource) {\n         ExternalResource merged = entityManager.merge(resource);"},{"sha":"8af56069f45712aefe5472b02f925c60f21a11f4","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":188,"deletions":110,"changes":298,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import javassist.NotFoundException;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n@@ -37,7 +38,9 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.StringUtils;\n+import org.syncope.client.to.AttributeTO;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n@@ -58,6 +61,9 @@\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecDAO;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.rest.data.UserDataBinder;\n+import org.syncope.core.util.AttributableUtil;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.PropagationOperation;\n@@ -69,6 +75,9 @@\n /**\n  * Manage the data propagation to target resources.\n  */\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n public class PropagationManager {\n \n     /**\n@@ -83,6 +92,18 @@ public class PropagationManager {\n     @Autowired\n     private ConnInstanceLoader connLoader;\n \n+    /**\n+     * User DataBinder.\n+     */\n+    @Autowired\n+    private UserDataBinder userDataBinder;\n+\n+    /**\n+     * User DAO.\n+     */\n+    @Autowired\n+    private UserDAO userDAO;\n+\n     /**\n      * Resource DAO.\n      */\n@@ -113,56 +134,82 @@ public class PropagationManager {\n     @Autowired\n     private JexlUtil jexlUtil;\n \n+    @Transactional(readOnly = true)\n+    private SyncopeUser getSyncopeUser(final Long userId)\n+            throws NotFoundException {\n+\n+        SyncopeUser user = userDAO.find(userId);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + userId);\n+        }\n+\n+        return user;\n+    }\n+\n     /**\n      * Create the user on every associated resource.\n-     * It is possible to ask for a mandatory provisioning for some resources\n-     * specifying a set of resource names.\n-     * Exceptions won't be ignored and the process will be stopped if the\n-     * creation fails onto a mandatory resource.\n      *\n-     * @param user to be created\n+     * @param userId to be created\n      * @param password to be set\n+     * @param vAttrs virtual attributes to be set\n      * @param enable wether user must be enabled or not\n-     * @param mandResNames to ask for mandatory or optional\n-     * provisioning\n-     * @throws PropagationException when anything goes wrong\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if userId is not found\n      */\n-    public void create(final SyncopeUser user,\n-            final String password,\n-            final Boolean enable,\n-            final Set<String> mandResNames)\n-            throws PropagationException {\n+    public List<PropagationTask> getCreateTaskIds(final Long userId,\n+            final String password, final List<AttributeTO> vAttrs,\n+            final Boolean enable)\n+            throws NotFoundException {\n+\n+        SyncopeUser user = getSyncopeUser(userId);\n+        if (vAttrs != null && !vAttrs.isEmpty()) {\n+            userDataBinder.fillVirtual(user, vAttrs, AttributableUtil.USER);\n+            user = userDAO.save(user);\n+        }\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.CREATE, user.getExternalResources());\n \n-        provision(user, password, enable, propByRes,\n-                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n+        return provision(user, password, enable, propByRes);\n     }\n \n     /**\n      * Performs update on each resource associated to the user.\n-     * It is possible to ask for a mandatory provisioning for some resources\n-     * specifying a set of resource names.\n-     * Exceptions won't be ignored and the process will be stopped if the\n-     * creation fails onto a mandatory resource.\n      *\n-     * @param user to be updated.\n-     * @param password to be updated.\n+     * @param userId to be updated\n+     * @param password to be updated\n+     * @param vAttrsToBeRemoved virtual attributes to be removed\n+     * @param vAttrsToBeAdded virtual attributes to be added\n      * @param enable wether user must be enabled or not\n-     * @param propByRes operations to perform on each resource.\n-     * @param mandResNames to ask for mandatory or optional update.\n-     * @throws PropagationException if anything goes wrong\n+     * @param propByRes operations to perform on each resource\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if userId is not found\n      */\n-    public void update(final SyncopeUser user,\n-            final String password,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Set<String> mandResNames)\n-            throws PropagationException {\n+    public List<PropagationTask> getUpdateTaskIds(final Long userId,\n+            final String password, final Set<String> vAttrsToBeRemoved,\n+            final Set<String> vAttrsToBeAdded, final Boolean enable,\n+            final PropagationByResource propByRes)\n+            throws NotFoundException {\n+\n+        SyncopeUser user = getSyncopeUser(userId);\n+        Set<String> vAttrsToRemove = vAttrsToBeRemoved == null\n+                ? Collections.EMPTY_SET : vAttrsToBeRemoved;\n+        Set<String> vAttrsToAdd = vAttrsToBeAdded == null\n+                ? Collections.EMPTY_SET : vAttrsToBeAdded;\n+        PropagationByResource vPropByRes = userDataBinder.fillVirtual(user,\n+                vAttrsToRemove, vAttrsToAdd, AttributableUtil.USER);\n+        propByRes.merge(vPropByRes);\n+\n+        PropagationByResource localPropByRes;\n+        if (propByRes == null || propByRes.isEmpty()) {\n+            localPropByRes = new PropagationByResource();\n+            localPropByRes.addAll(PropagationOperation.UPDATE,\n+                    user.getExternalResources());\n+        } else {\n+            localPropByRes = propByRes;\n+        }\n \n-        provision(user, password, enable, propByRes,\n-                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n+        return provision(user, password, enable, localPropByRes);\n     }\n \n     /**\n@@ -172,85 +219,20 @@ public void update(final SyncopeUser user,\n      * Exceptions won't be ignored and the process will be stopped if the\n      * creation fails onto a mandatory resource.\n      *\n-     * @param user to be deleted\n-     * @param mandResNames to ask for mandatory or optyional delete\n-     * @throws PropagationException if anything goes wrong\n+     * @param userId to be deleted\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if user is not found\n      */\n-    public void delete(final SyncopeUser user,\n-            final Set<String> mandResNames)\n-            throws PropagationException {\n+    public List<PropagationTask> getDeleteTaskIds(final Long userId)\n+            throws NotFoundException {\n+\n+        SyncopeUser user = getSyncopeUser(userId);\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.DELETE,\n                 user.getExternalResources());\n \n-        provision(user, null, false, propByRes,\n-                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n-    }\n-\n-    /**\n-     * Implementation of the provisioning feature.\n-     *\n-     * @param user user to be provisioned\n-     * @param password cleartext password to be provisioned\n-     * @param enable wether user must be enabled or not\n-     * @param propByRes operation to be performed per resource\n-     * @param mandResNames resources for mandatory propagation\n-     * @throws PropagationException if anything goes wrong\n-     */\n-    protected void provision(\n-            final SyncopeUser user,\n-            final String password,\n-            final Boolean enable,\n-            final PropagationByResource propByRes,\n-            final Set<String> mandResNames)\n-            throws PropagationException {\n-\n-        LOG.debug(\"Provisioning with user {}:\\n{}\", user, propByRes);\n-\n-        // Avoid duplicates - see javadoc\n-        propByRes.purge();\n-        LOG.debug(\"After purge: {}\", propByRes);\n-\n-        ExternalResource resource;\n-        Map.Entry<String, Set<Attribute>> preparedAttrs;\n-        PropagationTask task;\n-        TaskExec execution;\n-        for (PropagationOperation type : PropagationOperation.values()) {\n-            for (String resourceName : propByRes.get(type)) {\n-                resource = resourceDAO.find(resourceName);\n-                preparedAttrs = prepareAttributes(\n-                        user, password, enable, resource);\n-\n-                task = new PropagationTask();\n-                task.setResource(resource);\n-                task.setResourceOperationType(type);\n-                task.setPropagationMode(\n-                        mandResNames.contains(resource.getName())\n-                        ? PropagationMode.SYNC\n-                        : resource.getOptionalPropagationMode());\n-                task.setAccountId(preparedAttrs.getKey());\n-                task.setOldAccountId(\n-                        propByRes.getOldAccountId(resource.getName()));\n-                task.setAttributes(preparedAttrs.getValue());\n-\n-                LOG.debug(\"Execution started for {}\", task);\n-\n-                execution = propagate(task, new Date());\n-\n-                LOG.debug(\"Execution finished for {}, {}\", task, execution);\n-\n-                // Propagation is interrupted as soon as the result of the\n-                // communication with a mandatory resource is in error\n-                if (mandResNames.contains(resource.getName())\n-                        && !PropagationTaskExecStatus.SUCCESS.toString().\n-                        equals(execution.getStatus())) {\n-\n-                    throw new PropagationException(resource.getName(),\n-                            execution.getMessage());\n-                }\n-            }\n-        }\n+        return provision(user, null, false, propByRes);\n     }\n \n     /**\n@@ -459,8 +441,7 @@ private Map.Entry<String, Attribute> prepareAttribute(\n      */\n     private Map.Entry<String, Set<Attribute>> prepareAttributes(\n             final SyncopeUser user, final String password,\n-            final Boolean enable, final ExternalResource resource)\n-            throws PropagationException {\n+            final Boolean enable, final ExternalResource resource) {\n \n         LOG.debug(\"Preparing resource attributes for {}\"\n                 + \" on resource {}\"\n@@ -489,8 +470,9 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n         }\n \n         if (!StringUtils.hasText(accountId)) {\n-            throw new PropagationException(resource.getName(),\n-                    \"Missing accountId specification\");\n+            throw new IllegalArgumentException(\n+                    \"Missing accountId specification for \"\n+                    + resource.getName());\n         }\n \n         // Evaluate AccountLink expression\n@@ -519,6 +501,102 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n         return new DefaultMapEntry(accountId, attributes);\n     }\n \n+    /**\n+     * Implementation of the provisioning feature.\n+     *\n+     * @param user user to be provisioned\n+     * @param password cleartext password to be provisioned\n+     * @param enable wether user must be enabled or not\n+     * @param propByRes operation to be performed per resource\n+     * @return list of propagation tasks created\n+     * @throws PropagationException if anything goes wrong\n+     */\n+    protected List<PropagationTask> provision(final SyncopeUser user,\n+            final String password, final Boolean enable,\n+            final PropagationByResource propByRes)\n+            throws NotFoundException {\n+\n+        LOG.debug(\"Provisioning with user {}:\\n{}\", user, propByRes);\n+\n+        // Avoid duplicates - see javadoc\n+        propByRes.purge();\n+        LOG.debug(\"After purge: {}\", propByRes);\n+\n+        List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n+\n+        List<ExternalResource> resources = resourceDAO.findAllByPriority();\n+        List<ExternalResource> resourcesByPriority;\n+        Map.Entry<String, Set<Attribute>> preparedAttrs;\n+        PropagationTask task;\n+        for (PropagationOperation type : PropagationOperation.values()) {\n+            resourcesByPriority = new ArrayList<ExternalResource>();\n+            for (ExternalResource resource : resources) {\n+                if (propByRes.get(type).contains(resource.getName())) {\n+                    resourcesByPriority.add(resource);\n+                }\n+            }\n+\n+            for (ExternalResource resource : resourcesByPriority) {\n+                preparedAttrs = prepareAttributes(\n+                        user, password, enable, resource);\n+\n+                task = new PropagationTask();\n+                task.setResource(resource);\n+                task.setResourceOperationType(type);\n+                task.setPropagationMode(resource.getPropagationMode());\n+                task.setAccountId(preparedAttrs.getKey());\n+                task.setOldAccountId(\n+                        propByRes.getOldAccountId(resource.getName()));\n+                task.setAttributes(preparedAttrs.getValue());\n+\n+                tasks.add(task);\n+\n+                LOG.debug(\"Execution started for {}\", task);\n+            }\n+        }\n+\n+        return tasks;\n+    }\n+\n+    /**\n+     * Execute a list of PropagationTask, in given order.\n+     *\n+     * @param tasks to be execute, in given order\n+     * @throws PropagationException if propagation goes wrong: propagation is\n+     * interrupted as soon as the result of the communication with a primary\n+     * resource is in error\n+     */\n+    public void execute(final List<PropagationTask> tasks)\n+            throws PropagationException {\n+\n+        TaskExec execution;\n+        PropagationTaskExecStatus execStatus;\n+        for (PropagationTask task : tasks) {\n+            LOG.debug(\"Execution started for {}\", task);\n+\n+            execution = execute(task, new Date());\n+\n+            LOG.debug(\"Execution finished for {}, {}\", task, execution);\n+\n+            // Propagation is interrupted as soon as the result of the\n+            // communication with a primary resource is in error\n+            try {\n+                execStatus = PropagationTaskExecStatus.valueOf(\n+                        execution.getStatus());\n+            } catch (IllegalArgumentException e) {\n+                LOG.error(\"Unexpected execution status found {}\",\n+                        execution.getStatus());\n+                execStatus = PropagationTaskExecStatus.FAILURE;\n+            }\n+            if (task.getResource().isPropagationPrimary()\n+                    && !execStatus.isSuccessful()) {\n+\n+                throw new PropagationException(task.getResource().getName(),\n+                        execution.getMessage());\n+            }\n+        }\n+    }\n+\n     /**\n      * Check wether an execution has to be stored, for a given task.\n      *\n@@ -574,7 +652,7 @@ private boolean hasToBeregistered(final PropagationTask task,\n      * @param startDate timestamp for beginning task excecution\n      * @return TaskExecution\n      */\n-    public TaskExec propagate(final PropagationTask task,\n+    public TaskExec execute(final PropagationTask task,\n             final Date startDate) {\n \n         TaskExec execution = new TaskExec();"},{"sha":"49653a7e7525c32f9dfb9b62aea8ff763065c785","filename":"core/src/main/java/org/syncope/core/persistence/util/XmlSerializer.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FXmlSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FXmlSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FXmlSerializer.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -32,10 +32,10 @@\n  * It uses the JDK XMLEncoder and XMLDecoder.\n  * \n  */\n-public class XmlConfiguration {\n+public class XmlSerializer {\n \n     private static final Logger LOG =\n-            LoggerFactory.getLogger(XmlConfiguration.class);\n+            LoggerFactory.getLogger(XmlSerializer.class);\n \n     public static String serialize(final Serializable object) {\n         try {","previous_filename":"core/src/main/java/org/syncope/core/persistence/util/XmlConfiguration.java"},{"sha":"2e736d35f62b3ddddc764b6328e87f8d84ff56fe","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/AbstractValidator.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.persistence.validation.attrvalue;\n \n+import java.io.Serializable;\n import java.text.DecimalFormat;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n@@ -22,7 +23,9 @@\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n \n-public abstract class AbstractValidator implements Validator {\n+public abstract class AbstractValidator implements Validator, Serializable {\n+\n+    private static final long serialVersionUID = -5439345166669502493L;\n \n     /*\n      * Logger"},{"sha":"0fd326d9f787ba9b54be7269ed30ffd8a9ffe3b9","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/BasicValidator.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -20,6 +20,8 @@\n \n public class BasicValidator extends AbstractValidator {\n \n+    private static final long serialVersionUID = -2606728447694223607L;\n+\n     public BasicValidator(AbstractSchema schema) {\n \n         super(schema);"},{"sha":"f80674f149d59814bc962cd9decd88cc43fdf342","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -342,7 +342,7 @@ public TaskExecTO execute(\n         LOG.debug(\"Execution started for {}\", task);\n         switch (getTaskUtil(task)) {\n             case PROPAGATION:\n-                final TaskExec execution = propagationManager.propagate(\n+                final TaskExec execution = propagationManager.execute(\n                         (PropagationTask) task, new Date());\n                 result = binder.getTaskExecutionTO(execution);\n                 break;"},{"sha":"f2c757243dc36284f1758a3d4fb6d2bd8ea45665","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":113,"deletions":90,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -28,71 +28,57 @@\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.web.servlet.ModelAndView;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.search.NodeCond;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.dao.UserSearchDAO;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.util.EntitlementUtil;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n import org.syncope.core.workflow.WorkflowException;\n \n+/**\n+ * Note that this controller does not extend AbstractController, hence does not \n+ * provide any Spring's @Transactional logic at class level.\n+ *\n+ * @see AbstractController\n+ */\n @Controller\n @RequestMapping(\"/user\")\n-public class UserController extends AbstractController {\n+public class UserController {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(UserController.class);\n \n     @Autowired\n     private UserDAO userDAO;\n \n     @Autowired\n-    private UserSearchDAO userSearchDAO;\n+    private UserSearchDAO searchDAO;\n \n     @Autowired\n-    private UserDataBinder userDataBinder;\n+    private UserDataBinder dataBinder;\n \n     @Autowired\n     private UserWorkflowAdapter wfAdapter;\n \n-    /**\n-     * Check if roles are allowed to be administered by the caller.\n-     *\n-     * @param roleIds roles to be administered\n-     * @throws UnauthorizedRoleException if permissions are not sufficient\n-     */\n-    private void checkPermissions(final Set<Long> roleIds)\n-            throws UnauthorizedRoleException {\n-\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n-                EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n-        }\n-    }\n-\n-    private SyncopeUser getUserFromId(final Long userId)\n-            throws NotFoundException, UnauthorizedRoleException {\n-\n-        SyncopeUser user = userDAO.find(userId);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + userId);\n-        }\n-\n-        Set<Long> roleIds = new HashSet<Long>(user.getRoles().size());\n-        for (SyncopeRole role : user.getRoles()) {\n-            roleIds.add(role.getId());\n-        }\n-        checkPermissions(roleIds);\n-\n-        return user;\n-    }\n+    @Autowired\n+    private PropagationManager propagationManager;\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n@@ -102,7 +88,7 @@ public ModelAndView verifyPassword(@PathVariable(\"userId\") Long userId,\n             @RequestParam(\"password\") final String password)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        SyncopeUser user = getUserFromId(userId);\n+        SyncopeUser user = dataBinder.getUserFromId(userId);\n \n         SyncopeUser passwordUser = new SyncopeUser();\n         passwordUser.setPassword(password, user.getCipherAlgoritm(), 0);\n@@ -114,7 +100,9 @@ public ModelAndView verifyPassword(@PathVariable(\"userId\") Long userId,\n     @PreAuthorize(\"hasRole('TASK_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/count\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public ModelAndView count() {\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n                 EntitlementUtil.getOwnedEntitlementNames());\n@@ -125,7 +113,9 @@ public ModelAndView count() {\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search/count\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -138,19 +128,21 @@ public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n                 EntitlementUtil.getOwnedEntitlementNames());\n \n         return new ModelAndView().addObject(\n-                userSearchDAO.count(adminRoleIds, searchCondition));\n+                searchDAO.count(adminRoleIds, searchCondition));\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public List<UserTO> list() {\n         List<SyncopeUser> users = userDAO.findAll(EntitlementUtil.getRoleIds(\n                 EntitlementUtil.getOwnedEntitlementNames()));\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(userDataBinder.getUserTO(user));\n+            userTOs.add(dataBinder.getUserTO(user.getId()));\n         }\n \n         return userTOs;\n@@ -159,7 +151,9 @@ public List<UserTO> list() {\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list/{page}/{size}\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public List<UserTO> list(\n             @PathVariable(\"page\") final int page,\n             @PathVariable(\"size\") final int size) {\n@@ -170,7 +164,7 @@ public List<UserTO> list(\n         List<SyncopeUser> users = userDAO.findAll(adminRoleIds, page, size);\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(userDataBinder.getUserTO(user));\n+            userTOs.add(dataBinder.getUserTO(user.getId()));\n         }\n \n         return userTOs;\n@@ -179,17 +173,23 @@ public List<UserTO> list(\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/read/{userId}\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public UserTO read(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        return userDataBinder.getUserTO(getUserFromId(userId));\n+        SyncopeUser user = dataBinder.getUserFromId(userId);\n+\n+        return dataBinder.getUserTO(user.getId());\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -200,12 +200,12 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n             throw new InvalidSearchConditionException();\n         }\n \n-        List<SyncopeUser> matchingUsers = userSearchDAO.search(\n+        List<SyncopeUser> matchingUsers = searchDAO.search(\n                 EntitlementUtil.getRoleIds(EntitlementUtil.\n                 getOwnedEntitlementNames()), searchCondition);\n         List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(userDataBinder.getUserTO(user));\n+            result.add(dataBinder.getUserTO(user.getId()));\n         }\n \n         return result;\n@@ -214,7 +214,9 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search/{page}/{size}\")\n-    @Transactional(readOnly = true)\n+    @Transactional(readOnly = true, rollbackFor = {\n+        Throwable.class\n+    })\n     public List<UserTO> search(\n             @RequestBody final NodeCond searchCondition,\n             @PathVariable(\"page\") final int page,\n@@ -228,14 +230,14 @@ public List<UserTO> search(\n             throw new InvalidSearchConditionException();\n         }\n \n-        final List<SyncopeUser> matchingUsers = userSearchDAO.search(\n+        final List<SyncopeUser> matchingUsers = searchDAO.search(\n                 EntitlementUtil.getRoleIds(\n                 EntitlementUtil.getOwnedEntitlementNames()),\n                 searchCondition, page, size);\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(userDataBinder.getUserTO(user));\n+            result.add(dataBinder.getUserTO(user.getId()));\n         }\n \n         return result;\n@@ -245,26 +247,32 @@ public List<UserTO> search(\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n     public UserTO create(final HttpServletResponse response,\n-            @RequestBody final UserTO userTO,\n-            @RequestParam(value = \"mandatoryRoles\",\n-            required = false) final Set<Long> mandatoryRoles,\n-            @RequestParam(value = \"mandatoryResources\",\n-            required = false) final Set<String> mandatoryResources)\n+            @RequestBody final UserTO userTO)\n             throws PropagationException, UnauthorizedRoleException,\n-            WorkflowException {\n+            WorkflowException, NotFoundException {\n \n-        LOG.debug(\"User create called with parameters {}\\n{}\\n{}\",\n-                new Object[]{userTO, mandatoryRoles, mandatoryResources});\n+        LOG.debug(\"User create called with {}\", userTO);\n \n         Set<Long> requestRoleIds =\n                 new HashSet<Long>(userTO.getMemberships().size());\n         for (MembershipTO membership : userTO.getMemberships()) {\n             requestRoleIds.add(membership.getRoleId());\n         }\n-        checkPermissions(requestRoleIds);\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n+                EntitlementUtil.getOwnedEntitlementNames());\n+        requestRoleIds.removeAll(adminRoleIds);\n+        if (!requestRoleIds.isEmpty()) {\n+            throw new UnauthorizedRoleException(requestRoleIds);\n+        }\n+\n+        Map.Entry<Long, Boolean> created = wfAdapter.create(userTO);\n \n-        final UserTO savedTO = userDataBinder.getUserTO(\n-                wfAdapter.create(userTO, mandatoryRoles, mandatoryResources));\n+        List<PropagationTask> tasks = propagationManager.getCreateTaskIds(\n+                created.getKey(), userTO.getPassword(),\n+                userTO.getVirtualAttributes(), created.getValue());\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(created.getKey());\n \n         LOG.debug(\"About to return created user\\n{}\", savedTO);\n \n@@ -279,9 +287,13 @@ public UserTO activate(@RequestBody final UserTO userTO)\n             throws WorkflowException, NotFoundException,\n             UnauthorizedRoleException, PropagationException {\n \n-        final UserTO savedTO = userDataBinder.getUserTO(\n-                wfAdapter.activate(getUserFromId(userTO.getId()),\n-                userTO.getToken()));\n+        Long updatedId = wfAdapter.activate(userTO.getId(), userTO.getToken());\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updatedId, null, null, null, Boolean.TRUE, null);\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n \n         LOG.debug(\"About to return activated user\\n{}\", savedTO);\n \n@@ -291,20 +303,23 @@ public UserTO activate(@RequestBody final UserTO userTO)\n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n-    public UserTO update(@RequestBody final UserMod userMod,\n-            @RequestParam(value = \"mandatoryRoles\",\n-            required = false) final Set<Long> mandatoryRoles,\n-            @RequestParam(value = \"mandatoryResources\",\n-            required = false) final Set<String> mandatoryResources)\n+    public UserTO update(@RequestBody final UserMod userMod)\n             throws NotFoundException, PropagationException,\n             UnauthorizedRoleException, WorkflowException {\n \n-        LOG.debug(\"User update called with parameters {}\\n{}\\n{}\",\n-                new Object[]{userMod, mandatoryRoles, mandatoryResources});\n+        LOG.debug(\"User update called with {}\", userMod);\n+\n+        Map.Entry<Long, PropagationByResource> updated =\n+                wfAdapter.update(userMod);\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updated.getKey(), userMod.getPassword(),\n+                userMod.getVirtualAttributesToBeRemoved(),\n+                userMod.getVirtualAttributesToBeAdded(),\n+                null, updated.getValue());\n+        propagationManager.execute(tasks);\n \n-        final UserTO updatedTO = userDataBinder.getUserTO(\n-                wfAdapter.update(getUserFromId(userMod.getId()), userMod,\n-                mandatoryRoles, mandatoryResources));\n+        final UserTO updatedTO = dataBinder.getUserTO(updated.getKey());\n \n         LOG.debug(\"About to return updated user\\n{}\", updatedTO);\n \n@@ -320,8 +335,13 @@ public UserTO suspend(@PathVariable(\"userId\") final Long userId)\n \n         LOG.debug(\"About to suspend \" + userId);\n \n-        final UserTO savedTO = userDataBinder.getUserTO(\n-                wfAdapter.suspend(getUserFromId(userId)));\n+        Long updatedId = wfAdapter.suspend(userId);\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updatedId, null, null, null, Boolean.FALSE, null);\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n \n         LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n \n@@ -337,8 +357,13 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId)\n \n         LOG.debug(\"About to reactivate \" + userId);\n \n-        final UserTO savedTO = userDataBinder.getUserTO(\n-                wfAdapter.reactivate(getUserFromId(userId)));\n+        Long updatedId = wfAdapter.reactivate(userId);\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updatedId, null, null, null, Boolean.TRUE, null);\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n \n         LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n \n@@ -348,19 +373,17 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId)\n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE,\n     value = \"/delete/{userId}\")\n-    public void delete(@PathVariable(\"userId\") final Long userId,\n-            @RequestParam(value = \"mandatoryRoles\",\n-            required = false) final Set<Long> mandatoryRoles,\n-            @RequestParam(value = \"mandatoryResources\",\n-            required = false) final Set<String> mandatoryResources)\n+    public void delete(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, WorkflowException, PropagationException,\n             UnauthorizedRoleException {\n \n-        LOG.debug(\"User delete called with parameters {}\\n{}\\n{}\",\n-                new Object[]{userId, mandatoryRoles, mandatoryResources});\n+        LOG.debug(\"User delete called with {}\", userId);\n+\n+        List<PropagationTask> tasks =\n+                propagationManager.getDeleteTaskIds(userId);\n+        propagationManager.execute(tasks);\n \n-        wfAdapter.delete(getUserFromId(userId),\n-                mandatoryRoles, mandatoryResources);\n+        wfAdapter.delete(userId);\n \n         LOG.debug(\"User successfully deleted: {}\", userId);\n     }"},{"sha":"6afe4974caedd5446002fc870691d5756d305ff3","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":138,"deletions":110,"changes":248,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -292,6 +292,91 @@ private SyncopeClientException checkMandatory(\n         return requiredValuesMissing;\n     }\n \n+    public PropagationByResource fillVirtual(\n+            final AbstractAttributable attributable,\n+            final Set<String> vAttrsToBeRemoved,\n+            final Set<String> vAttrsToBeAdded,\n+            final AttributableUtil attributableUtil) {\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+\n+        AbstractVirSchema virtualSchema;\n+        AbstractVirAttr virtualAttribute;\n+\n+        // 1. virtual attributes to be removed\n+        for (String vAttrToBeRemoved : vAttrsToBeRemoved) {\n+            virtualSchema = getVirtualSchema(vAttrToBeRemoved,\n+                    attributableUtil.virtualSchemaClass());\n+\n+            if (virtualSchema != null) {\n+                virtualAttribute = attributable.getVirtualAttribute(\n+                        virtualSchema.getName());\n+\n+                if (virtualAttribute == null) {\n+                    LOG.debug(\"No virtual attribute found for schema {}\",\n+                            virtualSchema.getName());\n+                } else {\n+                    virAttrDAO.delete(virtualAttribute);\n+                }\n+\n+                for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n+                    if (virtualSchema.getName().equals(\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.virtualIntMappingType()\n+                            && mapping.getResource() != null\n+                            && attributable.getExternalResources().\n+                            contains(mapping.getResource())) {\n+\n+                        propByRes.add(PropagationOperation.UPDATE,\n+                                mapping.getResource());\n+\n+                        if (mapping.isAccountid() && virtualAttribute != null\n+                                && !virtualAttribute.getValues().isEmpty()) {\n+\n+                            propByRes.addOldAccountId(\n+                                    mapping.getResource().getName(),\n+                                    virtualAttribute.getValues().get(0));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        LOG.debug(\"Virtual attributes to be removed:\\n{}\", propByRes);\n+\n+        // 2. virtual attributes to be added\n+        for (String vAttrToBeAdded : vAttrsToBeAdded) {\n+            virtualSchema = getVirtualSchema(vAttrToBeAdded,\n+                    attributableUtil.virtualSchemaClass());\n+\n+            if (virtualSchema != null) {\n+                for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n+                    if (virtualSchema.getName().equals(\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.virtualIntMappingType()\n+                            && mapping.getResource() != null\n+                            && attributable.getExternalResources().\n+                            contains(mapping.getResource())) {\n+\n+                        propByRes.add(PropagationOperation.UPDATE,\n+                                mapping.getResource());\n+                    }\n+                }\n+\n+                virtualAttribute = attributableUtil.newVirtualAttribute();\n+                virtualAttribute.setVirtualSchema(virtualSchema);\n+                virtualAttribute.setOwner(attributable);\n+                attributable.addVirtualAttribute(virtualAttribute);\n+            }\n+        }\n+\n+        LOG.debug(\"Virtual attributes to be added:\\n{}\", propByRes);\n+\n+        return propByRes;\n+    }\n+\n     protected PropagationByResource fill(\n             final AbstractAttributable attributable,\n             final AbstractAttributableMod attributableMod,\n@@ -353,8 +438,6 @@ protected PropagationByResource fill(\n         AbstractAttr attribute;\n         AbstractDerSchema derivedSchema;\n         AbstractDerAttr derivedAttribute;\n-        AbstractVirSchema virtualSchema;\n-        AbstractVirAttr virtualAttribute;\n \n         // 3. attributes to be removed\n         for (String attributeToBeRemoved :\n@@ -547,53 +630,7 @@ protected PropagationByResource fill(\n         LOG.debug(\"Derived attributes to be removed:\\n{}\",\n                 propByRes);\n \n-        // 6. virtual attributes to be removed\n-        for (String virtualAttributeToBeRemoved :\n-                attributableMod.getVirtualAttributesToBeRemoved()) {\n-\n-            virtualSchema = getVirtualSchema(virtualAttributeToBeRemoved,\n-                    attributableUtil.virtualSchemaClass());\n-\n-            if (virtualSchema != null) {\n-\n-                virtualAttribute = attributable.getVirtualAttribute(\n-                        virtualSchema.getName());\n-\n-                if (virtualAttribute == null) {\n-                    LOG.debug(\"No virtual attribute found for schema {}\",\n-                            virtualSchema.getName());\n-                } else {\n-                    virAttrDAO.delete(virtualAttribute);\n-                }\n-\n-                for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-                    if (virtualSchema.getName().equals(\n-                            mapping.getIntAttrName())\n-                            && mapping.getIntMappingType()\n-                            == attributableUtil.virtualIntMappingType()\n-                            && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n-                            contains(mapping.getResource())) {\n-\n-                        propByRes.add(PropagationOperation.UPDATE,\n-                                mapping.getResource());\n-\n-                        if (mapping.isAccountid() && virtualAttribute != null\n-                                && !virtualAttribute.getValues().isEmpty()) {\n-\n-                            propByRes.addOldAccountId(\n-                                    mapping.getResource().getName(),\n-                                    virtualAttribute.getValues().get(0));\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        LOG.debug(\"Virtual attributes to be removed:\\n{}\",\n-                propByRes);\n-\n-        // 7. derived attributes to be added\n+        // 6. derived attributes to be added\n         for (String derivedAttributeToBeAdded :\n                 attributableMod.getDerivedAttributesToBeAdded()) {\n \n@@ -625,38 +662,15 @@ protected PropagationByResource fill(\n         LOG.debug(\"Derived attributes to be added:\\n{}\",\n                 propByRes);\n \n-        // 8. virtual attributes to be added\n-        for (String virtualAttributeToBeAdded :\n-                attributableMod.getVirtualAttributesToBeAdded()) {\n-\n-            virtualSchema = getVirtualSchema(virtualAttributeToBeAdded,\n-                    attributableUtil.virtualSchemaClass());\n-\n-            if (virtualSchema != null) {\n-                for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-                    if (virtualSchema.getName().equals(\n-                            mapping.getIntAttrName())\n-                            && mapping.getIntMappingType()\n-                            == attributableUtil.virtualIntMappingType()\n-                            && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n-                            contains(mapping.getResource())) {\n-\n-                        propByRes.add(PropagationOperation.UPDATE,\n-                                mapping.getResource());\n-                    }\n-                }\n-\n-                virtualAttribute = attributableUtil.newVirtualAttribute();\n-                virtualAttribute.setVirtualSchema(virtualSchema);\n-                virtualAttribute.setOwner(attributable);\n-                attributable.addVirtualAttribute(virtualAttribute);\n-            }\n+        // 7. virtual attributes: for users this is delegated to \n+        // PropagationManager\n+        if (AttributableUtil.USER != attributableUtil) {\n+            fillVirtual(attributable,\n+                    attributableMod.getVirtualAttributesToBeRemoved(),\n+                    attributableMod.getVirtualAttributesToBeAdded(),\n+                    attributableUtil);\n         }\n \n-        LOG.debug(\"Virtual attributes to be added:\\n{}\",\n-                propByRes);\n-\n         // Finally, check if mandatory values are missing\n         SyncopeClientException requiredValuesMissing =\n                 checkMandatory(attributableUtil, attributable);\n@@ -673,10 +687,30 @@ protected PropagationByResource fill(\n         return propByRes;\n     }\n \n-    protected void fill(AbstractAttributable attributable,\n-            AbstractAttributableTO attributableTO,\n-            AttributableUtil attributableUtil,\n-            SyncopeClientCompositeErrorException compositeErrorException)\n+    public void fillVirtual(final AbstractAttributable attributable,\n+            final List<AttributeTO> vAttrs,\n+            final AttributableUtil attributableUtil) {\n+\n+        AbstractVirSchema virtualSchema;\n+        AbstractVirAttr virtualAttribute;\n+        for (AttributeTO attributeTO : vAttrs) {\n+            virtualSchema = getVirtualSchema(attributeTO.getSchema(),\n+                    attributableUtil.virtualSchemaClass());\n+\n+            if (virtualSchema != null) {\n+                virtualAttribute = attributableUtil.newVirtualAttribute();\n+                virtualAttribute.setVirtualSchema(virtualSchema);\n+                virtualAttribute.setOwner(attributable);\n+                virtualAttribute.setValues(attributeTO.getValues());\n+                attributable.addVirtualAttribute(virtualAttribute);\n+            }\n+        }\n+    }\n+\n+    protected void fill(final AbstractAttributable attributable,\n+            final AbstractAttributableTO attributableTO,\n+            final AttributableUtil attributableUtil,\n+            final SyncopeClientCompositeErrorException compositeErrorException)\n             throws SyncopeClientCompositeErrorException {\n \n         // 1. attributes\n@@ -741,36 +775,31 @@ protected void fill(AbstractAttributable attributable,\n             }\n         }\n \n-        // 3. virtual attributes\n-        AbstractVirSchema virtualSchema;\n-        AbstractVirAttr virtualAttribute;\n-        for (AttributeTO attributeTO : attributableTO.getVirtualAttributes()) {\n-\n-            virtualSchema = getVirtualSchema(attributeTO.getSchema(),\n-                    attributableUtil.virtualSchemaClass());\n-\n-            if (virtualSchema != null) {\n-                virtualAttribute = attributableUtil.newVirtualAttribute();\n-                virtualAttribute.setVirtualSchema(virtualSchema);\n-                virtualAttribute.setOwner(attributable);\n-                virtualAttribute.setValues(attributeTO.getValues());\n-                attributable.addVirtualAttribute(virtualAttribute);\n-            }\n+        // 3. virtual attributes: for users this is delegated to \n+        // PropagationManager\n+        if (AttributableUtil.USER != attributableUtil) {\n+            fillVirtual(attributable, attributableTO.getVirtualAttributes(),\n+                    attributableUtil);\n         }\n \n-        // 3. resources\n+        // 4. resources\n         ExternalResource resource;\n         for (String resourceName : attributableTO.getResources()) {\n             resource = getResource(resourceName);\n \n             if (resource != null) {\n                 attributable.addExternalResource(resource);\n \n-                if (attributableUtil == attributableUtil.USER) {\n-                    resource.addUser((SyncopeUser) attributable);\n-                }\n-                if (attributableUtil == attributableUtil.ROLE) {\n-                    resource.addRole((SyncopeRole) attributable);\n+                switch (attributableUtil) {\n+                    case USER:\n+                        resource.addUser((SyncopeUser) attributable);\n+                        break;\n+\n+                    case ROLE:\n+                        resource.addRole((SyncopeRole) attributable);\n+                        break;\n+\n+                    default:\n                 }\n             }\n         }\n@@ -783,11 +812,11 @@ protected void fill(AbstractAttributable attributable,\n     }\n \n     public void fillTO(\n-            AbstractAttributableTO abstractAttributableTO,\n-            Collection<? extends AbstractAttr> attributes,\n-            Collection<? extends AbstractDerAttr> derivedAttributes,\n-            Collection<? extends AbstractVirAttr> virtualAttributes,\n-            Collection<ExternalResource> resources) {\n+            final AbstractAttributableTO abstractAttributableTO,\n+            final Collection<? extends AbstractAttr> attributes,\n+            final Collection<? extends AbstractDerAttr> derivedAttributes,\n+            final Collection<? extends AbstractVirAttr> virtualAttributes,\n+            final Collection<ExternalResource> resources) {\n \n         AttributeTO attributeTO;\n         for (AbstractAttr attribute : attributes) {\n@@ -810,7 +839,6 @@ public void fillTO(\n         }\n \n         for (AbstractVirAttr virtualAttribute : virtualAttributes) {\n-\n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(\n                     virtualAttribute.getVirtualSchema().getName());"},{"sha":"1d2023e82e7c4ff71c4ba63a3b448c674067a396","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -59,9 +59,6 @@ public class ResourceDataBinder {\n     @Autowired\n     private JexlUtil jexlUtil;\n \n-    @Autowired\n-    private PolicyDataBinder policyDataBinder;\n-\n     @Autowired\n     private PolicyDAO policyDAO;\n \n@@ -95,8 +92,12 @@ public ExternalResource getResource(final ExternalResource resource,\n         resource.setForceMandatoryConstraint(\n                 resourceTO.isForceMandatoryConstraint());\n \n-        resource.setOptionalPropagationMode(\n-                resourceTO.getOptionalPropagationMode());\n+        resource.setPropagationPrimary(resourceTO.isPropagationPrimary());\n+\n+        resource.setPropagationPriority(resourceTO.getPropagationPriority());\n+\n+        resource.setPropagationMode(\n+                resourceTO.getPropagationMode());\n \n         resource.setMappings(\n                 getSchemaMappings(resource, resourceTO.getMappings()));\n@@ -161,8 +162,12 @@ public ResourceTO getResourceTO(ExternalResource resource) {\n         resourceTO.setForceMandatoryConstraint(\n                 resource.isForceMandatoryConstraint());\n \n-        resourceTO.setOptionalPropagationMode(\n-                resource.getOptionalPropagationMode());\n+        resourceTO.setPropagationPrimary(resource.isPropagationPrimary());\n+\n+        resourceTO.setPropagationPriority(resource.getPropagationPriority());\n+\n+        resourceTO.setPropagationMode(\n+                resource.getPropagationMode());\n \n         resourceTO.setCreateTraceLevel(resource.getCreateTraceLevel());\n         resourceTO.setUpdateTraceLevel(resource.getUpdateTraceLevel());"},{"sha":"fcef9e5e2bfef7b858c6062ebb4b1de726ab9639","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":32,"deletions":2,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -17,9 +17,11 @@\n import org.syncope.core.util.AttributableUtil;\n import java.util.HashSet;\n import java.util.Set;\n+import javassist.NotFoundException;\n import org.apache.commons.lang.StringUtils;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.MembershipMod;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.MembershipTO;\n@@ -38,14 +40,39 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.rest.controller.UnauthorizedRoleException;\n+import org.syncope.core.util.EntitlementUtil;\n import org.syncope.types.CipherAlgorithm;\n import org.syncope.types.PasswordPolicySpec;\n import org.syncope.types.PropagationOperation;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n+    @Transactional(readOnly = true)\n+    public SyncopeUser getUserFromId(final Long userId)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        SyncopeUser user = userDAO.find(userId);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + userId);\n+        }\n+\n+        Set<Long> roleIds = user.getRoleIds();\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n+                EntitlementUtil.getOwnedEntitlementNames());\n+        roleIds.removeAll(adminRoleIds);\n+        if (!roleIds.isEmpty()) {\n+            throw new UnauthorizedRoleException(roleIds);\n+        }\n+\n+        return user;\n+    }\n+\n     public void create(final SyncopeUser user, final UserTO userTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -274,10 +301,13 @@ public PropagationByResource update(final SyncopeUser user,\n     /**\n      * Generate a transfer object for the given JPA entity.\n      *\n-     * @param user as JPA entity\n+     * @param userId user id\n      * @return transfer object\n      */\n-    public UserTO getUserTO(final SyncopeUser user) {\n+    @Transactional(readOnly = true)\n+    public UserTO getUserTO(final Long userId) {\n+        SyncopeUser user = userDAO.find(userId);\n+\n         UserTO userTO = new UserTO();\n         userTO.setId(user.getId());\n         userTO.setToken(user.getToken());"},{"sha":"f2344b870e563df505cf607179460fb1693ca27a","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":69,"deletions":29,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -17,6 +17,7 @@\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import org.identityconnectors.common.security.GuardedByteArray;\n@@ -39,6 +40,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n@@ -49,6 +51,9 @@\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.persistence.propagation.PropagationException;\n+import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.rest.controller.InvalidSearchConditionException;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n \n@@ -95,6 +100,12 @@ public class SyncJob extends AbstractJob {\n     @Autowired\n     private UserWorkflowAdapter wfAdapter;\n \n+    /**\n+     * Propagation Manager.\n+     */\n+    @Autowired\n+    private PropagationManager propagationManager;\n+\n     /**\n      * Extract password value from passed values (if instance of GuardedString\n      * or GuardedByteArray).\n@@ -162,7 +173,7 @@ private UserTO getUserTO(final ConnectorObject obj,\n         Attribute attribute;\n         List<Object> values;\n         AttributeTO attributeTO;\n-        \n+\n         for (SchemaMapping mapping : mappings) {\n             if (mapping.isAccountid()) {\n                 attribute = obj.getAttributeByName(Name.NAME);\n@@ -374,12 +385,12 @@ protected String doExecute()\n         }\n \n         // counters\n-        int created = 0;\n-        int updated = 0;\n-        int deleted = 0;\n-        int failCreated = 0;\n-        int failUpdated = 0;\n-        int failDeleted = 0;\n+        int createdCounter = 0;\n+        int updatedCounter = 0;\n+        int deletedCounter = 0;\n+        int failCreatedCounter = 0;\n+        int failUpdatedCounter = 0;\n+        int failDeletedCounter = 0;\n \n         List<SyncopeUser> users;\n         List<Long> userIds;\n@@ -394,29 +405,49 @@ protected String doExecute()\n                 case CREATE_OR_UPDATE:\n                     if (users.isEmpty()) {\n                         try {\n-                            wfAdapter.create(getUserTO(delta.getObject(),\n+                            UserTO userTO = getUserTO(delta.getObject(),\n                                     syncTask.getResource().getMappings(),\n-                                    defaultRoles, defaultResources),\n-                                    null, null);\n-                            created++;\n+                                    defaultRoles, defaultResources);\n+                            Map.Entry<Long, Boolean> created =\n+                                    wfAdapter.create(userTO);\n+                            createdCounter++;\n+\n+                            List<PropagationTask> tasks =\n+                                    propagationManager.getCreateTaskIds(\n+                                    created.getKey(), userTO.getPassword(),\n+                                    null, created.getValue());\n+                            propagationManager.execute(tasks);\n+                        } catch (PropagationException e) {\n+                            LOG.error(\"Could not propagate user \"\n+                                    + delta.getUid().getUidValue(), e);\n                         } catch (Throwable t) {\n-                            failCreated++;\n+                            failCreatedCounter++;\n                             LOG.error(\"Could not create user \"\n                                     + delta.getUid().getUidValue(), t);\n                         }\n                     } else if (users.size() == 1) {\n                         if (syncTask.isUpdateIdentities()) {\n                             userToUpdate = users.iterator().next();\n                             try {\n-                                wfAdapter.update(userToUpdate,\n-                                        getUserMod(userToUpdate.getId(),\n-                                        delta.getObject(),\n+                                UserMod userMod = getUserMod(\n+                                        userToUpdate.getId(), delta.getObject(),\n                                         syncTask.getResource().getMappings(),\n-                                        defaultRoles, defaultResources),\n-                                        null, null);\n-                                updated++;\n+                                        defaultRoles, defaultResources);\n+\n+                                Map.Entry<Long, PropagationByResource> updated =\n+                                        wfAdapter.update(userMod);\n+                                updatedCounter++;\n+\n+                                List<PropagationTask> tasks =\n+                                        propagationManager.getUpdateTaskIds(\n+                                        updated.getKey(), userMod.getPassword(),\n+                                        null, null, null, updated.getValue());\n+                                propagationManager.execute(tasks);\n+                            } catch (PropagationException e) {\n+                                LOG.error(\"Could not propagate user \"\n+                                        + delta.getUid().getUidValue(), e);\n                             } catch (Throwable t) {\n-                                failUpdated++;\n+                                failUpdatedCounter++;\n                                 LOG.error(\"Could not update user \"\n                                         + delta.getUid().getUidValue(), t);\n                             }\n@@ -435,11 +466,18 @@ protected String doExecute()\n                     }\n                     for (Long userId : userIds) {\n                         try {\n-                            wfAdapter.delete(userDAO.find(userId),\n-                                    null, null);\n-                            deleted++;\n+                            List<PropagationTask> tasks =\n+                                    propagationManager.getDeleteTaskIds(userId);\n+                            propagationManager.execute(tasks);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not propagate user \" + userId, e);\n+                        }\n+\n+                        try {\n+                            wfAdapter.delete(userId);\n+                            deletedCounter++;\n                         } catch (Throwable t) {\n-                            failDeleted++;\n+                            failDeletedCounter++;\n                             LOG.error(\"Could not delete user \" + userId, t);\n                         }\n                     }\n@@ -450,12 +488,14 @@ protected String doExecute()\n         }\n \n         StringBuilder result = new StringBuilder();\n-        result.append(\"Users [created/failures]: \").append(created).append('/').\n-                append(failCreated).append(' ').\n-                append(\"[updated/failures]: \").append(updated).append('/').\n-                append(failUpdated).append(' ').\n-                append(\"[deleted/ failures]: \").append(deleted).append('/').\n-                append(failDeleted);\n+        result.append(\"Users [created/failures]: \").append(createdCounter).\n+                append('/').\n+                append(failCreatedCounter).append(' ').\n+                append(\"[updated/failures]: \").append(updatedCounter).append('/').\n+                append(failUpdatedCounter).append(' ').\n+                append(\"[deleted/ failures]: \").append(deletedCounter).append(\n+                '/').\n+                append(failDeletedCounter);\n         LOG.debug(\"Sync result: {}\", result);\n \n         try {"},{"sha":"ce6d57ba3ae47d6c1c2721f26dfd0bcd165d94de","filename":"core/src/main/java/org/syncope/core/workflow/AbstractUserWorkflowAdapter.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import java.util.Map;\n+import javassist.NotFoundException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.mod.UserMod;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.rest.controller.UnauthorizedRoleException;\n+import org.syncope.core.rest.data.UserDataBinder;\n+\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n+public abstract class AbstractUserWorkflowAdapter\n+        implements UserWorkflowAdapter {\n+\n+    @Autowired\n+    protected UserDataBinder dataBinder;\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    protected abstract Long doActivate(SyncopeUser user, String token)\n+            throws WorkflowException;\n+\n+    @Override\n+    public Long activate(final Long userId, final String token)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        return doActivate(dataBinder.getUserFromId(userId), token);\n+    }\n+\n+    protected abstract Map.Entry<Long, PropagationByResource> doUpdate(\n+            SyncopeUser user, UserMod userMod)\n+            throws WorkflowException;\n+\n+    @Override\n+    public Map.Entry<Long, PropagationByResource> update(\n+            final UserMod userMod)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        return doUpdate(dataBinder.getUserFromId(userMod.getId()), userMod);\n+    }\n+\n+    protected abstract Long doSuspend(SyncopeUser user)\n+            throws WorkflowException;\n+\n+    @Override\n+    public Long suspend(final Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        return doSuspend(dataBinder.getUserFromId(userId));\n+    }\n+\n+    protected abstract Long doReactivate(SyncopeUser user)\n+            throws WorkflowException;\n+\n+    @Override\n+    public Long reactivate(final Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        return doReactivate(dataBinder.getUserFromId(userId));\n+    }\n+\n+    protected abstract void doDelete(SyncopeUser user)\n+            throws WorkflowException;\n+\n+    @Override\n+    public void delete(final Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        doDelete(dataBinder.getUserFromId(userId));\n+    }\n+}"},{"sha":"18e0e674314edb943b9435b1f55e4a098fc6a974","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":21,"deletions":91,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -17,7 +17,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import javassist.NotFoundException;\n import org.activiti.engine.ActivitiException;\n import org.activiti.engine.IdentityService;\n@@ -26,27 +25,20 @@\n import org.activiti.engine.identity.User;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n+import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.commons.lang.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.persistence.propagation.PropagationException;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n-import org.syncope.types.PropagationOperation;\n \n /**\n  * Activiti (http://www.activiti.org/) based implementation.\n  */\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n-public class ActivitiUserWorkflowAdapter implements UserWorkflowAdapter {\n+public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     /**\n      * Logger.\n@@ -79,15 +71,6 @@ public class ActivitiUserWorkflowAdapter implements UserWorkflowAdapter {\n     @Autowired\n     private IdentityService identityService;\n \n-    @Autowired\n-    private UserService userService;\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    @Autowired\n-    private PropagationManager propagationManager;\n-\n     private void setStatus(final String processInstanceId,\n             final SyncopeUser user) {\n \n@@ -102,10 +85,8 @@ private void setStatus(final String processInstanceId,\n     }\n \n     @Override\n-    public SyncopeUser create(final UserTO userTO,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n+    public Map.Entry<Long, Boolean> create(final UserTO userTO)\n+            throws WorkflowException {\n \n         final Map<String, Object> variables = new HashMap<String, Object>();\n         variables.put(USER_TO, userTO);\n@@ -127,21 +108,10 @@ public SyncopeUser create(final UserTO userTO,\n         User activitiUser = identityService.newUser(user.getId().toString());\n         identityService.saveUser(activitiUser);\n \n-        // Now that user is created locally, let's propagate\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n         Boolean enable = (Boolean) runtimeService.getVariable(\n                 processInstance.getProcessInstanceId(), PROPAGATE_ENABLE);\n-        propagationManager.create(\n-                user, userTO.getPassword(), enable, mandatoryResourceNames);\n \n-        return user;\n+        return new DefaultMapEntry(user.getId(), enable);\n     }\n \n     private void doExecuteAction(final SyncopeUser user,\n@@ -174,27 +144,21 @@ private void doExecuteAction(final SyncopeUser user,\n     }\n \n     @Override\n-    public SyncopeUser activate(final SyncopeUser user, final String token)\n-            throws WorkflowException, PropagationException {\n+    protected Long doActivate(final SyncopeUser user, final String token)\n+            throws WorkflowException {\n \n         doExecuteAction(user, \"activate\",\n                 Collections.singletonMap(TOKEN, (Object) token));\n         setStatus(user.getWorkflowId(), user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, true, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n+    protected Map.Entry<Long, PropagationByResource> doUpdate(\n+            final SyncopeUser user, final UserMod userMod)\n+            throws WorkflowException {\n \n         doExecuteAction(user, \"update\",\n                 Collections.singletonMap(USER_MOD, (Object) userMod));\n@@ -205,71 +169,37 @@ public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n                 (PropagationByResource) runtimeService.getVariable(\n                 user.getWorkflowId(), PROP_BY_RESOURCE);\n \n-        // Now that user is updated locally, let's propagate\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n-        propagationManager.update(updated, userMod.getPassword(), null,\n-                propByRes, mandatoryResourceNames);\n-\n-        return updated;\n+        return new DefaultMapEntry(updated.getId(), propByRes);\n     }\n \n     @Override\n-    public SyncopeUser suspend(final SyncopeUser user)\n-            throws WorkflowException, PropagationException {\n+    protected Long doSuspend(final SyncopeUser user)\n+            throws WorkflowException {\n \n         doExecuteAction(user, \"suspend\", null);\n         setStatus(user.getWorkflowId(), user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, false, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public SyncopeUser reactivate(final SyncopeUser user)\n-            throws WorkflowException, PropagationException {\n+    protected Long doReactivate(final SyncopeUser user)\n+            throws WorkflowException {\n \n         doExecuteAction(user, \"reactivate\", null);\n         setStatus(user.getWorkflowId(), user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, true, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public void delete(final SyncopeUser user,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n-\n-        // Propagate delete\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n-        propagationManager.delete(user, mandatoryResourceNames);\n+    protected void doDelete(final SyncopeUser user)\n+            throws WorkflowException {\n \n         doExecuteAction(user, \"delete\", null);\n+        userDAO.delete(user);\n \n         identityService.deleteUser(user.getId().toString());\n     }"},{"sha":"0306f9a035123535543372ef106066fc74f60c8c","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":26,"deletions":101,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -14,71 +14,36 @@\n package org.syncope.core.workflow;\n \n import java.util.Map;\n-import java.util.Set;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.persistence.propagation.PropagationException;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n-import org.syncope.types.PropagationOperation;\n \n /**\n  * Simple implementation basically not involving any workflow engine.\n  */\n @Transactional(rollbackFor = {\n     Throwable.class\n })\n-public class NoOpUserWorkflowAdapter implements UserWorkflowAdapter {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(NoOpUserWorkflowAdapter.class);\n-\n-    @Autowired\n-    private UserService userService;\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    @Autowired\n-    private PropagationManager propagationManager;\n+public class NoOpUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     @Override\n-    public SyncopeUser create(final UserTO userTO,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n+    public Map.Entry<Long, Boolean> create(final UserTO userTO)\n+            throws WorkflowException {\n \n-        SyncopeUser user = userService.create(userTO);\n+        SyncopeUser user = new SyncopeUser();\n+        dataBinder.create(user, userTO);\n         user.setStatus(\"created\");\n         user = userDAO.save(user);\n \n-        // Now that user is created locally, let's propagate\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n-        propagationManager.create(\n-                user, userTO.getPassword(), false, mandatoryResourceNames);\n-\n-        return user;\n+        return new DefaultMapEntry(user.getId(), Boolean.TRUE);\n     }\n \n     @Override\n-    public SyncopeUser activate(final SyncopeUser user, final String token)\n-            throws WorkflowException, PropagationException {\n+    protected Long doActivate(final SyncopeUser user, final String token)\n+            throws WorkflowException {\n \n         if (!user.checkToken(token)) {\n             throw new WorkflowException(\n@@ -89,85 +54,45 @@ public SyncopeUser activate(final SyncopeUser user, final String token)\n         user.setStatus(\"active\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, true, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n-\n-        Map.Entry<SyncopeUser, PropagationByResource> updated =\n-                userService.update(user, userMod);\n-\n-        // Now that user is updated locally, let's propagate\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n+    protected Map.Entry<Long, PropagationByResource> doUpdate(\n+            final SyncopeUser user, final UserMod userMod)\n+            throws WorkflowException {\n+\n+        PropagationByResource propByRes = dataBinder.update(user, userMod);\n \n-        propagationManager.update(user, userMod.getPassword(), null,\n-                updated.getValue(), mandatoryResourceNames);\n+        SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getKey();\n+        return new DefaultMapEntry(updated.getId(), propByRes);\n     }\n \n     @Override\n-    public SyncopeUser suspend(final SyncopeUser user)\n-            throws WorkflowException, PropagationException {\n+    protected Long doSuspend(final SyncopeUser user)\n+            throws WorkflowException {\n \n         user.setStatus(\"suspended\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, false, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public SyncopeUser reactivate(final SyncopeUser user)\n-            throws WorkflowException, PropagationException {\n+    protected Long doReactivate(final SyncopeUser user)\n+            throws WorkflowException {\n \n         user.setStatus(\"active\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, true, propByRes, null);\n-\n-        return updated;\n+        return updated.getId();\n     }\n \n     @Override\n-    public void delete(final SyncopeUser user,\n-            final Set<Long> mandatoryRoles,\n-            final Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException {\n-\n-        // Propagate delete\n-        Set<String> mandatoryResourceNames =\n-                userService.getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n-        propagationManager.delete(user, mandatoryResourceNames);\n+    protected void doDelete(final SyncopeUser user)\n+            throws WorkflowException {\n \n-        userService.delete(user);\n+        userDAO.delete(user);\n     }\n }"},{"sha":"7b4a0d000850ad118f35500e04d09a8e1f6bfb8c","filename":"core/src/main/java/org/syncope/core/workflow/UserService.java","status":"removed","additions":0,"deletions":92,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/123df26956ac7442b3b870d6d6eeba365edb5a01/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/123df26956ac7442b3b870d6d6eeba365edb5a01/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java?ref=123df26956ac7442b3b870d6d6eeba365edb5a01","patch":"@@ -1,92 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.syncope.core.workflow;\n-\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.client.mod.UserMod;\n-import org.syncope.client.to.UserTO;\n-import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.core.persistence.beans.ExternalResource;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.dao.UserDAO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.rest.data.UserDataBinder;\n-\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n-public class UserService {\n-\n-    @Autowired\n-    private UserDataBinder userDataBinder;\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    public Set<String> getMandatoryResourceNames(final SyncopeUser user,\n-            Set<Long> mandatoryRoles, Set<String> mandatoryResources) {\n-\n-        if (mandatoryRoles == null) {\n-            mandatoryRoles = Collections.EMPTY_SET;\n-        }\n-        if (mandatoryResources == null) {\n-            mandatoryResources = Collections.EMPTY_SET;\n-        }\n-\n-        Set<String> mandatoryResourceNames = new HashSet<String>();\n-\n-        for (String resource : user.getExternalResourceNames()) {\n-            if (mandatoryResources.contains(resource)) {\n-                mandatoryResourceNames.add(resource);\n-            }\n-        }\n-        for (SyncopeRole role : user.getRoles()) {\n-            if (mandatoryRoles.contains(role.getId())) {\n-                for (ExternalResource resource : role.getExternalResources()) {\n-                    mandatoryResourceNames.add(resource.getName());\n-                }\n-            }\n-        }\n-\n-        return mandatoryResourceNames;\n-    }\n-\n-    public SyncopeUser create(final UserTO userTO)\n-            throws SyncopeClientCompositeErrorException {\n-\n-        SyncopeUser user = new SyncopeUser();\n-        userDataBinder.create(user, userTO);\n-\n-        return userDAO.save(user);\n-    }\n-\n-    public Map.Entry<SyncopeUser, PropagationByResource> update(\n-            final SyncopeUser user, final UserMod userMod) {\n-\n-        PropagationByResource propByRes = userDataBinder.update(user, userMod);\n-\n-        return new DefaultMapEntry(userDAO.save(user), propByRes);\n-    }\n-\n-    public void delete(final SyncopeUser user) {\n-        userDAO.delete(user);\n-    }\n-}"},{"sha":"83b21e58cea806922d9801e108ab748c43e242ce","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":38,"deletions":37,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -13,11 +13,12 @@\n  */\n package org.syncope.core.workflow;\n \n-import java.util.Set;\n+import java.util.Map;\n+import javassist.NotFoundException;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationException;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n /**\n  * Interface for calling underlying workflow implementations.\n@@ -27,76 +28,76 @@ public interface UserWorkflowAdapter {\n     /**\n      * Create an user.\n      *\n-     * @param userTO user to be created\n-     * @param mandatoryRoles roles for mandatory propagation\n-     * @param mandatoryResources resources for mandatory propagation\n+     * @param userTO user to be created and wether to propagate it as active\n      * @return user just created\n+     * @throws UnauthorizedRoleException authorization exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    SyncopeUser create(UserTO userTO,\n-            Set<Long> mandatoryRoles, Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException;\n+    Map.Entry<Long, Boolean> create(UserTO userTO)\n+            throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Activate an user.\n      *\n-     * @param user user to be activated\n+     * @param userId user to be activated\n      * @param token to be verified for activation\n      * @return user just updated\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    SyncopeUser activate(SyncopeUser user, String token)\n-            throws WorkflowException, PropagationException;\n+    Long activate(Long userId, String token)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n \n     /**\n      * Updated an user.\n      *\n-     * @param user user to be updated\n      * @param userMod modification set to be performed\n-     * @param mandatoryRoles roles for mandatory propagation\n-     * @param mandatoryResources resources for mandatory propagation\n-     * @return user just updated\n+     * @return user just updated and propagations to be performed\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    SyncopeUser update(SyncopeUser user, UserMod userMod,\n-            Set<Long> mandatoryRoles, Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException;\n+    Map.Entry<Long, PropagationByResource> update(UserMod userMod)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n \n     /**\n      * Suspend an user.\n      *\n-     * @param user user to be suspended\n+     * @param userId user to be suspended\n      * @return user just suspended\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    SyncopeUser suspend(SyncopeUser user)\n-            throws WorkflowException, PropagationException;\n+    Long suspend(Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n \n     /**\n      * Suspend an user.\n      *\n-     * @param user user to be reactivated\n+     * @param userId user to be reactivated\n      * @return user just reactivated\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    SyncopeUser reactivate(SyncopeUser user)\n-            throws WorkflowException, PropagationException;\n+    Long reactivate(Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n \n     /**\n      * Delete an user.\n      *\n-     * @param user user to be deleted\n-     * @param mandatoryRoles roles for mandatory propagation\n-     * @param mandatoryResources resources for mandatory propagation\n+     * @param userId user to be deleted\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n-     * @throws PropagationException propagation exception\n      */\n-    void delete(SyncopeUser user,\n-            Set<Long> mandatoryRoles, Set<String> mandatoryResources)\n-            throws WorkflowException, PropagationException;\n+    void delete(Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n }"},{"sha":"02f0d65d5c16f3dc8b3436b3098fed48ff994efa","filename":"core/src/main/java/org/syncope/core/workflow/activiti/AbstractActivitiDelegate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -20,7 +20,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.context.ConfigurableApplicationContext;\n import org.syncope.core.persistence.dao.ConfDAO;\n-import org.syncope.core.workflow.UserService;\n+import org.syncope.core.rest.data.UserDataBinder;\n import org.syncope.core.util.ApplicationContextManager;\n \n /**\n@@ -39,7 +39,7 @@ public abstract class AbstractActivitiDelegate implements JavaDelegate {\n \n     protected TaskService taskService;\n \n-    protected UserService userService;\n+    protected UserDataBinder dataBinder;\n \n     protected ConfDAO confDAO;\n \n@@ -49,7 +49,7 @@ public final void execute(final DelegateExecution execution)\n \n         taskService = CONTEXT.getBean(TaskService.class);\n \n-        userService = CONTEXT.getBean(UserService.class);\n+        dataBinder = CONTEXT.getBean(UserDataBinder.class);\n         confDAO = CONTEXT.getBean(ConfDAO.class);\n \n         doExecute(execution);"},{"sha":"05f9ea1eb2f885d68dfa68333376fba2c6938076","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Create.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -27,8 +27,9 @@ protected void doExecute(final DelegateExecution execution)\n         UserTO userTO = (UserTO) execution.getVariable(\n                 ActivitiUserWorkflowAdapter.USER_TO);\n \n-        // create, set workflow id and save SyncopeUser\n-        SyncopeUser user = userService.create(userTO);\n+        // create and set workflow id\n+        SyncopeUser user = new SyncopeUser();\n+        dataBinder.create(user, userTO);\n         user.setWorkflowId(execution.getProcessInstanceId());\n \n         // report SyncopeUser as result"},{"sha":"a12778aedab02cf08ad7083d41564b2450c91e16","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Delete.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -15,7 +15,6 @@\n \n import org.activiti.engine.delegate.DelegateExecution;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n \n public class Delete extends AbstractActivitiDelegate {\n@@ -27,8 +26,7 @@ protected void doExecute(final DelegateExecution execution)\n         SyncopeUser user = (SyncopeUser) execution.getVariable(\n                 ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n \n-        // delete SyncopeUser\n-        CONTEXT.getBean(UserDAO.class).delete(user);\n+        // do something with SyncopeUser...\n \n         // remove SyncopeUser variable\n         execution.removeVariable(ActivitiUserWorkflowAdapter.SYNCOPE_USER);"},{"sha":"de3499c1ae8b784ffd0c8e14f3866be34422abb6","filename":"core/src/main/java/org/syncope/core/workflow/activiti/SyncopeEntitiesVariableType.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeEntitiesVariableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeEntitiesVariableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeEntitiesVariableType.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.impl.variable.SerializableType;\n+import org.syncope.core.persistence.beans.AbstractBaseBean;\n+\n+/**\n+ * Activiti variable type for handling Syncope entities as Activiti variables.\n+ * Main purpose: avoid Activiti to handle Syncope entities as JPA entities,\n+ * since this can cause troubles with transactions.\n+ */\n+public class SyncopeEntitiesVariableType extends SerializableType {\n+\n+    @Override\n+    public boolean isAbleToStore(final Object value) {\n+        return value instanceof AbstractBaseBean;\n+    }\n+}"},{"sha":"96c8419960727b55c6d442584ca0561c1ee4c348","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Update.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -13,7 +13,6 @@\n  */\n package org.syncope.core.workflow.activiti;\n \n-import java.util.Map;\n import org.activiti.engine.delegate.DelegateExecution;\n import org.syncope.client.mod.UserMod;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -32,13 +31,12 @@ protected void doExecute(final DelegateExecution execution)\n                 ActivitiUserWorkflowAdapter.USER_MOD);\n \n         // update SyncopeUser\n-        Map.Entry<SyncopeUser, PropagationByResource> updated =\n-                userService.update(user, userMod);\n+        PropagationByResource propByRes = dataBinder.update(user, userMod);\n \n         // report updated user and propagation by resource as result\n         execution.setVariable(ActivitiUserWorkflowAdapter.SYNCOPE_USER,\n-                updated.getKey());\n+                user);\n         execution.setVariable(ActivitiUserWorkflowAdapter.PROP_BY_RESOURCE,\n-                updated.getValue());\n+                propByRes);\n     }\n }"},{"sha":"02cfc03e729276c0fddf9fb3eebc09adeba4bd41","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -113,6 +113,4 @@\n \n     <bean id=\"validator\"\n           class=\"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean\"/>\n-          \n-    <bean class=\"org.syncope.core.workflow.UserService\"/>\n </beans>"},{"sha":"a6dca18f94308d6b547cd5be62e67ec999c83754","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -29,6 +29,12 @@\n         <property name=\"jpaCloseEntityManager\" value=\"false\" />\n         \n         <property name=\"jobExecutorActivate\" value=\"${jobExecutorActivate}\" />\n+        \n+        <property name=\"customPreVariableTypes\">\n+            <list>\n+                <bean class=\"org.syncope.core.workflow.activiti.SyncopeEntitiesVariableType\"/>\n+            </list>    \n+        </property>\n     </bean>\n   \n     <bean id=\"processEngine\" class=\"org.activiti.spring.ProcessEngineFactoryBean\">"},{"sha":"2e2c6f764a5851e3ea21da2890cd2f071450829a","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -71,6 +71,13 @@ public final void findById() {\n         assertTrue(mappingIds.contains(100L));\n     }\n \n+    @Test\n+    public final void findAllByPriority() {\n+        List<ExternalResource> resources = resourceDAO.findAllByPriority();\n+        assertNotNull(resources);\n+        assertFalse(resources.isEmpty());\n+    }\n+\n     @Test\n     public final void getAccountId() {\n         SchemaMapping mapping = resourceDAO.getMappingForAccountId(\n@@ -82,6 +89,8 @@ public final void getAccountId() {\n     public final void save() {\n         ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save\");\n+        resource.setPropagationPriority(2);\n+        resource.setPropagationPrimary(true);\n \n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n@@ -102,6 +111,8 @@ public final void save() {\n \n         assertNotNull(actual);\n         assertNotNull(actual.getConnector());\n+        assertEquals(Integer.valueOf(2), actual.getPropagationPriority());\n+        assertTrue(actual.isPropagationPrimary());\n     }\n \n     @Test"},{"sha":"3a70db02b583a1f96fb21b3a7d39a9293ea930ee","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -127,7 +127,7 @@ public final void issue42() {\n         resourceTO.setName(\"resource-issue42\");\n         resourceTO.setConnectorId(100L);\n         resourceTO.setMappings(schemaMappingTOs);\n-        resourceTO.setOptionalPropagationMode(PropagationMode.SYNC);\n+        resourceTO.setPropagationMode(PropagationMode.SYNC);\n         resourceTO.setForceMandatoryConstraint(true);\n \n         ExternalResource resource = resourceDataBinder.getResource(resourceTO);"},{"sha":"8621553cc22f905772fd97495acae4481f1244b7","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":19,"deletions":22,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -146,8 +146,7 @@ public final void createUserWithNoPropagation() {\n         userTO.setPassword(\"password123\");\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n \n-        restTemplate.postForObject(BASE_URL + \"user/create\"\n-                + \"?mandatoryResources=ws-target-resource-nopropagation\",\n+        restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n \n         // get the new task list\n@@ -269,26 +268,29 @@ public final void issue186() {\n         }\n         assertNotNull(sce);\n \n-        // 3. update assignign a resource NOT forcing mandatory constraints:\n-        // must fail with PropagationException when called with \n-        // mandatoryResources\n+        // 3. update assignign a resource NOT forcing mandatory constraints\n+        // AND primary: must fail with PropagationException\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n         userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n \n         sce = null;\n         try {\n-            userTO = restTemplate.postForObject(BASE_URL\n-                    + \"user/update?mandatoryResources=ws-target-resource-1\",\n+            userTO = restTemplate.postForObject(BASE_URL + \"user/update\",\n                     userMod, UserTO.class);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.Propagation);\n         }\n         assertNotNull(sce);\n \n-        // 4. update assignign a resource NOT forcing mandatory constraints:\n-        // must succeed\n+        // 4. update assignign a resource NOT forcing mandatory constraints\n+        // BUT not primary: must succeed\n+        userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.setPassword(\"newPassword\");\n+        userMod.addResourceToBeAdded(\"resource-db\");\n+\n         sce = null;\n         try {\n             userTO = restTemplate.postForObject(\n@@ -312,7 +314,7 @@ public final void issue147() {\n         // 2. try to update by adding a resource, but no password: must fail\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n \n         SyncopeClientException sce = null;\n         try {\n@@ -359,8 +361,7 @@ public final void createUserWithDbPropagation() {\n         userTO.setPassword(\"password\");\n         userTO.addResource(\"resource-testdb\");\n \n-        restTemplate.postForObject(BASE_URL + \"user/create\"\n-                + \"?mandatoryResources=resource-testdb\",\n+        restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n     }\n \n@@ -469,8 +470,7 @@ public final void create() {\n         userTO.addAttribute(nullValueAttributeTO);\n \n         // 1. create user\n-        UserTO newUserTO = restTemplate.postForObject(\n-                BASE_URL + \"user/create?mandatoryRoles=8\",\n+        UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n \n         assertNotNull(newUserTO);\n@@ -572,8 +572,7 @@ public final void createWithRequiredValueMissing() {\n         SyncopeClientCompositeErrorException ex = null;\n         try {\n             // 1. create user without type (mandatory by UserSchema)\n-            restTemplate.postForObject(\n-                    BASE_URL + \"user/create?mandatoryRoles=8\",\n+            restTemplate.postForObject(BASE_URL + \"user/create\",\n                     userTO, UserTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n@@ -598,8 +597,7 @@ public final void createWithRequiredValueMissing() {\n         // 2. create user without surname (mandatory when type == 'F')\n         ex = null;\n         try {\n-            restTemplate.postForObject(\n-                    BASE_URL + \"user/create?mandatoryRoles=8\",\n+            restTemplate.postForObject(BASE_URL + \"user/create\",\n                     userTO, UserTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n@@ -614,7 +612,7 @@ public final void delete() {\n         try {\n             restTemplate.delete(BASE_URL + \"user/delete/{userId}\", 0);\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n \n         UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n@@ -627,7 +625,7 @@ public final void delete() {\n             restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\",\n                     UserTO.class, userTO.getId());\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n \n@@ -1030,8 +1028,7 @@ public final void verifyTaskRegistration() {\n         userTO.addMembership(membershipTO);\n \n         // 1. create user\n-        userTO = restTemplate.postForObject(\n-                BASE_URL + \"user/create?mandatoryRoles=8\",\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n         assertNotNull(userTO);\n "},{"sha":"65eafd2d1ee607f3d8b08fd0b4ab4bc8c538bab6","filename":"core/src/test/java/org/syncope/core/rest/data/ResourceDataBinderTest.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/123df26956ac7442b3b870d6d6eeba365edb5a01/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/123df26956ac7442b3b870d6d6eeba365edb5a01/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java?ref=123df26956ac7442b3b870d6d6eeba365edb5a01","patch":"@@ -1,64 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.rest.data;\n-\n-import static org.junit.Assert.*;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.syncope.client.to.ResourceTO;\n-import org.syncope.core.persistence.beans.ExternalResource;\n-import org.syncope.types.ConnConfProperty;\n-\n-public class ResourceDataBinderTest {\n-\n-    private ResourceDataBinder rdb;\n-\n-    private ResourceTO resourceTO;\n-\n-    private ExternalResource resource;\n-\n-    @Before\n-    public void before() {\n-        rdb = new ResourceDataBinder();\n-        resourceTO = new ResourceTO();\n-        resource = new ExternalResource();\n-    }\n-\n-    @Test\n-    public void getResource() {\n-        Set<ConnConfProperty> props = new HashSet<ConnConfProperty>();\n-        resourceTO.setConnectorConfigurationProperties(props);\n-\n-        ExternalResource res = rdb.getResource(resourceTO);\n-\n-        assertEquals(\"configuration properties should be filled\",\n-                props, res.getConfiguration());\n-    }\n-\n-    @Test\n-    public void getResourceTO() {\n-        Set<ConnConfProperty> props = new HashSet<ConnConfProperty>();\n-        resource.setConnectorConfigurationProperties(props);\n-\n-        ResourceTO resTO = rdb.getResourceTO(resource);\n-\n-        assertEquals(\"configuration properties should be filled\",\n-                props, resTO.getConnectorConfigurationProperties());\n-    }\n-}"},{"sha":"19a6fc40aa400c39a28b33625b2536add14f0439","filename":"core/src/test/resources/content.xml","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -29,7 +29,6 @@\n     <Policy DTYPE=\"PasswordPolicy\" id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicySpec%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E0%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E10%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n     <Policy DTYPE=\"AccountPolicy\" id=\"5\" description=\"global account policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.AccountPolicySpec%22%3E%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n     <Policy DTYPE=\"AccountPolicy\" id=\"6\" description=\"sample account policy\" type=\"ACCOUNT\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.AccountPolicySpec%22%3E%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" status=\"active\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" status=\"active\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n@@ -242,24 +241,24 @@\n                   xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3ESource+path%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EsourcePath%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2F${urlencoded.java.io.tmpdir}%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EIgnore+header%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+it+first+line+file+must+be+ignored%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EignoreHeader%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+encoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EBasic+encoding+of+the+file%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eencoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EColumn+names+separated+by+comma%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eid+name+surname+email+password+deleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EDelete+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EdeleteColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Edeleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+separator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Ekeyseparator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+identify+user+uniquely%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EkeyColumnNames%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ename+surname%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EText+qualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EtextQualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EPassword+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+user+password%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EpasswordColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Epassword%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+mask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ERegular+expression+describing+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfileMask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E.*%5C.csv%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EValue+quotation+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+if+value+quotation+is+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EquotationRequired%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"SYNC\"/>\n     \n-    <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n-    <ExternalResource name=\"resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"SYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"2\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n+    <ExternalResource name=\"resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" propagationMode=\"SYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+    <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\"\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n                     \n     <SyncopeUser_ExternalResource users_id=\"3\" externalResources_name=\"ws-target-resource-delete\" />\n     <SyncopeRole_ExternalResource roles_id=\"3\" externalResources_name=\"ws-target-resource-list-mappings-1\" />"},{"sha":"f56edefb6bbf6bf7dd5bc30d4cd09ab9553db245","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=4e802de2a8ab2afcb2785e4d8b53d2c51f8c9b0c","patch":"@@ -108,7 +108,7 @@\n         <reflections.version>0.9.5-RC2</reflections.version>\n \n         <logback.version>0.9.29</logback.version>\n-        <slf4j.version>1.6.2</slf4j.version>\n+        <slf4j.version>1.6.3</slf4j.version>\n \n         <junit.version>4.9</junit.version>\n         <selenium-java-client-driver.version>1.0.2</selenium-java-client-driver.version>"}]}