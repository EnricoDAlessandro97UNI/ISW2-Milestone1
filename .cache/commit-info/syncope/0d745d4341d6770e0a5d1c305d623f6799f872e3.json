{"sha":"0d745d4341d6770e0a5d1c305d623f6799f872e3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBkNzQ1ZDQzNDFkNjc3MGUwYTVkMWMzMDVkNjIzZjY3OTlmODcyZTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-21T09:56:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-21T09:56:18Z"},"message":"[SYNCOPE-822] Verified it works on all supported DBMS","tree":{"sha":"dd6d4cea296005a63deea3801b55a9efac3aafc4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dd6d4cea296005a63deea3801b55a9efac3aafc4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0d745d4341d6770e0a5d1c305d623f6799f872e3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d745d4341d6770e0a5d1c305d623f6799f872e3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0d745d4341d6770e0a5d1c305d623f6799f872e3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d745d4341d6770e0a5d1c305d623f6799f872e3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c5251f809d4e2138666ceade389eb5a5dc8b54a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c5251f809d4e2138666ceade389eb5a5dc8b54a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c5251f809d4e2138666ceade389eb5a5dc8b54a"}],"stats":{"total":3051,"additions":1660,"deletions":1391},"files":[{"sha":"e3110b9f76fbc5da44eb63ec2050914093470404","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateConf.java","status":"modified","additions":94,"deletions":94,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -145,35 +145,35 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n         reader.nextTag(); // dataset\n \n         writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"key\", \"USER\");\n+        writer.writeAttribute(\"id\", \"USER\");\n         writer.writeAttribute(\"kind\", \"USER\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"key\", \"BaseUser\");\n+        writer.writeAttribute(\"id\", \"BaseUser\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_key\", \"USER\");\n-        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n+        writer.writeAttribute(\"anyType_id\", \"USER\");\n+        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"key\", \"GROUP\");\n+        writer.writeAttribute(\"id\", \"GROUP\");\n         writer.writeAttribute(\"kind\", \"GROUP\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"key\", \"BaseGroup\");\n+        writer.writeAttribute(\"id\", \"BaseGroup\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_key\", \"GROUP\");\n-        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n+        writer.writeAttribute(\"anyType_id\", \"GROUP\");\n+        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"key\", \"BaseUMembership\");\n+        writer.writeAttribute(\"id\", \"BaseUMembership\");\n         writer.writeEndElement();\n \n         Set<String> connInstanceCapabilities = new HashSet<>();\n@@ -196,50 +196,50 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                 switch (reader.getLocalName().toLowerCase()) {\n                     case \"syncopeconf\":\n                         writer.writeStartElement(\"SyncopeConf\");\n-                        writer.writeAttribute(\"key\", syncopeConf);\n+                        writer.writeAttribute(\"id\", syncopeConf);\n                         writer.writeEndElement();\n                         break;\n \n                     case \"cschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"cattr\":\n                         writer.writeStartElement(\"CPlainAttr\");\n                         copyAttrs(reader, writer, \"owner_id\", \"schema_name\");\n                         lastUUID = UUID.randomUUID().toString();\n-                        writer.writeAttribute(\"key\", lastUUID);\n-                        writer.writeAttribute(\"owner_key\", syncopeConf);\n-                        writer.writeAttribute(\"schema_key\", getAttributeValue(reader, \"schema_name\"));\n+                        writer.writeAttribute(\"id\", lastUUID);\n+                        writer.writeAttribute(\"owner_id\", syncopeConf);\n+                        writer.writeAttribute(\"schema_id\", getAttributeValue(reader, \"schema_name\"));\n                         writer.writeEndElement();\n                         cPlainAttrs.put(getAttributeValue(reader, \"id\"), lastUUID);\n                         break;\n \n                     case \"cattrvalue\":\n                         writer.writeStartElement(\"CPlainAttrValue\");\n                         copyAttrs(reader, writer, \"attribute_id\");\n-                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n                         writer.writeAttribute(\n-                                \"attribute_key\", cPlainAttrs.get(getAttributeValue(reader, \"attribute_id\")));\n+                                \"attribute_id\", cPlainAttrs.get(getAttributeValue(reader, \"attribute_id\")));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"uschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"uderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n                         writer.writeEndElement();\n                         break;\n \n@@ -253,16 +253,16 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"rschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"rderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n                         writer.writeEndElement();\n                         break;\n \n@@ -276,16 +276,16 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"mschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUMembership\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUMembership\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"mderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUMembership\");\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUMembership\");\n                         writer.writeEndElement();\n                         break;\n \n@@ -307,15 +307,15 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         switch (getAttributeValue(reader, \"DTYPE\")) {\n                             case \"SyncPolicy\":\n                                 writer.writeStartElement(\"PullPolicy\");\n-                                writer.writeAttribute(\"key\", lastUUID);\n+                                writer.writeAttribute(\"id\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n                                 writer.writeEndElement();\n                                 break;\n \n                             case \"PasswordPolicy\":\n                                 writer.writeStartElement(\"PasswordPolicy\");\n-                                writer.writeAttribute(\"key\", lastUUID);\n+                                writer.writeAttribute(\"id\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n \n@@ -339,15 +339,15 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 writer.writeEndElement();\n \n                                 writer.writeStartElement(\"PasswordRuleConfInstance\");\n-                                writer.writeAttribute(\"key\", lastUUID);\n-                                writer.writeAttribute(\"passwordPolicy_key\", lastUUID);\n+                                writer.writeAttribute(\"id\", lastUUID);\n+                                writer.writeAttribute(\"passwordPolicy_id\", lastUUID);\n                                 writer.writeAttribute(\"serializedInstance\", specification.toString());\n                                 writer.writeEndElement();\n                                 break;\n \n                             case \"AccountPolicy\":\n                                 writer.writeStartElement(\"AccountPolicy\");\n-                                writer.writeAttribute(\"key\", lastUUID);\n+                                writer.writeAttribute(\"id\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n \n@@ -372,8 +372,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 writer.writeEndElement();\n \n                                 writer.writeStartElement(\"AccountRuleConfInstance\");\n-                                writer.writeAttribute(\"key\", lastUUID);\n-                                writer.writeAttribute(\"accountPolicy_key\", lastUUID);\n+                                writer.writeAttribute(\"id\", lastUUID);\n+                                writer.writeAttribute(\"accountPolicy_id\", lastUUID);\n                                 writer.writeAttribute(\"serializedInstance\", specification.toString());\n                                 writer.writeEndElement();\n                                 break;\n@@ -388,7 +388,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                         writer.writeStartElement(\"ConnInstance\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"id\", lastUUID);\n                         writer.writeEndElement();\n                         break;\n \n@@ -404,7 +404,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         }\n                         if (!connInstanceCapabilities.contains(connInstanceId + capabilities)) {\n                             writer.writeStartElement(\"ConnInstance_capabilities\");\n-                            writer.writeAttribute(\"connInstance_key\", connInstanceKey);\n+                            writer.writeAttribute(\"connInstance_id\", connInstanceKey);\n                             writer.writeAttribute(\"capability\", capabilities);\n                             writer.writeEndElement();\n \n@@ -420,20 +420,20 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 \"passwordPolicy_id\",\n                                 \"creator\", \"lastModifier\", \"creationDate\", \"lastChangeDate\");\n \n-                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n                         writer.writeAttribute(\n-                                \"connector_key\", connInstances.get(getAttributeValue(reader, \"connector_id\")));\n+                                \"connector_id\", connInstances.get(getAttributeValue(reader, \"connector_id\")));\n \n                         writer.writeAttribute(\"pullTraceLevel\", getAttributeValue(reader, \"syncTraceLevel\"));\n \n                         String syncPolicyKey = policies.get(getAttributeValue(reader, \"syncPolicy_id\"));\n                         if (StringUtils.isNotBlank(syncPolicyKey)) {\n-                            writer.writeAttribute(\"pullPolicy_key\", syncPolicyKey);\n+                            writer.writeAttribute(\"pullPolicy_id\", syncPolicyKey);\n                         }\n \n                         String passwordPolicyKey = policies.get(getAttributeValue(reader, \"passwordPolicy_id\"));\n                         if (StringUtils.isNotBlank(passwordPolicyKey)) {\n-                            writer.writeAttribute(\"passwordPolicy_key\", passwordPolicyKey);\n+                            writer.writeAttribute(\"passwordPolicy_id\", passwordPolicyKey);\n                         }\n \n                         writer.writeEndElement();\n@@ -442,7 +442,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"externalresource_propactions\":\n                         writer.writeStartElement(\"ExternalResource_PropActions\");\n \n-                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"externalResource_name\"));\n+                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"externalResource_name\"));\n \n                         String propActionClassName = getAttributeValue(reader, \"element\");\n                         switch (propActionClassName) {\n@@ -470,8 +470,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"policy_externalresource\":\n                         writer.writeStartElement(\"AccountPolicy_ExternalResource\");\n                         writer.writeAttribute(\n-                                \"accountPolicy_key\", policies.get(getAttributeValue(reader, \"account_policy_id\")));\n-                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n+                                \"accountPolicy_id\", policies.get(getAttributeValue(reader, \"account_policy_id\")));\n+                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n                         writer.writeEndElement();\n                         break;\n \n@@ -481,18 +481,18 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         provisions.put(umappingId, lastUUID);\n \n                         writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"key\", lastUUID);\n-                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_key\", \"USER\");\n+                        writer.writeAttribute(\"id\", lastUUID);\n+                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n+                        writer.writeAttribute(\"anyType_id\", \"USER\");\n                         writer.writeAttribute(\"objectClass\", \"__ACCOUNT__\");\n                         writer.writeEndElement();\n \n                         lastUUID = UUID.randomUUID().toString();\n                         mappings.put(umappingId, lastUUID);\n \n                         writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"key\", lastUUID);\n-                        writer.writeAttribute(\"provision_key\", provisions.get(umappingId));\n+                        writer.writeAttribute(\"id\", lastUUID);\n+                        writer.writeAttribute(\"provision_id\", provisions.get(umappingId));\n \n                         String uaccountLink = getAttributeValue(reader, \"accountlink\");\n                         if (StringUtils.isNotBlank(uaccountLink)) {\n@@ -510,8 +510,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n                             copyAttrs(reader, writer, \"accountid\", \"intMappingType\", \"mapping_id\");\n-                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"mapping_key\", mappings.get(getAttributeValue(reader, \"mapping_id\")));\n+                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"mapping_id\", mappings.get(getAttributeValue(reader, \"mapping_id\")));\n                             writer.writeAttribute(\"intMappingType\", toNewIntMappingType(uIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n@@ -524,18 +524,18 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         provisions.put(rmappingId, lastUUID);\n \n                         writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"key\", lastUUID);\n-                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_key\", \"GROUP\");\n+                        writer.writeAttribute(\"id\", lastUUID);\n+                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n+                        writer.writeAttribute(\"anyType_id\", \"GROUP\");\n                         writer.writeAttribute(\"objectClass\", \"__GROUP__\");\n                         writer.writeEndElement();\n \n                         lastUUID = UUID.randomUUID().toString();\n                         mappings.put(rmappingId, lastUUID);\n \n                         writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"key\", lastUUID);\n-                        writer.writeAttribute(\"provision_key\", provisions.get(rmappingId));\n+                        writer.writeAttribute(\"id\", lastUUID);\n+                        writer.writeAttribute(\"provision_id\", provisions.get(rmappingId));\n \n                         String raccountLink = getAttributeValue(reader, \"accountlink\");\n                         if (StringUtils.isNotBlank(raccountLink)) {\n@@ -553,9 +553,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n                             copyAttrs(reader, writer, \"accountid\", \"intMappingType\", \"mapping_id\");\n-                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n                             writer.writeAttribute(\n-                                    \"mapping_key\", mappings.get(\"10\" + getAttributeValue(reader, \"mapping_id\")));\n+                                    \"mapping_id\", mappings.get(\"10\" + getAttributeValue(reader, \"mapping_id\")));\n                             writer.writeAttribute(\"intMappingType\", toNewIntMappingType(rIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n@@ -572,11 +572,11 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         lastUUID = UUID.randomUUID().toString();\n                         tasks.put(getAttributeValue(reader, \"id\"), lastUUID);\n \n-                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"id\", lastUUID);\n \n                         String resourceName = getAttributeValue(reader, \"resource_name\");\n                         if (StringUtils.isNotBlank(resourceName)) {\n-                            writer.writeAttribute(\"resource_key\", resourceName);\n+                            writer.writeAttribute(\"resource_id\", resourceName);\n                         }\n \n                         String name = getAttributeValue(reader, \"name\");\n@@ -618,9 +618,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                     template.set(\"plainAttrs\", plainAttrs);\n \n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pullTask_key\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_key\", \"USER\");\n+                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pullTask_id\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_id\", \"USER\");\n                                     writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n@@ -631,9 +631,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                     template.set(\"plainAttrs\", plainAttrs);\n \n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pullTask_key\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_key\", \"GROUP\");\n+                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pullTask_id\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_id\", \"GROUP\");\n                                     writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n@@ -658,18 +658,18 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 String userFilter = getAttributeValue(reader, \"userFilter\");\n                                 if (StringUtils.isNotBlank(userFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pushTask_key\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_key\", \"USER\");\n+                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pushTask_id\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_id\", \"USER\");\n                                     writer.writeAttribute(\"fiql\", userFilter);\n                                     writer.writeEndElement();\n                                 }\n                                 String roleFilter = getAttributeValue(reader, \"roleFilter\");\n                                 if (StringUtils.isNotBlank(roleFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pushTask_key\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_key\", \"GROUP\");\n+                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pushTask_id\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_id\", \"GROUP\");\n                                     writer.writeAttribute(\"fiql\", roleFilter);\n                                     writer.writeEndElement();\n                                 }\n@@ -682,15 +682,15 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"taskexec\":\n                         writer.writeStartElement(\"TaskExec\");\n                         copyAttrs(reader, writer, \"task_id\");\n-                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"task_key\", tasks.get(getAttributeValue(reader, \"task_id\")));\n+                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"task_id\", tasks.get(getAttributeValue(reader, \"task_id\")));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"synctask_actionsclassnames\":\n                         writer.writeStartElement(\"PullTask_actionsClassNames\");\n                         writer.writeAttribute(\n-                                \"pullTask_key\", tasks.get(getAttributeValue(reader, \"syncTask_id\")));\n+                                \"pullTask_id\", tasks.get(getAttributeValue(reader, \"syncTask_id\")));\n \n                         String syncActionClassName = getAttributeValue(reader, \"element\");\n                         switch (syncActionClassName) {\n@@ -721,7 +721,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         lastUUID = UUID.randomUUID().toString();\n                         notifications.put(getAttributeValue(reader, \"id\"), lastUUID);\n \n-                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"id\", lastUUID);\n \n                         copyAttrs(reader, writer, \"recipientAttrType\", \"template\",\n                                 \"userAbout\", \"roleAbout\", \"recipients\");\n@@ -733,24 +733,24 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         if (StringUtils.isNotBlank(recipients)) {\n                             writer.writeAttribute(\"recipientsFIQL\", getAttributeValue(reader, \"recipients\"));\n                         }\n-                        writer.writeAttribute(\"template_key\", getAttributeValue(reader, \"template\"));\n+                        writer.writeAttribute(\"template_id\", getAttributeValue(reader, \"template\"));\n                         writer.writeEndElement();\n \n                         String userAbout = getAttributeValue(reader, \"userAbout\");\n                         if (StringUtils.isNotBlank(userAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"notification_key\", lastUUID);\n-                            writer.writeAttribute(\"anyType_key\", \"USER\");\n+                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"notification_id\", lastUUID);\n+                            writer.writeAttribute(\"anyType_id\", \"USER\");\n                             writer.writeAttribute(\"filter\", userAbout);\n                             writer.writeEndElement();\n                         }\n                         String roleAbout = getAttributeValue(reader, \"roleAbout\");\n                         if (StringUtils.isNotBlank(roleAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"notification_key\", lastUUID);\n-                            writer.writeAttribute(\"anyType_key\", \"GROUP\");\n+                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"notification_id\", lastUUID);\n+                            writer.writeAttribute(\"anyType_id\", \"GROUP\");\n                             writer.writeAttribute(\"filter\", roleAbout);\n                             writer.writeEndElement();\n                         }\n@@ -760,7 +760,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"Notification_events\");\n                         copyAttrs(reader, writer, \"notification_id\", \"events\");\n                         writer.writeAttribute(\n-                                \"notification_key\", notifications.get(getAttributeValue(reader, \"notification_id\")));\n+                                \"notification_id\", notifications.get(getAttributeValue(reader, \"notification_id\")));\n                         writer.writeAttribute(\n                                 \"event\", getAttributeValue(reader, \"events\").\n                                 replaceAll(\"Controller\", \"Logic\"));\n@@ -771,7 +771,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"NotificationTask_recipients\");\n                         copyAttrs(reader, writer, \"notificationTask_id\");\n                         writer.writeAttribute(\n-                                \"notificationTask_key\",\n+                                \"notificationTask_id\",\n                                 tasks.get(getAttributeValue(reader, \"notificationTask_id\")));\n                         writer.writeEndElement();\n                         break;\n@@ -783,7 +783,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         lastUUID = UUID.randomUUID().toString();\n                         reports.put(getAttributeValue(reader, \"id\"), lastUUID);\n \n-                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"id\", lastUUID);\n                         writer.writeAttribute(\"name\", getAttributeValue(reader, \"name\"));\n \n                         writer.writeEndElement();\n@@ -793,8 +793,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"ReportletConfInstance\");\n                         copyAttrs(reader, writer, \"report_id\");\n \n-                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"report_key\", reports.get(getAttributeValue(reader, \"report_id\")));\n+                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"report_id\", reports.get(getAttributeValue(reader, \"report_id\")));\n \n                         writer.writeEndElement();\n                         break;\n@@ -803,16 +803,16 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"ReportExec\");\n                         copyAttrs(reader, writer, \"report_id\");\n \n-                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"report_key\", reports.get(getAttributeValue(reader, \"report_id\")));\n+                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"report_id\", reports.get(getAttributeValue(reader, \"report_id\")));\n \n                         writer.writeEndElement();\n                         break;\n \n                     case \"securityquestion\":\n                         writer.writeStartElement(\"SecurityQuestion\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n                         writer.writeEndElement();\n                         break;\n \n@@ -824,13 +824,13 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n         }\n \n         writer.writeStartElement(\"Realm\");\n-        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n         writer.writeAttribute(\"name\", \"/\");\n         if (globalAccountPolicy != null) {\n-            writer.writeAttribute(\"accountPolicy_key\", globalAccountPolicy);\n+            writer.writeAttribute(\"accountPolicy_id\", globalAccountPolicy);\n         }\n         if (globalPasswordPolicy != null) {\n-            writer.writeAttribute(\"passwordPolicy_key\", globalPasswordPolicy);\n+            writer.writeAttribute(\"passwordPolicy_id\", globalPasswordPolicy);\n         }\n         writer.writeEndElement();\n "},{"sha":"504393d832caa14cc14c7f965de4f435b0ca3501","filename":"client/cli/src/test/resources/schema20.sql","status":"modified","additions":198,"deletions":198,"changes":396,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -15,207 +15,207 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n-CREATE TABLE AccountPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (key));\n-CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_key VARCHAR(36), resource_key VARCHAR(255));\n-CREATE TABLE AccountRuleConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE ADynGroupMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_key VARCHAR(36), anyObject_key VARCHAR(36));\n-CREATE TABLE AMembership (key VARCHAR(36) NOT NULL, anyObject_key VARCHAR(36), group_key VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE AnyAbout (key VARCHAR(36) NOT NULL, filter CLOB, NOTIFICATION_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYABOUT_NOTIFICATION_KEY UNIQUE (NOTIFICATION_KEY, ANYTYPE_KEY));\n-CREATE TABLE AnyObject (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), REALM_KEY VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE AnyObject_AnyTypeClass (anyObject_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE AnyObject_ExternalResource (anyObject_key VARCHAR(36), resource_key VARCHAR(255));\n-CREATE TABLE AnyTemplatePullTask (key VARCHAR(36) NOT NULL, template CLOB, PULLTASK_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYTMTSK_PULLTASK_KEY UNIQUE (PULLTASK_KEY, ANYTYPE_KEY));\n-CREATE TABLE AnyTemplateRealm (key VARCHAR(36) NOT NULL, template CLOB, REALM_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYTMRLM_REALM_KEY UNIQUE (REALM_KEY, ANYTYPE_KEY));\n-CREATE TABLE AnyType (key VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (key));\n-CREATE TABLE AnyTypeClass (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n-CREATE TABLE AnyType_AnyTypeClass (anyType_key VARCHAR(255), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE APlainAttr (key VARCHAR(36) NOT NULL, OWNER_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE APlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_key), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_key), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_key), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_key), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_key));\n-CREATE TABLE APlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE ARelationship (key VARCHAR(36) NOT NULL, left_anyObject_key VARCHAR(36), right_anyObject_key VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_RLTNSHP_TYPE_KEY1 UNIQUE (TYPE_KEY, left_anyObject_key, right_anyObject_key));\n-CREATE TABLE ConnInstance (key VARCHAR(36) NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (key), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n-CREATE TABLE ConnInstance_capabilities (connInstance_key VARCHAR(36), capability VARCHAR(20));\n-CREATE TABLE CPlainAttr (key VARCHAR(36) NOT NULL, schema_key VARCHAR(255), OWNER_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE CPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_key));\n-CREATE TABLE CPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE DerSchema (key VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE DynRoleMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), ROLE_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE DynRoleMembership_User (dynRoleMembership_key VARCHAR(36), user_key VARCHAR(36));\n-CREATE TABLE ExternalResource (key VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, pullTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_KEY VARCHAR(36), CONNECTOR_KEY VARCHAR(36), PASSWORDPOLICY_KEY VARCHAR(36), PULLPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE ExternalResource_capOverride (resource_key VARCHAR(255), capabilityOverride VARCHAR(20));\n-CREATE TABLE ExternalResource_PropActions (resource_key VARCHAR(255), actionClassName VARCHAR(255));\n-CREATE TABLE GPlainAttr (key VARCHAR(36) NOT NULL, schema_key VARCHAR(255), OWNER_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE GPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_key));\n-CREATE TABLE GPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE MailTemplate (key VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (key));\n-CREATE TABLE Mapping (key VARCHAR(36) NOT NULL, connObjectLink VARCHAR(255), PROVISION_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE MappingItem (key VARCHAR(36) NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), intMappingType VARCHAR(22), mandatoryCondition VARCHAR(255), password INTEGER, purpose VARCHAR(20), MAPPING_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE MappingItem_Transformer (mappingItem_key VARCHAR(36), transformerClassName VARCHAR(255));\n-CREATE TABLE Notification (key VARCHAR(36) NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientAttrType VARCHAR(22), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_key VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE NotificationTask_recipients (notificationTask_key VARCHAR(36), address VARCHAR(255));\n-CREATE TABLE Notification_events (notification_key VARCHAR(36), event VARCHAR(255));\n-CREATE TABLE Notification_staticRecipients (notification_key VARCHAR(36), staticRecipients VARCHAR(255));\n-CREATE TABLE PasswordPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (key));\n-CREATE TABLE PasswordRuleConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE PlainSchema (key VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_KEY VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE Provision (key VARCHAR(36) NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, ANYTYPE_KEY VARCHAR(255), RESOURCE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PROVSON_RESOURCE_KEY UNIQUE (RESOURCE_KEY, ANYTYPE_KEY));\n-CREATE TABLE Provision_AnyTypeClass (provision_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE PullPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (key));\n-CREATE TABLE PullTask_actionsClassNames (pullTask_key VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE PushPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (key));\n-CREATE TABLE PushTaskAnyFilter (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), PUSHTASK_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PSHTLTR_PUSHTASK_KEY UNIQUE (PUSHTASK_KEY, ANYTYPE_KEY));\n+CREATE TABLE AccountPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (id));\n+CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_id VARCHAR(36), resource_id VARCHAR(255));\n+CREATE TABLE AccountRuleConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE ADynGroupMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_id VARCHAR(36), anyObject_id VARCHAR(36));\n+CREATE TABLE AMembership (id VARCHAR(36) NOT NULL, anyObject_id VARCHAR(36), group_id VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE AnyAbout (id VARCHAR(36) NOT NULL, filter CLOB, ANYTYPE_ID VARCHAR(255), NOTIFICATION_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_NYABOUT_NOTIFICATION_ID UNIQUE (NOTIFICATION_ID, ANYTYPE_ID));\n+CREATE TABLE AnyObject (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), REALM_ID VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE AnyObject_AnyTypeClass (anyObject_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE AnyObject_ExternalResource (anyObject_id VARCHAR(36), resource_id VARCHAR(255));\n+CREATE TABLE AnyTemplatePullTask (id VARCHAR(36) NOT NULL, template CLOB, PULLTASK_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMTSK_PULLTASK_ID UNIQUE (PULLTASK_ID, ANYTYPE_ID));\n+CREATE TABLE AnyTemplateRealm (id VARCHAR(36) NOT NULL, template CLOB, REALM_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMRLM_REALM_ID UNIQUE (REALM_ID, ANYTYPE_ID));\n+CREATE TABLE AnyType (id VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (id));\n+CREATE TABLE AnyTypeClass (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n+CREATE TABLE AnyType_AnyTypeClass (anyType_id VARCHAR(255), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE APlainAttr (id VARCHAR(36) NOT NULL, OWNER_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE APlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_id), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_id), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_id), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_id), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_id));\n+CREATE TABLE APlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE ARelationship (id VARCHAR(36) NOT NULL, left_anyObject_id VARCHAR(36), right_anyObject_id VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_ID1 UNIQUE (TYPE_ID, left_anyObject_id, right_anyObject_id));\n+CREATE TABLE ConnInstance (id VARCHAR(36) NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (id), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n+CREATE TABLE ConnInstance_capabilities (connInstance_id VARCHAR(36), capability VARCHAR(20));\n+CREATE TABLE CPlainAttr (id VARCHAR(36) NOT NULL, schema_id VARCHAR(255), OWNER_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE CPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_id));\n+CREATE TABLE CPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE DerSchema (id VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE DynRoleMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), ROLE_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE DynRoleMembership_User (dynRoleMembership_id VARCHAR(36), user_id VARCHAR(36));\n+CREATE TABLE ExternalResource (id VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, pullTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_ID VARCHAR(36), CONNECTOR_ID VARCHAR(36), PASSWORDPOLICY_ID VARCHAR(36), PULLPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE ExternalResource_capOverride (resource_id VARCHAR(255), capabilityOverride VARCHAR(20));\n+CREATE TABLE ExternalResource_PropActions (resource_id VARCHAR(255), actionClassName VARCHAR(255));\n+CREATE TABLE GPlainAttr (id VARCHAR(36) NOT NULL, schema_id VARCHAR(255), OWNER_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE GPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_id));\n+CREATE TABLE GPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE MailTemplate (id VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (id));\n+CREATE TABLE Mapping (id VARCHAR(36) NOT NULL, connObjectLink VARCHAR(255), PROVISION_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE MappingItem (id VARCHAR(36) NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), intMappingType VARCHAR(22), mandatoryCondition VARCHAR(255), password INTEGER, purpose VARCHAR(20), MAPPING_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE MappingItem_Transformer (mappingItem_id VARCHAR(36), transformerClassName VARCHAR(255));\n+CREATE TABLE Notification (id VARCHAR(36) NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientAttrType VARCHAR(22), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_id VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE NotificationTask_recipients (notificationTask_id VARCHAR(36), address VARCHAR(255));\n+CREATE TABLE Notification_events (notification_id VARCHAR(36), event VARCHAR(255));\n+CREATE TABLE Notification_staticRecipients (notification_id VARCHAR(36), staticRecipients VARCHAR(255));\n+CREATE TABLE PasswordPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (id));\n+CREATE TABLE PasswordRuleConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE PlainSchema (id VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_ID VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE Provision (id VARCHAR(36) NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, RESOURCE_ID VARCHAR(255), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PROVSON_RESOURCE_ID UNIQUE (RESOURCE_ID, ANYTYPE_ID));\n+CREATE TABLE Provision_AnyTypeClass (provision_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE PullPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n+CREATE TABLE PullTask_actionsClassNames (pullTask_id VARCHAR(36), actionClassName VARCHAR(255));\n+CREATE TABLE PushPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n+CREATE TABLE PushTaskAnyFilter (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), ANYTYPE_ID VARCHAR(255), PUSHTASK_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_PSHTLTR_PUSHTASK_ID UNIQUE (PUSHTASK_ID, ANYTYPE_ID));\n CREATE TABLE PushTask_actionsClassNames (pushTask_key VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE Realm (key VARCHAR(36) NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_KEY VARCHAR(36), PARENT_KEY VARCHAR(36), PASSWORDPOLICY_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_REALM_KEY UNIQUE (key, PARENT_KEY));\n+CREATE TABLE Realm (id VARCHAR(36) NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_ID VARCHAR(36), PARENT_ID VARCHAR(36), PASSWORDPOLICY_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_REALM_ID UNIQUE (id, PARENT_ID));\n CREATE TABLE Realm_actionsClassNames (realm_key VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE RelationshipType (key VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE Report (key VARCHAR(36) NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n-CREATE TABLE ReportExec (key VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE ReportletConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, REPORT_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE ReportTemplate (key VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (key));\n-CREATE TABLE SecurityQuestion (key VARCHAR(36) NOT NULL, content VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n-CREATE TABLE SyncopeConf (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n-CREATE TABLE SyncopeDomain (key VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE SyncopeGroup (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_KEY VARCHAR(36), GROUPOWNER_KEY VARCHAR(36), USEROWNER_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n-CREATE TABLE SyncopeGroup_AnyTypeClass (group_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE SyncopeGroup_ExternalResource (group_key VARCHAR(36), resource_key VARCHAR(255));\n+CREATE TABLE RelationshipType (id VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE Report (id VARCHAR(36) NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n+CREATE TABLE ReportExec (id VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE ReportletConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, REPORT_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE ReportTemplate (id VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (id));\n+CREATE TABLE SecurityQuestion (id VARCHAR(36) NOT NULL, content VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n+CREATE TABLE SyncopeConf (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n+CREATE TABLE SyncopeDomain (id VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE SyncopeGroup (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_ID VARCHAR(36), GROUPOWNER_ID VARCHAR(36), USEROWNER_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n+CREATE TABLE SyncopeGroup_AnyTypeClass (group_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE SyncopeGroup_ExternalResource (group_id VARCHAR(36), resource_id VARCHAR(255));\n CREATE TABLE SyncopeLogger (logName VARCHAR(255) NOT NULL, logLevel VARCHAR(20) NOT NULL, logType VARCHAR(20) NOT NULL, PRIMARY KEY (logName));\n-CREATE TABLE SyncopeRole (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n-CREATE TABLE SyncopeRole_entitlements (role_key VARCHAR(255), entitlement VARCHAR(255));\n-CREATE TABLE SyncopeRole_Realm (role_key VARCHAR(255), realm_key VARCHAR(36));\n-CREATE TABLE SyncopeUser (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_KEY VARCHAR(36), SECURITYQUESTION_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n-CREATE TABLE SyncopeUser_AnyTypeClass (user_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE SyncopeUser_ExternalResource (user_key VARCHAR(36), resource_key VARCHAR(255));\n-CREATE TABLE SyncopeUser_passwordHistory (user_key VARCHAR(36), passwordHistoryValue VARCHAR(255));\n-CREATE TABLE SyncopeUser_SyncopeRole (user_key VARCHAR(36), role_key VARCHAR(255));\n-CREATE TABLE Task (key VARCHAR(36) NOT NULL, DTYPE VARCHAR(31), anyKey VARCHAR(255), anyType VARCHAR(255), anyTypeKind VARCHAR(20), attributes CLOB, connObjectKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), RESOURCE_KEY VARCHAR(255), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, pullStatus INTEGER, unmatchingRule VARCHAR(20), executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), NOTIFICATION_KEY VARCHAR(36), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), DESTINATIONREALM_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE TaskExec (key VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE TypeExtension (key VARCHAR(36) NOT NULL, GROUP_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_TYPXNSN_GROUP_KEY UNIQUE (GROUP_KEY, ANYTYPE_KEY));\n-CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n-CREATE TABLE UDynGroupMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_key VARCHAR(36), user_key VARCHAR(36));\n-CREATE TABLE UMembership (key VARCHAR(36) NOT NULL, user_key VARCHAR(36), group_key VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE UPlainAttr (key VARCHAR(36) NOT NULL, OWNER_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key));\n-CREATE TABLE UPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_key));\n-CREATE TABLE UPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE TABLE URelationship (key VARCHAR(36) NOT NULL, user_key VARCHAR(36), anyObject_key VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_RLTNSHP_TYPE_KEY UNIQUE (TYPE_KEY, user_key, anyObject_key));\n-CREATE TABLE VirSchema (key VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_KEY VARCHAR(255), PROVISION_KEY VARCHAR(36), PRIMARY KEY (key));\n-CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_KEY ON AccountPolicy_ExternalResource (accountPolicy_key);\n-CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_key);\n-CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_KEY);\n-CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_KEY);\n-CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_KEY);\n-CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_KEY ON ADynGroupMembership_AnyObject (aDynGroupMembership_key);\n-CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_key);\n-CREATE INDEX I_MMBRSHP_LEFTEND1 ON AMembership (anyObject_key);\n-CREATE INDEX I_MMBRSHP_RIGHTEND1 ON AMembership (group_key);\n-CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_KEY);\n-CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_KEY);\n-CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_KEY);\n-CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_KEY);\n-CREATE INDEX I_NYBJLSS_ANYOBJECT_KEY ON AnyObject_AnyTypeClass (anyObject_key);\n-CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_NYBJSRC_ANYOBJECT_KEY ON AnyObject_ExternalResource (anyObject_key);\n-CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_key);\n-CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_KEY);\n-CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_KEY);\n-CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_KEY);\n-CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_KEY);\n-CREATE INDEX I_NYTYLSS_ANYTYPE_KEY ON AnyType_AnyTypeClass (anyType_key);\n-CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_KEY);\n-CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_key);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON APlainAttrUniqueValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_PLNTQVL_SCHEMA1 ON APlainAttrUniqueValue (schema_key);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON APlainAttrValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_RLTNSHP_LEFTEND1 ON ARelationship (left_anyObject_key);\n-CREATE INDEX I_RLTNSHP_RIGHTEND1 ON ARelationship (right_anyObject_key);\n-CREATE INDEX I_RLTNSHP_TYPE1 ON ARelationship (TYPE_KEY);\n-CREATE INDEX I_CNNNLTS_CONNINSTANCE_KEY ON ConnInstance_capabilities (connInstance_key);\n-CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_KEY);\n-CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_key);\n-CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_key);\n-CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_KEY);\n-CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_KEY);\n-CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_KEY ON DynRoleMembership_User (dynRoleMembership_key);\n-CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_key);\n-CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_KEY);\n-CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_KEY);\n-CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_KEY);\n-CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_KEY);\n-CREATE INDEX I_XTRNRRD_RESOURCE_KEY ON ExternalResource_capOverride (resource_key);\n-CREATE INDEX I_XTRNTNS_RESOURCE_KEY ON ExternalResource_PropActions (resource_key);\n-CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_KEY);\n-CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_key);\n-CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_key);\n-CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_KEY);\n-CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_KEY);\n-CREATE INDEX I_MPPNRMR_MAPPINGITEM_KEY ON MappingItem_Transformer (mappingItem_key);\n-CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_key);\n-CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_KEY ON NotificationTask_recipients (notificationTask_key);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_KEY ON Notification_events (notification_key);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_KEY1 ON Notification_staticRecipients (notification_key);\n-CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_KEY);\n-CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_KEY);\n-CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_KEY);\n-CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_KEY);\n-CREATE INDEX I_PRVSLSS_ELEMENT ON Provision_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_PRVSLSS_PROVISION_KEY ON Provision_AnyTypeClass (provision_key);\n-CREATE INDEX I_PLLTNMS_PULLTASK_KEY ON PullTask_actionsClassNames (pullTask_key);\n-CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_KEY);\n-CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_KEY);\n+CREATE TABLE SyncopeRole (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n+CREATE TABLE SyncopeRole_entitlements (role_id VARCHAR(255), entitlement VARCHAR(255));\n+CREATE TABLE SyncopeRole_Realm (role_id VARCHAR(255), realm_id VARCHAR(36));\n+CREATE TABLE SyncopeUser (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_ID VARCHAR(36), SECURITYQUESTION_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n+CREATE TABLE SyncopeUser_AnyTypeClass (user_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE SyncopeUser_ExternalResource (user_id VARCHAR(36), resource_id VARCHAR(255));\n+CREATE TABLE SyncopeUser_passwordHistory (user_id VARCHAR(36), passwordHistoryValue VARCHAR(255));\n+CREATE TABLE SyncopeUser_SyncopeRole (user_id VARCHAR(36), role_id VARCHAR(255));\n+CREATE TABLE Task (id VARCHAR(36) NOT NULL, DTYPE VARCHAR(31), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, anyKey VARCHAR(255), anyTypeKind VARCHAR(20), executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), NOTIFICATION_ID VARCHAR(36), matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, pullStatus INTEGER, unmatchingRule VARCHAR(20), RESOURCE_ID VARCHAR(255), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), DESTINATIONREALM_ID VARCHAR(36), anyType VARCHAR(255), attributes CLOB, connObjectKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), PRIMARY KEY (id));\n+CREATE TABLE TaskExec (id VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE TypeExtension (id VARCHAR(36) NOT NULL, GROUP_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_TYPXNSN_GROUP_ID UNIQUE (GROUP_ID, ANYTYPE_ID));\n+CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n+CREATE TABLE UDynGroupMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_id VARCHAR(36), user_id VARCHAR(36));\n+CREATE TABLE UMembership (id VARCHAR(36) NOT NULL, user_id VARCHAR(36), group_id VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE UPlainAttr (id VARCHAR(36) NOT NULL, OWNER_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE UPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_id));\n+CREATE TABLE UPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE TABLE URelationship (id VARCHAR(36) NOT NULL, user_id VARCHAR(36), anyObject_id VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_ID UNIQUE (TYPE_ID, user_id, anyObject_id));\n+CREATE TABLE VirSchema (id VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_ID VARCHAR(255), PROVISION_ID VARCHAR(36), PRIMARY KEY (id));\n+CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_ID ON AccountPolicy_ExternalResource (accountPolicy_id);\n+CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_id);\n+CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_ID);\n+CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_ID);\n+CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_ID ON ADynGroupMembership_AnyObject (aDynGroupMembership_id);\n+CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_id);\n+CREATE INDEX I_MMBRSHP_LEFTEND1 ON AMembership (anyObject_id);\n+CREATE INDEX I_MMBRSHP_RIGHTEND1 ON AMembership (group_id);\n+CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_ID);\n+CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_ID);\n+CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_ID);\n+CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_ID);\n+CREATE INDEX I_NYBJLSS_ANYOBJECT_ID ON AnyObject_AnyTypeClass (anyObject_id);\n+CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_NYBJSRC_ANYOBJECT_ID ON AnyObject_ExternalResource (anyObject_id);\n+CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_id);\n+CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_ID);\n+CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_ID);\n+CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_ID);\n+CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_ID);\n+CREATE INDEX I_NYTYLSS_ANYTYPE_ID ON AnyType_AnyTypeClass (anyType_id);\n+CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_ID);\n+CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_id);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON APlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_PLNTQVL_SCHEMA1 ON APlainAttrUniqueValue (schema_id);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON APlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_RLTNSHP_LEFTEND1 ON ARelationship (left_anyObject_id);\n+CREATE INDEX I_RLTNSHP_RIGHTEND1 ON ARelationship (right_anyObject_id);\n+CREATE INDEX I_RLTNSHP_TYPE1 ON ARelationship (TYPE_ID);\n+CREATE INDEX I_CNNNLTS_CONNINSTANCE_ID ON ConnInstance_capabilities (connInstance_id);\n+CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_ID);\n+CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_id);\n+CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_id);\n+CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_ID);\n+CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_ID);\n+CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_ID ON DynRoleMembership_User (dynRoleMembership_id);\n+CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_id);\n+CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_ID);\n+CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_ID);\n+CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_ID);\n+CREATE INDEX I_XTRNRRD_RESOURCE_ID ON ExternalResource_capOverride (resource_id);\n+CREATE INDEX I_XTRNTNS_RESOURCE_ID ON ExternalResource_PropActions (resource_id);\n+CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_ID);\n+CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_id);\n+CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_id);\n+CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_ID);\n+CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_ID);\n+CREATE INDEX I_MPPNRMR_MAPPINGITEM_ID ON MappingItem_Transformer (mappingItem_id);\n+CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_id);\n+CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_ID ON NotificationTask_recipients (notificationTask_id);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_ID ON Notification_events (notification_id);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_ID1 ON Notification_staticRecipients (notification_id);\n+CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_ID);\n+CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_ID);\n+CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_ID);\n+CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_ID);\n+CREATE INDEX I_PRVSLSS_ELEMENT ON Provision_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_PRVSLSS_PROVISION_ID ON Provision_AnyTypeClass (provision_id);\n+CREATE INDEX I_PLLTNMS_PULLTASK_ID ON PullTask_actionsClassNames (pullTask_id);\n+CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_ID);\n+CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_ID);\n CREATE INDEX I_PSHTNMS_PUSHTASK_KEY ON PushTask_actionsClassNames (pushTask_key);\n-CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_KEY);\n-CREATE INDEX I_REALM_PARENT ON Realm (PARENT_KEY);\n-CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_KEY);\n+CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_REALM_PARENT ON Realm (PARENT_ID);\n+CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_ID);\n CREATE INDEX I_RLM_NMS_REALM_KEY ON Realm_actionsClassNames (realm_key);\n-CREATE INDEX I_REPORT_TEMPLATE ON Report (template_key);\n-CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_KEY);\n-CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_KEY);\n-CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_KEY);\n-CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_KEY);\n-CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_KEY);\n-CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_SYNCLSS_GROUP_KEY ON SyncopeGroup_AnyTypeClass (group_key);\n-CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_key);\n-CREATE INDEX I_SYNCSRC_GROUP_KEY ON SyncopeGroup_ExternalResource (group_key);\n-CREATE INDEX I_SYNCNTS_ROLE_KEY ON SyncopeRole_entitlements (role_key);\n-CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_key);\n-CREATE INDEX I_SYNCRLM_ROLE_KEY ON SyncopeRole_Realm (role_key);\n-CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_KEY);\n-CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_KEY);\n-CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_SYNCLSS_USER_KEY ON SyncopeUser_AnyTypeClass (user_key);\n-CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_key);\n-CREATE INDEX I_SYNCSRC_USER_KEY ON SyncopeUser_ExternalResource (user_key);\n-CREATE INDEX I_SYNCTRY_USER_KEY ON SyncopeUser_passwordHistory (user_key);\n-CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_key);\n-CREATE INDEX I_SYNCPRL_USER_KEY ON SyncopeUser_SyncopeRole (user_key);\n-CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_KEY);\n+CREATE INDEX I_REPORT_TEMPLATE ON Report (template_id);\n+CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_ID);\n+CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_ID);\n+CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_ID);\n+CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_ID);\n+CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_ID);\n+CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_SYNCLSS_GROUP_ID ON SyncopeGroup_AnyTypeClass (group_id);\n+CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_id);\n+CREATE INDEX I_SYNCSRC_GROUP_ID ON SyncopeGroup_ExternalResource (group_id);\n+CREATE INDEX I_SYNCNTS_ROLE_ID ON SyncopeRole_entitlements (role_id);\n+CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_id);\n+CREATE INDEX I_SYNCRLM_ROLE_ID ON SyncopeRole_Realm (role_id);\n+CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_ID);\n+CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_ID);\n+CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_SYNCLSS_USER_ID ON SyncopeUser_AnyTypeClass (user_id);\n+CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_id);\n+CREATE INDEX I_SYNCSRC_USER_ID ON SyncopeUser_ExternalResource (user_id);\n+CREATE INDEX I_SYNCTRY_USER_ID ON SyncopeUser_passwordHistory (user_id);\n+CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_id);\n+CREATE INDEX I_SYNCPRL_USER_ID ON SyncopeUser_SyncopeRole (user_id);\n+CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_ID);\n CREATE INDEX I_TASK_DTYPE ON Task (DTYPE);\n-CREATE INDEX I_TASK_NOTIFICATION ON Task (NOTIFICATION_KEY);\n-CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_KEY);\n-CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_KEY);\n-CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_KEY);\n-CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_KEY);\n-CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_key);\n-CREATE INDEX I_TYPXLSS_TYPEEXTENSION_KEY ON TypeExtension_AnyTypeClass (typeExtension_key);\n-CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_KEY);\n-CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_key);\n-CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_KEY ON UDynGroupMembership_User (uDynGroupMembership_key);\n-CREATE INDEX I_MMBRSHP_LEFTEND ON UMembership (user_key);\n-CREATE INDEX I_MMBRSHP_RIGHTEND ON UMembership (group_key);\n-CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_KEY);\n-CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_key);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE ON UPlainAttrUniqueValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_PLNTQVL_SCHEMA ON UPlainAttrUniqueValue (schema_key);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE ON UPlainAttrValue (ATTRIBUTE_KEY);\n-CREATE INDEX I_RLTNSHP_LEFTEND ON URelationship (user_key);\n-CREATE INDEX I_RLTNSHP_RIGHTEND ON URelationship (anyObject_key);\n-CREATE INDEX I_RLTNSHP_TYPE ON URelationship (TYPE_KEY);\n-CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_KEY);\n-CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_KEY);\n+CREATE INDEX I_TASK_NOTIFICATION ON Task (NOTIFICATION_ID);\n+CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_ID);\n+CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_ID);\n+CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_ID);\n+CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_ID);\n+CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_id);\n+CREATE INDEX I_TYPXLSS_TYPEEXTENSION_ID ON TypeExtension_AnyTypeClass (typeExtension_id);\n+CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_ID);\n+CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_id);\n+CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_ID ON UDynGroupMembership_User (uDynGroupMembership_id);\n+CREATE INDEX I_MMBRSHP_LEFTEND ON UMembership (user_id);\n+CREATE INDEX I_MMBRSHP_RIGHTEND ON UMembership (group_id);\n+CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_ID);\n+CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_id);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE ON UPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_PLNTQVL_SCHEMA ON UPlainAttrUniqueValue (schema_id);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE ON UPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_RLTNSHP_LEFTEND ON URelationship (user_id);\n+CREATE INDEX I_RLTNSHP_RIGHTEND ON URelationship (anyObject_id);\n+CREATE INDEX I_RLTNSHP_TYPE ON URelationship (TYPE_ID);\n+CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_ID);\n+CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_ID);"},{"sha":"03c426a1f472cc494dec4c5a93fd6a5a6ea781e0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -93,7 +93,7 @@ protected AnyUtils getAnyUtils() {\n     @Override\n     public A authFind(final String key) {\n         if (key == null) {\n-            throw new NotFoundException(\"Null key\");\n+            throw new NotFoundException(\"Null id\");\n         }\n \n         A any = find(key);\n@@ -133,7 +133,7 @@ public A findByWorkflowId(final String workflowId) {\n \n     private Query findByAttrValueQuery(final String entityName) {\n         return entityManager().createQuery(\"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.key = :schemaKey AND (e.stringValue IS NOT NULL\"\n+                + \" WHERE e.attribute.schema.id = :schemaKey AND (e.stringValue IS NOT NULL\"\n                 + \" AND e.stringValue = :stringValue)\"\n                 + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n                 + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n@@ -294,8 +294,8 @@ public int compare(final String t, final String t1) {\n                 // verify schema existence and get schema type\n                 PlainSchema schema = plainSchemaDAO.find(identifiers.get(i));\n                 if (schema == null) {\n-                    LOG.error(\"Invalid schema key '{}'\", identifiers.get(i));\n-                    throw new IllegalArgumentException(\"Invalid schema key \" + identifiers.get(i));\n+                    LOG.error(\"Invalid schema id '{}'\", identifiers.get(i));\n+                    throw new IllegalArgumentException(\"Invalid schema id \" + identifiers.get(i));\n                 }\n \n                 // clear builder\n@@ -304,13 +304,13 @@ public int compare(final String t, final String t1) {\n                 bld.append(\"(\");\n \n                 // set schema name\n-                bld.append(\"s.key = '\").append(identifiers.get(i)).append(\"'\");\n+                bld.append(\"s.id = '\").append(identifiers.get(i)).append(\"'\");\n \n                 bld.append(\" AND \");\n \n-                bld.append(\"s.key = a.schema_key\").append(\" AND \");\n+                bld.append(\"s.id = a.schema_id\").append(\" AND \");\n \n-                bld.append(\"a.key = v.attribute_key\");\n+                bld.append(\"a.id = v.attribute_id\");\n \n                 bld.append(\" AND \");\n \n@@ -360,10 +360,10 @@ public List<A> findByDerAttrValue(final String schemaKey, final String value) {\n         for (String clause : getWhereClause(schema.getExpression(), value)) {\n             if (querystring.length() > 0) {\n                 subquery = true;\n-                querystring.append(\" AND a.owner_key IN ( \");\n+                querystring.append(\" AND a.owner_id IN ( \");\n             }\n \n-            querystring.append(\"SELECT a.owner_key \").\n+            querystring.append(\"SELECT a.owner_id \").\n                     append(\"FROM \").append(getAnyUtils().plainAttrClass().getSimpleName().substring(3)).append(\" a, \").\n                     append(getAnyUtils().plainAttrValueClass().getSimpleName().substring(3)).append(\" v, \").\n                     append(PlainSchema.class.getSimpleName()).append(\" s \").\n@@ -405,7 +405,7 @@ public final List<A> findAll() {\n \n     private SearchCond getAllMatchingCond() {\n         AnyCond idCond = new AnyCond(AttributeCond.Type.ISNOTNULL);\n-        idCond.setSchema(\"key\");\n+        idCond.setSchema(\"id\");\n         return SearchCond.getLeafCond(idCond);\n     }\n "},{"sha":"85aaddc877e5140cf36190bef12e19b2d26bef41","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":74,"deletions":68,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -74,7 +74,7 @@\n @Repository\n public class JPAAnySearchDAO extends AbstractDAO<Any<?>> implements AnySearchDAO {\n \n-    private static final String EMPTY_QUERY = \"SELECT any_key FROM user_search_attr WHERE 1=2\";\n+    private static final String EMPTY_QUERY = \"SELECT any_id FROM user_search_attr WHERE 1=2\";\n \n     @Autowired\n     private RealmDAO realmDAO;\n@@ -111,8 +111,8 @@ private String getAdminRealmsFilter(\n         }\n \n         StringBuilder adminRealmFilter = new StringBuilder().\n-                append(\"SELECT any_key FROM \").append(svs.field().name).\n-                append(\" WHERE realm_key IN (SELECT key AS realm_key FROM Realm\");\n+                append(\"SELECT any_id FROM \").append(svs.field().name).\n+                append(\" WHERE realm_id IN (SELECT id AS realm_id FROM Realm\");\n \n         boolean firstRealm = true;\n         for (String realmKey : realmKeys) {\n@@ -122,7 +122,7 @@ private String getAdminRealmsFilter(\n             } else {\n                 adminRealmFilter.append(\" OR\");\n             }\n-            adminRealmFilter.append(\" key=?\").append(setParameter(parameters, realmKey));\n+            adminRealmFilter.append(\" id=?\").append(setParameter(parameters, realmKey));\n         }\n \n         adminRealmFilter.append(')');\n@@ -139,13 +139,13 @@ public int count(final Set<String> adminRealms, final SearchCond searchCondition\n         StringBuilder queryString = getQuery(searchCondition, parameters, svs);\n \n         // 2. take into account administrative realms\n-        queryString.insert(0, \"SELECT u.any_key FROM (\");\n-        queryString.append(\") u WHERE any_key IN (\");\n+        queryString.insert(0, \"SELECT u.any_id FROM (\");\n+        queryString.append(\") u WHERE any_id IN (\");\n         queryString.append(getAdminRealmsFilter(adminRealms, svs, parameters)).append(')');\n \n         // 3. prepare the COUNT query\n-        queryString.insert(0, \"SELECT COUNT(any_key) FROM (\");\n-        queryString.append(\") count_any_key\");\n+        queryString.insert(0, \"SELECT COUNT(any_id) FROM (\");\n+        queryString.append(\") count_any_id\");\n \n         Query countQuery = entityManager().createNativeQuery(queryString.toString());\n         fillWithParameters(countQuery, parameters);\n@@ -213,8 +213,8 @@ public <T extends Any<?>> boolean matches(\n             matches = false;\n         } else {\n             // 2. take into account the passed user\n-            queryString.insert(0, \"SELECT u.any_key FROM (\");\n-            queryString.append(\") u WHERE any_key=?\").append(setParameter(parameters, any.getKey()));\n+            queryString.insert(0, \"SELECT u.any_id FROM (\");\n+            queryString.append(\") u WHERE any_id=?\").append(setParameter(parameters, any.getKey()));\n \n             // 3. prepare the search query\n             Query query = entityManager().createNativeQuery(queryString.toString());\n@@ -254,7 +254,7 @@ private void fillWithParameters(final Query query, final List<Object> parameters\n     }\n \n     private StringBuilder buildSelect(final OrderBySupport orderBySupport) {\n-        final StringBuilder select = new StringBuilder(\"SELECT u.any_key\");\n+        final StringBuilder select = new StringBuilder(\"SELECT u.any_id\");\n \n         for (OrderBySupport.Item obs : orderBySupport.items) {\n             select.append(',').append(obs.select);\n@@ -279,15 +279,15 @@ private StringBuilder buildWhere(final OrderBySupport orderBySupport, final AnyT\n         }\n         where.append(\" WHERE \");\n         for (SearchSupport.SearchView searchView : orderBySupport.views) {\n-            where.append(\"u.any_key=\").append(searchView.alias).append(\".any_key AND \");\n+            where.append(\"u.any_id=\").append(searchView.alias).append(\".any_id AND \");\n         }\n \n         for (OrderBySupport.Item obs : orderBySupport.items) {\n             if (StringUtils.isNotBlank(obs.where)) {\n                 where.append(obs.where).append(\" AND \");\n             }\n         }\n-        where.append(\"u.any_key IN (\");\n+        where.append(\"u.any_id IN (\");\n \n         return where;\n     }\n@@ -316,7 +316,8 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n         for (OrderByClause clause : orderByClauses) {\n             OrderBySupport.Item obs = new OrderBySupport.Item();\n \n-            String fieldName = clause.getField();\n+            // Manage difference among external key attribute and internal JPA @Id\n+            String fieldName = \"key\".equals(clause.getField()) ? \"id\" : clause.getField();\n \n             Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), fieldName);\n             if (anyField == null) {\n@@ -330,7 +331,7 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n                                 append(\" AS \").append(fieldName).toString();\n                         obs.where = new StringBuilder().\n                                 append(svs.uniqueAttr().alias).\n-                                append(\".schema_key='\").append(fieldName).append(\"'\").toString();\n+                                append(\".schema_id='\").append(fieldName).append(\"'\").toString();\n                         obs.orderBy = fieldName + \" \" + clause.getDirection().name();\n                     } else {\n                         orderBySupport.views.add(svs.attr());\n@@ -340,7 +341,7 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n                                 append(\" AS \").append(fieldName).toString();\n                         obs.where = new StringBuilder().\n                                 append(svs.attr().alias).\n-                                append(\".schema_key='\").append(fieldName).append(\"'\").toString();\n+                                append(\".schema_id='\").append(fieldName).append(\"'\").toString();\n                         obs.orderBy = fieldName + \" \" + clause.getDirection().name();\n                     }\n                 }\n@@ -413,7 +414,7 @@ private <T extends Any<?>> List<T> doSearch(final Set<String> adminRealms,\n                             ? (T) groupDAO.find(actualKey)\n                             : (T) anyObjectDAO.find(actualKey);\n             if (any == null) {\n-                LOG.error(\"Could not find {} with key {}, even though returned by the native query\",\n+                LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n                         typeKind, actualKey);\n             } else if (!result.contains(any)) {\n                 result.add(any);\n@@ -467,14 +468,14 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n \n             case AND:\n                 query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, svs)).\n-                        append(\" AND any_key IN ( \").\n+                        append(\" AND any_id IN ( \").\n                         append(getQuery(nodeCond.getRightNodeCond(), parameters, svs)).\n                         append(\")\");\n                 break;\n \n             case OR:\n                 query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, svs)).\n-                        append(\" OR any_key IN ( \").\n+                        append(\" OR any_id IN ( \").\n                         append(getQuery(nodeCond.getRightNodeCond(), parameters, svs)).\n                         append(\")\");\n                 break;\n@@ -488,8 +489,8 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n     private String getQuery(final AnyTypeCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n-                append(svs.field().name).append(\" WHERE type_key\");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+                append(svs.field().name).append(\" WHERE type_id\");\n \n         if (not) {\n             query.append(\"<>\");\n@@ -505,19 +506,19 @@ private String getQuery(final AnyTypeCond cond, final boolean not, final List<Ob\n     private String getQuery(final RelationshipTypeCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_key NOT IN (\");\n+            query.append(\"any_id NOT IN (\");\n         } else {\n-            query.append(\"any_key IN (\");\n+            query.append(\"any_id IN (\");\n         }\n \n-        query.append(\"SELECT any_key \").append(\"FROM \").\n+        query.append(\"SELECT any_id \").append(\"FROM \").\n                 append(svs.relationship().name).\n                 append(\" WHERE type=?\").append(setParameter(parameters, cond.getRelationshipTypeKey())).\n-                append(\" UNION SELECT right_any_key AS any_key FROM \").\n+                append(\" UNION SELECT right_any_id AS any_id FROM \").\n                 append(svs.relationship().name).\n                 append(\" WHERE type=?\").append(setParameter(parameters, cond.getRelationshipTypeKey())).\n                 append(')');\n@@ -528,18 +529,18 @@ private String getQuery(final RelationshipTypeCond cond, final boolean not, fina\n     private String getQuery(final RelationshipCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_key NOT IN (\");\n+            query.append(\"any_id NOT IN (\");\n         } else {\n-            query.append(\"any_key IN (\");\n+            query.append(\"any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n                 append(svs.relationship().name).append(\" WHERE \").\n-                append(\"right_any_key=?\").append(setParameter(parameters, cond.getAnyObjectKey())).\n+                append(\"right_any_id=?\").append(setParameter(parameters, cond.getAnyObjectKey())).\n                 append(')');\n \n         return query.toString();\n@@ -548,29 +549,29 @@ private String getQuery(final RelationshipCond cond, final boolean not, final Li\n     private String getQuery(final MembershipCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_key NOT IN (\");\n+            query.append(\"any_id NOT IN (\");\n         } else {\n-            query.append(\"any_key IN (\");\n+            query.append(\"any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n                 append(svs.membership().name).append(\" WHERE \").\n-                append(\"group_key=?\").append(setParameter(parameters, cond.getGroupKey())).\n+                append(\"group_id=?\").append(setParameter(parameters, cond.getGroupKey())).\n                 append(')');\n \n         if (not) {\n-            query.append(\"AND any_key NOT IN (\");\n+            query.append(\"AND any_id NOT IN (\");\n         } else {\n-            query.append(\"OR any_key IN (\");\n+            query.append(\"OR any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n                 append(svs.dyngroupmembership().name).append(\" WHERE \").\n-                append(\"group_key=?\").append(setParameter(parameters, cond.getGroupKey())).\n+                append(\"group_id=?\").append(setParameter(parameters, cond.getGroupKey())).\n                 append(')');\n \n         return query.toString();\n@@ -579,29 +580,29 @@ private String getQuery(final MembershipCond cond, final boolean not, final List\n     private String getQuery(final RoleCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_key NOT IN (\");\n+            query.append(\"any_id NOT IN (\");\n         } else {\n-            query.append(\"any_key IN (\");\n+            query.append(\"any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n                 append(svs.role().name).append(\" WHERE \").\n-                append(\"role_key=?\").append(setParameter(parameters, cond.getRoleKey())).\n+                append(\"role_id=?\").append(setParameter(parameters, cond.getRoleKey())).\n                 append(')');\n \n         if (not) {\n-            query.append(\"AND any_key NOT IN (\");\n+            query.append(\"AND any_id NOT IN (\");\n         } else {\n-            query.append(\"OR any_key IN (\");\n+            query.append(\"OR any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n                 append(svs.dynrolemembership().name).append(\" WHERE \").\n-                append(\"role_key=?\").append(setParameter(parameters, cond.getRoleKey())).\n+                append(\"role_id=?\").append(setParameter(parameters, cond.getRoleKey())).\n                 append(')');\n \n         return query.toString();\n@@ -610,24 +611,24 @@ private String getQuery(final RoleCond cond, final boolean not, final List<Objec\n     private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_key NOT IN (\");\n+            query.append(\"any_id NOT IN (\");\n         } else {\n-            query.append(\"any_key IN (\");\n+            query.append(\"any_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_key FROM \").\n+        query.append(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.resource().name).\n-                append(\" WHERE resource_key=?\").\n+                append(\" WHERE resource_id=?\").\n                 append(setParameter(parameters, cond.getResourceKey()));\n \n         if (svs.anyTypeKind() == AnyTypeKind.USER) {\n-            query.append(\" UNION SELECT DISTINCT any_key FROM \").\n+            query.append(\" UNION SELECT DISTINCT any_id FROM \").\n                     append(svs.groupResource().name).\n-                    append(\" WHERE resource_key=?\").\n+                    append(\" WHERE resource_id=?\").\n                     append(setParameter(parameters, cond.getResourceKey()));\n         }\n \n@@ -642,16 +643,16 @@ private String getQuery(final AssignableCond cond, final List<Object> parameters\n             return EMPTY_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE (\");\n         if (cond.isFromGroup()) {\n             for (Realm current = realm; current.getParent() != null; current = current.getParent()) {\n-                query.append(\"realm_key=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n+                query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n-            query.append(\"realm_key=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n+            query.append(\"realm_id=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n         } else {\n             for (Realm current : realmDAO.findDescendants(realm)) {\n-                query.append(\"realm_key=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n+                query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n             query.setLength(query.length() - 4);\n         }\n@@ -775,18 +776,18 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n             return EMPTY_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \");\n         switch (cond.getType()) {\n             case ISNOTNULL:\n                 query.append(svs.field().name).\n-                        append(\" WHERE any_key NOT IN (SELECT any_key FROM \").\n+                        append(\" WHERE any_id NOT IN (SELECT any_id FROM \").\n                         append(svs.nullAttr().name).\n-                        append(\" WHERE schema_key='\").append(schema.getKey()).append(\"')\");\n+                        append(\" WHERE schema_id='\").append(schema.getKey()).append(\"')\");\n                 break;\n \n             case ISNULL:\n                 query.append(svs.nullAttr().name).\n-                        append(\" WHERE schema_key='\").append(schema.getKey()).append(\"'\");\n+                        append(\" WHERE schema_id='\").append(schema.getKey()).append(\"'\");\n                 break;\n \n             default:\n@@ -795,7 +796,7 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n                 } else {\n                     query.append(svs.attr().name);\n                 }\n-                query.append(\" WHERE schema_key='\").append(schema.getKey());\n+                query.append(\" WHERE schema_id='\").append(schema.getKey());\n                 fillAttributeQuery(query, attrValue, schema, cond, not, parameters, svs);\n         }\n \n@@ -808,6 +809,11 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n \n         AnyUtils attrUtils = anyUtilsFactory.getInstance(svs.anyTypeKind());\n \n+        // Keeps track of difference between entity's getKey() and JPA @Id fields\n+        if (\"key\".equals(cond.getSchema())) {\n+            cond.setSchema(\"id\");\n+        }\n+\n         Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), cond.getSchema());\n         if (anyField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n@@ -849,11 +855,11 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n \n             if (relMethod != null) {\n                 if (Long.class.isAssignableFrom(relMethod.getReturnType())) {\n-                    cond.setSchema(cond.getSchema() + \"_key\");\n+                    cond.setSchema(cond.getSchema() + \"_id\");\n                     schema.setType(AttrSchemaType.Long);\n                 }\n                 if (String.class.isAssignableFrom(relMethod.getReturnType())) {\n-                    cond.setSchema(cond.getSchema() + \"_key\");\n+                    cond.setSchema(cond.getSchema() + \"_id\");\n                     schema.setType(AttrSchemaType.String);\n                 }\n             }\n@@ -872,7 +878,7 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n             }\n         }\n \n-        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters, svs);"},{"sha":"3cce4b536f97f43d0cf6957f5def214b904f5d7b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerSchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -49,7 +49,7 @@ public List<DerSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> anyTy\n                 append(JPADerSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n         for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n-            queryString.append(\"e.anyTypeClass.key='\").append(anyTypeClass.getKey()).append(\"' OR \");\n+            queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n         }\n \n         TypedQuery<DerSchema> query = entityManager().createQuery("},{"sha":"38d4adde4b7c5ba921d96a0d343a7d270d81e9f8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -158,7 +158,7 @@ public List<Group> findOwnedByUser(final String userKey) {\n         StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(JPAGroup.class.getSimpleName()).\n                 append(\" e WHERE e.userOwner=:owner \");\n         for (String groupKey : userDAO.findAllGroupKeys(owner)) {\n-            queryString.append(\"OR e.groupOwner.key='\").append(groupKey).append(\"' \");\n+            queryString.append(\"OR e.groupOwner.id='\").append(groupKey).append(\"' \");\n         }\n \n         TypedQuery<Group> query = entityManager().createQuery(queryString.toString(), Group.class);"},{"sha":"1b88c82a990eb7fec4f1865605e1d3b876fe0dd0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainSchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -55,7 +55,7 @@ public List<PlainSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> any\n                 append(JPAPlainSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n         for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n-            queryString.append(\"e.anyTypeClass.key='\").append(anyTypeClass.getKey()).append(\"' OR \");\n+            queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n         }\n \n         TypedQuery<PlainSchema> query = entityManager().createQuery("},{"sha":"ae62461b6a42842d85cbc1fb860020d77c104ded","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -87,9 +87,11 @@ private <T extends Task> StringBuilder buildFindAllQuery(final TaskType type) {\n                 append(getEntityReference(type).getSimpleName()).\n                 append(\" t WHERE \");\n         if (type == TaskType.SCHEDULED) {\n-            builder.append(\"t.key NOT IN (SELECT t.key FROM \").append(JPAPushTask.class.getSimpleName()).append(\" t) \").\n+            builder.append(\"t.id NOT IN (SELECT t.id FROM \").\n+                    append(JPAPushTask.class.getSimpleName()).append(\" t) \").\n                     append(\"AND \").\n-                    append(\"t.key NOT IN (SELECT t.key FROM \").append(JPAPullTask.class.getSimpleName()).append(\" t)\");\n+                    append(\"t.id NOT IN (SELECT t.id FROM \").\n+                    append(JPAPullTask.class.getSimpleName()).append(\" t)\");\n         } else {\n             builder.append(\"1=1\");\n         }\n@@ -107,7 +109,7 @@ public <T extends Task> List<T> findToExec(final TaskType type) {\n         } else {\n             queryString.append(\"t.executions IS EMPTY \");\n         }\n-        queryString.append(\"ORDER BY t.key DESC\");\n+        queryString.append(\"ORDER BY t.id DESC\");\n \n         Query query = entityManager().createQuery(queryString.toString());\n         return query.getResultList();\n@@ -168,7 +170,7 @@ private String toOrderByStatement(\n         }\n \n         if (statement.length() == 0) {\n-            statement.append(\"ORDER BY t.key DESC\");\n+            statement.append(\"ORDER BY t.id DESC\");\n         } else {\n             statement.insert(0, \"ORDER BY \");\n         }"},{"sha":"531cb4b75641a0e7b55bcdabb8a11a2fac7a88ed","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskExecDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -119,7 +119,7 @@ public <T extends Task> List<TaskExec> findAll(\n     @Override\n     public int count(final String taskKey) {\n         Query countQuery = entityManager().createNativeQuery(\n-                \"SELECT COUNT(e.key) FROM \" + JPATaskExec.TABLE + \" e WHERE e.task_key=?1\");\n+                \"SELECT COUNT(e.id) FROM \" + JPATaskExec.TABLE + \" e WHERE e.task_id=?1\");\n         countQuery.setParameter(1, taskKey);\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n@@ -136,7 +136,7 @@ private String toOrderByStatement(final List<OrderByClause> orderByClauses) {\n         }\n \n         if (statement.length() == 0) {\n-            statement.append(\"ORDER BY e.key DESC\");\n+            statement.append(\"ORDER BY e.id DESC\");\n         } else {\n             statement.insert(0, \"ORDER BY \");\n         }"},{"sha":"9a42b179832c6ee194203e3f8a1f6a740895ef3d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAVirSchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -51,7 +51,7 @@ public List<VirSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> anyTy\n                 append(JPAVirSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n         for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n-            queryString.append(\"e.anyTypeClass.key='\").append(anyTypeClass.getKey()).append(\"' OR \");\n+            queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n         }\n \n         TypedQuery<VirSchema> query = entityManager().createQuery("},{"sha":"c642ea3f62b49d06f1a1c09f453c31fde0040276","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractGeneratedKeyEntity.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGeneratedKeyEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGeneratedKeyEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGeneratedKeyEntity.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -32,11 +32,11 @@ public abstract class AbstractGeneratedKeyEntity extends AbstractEntity {\n     @Id\n     @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"uuid\")\n     @Column(length = 36)\n-    private String key;\n+    private String id;\n \n     @Override\n     public String getKey() {\n-        return key;\n+        return id;\n     }\n \n }"},{"sha":"d647854931c658486e293cea521a9048dcc05d57","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -44,7 +44,7 @@\n \n     @NotNull\n     @ManyToOne(fetch = FetchType.EAGER)\n-    @Column(name = \"schema_key\")\n+    @Column(name = \"schema_id\")\n     protected JPAPlainSchema schema;\n \n     @Override"},{"sha":"370958495523d80e78ff462d4873ea6fa54809ff","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractProvidedKeyEntity.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractProvidedKeyEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractProvidedKeyEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractProvidedKeyEntity.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -28,16 +28,16 @@ public abstract class AbstractProvidedKeyEntity extends AbstractEntity implement\n     private static final long serialVersionUID = 821537874069666593L;\n \n     @Id\n-    private String key;\n+    private String id;\n \n     @Override\n     public String getKey() {\n-        return key;\n+        return id;\n     }\n \n     @Override\n     public void setKey(final String key) {\n-        this.key = key;\n+        this.id = key;\n     }\n \n }"},{"sha":"3806b8cbfbbe9c8ee1d7386e447ef91758d5e54d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyAbout.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -29,7 +29,7 @@\n \n @Entity\n @Table(name = JPAAnyAbout.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"notification_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"notification_id\", \"anyType_id\" }))\n public class JPAAnyAbout extends AbstractGeneratedKeyEntity implements AnyAbout {\n \n     private static final long serialVersionUID = 3517381731849788407L;"},{"sha":"46949ee9510044345a1bc70e9366c12f05516810","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyTemplateRealm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTemplateRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTemplateRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTemplateRealm.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -28,7 +28,7 @@\n \n @Entity\n @Table(name = JPAAnyTemplateRealm.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"realm_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"realm_id\", \"anyType_id\" }))\n public class JPAAnyTemplateRealm extends AbstractAnyTemplate implements AnyTemplateRealm {\n \n     public static final String TABLE = \"AnyTemplateRealm\";"},{"sha":"d9025bcb2f7e7e4d67827f0c9d83d32698399a1f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyType.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -51,9 +51,9 @@ public class JPAAnyType extends AbstractProvidedKeyEntity implements AnyType {\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"anyType_key\", referencedColumnName = \"key\"),\n+            @JoinColumn(name = \"anyType_id\", referencedColumnName = \"id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\", referencedColumnName = \"id\"))\n     private List<JPAAnyTypeClass> classes = new ArrayList<>();\n \n     @Override"},{"sha":"facb93ff655e23b228ddd64c971e9fd2503a576c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConnInstance.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -95,7 +95,7 @@ public class JPAConnInstance extends AbstractGeneratedKeyEntity implements ConnI\n     @Column(name = \"capability\")\n     @CollectionTable(name = \"ConnInstance_capabilities\",\n             joinColumns =\n-            @JoinColumn(name = \"connInstance_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"connInstance_id\", referencedColumnName = \"id\"))\n     private Set<ConnectorCapability> capabilities = new HashSet<>();\n \n     /**"},{"sha":"7d186cd2e80d763f47abbc59b3a15098addd5c46","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANotification.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -59,7 +59,7 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n     @Column(name = \"event\")\n     @CollectionTable(name = \"Notification_events\",\n             joinColumns =\n-            @JoinColumn(name = \"notification_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n     private List<String> events;\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"notification\")\n@@ -70,7 +70,7 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n     @ElementCollection(fetch = FetchType.EAGER)\n     @CollectionTable(name = \"Notification_staticRecipients\",\n             joinColumns =\n-            @JoinColumn(name = \"notification_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n     @Column(name = \"staticRecipients\")\n     private List<String> staticRecipients;\n \n@@ -96,7 +96,7 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n     private String subject;\n \n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n-    @JoinColumn(name = \"template_key\")\n+    @JoinColumn(name = \"template_id\")\n     private JPAMailTemplate template;\n \n     @NotNull"},{"sha":"681ce8e242b8e6f0a2667f1849ac86d29e0ba934","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARealm.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -51,7 +51,7 @@\n \n @Entity\n @Table(name = JPARealm.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"key\", \"parent_key\" }))\n+        @UniqueConstraint(columnNames = { \"id\", \"parent_id\" }))\n @Cacheable\n @RealmCheck\n public class JPARealm extends AbstractGeneratedKeyEntity implements Realm {\n@@ -76,7 +76,7 @@ public class JPARealm extends AbstractGeneratedKeyEntity implements Realm {\n     @Column(name = \"actionClassName\")\n     @CollectionTable(name = \"Realm_actionsClassNames\",\n             joinColumns =\n-            @JoinColumn(name = \"realm_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"realm_key\", referencedColumnName = \"id\"))\n     private Set<String> actionsClassNames = new HashSet<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"realm\")"},{"sha":"73606cce3b863c3adacbc531abb3889db649324d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAReport.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -67,7 +67,7 @@ public class JPAReport extends AbstractGeneratedKeyEntity implements Report {\n     private Integer active;\n \n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n-    @JoinColumn(name = \"template_key\")\n+    @JoinColumn(name = \"template_id\")\n     private JPAReportTemplate template;\n \n     @Override"},{"sha":"1b74b980ad7535f620dbe315537d8284e075d064","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARole.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -55,14 +55,14 @@ public class JPARole extends AbstractProvidedKeyEntity implements Role {\n     @Column(name = \"entitlement\")\n     @CollectionTable(name = \"SyncopeRole_entitlements\",\n             joinColumns =\n-            @JoinColumn(name = \"role_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"role_id\", referencedColumnName = \"id\"))\n     private Set<String> entitlements = new HashSet<>();\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"role_key\"),\n+            @JoinColumn(name = \"role_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"realm_key\"))\n+            @JoinColumn(name = \"realm_id\"))\n     @Valid\n     private List<JPARealm> realms = new ArrayList<>();\n "},{"sha":"4bb75fc9256d5466bc2ae19c890d66a95bff6722","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAADynGroupMembership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -51,9 +51,9 @@ public class JPAADynGroupMembership extends AbstractDynMembership<AnyObject> imp\n \n     @ManyToMany\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"aDynGroupMembership_key\"),\n+            @JoinColumn(name = \"aDynGroupMembership_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyObject_key\"))\n+            @JoinColumn(name = \"anyObject_id\"))\n     private List<JPAAnyObject> anyObjects = new ArrayList<>();\n \n     @Override"},{"sha":"1561dae2f7d5e942696c82a3b73fea8f9cc64b04","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAMembership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -39,11 +39,11 @@ public class JPAAMembership extends AbstractGeneratedKeyEntity implements AMembe\n     public static final String TABLE = \"AMembership\";\n \n     @ManyToOne\n-    @Column(name = \"anyObject_key\")\n+    @Column(name = \"anyObject_id\")\n     private JPAAnyObject leftEnd;\n \n     @ManyToOne\n-    @Column(name = \"group_key\")\n+    @Column(name = \"group_id\")\n     private JPAGroup rightEnd;\n \n     @Override"},{"sha":"4b0d18e815dd36fc5bb4159250fdca0690c7a01f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAPlainAttrUniqueValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttrUniqueValue.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -42,7 +42,7 @@ public class JPAAPlainAttrUniqueValue extends AbstractPlainAttrValue implements\n     private JPAAPlainAttr attribute;\n \n     @ManyToOne(optional = false)\n-    @JoinColumn(name = \"schema_key\")\n+    @JoinColumn(name = \"schema_id\")\n     private JPAPlainSchema schema;\n \n     @Override"},{"sha":"b488538e6e2c93a1a1ea60e9957cb45c1e8b5333","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAARelationship.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -33,7 +33,7 @@\n \n @Entity\n @Table(name = JPAARelationship.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"type_key\", \"left_anyObject_key\", \"right_anyObject_key\" }))\n+        @UniqueConstraint(columnNames = { \"type_id\", \"left_anyObject_id\", \"right_anyObject_id\" }))\n public class JPAARelationship extends AbstractGeneratedKeyEntity implements ARelationship {\n \n     private static final long serialVersionUID = 6608821135023815357L;\n@@ -44,11 +44,11 @@ public class JPAARelationship extends AbstractGeneratedKeyEntity implements ARel\n     private JPARelationshipType type;\n \n     @ManyToOne\n-    @Column(name = \"left_anyObject_key\")\n+    @Column(name = \"left_anyObject_id\")\n     private JPAAnyObject leftEnd;\n \n     @ManyToOne\n-    @Column(name = \"right_anyObject_key\")\n+    @Column(name = \"right_anyObject_id\")\n     private JPAAnyObject rightEnd;\n \n     @Override"},{"sha":"44f55df6b8630f0ccd69fb520ce08e9a914a7674","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAnyObject.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -67,16 +67,16 @@ public class JPAAnyObject extends AbstractAny<APlainAttr> implements AnyObject {\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"anyObject_key\"),\n+            @JoinColumn(name = \"anyObject_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"resource_key\"))\n+            @JoinColumn(name = \"resource_id\"))\n     private List<JPAExternalResource> resources = new ArrayList<>();\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"anyObject_key\"),\n+            @JoinColumn(name = \"anyObject_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"leftEnd\")"},{"sha":"ef447bed156a88279fcbc51b2ebc73b99ec3aafb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttrUniqueValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -42,7 +42,7 @@ public class JPACPlainAttrUniqueValue extends AbstractPlainAttrValue implements\n     private JPACPlainAttr attribute;\n \n     @ManyToOne(optional = false)\n-    @JoinColumn(name = \"schema_key\")\n+    @JoinColumn(name = \"schema_id\")\n     private JPAPlainSchema schema;\n \n     @Override"},{"sha":"603f247b1bc10b45e2593cdef9f543507b33d5f8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAGPlainAttrUniqueValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttrUniqueValue.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -42,7 +42,7 @@ public class JPAGPlainAttrUniqueValue extends AbstractPlainAttrValue implements\n     private JPAGPlainAttr attribute;\n \n     @ManyToOne(optional = false)\n-    @JoinColumn(name = \"schema_key\")\n+    @JoinColumn(name = \"schema_id\")\n     private JPAPlainSchema schema;\n \n     @Override"},{"sha":"8afb1ae6ba77561b94c3e3935afbabd5948cb934","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAGroup.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -80,17 +80,17 @@ public class JPAGroup extends AbstractAny<GPlainAttr> implements Group {\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"group_key\"),\n+            @JoinColumn(name = \"group_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"resource_key\"))\n+            @JoinColumn(name = \"resource_id\"))\n     @Valid\n     private List<JPAExternalResource> resources = new ArrayList<>();\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"group_key\"),\n+            @JoinColumn(name = \"group_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"group\")"},{"sha":"9ddf68a7ae9e3710a550b3e030c8ba3cc897a62f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPATypeExtension.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPATypeExtension.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPATypeExtension.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPATypeExtension.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -38,7 +38,7 @@\n \n @Entity\n @Table(name = JPATypeExtension.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"group_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"group_id\", \"anyType_id\" }))\n public class JPATypeExtension extends AbstractGeneratedKeyEntity implements TypeExtension {\n \n     private static final long serialVersionUID = -8367626793791263551L;\n@@ -53,9 +53,9 @@ public class JPATypeExtension extends AbstractGeneratedKeyEntity implements Type\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"typeExtension_key\"),\n+            @JoinColumn(name = \"typeExtension_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n     @Override"},{"sha":"ef0aeb7e62bdbd1fc054c4c1ac9543e024a771e6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAAccountPolicy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -64,9 +64,9 @@ public class JPAAccountPolicy extends AbstractPolicy implements AccountPolicy {\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"accountPolicy_key\"),\n+            @JoinColumn(name = \"accountPolicy_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"resource_key\"))\n+            @JoinColumn(name = \"resource_id\"))\n     private Set<JPAExternalResource> resources = new HashSet<>();\n \n     @Override"},{"sha":"c93b21c0cad8b821509eaf7ba5be3a3acab5c743","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -149,7 +149,7 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n     @Column(name = \"capabilityOverride\")\n     @CollectionTable(name = \"ExternalResource_capOverride\",\n             joinColumns =\n-            @JoinColumn(name = \"resource_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"resource_id\", referencedColumnName = \"id\"))\n     private Set<ConnectorCapability> capabilitiesOverride = new HashSet<>();\n \n     /**\n@@ -159,7 +159,7 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n     @Column(name = \"actionClassName\")\n     @CollectionTable(name = \"ExternalResource_PropActions\",\n             joinColumns =\n-            @JoinColumn(name = \"resource_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"resource_id\", referencedColumnName = \"id\"))\n     private List<String> propagationActionsClassNames = new ArrayList<>();\n \n     public JPAExternalResource() {"},{"sha":"f3d2702054084353c56b0a74f89fb7f0f7b8e83e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -73,7 +73,7 @@ public class JPAMappingItem extends AbstractGeneratedKeyEntity implements Mappin\n     private String mandatoryCondition;\n \n     /**\n-     * Specify if the mapped target resource's field is the key.\n+     * Specify if the mapped target resource's field is the id.\n      */\n     @NotNull\n     @Basic\n@@ -101,7 +101,7 @@ public class JPAMappingItem extends AbstractGeneratedKeyEntity implements Mappin\n     @Column(name = \"transformerClassName\")\n     @CollectionTable(name = \"MappingItem_Transformer\",\n             joinColumns =\n-            @JoinColumn(name = \"mappingItem_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"mappingItem_id\", referencedColumnName = \"id\"))\n     private List<String> mappingItemTransformerClassNames = new ArrayList<>();\n \n     public JPAMappingItem() {\n@@ -152,7 +152,7 @@ public String getIntAttrName() {\n             case UserKey:\n             case GroupKey:\n             case AnyObjectKey:\n-                name = \"key\";\n+                name = \"id\";\n                 break;\n \n             case Username:"},{"sha":"5c10f51c34b48c1301d7799dd023d58b84e56be7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAProvision.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -46,7 +46,7 @@\n \n @Entity\n @Table(name = JPAProvision.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"resource_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"resource_id\", \"anyType_id\" }))\n public class JPAProvision extends AbstractGeneratedKeyEntity implements Provision {\n \n     private static final long serialVersionUID = -1807889487945989443L;\n@@ -64,9 +64,9 @@ public class JPAProvision extends AbstractGeneratedKeyEntity implements Provisio\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"provision_key\"),\n+            @JoinColumn(name = \"provision_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n     @Lob"},{"sha":"3d72642b840172af69bfd38c6d4940fb6a639960","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAAnyTemplatePullTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -28,7 +28,7 @@\n \n @Entity\n @Table(name = JPAAnyTemplatePullTask.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"pullTask_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"pullTask_id\", \"anyType_id\" }))\n public class JPAAnyTemplatePullTask extends AbstractAnyTemplate implements AnyTemplatePullTask {\n \n     private static final long serialVersionUID = 3517381731849788407L;"},{"sha":"5db9ed73b41e586f6bcef1c0f5fd180012c9d11b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -60,7 +60,7 @@ public class JPANotificationTask extends AbstractTask implements NotificationTas\n     @Column(name = \"address\")\n     @CollectionTable(name = \"NotificationTask_recipients\",\n             joinColumns =\n-            @JoinColumn(name = \"notificationTask_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"notificationTask_id\", referencedColumnName = \"id\"))\n     private Set<String> recipients = new HashSet<>();\n \n     @NotNull"},{"sha":"7dca06c4fe6a8865446c2a25650ac81b00cf7db5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -64,7 +64,7 @@ public class JPAPullTask extends AbstractProvisioningTask implements PullTask {\n     @Column(name = \"actionClassName\")\n     @CollectionTable(name = \"PullTask_actionsClassNames\",\n             joinColumns =\n-            @JoinColumn(name = \"pullTask_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"pullTask_id\", referencedColumnName = \"id\"))\n     private Set<String> actionsClassNames = new HashSet<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pullTask\")"},{"sha":"2f558ffaf5906037aa7295ef4cd342b7f534ff4b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -47,7 +47,7 @@ public class JPAPushTask extends AbstractProvisioningTask implements PushTask {\n     @Column(name = \"actionClassName\")\n     @CollectionTable(name = \"PushTask_actionsClassNames\",\n             joinColumns =\n-            @JoinColumn(name = \"pushTask_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"pushTask_key\", referencedColumnName = \"id\"))\n     private Set<String> actionsClassNames = new HashSet<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pushTask\")"},{"sha":"df2f62c52c8b69138be3daf5e985654d87c3fcae","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTaskAnyFilter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -31,7 +31,7 @@\n \n @Entity\n @Table(name = JPAPushTaskAnyFilter.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"pushTask_key\", \"anyType_key\" }))\n+        @UniqueConstraint(columnNames = { \"pushTask_id\", \"anyType_id\" }))\n public class JPAPushTaskAnyFilter extends AbstractGeneratedKeyEntity implements PushTaskAnyFilter {\n \n     private static final long serialVersionUID = 3517381731849788407L;"},{"sha":"dbb2fab4e4a23bc507a9fff9d85ee3bd534c2ff7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPADynRoleMembership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -43,9 +43,9 @@ public class JPADynRoleMembership extends AbstractUDynMembership implements DynR\n \n     @ManyToMany\n     @JoinTable(name = TABLE + \"_User\", joinColumns =\n-            @JoinColumn(name = \"dynRoleMembership_key\"),\n+            @JoinColumn(name = \"dynRoleMembership_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"user_key\"))\n+            @JoinColumn(name = \"user_id\"))\n     private List<JPAUser> users = new ArrayList<>();\n \n     @Override"},{"sha":"53db0d9acf0faf4b351968fce17c850fb215375b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUDynGroupMembership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -43,9 +43,9 @@ public class JPAUDynGroupMembership extends AbstractUDynMembership implements UD\n \n     @ManyToMany\n     @JoinTable(name = TABLE + \"_User\", joinColumns =\n-            @JoinColumn(name = \"uDynGroupMembership_key\"),\n+            @JoinColumn(name = \"uDynGroupMembership_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"user_key\"))\n+            @JoinColumn(name = \"user_id\"))\n     private List<JPAUser> users = new ArrayList<>();\n \n     @Override"},{"sha":"866537ed9fd63a10fc4c2702301cc07a17d2d46c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUMembership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -39,11 +39,11 @@ public class JPAUMembership extends AbstractGeneratedKeyEntity implements UMembe\n     public static final String TABLE = \"UMembership\";\n \n     @ManyToOne\n-    @Column(name = \"user_key\")\n+    @Column(name = \"user_id\")\n     private JPAUser leftEnd;\n \n     @ManyToOne\n-    @Column(name = \"group_key\")\n+    @Column(name = \"group_id\")\n     private JPAGroup rightEnd;\n \n     @Override"},{"sha":"c118c0fab0af54c34ad8e253246d65b84279884a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUPlainAttrUniqueValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -42,7 +42,7 @@ public class JPAUPlainAttrUniqueValue extends AbstractPlainAttrValue implements\n     private JPAUPlainAttr attribute;\n \n     @ManyToOne(optional = false)\n-    @JoinColumn(name = \"schema_key\")\n+    @JoinColumn(name = \"schema_id\")\n     private JPAPlainSchema schema;\n \n     @Override"},{"sha":"931b4e64e230ce8c07ed2db9476662c24ad9069a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAURelationship.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -35,7 +35,7 @@\n \n @Entity\n @Table(name = JPAURelationship.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"type_key\", \"user_key\", \"anyObject_key\" }))\n+        @UniqueConstraint(columnNames = { \"type_id\", \"user_id\", \"anyObject_id\" }))\n public class JPAURelationship extends AbstractGeneratedKeyEntity implements URelationship {\n \n     private static final long serialVersionUID = 2778494939240083204L;\n@@ -46,11 +46,11 @@ public class JPAURelationship extends AbstractGeneratedKeyEntity implements URel\n     private JPARelationshipType type;\n \n     @ManyToOne\n-    @Column(name = \"user_key\")\n+    @Column(name = \"user_id\")\n     private JPAUser leftEnd;\n \n     @ManyToOne\n-    @Column(name = \"anyObject_key\")\n+    @Column(name = \"anyObject_id\")\n     private JPAAnyObject rightEnd;\n \n     @Override"},{"sha":"a0ecf00001a0ac305fc897e5964e9ba6294c15a1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -87,9 +87,9 @@ public class JPAUser extends AbstractAny<UPlainAttr> implements User {\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"user_key\"),\n+            @JoinColumn(name = \"user_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"role_key\"))\n+            @JoinColumn(name = \"role_id\"))\n     private List<JPARole> roles = new ArrayList<>();\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n@@ -114,7 +114,7 @@ public class JPAUser extends AbstractAny<UPlainAttr> implements User {\n     @ElementCollection\n     @Column(name = \"passwordHistoryValue\")\n     @CollectionTable(name = \"SyncopeUser_passwordHistory\", joinColumns =\n-            @JoinColumn(name = \"user_key\", referencedColumnName = \"key\"))\n+            @JoinColumn(name = \"user_id\", referencedColumnName = \"id\"))\n     private List<String> passwordHistory = new ArrayList<>();\n \n     /**\n@@ -159,17 +159,17 @@ public class JPAUser extends AbstractAny<UPlainAttr> implements User {\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"user_key\"),\n+            @JoinColumn(name = \"user_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"resource_key\"))\n+            @JoinColumn(name = \"resource_id\"))\n     @Valid\n     private List<JPAExternalResource> resources = new ArrayList<>();\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-            @JoinColumn(name = \"user_key\"),\n+            @JoinColumn(name = \"user_id\"),\n             inverseJoinColumns =\n-            @JoinColumn(name = \"anyTypeClass_key\"))\n+            @JoinColumn(name = \"anyTypeClass_id\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"leftEnd\")"},{"sha":"da39ce30cca76ad6c2498ae1f78f191c1ae59451","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-oracle.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -44,7 +44,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>    \n@@ -56,7 +56,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n@@ -68,7 +68,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n@@ -80,7 +80,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>"},{"sha":"8bcb833c0bc9d4ce6c261e32c89c8b86b406a5cc","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-sqlserver.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -44,7 +44,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>    \n@@ -56,7 +56,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n@@ -68,7 +68,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n@@ -80,7 +80,7 @@ under the License.\n         <column-name>stringValue</column-name>\n         <column-name>doubleValue</column-name>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>"},{"sha":"c0033a52375e2f5b3f8645a522bc6601e3b6f671","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm.xml","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -40,95 +40,95 @@ under the License.\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>dateValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>stringValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>doubleValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>    \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrUniqueValue\">\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>dateValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>stringValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>doubleValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrUniqueValue\">\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>dateValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>stringValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>doubleValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>dateValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>stringValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>doubleValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n       <unique-constraint>\n         <column-name>longValue</column-name>\n-        <column-name>schema_key</column-name>\n+        <column-name>schema_id</column-name>\n       </unique-constraint>\n     </table>\n   </entity>  "},{"sha":"a497a36095b2960df03119885993cc7335292cef","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":91,"deletions":91,"changes":182,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -18,130 +18,130 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <Realm key=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n+  <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n \n-  <SyncopeConf key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n+  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n \n-  <PlainSchema key=\"password.cipher.algorithm\" type=\"String\"\n+  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"password.cipher.algorithm\"/>\n-  <CPlainAttrValue key=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n-                   attribute_key=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n+  <CPlainAttr id=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"password.cipher.algorithm\"/>\n+  <CPlainAttrValue id=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n+                   attribute_id=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n \n   <!-- notificationjob.cronExpression:\n   + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n   + provided as empty string: NotificationJob disabled\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <PlainSchema key=\"notificationjob.cronExpression\" type=\"String\"\n+  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"notificationjob.cronExpression\"/>\n-  <CPlainAttrValue key=\"4828ea70-d151-4c16-b344-2d07b1956bee\"\n-                   attribute_key=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\" stringValue=\"\"/>\n+  <CPlainAttr id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notificationjob.cronExpression\"/>\n+  <CPlainAttrValue id=\"4828ea70-d151-4c16-b344-2d07b1956bee\"\n+                   attribute_id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\" stringValue=\"\"/>\n   \n-  <PlainSchema key=\"notification.maxRetries\" type=\"Long\"\n+  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"notification.maxRetries\"/>\n-  <CPlainAttrValue key=\"010e2bdc-0094-4918-bac3-d0d5ea17b54a\"\n-                   attribute_key=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\" longValue=\"3\"/>\n+  <CPlainAttr id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notification.maxRetries\"/>\n+  <CPlainAttrValue id=\"010e2bdc-0094-4918-bac3-d0d5ea17b54a\"\n+                   attribute_id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\" longValue=\"3\"/>\n \n-  <PlainSchema key=\"token.length\" type=\"Long\"\n+  <PlainSchema id=\"token.length\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"token.length\"/>\n-  <CPlainAttrValue key=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n-                   attribute_key=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n+  <CPlainAttr id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.length\"/>\n+  <CPlainAttrValue id=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n+                   attribute_id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n \n-  <PlainSchema key=\"token.expireTime\" type=\"Long\"\n+  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"token.expireTime\"/>\n-  <CPlainAttrValue key=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n-                   attribute_key=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n+  <CPlainAttr id=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.expireTime\"/>\n+  <CPlainAttrValue id=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n+                   attribute_id=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n \n-  <PlainSchema key=\"selfRegistration.allowed\" type=\"Boolean\"\n+  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"selfRegistration.allowed\"/>\n-  <CPlainAttrValue key=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n-                   attribute_key=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"selfRegistration.allowed\"/>\n+  <CPlainAttrValue id=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n+                   attribute_id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"passwordReset.allowed\" type=\"Boolean\"\n+  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"passwordReset.allowed\"/>\n-  <CPlainAttrValue key=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n-                   attribute_key=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.allowed\"/>\n+  <CPlainAttrValue id=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n+                   attribute_id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"passwordReset.securityQuestion\" type=\"Boolean\"\n+  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"passwordReset.securityQuestion\"/>\n-  <CPlainAttrValue key=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n-                   attribute_key=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n-\n-  <PlainSchema key=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"authentication.statuses\"/>\n-  <CPlainAttrValue key=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n-                   attribute_key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n-  <CPlainAttrValue key=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n-                   attribute_key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n+  <CPlainAttr id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.securityQuestion\"/>\n+  <CPlainAttrValue id=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n+                   attribute_id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n+\n+  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CPlainAttr id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.statuses\"/>\n+  <CPlainAttrValue id=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n+                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n+  <CPlainAttrValue id=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n+                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n \n   <!-- Save user login date upon successful authentication -->\n-  <PlainSchema key=\"log.lastlogindate\" type=\"Boolean\"\n+  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"log.lastlogindate\"/>\n-  <CPlainAttrValue key=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n-                   attribute_key=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"log.lastlogindate\"/>\n+  <CPlainAttrValue id=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n+                   attribute_id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"tasks.interruptMaxRetries\" type=\"Long\"\n+  <PlainSchema id=\"tasks.interruptMaxRetries\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"tasks.interruptMaxRetries\"/>\n-  <CPlainAttrValue key=\"5dc3f4e3-ff9f-4558-a9ac-15336b63a2ad\"\n-                   attribute_key=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\" longValue=\"20\"/>\n+  <CPlainAttr id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"tasks.interruptMaxRetries\"/>\n+  <CPlainAttrValue id=\"5dc3f4e3-ff9f-4558-a9ac-15336b63a2ad\"\n+                   attribute_id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\" longValue=\"20\"/>\n   \n   <!-- Return hashed password values when reading users -->\n-  <PlainSchema key=\"return.password.value\" type=\"Boolean\"\n+  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"return.password.value\"/>\n-  <CPlainAttrValue key=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n-                   attribute_key=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n+  <CPlainAttr id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n+  <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n+                   attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n   \n   <!-- For usage with admin console -->\n-  <PlainSchema key=\"admin.user.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.user.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.user.layout\" type=\"String\"\n+  <PlainSchema id=\"self.user.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"admin.group.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.group.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.group.layout\" type=\"String\"\n+  <PlainSchema id=\"self.group.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"admin.membership.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.membership.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.membership.layout\" type=\"String\"\n+  <PlainSchema id=\"self.membership.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n-  <AnyType key=\"USER\" kind=\"USER\"/>\n-  <AnyTypeClass key=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_key=\"USER\" anyTypeClass_key=\"BaseUser\"/>\n+  <AnyType id=\"USER\" kind=\"USER\"/>\n+  <AnyTypeClass id=\"BaseUser\"/>\n+  <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n \n-  <AnyType key=\"GROUP\" kind=\"GROUP\"/>\n-  <AnyTypeClass key=\"BaseGroup\"/>\n-  <AnyType_AnyTypeClass anyType_key=\"GROUP\" anyTypeClass_key=\"BaseGroup\"/>\n+  <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n+  <AnyTypeClass id=\"BaseGroup\"/>\n+  <AnyType_AnyTypeClass anyType_id=\"GROUP\" anyTypeClass_id=\"BaseGroup\"/>\n         \n   <!-- Actual plain schemas -->\n-  <PlainSchema key=\"email\" type=\"String\" anyTypeClass_key=\"BaseUser\"\n+  <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n                validatorClass=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n   \n   <!-- Password reset notifications -->\n-  <MailTemplate key=\"requestPasswordReset\"\n+  <MailTemplate id=\"requestPasswordReset\"\n                 textTemplate=\"Hi,\n a password reset was request for ${user.getUsername()}.\n \n@@ -165,7 +165,7 @@ a password reset was request for ${user.getUsername()}.&lt;/p&gt;\n &lt;p&gt;Best regards.&lt;/p&gt;\n &lt;/body&gt;\n &lt;/html&gt;\"/>\n-  <MailTemplate key=\"confirmPasswordReset\"\n+  <MailTemplate id=\"confirmPasswordReset\"\n                 textTemplate=\"Hi,\n we are happy to inform you that the password request was execute successfully for your account.\n \n@@ -179,21 +179,21 @@ we are happy to inform you that the password request was execute successfully fo\n &lt;/body&gt;\n &lt;/html&gt;\"/>\n \n-  <Notification key=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_key=\"requestPasswordReset\" \n+  <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <AnyAbout key=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_key=\"USER\" notification_key=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" filter=\"token!=$null\"/>\n-  <Notification_events notification_key=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n+  <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" filter=\"token!=$null\"/>\n+  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n-  <Notification key=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_key=\"confirmPasswordReset\" \n+  <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_key=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n \n-  <ReportTemplate key=\"empty\"/>  \n+  <ReportTemplate id=\"empty\"/>  \n \n-  <Report key=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_key=\"empty\"/>\n-  <ReportletConfInstance key=\"d6c2b475-4860-4eb1-8fde-618299c2a97c\" report_key=\"c3520ad9-179f-49e7-b315-d684d216dd97\" \n-                         serializedInstance='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+  <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n+  <ReportletConfInstance id=\"d6c2b475-4860-4eb1-8fde-618299c2a97c\" report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" \n+                         serializedInstance='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"id\",\"username\",\"groupName\"]}'/>\n \n </dataset>"},{"sha":"4d2ffcb80ac747b637af3c0bb30f0f619c3a2f99","filename":"core/persistence-jpa/src/main/resources/indexes.xml","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -45,24 +45,24 @@ under the License.\n   <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n   <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n \n-  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_key)</entry>\n-  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_key)</entry>\n-  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_key)</entry>\n-  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_key)</entry>\n+  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n+  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n+  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n+  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n \n-  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_key)</entry>\n-  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_key)</entry>\n-  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_key)</entry>\n-  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_key)</entry>\n+  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n+  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n+  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n+  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n \n-  <entry key=\"UPlainAttrValue_attrIndex\">CREATE INDEX UPlainAttrValue_attrIndex on UPlainAttrValue(attribute_key)</entry>\n-  <entry key=\"GPlainAttrValue_attrIndex\">CREATE INDEX GPlainAttrValue_attrIndex on GPlainAttrValue(attribute_key)</entry>\n-  <entry key=\"APlainAttrValue_attrIndex\">CREATE INDEX APlainAttrValue_attrIndex on APlainAttrValue(attribute_key)</entry>\n-  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_key)</entry>\n+  <entry key=\"UPlainAttrValue_attrIndex\">CREATE INDEX UPlainAttrValue_attrIndex on UPlainAttrValue(attribute_id)</entry>\n+  <entry key=\"GPlainAttrValue_attrIndex\">CREATE INDEX GPlainAttrValue_attrIndex on GPlainAttrValue(attribute_id)</entry>\n+  <entry key=\"APlainAttrValue_attrIndex\">CREATE INDEX APlainAttrValue_attrIndex on APlainAttrValue(attribute_id)</entry>\n+  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n \n-  <entry key=\"UPlainAttr_owner_key_index\">CREATE INDEX UPlainAttr_owner_key_index on UPlainAttr(owner_key)</entry>\n-  <entry key=\"GPlainAttr_owner_key_index\">CREATE INDEX GPlainAttr_owner_key_index on GPlainAttr(owner_key)</entry>\n-  <entry key=\"APlainAttr_owner_key_index\">CREATE INDEX APlainAttr_owner_key_index on APlainAttr(owner_key)</entry>\n+  <entry key=\"UPlainAttr_owner_idindex\">CREATE INDEX UPlainAttr_owner_idindex on UPlainAttr(owner_id)</entry>\n+  <entry key=\"GPlainAttr_owner_idindex\">CREATE INDEX GPlainAttr_owner_idindex on GPlainAttr(owner_id)</entry>\n+  <entry key=\"APlainAttr_owner_idindex\">CREATE INDEX APlainAttr_owner_idindex on APlainAttr(owner_id)</entry>\n \n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n </properties>"},{"sha":"59ec33423c3ab647b8f9de08d8e808b9f12cb376","filename":"core/persistence-jpa/src/main/resources/views.xml","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -25,225 +25,225 @@ under the License.\n   <entry key=\"user_search\">\n     CREATE VIEW user_search AS\n  \n-    SELECT u.key as any_key, u.* FROM SyncopeUser u\n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n   </entry>\n   <entry key=\"user_search_unique_attr\">\n     CREATE VIEW user_search_unique_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"user_search_attr\">\n     CREATE VIEW user_search_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM UPlainAttrValue uav, UPlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"user_search_null_attr\">\n     CREATE VIEW user_search_null_attr AS\n \n-    SELECT u.key AS any_key,\n-    PlainSchema.key AS schema_key,\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n     NULL AS booleanvalue,\n     NULL AS datevalue,\n     NULL AS doublevalue,\n     NULL AS longvalue,\n     NULL AS stringvalue\n     FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.key = ua.schema_key AND ua.owner_key = u.key)\n-    WHERE ua.key IS NULL\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n   </entry>\n   <entry key=\"user_search_urelationship\">\n     CREATE VIEW user_search_urelationship AS\n \n-    SELECT m.user_key AS any_key, m.anyObject_key AS right_any_key, m.type_key AS type\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n     FROM URelationship m\n   </entry>\n   <entry key=\"user_search_umembership\">\n     CREATE VIEW user_search_umembership AS\n \n-    SELECT m.user_key AS any_key, g.key AS group_key, g.name AS group_name\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n     FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_key = g.key\n+    WHERE m.group_id = g.id\n   </entry>\n   <entry key=\"user_search_udyngmemb\">\n     CREATE VIEW user_search_udyngmemb AS\n \n-    SELECT ds.user_key AS any_key, d.group_key AS group_key\n+    SELECT ds.user_id AS any_id, d.group_id AS group_id\n     FROM UDynGroupMembership d, UDynGroupMembership_User ds\n-    WHERE d.key = ds.uDynGroupMembership_key\n+    WHERE d.id = ds.uDynGroupMembership_id\n   </entry>\n   <entry key=\"user_search_role\">\n     CREATE VIEW user_search_role AS\n \n-    SELECT ss.user_key AS any_key, ss.role_key AS role_key\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n     FROM SyncopeUser_SyncopeRole ss\n   </entry>\n   <entry key=\"user_search_dynrmemb\">\n     CREATE VIEW user_search_dynrmemb AS\n \n-    SELECT ds.user_key AS any_key, d.role_key AS role_key\n+    SELECT ds.user_id AS any_id, d.role_id AS role_id\n     FROM DynRoleMembership d, DynRoleMembership_User ds\n-    WHERE d.key = ds.dynRoleMembership_key\n+    WHERE d.id = ds.dynRoleMembership_id\n   </entry>\n   <entry key=\"user_search_resource\">\n     CREATE VIEW user_search_resource AS\n \n-    SELECT st.user_key AS any_key, st.resource_key AS resource_key\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n     FROM SyncopeUser_ExternalResource st\n   </entry>\n   <entry key=\"user_search_group_res\">\n     CREATE VIEW user_search_group_res AS\n \n-    SELECT m.user_key AS any_key, st.resource_key AS resource_key\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n     FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_key = r.key AND st.group_key = r.key\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n   </entry>\n \n   <!-- anyObject -->\n   <entry key=\"anyObject_search\">\n     CREATE VIEW anyObject_search AS\n  \n-    SELECT a.key as any_key, a.* FROM AnyObject a\n+    SELECT a.id as any_id, a.* FROM AnyObject a\n   </entry>\n   <entry key=\"anyObject_search_unique_attr\">\n     CREATE VIEW anyObject_search_unique_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM APlainAttrUniqueValue uav, APlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"anyObject_search_attr\">\n     CREATE VIEW anyObject_search_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM APlainAttrValue uav, APlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"anyObject_search_null_attr\">\n     CREATE VIEW anyObject_search_null_attr AS\n \n-    SELECT u.key AS any_key,\n-    PlainSchema.key AS schema_key,\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n     NULL AS booleanvalue,\n     NULL AS datevalue,\n     NULL AS doublevalue,\n     NULL AS longvalue,\n     NULL AS stringvalue\n     FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.key = ua.schema_key AND ua.owner_key = u.key)\n-    WHERE ua.key IS NULL\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n   </entry>\n   <entry key=\"anyObject_search_arelationship\">\n     CREATE VIEW anyObject_search_arelationship AS\n \n-    SELECT m.left_anyObject_key AS any_key, m.right_anyObject_key AS right_any_key, m.type_key AS type\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n     FROM ARelationship m\n   </entry>\n   <entry key=\"anyObject_search_amembership\">\n     CREATE VIEW anyObject_search_amembership AS\n \n-    SELECT m.anyObject_key AS any_key, g.key AS group_key, g.name AS group_name\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n     FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_key = g.key\n+    WHERE m.group_id = g.id\n   </entry>\n   <entry key=\"anyObject_search_adyngmemb\">\n     CREATE VIEW anyObject_search_adyngmemb AS\n \n-    SELECT ds.anyObject_key AS any_key, d.group_key AS group_key\n+    SELECT ds.anyObject_id AS any_id, d.group_id AS group_id\n     FROM ADynGroupMembership d, ADynGroupMembership_AnyObject ds\n-    WHERE d.key = ds.aDynGroupMembership_key\n+    WHERE d.id = ds.aDynGroupMembership_id\n   </entry>\n   <entry key=\"anyObject_search_resource\">\n     CREATE VIEW anyObject_search_resource AS\n \n-    SELECT st.anyObject_key AS any_key, st.resource_key AS resource_key\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n     FROM AnyObject_ExternalResource st\n   </entry>\n   <entry key=\"anyObject_search_group_res\">\n     CREATE VIEW anyObject_search_group_res AS\n \n-    SELECT m.anyObject_key AS any_key, st.resource_key AS resource_key\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n     FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_key = r.key AND st.group_key = r.key\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n   </entry>\n \n   <!-- group -->\n   <entry key=\"group_search\">\n     CREATE VIEW group_search AS\n  \n-    SELECT r.key as any_key, r.* FROM SyncopeGroup r\n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n   </entry>\n   <entry key=\"group_search_unique_attr\">\n     CREATE VIEW group_search_unique_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"group_search_attr\">\n     CREATE VIEW group_search_attr AS\n \n-    SELECT ua.owner_key AS any_key,\n-    ua.schema_key AS schema_key,\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n     uav.doublevalue AS doublevalue,\n     uav.longvalue AS longvalue,\n     uav.stringvalue AS stringvalue\n     FROM GPlainAttrValue uav, GPlainAttr ua\n-    WHERE uav.attribute_key = ua.key\n+    WHERE uav.attribute_id = ua.id\n   </entry>\n   <entry key=\"group_search_null_attr\">\n     CREATE VIEW group_search_null_attr AS\n \n-    SELECT u.key AS any_key,\n-    PlainSchema.key AS schema_key,\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n     NULL AS booleanvalue,\n     NULL AS datevalue,\n     NULL AS doublevalue,\n     NULL AS longvalue,\n     NULL AS stringvalue\n     FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.key = ua.schema_key AND ua.owner_key = u.key)\n-    WHERE ua.key IS NULL\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n   </entry>\n   <entry key=\"group_search_resource\">\n     CREATE VIEW group_search_resource AS\n \n-    SELECT st.group_key AS any_key, st.resource_key AS resource_key\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n     FROM SyncopeGroup_ExternalResource st\n   </entry>\n "},{"sha":"09e3b5a0b8aa4686aeba900a86d409a66e4bf033","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -302,7 +302,7 @@ public void searchByUsernameAndKey() {\n         usernameLeafCond.setExpression(\"%ini\");\n \n         AnyCond idRightCond = new AnyCond(AnyCond.Type.LT);\n-        idRightCond.setSchema(\"key\");\n+        idRightCond.setSchema(\"id\");\n         idRightCond.setExpression(\"2\");\n \n         SearchCond searchCondition = SearchCond.getAndCond(\n@@ -322,13 +322,13 @@ public void searchByGroupNameAndKey() {\n         groupNameLeafCond.setSchema(\"name\");\n         groupNameLeafCond.setExpression(\"root\");\n \n-        AnyCond keyRightCond = new AnyCond(AnyCond.Type.EQ);\n-        keyRightCond.setSchema(\"key\");\n-        keyRightCond.setExpression(\"37d15e4c-cdc1-460b-a591-8505c8133806\");\n+        AnyCond idRightCond = new AnyCond(AnyCond.Type.EQ);\n+        idRightCond.setSchema(\"id\");\n+        idRightCond.setExpression(\"37d15e4c-cdc1-460b-a591-8505c8133806\");\n \n         SearchCond searchCondition = SearchCond.getAndCond(\n                 SearchCond.getLeafCond(groupNameLeafCond),\n-                SearchCond.getLeafCond(keyRightCond));\n+                SearchCond.getLeafCond(idRightCond));\n \n         assertTrue(searchCondition.isValid());\n \n@@ -361,11 +361,11 @@ public void searchByUsernameAndFullname() {\n \n     @Test\n     public void searchByKey() {\n-        AnyCond keyLeafCond = new AnyCond(AnyCond.Type.EQ);\n-        keyLeafCond.setSchema(\"key\");\n-        keyLeafCond.setExpression(\"74cd8ece-715a-44a4-a736-e17b46c4e7e6\");\n+        AnyCond idLeafCond = new AnyCond(AnyCond.Type.EQ);\n+        idLeafCond.setSchema(\"id\");\n+        idLeafCond.setExpression(\"74cd8ece-715a-44a4-a736-e17b46c4e7e6\");\n \n-        SearchCond searchCondition = SearchCond.getLeafCond(keyLeafCond);\n+        SearchCond searchCondition = SearchCond.getLeafCond(idLeafCond);\n         assertTrue(searchCondition.isValid());\n \n         List<User> users = searchDAO.search(searchCondition, AnyTypeKind.USER);\n@@ -547,7 +547,7 @@ public boolean evaluate(final User user) {\n     @Test\n     public void issue242() {\n         AnyCond cond = new AnyCond(AttributeCond.Type.LIKE);\n-        cond.setSchema(\"key\");\n+        cond.setSchema(\"id\");\n         cond.setExpression(\"test%\");\n \n         SearchCond searchCondition = SearchCond.getLeafCond(cond);"},{"sha":"0a0a73ec50003c87e9c428461feac46d3327f9a6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DomainTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDomainTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDomainTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDomainTest.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -79,10 +79,10 @@ public void delete() {\n         Domain actual = domainDAO.save(domain);\n         assertNotNull(actual);\n \n-        String key = actual.getKey();\n-        assertNotNull(domainDAO.find(key));\n+        String id = actual.getKey();\n+        assertNotNull(domainDAO.find(id));\n \n-        domainDAO.delete(key);\n-        assertNull(domainDAO.find(key));\n+        domainDAO.delete(id);\n+        assertNull(domainDAO.find(id));\n     }\n }"},{"sha":"d8d853a5d3b6971535d04800df4d129d8e84950e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RealmTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -171,10 +171,10 @@ public void delete() {\n         Realm actual = realmDAO.save(realm);\n         assertNotNull(actual);\n \n-        String key = actual.getKey();\n-        assertNotNull(realmDAO.find(key));\n+        String id = actual.getKey();\n+        assertNotNull(realmDAO.find(id));\n \n-        realmDAO.delete(key);\n-        assertNull(realmDAO.find(key));\n+        realmDAO.delete(id);\n+        assertNull(realmDAO.find(id));\n     }\n }"},{"sha":"ca006efb0e4b4038b3cff705b407a600aaaa16f8","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":649,"deletions":649,"changes":1298,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3"},{"sha":"cd88c6e2733c8f7ffda1bc521f8d71234c2566e3","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":80,"deletions":80,"changes":160,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -18,109 +18,109 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <Realm key=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n+  <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n \n-  <SyncopeConf key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n+  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n \n-  <PlainSchema key=\"password.cipher.algorithm\" type=\"String\"\n+  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"password.cipher.algorithm\"/>\n-  <CPlainAttrValue key=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n-                   attribute_key=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n+  <CPlainAttr id=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"password.cipher.algorithm\"/>\n+  <CPlainAttrValue id=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n+                   attribute_id=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n \n-  <PlainSchema key=\"token.length\" type=\"Long\"\n+  <PlainSchema id=\"token.length\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"token.length\"/>\n-  <CPlainAttrValue key=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n-                   attribute_key=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n+  <CPlainAttr id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.length\"/>\n+  <CPlainAttrValue id=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n+                   attribute_id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n \n-  <PlainSchema key=\"token.expireTime\" type=\"Long\"\n+  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"token.expireTime\"/>\n-  <CPlainAttrValue key=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n-                   attribute_key=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n+  <CPlainAttr id=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.expireTime\"/>\n+  <CPlainAttrValue id=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n+                   attribute_id=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n \n-  <PlainSchema key=\"selfRegistration.allowed\" type=\"Boolean\"\n+  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"selfRegistration.allowed\"/>\n-  <CPlainAttrValue key=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n-                   attribute_key=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"selfRegistration.allowed\"/>\n+  <CPlainAttrValue id=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n+                   attribute_id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"passwordReset.allowed\" type=\"Boolean\"\n+  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"passwordReset.allowed\"/>\n-  <CPlainAttrValue key=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n-                   attribute_key=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.allowed\"/>\n+  <CPlainAttrValue id=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n+                   attribute_id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"passwordReset.securityQuestion\" type=\"Boolean\"\n+  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"passwordReset.securityQuestion\"/>\n-  <CPlainAttrValue key=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n-                   attribute_key=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n-\n-  <PlainSchema key=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"authentication.statuses\"/>\n-  <CPlainAttrValue key=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n-                   attribute_key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n-  <CPlainAttrValue key=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n-                   attribute_key=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n+  <CPlainAttr id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.securityQuestion\"/>\n+  <CPlainAttrValue id=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n+                   attribute_id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n+\n+  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CPlainAttr id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.statuses\"/>\n+  <CPlainAttrValue id=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n+                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n+  <CPlainAttrValue id=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n+                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n \n   <!-- Save user login date upon successful authentication -->\n-  <PlainSchema key=\"log.lastlogindate\" type=\"Boolean\"\n+  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"log.lastlogindate\"/>\n-  <CPlainAttrValue key=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n-                   attribute_key=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n+  <CPlainAttr id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"log.lastlogindate\"/>\n+  <CPlainAttrValue id=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n+                   attribute_id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n \n-  <PlainSchema key=\"tasks.interruptMaxRetries\" type=\"Long\"\n+  <PlainSchema id=\"tasks.interruptMaxRetries\" type=\"Long\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"tasks.interruptMaxRetries\"/>\n-  <CPlainAttrValue key=\"5dc3f4e3-ff9f-4558-a9ac-15336b63a2ad\"\n-                   attribute_key=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\" longValue=\"20\"/>\n+  <CPlainAttr id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"tasks.interruptMaxRetries\"/>\n+  <CPlainAttrValue id=\"5dc3f4e3-ff9f-4558-a9ac-15336b63a2ad\"\n+                   attribute_id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\" longValue=\"20\"/>\n   \n   <!-- Return hashed password values when reading users -->\n-  <PlainSchema key=\"return.password.value\" type=\"Boolean\"\n+  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr key=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n-              owner_key=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_key=\"return.password.value\"/>\n-  <CPlainAttrValue key=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n-                   attribute_key=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n+  <CPlainAttr id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n+              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n+  <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n+                   attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n   \n-  <AnyType key=\"USER\" kind=\"USER\"/>\n-  <AnyTypeClass key=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_key=\"USER\" anyTypeClass_key=\"BaseUser\"/>\n+  <AnyType id=\"USER\" kind=\"USER\"/>\n+  <AnyTypeClass id=\"BaseUser\"/>\n+  <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n \n-  <AnyType key=\"GROUP\" kind=\"GROUP\"/>\n+  <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n   \n   <!-- For usage with admin console -->\n-  <PlainSchema key=\"admin.user.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.user.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.user.layout\" type=\"String\"\n+  <PlainSchema id=\"self.user.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"admin.group.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.group.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.group.layout\" type=\"String\"\n+  <PlainSchema id=\"self.group.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"admin.membership.layout\" type=\"String\"\n+  <PlainSchema id=\"admin.membership.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema key=\"self.membership.layout\" type=\"String\"\n+  <PlainSchema id=\"self.membership.layout\" type=\"String\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n         \n-  <PlainSchema key=\"email\" type=\"String\" anyTypeClass_key=\"BaseUser\"\n+  <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n                validatorClass=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n   \n   <!-- Password reset notifications -->\n-  <MailTemplate key=\"requestPasswordReset\"\n+  <MailTemplate id=\"requestPasswordReset\"\n                 textTemplate=\"Hi,\n a password reset was request for ${user.getUsername()}.\n \n@@ -144,7 +144,7 @@ a password reset was request for ${user.getUsername()}.&lt;/p&gt;\n &lt;p&gt;Best regards.&lt;/p&gt;\n &lt;/body&gt;\n &lt;/html&gt;\"/>\n-  <MailTemplate key=\"confirmPasswordReset\"\n+  <MailTemplate id=\"confirmPasswordReset\"\n                 textTemplate=\"Hi,\n we are happy to inform you that the password request was execute successfully for your account.\n \n@@ -158,25 +158,25 @@ we are happy to inform you that the password request was execute successfully fo\n &lt;/body&gt;\n &lt;/html&gt;\"/>\n \n-  <Notification key=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_key=\"requestPasswordReset\" \n+  <Notification id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <AnyAbout key=\"0d4e37a1-a4f4-4865-afcb-4be01da3da53\" anyType_key=\"USER\" notification_key=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" filter=\"token!=$null\"/>\n-  <Notification_events notification_key=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n+  <AnyAbout id=\"0d4e37a1-a4f4-4865-afcb-4be01da3da53\" anyType_id=\"USER\" notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" filter=\"token!=$null\"/>\n+  <Notification_events notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n-  <Notification key=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_key=\"confirmPasswordReset\" \n+  <Notification id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_key=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+  <Notification_events notification_id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n \n-  <ConnInstance key=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"LDAP\"\n+  <ConnInstance id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"LDAP\"\n                 location=\"${connid.location}\"\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"truemaintainLdapGroupMembership\"]}]'/>\n-  <ConnInstance_capabilities connInstance_key=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"CREATE\"/>\n-  <ConnInstance_capabilities connInstance_key=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"UPDATE\"/>\n-  <ConnInstance_capabilities connInstance_key=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_key=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"SEARCH\"/>\n+  <ConnInstance_capabilities connInstance_id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities connInstance_id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities connInstance_id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" capability=\"SEARCH\"/>\n   \n </dataset>"},{"sha":"18d9ce7c43d46050ff6de2fb92600060adff06fc","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/init/CamelRouteLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -178,7 +178,7 @@ private void loadRoutes(\n                     String routeId = ((Element) routeElement).getAttribute(\"id\");\n \n                     jdbcTemplate.update(\n-                            String.format(\"INSERT INTO %s(KEY, ANYTYPEKIND, CONTENT) VALUES (?, ?, ?)\",\n+                            String.format(\"INSERT INTO %s(ID, ANYTYPEKIND, CONTENT) VALUES (?, ?, ?)\",\n                                     CamelRoute.class.getSimpleName()),\n                             new Object[] { routeId, anyTypeKind.name(), routeContent });\n                     LOG.info(\"[{}] Route successfully loaded: {}\", domain, routeId);"},{"sha":"af261a46681272d522c41c6cb6288efcb3b059ca","filename":"fit/core-reference/pom.xml","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -374,7 +374,7 @@ under the License.\n         <dependency>\n           <groupId>org.postgresql</groupId>\n           <artifactId>postgresql</artifactId>\n-          <version>9.4-1201-jdbc41</version>\n+          <version>9.4.1208.jre7</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n@@ -410,7 +410,7 @@ under the License.\n         <dependency>\n           <groupId>mysql</groupId>\n           <artifactId>mysql-connector-java</artifactId>\n-          <version>5.1.36</version>\n+          <version>5.1.38</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n@@ -532,13 +532,24 @@ under the License.\n             <filtering>true</filtering>\n             <excludes>\n               <exclude>provisioning.properties</exclude>\n+              <exclude>views.xml</exclude>\n             </excludes>\n           </resource>\n           <resource>\n             <directory>src/main/resources/sqlserver</directory>\n             <filtering>true</filtering>\n           </resource>\n         </resources>\n+        <!-- Views need to be customized, so the SQL Server-specific views.xml need to be copied to target/test-classes,\n+        e.g. the conf directory, in order to override classpath:views.xml -->\n+        <testResources>\n+          <testResource>\n+            <directory>src/main/resources/sqlserver</directory>\n+            <includes>\n+              <include>views.xml</include>\n+            </includes>            \n+          </testResource>\n+        </testResources>\n       </build>\n     </profile>\n     "},{"sha":"ef6c6662e0a6ec3f7f28b64a5b2ebe6dc946d4ae","filename":"fit/core-reference/src/main/resources/sqlserver/views.xml","status":"added","additions":250,"deletions":0,"changes":250,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -0,0 +1,250 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  <comment>Views</comment>\n+  \n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_udyngmemb\">\n+    CREATE VIEW user_search_udyngmemb AS\n+\n+    SELECT ds.user_id AS any_id, d.group_id AS group_id\n+    FROM UDynGroupMembership d, UDynGroupMembership_User ds\n+    WHERE d.id = ds.uDynGroupMembership_id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_dynrmemb\">\n+    CREATE VIEW user_search_dynrmemb AS\n+\n+    SELECT ds.user_id AS any_id, d.role_id AS role_id\n+    FROM DynRoleMembership d, DynRoleMembership_User ds\n+    WHERE d.id = ds.dynRoleMembership_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_adyngmemb\">\n+    CREATE VIEW anyObject_search_adyngmemb AS\n+\n+    SELECT ds.anyObject_id AS any_id, d.group_id AS group_id\n+    FROM ADynGroupMembership d, ADynGroupMembership_AnyObject ds\n+    WHERE d.id = ds.aDynGroupMembership_id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>"},{"sha":"4922cc87a8fa011585c4f2efe5bf7b2402fc85bc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d745d4341d6770e0a5d1c305d623f6799f872e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=0d745d4341d6770e0a5d1c305d623f6799f872e3","patch":"@@ -88,7 +88,7 @@\n public class PullTaskITCase extends AbstractTaskITCase {\n \n     @BeforeClass\n-    public static void testPullctionsSetup() {\n+    public static void testPullActionsSetup() {\n         PullTaskTO pullTask = taskService.read(PULL_TASK_KEY, true);\n         pullTask.getActionsClassNames().add(TestPullActions.class.getName());\n         taskService.update(pullTask);"}]}