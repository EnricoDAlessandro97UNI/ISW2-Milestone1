{"sha":"87174da318040c3ae9832eb578013b2e7390febe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg3MTc0ZGEzMTgwNDBjM2FlOTgzMmViNTc4MDEzYjJlNzM5MGZlYmU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-06-23T07:56:16Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-06-23T07:56:16Z"},"message":"Merge from 0_5_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246987 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9cd1be9431d399f05c5e46a61829c15fe4e09e9c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9cd1be9431d399f05c5e46a61829c15fe4e09e9c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/87174da318040c3ae9832eb578013b2e7390febe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87174da318040c3ae9832eb578013b2e7390febe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/87174da318040c3ae9832eb578013b2e7390febe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87174da318040c3ae9832eb578013b2e7390febe/comments","author":null,"committer":null,"parents":[{"sha":"d314cc4fa3df1884f14c1542807950c05570686d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d314cc4fa3df1884f14c1542807950c05570686d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d314cc4fa3df1884f14c1542807950c05570686d"}],"stats":{"total":1018,"additions":605,"deletions":413},"files":[{"sha":"9cda81485fef9278fd0335a8446cf8869c15f965","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -168,9 +168,9 @@\n                         <phase>package</phase>\r\n                         <configuration>\r\n                             <target>\r\n-                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.14/bin/apache-tomcat-7.0.14.zip\" \r\n+                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.16/bin/apache-tomcat-7.0.16.zip\" \r\n                                      dest=\"${java.io.tmpdir}\" skipexisting=\"true\"/>\r\n-                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.14.zip\" \r\n+                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.16.zip\" \r\n                                        dest=\"${java.io.tmpdir}\" overwrite=\"false\"/>\r\n                             </target>\r\n                         </configuration>\r\n@@ -220,7 +220,7 @@\n                     <wait>true</wait>\r\n                     <container>\r\n                         <containerId>tomcat7x</containerId>\r\n-                        <home>${java.io.tmpdir}/apache-tomcat-7.0.14</home>\r\n+                        <home>${java.io.tmpdir}/apache-tomcat-7.0.16</home>\r\n                         <log>${cargo.log}</log>\r\n                         <output>${cargo.output}</output>\r\n                         <dependencies>\r"},{"sha":"4981f851f94b1890b719512cec1504073d0ab853","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -188,9 +188,9 @@\n                         <phase>package</phase>\r\n                         <configuration>\r\n                             <target>\r\n-                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.14/bin/apache-tomcat-7.0.14.zip\" \r\n+                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.16/bin/apache-tomcat-7.0.16.zip\" \r\n                                      dest=\"${java.io.tmpdir}\" skipexisting=\"true\"/>\r\n-                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.14.zip\" \r\n+                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.16.zip\" \r\n                                        dest=\"${java.io.tmpdir}\" overwrite=\"false\"/>\r\n                             </target>\r\n                         </configuration>\r\n@@ -240,7 +240,7 @@\n                     <wait>true</wait>\r\n                     <container>\r\n                         <containerId>tomcat7x</containerId>\r\n-                        <home>${java.io.tmpdir}/apache-tomcat-7.0.14</home>\r\n+                        <home>${java.io.tmpdir}/apache-tomcat-7.0.16</home>\r\n                         <log>${cargo.log}</log>\r\n                         <output>${cargo.output}</output>\r\n                         <dependencies>\r"},{"sha":"d3745ac1043a3c3422e4efcb9a94207ca9d81c14","filename":"archetype/src/main/resources/archetype-resources/pom.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -272,10 +272,15 @@\n                         <target>1.6</target>\r\n                     </configuration>\r\n                 </plugin>\r\n+                <plugin>\r\n+                    <groupId>org.apache.maven.plugins</groupId>\r\n+                    <artifactId>maven-resources-plugin</artifactId>\r\n+                    <version>2.5</version>\r\n+                </plugin>\r\n                 <plugin>\r\n                     <groupId>org.apache.maven.plugins</groupId>\r\n                     <artifactId>maven-failsafe-plugin</artifactId>\r\n-                    <version>2.6</version>\r\n+                    <version>2.8</version>\r\n                     <executions>\r\n                         <execution>\r\n                             <goals>\r"},{"sha":"8510d6c82e61e9b9d4f7587b19d8bc7bae4b3ba3","filename":"client/src/main/java/org/syncope/client/search/NodeCond.java","status":"modified","additions":37,"deletions":4,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -21,14 +21,16 @@ public class NodeCond extends AbstractBaseBean {\n     public enum Type {\n \n         LEAF, NOT_LEAF, AND, OR\n-\n     }\n+\n     private Type type;\n \n     private AttributeCond attributeCond;\n \n     private MembershipCond membershipCond;\n \n+    private ResourceCond resourceCond;\n+\n     private NodeCond leftNodeCond;\n \n     private NodeCond rightNodeCond;\n@@ -51,6 +53,15 @@ public static NodeCond getLeafCond(final MembershipCond membershipCond) {\n         return nodeCond;\n     }\n \n+    public static NodeCond getLeafCond(final ResourceCond resourceCond) {\n+        NodeCond nodeCond = new NodeCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        nodeCond.resourceCond = resourceCond;\n+\n+        return nodeCond;\n+    }\n+\n     public static NodeCond getNotLeafCond(final AttributeCond attributeCond) {\n         NodeCond nodeCond = getLeafCond(attributeCond);\n         nodeCond.type = Type.NOT_LEAF;\n@@ -63,6 +74,12 @@ public static NodeCond getNotLeafCond(final MembershipCond membershipCond) {\n         return nodeCond;\n     }\n \n+    public static NodeCond getNotLeafCond(final ResourceCond resourceCond) {\n+        NodeCond nodeCond = getLeafCond(resourceCond);\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n     public static NodeCond getAndCond(final NodeCond leftCond,\n             final NodeCond rightCond) {\n \n@@ -99,10 +116,18 @@ public final MembershipCond getMembershipCond() {\n         return membershipCond;\n     }\n \n+    public final ResourceCond getResourceCond() {\n+        return resourceCond;\n+    }\n+\n     public final void setMembershipCond(final MembershipCond membershipCond) {\n         this.membershipCond = membershipCond;\n     }\n \n+    public void setResourceCond(ResourceCond resourceCond) {\n+        this.resourceCond = resourceCond;\n+    }\n+\n     public final NodeCond getLeftNodeCond() {\n         return leftNodeCond;\n     }\n@@ -135,10 +160,18 @@ public final boolean checkValidity() {\n         switch (type) {\n             case LEAF:\n             case NOT_LEAF:\n-                return (attributeCond != null && membershipCond == null\n+                return (attributeCond != null\n+                        && membershipCond == null\n+                        && resourceCond == null\n                         && attributeCond.checkValidity())\n-                        || (attributeCond == null && membershipCond != null\n-                        && membershipCond.checkValidity());\n+                        || (attributeCond == null\n+                        && membershipCond != null\n+                        && resourceCond == null\n+                        && membershipCond.checkValidity())\n+                        || (attributeCond == null\n+                        && membershipCond == null\n+                        && resourceCond != null\n+                        && resourceCond.checkValidity());\n             case AND:\n             case OR:\n                 return (leftNodeCond == null || rightNodeCond == null)"},{"sha":"e83f65082c17b243788761c925a4a34152f87d1b","filename":"client/src/main/java/org/syncope/client/search/ResourceCond.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -0,0 +1,41 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.client.search;\n+\n+import org.syncope.client.AbstractBaseBean;\n+\n+/**\n+ * Search condition to be applied when searching for associated resources.\n+ */\n+public class ResourceCond extends AbstractBaseBean {\n+\n+    private String name;\n+\n+    public ResourceCond() {\n+        super();\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public final boolean checkValidity() {\n+        return name != null;\n+    }\n+}"},{"sha":"9cbebebda185225375945803e1f27a04ea533046","filename":"client/src/main/java/org/syncope/types/SourceMappingType.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -19,12 +19,6 @@ public enum SourceMappingType {\n     UserSchema,\n     UserDerivedSchema,\n     UserVirtualSchema,\n-    RoleSchema,\n-    RoleDerivedSchema,\n-    RoleVirtualSchema,\n-    MembershipSchema,\n-    MembershipDerivedSchema,\n-    MembershipVirtualSchema,\n     SyncopeUserId,\n     Password;\n }"},{"sha":"41a63a397f9bf75fd3542e1f98652156d428a69d","filename":"console/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -220,8 +220,8 @@\n                         <phase>package</phase>\n                         <configuration>\n                             <target>\n-                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.14/bin/apache-tomcat-7.0.14.zip\" dest=\"${java.io.tmpdir}\" skipexisting=\"true\" />\n-                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.14.zip\" dest=\"${java.io.tmpdir}\" overwrite=\"false\" />\n+                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.16/bin/apache-tomcat-7.0.16.zip\" dest=\"${java.io.tmpdir}\" skipexisting=\"true\" />\n+                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.16.zip\" dest=\"${java.io.tmpdir}\" overwrite=\"false\" />\n                             </target>\n                         </configuration>\n                         <goals>\n@@ -270,7 +270,7 @@\n                     <wait>true</wait>\n                     <container>\n                         <containerId>tomcat7x</containerId>\n-                        <home>${java.io.tmpdir}/apache-tomcat-7.0.14</home>\n+                        <home>${java.io.tmpdir}/apache-tomcat-7.0.16</home>\n                         <log>${cargo.log}</log>\n                         <output>${cargo.output}</output>\n                         <dependencies>"},{"sha":"9dfca6e80e6cb972829ed72d51f5d95706b6e5a8","filename":"console/src/main/java/org/syncope/console/commons/SearchConditionWrapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -31,7 +31,7 @@ public enum OperationType {\n \n     public enum FilterType {\n \n-        ATTRIBUTE, MEMBERSHIP\n+        ATTRIBUTE, MEMBERSHIP, RESOURCE\n \n     };\n     private boolean notOperator;"},{"sha":"7661fd8ff264dfbcef45de7b929481ade3b44d7e","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":17,"deletions":8,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -43,6 +43,7 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n@@ -170,11 +171,20 @@ public void populateItem(\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n-                        if (!checkDeleteIsForbidden(connectorTO)) {\n-                            restClient.delete(connectorTO.getId());\n-                            info(getString(\"operation_succeded\"));\n-                        } else {\n-                            error(getString(\"delete_error\"));\n+                        try {\n+\n+                            if (!checkDeleteIsForbidden(connectorTO)) {\n+                                restClient.delete(connectorTO.getId());\n+                                info(getString(\"operation_succeded\"));\n+                            } else {\n+                                error(getString(\"delete_error\"));\n+                            }\n+\n+                        } catch (SyncopeClientCompositeErrorException e) {\n+                            error(getString(\"operation_error\"));\n+\n+                            LOG.error(\"While deleting connector \"\n+                                    + connectorTO.getId(), e);\n                         }\n \n                         target.addComponent(container);\n@@ -277,10 +287,9 @@ protected void onUpdate(AjaxRequestTarget target) {\n     public boolean checkDeleteIsForbidden(ConnInstanceTO connectorTO) {\n \n         boolean forbidden = false;\n-        List<ResourceTO> resources = resourceRestClient.getAllResources();\n \n-        for (ResourceTO resourceTO : resources) {\n-            if (resourceTO.getConnectorId() == connectorTO.getId()) {\n+        for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+            if (resourceTO.getConnectorId().equals(connectorTO.getId())) {\n                 forbidden = true;\n             }\n         }"},{"sha":"2a34e0cb612c5b2855deebdd76458df4d4122405","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":4,"deletions":76,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -74,18 +74,6 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private List<String> uVirSchemaAttrNames;\n \n-    private List<String> rSchemaAttrNames;\n-\n-    private List<String> rDerSchemaAttrNames;\n-\n-    private List<String> rVirSchemaAttrNames;\n-\n-    private List<String> mSchemaAttrNames;\n-\n-    private List<String> mDerSchemaAttrNames;\n-\n-    private List<String> mVirSchemaAttrNames;\n-\n     private WebMarkupContainer mappingContainer;\n \n     public ResourceModalPage(final Resources basePage, final ModalWindow window,\n@@ -100,20 +88,6 @@ public ResourceModalPage(final Resources basePage, final ModalWindow window,\n         uVirSchemaAttrNames =\n                 schemaRestClient.getVirtualSchemaNames(\"user\");\n \n-        rSchemaAttrNames =\n-                schemaRestClient.getSchemaNames(\"role\");\n-        rDerSchemaAttrNames =\n-                schemaRestClient.getDerivedSchemaNames(\"role\");\n-        rVirSchemaAttrNames =\n-                schemaRestClient.getVirtualSchemaNames(\"role\");\n-\n-        mSchemaAttrNames =\n-                schemaRestClient.getSchemaNames(\"membership\");\n-        mDerSchemaAttrNames =\n-                schemaRestClient.getDerivedSchemaNames(\"membership\");\n-        mVirSchemaAttrNames =\n-                schemaRestClient.getVirtualSchemaNames(\"membership\");\n-\n         final IModel<List<ConnInstanceTO>> connectors =\n                 new LoadableDetachableModel<List<ConnInstanceTO>>() {\n \n@@ -241,7 +215,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n \n                             @Override\n                             public CharSequence preDecorateScript(\n@@ -279,30 +254,6 @@ public CharSequence preDecorateScript(\n                             schemaAttrChoice.setChoices(uVirSchemaAttrNames);\n                             break;\n \n-                        case RoleSchema:\n-                            schemaAttrChoice.setChoices(rSchemaAttrNames);\n-                            break;\n-\n-                        case RoleDerivedSchema:\n-                            schemaAttrChoice.setChoices(rDerSchemaAttrNames);\n-                            break;\n-\n-                        case RoleVirtualSchema:\n-                            schemaAttrChoice.setChoices(rVirSchemaAttrNames);\n-                            break;\n-\n-                        case MembershipSchema:\n-                            schemaAttrChoice.setChoices(mSchemaAttrNames);\n-                            break;\n-\n-                        case MembershipDerivedSchema:\n-                            schemaAttrChoice.setChoices(mDerSchemaAttrNames);\n-                            break;\n-\n-                        case MembershipVirtualSchema:\n-                            schemaAttrChoice.setChoices(mVirSchemaAttrNames);\n-                            break;\n-\n                         case SyncopeUserId:\n                             schemaAttrChoice.setEnabled(false);\n                             schemaAttrChoice.setRequired(false);\n@@ -332,7 +283,8 @@ public CharSequence preDecorateScript(\n                         setOutputMarkupId(true));\n \n                 item.add(new TextField(\"destAttrName\",\n-                        new PropertyModel(mappingTO, \"destAttrName\")).setRequired(true).\n+                        new PropertyModel(mappingTO, \"destAttrName\")).\n+                        setRequired(true).\n                         setLabel(new Model(getString(\"fieldName\"))).\n                         setOutputMarkupId(true));\n \n@@ -470,30 +422,6 @@ protected List<String> load() {\n                                             result = uVirSchemaAttrNames;\n                                             break;\n \n-                                        case RoleSchema:\n-                                            result = rSchemaAttrNames;\n-                                            break;\n-\n-                                        case RoleDerivedSchema:\n-                                            result = rDerSchemaAttrNames;\n-                                            break;\n-\n-                                        case RoleVirtualSchema:\n-                                            result = rVirSchemaAttrNames;\n-                                            break;\n-\n-                                        case MembershipSchema:\n-                                            result = mSchemaAttrNames;\n-                                            break;\n-\n-                                        case MembershipDerivedSchema:\n-                                            result = mDerSchemaAttrNames;\n-                                            break;\n-\n-                                        case MembershipVirtualSchema:\n-                                            result = mVirSchemaAttrNames;\n-                                            break;\n-\n                                         case SyncopeUserId:\n                                         case Password:\n                                         default:"},{"sha":"e14f0f7b6ccfdd744dad9a84db2bd4803d555451","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -147,14 +147,15 @@ public void populateItem(Item<ICellPopulator<ResourceTO>> cellItem,\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.delete(resourceTO.getName());\n \n+                            restClient.delete(resourceTO.getName());\n                             info(getString(\"operation_succeded\"));\n+\n                         } catch (SyncopeClientCompositeErrorException e) {\n-                            info(getString(\"operation_error\"));\n+                            error(getString(\"operation_error\"));\n \n                             LOG.error(\"While deleting resource \"\n-                                    + resourceTO.getName());\n+                                    + resourceTO.getName(), e);\n                         }\n \n                         target.addComponent(feedbackPanel);"},{"sha":"4ab0a676c25dcf2374bded25ad1d273950f8c81c","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":128,"deletions":107,"changes":235,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -57,6 +57,8 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.ResourceCond;\n+import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -66,6 +68,7 @@\n import org.syncope.console.commons.SearchConditionWrapper.FilterType;\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n import org.syncope.console.commons.SortableUserProviderComparator;\n+import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.rest.UserRestClient;\n@@ -96,6 +99,9 @@ public class Users extends BasePage {\n     @SpringBean\n     private RoleRestClient roleRestClient;\n \n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n     @SpringBean\n     private PreferenceManager prefMan;\n \n@@ -107,7 +113,7 @@ public class Users extends BasePage {\n             getWebRequestCycle().getWebRequest(),\n             Constants.PREF_USERS_SEARCH_PAGINATOR_ROWS);\n \n-    private boolean modalResult = false;\n+    protected boolean modalResult = false;\n \n     final private IModel<List<String>> schemaNames =\n             new LoadableDetachableModel<List<String>>() {\n@@ -170,6 +176,24 @@ protected List<String> load() {\n                 }\n             };\n \n+    final private IModel<List<String>> resourceNames =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                @Override\n+                protected List<String> load() {\n+                    List<ResourceTO> resourceTOs = resourceRestClient.getAllResources();\n+\n+                    List<String> result =\n+                            new ArrayList<String>(resourceTOs.size());\n+\n+                    for (ResourceTO resource : resourceTOs) {\n+                        result.add(resource.getName());\n+                    }\n+\n+                    return result;\n+                }\n+            };\n+\n     final private IModel<List<AttributeCond.Type>> attributeTypes =\n             new LoadableDetachableModel<List<AttributeCond.Type>>() {\n \n@@ -188,9 +212,9 @@ protected List<FilterType> load() {\n                 }\n             };\n \n-    final private WebMarkupContainer listContainer;\n+    final protected WebMarkupContainer listContainer;\n \n-    final private WebMarkupContainer searchResultContainer;\n+    final protected WebMarkupContainer searchResultContainer;\n \n     public Users(final PageParameters parameters) {\n         super(parameters);\n@@ -474,7 +498,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         searchPaginatorForm.add(searchRowsChooser);\n     }\n \n-    private void setWindowClosedReloadCallback(final ModalWindow window,\n+    protected void setWindowClosedReloadCallback(final ModalWindow window,\n             final AjaxFallbackDefaultDataTable<UserTO> table) {\n \n         window.setWindowClosedCallback(\n@@ -607,95 +631,84 @@ public void setModalResult(final boolean modalResult) {\n     private NodeCond buildSearchCond(\n             final List<SearchConditionWrapper> conditions) {\n \n+        // inverse processing: from right to left\n+        // (OperationType is specified on the right)\n         SearchConditionWrapper searchConditionWrapper =\n-                conditions.iterator().next();\n-\n-        AttributeCond attributeCond = null;\n-        MembershipCond membershipCond = null;\n-        if (searchConditionWrapper.getFilterType() == FilterType.ATTRIBUTE) {\n-            attributeCond = new AttributeCond();\n-            attributeCond.setSchema(searchConditionWrapper.getFilterName());\n-            attributeCond.setType(searchConditionWrapper.getType());\n-            attributeCond.setExpression(\n-                    searchConditionWrapper.getFilterValue());\n-        } else {\n-            membershipCond = new MembershipCond();\n-            membershipCond.setRoleId(RoleTO.fromDisplayName(\n-                    searchConditionWrapper.getFilterName()));\n-        }\n+                conditions.get(conditions.size() - 1);\n+\n+        LOG.debug(\"Search conditions: \"\n+                + \"fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n+                new Object[]{\n+                    searchConditionWrapper.getFilterName(),\n+                    searchConditionWrapper.getFilterType(),\n+                    searchConditionWrapper.getFilterValue(),\n+                    searchConditionWrapper.getOperationType(),\n+                    searchConditionWrapper.getType(),\n+                    searchConditionWrapper.isNotOperator()});\n+\n+        NodeCond nodeCond = null;\n+\n+        switch (searchConditionWrapper.getFilterType()) {\n+            case ATTRIBUTE:\n+                final AttributeCond attributeCond = new AttributeCond();\n+                attributeCond.setSchema(searchConditionWrapper.getFilterName());\n+                attributeCond.setType(searchConditionWrapper.getType());\n+                attributeCond.setExpression(\n+                        searchConditionWrapper.getFilterValue());\n \n-        if (conditions.size() == 1) {\n-            if (searchConditionWrapper.getFilterType()\n-                    == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n                 if (searchConditionWrapper.isNotOperator()) {\n-                    return NodeCond.getNotLeafCond(attributeCond);\n+                    nodeCond = NodeCond.getNotLeafCond(attributeCond);\n                 } else {\n-                    return NodeCond.getLeafCond(attributeCond);\n+                    nodeCond = NodeCond.getLeafCond(attributeCond);\n                 }\n-            } else {\n+\n+                break;\n+            case MEMBERSHIP:\n+                final MembershipCond membershipCond = new MembershipCond();\n+                membershipCond.setRoleId(RoleTO.fromDisplayName(\n+                        searchConditionWrapper.getFilterName()));\n+\n                 if (searchConditionWrapper.isNotOperator()) {\n-                    return NodeCond.getNotLeafCond(membershipCond);\n+                    nodeCond = NodeCond.getNotLeafCond(membershipCond);\n                 } else {\n-                    return NodeCond.getLeafCond(membershipCond);\n+                    nodeCond = NodeCond.getLeafCond(membershipCond);\n                 }\n-            }\n-        } else {\n-            List<SearchConditionWrapper> subList =\n-                    conditions.subList(1, conditions.size());\n \n-            searchConditionWrapper = subList.iterator().next();\n+                break;\n+            case RESOURCE:\n+                final ResourceCond resourceCond = new ResourceCond();\n+                resourceCond.setName(searchConditionWrapper.getFilterName());\n \n-            if (searchConditionWrapper.getOperationType()\n-                    == SearchConditionWrapper.OperationType.AND) {\n-\n-                if (searchConditionWrapper.getFilterType()\n-                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n-\n-                    if (attributeCond != null) {\n-                        return NodeCond.getAndCond(\n-                                NodeCond.getLeafCond(attributeCond),\n-                                buildSearchCond(subList));\n-                    } else {\n-                        return NodeCond.getAndCond(\n-                                NodeCond.getLeafCond(membershipCond),\n-                                buildSearchCond(subList));\n-                    }\n+                if (searchConditionWrapper.isNotOperator()) {\n+                    nodeCond = NodeCond.getNotLeafCond(resourceCond);\n                 } else {\n-                    if (attributeCond != null) {\n-                        return NodeCond.getAndCond(\n-                                NodeCond.getLeafCond(attributeCond),\n-                                buildSearchCond(subList));\n-                    } else {\n-                        return NodeCond.getAndCond(\n-                                NodeCond.getLeafCond(membershipCond),\n-                                buildSearchCond(subList));\n-                    }\n+                    nodeCond = NodeCond.getLeafCond(resourceCond);\n                 }\n+\n+                break;\n+            default:\n+            // nothing to do\n+        }\n+\n+        LOG.debug(\"Processed condition {}\", nodeCond);\n+\n+        if (conditions.size() > 1) {\n+            List<SearchConditionWrapper> subList =\n+                    conditions.subList(0, conditions.size() - 1);\n+\n+            if (OperationType.OR.equals(\n+                    searchConditionWrapper.getOperationType())) {\n+                nodeCond = NodeCond.getOrCond(\n+                        nodeCond,\n+                        buildSearchCond(subList));\n             } else {\n-                if (searchConditionWrapper.getFilterType()\n-                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n-                    if (attributeCond != null) {\n-                        return NodeCond.getOrCond(\n-                                NodeCond.getLeafCond(attributeCond),\n-                                buildSearchCond(subList));\n-                    } else {\n-                        return NodeCond.getOrCond(\n-                                NodeCond.getLeafCond(membershipCond),\n-                                buildSearchCond(subList));\n-                    }\n-                } else {\n-                    if (attributeCond != null) {\n-                        return NodeCond.getOrCond(\n-                                NodeCond.getLeafCond(attributeCond),\n-                                buildSearchCond(subList));\n-                    } else {\n-                        return NodeCond.getOrCond(\n-                                NodeCond.getLeafCond(membershipCond),\n-                                buildSearchCond(subList));\n-                    }\n-                }\n+                nodeCond = NodeCond.getAndCond(\n+                        nodeCond,\n+                        buildSearchCond(subList));\n             }\n         }\n+\n+        return nodeCond;\n     }\n \n     private class UserDataProvider extends SortableDataProvider<UserTO> {\n@@ -883,20 +896,7 @@ protected void populateItem(\n                     new PropertyModel<String>(\n                     searchCondition, \"filterName\"), (IModel) null);\n             filterNameChooser.setOutputMarkupId(true);\n-\n-            if (searchCondition.getFilterType() == null) {\n-                filterNameChooser.setChoices(\n-                        Collections.EMPTY_LIST);\n-            } else if (searchCondition.getFilterType()\n-                    == FilterType.ATTRIBUTE) {\n-\n-                filterNameChooser.setChoices(schemaNames);\n-            } else {\n-                filterNameChooser.setChoices(roleNames);\n-            }\n-\n             filterNameChooser.setRequired(true);\n-\n             item.add(filterNameChooser);\n \n             final DropDownChoice<AttributeCond.Type> type =\n@@ -912,23 +912,44 @@ protected void populateItem(\n                     \"filterValue\"));\n             item.add(filterValue);\n \n-            if (searchCondition.getFilterType()\n-                    == FilterType.MEMBERSHIP) {\n-\n-                type.setEnabled(false);\n-                type.setRequired(false);\n-                type.setModelObject(null);\n-\n-                filterValue.setEnabled(false);\n-                filterValue.setModelObject(\"\");\n-            } else {\n-                if (!type.isEnabled()) {\n-                    type.setEnabled(true);\n-                    type.setRequired(true);\n-                }\n-                if (!filterValue.isEnabled()) {\n-                    filterValue.setEnabled(true);\n+            try {\n+                switch (searchCondition.getFilterType()) {\n+                    case ATTRIBUTE:\n+                        filterNameChooser.setChoices(schemaNames);\n+                        if (!type.isEnabled()) {\n+                            type.setEnabled(true);\n+                            type.setRequired(true);\n+                        }\n+                        if (!filterValue.isEnabled()) {\n+                            filterValue.setEnabled(true);\n+                        }\n+                        break;\n+                    case MEMBERSHIP:\n+                        filterNameChooser.setChoices(roleNames);\n+                        type.setEnabled(false);\n+                        type.setRequired(false);\n+                        type.setModelObject(null);\n+\n+                        filterValue.setEnabled(false);\n+                        filterValue.setModelObject(\"\");\n+\n+                        break;\n+                    case RESOURCE:\n+                        filterNameChooser.setChoices(resourceNames);\n+                        type.setEnabled(false);\n+                        type.setRequired(false);\n+                        type.setModelObject(null);\n+\n+                        filterValue.setEnabled(false);\n+                        filterValue.setModelObject(\"\");\n+\n+                        break;\n+                    default:\n+                        filterNameChooser.setChoices(Collections.EMPTY_LIST);\n                 }\n+            } catch (NullPointerException npe) {\n+                // searchCondition null\n+                filterNameChooser.setChoices(Collections.EMPTY_LIST);\n             }\n \n             DropDownChoice<FilterType> filterTypeChooser ="},{"sha":"3273e0d855006b912a6886a74c22e7f4b71b85f2","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -83,12 +83,8 @@ public void update(ConnInstanceTO connectorTO) {\n      * @return schemaTO\n      */\n     public void delete(Long id) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"connector/delete/{connectorId}.json\", id.toString());\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a connector\", e);\n-        }\n+        restTemplate.delete(baseURL\n+                + \"connector/delete/{connectorId}.json\", id.toString());\n     }\n \n     public List<ConnBundleTO> getAllBundles() {"},{"sha":"a67bbb4293416fe8f43c36e13fcea5c623094be6","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -166,4 +166,5 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n         </div>\n     </div>\n \n-</wicket:extend>\n\\ No newline at end of file\n+<wicket:child/>\n+</wicket:extend>"},{"sha":"5cee8738eba32212744652b84e4e381a8e85e7a0","filename":"core/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -392,8 +392,8 @@\n                         <phase>package</phase>\n                         <configuration>\n                             <target>\n-                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.14/bin/apache-tomcat-7.0.14.zip\" dest=\"${java.io.tmpdir}\" skipexisting=\"true\" />\n-                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.14.zip\" dest=\"${java.io.tmpdir}\" overwrite=\"false\" />\n+                                <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v7.0.16/bin/apache-tomcat-7.0.16.zip\" dest=\"${java.io.tmpdir}\" skipexisting=\"true\" />\n+                                <unzip src=\"${java.io.tmpdir}/apache-tomcat-7.0.16.zip\" dest=\"${java.io.tmpdir}\" overwrite=\"false\" />\n                             </target>\n                         </configuration>\n                         <goals>\n@@ -493,7 +493,7 @@\n                     <wait>true</wait>\n                     <container>\n                         <containerId>tomcat7x</containerId>\n-                        <home>${java.io.tmpdir}/apache-tomcat-7.0.14</home>\n+                        <home>${java.io.tmpdir}/apache-tomcat-7.0.16</home>\n                         <log>${cargo.log}</log>\n                         <output>${cargo.output}</output>\n                         <dependencies>"},{"sha":"f39096a36ac648249c6d853aa30bd671d306492f","filename":"core/src/main/java/jpasymphony/workflow/spi/jpa/JPAWorkflowStore.java","status":"modified","additions":16,"deletions":8,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -62,6 +62,18 @@ public class JPAWorkflowStore implements WorkflowStore {\n     @Autowired\n     private PropertySetDelegate propertySetDelegate;\n \n+    public JPAWorkflowStore() {\n+    }\n+\n+    public JPAWorkflowStore(\n+            final EntityManager entityManager,\n+            final JPAWorkflowEntryDAO workflowEntryDAO,\n+            final PropertySetDelegate propertySetDelegate) {\n+        this.entityManager = entityManager;\n+        this.workflowEntryDAO = workflowEntryDAO;\n+        this.propertySetDelegate = propertySetDelegate;\n+    }\n+\n     private JPAWorkflowEntry getEntry(final long entryId)\n             throws StoreException {\n \n@@ -286,8 +298,7 @@ private Class getQueryClass(Expression expr, Collection classesCache) {\n \n                 default:\n                     throw new QueryNotSupportedException(\n-                            \"Query for unsupported context \" + fieldExpression.\n-                            getContext());\n+                            \"Query for unsupported context \" + fieldExpression.getContext());\n             }\n         } else {\n             NestedExpression nestedExpression = (NestedExpression) expr;\n@@ -296,8 +307,7 @@ private Class getQueryClass(Expression expr, Collection classesCache) {\n                 Expression expression = nestedExpression.getExpression(i);\n \n                 if (expression.isNested()) {\n-                    classesCache.add(getQueryClass(nestedExpression.\n-                            getExpression(i), classesCache));\n+                    classesCache.add(getQueryClass(nestedExpression.getExpression(i), classesCache));\n                 } else {\n                     classesCache.add(getQueryClass(expression, classesCache));\n                 }\n@@ -323,11 +333,9 @@ private Predicate buildNested(NestedExpression nestedExpression,\n             Expression expression = nestedExpression.getExpression(i);\n \n             if (expression.isNested()) {\n-                expr = buildNested((NestedExpression) nestedExpression.\n-                        getExpression(i), from);\n+                expr = buildNested((NestedExpression) nestedExpression.getExpression(i), from);\n             } else {\n-                FieldExpression sub = (FieldExpression) nestedExpression.\n-                        getExpression(i);\n+                FieldExpression sub = (FieldExpression) nestedExpression.getExpression(i);\n                 expr = queryComp(sub, from);\n \n                 if (sub.isNegate()) {"},{"sha":"065ff60be628fd000a361b2b72a0345161a91c55","filename":"core/src/main/java/org/syncope/core/init/ContentLoader.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -19,6 +19,10 @@\n import java.sql.SQLException;\n import java.sql.Statement;\n import java.util.Properties;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NameClassPair;\n+import javax.naming.NamingEnumeration;\n import javax.sql.DataSource;\n import org.dbunit.database.DatabaseConfig;\n import org.dbunit.database.DatabaseConnection;\n@@ -49,15 +53,16 @@ public class ContentLoader {\n             ContentLoader.class);\n \n     @Autowired\n-    private DataSource localDataSource;\n+    private DataSource dataSource;\n \n     @Autowired\n     private DefaultDataTypeFactory dbUnitDataTypeFactory;\n \n     @Transactional(readOnly = true)\n     public void load() {\n+\n         // 0. DB connection, to be used below\n-        Connection conn = DataSourceUtils.getConnection(localDataSource);\n+        Connection conn = DataSourceUtils.getConnection(dataSource);\n \n         // 1. read persistence.properties\n         String dbSchema = null;\n@@ -186,7 +191,7 @@ public void load() {\n         } catch (Throwable t) {\n             LOG.error(\"While loading default content\", t);\n         } finally {\n-            DataSourceUtils.releaseConnection(conn, localDataSource);\n+            DataSourceUtils.releaseConnection(conn, dataSource);\n         }\n \n         try {"},{"sha":"c07748eff9c8d6ef7bcf4ca10278464024e7b262","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/MembershipDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -32,7 +32,6 @@ public class MembershipDAOImpl extends AbstractDAOImpl\n \n     @Autowired\n     private UserDAO userDAO;\n-\n     @Autowired\n     private RoleDAO roleDAO;\n \n@@ -52,7 +51,8 @@ public Membership find(final SyncopeUser user, final SyncopeRole role) {\n \n         try {\n             result = (Membership) query.getSingleResult();\n-        } catch (NoResultException e) {\n+        }\n+        catch (NoResultException e) {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"No membership was found for user \"\n                         + user + \" and role \" + role);"},{"sha":"3e78c988b73a2ce95e3598daa4f5bb8fbf1473e4","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -44,7 +44,8 @@ public SyncopeRole find(final Long id) {\n \n         try {\n             return (SyncopeRole) query.getSingleResult();\n-        } catch (NoResultException e) {\n+        }\n+        catch (NoResultException e) {\n             return null;\n         }\n     }"},{"sha":"897f274f257de18d4308d95a84e86f6540faf751","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -41,7 +41,6 @@ public class UserDAOImpl extends AbstractDAOImpl\n \n     @Autowired\n     private SchemaDAO schemaDAO;\n-\n     @Autowired\n     private RoleDAO roleDAO;\n \n@@ -56,7 +55,8 @@ public SyncopeUser find(final Long id) {\n \n         try {\n             return (SyncopeUser) query.getSingleResult();\n-        } catch (NoResultException e) {\n+        }\n+        catch (NoResultException e) {\n             return null;\n         }\n     }\n@@ -189,21 +189,32 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles,\n         final Query query = entityManager.createNativeQuery(\n                 getFindAllQuery(adminRoles).toString());\n \n-        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+        query.setFirstResult(itemsPerPage * ( page <= 0 ? 0 : page - 1 ));\n \n         if (itemsPerPage > 0) {\n             query.setMaxResults(itemsPerPage);\n         }\n \n         List<Number> userIds = new ArrayList<Number>();\n-        userIds.addAll(query.getResultList());\n+        List resultList = query.getResultList();\n+\n+        //fix for HHH-5902 - bug hibernate\n+        if (resultList != null) {\n+            for (Object userId : resultList) {\n+                if (userId instanceof Object[]) {\n+                    userIds.add((Number) ( (Object[]) userId )[0]);\n+                } else {\n+                    userIds.add((Number) userId);\n+                }\n+            }\n+        }\n \n         List<SyncopeUser> result =\n                 new ArrayList<SyncopeUser>(userIds.size());\n \n         SyncopeUser user;\n-        for (Number userId : userIds) {\n-            user = find(userId.longValue());\n+        for (Object userId : userIds) {\n+            user = find(( (Number) userId ).longValue());\n             if (user == null) {\n                 LOG.error(\"Could not find user with id {}, \"\n                         + \"even though returned by the native query\", userId);\n@@ -224,7 +235,7 @@ public final Integer count(final Set<Long> adminRoles) {\n         Query countQuery =\n                 entityManager.createNativeQuery(queryString.toString());\n \n-        return ((Number) countQuery.getSingleResult()).intValue();\n+        return ( (Number) countQuery.getSingleResult() ).intValue();\n     }\n \n     @Override\n@@ -236,7 +247,7 @@ public SyncopeUser save(final SyncopeUser user) {\n                     virtual.getVirtualSchema().getName()).\n                     getValues());\n         }\n-        \n+\n         return merged;\n     }\n "},{"sha":"532fc6710ada5d5585d6e70c7be9a8b49affe108","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":49,"deletions":3,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -32,6 +32,7 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.ResourceCond;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n import org.syncope.core.persistence.beans.user.USchema;\n@@ -220,14 +221,25 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n \n         // 5. Prepare the result (avoiding duplicates - set)\n         Set<Number> userIds = new HashSet<Number>();\n-        userIds.addAll(query.getResultList());\n+        List resultList = query.getResultList();\n+\n+        //fix for HHH-5902 - bug hibernate\n+        if (resultList != null) {\n+            for (Object userId : resultList) {\n+                if (userId instanceof Object[]) {\n+                    userIds.add((Number) ((Object[]) userId)[0]);\n+                } else {\n+                    userIds.add((Number) userId);\n+                }\n+            }\n+        }\n \n         List<SyncopeUser> result =\n                 new ArrayList<SyncopeUser>(userIds.size());\n \n         SyncopeUser user;\n-        for (Number userId : userIds) {\n-            user = userDAO.find(userId.longValue());\n+        for (Object userId : userIds) {\n+            user = userDAO.find(((Number) userId).longValue());\n             if (user == null) {\n                 LOG.error(\"Could not find user with id {}, \"\n                         + \"even though returned by the native query\", userId);\n@@ -253,6 +265,11 @@ private StringBuilder getQuery(final NodeCond nodeCond,\n                             nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n                             parameters));\n                 }\n+                if (nodeCond.getResourceCond() != null) {\n+                    query.append(getQuery(nodeCond.getResourceCond(),\n+                            nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                            parameters));\n+                }\n                 if (nodeCond.getAttributeCond() != null) {\n                     query.append(getQuery(nodeCond.getAttributeCond(),\n                             nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n@@ -311,6 +328,35 @@ private String getQuery(final MembershipCond cond,\n             query.append(\")\");\n         }\n \n+        return query.toString();\n+    }\n+\n+    private String getQuery(final ResourceCond cond,\n+            final boolean not, final Map<Integer, Object> parameters) {\n+\n+        StringBuilder query = new StringBuilder(\n+                \"SELECT id AS user_id FROM syncopeuser WHERE id \");\n+\n+        if (not) {\n+            query.append(\"NOT IN (\");\n+        } else {\n+            query.append(\" IN (\");\n+        }\n+\n+        query.append(\"SELECT DISTINCT m.syncopeuser_id AS user_id \").\n+                append(\"FROM membership m, \").\n+                append(\"syncoperole_targetresource rr \").\n+                append(\"WHERE rr.targetresources_name=:param\").\n+                append(setParameter(random, parameters, cond.getName())).\n+                append(\" \").\n+                append(\"AND rr.roles_id=m.syncoperole_id \").\n+                append(\"UNION \").\n+                append(\"SELECT DISTINCT ur.users_id AS user_id \").\n+                append(\"FROM syncopeuser_targetresource ur \").\n+                append(\"WHERE ur.targetresources_name=:param\").\n+                append(setParameter(random, parameters, cond.getName()));\n+\n+        query.append(\")\");\n \n         return query.toString();\n     }"},{"sha":"4e51a12c82c67b0ae083940514f2dc28493dd400","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":69,"deletions":40,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -55,12 +55,10 @@ public class ConnectorFacadeProxy {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n             ConnectorFacadeProxy.class);\n-\n     /**\n      * Connector facade wrapped instance.\n      */\n     private final ConnectorFacade connector;\n-\n     /**\n      * Set of configure connecto instance capabilities.\n      * @see org.syncope.core.persistence.beans.ConnInstance\n@@ -185,7 +183,8 @@ public ConnectorFacadeProxy(final ConnInstance connInstance,\n \n                     properties.setPropertyValue(\n                             property.getSchema().getName(), propertyValue);\n-                } catch (Throwable t) {\n+                }\n+                catch (Throwable t) {\n                     LOG.error(\"Invalid ConnConfProperty specified: {}\",\n                             property, t);\n                 }\n@@ -206,42 +205,16 @@ public ConnectorFacadeProxy(final ConnInstance connInstance,\n     }\n \n     public Uid resolveUsername(\n-            final PropagationMode propagationMode,\n-            final ResourceOperationType operationType,\n             final ObjectClass objectClass,\n             final String username,\n             final OperationOptions options) {\n \n         Uid result = null;\n \n         if (capabitilies.contains(ConnectorCapability.RESOLVE)) {\n-            switch (operationType) {\n-                case CREATE:\n-                    if (propagationMode == PropagationMode.SYNC\n-                            ? capabitilies.contains(\n-                            ConnectorCapability.SYNC_CREATE)\n-                            : capabitilies.contains(\n-                            ConnectorCapability.ASYNC_CREATE)) {\n-\n-                        result = connector.resolveUsername(\n-                                objectClass, username, options);\n-                    }\n-                    break;\n-                case UPDATE:\n-                    if (propagationMode == PropagationMode.SYNC\n-                            ? capabitilies.contains(\n-                            ConnectorCapability.SYNC_UPDATE)\n-                            : capabitilies.contains(\n-                            ConnectorCapability.ASYNC_UPDATE)) {\n-\n-                        result = connector.resolveUsername(\n-                                objectClass, username, options);\n-                    }\n-                    break;\n-                default:\n-                    result = connector.resolveUsername(\n-                            objectClass, username, options);\n-            }\n+\n+            result = connector.resolveUsername(\n+                    objectClass, username, options);\n         }\n \n         return result;\n@@ -312,16 +285,70 @@ public void delete(final PropagationMode propagationMode,\n         }\n     }\n \n-    public void validate() {\n-        connector.validate();\n+    /**\n+     * Get remote object.\n+     */\n+    public ConnectorObject getObject(\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final OperationOptions options) {\n+\n+        return getObject(null, null, objectClass, uid, options);\n     }\n \n-    public Set<Attribute> getObject(\n-            final ObjectClass objClass,\n+    /**\n+     * Get remote object used by the propagation manager in order to choose\n+     * for a create (object doesn't exist) or an update (object exists)\n+     */\n+    public ConnectorObject getObject(\n+            final PropagationMode propagationMode,\n+            final ResourceOperationType operationType,\n+            final ObjectClass objectClass,\n             final Uid uid,\n             final OperationOptions options) {\n-        ConnectorObject object = connector.getObject(objClass, uid, options);\n-        return object.getAttributes();\n+\n+        ConnectorObject result = null;\n+\n+        if (capabitilies.contains(ConnectorCapability.SEARCH)) {\n+            if (operationType == null) {\n+                result = connector.getObject(objectClass, uid, options);\n+            } else {\n+                switch (operationType) {\n+                    case CREATE:\n+                        if (propagationMode == null\n+                                || ( propagationMode == PropagationMode.SYNC\n+                                ? capabitilies.contains(\n+                                ConnectorCapability.SYNC_CREATE)\n+                                : capabitilies.contains(\n+                                ConnectorCapability.ASYNC_CREATE) )) {\n+\n+                            result = connector.getObject(\n+                                    objectClass, uid, options);\n+                        }\n+                        break;\n+                    case UPDATE:\n+                        if (propagationMode == null\n+                                || ( propagationMode == PropagationMode.SYNC\n+                                ? capabitilies.contains(\n+                                ConnectorCapability.SYNC_UPDATE)\n+                                : capabitilies.contains(\n+                                ConnectorCapability.ASYNC_UPDATE) )) {\n+\n+                            result = connector.getObject(\n+                                    objectClass, uid, options);\n+                        }\n+                        break;\n+                    default:\n+                        result = connector.getObject(objectClass, uid, options);\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public void validate() {\n+        connector.validate();\n     }\n \n     public Attribute getObjectAttribute(\n@@ -338,7 +365,8 @@ public Attribute getObjectAttribute(\n \n             attribute = object.getAttributeByName(attributeName);\n \n-        } catch (NullPointerException e) {\n+        }\n+        catch (NullPointerException e) {\n             // ignore exception\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n         }\n@@ -362,7 +390,8 @@ public Set<Attribute> getObjectAttributes(\n                 attributes.add(object.getAttributeByName(attribute));\n             }\n \n-        } catch (NullPointerException e) {\n+        }\n+        catch (NullPointerException e) {\n             // ignore exception\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n         }"},{"sha":"39d9c608446340bee99ccafdc66181766dc361df","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":76,"deletions":66,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -30,6 +31,8 @@\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n+import org.identityconnectors.framework.common.objects.AttributeUtil;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -48,13 +51,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExecution;\n-import org.syncope.core.persistence.beans.membership.MDerSchema;\n-import org.syncope.core.persistence.beans.membership.MSchema;\n-import org.syncope.core.persistence.beans.membership.MVirSchema;\n import org.syncope.core.persistence.beans.membership.Membership;\n-import org.syncope.core.persistence.beans.role.RDerSchema;\n-import org.syncope.core.persistence.beans.role.RSchema;\n-import org.syncope.core.persistence.beans.role.RVirSchema;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttr;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n@@ -238,7 +235,7 @@ public void delete(SyncopeUser user, Set<String> mandatoryResourceNames)\n      * @param merge\n      * @throws PropagationException\n      */\n-    private void provision(\n+    protected void provision(\n             final SyncopeUser user,\n             final String password,\n             final ResourceOperations resourceOperations,\n@@ -322,38 +319,14 @@ private Class getSourceMappingTypeClass(\n                 result = USchema.class;\n                 break;\n \n-            case RoleSchema:\n-                result = RSchema.class;\n-                break;\n-\n-            case MembershipSchema:\n-                result = MSchema.class;\n-                break;\n-\n             case UserDerivedSchema:\n                 result = UDerSchema.class;\n                 break;\n \n-            case RoleDerivedSchema:\n-                result = RDerSchema.class;\n-                break;\n-\n-            case MembershipDerivedSchema:\n-                result = MDerSchema.class;\n-                break;\n-\n             case UserVirtualSchema:\n                 result = UVirSchema.class;\n                 break;\n \n-            case RoleVirtualSchema:\n-                result = RVirSchema.class;\n-                break;\n-\n-            case MembershipVirtualSchema:\n-                result = MVirSchema.class;\n-                break;\n-\n             default:\n                 result = null;\n         }\n@@ -362,21 +335,21 @@ private Class getSourceMappingTypeClass(\n     }\n \n     private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n-            String password, TargetResource resource) {\n+            String password, TargetResource resource) throws PropagationException {\n \n         LOG.debug(\"Preparing resource attributes for {}\"\n                 + \" on resource {}\"\n                 + \" with attributes {}\",\n                 new Object[]{user, resource, user.getAttributes()});\n \n         // set of user attributes\n-        Set<Attribute> attributes = new HashSet<Attribute>();\n+        Set<Attribute> accountAttributes = new HashSet<Attribute>();\n \n         // cast to be applied on SchemaValueType\n         Class castToBeApplied;\n \n         // account id\n-        String accountId = null;\n+        Map<String, Attribute> accountId = new HashMap<String, Attribute>();\n \n         // resource field values\n         Set objValues;\n@@ -406,8 +379,6 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n             try {\n                 switch (mapping.getSourceMappingType()) {\n                     case UserSchema:\n-                    case RoleSchema:\n-                    case MembershipSchema:\n \n                         schema = schemaDAO.find(\n                                 mapping.getSourceAttrName(),\n@@ -438,8 +409,6 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                         break;\n \n                     case UserVirtualSchema:\n-                    case RoleVirtualSchema:\n-                    case MembershipVirtualSchema:\n \n                         virSchema = virSchemaDAO.find(\n                                 mapping.getSourceAttrName(),\n@@ -474,8 +443,6 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                         break;\n \n                     case UserDerivedSchema:\n-                    case RoleDerivedSchema:\n-                    case MembershipDerivedSchema:\n \n                         derSchema = derSchemaDAO.find(\n                                 mapping.getSourceAttrName(),\n@@ -572,22 +539,35 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                 // -----------------------------\n \n                 if (mapping.isAccountid()) {\n-                    accountId = objValues.iterator().next().toString();\n+                    if (schema != null && schema.isMultivalue()) {\n+                        accountId.put(objValues.iterator().next().toString(),\n+                                AttributeBuilder.build(\n+                                mapping.getDestAttrName(),\n+                                objValues));\n+                    } else {\n+                        accountId.put(objValues.iterator().next().toString(),\n+                                objValues.isEmpty()\n+                                ? AttributeBuilder.build(\n+                                mapping.getDestAttrName())\n+                                : AttributeBuilder.build(\n+                                mapping.getDestAttrName(),\n+                                objValues.iterator().next()));\n+                    }\n                 }\n \n                 if (mapping.isPassword()) {\n-                    attributes.add(AttributeBuilder.buildPassword(\n+                    accountAttributes.add(AttributeBuilder.buildPassword(\n                             objValues.iterator().next().toString().\n                             toCharArray()));\n                 }\n \n                 if (!mapping.isPassword() && !mapping.isAccountid()) {\n                     if (schema != null && schema.isMultivalue()) {\n-                        attributes.add(AttributeBuilder.build(\n+                        accountAttributes.add(AttributeBuilder.build(\n                                 mapping.getDestAttrName(),\n                                 objValues));\n                     } else {\n-                        attributes.add(objValues.isEmpty()\n+                        accountAttributes.add(objValues.isEmpty()\n                                 ? AttributeBuilder.build(\n                                 mapping.getDestAttrName())\n                                 : AttributeBuilder.build(\n@@ -602,15 +582,34 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n             }\n         }\n \n-        if (accountId != null) {\n-            String evaluatedAccountLink = jexlUtil.evaluateWithAttributes(\n-                    resource.getAccountLink(), user.getAttributes());\n+        if (accountId.isEmpty()) {\n+            throw new PropagationException(\n+                    resource.getName(),\n+                    \"Missing accountId specification\");\n+        }\n+\n+        final String key = accountId.keySet().iterator().next();\n \n-            attributes.add(new Name(evaluatedAccountLink.isEmpty()\n-                    ? accountId : evaluatedAccountLink));\n+        String evaluatedAccountLink = jexlUtil.evaluateWithAttributes(\n+                resource.getAccountLink(), user.getAttributes());\n+\n+        // AccountId must be propagated. It could be a simple attribute for\n+        // the target resource or the key (depending on the accountLink)\n+        if (evaluatedAccountLink.isEmpty()) {\n+            // add accountId as __NAME__ attribute ...\n+            LOG.debug(\"Add AccountId [{}] as __NAME__\", key);\n+            accountAttributes.add(new Name(key));\n+        } else {\n+            LOG.debug(\"Add AccountLink [{}] as __NAME__\", evaluatedAccountLink);\n+            accountAttributes.add(new Name(evaluatedAccountLink));\n+\n+            // AccountId not propagated: \n+            // it will be used to set the value for __UID__ attribute\n+            LOG.debug(\"AccountId will be used just as __UID__ attribute\");\n         }\n \n-        return Collections.singletonMap(accountId, attributes);\n+        return Collections.singletonMap(key, accountAttributes);\n+\n     }\n \n     public void propagate(final TaskExecution execution) {\n@@ -642,24 +641,15 @@ public void propagate(final TaskExecution execution) {\n             switch (task.getResourceOperationType()) {\n                 case CREATE:\n                 case UPDATE:\n-\n-                    if (LOG.isDebugEnabled()) {\n-                        for (Attribute attr : task.getAttributes()) {\n-                            LOG.debug(\"Propagate attribute \"\n-                                    + attr.getName()\n-                                    + \" \" + attr.getValue());\n-                        }\n-                    }\n-\n-                    Uid userUid = null;\n+                    ConnectorObject remoteObject = null;\n                     try {\n-                        userUid = connector.resolveUsername(\n+                        remoteObject = connector.getObject(\n                                 task.getPropagationMode(),\n                                 task.getResourceOperationType(),\n                                 ObjectClass.ACCOUNT,\n-                                task.getOldAccountId() == null\n+                                new Uid(task.getOldAccountId() == null\n                                 ? task.getAccountId()\n-                                : task.getOldAccountId(),\n+                                : task.getOldAccountId()),\n                                 null);\n                     }\n                     catch (RuntimeException ignore) {\n@@ -669,12 +659,32 @@ public void propagate(final TaskExecution execution) {\n                         }\n                     }\n \n-                    if (userUid != null) {\n+                    if (remoteObject != null) {\n+                        // 0. prepare new set of attributes\n+                        final Set<Attribute> attributes =\n+                                new HashSet<Attribute>(task.getAttributes());\n+\n+                        // 1. check if rename is really required\n+                        final Name newName = (Name) AttributeUtil.find(\n+                                Name.NAME, attributes);\n+\n+                        LOG.debug(\"Rename required with value {}\", newName);\n+\n+                        if (newName != null) {\n+                            if (newName.equals(remoteObject.getName())) {\n+                                LOG.debug(\"Remote object name unchanged\");\n+                                attributes.remove(newName);\n+                            }\n+                        }\n+\n+                        LOG.debug(\"Attributes to be replaced {}\", attributes);\n+\n+                        // 2. update with a new \"normalized\" attribute set\n                         connector.update(\n                                 task.getPropagationMode(),\n                                 ObjectClass.ACCOUNT,\n-                                userUid,\n-                                task.getAttributes(),\n+                                remoteObject.getUid(),\n+                                attributes,\n                                 null,\n                                 triedPropagationRequests);\n                     } else {"},{"sha":"9d3d444aa9cfbdf54ffa4f9159f1970be33a24e2","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":57,"deletions":15,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -106,13 +106,11 @@ private SyncopeUser getUserFromId(final Long userId)\n         return user;\n     }\n \n-    private UserTO executeAction(UserTO userTO, String actionName,\n+    private UserTO executeAction(SyncopeUser user, String actionName,\n             Map<String, Object> moreInputs)\n             throws WorkflowException, NotFoundException,\n             UnauthorizedRoleException {\n \n-        SyncopeUser user = getUserFromId(userTO.getId());\n-\n         Map<String, Object> inputs = new HashMap<String, Object>();\n         if (moreInputs != null && !moreInputs.isEmpty()) {\n             inputs.putAll(moreInputs);\n@@ -131,6 +129,16 @@ private UserTO executeAction(UserTO userTO, String actionName,\n         return userDataBinder.getUserTO(user, workflow);\n     }\n \n+    private UserTO executeAction(UserTO userTO, String actionName,\n+            Map<String, Object> moreInputs)\n+            throws WorkflowException, NotFoundException,\n+            UnauthorizedRoleException {\n+\n+        SyncopeUser user = getUserFromId(userTO.getId());\n+\n+        return executeAction(user, actionName, moreInputs);\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/activate\")\n@@ -168,6 +176,40 @@ public UserTO verifyToken(@RequestBody UserTO userTO)\n                 Constants.TOKEN, (Object) userTO.getToken()));\n     }\n \n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/suspend/{userId}\")\n+    public UserTO suspend(@PathVariable(\"userId\") final Long userId)\n+            throws NotFoundException, WorkflowException,\n+            UnauthorizedRoleException {\n+\n+        LOG.debug(\"About to suspend \" + userId);\n+\n+        SyncopeUser user = getUserFromId(userId);\n+\n+        executeAction(user, \"suspend\", null);\n+        user = userDAO.save(user);\n+\n+        return userDataBinder.getUserTO(user, workflow);\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/reactivate/{userId}\")\n+    public UserTO reactivate(final @PathVariable(\"userId\") Long userId)\n+            throws NotFoundException, WorkflowException,\n+            UnauthorizedRoleException {\n+\n+        LOG.debug(\"About to reactivate \" + userId);\n+\n+        SyncopeUser user = getUserFromId(userId);\n+\n+        executeAction(user, \"reactivate\", null);\n+        user = userDAO.save(user);\n+\n+        return userDataBinder.getUserTO(user, workflow);\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/verifyPassword/{userId}\")\n@@ -450,18 +492,6 @@ public UserTO create(HttpServletResponse response,\n         // Create the user\n         user = userDAO.save(user);\n \n-        // Now that user is created locally, let's propagate\n-        Set<String> mandatoryResourceNames = getMandatoryResourceNames(user,\n-                mandatoryRoles, mandatoryResources);\n-\n-        if (!mandatoryResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate mandatory onto resources {}\",\n-                    mandatoryResourceNames);\n-        }\n-\n-        propagationManager.create(\n-                user, userTO.getPassword(), mandatoryResourceNames);\n-\n         // User is created locally and propagated, let's advance on the workflow\n         final Long workflowId =\n                 workflow.initialize(Constants.USER_WORKFLOW, 0, null);\n@@ -481,8 +511,20 @@ public UserTO create(HttpServletResponse response,\n             LOG.debug(\"Action {} on user {} run successfully\", wfAction, user);\n         }\n \n+        // Save possible modifications made by workflow actions\n         user = userDAO.save(user);\n \n+        // Now that user is created locally, let's propagate\n+        Set<String> mandatoryResourceNames = getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate mandatory onto resources {}\",\n+                    mandatoryResourceNames);\n+        }\n+\n+        propagationManager.create(\n+                user, userTO.getPassword(), mandatoryResourceNames);\n+\n         final UserTO savedTO = userDataBinder.getUserTO(user, workflow);\n         LOG.debug(\"About to return create user\\n{}\", savedTO);\n "},{"sha":"7c69169c9d6036ac0651e01037fcf015a7153159","filename":"core/src/main/java/org/syncope/core/util/AttributableUtil.java","status":"modified","additions":3,"deletions":24,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -55,15 +55,8 @@ public SourceMappingType sourceMappingType() {\n         SourceMappingType result = null;\n \n         switch (this) {\n-            case USER:\n+            default:\n                 result = SourceMappingType.UserSchema;\n-                break;\n-            case ROLE:\n-                result = SourceMappingType.RoleSchema;\n-                break;\n-            case MEMBERSHIP:\n-                result = SourceMappingType.MembershipSchema;\n-                break;\n         }\n \n         return result;\n@@ -73,15 +66,8 @@ public SourceMappingType derivedSourceMappingType() {\n         SourceMappingType result = null;\n \n         switch (this) {\n-            case USER:\n+            default:\n                 result = SourceMappingType.UserDerivedSchema;\n-                break;\n-            case ROLE:\n-                result = SourceMappingType.RoleDerivedSchema;\n-                break;\n-            case MEMBERSHIP:\n-                result = SourceMappingType.MembershipDerivedSchema;\n-                break;\n         }\n \n         return result;\n@@ -91,15 +77,8 @@ public SourceMappingType virtualSourceMappingType() {\n         SourceMappingType result = null;\n \n         switch (this) {\n-            case USER:\n+            default:\n                 result = SourceMappingType.UserVirtualSchema;\n-                break;\n-            case ROLE:\n-                result = SourceMappingType.RoleVirtualSchema;\n-                break;\n-            case MEMBERSHIP:\n-                result = SourceMappingType.MembershipVirtualSchema;\n-                break;\n         }\n \n         return result;"},{"sha":"b655600ce1695badcbc416faef91e49017a8d69d","filename":"core/src/main/java/org/syncope/core/util/JexlUtil.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -61,22 +61,25 @@ public String evaluateWithAttributes(final String expression,\n \n         JexlContext jexlContext = new MapContext();\n \n-        List<? extends AbstractAttrValue> attributeValues;\n+        List<String> attributeValues;\n         String expressionValue;\n         AbstractAttr attribute;\n-        AbstractAttrValue attributeValue;\n         for (Iterator<? extends AbstractAttr> itor =\n                 attributes.iterator(); itor.hasNext();) {\n \n             attribute = itor.next();\n-            attributeValues = attribute.getValues();\n+            attributeValues = attribute.getValuesAsStrings();\n             if (attributeValues.isEmpty()) {\n                 expressionValue = \"\";\n             } else {\n-                attributeValue = attributeValues.iterator().next();\n-                expressionValue = attributeValue.getValueAsString();\n+                expressionValue = attributeValues.iterator().next();\n             }\n \n+            LOG.debug(\"Add attribute {} with value {}\",\n+                    new Object[]{attribute.getSchema().getName(),\n+                        expressionValue\n+                    });\n+\n             jexlContext.set(attribute.getSchema().getName(), expressionValue);\n         }\n "},{"sha":"17d37d927364d991040e18008afd158ca37c3f36","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -49,10 +49,10 @@\n     </bean>\n     <bean id=\"localDataSource\"\n           class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-        <property name=\"driverClassName\" value=\"${hibernate.connection.driver_class}\"/>\n-        <property name=\"url\" value=\"${hibernate.connection.url}\"/>\n-        <property name=\"username\" value=\"${hibernate.connection.username}\"/>\n-        <property name=\"password\" value=\"${hibernate.connection.password}\"/>\n+        <property name=\"driverClassName\" value=\"${hibernate.connection.driver_class:org.hsqldb.jdbcDriver}\"/>\n+        <property name=\"url\" value=\"${hibernate.connection.url:jdbc:hsqldb:mem:syncopedb}\"/>\n+        <property name=\"username\" value=\"${hibernate.connection.username:sa}\"/>\n+        <property name=\"password\" value=\"${hibernate.connection.password:}\"/>\n     </bean>\n \n     <bean id=\"entityManagerFactory\""},{"sha":"fff01581c11bb4ed1cb02326a9a9654460d7bae4","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -27,6 +27,8 @@\n                 <value>classpath:security.properties</value>\n             </list>\n         </property>\n+        <property name=\"ignoreResourceNotFound\" value=\"true\" />\n+        <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\" />\n     </bean>\n \n     <bean class=\"org.syncope.core.util.ApplicationContextProvider\"/>"},{"sha":"a413e79b5e9bac12852710b79da831accfeb9190","filename":"core/src/test/java/org/syncope/core/persistence/dao/MembershipTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipTest.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -40,7 +40,7 @@ public class MembershipTest extends AbstractTest {\n     @Test\n     public final void findAll() {\n         List<Membership> list = membershipDAO.findAll();\n-        assertEquals(5, list.size());\n+        assertEquals(6, list.size());\n     }\n \n     @Test"},{"sha":"6f6b564d50dd9a859d7cea729b5d2fd9bc1a43cd","filename":"core/src/test/java/org/syncope/core/persistence/relationships/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -59,7 +59,7 @@ public final void delete() {\n \n         assertNull(roleDAO.find(2L));\n         assertEquals(1, entitlementDAO.find(\"base\").getRoles().size());\n-        assertTrue(userDAO.find(2L).getRoles().size() == 1);\n+        assertEquals(userDAO.find(2L).getRoles().size(), 2);\n         assertNull(attrDAO.find(700L, RAttr.class));\n         assertNull(attrValueDAO.find(41L, RAttrValue.class));\n         assertNotNull(schemaDAO.find(\"icon\", RSchema.class));"},{"sha":"f73829460f5efffba9672e6109e1eff6d3721f84","filename":"core/src/test/java/org/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -56,12 +56,6 @@ public void create() {\n         schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n-        schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"icon\");\n-        schemaMappingTO.setSourceAttrName(\"icon\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.RoleSchema);\n-        resourceTO.addMapping(schemaMappingTO);\n-\n         schemaMappingTO = new SchemaMappingTO();\n         schemaMappingTO.setDestAttrName(\"username\");\n         schemaMappingTO.setSourceAttrName(\"username\");"},{"sha":"8abe97687a92dad7bd6c844fd739f8fd2edd174f","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -36,6 +36,7 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.ResourceCond;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.to.WorkflowActionsTO;\n@@ -579,6 +580,36 @@ public final void search() {\n         assertTrue(userIds.contains(3L));\n     }\n \n+    @Test\n+    public final void searchUserByResourceName() {\n+        ResourceCond ws2 = new ResourceCond();\n+        ws2.setName(\"ws-target-resource2\");\n+\n+        ResourceCond ws1 = new ResourceCond();\n+        ws1.setName(\"ws-target-resource-list-mappings-2\");\n+\n+        NodeCond searchCondition = NodeCond.getAndCond(\n+                NodeCond.getNotLeafCond(ws2),\n+                NodeCond.getLeafCond(ws1));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        List<UserTO> matchedUsers = Arrays.asList(\n+                restTemplate.postForObject(\n+                BASE_URL + \"user/search\",\n+                searchCondition, UserTO[].class));\n+        assertNotNull(matchedUsers);\n+        assertFalse(matchedUsers.isEmpty());\n+\n+        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n+        for (UserTO user : matchedUsers) {\n+            userIds.add(user.getId());\n+        }\n+\n+        assertEquals(1, userIds.size());\n+        assertTrue(userIds.contains(2L));\n+    }\n+\n     @Test\n     public final void paginatedSearch() {\n         // LIKE"},{"sha":"9187119abb7d2e8e972b21b373b554a489a663b1","filename":"core/src/test/resources/content.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87174da318040c3ae9832eb578013b2e7390febe/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=87174da318040c3ae9832eb578013b2e7390febe","patch":"@@ -63,6 +63,7 @@\n     <Membership id=\"3\" syncopeUser_id=\"2\" syncopeRole_id=\"2\"/>\n     <Membership id=\"4\" syncopeUser_id=\"4\" syncopeRole_id=\"7\"/>\n     <Membership id=\"5\" syncopeUser_id=\"1\" syncopeRole_id=\"8\"/>\n+    <Membership id=\"6\" syncopeUser_id=\"2\" syncopeRole_id=\"3\"/>\n \n     <USchema name=\"username\" type=\"String\"\n                 mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"1\" readonly=\"0\"/>\n@@ -242,6 +243,7 @@\n     <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-2\" />\n     <SyncopeRole_TargetResource roles_id=\"8\" targetResources_name=\"ws-target-resource-2\" />\n     <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-2\" />\n+    <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-1\" />\n \n     <SchemaMapping id=\"99\" destAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-1\"\n@@ -326,7 +328,7 @@\n     <SchemaMapping id=\"115\" destAttrName=\"name\"\n                    resource_name=\"ws-target-resource-nopropagation\"\n                    sourceAttrName=\"firstname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n-                   accountid=\"0\" password=\"0\"/>\n+                   accountid=\"1\" password=\"0\"/>\n                    \n     <SchemaMapping id=\"116\" destAttrName=\"id\"\n                    resource_name=\"ws-target-resource-testdb\""}]}