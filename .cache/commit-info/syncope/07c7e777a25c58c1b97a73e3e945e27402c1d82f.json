{"sha":"07c7e777a25c58c1b97a73e3e945e27402c1d82f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA3YzdlNzc3YTI1YzU4YzFiOTdhNzNlM2U5NDVlMjc0MDJjMWQ4MmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-15T14:08:14Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-15T14:08:58Z"},"message":"[SYNCOPE-152] SCIM search via POST","tree":{"sha":"5e11b81c0a09b78b6ad21903433c26c813cd26c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5e11b81c0a09b78b6ad21903433c26c813cd26c2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/07c7e777a25c58c1b97a73e3e945e27402c1d82f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/07c7e777a25c58c1b97a73e3e945e27402c1d82f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/07c7e777a25c58c1b97a73e3e945e27402c1d82f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/07c7e777a25c58c1b97a73e3e945e27402c1d82f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5e83b3787c374893ccbe5ab8dab30b450d2a2a42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5e83b3787c374893ccbe5ab8dab30b450d2a2a42","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5e83b3787c374893ccbe5ab8dab30b450d2a2a42"}],"stats":{"total":236,"additions":208,"deletions":28},"files":[{"sha":"e46c4c8862ce4288dd611fa483861b78fade38ce","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -98,9 +99,15 @@ private <E extends Enum<?>> void fill(\n     public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n         SCIMConf conf = confManager.get();\n \n+        List<String> schemas = new ArrayList<>();\n+        schemas.add(Resource.User.schema());\n+        if (conf.getEnterpriseUserConf() != null) {\n+            schemas.add(Resource.EnterpriseUser.schema());\n+        }\n+\n         SCIMUser user = new SCIMUser(\n                 userTO.getKey(),\n-                Collections.singletonList(Resource.User.schema()),\n+                schemas,\n                 new Meta(\n                         Resource.User,\n                         userTO.getCreationDate(),\n@@ -353,7 +360,6 @@ public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n     public SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n         SCIMGroup group = new SCIMGroup(\n                 groupTO.getKey(),\n-                Collections.singletonList(Resource.Group.schema()),\n                 new Meta(\n                         Resource.Group,\n                         groupTO.getCreationDate(),"},{"sha":"7bafd4b28d08a3009693621899177716d9b0a662","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMGroup.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -22,7 +22,9 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n \n @JsonPropertyOrder({ \"schemas\", \"id\", \"externalId\", \"displayName\", \"members\", \"meta\" })\n public class SCIMGroup extends SCIMResource {\n@@ -36,11 +38,10 @@ public class SCIMGroup extends SCIMResource {\n     @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n     public SCIMGroup(\n             @JsonProperty(\"id\") final String id,\n-            @JsonProperty(\"schemas\") final List<String> schemas,\n             @JsonProperty(\"meta\") final Meta meta,\n             @JsonProperty(\"displayName\") final String displayName) {\n \n-        super(id, schemas, meta);\n+        super(id, Collections.singletonList(Resource.Group.schema()), meta);\n         this.displayName = displayName;\n     }\n "},{"sha":"570ee3a9310c18f8c93862124dacfec5a4ba6a07","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMSearchRequest.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+\n+public class SCIMSearchRequest extends SCIMBean {\n+\n+    private static final long serialVersionUID = 5759362928661983543L;\n+\n+    private final List<String> schemas = Arrays.asList(Resource.SearchRequest.schema());\n+\n+    private final List<String> attributes = new ArrayList<>();\n+\n+    private final List<String> excludedAttributes = new ArrayList<>();\n+\n+    private final String filter;\n+\n+    private final String sortBy;\n+\n+    private final SortOrder sortOrder;\n+\n+    private final Integer startIndex;\n+\n+    private final Integer count;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public SCIMSearchRequest(\n+            @JsonProperty(\"filter\") final String filter,\n+            @JsonProperty(\"sortBy\") final String sortBy,\n+            @JsonProperty(\"sortOrder\") final SortOrder sortOrder,\n+            @JsonProperty(\"startIndex\") final Integer startIndex,\n+            @JsonProperty(\"count\") final Integer count) {\n+\n+        this.filter = filter;\n+        this.sortBy = sortBy;\n+        this.sortOrder = sortOrder;\n+        this.startIndex = startIndex;\n+        this.count = count;\n+    }\n+\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+    public List<String> getAttributes() {\n+        return attributes;\n+    }\n+\n+    public List<String> getExcludedAttributes() {\n+        return excludedAttributes;\n+    }\n+\n+    public String getFilter() {\n+        return filter;\n+    }\n+\n+    public String getSortBy() {\n+        return sortBy;\n+    }\n+\n+    public SortOrder getSortOrder() {\n+        return sortOrder;\n+    }\n+\n+    public Integer getStartIndex() {\n+        return startIndex;\n+    }\n+\n+    public Integer getCount() {\n+        return count;\n+    }\n+\n+}"},{"sha":"d6cbaf5da64a9191a87b293749a85c46f74ba63f","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SearchService.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -19,23 +19,34 @@\n package org.apache.syncope.ext.scimv2.api.service;\n \n import java.util.List;\n+import javax.ws.rs.Consumes;\n import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n public interface SearchService<R extends SCIMResource> {\n \n     @GET\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n     ListResponse<R> search(\n-            @QueryParam(\"startIndex\") Integer startIndex,\n-            @QueryParam(\"count\") Integer count,\n+            @QueryParam(\"attributes\") List<String> attributes,\n+            @QueryParam(\"excludedAttributes\") List<String> excludedAttributes,\n             @QueryParam(\"filter\") String filter,\n             @QueryParam(\"sortBy\") String sortBy,\n             @QueryParam(\"sortOrder\") SortOrder sortOrder,\n-            @QueryParam(\"attributes\") List<String> attributes);\n+            @QueryParam(\"startIndex\") Integer startIndex,\n+            @QueryParam(\"count\") Integer count);\n+\n+    @POST\n+    @Path(\".search\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    ListResponse<R> search(SCIMSearchRequest request);\n }"},{"sha":"7800b68d021654079af7223a3820b24e53084193","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/Resource.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -26,6 +26,7 @@ public enum Resource {\n     User(\"urn:ietf:params:scim:schemas:core:2.0:User\"),\n     EnterpriseUser(\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\"),\n     Group(\"urn:ietf:params:scim:schemas:core:2.0:Group\"),\n+    SearchRequest(\"urn:ietf:params:scim:api:messages:2.0:SearchRequest\"),\n     ListResponse(\"urn:ietf:params:scim:api:messages:2.0:ListResponse\"),\n     Error(\"urn:ietf:params:scim:api:messages:2.0:Error\");\n "},{"sha":"ac3411144e88996e561611fc59048cc36715c7d0","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractService.java","status":"modified","additions":28,"deletions":13,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n import org.slf4j.Logger;\n@@ -104,27 +105,26 @@ protected SCIMDataBinder binder() {\n     @SuppressWarnings(\"unchecked\")\n     protected ListResponse<R> doSearch(\n             final Resource type,\n-            final Integer startIndex,\n-            final Integer count,\n-            final String filter,\n-            final String sortBy,\n-            final SortOrder sortOrder,\n-            final List<String> attributes) {\n+            final SCIMSearchRequest request) {\n \n         if (type == null) {\n             throw new UnsupportedOperationException();\n         }\n \n+        int startIndex = request.getStartIndex() == null || request.getStartIndex() <= 1\n+                ? 1\n+                : (request.getStartIndex() / AnyDAO.DEFAULT_PAGE_SIZE) + 1;\n+\n         Pair<Integer, ? extends List<? extends AnyTO>> result = anyLogic(type).search(\n-                StringUtils.isBlank(filter) ? null : SearchCondConverter.convert(filter),\n-                startIndex == null || startIndex <= 1 ? 1 : (startIndex / AnyDAO.DEFAULT_PAGE_SIZE) + 1,\n+                StringUtils.isBlank(request.getFilter()) ? null : SearchCondConverter.convert(request.getFilter()),\n+                startIndex,\n                 AnyDAO.DEFAULT_PAGE_SIZE,\n                 Collections.<OrderByClause>emptyList(),\n                 SyncopeConstants.ROOT_REALM,\n                 false);\n \n         ListResponse<R> response = new ListResponse<>(\n-                result.getLeft(), startIndex == null || startIndex <= 1 ? 1 : startIndex, AnyDAO.DEFAULT_PAGE_SIZE);\n+                result.getLeft(), startIndex == 1 ? 1 : startIndex - 1, AnyDAO.DEFAULT_PAGE_SIZE);\n \n         result.getRight().forEach(anyTO -> {\n             SCIMResource resource = null;\n@@ -148,13 +148,28 @@ protected ListResponse<R> doSearch(\n \n     @Override\n     public ListResponse<R> search(\n-            final Integer startIndex,\n-            final Integer count,\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n             final String filter,\n             final String sortBy,\n             final SortOrder sortOrder,\n-            final List<String> attributes) {\n+            final Integer startIndex,\n+            final Integer count) {\n \n-        return doSearch(null, startIndex, count, filter, sortBy, sortOrder, attributes);\n+        SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n+        if (attributes != null) {\n+            request.getAttributes().addAll(attributes);\n+        }\n+        if (excludedAttributes != null) {\n+            request.getExcludedAttributes().addAll(excludedAttributes);\n+        }\n+\n+        return doSearch(null, request);\n     }\n+\n+    @Override\n+    public ListResponse<R> search(final SCIMSearchRequest request) {\n+        return doSearch(null, request);\n+    }\n+\n }"},{"sha":"fdc47aa7d32c855392ead950d53d1eb095b0a522","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/GroupServiceImpl.java","status":"modified","additions":18,"deletions":4,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -23,6 +23,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.service.GroupService;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n@@ -58,14 +59,27 @@ public Response update(final String id) {\n \n     @Override\n     public ListResponse<SCIMGroup> search(\n-            final Integer startIndex,\n-            final Integer count,\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n             final String filter,\n             final String sortBy,\n             final SortOrder sortOrder,\n-            final List<String> attributes) {\n+            final Integer startIndex,\n+            final Integer count) {\n+\n+        SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n+        if (attributes != null) {\n+            request.getAttributes().addAll(attributes);\n+        }\n+        if (excludedAttributes != null) {\n+            request.getExcludedAttributes().addAll(excludedAttributes);\n+        }\n \n-        return doSearch(Resource.Group, startIndex, count, filter, sortBy, sortOrder, attributes);\n+        return doSearch(Resource.Group, request);\n     }\n \n+    @Override\n+    public ListResponse<SCIMGroup> search(final SCIMSearchRequest request) {\n+        return doSearch(Resource.Group, request);\n+    }\n }"},{"sha":"0f983624558c4b72fc02a087895f9db435bcc3f3","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"modified","additions":20,"deletions":4,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -22,6 +22,7 @@\n import java.util.UUID;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n import org.apache.syncope.ext.scimv2.api.service.UserService;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n@@ -58,13 +59,28 @@ public Response update(final String id) {\n \n     @Override\n     public ListResponse<SCIMUser> search(\n-            final Integer startIndex,\n-            final Integer count,\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n             final String filter,\n             final String sortBy,\n             final SortOrder sortOrder,\n-            final List<String> attributes) {\n+            final Integer startIndex,\n+            final Integer count) {\n \n-        return doSearch(Resource.User, startIndex, count, filter, sortBy, sortOrder, attributes);\n+        SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n+        if (attributes != null) {\n+            request.getAttributes().addAll(attributes);\n+        }\n+        if (excludedAttributes != null) {\n+            request.getExcludedAttributes().addAll(excludedAttributes);\n+        }\n+\n+        return doSearch(Resource.User, request);\n     }\n+\n+    @Override\n+    public ListResponse<SCIMUser> search(final SCIMSearchRequest request) {\n+        return doSearch(Resource.User, request);\n+    }\n+\n }"},{"sha":"068ebfae558a2cfb8d291d8530e5742c988a917a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07c7e777a25c58c1b97a73e3e945e27402c1d82f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07c7e777a25c58c1b97a73e3e945e27402c1d82f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=07c7e777a25c58c1b97a73e3e945e27402c1d82f","patch":"@@ -71,6 +71,7 @@ protected SimpleDateFormat initialValue() {\n     private WebClient webClient() {\n         return WebClient.create(SCIM_ADDRESS, Arrays.asList(new JacksonSCIMJsonProvider())).\n                 accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n+                type(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n                 header(HttpHeaders.AUTHORIZATION, \"Bearer \" + adminClient.getJWT());\n     }\n \n@@ -225,6 +226,25 @@ public void search() {\n         SCIMGroup additional = groups.getResources().get(0);\n         assertEquals(\"additional\", additional.getDisplayName());\n \n+        // eq via POST\n+        String request = \"{\"\n+                + \"     \\\"schemas\\\": [\\\"urn:ietf:params:scim:api:messages:2.0:SearchRequest\\\"],\"\n+                + \"     \\\"filter\\\": \\\"displayName eq \\\\\\\"additional\\\\\\\"\\\"\"\n+                + \"   }\";\n+        response = webClient().path(\"Groups\").path(\"/.search\").post(request);\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        groups = response.readEntity(new GenericType<ListResponse<SCIMGroup>>() {\n+        });\n+        assertNotNull(groups);\n+        assertEquals(1, groups.getTotalResults());\n+\n+        additional = groups.getResources().get(0);\n+        assertEquals(\"additional\", additional.getDisplayName());\n+\n         // gt\n         UserTO newUser = userService.create(UserITCase.getUniqueSampleTO(\"scimsearch@syncope.apache.org\")).readEntity(\n                 new GenericType<ProvisioningResult<UserTO>>() {"}]}