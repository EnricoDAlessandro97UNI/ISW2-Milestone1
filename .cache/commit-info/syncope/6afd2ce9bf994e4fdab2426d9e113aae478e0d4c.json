{"sha":"6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhZmQyY2U5YmY5OTRlNGZkYWIyNDI2ZDllMTEzYWFlNDc4ZTBkNGM=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-31T11:58:55Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-31T11:58:55Z"},"message":"Fix for SYNCOPE-465 merged from the branch 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1554407 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e88254d62991420be3aec2eaca2fd114377a0de6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e88254d62991420be3aec2eaca2fd114377a0de6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"12d53f6f5d3abf3dff81e998bf3e12b66c20a464","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/12d53f6f5d3abf3dff81e998bf3e12b66c20a464","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/12d53f6f5d3abf3dff81e998bf3e12b66c20a464"},{"sha":"f285d526ffde53fb323ea66705283e77c8fe85d4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f285d526ffde53fb323ea66705283e77c8fe85d4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f285d526ffde53fb323ea66705283e77c8fe85d4"}],"stats":{"total":212,"additions":144,"deletions":68},"files":[{"sha":"54730e30dffada1b843ae9406df66bb16bb9ee65","filename":"console/src/main/java/org/apache/syncope/console/commons/ActionTableCheckGroup.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -20,16 +20,20 @@\n \n import java.util.Collection;\n import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.model.IModel;\n \n public class ActionTableCheckGroup<T> extends CheckGroup<T> {\n \n     private static final long serialVersionUID = 1288270558573401394L;\n \n-    public ActionTableCheckGroup(String id,\n-            Collection<T> collection) {\n+    public ActionTableCheckGroup(final String id, final Collection<T> collection) {\n         super(id, collection);\n     }\n \n+    public ActionTableCheckGroup(final String id, final IModel<Collection<T>> model) {\n+        super(id, model);\n+    }\n+\n     public boolean isCheckable(final T element) {\n         return true;\n     }"},{"sha":"fea74807d08a46a45fe94b176e2293965b915976","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusBean.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.console.commons.status;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -88,4 +90,14 @@ public void setLinked(boolean linked) {\n     public String toString() {\n         return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n     }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n }"},{"sha":"ec1d69fe65caa14f5d8ea3de28433fe4073a5e37","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ActionDataTablePanel.java","status":"modified","additions":5,"deletions":39,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n-import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.console.commons.ActionTableCheckGroup;\n@@ -37,33 +36,20 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class ActionDataTablePanel<T, S> extends Panel {\n+public class ActionDataTablePanel<T, S> extends DataTablePanel<T, S> {\n \n     private static final long serialVersionUID = -8826989026203543957L;\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(ActionDataTablePanel.class);\n-\n     private static final String CANCEL = \"cancel\";\n \n-    private final CheckGroup<T> group;\n-\n-    private final Form<?> bulkActionForm;\n+    private final Form<T> bulkActionForm;\n \n     private final ActionLinksPanel actionPanel;\n \n-    private final AjaxFallbackDefaultDataTable<T, S> dataTable;\n-\n     private final PageReference pageRef;\n \n     public ActionDataTablePanel(\n@@ -77,10 +63,10 @@ public ActionDataTablePanel(\n \n         this.pageRef = pageRef;\n \n-        bulkActionForm = new Form(\"groupForm\");\n+        bulkActionForm = new Form<T>(\"groupForm\");\n         add(bulkActionForm);\n \n-        group = new ActionTableCheckGroup<T>(\"checkgroup\", new ArrayList<T>()) {\n+        group = new ActionTableCheckGroup<T>(\"checkgroup\", model) {\n \n             private static final long serialVersionUID = -8667764190925075389L;\n \n@@ -95,7 +81,7 @@ public boolean isCheckable(final T element) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                // ignore\n+                // triggers AJAX form submit\n             }\n         });\n         bulkActionForm.add(group);\n@@ -125,26 +111,6 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         }.setVisible(false).setEnabled(false));\n     }\n \n-    public final void setCurrentPage(final long page) {\n-        dataTable.setCurrentPage(page);\n-    }\n-\n-    public final long getRowCount() {\n-        return dataTable.getRowCount();\n-    }\n-\n-    public final long getCurrentPage() {\n-        return dataTable.getCurrentPage();\n-    }\n-\n-    public final long getPageCount() {\n-        return dataTable.getPageCount();\n-    }\n-\n-    public void setItemsPerPage(final int resourcePaginatorRows) {\n-        dataTable.setItemsPerPage(resourcePaginatorRows);\n-    }\n-\n     public void addAction(final ActionLink action, final ActionType type, final String pageId) {\n         actionPanel.add(action, type, pageId);\n     }"},{"sha":"e1e63884b59050410b972e6561be0be86178098c","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":27,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n-import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.console.commons.Constants;\n@@ -41,14 +40,11 @@\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.html.panel.Panel;\n \n-public class AjaxDataTablePanel<T, S> extends Panel {\n+public class AjaxDataTablePanel<T, S> extends DataTablePanel<T, S> {\n \n     private static final long serialVersionUID = -7264400471578272966L;\n \n-    private final AjaxFallbackDefaultDataTable<T, S> dataTable;\n-\n     public AjaxDataTablePanel(\n             final String id,\n             final List<IColumn<T, S>> columns,\n@@ -100,7 +96,7 @@ public void onClose(final AjaxRequestTarget target) {\n         Form<T> bulkActionForm = new Form<T>(\"groupForm\");\n         fragment.add(bulkActionForm);\n \n-        final CheckGroup<T> group = new CheckGroup<T>(\"checkgroup\", new ArrayList<T>());\n+        group = new CheckGroup<T>(\"checkgroup\", model);\n         group.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n@@ -109,7 +105,6 @@ public void onClose(final AjaxRequestTarget target) {\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 // triggers AJAX form submit\n             }\n-\n         });\n         bulkActionForm.add(group);\n \n@@ -144,24 +139,4 @@ public Page createPage() {\n             }\n         });\n     }\n-\n-    public final void setCurrentPage(final long page) {\n-        dataTable.setCurrentPage(page);\n-    }\n-\n-    public final long getRowCount() {\n-        return dataTable.getRowCount();\n-    }\n-\n-    public final long getCurrentPage() {\n-        return dataTable.getCurrentPage();\n-    }\n-\n-    public final long getPageCount() {\n-        return dataTable.getPageCount();\n-    }\n-\n-    public void setItemsPerPage(final int resourcePaginatorRows) {\n-        dataTable.setItemsPerPage(resourcePaginatorRows);\n-    }\n }"},{"sha":"0c47ad99fd382dcaaf07819a105dc2adac37256a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DataTablePanel.java","status":"added","additions":113,"deletions":0,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDataTablePanel.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages.panels;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.DataGridView;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class DataTablePanel<T, S> extends Panel {\n+\n+    private static final long serialVersionUID = -7264400471578272966L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(DataTablePanel.class);\n+\n+    protected CheckGroup<T> group;\n+\n+    protected AjaxFallbackDefaultDataTable<T, S> dataTable;\n+\n+    protected IModel<Collection<T>> model;\n+\n+    public DataTablePanel(final String id) {\n+        super(id);\n+\n+        model = new IModel<Collection<T>>() {\n+\n+            private static final long serialVersionUID = 4886729136344643465L;\n+\n+            private Collection<T> values = new HashSet<T>();\n+\n+            @Override\n+            public Collection<T> getObject() {\n+                // Someone or something call this method to change the model: this is not the right behavior.\n+                // Return a copy of the model object in order to avoid SYNCOPE-465\n+                return new HashSet<T>(values);\n+            }\n+\n+            @Override\n+            public void setObject(final Collection<T> selected) {\n+                final Collection<T> all = getGroupModelObjects();\n+                values.removeAll(all);\n+                values.addAll(selected);\n+            }\n+\n+            @Override\n+            public void detach() {\n+            }\n+        };\n+    }\n+\n+    public final void setCurrentPage(final long page) {\n+        dataTable.setCurrentPage(page);\n+    }\n+\n+    public final long getRowCount() {\n+        return dataTable.getRowCount();\n+    }\n+\n+    public final long getCurrentPage() {\n+        return dataTable.getCurrentPage();\n+    }\n+\n+    public final long getPageCount() {\n+        return dataTable.getPageCount();\n+    }\n+\n+    public void setItemsPerPage(final int resourcePaginatorRows) {\n+        dataTable.setItemsPerPage(resourcePaginatorRows);\n+    }\n+\n+    protected Collection<T> getGroupModelObjects() {\n+        final Set<T> res = new HashSet<T>();\n+\n+        final Component rows = group.get(\"dataTable:body:rows\");\n+        if (rows instanceof DataGridView) {\n+            @SuppressWarnings(\"unchecked\")\n+            final Iterator<Item<T>> iter = ((DataGridView<T>) rows).getItems();\n+\n+            while (iter.hasNext()) {\n+                res.add(iter.next().getModelObject());\n+            }\n+        }\n+        return res;\n+    }\n+}"},{"sha":"a4b6f15189750f0f1710357c417257f9dd16f5c4","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6afd2ce9bf994e4fdab2426d9e113aae478e0d4c/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=6afd2ce9bf994e4fdab2426d9e113aae478e0d4c","patch":"@@ -109,6 +109,12 @@ public void browsProvisioningFeatures() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='ws-target-resource-1']\\\");\", \"30000\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='resource-testdb']\\\");\", \"30000\");\n \n+        selenium.click(\"//div[@class='navigator']/div/span[4]/a\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='resource-ldap']\\\");\", \"30000\");\n+\n+        selenium.click(\"//div[@class='navigator']/div/span/a\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='ws-target-resource-1']\\\");\", \"30000\");\n+\n         selenium.click(\"css=a.w_close\");\n     }\n }"}]}