{"sha":"f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0ZWI2ZmFiMGY3ZDcxNzFmMjk0NjNhYzY5YzQ4N2QyZjk3NDBjZjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-23T16:05:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-23T16:05:22Z"},"message":"[SYNCOPE-1418] No more *Context.xml, Spring configuration is all Java","tree":{"sha":"b2ed1eddf06fd04713ff4467ff9f12f9bd104d65","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b2ed1eddf06fd04713ff4467ff9f12f9bd104d65"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cd986b876b9476f0ba79e406deac65de46243385","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cd986b876b9476f0ba79e406deac65de46243385","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cd986b876b9476f0ba79e406deac65de46243385"}],"stats":{"total":1395,"additions":756,"deletions":639},"files":[{"sha":"8859dad0417cddb0730e09e2989b37cd3a380184","filename":"archetype/src/main/resources/archetype-resources/enduser/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -249,7 +249,7 @@ under the License.\n                 <properties>\n                   <cargo.jvmargs>\n                     -Dspring.profiles.active=embedded\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n               <deployables>"},{"sha":"094c502c9db84e0a680edbf6ffb580e40d5fa195","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RESTCXFContext.java","status":"modified","additions":225,"deletions":2,"changes":227,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,18 +18,241 @@\n  */\n package org.apache.syncope.core.rest.cxf;\n \n+import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n+import com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider;\n+import io.swagger.v3.oas.models.security.SecurityScheme;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.Executor;\n+import javax.annotation.Resource;\n import javax.servlet.ServletRequestListener;\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.ext.search.SearchContextImpl;\n+import org.apache.cxf.jaxrs.ext.search.SearchContextProvider;\n+import org.apache.cxf.jaxrs.ext.search.SearchUtils;\n+import org.apache.cxf.jaxrs.openapi.OpenApiFeature;\n+import org.apache.cxf.jaxrs.provider.JAXBElementProvider;\n+import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor;\n+import org.apache.cxf.staxutils.DocumentDepthProperties;\n+import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n+import org.apache.cxf.validation.BeanValidationProvider;\n+import org.apache.syncope.common.lib.search.SyncopeFiqlParser;\n+import org.apache.syncope.common.rest.api.DateParamConverterProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.web.servlet.ServletListenerRegistrationBean;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.ImportResource;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n \n-@ImportResource(\"classpath:/restCXFContext.xml\")\n @ComponentScan(\"org.apache.syncope.core.rest.cxf.service\")\n+@PropertySource(\"classpath:errorMessages.properties\")\n @Configuration\n public class RESTCXFContext {\n \n+    @Autowired\n+    private Bus bus;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n+    @Resource(name = \"version\")\n+    private String version;\n+\n+    @Bean\n+    public Executor batchExecutor() {\n+        ThreadPoolTaskExecutor batchExecutor = new ThreadPoolTaskExecutor();\n+        batchExecutor.setCorePoolSize(10);\n+        batchExecutor.setThreadNamePrefix(\"Batch-\");\n+        batchExecutor.initialize();\n+        return batchExecutor;\n+    }\n+\n+    @Bean\n+    public DateParamConverterProvider dateParamConverterProvider() {\n+        return new DateParamConverterProvider();\n+    }\n+\n+    @Bean\n+    public JAXBElementProvider<?> jaxbProvider() {\n+        JAXBElementProvider<?> jaxbProvider = new JAXBElementProvider<>();\n+        jaxbProvider.setNamespacePrefixes(Collections.singletonMap(\"http://syncope.apache.org/30\", \"syncope30\"));\n+\n+        DocumentDepthProperties documentDepthProperties = new DocumentDepthProperties();\n+        documentDepthProperties.setInnerElementCountThreshold(500);\n+        jaxbProvider.setDepthProperties(documentDepthProperties);\n+\n+        jaxbProvider.setCollectionWrapperMap(\n+                Collections.singletonMap(\"org.apache.syncope.common.lib.policy.PolicyTO\", \"policies\"));\n+\n+        return jaxbProvider;\n+    }\n+\n+    @Bean\n+    public JacksonJaxbJsonProvider jsonProvider() {\n+        JacksonJaxbJsonProvider jsonProvider = new JacksonJaxbJsonProvider();\n+        jsonProvider.setMapper(new UnwrappedObjectMapper());\n+        return jsonProvider;\n+    }\n+\n+    @Bean\n+    public JacksonJaxbYAMLProvider yamlProvider() {\n+        return new JacksonJaxbYAMLProvider();\n+    }\n+\n+    @Bean\n+    public BeanValidationProvider validationProvider() {\n+        return new BeanValidationProvider();\n+    }\n+\n+    @Bean\n+    public JAXRSBeanValidationInInterceptor validationInInterceptor() {\n+        JAXRSBeanValidationInInterceptor validationInInterceptor = new JAXRSBeanValidationInInterceptor();\n+        validationInInterceptor.setProvider(validationProvider());\n+        return validationInInterceptor;\n+    }\n+\n+    @Bean\n+    public JAXRSBeanValidationOutInterceptor validationOutInterceptor() {\n+        JAXRSBeanValidationOutInterceptor validationOutInterceptor = new JAXRSBeanValidationOutInterceptor();\n+        validationOutInterceptor.setProvider(validationProvider());\n+        return validationOutInterceptor;\n+    }\n+\n+    @Bean\n+    public GZIPInInterceptor gzipInInterceptor() {\n+        return new GZIPInInterceptor();\n+    }\n+\n+    @Bean\n+    public GZIPOutInterceptor gzipOutInterceptor() {\n+        GZIPOutInterceptor gzipOutInterceptor = new GZIPOutInterceptor();\n+        gzipOutInterceptor.setThreshold(0);\n+        gzipOutInterceptor.setForce(true);\n+        return gzipOutInterceptor;\n+    }\n+\n+    @Bean\n+    public RestServiceExceptionMapper restServiceExceptionMapper() {\n+        return new RestServiceExceptionMapper();\n+    }\n+\n+    @Bean\n+    public SearchContextProvider searchContextProvider() {\n+        return new SearchContextProvider();\n+    }\n+\n+    @Bean\n+    public CheckDomainFilter checkDomainFilter() {\n+        return new CheckDomainFilter();\n+    }\n+\n+    @Bean\n+    public AddDomainFilter addDomainFilter() {\n+        return new AddDomainFilter();\n+    }\n+\n+    @Bean\n+    public AddETagFilter addETagFilter() {\n+        return new AddETagFilter();\n+    }\n+\n+    @Bean\n+    public WadlGenerator wadlGenerator() {\n+        WadlGenerator wadlGenerator = new WadlGenerator();\n+        wadlGenerator.setApplicationTitle(\"Apache Syncope \" + version);\n+        wadlGenerator.setNamespacePrefix(\"syncope30\");\n+        wadlGenerator.setIncrementNamespacePrefix(false);\n+        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n+        wadlGenerator.setUseJaxbContextForQnames(true);\n+        wadlGenerator.setAddResourceAndMethodIds(true);\n+        wadlGenerator.setIgnoreMessageWriters(true);\n+        wadlGenerator.setUsePathParamsToCompareOperations(false);\n+        return wadlGenerator;\n+    }\n+\n+    @Bean\n+    public OpenApiFeature openapiFeature() {\n+        OpenApiFeature openapiFeature = new OpenApiFeature();\n+        openapiFeature.setTitle(\"Apache Syncope\");\n+        openapiFeature.setVersion(version);\n+        openapiFeature.setDescription(\"Apache Syncope \" + version);\n+        openapiFeature.setContactName(\"The Apache Syncope community\");\n+        openapiFeature.setContactEmail(\"dev@syncope.apache.org\");\n+        openapiFeature.setContactUrl(\"http://syncope.apache.org\");\n+        openapiFeature.setScan(false);\n+        openapiFeature.setResourcePackages(Collections.singleton(\"org.apache.syncope.common.rest.api.service\"));\n+\n+        SyncopeOpenApiCustomizer openApiCustomizer = new SyncopeOpenApiCustomizer(ctx.getEnvironment());\n+        openApiCustomizer.setDynamicBasePath(false);\n+        openApiCustomizer.setReplaceTags(false);\n+        openapiFeature.setCustomizer(openApiCustomizer);\n+\n+        Map<String, SecurityScheme> securityDefinitions = new HashMap<>();\n+        SecurityScheme basicAuth = new SecurityScheme();\n+        basicAuth.setType(SecurityScheme.Type.HTTP);\n+        basicAuth.setScheme(\"basic\");\n+        securityDefinitions.put(\"BasicAuthentication\", basicAuth);\n+        SecurityScheme bearer = new SecurityScheme();\n+        bearer.setType(SecurityScheme.Type.HTTP);\n+        bearer.setScheme(\"bearer\");\n+        bearer.setBearerFormat(\"JWT\");\n+        securityDefinitions.put(\"Bearer\", bearer);\n+        openapiFeature.setSecurityDefinitions(securityDefinitions);\n+\n+        return openapiFeature;\n+    }\n+\n+    @Bean\n+    public Server restContainer() {\n+        SpringJAXRSServerFactoryBean restContainer = new SpringJAXRSServerFactoryBean();\n+        restContainer.setBus(bus);\n+        restContainer.setAddress(\"/\");\n+        restContainer.setStaticSubresourceResolution(true);\n+        restContainer.setBasePackages(Arrays.asList(\n+                \"org.apache.syncope.common.rest.api.service\",\n+                \"org.apache.syncope.core.rest.cxf.service\"));\n+\n+        Map<String, Object> properties = new HashMap<>();\n+        properties.put(SearchContextImpl.CUSTOM_SEARCH_PARSER_CLASS_PROPERTY, SyncopeFiqlParser.class.getName());\n+        properties.put(SearchUtils.LAX_PROPERTY_MATCH, \"true\");\n+        properties.put(\"convert.wadl.resources.to.dom\", \"false\");\n+        restContainer.setProperties(properties);\n+\n+        restContainer.setProviders(Arrays.asList(\n+                dateParamConverterProvider(),\n+                jaxbProvider(),\n+                jsonProvider(),\n+                yamlProvider(),\n+                restServiceExceptionMapper(),\n+                searchContextProvider(),\n+                checkDomainFilter(),\n+                addDomainFilter(),\n+                addETagFilter(),\n+                wadlGenerator()));\n+\n+        restContainer.setInInterceptors(Arrays.asList(\n+                gzipInInterceptor(),\n+                validationInInterceptor()));\n+\n+        restContainer.setOutInterceptors(Arrays.asList(\n+                gzipOutInterceptor(),\n+                validationOutInterceptor()));\n+\n+        restContainer.setFeatures(Arrays.asList(openapiFeature()));\n+\n+        restContainer.setApplicationContext(ctx);\n+        return restContainer.create();\n+    }\n+\n     @Bean\n     public ServletListenerRegistrationBean<ServletRequestListener> listenerRegistrationBean() {\n         ServletListenerRegistrationBean<ServletRequestListener> bean = new ServletListenerRegistrationBean<>();"},{"sha":"d3b1b77d1d85422e354b11c706d406d230f48041","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -56,16 +56,12 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n import org.springframework.core.env.Environment;\n import org.springframework.dao.DataIntegrityViolationException;\n import org.springframework.dao.UncategorizedDataAccessException;\n import org.springframework.security.access.AccessDeniedException;\n import org.springframework.transaction.TransactionSystemException;\n \n-@Configuration\n-@PropertySource(\"classpath:errorMessages.properties\")\n @Provider\n public class RestServiceExceptionMapper implements ExceptionMapper<Exception> {\n "},{"sha":"a6a27915976d8b07266c321bfe18006642e5fbf6","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -49,21 +49,19 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.context.EnvironmentAware;\n import org.springframework.core.env.Environment;\n \n-public class SyncopeOpenApiCustomizer extends OpenApiCustomizer implements EnvironmentAware {\n+public class SyncopeOpenApiCustomizer extends OpenApiCustomizer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(WadlGenerator.class);\n \n-    private Environment env;\n+    private final Environment env;\n \n     private boolean inited = false;\n \n     private List<String> domains;\n \n-    @Override\n-    public void setEnvironment(final Environment env) {\n+    public SyncopeOpenApiCustomizer(final Environment env) {\n         this.env = env;\n     }\n "},{"sha":"d6d6350cfc435ce540576899a507dc25f3103012","filename":"core/idrepo/rest-cxf/src/main/resources/restCXFContext.xml","status":"removed","additions":0,"deletions":171,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,171 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:task=\"http://www.springframework.org/schema/task\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\n-                           http://www.springframework.org/schema/task\n-                           http://www.springframework.org/schema/task/spring-task.xsd\">\n-\n-  <task:executor id=\"batchExecutor\" pool-size=\"10\"/>\n-\n-  <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n-    <property name=\"namespacePrefixes\">\n-      <map>\n-        <entry key=\"http://syncope.apache.org/30\">\n-          <value>syncope30</value>\n-        </entry>\n-      </map>      \n-    </property>\n-    <property name=\"depthProperties\">\n-      <bean id=\"depthProperties\" class=\"org.apache.cxf.staxutils.DocumentDepthProperties\">\n-        <property name=\"innerElementCountThreshold\" value=\"500\"/>\n-      </bean>\n-    </property>\n-    <property name=\"collectionWrapperMap\">\n-      <map>\n-        <entry>\n-          <key>\n-            <value>org.apache.syncope.common.lib.policy.PolicyTO</value>\n-          </key>\n-          <value>policies</value>\n-        </entry>\n-      </map>\n-    </property>\n-  </bean>\n-\n-  <bean id=\"dateParamConverterProvider\" class=\"org.apache.syncope.common.rest.api.DateParamConverterProvider\"/>\n-\n-  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.rest.cxf.UnwrappedObjectMapper\"/>\n-  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\">\n-    <property name=\"mapper\" ref=\"jacksonObjectMapper\"/>\n-  </bean>\n-\n-  <bean id=\"yamlProvider\" class=\"com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider\"/>\n-\n-  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.core.rest.cxf.RestServiceExceptionMapper\"/>\n-\n-  <bean id=\"validationProvider\" class=\"org.apache.cxf.validation.BeanValidationProvider\"/>\n-  <bean id=\"validationInInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>\n-  <bean id=\"validationOutInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>   \n-  \n-  <bean id=\"gzipInInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPInInterceptor\"/>\n-  <bean id=\"gzipOutInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPOutInterceptor\">\n-    <property name=\"threshold\" value=\"0\"/>\n-    <property name=\"force\" value=\"true\"/>\n-  </bean>\n-  \n-  <bean id=\"searchContextProvider\" class=\"org.apache.cxf.jaxrs.ext.search.SearchContextProvider\"/>\n-    \n-  <bean id=\"checkDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.CheckDomainFilter\"/>\n-  <bean id=\"addDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.AddDomainFilter\"/>\n-  <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.rest.cxf.AddETagFilter\"/>\n-  \n-  <bean id=\"wadlGenerator\" class=\"org.apache.syncope.core.rest.cxf.WadlGenerator\">\n-    <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n-    <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n-    <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n-    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n-    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n-    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n-    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n-  </bean>\n-  \n-  <bean id=\"basicAuth\" class=\"io.swagger.v3.oas.models.security.SecurityScheme\">\n-    <property name=\"type\" value=\"HTTP\"/>\n-    <property name=\"scheme\" value=\"basic\"/>\n-  </bean>\n-  <bean id=\"bearer\" class=\"io.swagger.v3.oas.models.security.SecurityScheme\">\n-    <property name=\"type\" value=\"HTTP\"/>\n-    <property name=\"scheme\" value=\"bearer\"/>\n-    <property name=\"bearerFormat\" value=\"JWT\"/>\n-  </bean>\n-  <bean id=\"openApiCustomizer\" class=\"org.apache.syncope.core.rest.cxf.SyncopeOpenApiCustomizer\">\n-    <property name=\"dynamicBasePath\" value=\"false\"/>\n-    <property name=\"replaceTags\" value=\"false\"/>\n-  </bean>\n-  <bean id=\"openapiFeature\" class=\"org.apache.cxf.jaxrs.openapi.OpenApiFeature\">\n-    <property name=\"title\" value=\"Apache Syncope\"/>\n-    <property name=\"version\" value=\"${syncope.version}\"/>\n-    <property name=\"description\" value=\"Apache Syncope ${syncope.version}\"/>    \n-    <property name=\"contactName\" value=\"The Apache Syncope community\"/>    \n-    <property name=\"contactEmail\" value=\"dev@syncope.apache.org\"/>    \n-    <property name=\"contactUrl\" value=\"http://syncope.apache.org\"/>    \n-    \n-    <property name=\"scan\" value=\"false\"/>    \n-    <property name=\"resourcePackages\">\n-      <set>\n-        <value>org.apache.syncope.common.rest.api.service</value>\n-      </set>\n-    </property>\n-\n-    <property name=\"customizer\" ref=\"openApiCustomizer\"/>\n-    \n-    <property name=\"securityDefinitions\">\n-      <map>\n-        <entry key=\"BasicAuthentication\" value-ref=\"basicAuth\"/>\n-        <entry key=\"Bearer\" value-ref=\"bearer\"/>\n-      </map>\n-    </property>\n-  </bean>\n-\n-  <jaxrs:server id=\"restContainer\" address=\"/\"\n-                basePackages=\"org.apache.syncope.common.rest.api.service, org.apache.syncope.core.rest.cxf.service\" \n-                staticSubresourceResolution=\"true\">\n-    <jaxrs:properties>\n-      <entry key=\"search.parser.class\" value=\"org.apache.syncope.common.lib.search.SyncopeFiqlParser\"/>\n-      <entry key=\"search.lax.property.match\" value=\"true\"/>\n-      <entry key=\"convert.wadl.resources.to.dom\" value=\"false\"/>\n-    </jaxrs:properties> \n-    <jaxrs:inInterceptors>\n-      <ref bean=\"gzipInInterceptor\"/>\n-      <ref bean=\"validationInInterceptor\"/>\n-    </jaxrs:inInterceptors>         \n-    <jaxrs:outInterceptors>\n-      <ref bean=\"gzipOutInterceptor\"/>\n-      <ref bean=\"validationOutInterceptor\"/>\n-    </jaxrs:outInterceptors>\n-    <jaxrs:providers>\n-      <ref bean=\"dateParamConverterProvider\"/>\n-      <ref bean=\"jaxbProvider\"/>\n-      <ref bean=\"jsonProvider\"/>\n-      <ref bean=\"yamlProvider\"/>\n-      <ref bean=\"exceptionMapper\"/>\n-      <ref bean=\"searchContextProvider\"/>\n-      <ref bean=\"checkDomainFilter\"/>\n-      <ref bean=\"addDomainFilter\"/>\n-      <ref bean=\"addETagFilter\"/>\n-      <ref bean=\"wadlGenerator\"/>\n-    </jaxrs:providers>\n-    <jaxrs:features>\n-      <ref bean=\"openapiFeature\"/>\n-    </jaxrs:features>\n-  </jaxrs:server>\n-\n-</beans>"},{"sha":"a6304939d7dbd02e62c1a6f0ed5f8f98adfc2da9","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConnInstanceDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Lazy;\n import org.springframework.stereotype.Repository;\n \n @Repository\n@@ -44,6 +45,7 @@ public class JPAConnInstanceDAO extends AbstractDAO<ConnInstance> implements Con\n     private ConnInstanceHistoryConfDAO connInstanceHistoryConfDAO;\n \n     @Autowired\n+    @Lazy\n     private ExternalResourceDAO resourceDAO;\n \n     @Autowired"},{"sha":"4aa21f9415f55594d1ec20e5cdccedd6758627f7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/DomainTransactionInterceptorInjector.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -31,7 +31,7 @@ public class DomainTransactionInterceptorInjector implements BeanFactoryPostProc\n \n     @Override\n     public void postProcessBeanFactory(final ConfigurableListableBeanFactory beanFactory) throws BeansException {\n-        for (String name : beanFactory.getBeanNamesForType(TransactionInterceptor.class)) {\n+        for (String name : beanFactory.getBeanNamesForType(TransactionInterceptor.class, false, false)) {\n             BeanDefinition bd = beanFactory.getBeanDefinition(name);\n             bd.setBeanClassName(DomainTransactionInterceptor.class.getName());\n             bd.setFactoryBeanName(null);"},{"sha":"6cf2a230de430d7781e9f6f7436d0c74de8ddbf0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorManager.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -44,6 +44,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Lazy;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -59,6 +60,7 @@ public class ConnectorManager implements ConnectorRegistry, ConnectorFactory {\n     private RealmDAO realmDAO;\n \n     @Autowired\n+    @Lazy\n     private ExternalResourceDAO resourceDAO;\n \n     @Autowired"},{"sha":"da5e90df16cc0b0223910b0d3ecccb686410784a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":169,"deletions":3,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -19,31 +19,71 @@\n package org.apache.syncope.core.provisioning.java;\n \n import java.lang.reflect.InvocationTargetException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Properties;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import javax.annotation.Resource;\n+import javax.sql.DataSource;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n+import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n+import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.provisioning.java.job.AutowiringSpringBeanJobFactory;\n+import org.apache.syncope.core.provisioning.java.job.JobManagerImpl;\n+import org.apache.syncope.core.provisioning.java.job.SchedulerDBInit;\n+import org.apache.syncope.core.provisioning.java.job.SchedulerShutdown;\n+import org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.EnvironmentAware;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.ImportResource;\n+import org.springframework.context.annotation.DependsOn;\n+import org.springframework.context.annotation.Lazy;\n import org.springframework.context.annotation.PropertySource;\n import org.springframework.core.env.Environment;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+import org.springframework.scheduling.annotation.EnableAsync;\n+import org.springframework.scheduling.annotation.EnableScheduling;\n+import org.springframework.scheduling.annotation.SchedulingConfigurer;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;\n+import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n+import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n+import org.springframework.transaction.PlatformTransactionManager;\n \n @PropertySource(\"classpath:connid.properties\")\n @PropertySource(\"classpath:mail.properties\")\n @PropertySource(\"classpath:provisioning.properties\")\n @PropertySource(value = \"file:${conf.directory}/connid.properties\", ignoreResourceNotFound = true)\n @PropertySource(value = \"file:${conf.directory}/mail.properties\", ignoreResourceNotFound = true)\n @PropertySource(value = \"file:${conf.directory}/provisioning.properties\", ignoreResourceNotFound = true)\n-@ImportResource(\"classpath:/provisioningContext.xml\")\n @ComponentScan(\"org.apache.syncope.core.provisioning.java\")\n+@EnableAsync\n+@EnableScheduling\n @Configuration\n-public class ProvisioningContext implements EnvironmentAware {\n+public class ProvisioningContext implements EnvironmentAware, SchedulingConfigurer {\n+\n+    @Resource(name = \"MasterDataSource\")\n+    private DataSource masterDataSource;\n+\n+    @Resource(name = \"MasterTransactionManager\")\n+    private PlatformTransactionManager masterTransactionManager;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n \n     private Environment env;\n \n@@ -52,6 +92,132 @@ public void setEnvironment(final Environment env) {\n         this.env = env;\n     }\n \n+    /**\n+     * Used by {@link AsyncConnectorFacade}.\n+     *\n+     * @return executor\n+     */\n+    @Bean\n+    public Executor asyncConnectorFacadeExecutor() {\n+        ThreadPoolTaskScheduler batchExecutor = new ThreadPoolTaskScheduler();\n+        batchExecutor.setPoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.poolSize\", Integer.class));\n+        batchExecutor.setThreadNamePrefix(\"AsyncConnectorFacade-\");\n+        batchExecutor.initialize();\n+        return batchExecutor;\n+    }\n+\n+    @Override\n+    public void configureTasks(final ScheduledTaskRegistrar taskRegistrar) {\n+        taskRegistrar.setScheduler(asyncConnectorFacadeExecutor());\n+    }\n+\n+    /**\n+     * Used by {@link org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor}.\n+     *\n+     * @return executor\n+     */\n+    @Bean\n+    public Executor propagationTaskExecutorAsyncExecutor() {\n+        ThreadPoolTaskExecutor propagationTaskExecutorAsyncExecutor = new ThreadPoolTaskExecutor();\n+        propagationTaskExecutorAsyncExecutor.setCorePoolSize(\n+                env.getProperty(\"propagationTaskExecutorAsyncExecutor.corePoolSize\", Integer.class));\n+        propagationTaskExecutorAsyncExecutor.setMaxPoolSize(\n+                env.getProperty(\"propagationTaskExecutorAsyncExecutor.maxPoolSize\", Integer.class));\n+        propagationTaskExecutorAsyncExecutor.setQueueCapacity(\n+                env.getProperty(\"propagationTaskExecutorAsyncExecutor.queueCapacity\", Integer.class));\n+        propagationTaskExecutorAsyncExecutor.setThreadNamePrefix(\"PropagationTaskExecutor-\");\n+        propagationTaskExecutorAsyncExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n+        propagationTaskExecutorAsyncExecutor.initialize();\n+        return propagationTaskExecutorAsyncExecutor;\n+    }\n+\n+    @Bean\n+    public SchedulerDBInit quartzDataSourceInit() {\n+        SchedulerDBInit init = new SchedulerDBInit();\n+        init.setDataSource(masterDataSource);\n+\n+        ResourceDatabasePopulator databasePopulator = new ResourceDatabasePopulator();\n+        databasePopulator.setContinueOnError(true);\n+        databasePopulator.setIgnoreFailedDrops(true);\n+        databasePopulator.setSqlScriptEncoding(StandardCharsets.UTF_8.name());\n+        databasePopulator.setScripts(new ClassPathResource(\"/quartz/\" + env.getProperty(\"quartz.sql\")));\n+        init.setDatabasePopulator(databasePopulator);\n+\n+        return init;\n+    }\n+\n+    @DependsOn(\"quartzDataSourceInit\")\n+    @Lazy(false)\n+    @Bean\n+    public SchedulerFactoryBean scheduler() {\n+        SchedulerFactoryBean scheduler = new SchedulerFactoryBean();\n+        scheduler.setAutoStartup(true);\n+        scheduler.setApplicationContext(ctx);\n+        scheduler.setWaitForJobsToCompleteOnShutdown(true);\n+        scheduler.setOverwriteExistingJobs(true);\n+        scheduler.setDataSource(masterDataSource);\n+        scheduler.setTransactionManager(masterTransactionManager);\n+        scheduler.setJobFactory(new AutowiringSpringBeanJobFactory());\n+\n+        Properties quartzProperties = new Properties();\n+        quartzProperties.setProperty(\n+                \"org.quartz.scheduler.idleWaitTime\", env.getProperty(\"quartz.scheduler.idleWaitTime\", \"30000\"));\n+        quartzProperties.setProperty(\"org.quartz.jobStore.misfireThreshold\", \"6000000\");\n+        quartzProperties.setProperty(\"org.quartz.jobStore.driverDelegateClass\", env.getProperty(\"quartz.jobstore\"));\n+        quartzProperties.setProperty(\"org.quartz.jobStore.isClustered\", \"true\");\n+        quartzProperties.setProperty(\"org.quartz.jobStore.clusterCheckinInterval\", \"20000\");\n+        quartzProperties.setProperty(\"org.quartz.scheduler.instanceName\", \"ClusteredScheduler\");\n+        quartzProperties.setProperty(\"org.quartz.scheduler.instanceId\", \"AUTO\");\n+        quartzProperties.setProperty(\"org.quartz.scheduler.jmx.export\", \"true\");\n+        scheduler.setQuartzProperties(quartzProperties);\n+\n+        return scheduler;\n+    }\n+\n+    @Bean\n+    public SchedulerShutdown schedulerShutdown() {\n+        return new SchedulerShutdown(ctx);\n+    }\n+\n+    @Bean\n+    public JobManager jobManager() {\n+        JobManagerImpl jobManager = new JobManagerImpl();\n+        jobManager.setDisableQuartzInstance(env.getProperty(\"quartz.disableInstance\", Boolean.class, false));\n+        return jobManager;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public JavaMailSender mailSender() {\n+        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();\n+        mailSender.setDefaultEncoding(env.getProperty(\"smtpEncoding\"));\n+        mailSender.setHost(env.getProperty(\"smtpHost\"));\n+        mailSender.setPort(env.getProperty(\"smtpPort\", Integer.class));\n+        mailSender.setUsername(env.getProperty(\"smtpUsername\"));\n+        mailSender.setPassword(env.getProperty(\"smtpPassword\"));\n+        mailSender.setProtocol(env.getProperty(\"smtpProtocol\"));\n+        return mailSender;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public PropagationManager propagationManager() {\n+        return new PropagationManagerImpl();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ConnIdBundleManager connIdBundleManager() {\n+        ConnIdBundleManagerImpl connIdBundleManager = new ConnIdBundleManagerImpl();\n+        connIdBundleManager.setStringLocations(env.getProperty(\"connid.locations\"));\n+        return connIdBundleManager;\n+    }\n+\n+    @Bean\n+    public IntAttrNameParser intAttrNameParser() {\n+        return new IntAttrNameParser();\n+    }\n+\n     @Bean\n     public PropagationTaskExecutor propagationTaskExecutor()\n             throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,"},{"sha":"04e6ddbd1d8dc5d9201b1ff123f19b0e499d1b7d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SchedulerShutdown.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSchedulerShutdown.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSchedulerShutdown.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSchedulerShutdown.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,21 +18,18 @@\n  */\n package org.apache.syncope.core.provisioning.java.job;\n \n-import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.DisposableBean;\n import org.springframework.context.ApplicationContext;\n-import org.springframework.context.ApplicationContextAware;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n \n /**\n  * Clean shutdown for Quartz scheduler.\n  */\n-public class SchedulerShutdown implements ApplicationContextAware, DisposableBean {\n+public class SchedulerShutdown implements DisposableBean {\n \n-    private ApplicationContext ctx;\n+    private final ApplicationContext ctx;\n \n-    @Override\n-    public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n+    public SchedulerShutdown(final ApplicationContext ctx) {\n         this.ctx = ctx;\n     }\n \n@@ -41,5 +38,4 @@ public void destroy() throws Exception {\n         SchedulerFactoryBean scheduler = ctx.getBean(SchedulerFactoryBean.class);\n         scheduler.getScheduler().shutdown();\n     }\n-\n }"},{"sha":"10e510b4ccd9ed0d733a8f681feb4b28ef0346a1","filename":"core/provisioning-java/src/main/resources/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"51ee36b1b31157486c7f0fc7c11f56c7ebe528e2","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"removed","additions":0,"deletions":105,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,105 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:task=\"http://www.springframework.org/schema/task\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/task\n-                           http://www.springframework.org/schema/task/spring-task.xsd\">\n-  \n-  <!-- Used by AsyncConnectorFacade -->\n-  <task:annotation-driven executor=\"asyncConnectorFacadeExecutor\"/>\n-  <task:executor id=\"asyncConnectorFacadeExecutor\"\n-                 pool-size=\"${asyncConnectorFacadeExecutor.poolSize}\"/>\n-\n-  <!-- Used by PriorityPropagationTaskExecutor -->\n-  <task:executor id=\"propagationTaskExecutorAsyncExecutor\"\n-                 pool-size=\"${propagationTaskExecutorAsyncExecutor.poolSize}\"\n-                 queue-capacity=\"${propagationTaskExecutorAsyncExecutor.queueCapacity}\"\n-                 rejection-policy=\"ABORT\"/>\n-\n-  <bean id=\"quartzDataSourceInit\" class=\"org.apache.syncope.core.provisioning.java.job.SchedulerDBInit\">\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"true\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/quartz/${quartz.sql}\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-\n-  <bean id=\"scheduler\" class=\"org.springframework.scheduling.quartz.SchedulerFactoryBean\"\n-        lazy-init=\"false\" depends-on=\"quartzDataSourceInit\">\n-    <property name=\"autoStartup\" value=\"true\"/>\n-    <property name=\"applicationContextSchedulerContextKey\" value=\"applicationContext\"/>\n-    <property name=\"waitForJobsToCompleteOnShutdown\" value=\"true\"/>\n-    <property name=\"overwriteExistingJobs\" value=\"true\"/>\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"transactionManager\" ref=\"MasterTransactionManager\"/>\n-    <property name=\"jobFactory\">\n-      <bean class=\"org.apache.syncope.core.provisioning.java.job.AutowiringSpringBeanJobFactory\"/>\n-    </property>\n-    <property name=\"quartzProperties\">\n-      <props>\n-        <prop key=\"org.quartz.scheduler.idleWaitTime\">${quartz.scheduler.idleWaitTime:30000}</prop>\n-\n-        <prop key=\"org.quartz.jobStore.misfireThreshold\">6000000</prop>\n-        <prop key=\"org.quartz.jobStore.driverDelegateClass\">${quartz.jobstore}</prop>\n-\n-        <prop key=\"org.quartz.jobStore.isClustered\">true</prop>\n-        <prop key=\"org.quartz.jobStore.clusterCheckinInterval\">20000</prop>\n-\n-        <prop key=\"org.quartz.scheduler.instanceName\">ClusteredScheduler</prop>\n-        <prop key=\"org.quartz.scheduler.instanceId\">AUTO</prop>\n-        <prop key=\"org.quartz.scheduler.jmx.export\">true</prop>\n-      </props>\n-    </property>\n-  </bean>\n-  <bean class=\"org.apache.syncope.core.provisioning.java.job.SchedulerShutdown\"/>\n-  <bean class=\"org.apache.syncope.core.provisioning.java.job.JobManagerImpl\">\n-    <property name=\"disableQuartzInstance\" value=\"${quartz.disableInstance:false}\"/>\n-  </bean>\n-  \n-  <bean id=\"mailSender\" class=\"org.springframework.mail.javamail.JavaMailSenderImpl\">\n-    <property name=\"defaultEncoding\" value=\"${smtpEncoding}\"/>\n-    <property name=\"host\" value=\"${smtpHost}\"/>\n-    <property name=\"port\" value=\"${smtpPort}\"/>\n-    <property name=\"username\" value=\"${smtpUser}\"/>\n-    <property name=\"password\" value=\"${smtpPassword}\"/>\n-    <property name=\"protocol\" value=\"${smtpProtocol}\"/>\n-  </bean>\n-\n-  <bean class=\"org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl\"/>\n-\n-  <bean id=\"connIdBundleManager\" class=\"org.apache.syncope.core.provisioning.java.ConnIdBundleManagerImpl\">\n-    <property name=\"stringLocations\" value=\"${connid.locations}\"/>\n-  </bean>\n-\n-  <bean class=\"org.apache.syncope.core.provisioning.java.IntAttrNameParser\"/>\n-</beans>"},{"sha":"65c9ed1e66738a1d3074aa5493397665ea163544","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationFilter.java","status":"modified","additions":2,"deletions":16,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -35,7 +35,6 @@\n import org.springframework.security.core.AuthenticationException;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.security.web.AuthenticationEntryPoint;\n-import org.springframework.util.Assert;\n import org.springframework.web.filter.OncePerRequestFilter;\n \n /**\n@@ -46,10 +45,12 @@ public class JWTAuthenticationFilter extends OncePerRequestFilter {\n \n     private static final Logger LOG = LoggerFactory.getLogger(JWTAuthenticationFilter.class);\n \n+    @Autowired\n     private AuthenticationEntryPoint authenticationEntryPoint;\n \n     private AuthenticationManager authenticationManager;\n \n+    @Autowired\n     private SyncopeAuthenticationDetailsSource authenticationDetailsSource;\n \n     @Autowired\n@@ -58,25 +59,10 @@ public class JWTAuthenticationFilter extends OncePerRequestFilter {\n     @Autowired\n     private DefaultCredentialChecker credentialChecker;\n \n-    public void setAuthenticationEntryPoint(final AuthenticationEntryPoint authenticationEntryPoint) {\n-        this.authenticationEntryPoint = authenticationEntryPoint;\n-    }\n-\n     public void setAuthenticationManager(final AuthenticationManager authenticationManager) {\n         this.authenticationManager = authenticationManager;\n     }\n \n-    public void setAuthenticationDetailsSource(final SyncopeAuthenticationDetailsSource authenticationDetailsSource) {\n-        this.authenticationDetailsSource = authenticationDetailsSource;\n-    }\n-\n-    @Override\n-    public void afterPropertiesSet() {\n-        Assert.notNull(this.authenticationEntryPoint, \"An AuthenticationEntryPoint is required\");\n-        Assert.notNull(this.authenticationManager, \"An AuthenticationManager is required\");\n-        Assert.notNull(this.authenticationDetailsSource, \"AuthenticationDetailsSource required\");\n-    }\n-\n     @Override\n     protected void doFilterInternal(\n             final HttpServletRequest request,"},{"sha":"9b7b57638f48836e4396160c1f8165fe5c6d15a5","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/MustChangePasswordFilter.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.springframework.security.access.AccessDeniedException;\n import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper;\n+import org.springframework.security.web.firewall.FirewalledRequest;\n \n public class MustChangePasswordFilter implements Filter {\n \n@@ -46,15 +46,14 @@ public void destroy() {\n     public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain)\n             throws IOException, ServletException {\n \n-        if (request instanceof SecurityContextHolderAwareRequestWrapper) {\n+        if (request instanceof FirewalledRequest) {\n             boolean isMustChangePassword =\n                     SecurityContextHolder.getContext().getAuthentication().getAuthorities().stream().anyMatch(\n                             authority -> StandardEntitlement.MUST_CHANGE_PASSWORD.equals(authority.getAuthority()));\n \n-            SecurityContextHolderAwareRequestWrapper wrapper =\n-                    SecurityContextHolderAwareRequestWrapper.class.cast(request);\n-            if (isMustChangePassword && !\"POST\".equalsIgnoreCase(wrapper.getMethod())\n-                    && !\"/users/self/changePassword\".equals(wrapper.getPathInfo())) {\n+            FirewalledRequest wrappedRequest = FirewalledRequest.class.cast(request);\n+            if (isMustChangePassword && !\"POST\".equalsIgnoreCase(wrappedRequest.getMethod())\n+                    && !\"/users/self/changePassword\".equals(wrappedRequest.getPathInfo())) {\n \n                 throw new AccessDeniedException(\"Please change your password first\");\n             }"},{"sha":"15efceac60a9838f3adc1ec44e01ac587b3f26ff","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SecurityContext.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -27,18 +27,13 @@\n import org.springframework.context.EnvironmentAware;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.ImportResource;\n import org.springframework.context.annotation.PropertySource;\n import org.springframework.core.env.Environment;\n-import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n \n-@ImportResource(\"classpath:/securityContext.xml\")\n @PropertySource(\"classpath:security.properties\")\n @PropertySource(value = \"file:${conf.directory}/security.properties\", ignoreResourceNotFound = true)\n @Configuration\n-@EnableWebSecurity\n-public class SecurityContext extends WebSecurityConfigurerAdapter implements EnvironmentAware {\n+public class SecurityContext implements EnvironmentAware {\n \n     private Environment env;\n "},{"sha":"13d51e0a2df3cf4ce5ae9b90e2806cd7085273dc","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeAccessDeniedHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAccessDeniedHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAccessDeniedHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAccessDeniedHandler.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -39,5 +39,4 @@ public void handle(final HttpServletRequest request, final HttpServletResponse r\n \n         super.handle(request, response, accessDeniedException);\n     }\n-\n }"},{"sha":"f6db3367dfa8111fdc4763f4145497c9a561d12f","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/WebSecurityContext.java","status":"added","additions":139,"deletions":0,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.spring.security;\n+\n+import javax.annotation.Resource;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.builders.WebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.web.AuthenticationEntryPoint;\n+import org.springframework.security.web.access.AccessDeniedHandler;\n+import org.springframework.security.web.access.intercept.FilterSecurityInterceptor;\n+import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n+import org.springframework.security.web.context.NullSecurityContextRepository;\n+import org.springframework.security.web.context.SecurityContextPersistenceFilter;\n+import org.springframework.security.web.context.SecurityContextRepository;\n+import org.springframework.security.web.firewall.DefaultHttpFirewall;\n+import org.springframework.security.web.firewall.HttpFirewall;\n+\n+@EnableWebSecurity\n+@EnableGlobalMethodSecurity(prePostEnabled = true)\n+public class WebSecurityContext extends WebSecurityConfigurerAdapter {\n+\n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n+    public WebSecurityContext() {\n+        super(true);\n+    }\n+\n+    @Bean\n+    public HttpFirewall allowUrlEncodedSlashHttpFirewall() {\n+        DefaultHttpFirewall firewall = new DefaultHttpFirewall();\n+        firewall.setAllowUrlEncodedSlash(true);\n+        return firewall;\n+    }\n+\n+    @Override\n+    public void configure(final WebSecurity web) throws Exception {\n+        web.httpFirewall(allowUrlEncodedSlashHttpFirewall());\n+    }\n+\n+    @Bean\n+    public UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider() {\n+        return new UsernamePasswordAuthenticationProvider();\n+    }\n+\n+    @Bean\n+    public JWTAuthenticationProvider jwtAuthenticationProvider() {\n+        return new JWTAuthenticationProvider();\n+    }\n+\n+    @Override\n+    protected void configure(final AuthenticationManagerBuilder builder) throws Exception {\n+        builder.\n+                authenticationProvider(usernamePasswordAuthenticationProvider()).\n+                authenticationProvider(jwtAuthenticationProvider());\n+    }\n+\n+    @Bean\n+    public SecurityContextRepository securityContextRepository() {\n+        return new NullSecurityContextRepository();\n+    }\n+\n+    @Bean\n+    public SecurityContextPersistenceFilter securityContextPersistenceFilter() {\n+        return new SecurityContextPersistenceFilter(securityContextRepository());\n+    }\n+\n+    @Bean\n+    public AuthenticationEntryPoint basicAuthenticationEntryPoint() {\n+        SyncopeBasicAuthenticationEntryPoint basicAuthenticationEntryPoint = new SyncopeBasicAuthenticationEntryPoint();\n+        basicAuthenticationEntryPoint.setRealmName(\"Apache Syncope authentication\");\n+        return basicAuthenticationEntryPoint;\n+    }\n+\n+    @Bean\n+    public SyncopeAuthenticationDetailsSource authenticationDetailsSource() {\n+        return new SyncopeAuthenticationDetailsSource();\n+    }\n+\n+    @Bean\n+    public AccessDeniedHandler accessDeniedHandler() {\n+        return new SyncopeAccessDeniedHandler();\n+    }\n+\n+    @Bean\n+    public JWTAuthenticationFilter jwtAuthenticationFilter() throws Exception {\n+        JWTAuthenticationFilter jwtAuthenticationFilter = new JWTAuthenticationFilter();\n+        jwtAuthenticationFilter.setAuthenticationManager(authenticationManager());\n+        return jwtAuthenticationFilter;\n+    }\n+\n+    @Bean\n+    public MustChangePasswordFilter mustChangePasswordFilter() {\n+        return new MustChangePasswordFilter();\n+    }\n+\n+    @Override\n+    protected void configure(final HttpSecurity http) throws Exception {\n+        http.authorizeRequests().\n+                antMatchers(\"/**\").permitAll().and().\n+                sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().\n+                securityContext().securityContextRepository(securityContextRepository()).and().\n+                anonymous().principal(anonymousUser).and().\n+                httpBasic().authenticationEntryPoint(basicAuthenticationEntryPoint()).\n+                authenticationDetailsSource(authenticationDetailsSource()).and().\n+                exceptionHandling().accessDeniedHandler(accessDeniedHandler()).and().\n+                addFilterBefore(jwtAuthenticationFilter(), BasicAuthenticationFilter.class).\n+                addFilterBefore(mustChangePasswordFilter(), FilterSecurityInterceptor.class).\n+                headers().disable().\n+                csrf().disable();\n+    }\n+\n+    @Bean\n+    public AuthDataAccessor authDataAccessor() {\n+        return new AuthDataAccessor();\n+    }\n+}"},{"sha":"954d314e97215a6cda14f0e6ecfbe2ac0e729ca0","filename":"core/spring/src/main/resources/META-INF/spring.factories","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,4 +16,5 @@\n # under the License.\n \n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.core.spring.security.SecurityContext\n+  org.apache.syncope.core.spring.security.SecurityContext,\\\n+  org.apache.syncope.core.spring.security.WebSecurityContext"},{"sha":"a8e0c3d0d50ff29bc21ef279c7b58a79c45e4167","filename":"core/spring/src/main/resources/securityContext.xml","status":"removed","additions":0,"deletions":96,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,96 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:security=\"http://www.springframework.org/schema/security\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/security\n-                           http://www.springframework.org/schema/security/spring-security.xsd\">\n-  \n-  <security:global-method-security pre-post-annotations=\"enabled\"/>\n-\n-  <bean id=\"securityContextRepository\" class='org.springframework.security.web.context.NullSecurityContextRepository'/>\n-  <bean id=\"securityContextPersistenceFilter\"\n-        class=\"org.springframework.security.web.context.SecurityContextPersistenceFilter\">\n-    <constructor-arg ref=\"securityContextRepository\"/>\n-  </bean>\n-\n-  <bean id=\"filterChainProxy\" class=\"org.springframework.security.web.FilterChainProxy\">\n-    <security:filter-chain-map request-matcher=\"ant\">\n-      <security:filter-chain pattern=\"/**\" filters=\"securityContextPersistenceFilter\"/>\n-    </security:filter-chain-map>\n-  </bean>  \n-\n-  <bean id=\"firewall\" class=\"org.springframework.security.web.firewall.DefaultHttpFirewall\">\n-    <property name=\"allowUrlEncodedSlash\" value=\"true\"/>\n-  </bean>\n-  <security:http-firewall ref=\"firewall\"/>\n-\n-  <bean id=\"authenticationDetailsSource\"\n-        class=\"org.apache.syncope.core.spring.security.SyncopeAuthenticationDetailsSource\"/>\n-      \n-  <bean id=\"basicAuthenticationEntryPoint\" \n-        class=\"org.apache.syncope.core.spring.security.SyncopeBasicAuthenticationEntryPoint\">\n-    <property name=\"realmName\" value=\"Apache Syncope authentication\"/>\n-  </bean>\n-  \n-  <bean id=\"jwtAuthenticationFilter\" class=\"org.apache.syncope.core.spring.security.JWTAuthenticationFilter\">\n-    <property name=\"authenticationManager\" ref=\"authenticationManager\"/>\n-    <property name=\"authenticationEntryPoint\" ref=\"basicAuthenticationEntryPoint\"/>\n-    <property name=\"authenticationDetailsSource\" ref=\"authenticationDetailsSource\"/>\n-  </bean>\n-  \n-  <bean id=\"mustChangePasswordFilter\" class=\"org.apache.syncope.core.spring.security.MustChangePasswordFilter\"/>\n-\n-  <bean id=\"syncopeAccessDeniedHandler\" class=\"org.apache.syncope.core.spring.security.SyncopeAccessDeniedHandler\"/>\n-    \n-  <security:http create-session=\"stateless\"\n-                 security-context-repository-ref=\"securityContextRepository\"\n-                 entry-point-ref=\"basicAuthenticationEntryPoint\"\n-                 use-expressions=\"false\" disable-url-rewriting=\"false\"\n-                 pattern=\"/**\">\n-\n-    <security:anonymous username=\"${anonymousUser}\"/>\n-\n-    <security:custom-filter ref=\"jwtAuthenticationFilter\" before=\"BASIC_AUTH_FILTER\"/>\n-    <security:http-basic authentication-details-source-ref=\"authenticationDetailsSource\"/>\n-    \n-    <security:custom-filter before=\"FILTER_SECURITY_INTERCEPTOR\" ref=\"mustChangePasswordFilter\"/>\n-    \n-    <security:access-denied-handler ref=\"syncopeAccessDeniedHandler\"/>\n-    \n-    <security:headers disabled=\"true\"/>\n-    <security:csrf disabled=\"true\"/>\n-  </security:http>\n-\n-  <bean class=\"org.apache.syncope.core.spring.security.AuthDataAccessor\"/>\n-\n-  <bean id=\"usernamePasswordAuthenticationProvider\"\n-        class=\"org.apache.syncope.core.spring.security.UsernamePasswordAuthenticationProvider\"/>\n-\n-  <bean id=\"jwtAuthenticationProvider\"\n-        class=\"org.apache.syncope.core.spring.security.JWTAuthenticationProvider\"/>\n-\n-  <security:authentication-manager alias=\"authenticationManager\">\n-    <security:authentication-provider ref=\"usernamePasswordAuthenticationProvider\"/>\n-    <security:authentication-provider ref=\"jwtAuthenticationProvider\"/>\n-  </security:authentication-manager>\n-</beans>"},{"sha":"dd7f978c2efa39eb82eae5ac6ac7304f256c16a1","filename":"docker/core/src/main/resources/provisioning.properties.mariadb","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"5fedaf8300d89a8cb0138f00d81f40e8a87dc2c9","filename":"docker/core/src/main/resources/provisioning.properties.mssql","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"0d0002b6c617a34b9274dafa9891144c80293cc1","filename":"docker/core/src/main/resources/provisioning.properties.mysql","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"6120d68659b6c7608d5fd5b300584508a3f70e16","filename":"docker/core/src/main/resources/provisioning.properties.pgjsonb","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"10e510b4ccd9ed0d733a8f681feb4b28ef0346a1","filename":"docker/core/src/main/resources/provisioning.properties.postgresql","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"30eb2a246890060bb3ab0651cd1b1a92b806b947","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,8 +18,8 @@ camel.directory=${conf.directory}\n \n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"4a55781057c0374cb275048cadb157d90724a2d5","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/RESTSCIMCXFContext.java","status":"modified","additions":81,"deletions":2,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,12 +18,91 @@\n  */\n package org.apache.syncope.ext.scimv2.cxf;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import javax.annotation.Resource;\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.model.wadl.WadlGenerator;\n+import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.ImportResource;\n \n-@ImportResource(\"classpath:/restSCIMv2CXFContext.xml\")\n @ComponentScan(\"org.apache.syncope.ext.scimv2.cxf.service\")\n @Configuration\n public class RESTSCIMCXFContext {\n+\n+    @Autowired\n+    private Bus bus;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n+    @Resource(name = \"version\")\n+    private String version;\n+\n+    @Bean\n+    public SCIMJacksonJsonProvider scimJacksonJsonProvider() {\n+        return new SCIMJacksonJsonProvider();\n+    }\n+\n+    @Bean\n+    public SCIMExceptionMapper scimExceptionMapper() {\n+        return new SCIMExceptionMapper();\n+    }\n+\n+    @Bean\n+    public AddETagFilter scimAddETagFilter() {\n+        return new AddETagFilter();\n+    }\n+\n+    @Bean\n+    public WadlGenerator scimWADLGenerator() {\n+        WadlGenerator wadlGenerator = new WadlGenerator();\n+        wadlGenerator.setApplicationTitle(\"Apache Syncope SCIMv2 \" + version);\n+        wadlGenerator.setNamespacePrefix(\"syncope30\");\n+        wadlGenerator.setIncrementNamespacePrefix(false);\n+        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n+        wadlGenerator.setUseJaxbContextForQnames(true);\n+        wadlGenerator.setAddResourceAndMethodIds(true);\n+        wadlGenerator.setIgnoreMessageWriters(true);\n+        wadlGenerator.setUsePathParamsToCompareOperations(false);\n+        return wadlGenerator;\n+    }\n+\n+    @Bean\n+    public Server scimv2Container() {\n+        SpringJAXRSServerFactoryBean scimv2Container = new SpringJAXRSServerFactoryBean();\n+        scimv2Container.setBus(bus);\n+        scimv2Container.setAddress(\"/scim\");\n+        scimv2Container.setStaticSubresourceResolution(true);\n+        scimv2Container.setBasePackages(Arrays.asList(\n+                \"org.apache.syncope.ext.scimv2.api.service\",\n+                \"org.apache.syncope.ext.scimv2.cxf.service\"));\n+        scimv2Container.setProperties(Collections.singletonMap(\"convert.wadl.resources.to.dom\", \"false\"));\n+\n+        scimv2Container.setInInterceptors(Arrays.asList(\n+                ctx.getBean(GZIPInInterceptor.class),\n+                ctx.getBean(JAXRSBeanValidationInInterceptor.class)));\n+\n+        scimv2Container.setOutInterceptors(Arrays.asList(\n+                ctx.getBean(GZIPOutInterceptor.class),\n+                ctx.getBean(JAXRSBeanValidationOutInterceptor.class)));\n+\n+        scimv2Container.setProviders(Arrays.asList(\n+                scimJacksonJsonProvider(),\n+                scimExceptionMapper(),\n+                scimAddETagFilter(),\n+                scimWADLGenerator()));\n+\n+        scimv2Container.setApplicationContext(ctx);\n+        return scimv2Container.create();\n+    }\n }"},{"sha":"8c114d80bbbc9d579a6bf888699bdc509ad868d7","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/SCIMJacksonJsonProvider.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMJacksonJsonProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMJacksonJsonProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMJacksonJsonProvider.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -31,7 +31,7 @@\n @Provider\n @Consumes(SCIMConstants.APPLICATION_SCIM_JSON)\n @Produces(SCIMConstants.APPLICATION_SCIM_JSON)\n-public class JacksonSCIMJsonProvider extends JacksonJsonProvider {\n+public class SCIMJacksonJsonProvider extends JacksonJsonProvider {\n \n     private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n \n@@ -43,7 +43,7 @@ protected SimpleDateFormat initialValue() {\n         }\n     };\n \n-    public JacksonSCIMJsonProvider() {\n+    public SCIMJacksonJsonProvider() {\n         super(new ObjectMapper(), BASIC_ANNOTATIONS);\n         _mapperConfig.getConfiguredMapper().disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n         _mapperConfig.getConfiguredMapper().setDateFormat(DATE_FORMAT.get());","previous_filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/JacksonSCIMJsonProvider.java"},{"sha":"f2b503327f0d4e39fea5f26af4fc0c88809afebf","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/restSCIMv2CXFContext.xml","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,67 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\">\n-\n-  <bean id=\"scimJSONProvider\" class=\"org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider\"/>\n-\n-  <bean id=\"scimExceptionMapper\" class=\"org.apache.syncope.ext.scimv2.cxf.SCIMExceptionMapper\"/>\n-\n-  <bean id=\"scimAddETagFilter\" class=\"org.apache.syncope.ext.scimv2.cxf.AddETagFilter\"/>\n-\n-  <bean id=\"scimWADLGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n-    <property name=\"applicationTitle\" value=\"Apache Syncope SCIMv2 ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n-    <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n-    <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n-    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n-    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n-    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n-    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n-  </bean>\n-  \n-  <jaxrs:server id=\"scimv2Container\" address=\"/scim\"\n-                basePackages=\"org.apache.syncope.ext.scimv2.api.service, org.apache.syncope.ext.scimv2.cxf.service\" \n-                staticSubresourceResolution=\"true\">\n-    <jaxrs:properties>\n-      <entry key=\"convert.wadl.resources.to.dom\" value=\"false\"/>\n-    </jaxrs:properties> \n-    <jaxrs:inInterceptors>\n-      <ref bean=\"gzipInInterceptor\"/>\n-      <ref bean=\"validationInInterceptor\"/>\n-    </jaxrs:inInterceptors>  \n-    <jaxrs:outInterceptors>\n-      <ref bean=\"gzipOutInterceptor\"/>\n-      <ref bean=\"validationOutInterceptor\"/>\n-    </jaxrs:outInterceptors>\n-    <jaxrs:providers>\n-      <ref bean=\"scimJSONProvider\"/>\n-      <ref bean=\"scimExceptionMapper\"/>\n-      <ref bean=\"scimAddETagFilter\"/>\n-      <ref bean=\"scimWADLGenerator\"/>\n-    </jaxrs:providers>\n-  </jaxrs:server>\n-\n-</beans>"},{"sha":"7dad743c322d075119e9664b8642ee6ba8f4f066","filename":"fit/build-tools/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -315,7 +315,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>"},{"sha":"0ff003070f44443939f9b99e88e71b0cb93f4e83","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -233,7 +233,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n             server = new LdapServer();\n             server.setTransports(new TcpTransport(Integer.parseInt(\n                     WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext()).\n-                            getBean(\"testds.port\", String.class))));\n+                            getEnvironment().getProperty(\"testds.port\"))));\n             server.setDirectoryService(service);\n \n             server.start();"},{"sha":"4d4abe67840d8f4ad59dbe11d2fafe4abe44c242","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnectorServerStartStopListener.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -68,12 +68,12 @@ public void contextInitialized(final ServletContextEvent sce) {\n         ConnectorServer server = ConnectorServer.newInstance();\n         WebApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext());\n         try {\n-            server.setPort(Integer.parseInt(ctx.getBean(\"testconnectorserver.port\", String.class)));\n+            server.setPort(ctx.getEnvironment().getProperty(\"testconnectorserver.port\", Integer.class));\n \n             server.setBundleURLs(getBundleURLs(ctx));\n \n             server.setKeyHash(SecurityUtil.computeBase64SHA1Hash(\n-                    ctx.getBean(\"testconnectorserver.key\", String.class).toCharArray()));\n+                    ctx.getEnvironment().getProperty(\"testconnectorserver.key\", String.class).toCharArray()));\n \n             server.start();\n             LOG.info(\"ConnId connector server listening on port \" + server.getPort());"},{"sha":"a2dc0d87c787e0e2b5c1eeff3ff4d2d97927e9a9","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/H2StartStopListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -50,7 +50,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n         try {\n             Server h2TestDb = new Server();\n             h2TestDb.runTool(\"-tcp\", \"-tcpDaemon\", \"-web\", \"-webDaemon\",\n-                    \"-webPort\", ctx.getBean(\"testdb.webport\", String.class));\n+                    \"-webPort\", ctx.getEnvironment().getProperty(\"testdb.webport\"));\n \n             context.setAttribute(H2_TESTDB, h2TestDb);\n         } catch (SQLException e) {"},{"sha":"dfec64b97231e0e4c664998b63c6a32222283e6f","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"modified","additions":61,"deletions":2,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,21 +18,32 @@\n  */\n package org.apache.syncope.fit.buildtools;\n \n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import java.util.Arrays;\n import javax.servlet.ServletContext;\n import javax.servlet.ServletException;\n import javax.servlet.ServletRegistration;\n+import javax.xml.ws.Endpoint;\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n+import org.apache.cxf.jaxws.EndpointImpl;\n+import org.apache.syncope.fit.buildtools.cxf.ProvisioningImpl;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n-import org.springframework.context.annotation.ImportResource;\n+import org.springframework.jdbc.datasource.DriverManagerDataSource;\n \n @SpringBootApplication\n-@ImportResource(\"classpath:/buildToolsContext.xml\")\n @ComponentScan(\"org.apache.syncope.fit.buildtools\")\n @EnableAutoConfiguration(exclude = {\n     ErrorMvcAutoConfiguration.class,\n@@ -44,6 +55,54 @@ public static void main(final String[] args) {\n         SpringApplication.run(SyncopeBuildToolsApplication.class, args);\n     }\n \n+    @Value(\"${testdb.driver}\")\n+    private String testDbDriver;\n+\n+    @Value(\"${testdb.url}\")\n+    private String testDbUrl;\n+\n+    @Value(\"${testdb.username}\")\n+    private String testDbUsername;\n+\n+    @Value(\"${testdb.password}\")\n+    private String testDbPassword;\n+\n+    @Autowired\n+    private Bus bus;\n+\n+    @Autowired\n+    private ProvisioningImpl provisioningImpl;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n+    @Bean\n+    public DriverManagerDataSource testDataSource() {\n+        DriverManagerDataSource testDataSource = new DriverManagerDataSource(testDbUrl, testDbUsername, testDbPassword);\n+        testDataSource.setDriverClassName(testDbDriver);\n+        return testDataSource;\n+    }\n+\n+    @Bean\n+    public Endpoint soapProvisioning() {\n+        EndpointImpl soapProvisioning = new EndpointImpl(provisioningImpl);\n+        soapProvisioning.setBus(bus);\n+        soapProvisioning.publish(\"/soap\");\n+        return soapProvisioning;\n+    }\n+\n+    @Bean\n+    public Server restProvisioning() {\n+        SpringJAXRSServerFactoryBean restProvisioning = new SpringJAXRSServerFactoryBean();\n+        restProvisioning.setApplicationContext(ctx);\n+        restProvisioning.setBus(bus);\n+        restProvisioning.setAddress(\"/rest\");\n+        restProvisioning.setStaticSubresourceResolution(true);\n+        restProvisioning.setBasePackages(Arrays.asList(\"org.apache.syncope.fit.buildtools.cxf\"));\n+        restProvisioning.setProviders(Arrays.asList(new JacksonJsonProvider()));\n+        return restProvisioning.create();\n+    }\n+\n     @Override\n     public void onStartup(final ServletContext sc) throws ServletException {\n         sc.addListener(new ConnectorServerStartStopListener());"},{"sha":"73a43a00f3c767bf0dccf38f77abdb9543cb9da2","filename":"fit/build-tools/src/main/resources/application.properties","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -24,3 +24,12 @@ spring.http.encoding.force=true\n \n server.servlet.contextPath=/syncope-fit-build-tools\n cxf.path=/cxf\n+\n+testdb.driver=${testdb.driver}\n+testdb.url=${testdb.url}\n+testdb.username=${testdb.username}\n+testdb.password=${testdb.password}\n+testdb.webport=${testdb.webport}\n+testds.port=${testds.port}\n+testconnectorserver.port=${testconnectorserver.port}\n+testconnectorserver.key=${testconnectorserver.key}"},{"sha":"175073b30583f22d0608f327006e7b1293c6cbc0","filename":"fit/build-tools/src/main/resources/buildToolsContext.xml","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,64 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxws=\"http://cxf.apache.org/jaxws\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxws\n-                           http://cxf.apache.org/schemas/jaxws.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\">\n-\n-  <bean id=\"testDataSource\"\n-        class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-    <property name=\"driverClassName\" value=\"${testdb.driver}\"/>\n-    <property name=\"url\" value=\"${testdb.url}\"/>\n-    <property name=\"username\" value=\"${testdb.username}\"/>\n-    <property name=\"password\" value=\"${testdb.password}\"/>\n-  </bean>\n-\n-  <bean id=\"testds.port\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${testds.port}\"/>\n-  </bean>\n-  <bean id=\"testdb.webport\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${testdb.webport}\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.port\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${testconnectorserver.port}\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.key\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${testconnectorserver.key}\"/>\n-  </bean>  \n-\n-  <jaxws:endpoint id=\"soapProvisioning\" address=\"/soap\" implementor=\"#provisioningImpl\"/>\n-    \n-  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\"/>\n-  <jaxrs:server id=\"restProvisioning\" address=\"/rest\"\n-                basePackages=\"org.apache.syncope.fit.buildtools.cxf\" \n-                staticSubresourceResolution=\"true\">\n-    <jaxrs:providers>\n-      <ref bean=\"jsonProvider\"/>\n-    </jaxrs:providers>\n-  </jaxrs:server>\n-\n-</beans>"},{"sha":"cbf2a8e00836d00d7522fdbd96a94f99ccae5283","filename":"fit/build-tools/src/main/webapp/WEB-INF/jboss-deployment-structure.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -23,6 +23,7 @@ under the License.\n       <subsystem name=\"webservices\"/>\n       <subsystem name=\"jaxrs\"/>\n       <subsystem name=\"jaxws\"/>\n+      <subsystem name=\"jsf\"/>\n     </exclude-subsystems>\n     <dependencies>\n       <module name=\"org.apache.xalan\"/>"},{"sha":"f445fce8d1c3775d4f357f09632ffc75ae638ba8","filename":"fit/console-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -124,7 +124,7 @@ under the License.\n             <properties>\n               <cargo.jvmargs>\n                 -Dspring.profiles.active=embedded\n-                -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+                -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n           </configuration>\n           <deployables>"},{"sha":"dbf54952f1f1303ecf28ed56a2eb321aca08602b","filename":"fit/core-reference/pom.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -265,7 +265,7 @@ under the License.\n             <properties>\n               <cargo.jvmargs>\n                 -Dspring.profiles.active=embedded\n-                -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+                -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n           </configuration>\n           <deployables>\n@@ -1151,7 +1151,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>-Dspring.profiles.active=embedded\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx2048m -Xms1024m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n@@ -1191,7 +1191,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>-Dspring.profiles.active=embedded\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx2048m -Xms1024m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n@@ -1263,7 +1263,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>-Dspring.profiles.active=wildfly,embedded\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx2048m -Xms1024m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n@@ -1310,7 +1310,7 @@ under the License.\n                   <cargo.jvmargs>\n                     -Dspring.profiles.active=embedded\n                     -Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>"},{"sha":"0bccc53c776d5acf34efac32982527bf7f71443d","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -233,7 +233,7 @@ public class ITImplementationLookup implements ImplementationLookup {\n     @Autowired\n     private AnySearchDAO anySearchDAO;\n \n-    @Autowired\n+    @Autowired(required = false)\n     private ElasticsearchInit elasticsearchInit;\n \n     @Override\n@@ -244,7 +244,7 @@ public int getOrder() {\n     @Override\n     public void load(final String domain, final DataSource datasource) {\n         // in case the Elasticsearch extension is enabled, reinit a clean index for all available domains\n-        if (AopUtils.getTargetClass(anySearchDAO).getName().contains(\"Elasticsearch\")) {\n+        if (elasticsearchInit != null && AopUtils.getTargetClass(anySearchDAO).getName().contains(\"Elasticsearch\")) {\n             AuthContextUtils.execWithAuthContext(domain, () -> {\n                 elasticsearchInit.init();\n                 return null;"},{"sha":"a712281b1e173afcc8f46de30ff4381d76409b65","filename":"fit/core-reference/src/main/resources/all/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -18,8 +18,8 @@ camel.directory=${conf.directory}\n \n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"b14490aefe7671a9322a5a0d84adaaf711fd49c8","filename":"fit/core-reference/src/main/resources/all/workflowTestContext.xml","status":"removed","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd986b876b9476f0ba79e406deac65de46243385/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2FworkflowTestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd986b876b9476f0ba79e406deac65de46243385/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2FworkflowTestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2FworkflowTestContext.xml?ref=cd986b876b9476f0ba79e406deac65de46243385","patch":"@@ -1,30 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\" \n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <context:component-scan base-package=\"org.apache.syncope.fit.core.reference.flowable\"/>\n-\n-</beans>"},{"sha":"dd7f978c2efa39eb82eae5ac6ac7304f256c16a1","filename":"fit/core-reference/src/main/resources/mariadb/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"539ed8481337ea7171d84f2710698a324ee104e2","filename":"fit/core-reference/src/main/resources/mysql/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"4208cce5469dc7f95750ab554e8cea1a0446dce4","filename":"fit/core-reference/src/main/resources/oracle/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"6120d68659b6c7608d5fd5b300584508a3f70e16","filename":"fit/core-reference/src/main/resources/pgjsonb/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"6120d68659b6c7608d5fd5b300584508a3f70e16","filename":"fit/core-reference/src/main/resources/postgres/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"b9040c1ad56a1ce4b06903ce86c3fb309ee2d82d","filename":"fit/core-reference/src/main/resources/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"5fedaf8300d89a8cb0138f00d81f40e8a87dc2c9","filename":"fit/core-reference/src/main/resources/sqlserver/provisioning.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -16,8 +16,8 @@\n # under the License.\n asyncConnectorFacadeExecutor.poolSize=10\n \n-# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n-propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n propagationTaskExecutorAsyncExecutor.queueCapacity=100\n propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n "},{"sha":"17a44baac6a58f583bee1ba2ad9d2469f35a74b9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/OpenAPIITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOpenAPIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOpenAPIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOpenAPIITCase.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -39,7 +39,7 @@ public class OpenAPIITCase extends AbstractITCase {\n     public void openapi() throws IOException {\n         WebClient webClient = WebClient.create(ADDRESS + \"/openapi.json\").accept(MediaType.APPLICATION_JSON_TYPE);\n         Response response = webClient.get();\n-        assumeTrue(response.getStatus() == 200);\n+        assertEquals(200, response.getStatus());\n \n         JsonNode tree = new ObjectMapper().readTree((InputStream) response.getEntity());\n         assertNotNull(tree);"},{"sha":"081203b9acc554075a2a368c34d87b20af91b633","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -63,7 +63,7 @@\n import org.apache.syncope.ext.scimv2.api.data.Value;\n import org.apache.syncope.ext.scimv2.api.type.ErrorType;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n-import org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider;\n+import org.apache.syncope.ext.scimv2.cxf.SCIMJacksonJsonProvider;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -123,7 +123,7 @@ private static boolean isSCIMAvailable(final WebClient webClient) {\n     }\n \n     private WebClient webClient() {\n-        return WebClient.create(SCIM_ADDRESS, Arrays.asList(new JacksonSCIMJsonProvider())).\n+        return WebClient.create(SCIM_ADDRESS, Arrays.asList(new SCIMJacksonJsonProvider())).\n                 accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n                 type(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n                 header(HttpHeaders.AUTHORIZATION, \"Bearer \" + adminClient.getJWT());"},{"sha":"7fa2cb1c2ef47a5f5f5cffb9f8e2b562550825fd","filename":"fit/enduser-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fenduser-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4eb6fab0f7d7171f29463ac69c487d2f9740cf2/fit%2Fenduser-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fpom.xml?ref=f4eb6fab0f7d7171f29463ac69c487d2f9740cf2","patch":"@@ -246,7 +246,7 @@ under the License.\n             <properties>\n               <cargo.jvmargs>\n                 -Dspring.profiles.active=embedded\n-                -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+                -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n           </configuration>\n           <deployables>"}]}