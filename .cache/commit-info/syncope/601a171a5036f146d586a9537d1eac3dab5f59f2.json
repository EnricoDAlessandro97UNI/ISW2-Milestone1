{"sha":"601a171a5036f146d586a9537d1eac3dab5f59f2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYwMWExNzFhNTAzNmYxNDZkNTg2YTk1MzdkMWVhYzNkYWI1ZjU5ZjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-10T10:02:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-10T10:02:43Z"},"message":"[SYNCOPE-766] Small improvements","tree":{"sha":"976d8b5d2af2b19203306e893316383c026f9b9f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/976d8b5d2af2b19203306e893316383c026f9b9f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/601a171a5036f146d586a9537d1eac3dab5f59f2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/601a171a5036f146d586a9537d1eac3dab5f59f2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/601a171a5036f146d586a9537d1eac3dab5f59f2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/601a171a5036f146d586a9537d1eac3dab5f59f2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"29928e1e730abbae976e37414679d89fe68fd387","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/29928e1e730abbae976e37414679d89fe68fd387","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/29928e1e730abbae976e37414679d89fe68fd387"}],"stats":{"total":105,"additions":59,"deletions":46},"files":[{"sha":"f0671f92510e2d582ee4d5da2824381a26192318","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":25,"deletions":11,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -58,9 +58,9 @@\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.request.resource.ResourceReference;\n import org.apache.wicket.resource.DynamicJQueryResourceReference;\n+import org.apache.wicket.util.lang.Args;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.util.Assert;\n \n public class SyncopeConsoleApplication extends AuthenticatedWebApplication {\n \n@@ -91,6 +91,8 @@ public static SyncopeConsoleApplication get() {\n \n     private String activitiModelerDirectory;\n \n+    private Long reconciliationReportKey;\n+\n     private SyncopeClientFactoryBean clientFactory;\n \n     private Map<String, Class<? extends BasePage>> pageClasses;\n@@ -136,24 +138,24 @@ protected void init() {\n             throw new WicketRuntimeException(\"Could not read \" + CONSOLE_PROPERTIES, e);\n         }\n         version = props.getProperty(\"version\");\n-        Assert.notNull(version, \"<version> not set\");\n+        Args.notNull(version, \"<version> not set\");\n         site = props.getProperty(\"site\");\n-        Assert.notNull(site, \"<site> not set\");\n+        Args.notNull(site, \"<site> not set\");\n         license = props.getProperty(\"license\");\n-        Assert.notNull(license, \"<license> not set\");\n+        Args.notNull(license, \"<license> not set\");\n         anonymousUser = props.getProperty(\"anonymousUser\");\n-        Assert.notNull(anonymousUser, \"<anonymousUser> not set\");\n+        Args.notNull(anonymousUser, \"<anonymousUser> not set\");\n         anonymousKey = props.getProperty(\"anonymousKey\");\n-        Assert.notNull(anonymousKey, \"<anonymousKey> not set\");\n+        Args.notNull(anonymousKey, \"<anonymousKey> not set\");\n \n         String scheme = props.getProperty(\"scheme\");\n-        Assert.notNull(scheme, \"<scheme> not set\");\n+        Args.notNull(scheme, \"<scheme> not set\");\n         String host = props.getProperty(\"host\");\n-        Assert.notNull(host, \"<host> not set\");\n+        Args.notNull(host, \"<host> not set\");\n         String port = props.getProperty(\"port\");\n-        Assert.notNull(port, \"<port> not set\");\n+        Args.notNull(port, \"<port> not set\");\n         String rootPath = props.getProperty(\"rootPath\");\n-        Assert.notNull(rootPath, \"<rootPath> not set\");\n+        Args.notNull(rootPath, \"<rootPath> not set\");\n \n         clientFactory = new SyncopeClientFactoryBean().setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath);\n \n@@ -193,7 +195,15 @@ protected void init() {\n         mountPage(\"/login\", getSignInPageClass());\n \n         activitiModelerDirectory = props.getProperty(\"activitiModelerDirectory\");\n-        Assert.notNull(activitiModelerDirectory, \"<activitiModelerDirectory> not set\");\n+        Args.notNull(activitiModelerDirectory, \"<activitiModelerDirectory> not set\");\n+\n+        try {\n+            reconciliationReportKey = Long.valueOf(props.getProperty(\"reconciliationReportKey\"));\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"While parsing reconciliationReportKey\", e);\n+        }\n+        Args.notNull(reconciliationReportKey, \"<reconciliationReportKey> not set\");\n+\n         mountResource(\"/\" + ACTIVITI_MODELER_CONTEXT, new ResourceReference(ACTIVITI_MODELER_CONTEXT) {\n \n             private static final long serialVersionUID = -128426276529456602L;\n@@ -275,6 +285,10 @@ public String getActivitiModelerDirectory() {\n         return activitiModelerDirectory;\n     }\n \n+    public Long getReconciliationReportKey() {\n+        return reconciliationReportKey;\n+    }\n+\n     public SyncopeClientFactoryBean getClientFactory() {\n         return clientFactory;\n     }"},{"sha":"71ddcdfebdc72ba697c662e68116c71bd9a24b3d","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":26,"deletions":17,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -36,6 +36,7 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n@@ -97,8 +98,6 @@ public class ReconciliationWidget extends BaseWidget {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ReconciliationWidget.class);\n \n-    private static final long RECONCILIATION_REPORT_KEY = 2L;\n-\n     private static final int ROWS = 10;\n \n     private final BaseModal<Any> detailsModal = new BaseModal<>(\"detailsModal\");\n@@ -122,26 +121,34 @@ public ReconciliationWidget(final String id, final PageReference pageRef) {\n         overlay.setVisible(false);\n         add(overlay);\n \n-        ReportTO reconciliationReport = restClient.read(RECONCILIATION_REPORT_KEY);\n+        ReportTO reconciliationReport = null;\n+        try {\n+            reconciliationReport = restClient.read(SyncopeConsoleApplication.get().getReconciliationReportKey());\n+        } catch (Exception e) {\n+            LOG.error(\"Could not fetch the expected reconciliation report with key {}, aborting\",\n+                    SyncopeConsoleApplication.get().getReconciliationReportKey(), e);\n+        }\n \n-        Fragment reportResult = reconciliationReport.getExecutions().isEmpty()\n+        Fragment reportResult = reconciliationReport == null || reconciliationReport.getExecutions().isEmpty()\n                 ? new Fragment(\"reportResult\", \"noExecFragment\", this)\n                 : buildExecFragment();\n         reportResult.setOutputMarkupId(true);\n         add(reportResult);\n \n-        add(new WebSocketBehavior() {\n+        if (reconciliationReport != null) {\n+            add(new WebSocketBehavior() {\n \n-            private static final long serialVersionUID = 3507933905864454312L;\n+                private static final long serialVersionUID = 3507933905864454312L;\n \n-            @Override\n-            protected void onConnect(final ConnectedMessage message) {\n-                super.onConnect(message);\n+                @Override\n+                protected void onConnect(final ConnectedMessage message) {\n+                    super.onConnect(message);\n \n-                SyncopeConsoleSession.get().scheduleAtFixedRate(\n-                        new ReconciliationJobInfoUpdater(message), 0, 10, TimeUnit.SECONDS);\n-            }\n-        });\n+                    SyncopeConsoleSession.get().scheduleAtFixedRate(\n+                            new ReconciliationJobInfoUpdater(message), 0, 10, TimeUnit.SECONDS);\n+                }\n+            });\n+        }\n \n         add(new IndicatorAjaxLink<Void>(\"refresh\") {\n \n@@ -150,7 +157,7 @@ protected void onConnect(final ConnectedMessage message) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    restClient.startExecution(RECONCILIATION_REPORT_KEY, null);\n+                    restClient.startExecution(SyncopeConsoleApplication.get().getReconciliationReportKey(), null);\n \n                     overlay.setVisible(true);\n                     target.add(ReconciliationWidget.this);\n@@ -236,7 +243,7 @@ private Pair<List<ProgressBean>, ReconciliationReport> parseReconciliationReport\n \n             @Override\n             public boolean evaluate(final ExecTO exec) {\n-                return exec.getRefKey() == RECONCILIATION_REPORT_KEY;\n+                return exec.getRefKey() == SyncopeConsoleApplication.get().getReconciliationReportKey();\n             }\n         });\n         if (exec == null) {\n@@ -501,11 +508,13 @@ public void run() {\n \n                             @Override\n                             public boolean evaluate(final JobTO jobTO) {\n-                                return RECONCILIATION_REPORT_KEY == jobTO.getRefKey();\n+                                return SyncopeConsoleApplication.get().\n+                                        getReconciliationReportKey().equals(jobTO.getRefKey());\n                             }\n                         });\n                         if (reportJobTO != null && !reportJobTO.isRunning()) {\n-                            LOG.debug(\"Report {} is not running\", RECONCILIATION_REPORT_KEY);\n+                            LOG.debug(\"Report {} is not running\",\n+                                    SyncopeConsoleApplication.get().getReconciliationReportKey());\n \n                             WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(application);\n                             WebSocketPushBroadcaster broadcaster ="},{"sha":"9a795d1c613c8532f4ed9e78fe6c012d03942c1a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReportParser.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.widgets.reconciliation;\n \n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.Date;\n@@ -176,13 +174,6 @@ public boolean evaluate(final Anys anys) {\n             streamReader.next();\n         }\n \n-        try {\n-            System.out.println(\"QQQQQQQQQ\\n\" + new ObjectMapper().writeValueAsString(report));\n-        } catch (JsonProcessingException ex) {\n-            System.err.println(\"nuuuuuuuuuuuuuuuuuuuuuuuu\");\n-            ex.printStackTrace();\n-        }\n-\n         return report;\n     }\n "},{"sha":"24169f5ba508374d45cafa88552225e592f0260b","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -30,6 +30,8 @@ rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n \n+reconciliationReportKey=1\n+\n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology"},{"sha":"bf972c45de23de8ce810e347699719a9a9d836eb","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/MailTemplateTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -117,8 +117,7 @@ public void optin() throws IOException {\n                 ctx);\n \n         assertNotNull(htmlBody);\n-        System.out.println(\"AAAAAAAAAAAAA\\n\" + htmlBody);\n-        \n+\n         assertTrue(htmlBody.contains(\"Hi John Doe,\"));\n         assertTrue(htmlBody.contains(\"Your email address is john.doe@syncope.apache.org.\"));\n         assertTrue(htmlBody.contains(\"<li>another@syncope.apache.org</li>\"));"},{"sha":"0de5557f85ff721e8cd71b21dd80520ca44c5626","filename":"fit/console-reference/src/main/resources/console.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -30,6 +30,8 @@ rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n \n+reconciliationReportKey=2\n+\n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology"},{"sha":"389a7be558fec57e7fded0c4c7aba8358bf90421","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -61,13 +61,8 @@ public void createParameter() {\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        try {\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        } catch(Throwable t) {\n-            System.err.println(\"EEEEEEEEEEEEEE \" + wicketTester.getLastResponseAsString());\n-            t.printStackTrace();\n-        }\n-        \n+\n         wicketTester.cleanupFeedbackMessages();\n         wicketTester.assertRenderedPage(Parameters.class);\n     }"},{"sha":"5a1c8510cea886132a074ffa3bc39ef0a59be875","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.fit.console;\n \n-import static org.apache.syncope.fit.console.AbstractConsoleITCase.KEY;\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;"},{"sha":"0de5557f85ff721e8cd71b21dd80520ca44c5626","filename":"fit/core-reference/src/test/resources/console.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/601a171a5036f146d586a9537d1eac3dab5f59f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=601a171a5036f146d586a9537d1eac3dab5f59f2","patch":"@@ -30,6 +30,8 @@ rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n \n+reconciliationReportKey=2\n+\n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology"}]}