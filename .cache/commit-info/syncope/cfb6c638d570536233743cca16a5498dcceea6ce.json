{"sha":"cfb6c638d570536233743cca16a5498dcceea6ce","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNmYjZjNjM4ZDU3MDUzNjIzMzc0M2NjYTE2YTU0OThkY2NlZWE2Y2U=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-27T15:16:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-27T15:16:27Z"},"message":"[SYNCOPE-1131] Missing resource removal before delete (for realms)","tree":{"sha":"d2b20e001a2fbd8106cfdc0bf7b0b855a6ca345c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d2b20e001a2fbd8106cfdc0bf7b0b855a6ca345c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cfb6c638d570536233743cca16a5498dcceea6ce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfb6c638d570536233743cca16a5498dcceea6ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cfb6c638d570536233743cca16a5498dcceea6ce","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfb6c638d570536233743cca16a5498dcceea6ce/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c12106de4480d03c9b331ef72f5fa4a0bb65c246","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c12106de4480d03c9b331ef72f5fa4a0bb65c246","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c12106de4480d03c9b331ef72f5fa4a0bb65c246"}],"stats":{"total":29,"additions":29,"deletions":0},"files":[{"sha":"5cefafb4afd38f0f53032fdff042c5ff6194dbbd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RealmDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java?ref=cfb6c638d570536233743cca16a5498dcceea6ce","patch":"@@ -22,6 +22,7 @@\n import java.util.regex.Pattern;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n+import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n \n public interface RealmDAO extends DAO<Realm> {\n \n@@ -33,6 +34,8 @@ public interface RealmDAO extends DAO<Realm> {\n \n     Realm findByFullPath(String fullPath);\n \n+    List<Realm> findByResource(ExternalResource resource);\n+\n     <T extends Policy> List<Realm> findByPolicy(T policy);\n \n     List<Realm> findAncestors(Realm realm);"},{"sha":"03a0fe54f7e51666d7d3dd34679777163a8eb3de","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAExternalResourceDAO.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java?ref=cfb6c638d570536233743cca16a5498dcceea6ce","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n@@ -37,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n+import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -72,6 +74,8 @@ public class JPAExternalResourceDAO extends AbstractDAO<ExternalResource> implem\n \n     private VirSchemaDAO virSchemaDAO;\n \n+    private RealmDAO realmDAO;\n+\n     private TaskDAO taskDAO() {\n         synchronized (this) {\n             if (taskDAO == null) {\n@@ -126,6 +130,15 @@ private VirSchemaDAO virSchemaDAO() {\n         return virSchemaDAO;\n     }\n \n+    private RealmDAO realmDAO() {\n+        synchronized (this) {\n+            if (realmDAO == null) {\n+                realmDAO = ApplicationContextProvider.getApplicationContext().getBean(RealmDAO.class);\n+            }\n+        }\n+        return realmDAO;\n+    }\n+\n     @Override\n     public int count() {\n         Query query = entityManager().createQuery(\n@@ -244,6 +257,9 @@ public void delete(final String name) {\n         taskDAO().deleteAll(resource, TaskType.PULL);\n         taskDAO().deleteAll(resource, TaskType.PUSH);\n \n+        for (Realm realm : realmDAO().findByResource(resource)) {\n+            realm.getResources().remove(resource);\n+        }\n         for (AnyObject anyObject : anyObjectDAO().findByResource(resource)) {\n             anyObject.getResources().remove(resource);\n         }"},{"sha":"87cd26f10063235453682ec03da0d7c55205cf0e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARealmDAO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfb6c638d570536233743cca16a5498dcceea6ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java?ref=cfb6c638d570536233743cca16a5498dcceea6ce","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n+import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -116,6 +117,15 @@ private <T extends Policy> List<Realm> findSamePolicyChildren(final Realm realm,\n         return result;\n     }\n \n+    @Override\n+    public List<Realm> findByResource(final ExternalResource resource) {\n+        TypedQuery<Realm> query = entityManager().createQuery(\"SELECT e FROM \" + JPARealm.class.getSimpleName() + \" e \"\n+                + \"WHERE :resource MEMBER OF e.resources\", Realm.class);\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public <T extends Policy> List<Realm> findByPolicy(final T policy) {\n         if (PullPolicy.class.isAssignableFrom(policy.getClass())) {"}]}