{"sha":"f0e0199fc70774bcab8e2bfb0304cf0a05d15728","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYwZTAxOTlmYzcwNzc0YmNhYjhlMmJmYjAzMDRjZjBhMDVkMTU3Mjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-06T12:31:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-06T12:32:01Z"},"message":"[SYNCOPE-1062] Better management of @Transactional with Propagation.REQUIRES_NEW for create / update / delete during pull","tree":{"sha":"b3a1ff7ca0a6a59e8795d4c82be822f3aa66d4ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b3a1ff7ca0a6a59e8795d4c82be822f3aa66d4ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f0e0199fc70774bcab8e2bfb0304cf0a05d15728","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f0e0199fc70774bcab8e2bfb0304cf0a05d15728","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f0e0199fc70774bcab8e2bfb0304cf0a05d15728","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1830e9222630e511f122923bb9118a12013f941f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1830e9222630e511f122923bb9118a12013f941f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1830e9222630e511f122923bb9118a12013f941f"}],"stats":{"total":275,"additions":214,"deletions":61},"files":[{"sha":"113dbba18f924cdd7d3af96b7a8bfb0ff5a3c24c","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -1028,7 +1028,7 @@ under the License.\n                mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"a234bde8-b431-408c-8ec9-c986c5b7f98d\" connObjectKey=\"0\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n                extAttrName=\"SURNAME\" intAttrName=\"fullname\" \n-               mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n+               mandatoryCondition=\"false\" password=\"0\" purpose=\"PULL\"/>\n   <MappingItem id=\"51a856de-ae25-41cd-967a-86920c834b70\" connObjectKey=\"1\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n                extAttrName=\"ID\" intAttrName=\"firstname\" \n                mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n@@ -1040,7 +1040,7 @@ under the License.\n                mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"e7215305-93c9-460b-b862-46f7b60de72d\" connObjectKey=\"0\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n                extAttrName=\"EMAIL\" intAttrName=\"userId\" \n-               mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n+               mandatoryCondition=\"false\" password=\"0\" purpose=\"PULL\"/>\n               \n   <Provision id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\" resource_id=\"resource-db-virattr\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"45280585-308f-4571-9788-c7a4734b3614\" provision_id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\"/>"},{"sha":"33b1f60a283934af4b7388dbb34c603f1b7e9539","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/AnyObjectProvisioningManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -20,11 +20,16 @@\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n \n public interface AnyObjectProvisioningManager extends ProvisioningManager<AnyObjectTO, AnyObjectPatch> {\n \n+    Pair<String, List<PropagationStatus>> create(\n+            AnyObjectTO anyObjectTO, Set<String> excludedResources, boolean nullPriorityAsync);\n+\n     List<PropagationStatus> provision(String key, Collection<String> resources, boolean nullPriorityAsync);\n }"},{"sha":"0fabe155f6a2e18a5fa7fefab104c7e815e6fe6f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ProvisioningManager.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -30,8 +30,6 @@\n \n     Pair<String, List<PropagationStatus>> create(T anyTO, boolean nullPriorityAsync);\n \n-    Pair<String, List<PropagationStatus>> create(T anyTO, Set<String> excludedResources, boolean nullPriorityAsync);\n-\n     Pair<String, List<PropagationStatus>> update(P patch, boolean nullPriorityAsync);\n \n     Pair<String, List<PropagationStatus>> update(P patch, Set<String> excludedResources, boolean nullPriorityAsync);"},{"sha":"780cd49443346e4a3f035c309e55bcb8d39f689c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -41,6 +41,8 @@\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class DefaultAnyObjectProvisioningManager implements AnyObjectProvisioningManager {\n \n@@ -66,6 +68,7 @@ public Pair<String, List<PropagationStatus>> create(\n         return create(anyObjectTO, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> create(\n             final AnyObjectTO anyObjectTO, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n@@ -90,6 +93,7 @@ public Pair<String, List<PropagationStatus>> update(\n         return update(anyObjectPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> update(\n             final AnyObjectPatch anyObjectPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n@@ -114,6 +118,7 @@ public List<PropagationStatus> delete(final String key, final boolean nullPriori\n         return delete(key, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n             final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {"},{"sha":"13f19a0044e100ca3104f749ba072469cd6a725e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -46,6 +46,8 @@\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class DefaultGroupProvisioningManager implements GroupProvisioningManager {\n \n@@ -68,27 +70,21 @@ public class DefaultGroupProvisioningManager implements GroupProvisioningManager\n     protected VirAttrHandler virtAttrHandler;\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> create(final GroupTO group, final boolean nullPriorityAsync) {\n-        return create(group, Collections.<String>emptySet(), nullPriorityAsync);\n-    }\n-\n-    @Override\n-    public Pair<String, List<PropagationStatus>> create(\n-            final GroupTO groupTO, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n-\n+    public Pair<String, List<PropagationStatus>> create(final GroupTO groupTO, final boolean nullPriorityAsync) {\n         WorkflowResult<String> created = gwfAdapter.create(groupTO);\n \n         List<PropagationTask> tasks = propagationManager.getCreateTasks(\n                 AnyTypeKind.GROUP,\n                 created.getResult(),\n                 created.getPropByRes(),\n                 groupTO.getVirAttrs(),\n-                excludedResources);\n+                Collections.<String>emptySet());\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses());\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> create(\n             final GroupTO groupTO,\n@@ -120,6 +116,7 @@ public Pair<String, List<PropagationStatus>> update(final GroupPatch groupPatch,\n         return update(groupPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> update(\n             final GroupPatch groupPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n@@ -144,6 +141,7 @@ public List<PropagationStatus> delete(final String key, final boolean nullPriori\n         return delete(key, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n             final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {"},{"sha":"ae1090f88f1eee2d9573c103bd408a757b41db42","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -53,6 +53,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class DefaultUserProvisioningManager implements UserProvisioningManager {\n \n@@ -85,13 +87,7 @@ public Pair<String, List<PropagationStatus>> create(\n         return create(userTO, storePassword, false, null, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n-    @Override\n-    public Pair<String, List<PropagationStatus>> create(\n-            final UserTO userTO, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n-\n-        return create(userTO, false, false, null, excludedResources, nullPriorityAsync);\n-    }\n-\n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> create(\n             final UserTO userTO,\n@@ -105,15 +101,15 @@ public Pair<String, List<PropagationStatus>> create(\n                 uwfAdapter.create(userTO, disablePwdPolicyCheck, enabled, storePassword);\n \n         List<PropagationTask> tasks = propagationManager.getUserCreateTasks(\n-                created.getResult().getKey(),\n+                created.getResult().getLeft(),\n                 userTO.getPassword(),\n-                created.getResult().getValue(),\n+                created.getResult().getRight(),\n                 created.getPropByRes(),\n                 userTO.getVirAttrs(),\n                 excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses());\n+        return new ImmutablePair<>(created.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override\n@@ -123,7 +119,7 @@ public Pair<String, List<PropagationStatus>> update(final UserPatch userPatch, f\n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return new ImmutablePair<>(updated.getResult().getKey().getKey(), propagationReporter.getStatuses());\n+        return new ImmutablePair<>(updated.getResult().getLeft().getKey(), propagationReporter.getStatuses());\n     }\n \n     @Override\n@@ -133,6 +129,7 @@ public Pair<String, List<PropagationStatus>> update(\n         return update(userPatch, new ProvisioningReport(), null, excludedResources, nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> update(\n             final UserPatch userPatch,\n@@ -178,17 +175,18 @@ public Pair<String, List<PropagationStatus>> update(\n         }\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n-                updated, updated.getResult().getKey().getPassword() != null, excludedResources);\n+                updated, updated.getResult().getLeft().getPassword() != null, excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return new ImmutablePair<>(updated.getResult().getKey().getKey(), propagationReporter.getStatuses());\n+        return new ImmutablePair<>(updated.getResult().getLeft().getKey(), propagationReporter.getStatuses());\n     }\n \n     @Override\n     public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n         return delete(key, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n             final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n@@ -220,12 +218,12 @@ public List<PropagationStatus> delete(\n     @Override\n     public String unlink(final UserPatch userPatch) {\n         WorkflowResult<Pair<UserPatch, Boolean>> updated = uwfAdapter.update(userPatch);\n-        return updated.getResult().getKey().getKey();\n+        return updated.getResult().getLeft().getKey();\n     }\n \n     @Override\n     public String link(final UserPatch userPatch) {\n-        return uwfAdapter.update(userPatch).getResult().getKey().getKey();\n+        return uwfAdapter.update(userPatch).getResult().getLeft().getKey();\n     }\n \n     @Override\n@@ -284,14 +282,14 @@ public void internalSuspend(final String key) {\n         Pair<WorkflowResult<String>, Boolean> updated = uwfAdapter.internalSuspend(key);\n \n         // propagate suspension if and only if it is required by policy\n-        if (updated != null && updated.getValue()) {\n+        if (updated != null && updated.getRight()) {\n             UserPatch userPatch = new UserPatch();\n-            userPatch.setKey(updated.getKey().getResult());\n+            userPatch.setKey(updated.getLeft().getResult());\n \n             List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                     new WorkflowResult<Pair<UserPatch, Boolean>>(\n                             new ImmutablePair<>(userPatch, Boolean.FALSE),\n-                            updated.getKey().getPropByRes(), updated.getKey().getPerformedTasks()));\n+                            updated.getLeft().getPropByRes(), updated.getLeft().getPerformedTasks()));\n             taskExecutor.execute(tasks);\n         }\n     }"},{"sha":"7e5e9a8be25f65a893032f4cf55e3d81c960dfda","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -263,7 +263,7 @@ private Pair<String, Attribute> prepareAttr(\n             }\n \n             if (mapItem.isConnObjectKey()) {\n-                result = new ImmutablePair<>(objValues.iterator().next().toString(), null);\n+                result = new ImmutablePair<>(objValues.isEmpty() ? null : objValues.iterator().next().toString(), null);\n             } else if (mapItem.isPassword() && any instanceof User) {\n                 String passwordAttrValue = password;\n                 if (StringUtils.isBlank(passwordAttrValue)) {\n@@ -295,8 +295,8 @@ private Pair<String, Attribute> prepareAttr(\n             } else {\n                 result = new ImmutablePair<>(\n                         null, objValues.isEmpty()\n-                                ? AttributeBuilder.build(mapItem.getExtAttrName())\n-                                : AttributeBuilder.build(mapItem.getExtAttrName(), objValues.iterator().next()));\n+                        ? AttributeBuilder.build(mapItem.getExtAttrName())\n+                        : AttributeBuilder.build(mapItem.getExtAttrName(), objValues.iterator().next()));\n             }\n         }\n "},{"sha":"e4879863b3ee2386392ca22ec2fa2a0aacc026db","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -97,7 +97,7 @@ protected void doDelete(final AnyTypeKind kind, final String key) {\n             LOG.error(\"Could not propagate anyObject \" + key, e);\n         }\n \n-        getProvisioningManager().delete(key, true);\n+        getProvisioningManager().delete(key, Collections.singleton(profile.getTask().getResource().getKey()), true);\n     }\n \n     @Override"},{"sha":"025b7e9345574093750cd6a7566c5e3ab9f05726","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPullResultHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -101,8 +101,8 @@ protected AnyTO doUpdate(\n \n         AnyObjectPatch anyObjectPatch = AnyObjectPatch.class.cast(anyPatch);\n \n-        Map.Entry<String, List<PropagationStatus>> updated =\n-                anyObjectProvisioningManager.update(anyObjectPatch, true);\n+        Map.Entry<String, List<PropagationStatus>> updated = anyObjectProvisioningManager.update(\n+                anyObjectPatch, Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n         AnyObjectTO after = anyObjectDataBinder.getAnyObjectTO(updated.getKey());\n         result.setName(getName(after));"},{"sha":"dc1613ff5a3874f3625de4251fa42adc03cdabe6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPullResultHandlerImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -114,7 +114,8 @@ protected AnyTO doUpdate(\n \n         GroupPatch groupPatch = GroupPatch.class.cast(anyPatch);\n \n-        Map.Entry<String, List<PropagationStatus>> updated = groupProvisioningManager.update(groupPatch, true);\n+        Map.Entry<String, List<PropagationStatus>> updated = groupProvisioningManager.update(\n+                groupPatch, Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n         String groupOwner = null;\n         for (AttrPatch attrPatch : groupPatch.getPlainAttrs()) {"},{"sha":"56783f757bc740a02945d55b43eb9e40b5185bea","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelAnyObjectProvisioningManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -31,6 +31,8 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class CamelAnyObjectProvisioningManager\n         extends AbstractCamelProvisioningManager implements AnyObjectProvisioningManager {\n@@ -40,6 +42,7 @@ public Pair<String, List<PropagationStatus>> create(final AnyObjectTO any, final\n         return create(any, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> create(\n@@ -69,6 +72,7 @@ public Pair<String, List<PropagationStatus>> update(\n         return update(anyPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> update(\n@@ -96,6 +100,7 @@ public List<PropagationStatus> delete(final String anyObjectObjectKey, final boo\n         return delete(anyObjectObjectKey, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete("},{"sha":"c6feb9116220963af41311e96d5f51515038ac7f","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -31,24 +31,19 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class CamelGroupProvisioningManager\n         extends AbstractCamelProvisioningManager implements GroupProvisioningManager {\n \n-    @Override\n-    public Pair<String, List<PropagationStatus>> create(final GroupTO any, final boolean nullPriorityAsync) {\n-        return create(any, Collections.<String>emptySet(), nullPriorityAsync);\n-    }\n-\n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> create(\n-            final GroupTO groupTO, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n-\n+    public Pair<String, List<PropagationStatus>> create(final GroupTO groupTO, final boolean nullPriorityAsync) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n-        props.put(\"excludedResources\", excludedResources);\n+        props.put(\"excludedResources\", Collections.<String>emptySet());\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n \n         sendMessage(\"direct:createGroup\", groupTO, props);\n@@ -62,6 +57,7 @@ public Pair<String, List<PropagationStatus>> create(\n         return exchange.getIn().getBody(Pair.class);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> create(\n@@ -93,6 +89,7 @@ public Pair<String, List<PropagationStatus>> update(final GroupPatch anyPatch, f\n         return update(anyPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> update(\n@@ -120,6 +117,7 @@ public List<PropagationStatus> delete(final String key, final boolean nullPriori\n         return delete(key, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete("},{"sha":"d5499dad7871e170c4e887fde6b079dfc8a7835c","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -39,6 +39,8 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.transaction.annotation.Propagation;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class CamelUserProvisioningManager extends AbstractCamelProvisioningManager implements UserProvisioningManager {\n \n@@ -56,13 +58,7 @@ public Pair<String, List<PropagationStatus>> create(\n         return create(userTO, storePassword, false, null, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n-    @Override\n-    public Pair<String, List<PropagationStatus>> create(\n-            final UserTO userTO, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n-\n-        return create(userTO, false, false, null, excludedResources, nullPriorityAsync);\n-    }\n-\n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> create(\n@@ -124,6 +120,7 @@ public List<PropagationStatus> delete(final String key, final boolean nullPriori\n         return delete(key, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete(\n@@ -317,6 +314,7 @@ public List<PropagationStatus> deprovision(\n         return exchange.getIn().getBody(List.class);\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> update("},{"sha":"c2f85e4bdb0dae39adc2ee60c2fa8dcf1dc55c73","filename":"fit/core-reference/pom.xml","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -153,7 +153,19 @@ under the License.\n       <artifactId>syncope-ext-camel-client-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n-    </dependency>    \n+    </dependency>  \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>          \n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>  \n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-test</artifactId>"},{"sha":"86e9c7401f751dc8d6c715e7a4ce4abcbe49b5bd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -28,11 +28,16 @@\n import java.util.UUID;\n import javax.naming.Context;\n import javax.naming.NamingException;\n+import javax.naming.directory.Attribute;\n+import javax.naming.directory.BasicAttribute;\n+import javax.naming.directory.DirContext;\n import javax.naming.directory.InitialDirContext;\n+import javax.naming.directory.ModificationItem;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n@@ -459,4 +464,28 @@ protected Object getLdapRemoteObject(final String bindDn, final String bindPwd,\n             }\n         }\n     }\n+\n+    protected void updateLdapRemoteObject(\n+            final String bindDn, final String bindPwd, final String objectDn, final Pair<String, String> attribute) {\n+\n+        InitialDirContext ctx = null;\n+        try {\n+            ctx = getLdapResourceDirContext(bindDn, bindPwd);\n+\n+            Attribute ldapAttribute = new BasicAttribute(attribute.getKey(), attribute.getValue());\n+            ModificationItem[] item = new ModificationItem[1];\n+            item[0] = new ModificationItem(DirContext.REPLACE_ATTRIBUTE, ldapAttribute);\n+            ctx.modifyAttributes(objectDn, item);\n+        } catch (Exception e) {\n+            // ignore\n+        } finally {\n+            if (ctx != null) {\n+                try {\n+                    ctx.close();\n+                } catch (NamingException e) {\n+                    // ignore\n+                }\n+            }\n+        }\n+    }\n }"},{"sha":"2761f66c44c5e99521b854813c4d2bf84d926110","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":112,"deletions":6,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f0e0199fc70774bcab8e2bfb0304cf0a05d15728/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=f0e0199fc70774bcab8e2bfb0304cf0a05d15728","patch":"@@ -358,8 +358,9 @@ private void ldapCleanup() {\n         }\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n-                build());\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").\n+                                query()).\n+                        build());\n         if (matchingUsers.getSize() > 0) {\n             for (UserTO user : matchingUsers.getResult()) {\n                 DeassociationPatch deassociationPatch = new DeassociationPatch();\n@@ -398,8 +399,9 @@ public void reconcileFromLDAP() {\n         // 3. verify that pulled user is found\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n-                build());\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").\n+                                query()).\n+                        build());\n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.getResult().size());\n         // SYNCOPE-898\n@@ -497,8 +499,8 @@ public boolean evaluate(final MappingItemTO object) {\n             // 3. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n             PagedResult<AnyObjectTO> matchingPrinters = anyObjectService.search(\n                     new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                    fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").\n-                            is(\"location\").equalTo(\"pull*\").query()).build());\n+                            fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").\n+                                    is(\"location\").equalTo(\"pull*\").query()).build());\n             assertTrue(matchingPrinters.getSize() > 0);\n             for (AnyObjectTO printer : matchingPrinters.getResult()) {\n                 DeassociationPatch deassociationPatch = new DeassociationPatch();\n@@ -1056,6 +1058,8 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             // 7. Test the pulled user\n             self = clientFactory.create(user.getUsername(), oldCleanPassword).self();\n             assertNotNull(self);\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n         } finally {\n             // Delete PullTask + user + reset the connector\n             if (pullTask != null) {\n@@ -1073,4 +1077,106 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             }\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1062() {\n+        GroupTO propagationGroup = null;\n+        PullTaskTO pullTask = null;\n+        UserTO user = null;\n+        GroupTO group = null;\n+        try {\n+            // 1. create group with resource for propagation\n+            propagationGroup = GroupITCase.getBasicSampleTO(\"SYNCOPE1062\");\n+            propagationGroup.getResources().add(RESOURCE_NAME_DBPULL);\n+            propagationGroup = createGroup(propagationGroup).getEntity();\n+\n+            // 2. create pull task for another resource, with user template assigning the group above\n+            pullTask = new PullTaskTO();\n+            pullTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n+            pullTask.setName(\"SYNCOPE1062\");\n+            pullTask.setActive(true);\n+            pullTask.setPerformCreate(true);\n+            pullTask.setPerformUpdate(true);\n+            pullTask.setPullMode(PullMode.FULL_RECONCILIATION);\n+            pullTask.setResource(RESOURCE_NAME_LDAP);\n+\n+            UserTO template = new UserTO();\n+            template.getAuxClasses().add(\"minimal group\");\n+            template.getMemberships().add(new MembershipTO.Builder().group(propagationGroup.getKey()).build());\n+            template.getPlainAttrs().add(attrTO(\"firstname\", \"'fixed'\"));\n+            pullTask.getTemplates().put(AnyTypeKind.USER.name(), template);\n+\n+            Response taskResponse = taskService.create(pullTask);\n+            pullTask = getObject(taskResponse.getLocation(), TaskService.class, PullTaskTO.class);\n+            assertNotNull(pullTask);\n+            assertFalse(pullTask.getTemplates().isEmpty());\n+\n+            // 3. exec the pull task\n+            ExecTO execution = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+\n+            // the user is successfully pulled...\n+            user = userService.read(\"pullFromLDAP\");\n+            assertNotNull(user);\n+            assertEquals(\"pullFromLDAP@syncope.apache.org\", user.getPlainAttrMap().get(\"email\").getValues().get(0));\n+\n+            group = groupService.read(\"testLDAPGroup\");\n+            assertNotNull(group);\n+\n+            ConnObjectTO connObject =\n+                    resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n+            assertNotNull(connObject);\n+            assertEquals(\"pullFromLDAP@syncope.apache.org\", connObject.getAttrMap().get(\"mail\").getValues().get(0));\n+            AttrTO userDn = connObject.getAttrMap().get(Name.NAME);\n+            assertNotNull(userDn);\n+            assertEquals(1, userDn.getValues().size());\n+            assertNotNull(\n+                    getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n+\n+            // ...and propagated\n+            JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+            String email = jdbcTemplate.queryForObject(\n+                    \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n+            assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n+\n+            // 4. update the user on the external resource\n+            updateLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD,\n+                    userDn.getValues().get(0), Pair.of(\"mail\", \"pullFromLDAP2@syncope.apache.org\"));\n+\n+            connObject = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n+            assertNotNull(connObject);\n+            assertEquals(\"pullFromLDAP2@syncope.apache.org\", connObject.getAttrMap().get(\"mail\").getValues().get(0));\n+\n+            // 5. exec the pull task again\n+            execution = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+\n+            // the internal is updated...\n+            user = userService.read(\"pullFromLDAP\");\n+            assertNotNull(user);\n+            assertEquals(\"pullFromLDAP2@syncope.apache.org\", user.getPlainAttrMap().get(\"email\").getValues().get(0));\n+\n+            // ...and propagated\n+            email = jdbcTemplate.queryForObject(\n+                    \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n+            assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n+        } finally {\n+            if (pullTask != null) {\n+                taskService.delete(pullTask.getKey());\n+            }\n+\n+            if (propagationGroup != null) {\n+                groupService.delete(propagationGroup.getKey());\n+            }\n+\n+            if (group != null) {\n+                groupService.delete(group.getKey());\n+            }\n+            if (user != null) {\n+                userService.delete(user.getKey());\n+            }\n+        }\n+    }\n }"}]}