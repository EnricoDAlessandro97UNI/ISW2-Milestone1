{"sha":"2a5ebc988df1d1717835f0195e479736791abf91","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhNWViYzk4OGRmMWQxNzE3ODM1ZjAxOTVlNDc5NzM2NzkxYWJmOTE=","commit":{"author":{"name":"Alexander Tsvetkov","email":"aletsv@gmail.com","date":"2018-11-02T09:59:03Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2018-11-02T10:03:27Z"},"message":"SYNCOPE-1390: Pull Realms: pull task with Unmatching Rules: PROVISION shouldn't create propagation task (#86)","tree":{"sha":"510b7a4eadf1f714aad56225bb682d4c0dce3451","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/510b7a4eadf1f714aad56225bb682d4c0dce3451"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a5ebc988df1d1717835f0195e479736791abf91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a5ebc988df1d1717835f0195e479736791abf91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a5ebc988df1d1717835f0195e479736791abf91","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a5ebc988df1d1717835f0195e479736791abf91/comments","author":{"login":"AlexTsvetkov","id":1301512,"node_id":"MDQ6VXNlcjEzMDE1MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1301512?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexTsvetkov","html_url":"https://github.com/AlexTsvetkov","followers_url":"https://api.github.com/users/AlexTsvetkov/followers","following_url":"https://api.github.com/users/AlexTsvetkov/following{/other_user}","gists_url":"https://api.github.com/users/AlexTsvetkov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexTsvetkov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexTsvetkov/subscriptions","organizations_url":"https://api.github.com/users/AlexTsvetkov/orgs","repos_url":"https://api.github.com/users/AlexTsvetkov/repos","events_url":"https://api.github.com/users/AlexTsvetkov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexTsvetkov/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"639c314cd6aa922f6036e803ca7772d478b21165","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/639c314cd6aa922f6036e803ca7772d478b21165","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/639c314cd6aa922f6036e803ca7772d478b21165"}],"stats":{"total":16,"additions":9,"deletions":7},"files":[{"sha":"82c507cd5809a417245d842a12e7582a10124a0a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a5ebc988df1d1717835f0195e479736791abf91/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a5ebc988df1d1717835f0195e479736791abf91/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=2a5ebc988df1d1717835f0195e479736791abf91","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.MatchingRule;\n-import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n@@ -42,6 +41,7 @@\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n@@ -160,7 +160,7 @@ private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit org\n                 action.beforeAssign(profile, delta, realmTO);\n             }\n \n-            create(realmTO, delta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n+            create(realmTO, delta, UnmatchingRule.ASSIGN, result);\n         }\n \n         return Collections.singletonList(result);\n@@ -198,7 +198,7 @@ private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit\n                 action.beforeProvision(profile, delta, realmTO);\n             }\n \n-            create(realmTO, delta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n+            create(realmTO, delta, UnmatchingRule.PROVISION, result);\n         }\n \n         return Collections.singletonList(result);\n@@ -225,7 +225,7 @@ private void throwIgnoreProvisionException(final SyncDelta delta, final Exceptio\n     private void create(\n             final RealmTO realmTO,\n             final SyncDelta delta,\n-            final String operation,\n+            final UnmatchingRule unmatchingRule,\n             final ProvisioningReport result)\n             throws JobExecutionException {\n \n@@ -239,8 +239,10 @@ private void create(\n             for (String resource : realm.getResourceKeys()) {\n                 propByRes.add(ResourceOperation.CREATE, resource);\n             }\n-            List<PropagationTaskTO> tasks = propagationManager.createTasks(realm, propByRes, null);\n-            taskExecutor.execute(tasks, false);\n+            if (unmatchingRule == UnmatchingRule.ASSIGN) {\n+                List<PropagationTaskTO> tasks = propagationManager.createTasks(realm, propByRes, null);\n+                taskExecutor.execute(tasks, false);\n+            }\n \n             RealmTO actual = binder.getRealmTO(realm, true);\n \n@@ -271,7 +273,7 @@ private void create(\n             resultStatus = Result.FAILURE;\n         }\n \n-        finalize(operation, resultStatus, null, output, delta);\n+        finalize(UnmatchingRule.toEventName(unmatchingRule), resultStatus, null, output, delta);\n     }\n \n     private List<ProvisioningReport> update(final SyncDelta delta, final List<String> keys, final boolean inLink)"}]}