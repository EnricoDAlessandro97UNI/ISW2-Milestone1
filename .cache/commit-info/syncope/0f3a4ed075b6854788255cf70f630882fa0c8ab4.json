{"sha":"0f3a4ed075b6854788255cf70f630882fa0c8ab4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmM2E0ZWQwNzViNjg1NDc4ODI1NWNmNzBmNjMwODgyZmEwYzhhYjQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-18T15:18:11Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-18T15:18:11Z"},"message":"Merge branch 'SYNCOPE-156'","tree":{"sha":"1cd60590036dccefa083426c6dafd6efe782e558","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1cd60590036dccefa083426c6dafd6efe782e558"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f3a4ed075b6854788255cf70f630882fa0c8ab4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f3a4ed075b6854788255cf70f630882fa0c8ab4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f3a4ed075b6854788255cf70f630882fa0c8ab4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f3a4ed075b6854788255cf70f630882fa0c8ab4/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3d017e2c3ecaee95f5ef964464d1169ac06bb88c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d017e2c3ecaee95f5ef964464d1169ac06bb88c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d017e2c3ecaee95f5ef964464d1169ac06bb88c"},{"sha":"a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd"}],"stats":{"total":9646,"additions":9314,"deletions":332},"files":[{"sha":"18f9a918c48dd56d6e9b0d20c40db881a02938a1","filename":"client/console/pom.xml","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -48,7 +48,7 @@ under the License.\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-web</artifactId>\n     </dependency>\n-    \n+\n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket</artifactId>\n@@ -78,6 +78,14 @@ under the License.\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-native-websocket-javax</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>de.agilecoders.wicket</groupId>\n+      <artifactId>wicket-bootstrap-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>de.agilecoders.wicket</groupId>\n+      <artifactId>wicket-bootstrap-extensions</artifactId>\n+    </dependency>\n       \n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n@@ -92,16 +100,12 @@ under the License.\n \n     <dependency>\n       <groupId>org.webjars</groupId>\n-      <artifactId>bootstrap</artifactId>\n+      <artifactId>font-awesome</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>bootstrap-select</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>font-awesome</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>ionicons</artifactId>"},{"sha":"e9f35ec162f6284841cad896f3cea968475ab2b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,6 +18,10 @@\n  */\n package org.apache.syncope.client.console;\n \n+import de.agilecoders.wicket.core.Bootstrap;\n+import de.agilecoders.wicket.core.settings.BootstrapSettings;\n+import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n+import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n@@ -30,6 +34,7 @@\n import org.apache.syncope.client.console.resources.FilesystemResource;\n import org.apache.syncope.client.console.resources.WorkflowDefGETResource;\n import org.apache.syncope.client.console.resources.WorkflowDefPUTResource;\n+import org.apache.syncope.client.console.themes.AdminLTE;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.Page;\n import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n@@ -65,8 +70,20 @@ Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")\n     protected void init() {\n         super.init();\n \n+        // Application settings\n+        IBootstrapSettings settings = new BootstrapSettings();\n+\n+        // set theme provider\n+        settings.setThemeProvider(new SingleThemeProvider(new AdminLTE()));\n+\n+        // install application settings\n+        Bootstrap.install(this, settings);\n+\n+        getResourceSettings().setUseMinifiedResources(true);\n+\n         getComponentInstantiationListeners().add(new SpringComponentInjector(this));\n         getResourceSettings().setThrowExceptionOnMissingResource(true);\n+\n         getJavaScriptLibrarySettings().setJQueryReference(new DynamicJQueryResourceReference());\n \n         getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n@@ -140,5 +157,4 @@ public Class<? extends Page> getHomePage() {\n                         ? MustChangePassword.class\n                         : Dashboard.class;\n     }\n-\n }"},{"sha":"e13840c93d7bf87859265fda159a346a006a93db","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -42,9 +42,12 @@ public class AnyDataProvider extends SortableDataProvider<AnyTO, String> {\n \n     private final AbstractAnyRestClient restClient;\n \n-    private final String realm = \"/\";\n+    private final String realm;\n \n-    public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginatorRows, final boolean filtered) {\n+    private final String type;\n+\n+    public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginatorRows, final boolean filtered,\n+            final String realm, final String type) {\n         super();\n \n         this.restClient = restClient;\n@@ -55,6 +58,9 @@ public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginat\n         setSort(\"key\", SortOrder.ASCENDING);\n \n         this.comparator = new SortableAnyProviderComparator(this);\n+        \n+        this.realm = realm;\n+        this.type = type;\n     }\n \n     public void setFIQL(final String fiql) {\n@@ -70,9 +76,9 @@ public Iterator<? extends AnyTO> iterator(final long first, final long count) {\n         if (filtered) {\n             result = fiql == null\n                     ? Collections.<AnyTO>emptyList()\n-                    : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+                    : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n         } else {\n-            result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+            result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n         }\n \n         Collections.sort(result, comparator);\n@@ -86,7 +92,7 @@ public long size() {\n         if (filtered) {\n             result = fiql == null\n                     ? 0\n-                    : restClient.searchCount(realm, fiql);\n+                    : restClient.searchCount(realm, fiql, type);\n         } else {\n             result = restClient.count(realm);\n         }"},{"sha":"804f9feee06cea280d2004a912de4d2f345b2f16","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -54,6 +54,12 @@ public final class Constants {\n \n     public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS = \"user.virtual.schema.paginator.rows\";\n \n+    public static final String PREF_GROUP_DETAILS_VIEW = \"group.details.view\";\n+\n+    public static final String PREF_GROUP_ATTRIBUTES_VIEW = \"group.attributes.view\";\n+\n+    public static final String PREF_GROUP_DERIVED_ATTRIBUTES_VIEW = \"group.derived.attributes.view\";\n+\n     public static final String PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"group.schema.paginator.rows\";\n \n     public static final String PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS = \"group.derived.schema.paginator.rows\";\n@@ -91,6 +97,12 @@ public final class Constants {\n     public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n \n     public static final String PREF_POLICY_PAGINATOR_ROWS = \"policy.paginator.rows\";\n+    \n+    public static final String PREF_ANY_DETAILS_VIEW = \"any.details.view\";\n+    \n+    public static final String PREF_ANY_ATTRIBUTES_VIEW = \"any.attributes.view\";\n+\n+    public static final String PREF_ANY_DERIVED_ATTRIBUTES_VIEW = \"any.derived.attributes.view\";\n \n     /**\n      * ConnId's GuardedString is not in the classpath."},{"sha":"63223a0a0827451e0a6c46d8cac243469c11b716","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AnyDisplayAttributesModalPage.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display user attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class AnyDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] ANY_DEFAULT_SELECTION = { \"key\" };\n+\n+    public AnyDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_ANY_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_ANY_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_ANY_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return AnyObjectTO.class;\n+    }\n+}"},{"sha":"622d20452bc2829a29f66dde1744ffa0f5cd95a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":28,"deletions":1,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.UserWorkflowRestClient;\n import org.apache.syncope.client.console.topology.Topology;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n@@ -64,7 +65,7 @@ public BasePage(final PageParameters parameters) {\n         add(new Label(\"version\", SyncopeConsoleSession.get().getVersion()));\n         add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n \n-        WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n+        final WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n         add(todosContainer);\n         Label todos = new Label(\"todos\", \"0\");\n         todosContainer.add(todos);\n@@ -175,4 +176,30 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n     }\n+\n+    /**\n+     * Set a WindowClosedCallback for a Modal instance.\n+     *\n+     * @param modal window\n+     * @param container container\n+     */\n+    public void setWindowClosedCallback(final BaseModal modal, final WebMarkupContainer container) {\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                if (container != null) {\n+                    target.add(container);\n+                }\n+\n+                if (isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    setModalResult(false);\n+                }\n+            }\n+        });\n+    }\n }"},{"sha":"769cb45d71f7f852850b6f95b9e29cc5142b839d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"added","additions":236,"deletions":0,"changes":236,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,236 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.client.console.PreferenceManager;\n+import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+/**\n+ * Modal window with Display attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public abstract class DisplayAttributesModalPage extends BaseModalPage {\n+\n+    private static final long serialVersionUID = -4274117450918385110L;\n+\n+    /**\n+     * Max allowed selections.\n+     */\n+    private static final int MAX_SELECTIONS = 9;\n+\n+    @SpringBean\n+    private PreferenceManager prefMan;\n+\n+    private final List<String> selectedDetails;\n+\n+    private final List<String> selectedPlainSchemas;\n+\n+    private final List<String> selectedDerSchemas;\n+\n+    public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+\n+        super();\n+\n+        final IModel<List<String>> fnames = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return SearchableFields.get(getTOClass());\n+            }\n+        };\n+\n+        final IModel<List<String>> names = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return schemaNames;\n+            }\n+        };\n+\n+        final IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return dSchemaNames;\n+            }\n+        };\n+\n+        final Form form = new Form(FORM);\n+        form.setModel(new CompoundPropertyModel(this));\n+\n+        selectedDetails = prefMan.getList(getRequest(), getPrefDetailView());\n+\n+        selectedPlainSchemas = prefMan.getList(getRequest(), getPrefAttributeView());\n+\n+        selectedDerSchemas = prefMan.getList(getRequest(), getPrefDerivedAttributeView());\n+\n+        final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n+        form.add(dgroup);\n+\n+        final ListView<String> details = new ListView<String>(\"details\", fnames) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                item.add(new Check(\"dcheck\", item.getModel()));\n+                item.add(new Label(\"dname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+            }\n+        };\n+        dgroup.add(details);\n+\n+        if (names.getObject() == null || names.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"plainSchemas\", \"emptyFragment\", form);\n+            form.add(fragment);\n+\n+            selectedPlainSchemas.clear();\n+        } else {\n+            final Fragment fragment = new Fragment(\"plainSchemas\", \"sfragment\", form);\n+            form.add(fragment);\n+\n+            final CheckGroup sgroup = new CheckGroup(\"psCheckGroup\", new PropertyModel(this, \"selectedPlainSchemas\"));\n+            fragment.add(sgroup);\n+\n+            final ListView<String> schemas = new ListView<String>(\"plainSchemas\", names) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<String> item) {\n+                    item.add(new Check(\"scheck\", item.getModel()));\n+                    item.add(new Label(\"sname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n+            sgroup.add(schemas);\n+        }\n+\n+        if (dsnames.getObject() == null || dsnames.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"emptyFragment\", form);\n+            form.add(fragment);\n+\n+            selectedDerSchemas.clear();\n+        } else {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n+            form.add(fragment);\n+\n+            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n+            fragment.add(dsgroup);\n+\n+            final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<String> item) {\n+                    item.add(new Check(\"dscheck\", item.getModel()));\n+                    item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n+            dsgroup.add(derSchemas);\n+        }\n+\n+        final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                if (selectedDetails.size() + selectedPlainSchemas.size() + selectedDerSchemas.size()\n+                        > MAX_SELECTIONS) {\n+\n+                    error(getString(\"tooManySelections\"));\n+                    onError(target, form);\n+                } else {\n+                    final Map<String, List<String>> prefs = new HashMap<>();\n+\n+                    prefs.put(getPrefDetailView(), selectedDetails);\n+\n+                    prefs.put(getPrefAttributeView(), selectedPlainSchemas);\n+\n+                    prefs.put(getPrefDerivedAttributeView(), selectedDerSchemas);\n+\n+                    prefMan.setList(getRequest(), getResponse(), prefs);\n+\n+                    ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                    window.close(target);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                feedbackPanel.refresh(target);\n+            }\n+        };\n+\n+        form.add(submit);\n+\n+        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+        };\n+\n+        cancel.setDefaultFormProcessing(false);\n+        form.add(cancel);\n+\n+        add(form);\n+    }\n+\n+    public abstract String getPrefDetailView();\n+\n+    public abstract String getPrefAttributeView();\n+\n+    public abstract String getPrefDerivedAttributeView();\n+    \n+    public abstract Class getTOClass();\n+\n+}"},{"sha":"0e5e10f09c5e5d0d50572d2a91f089a8113057a8","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupDisplayAttributesModalPage.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display group attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class GroupDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] GROUP_DEFAULT_SELECTION = { \"key\", \"name\" };\n+\n+    public GroupDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_GROUP_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_GROUP_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_GROUP_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return GroupTO.class;\n+    }\n+}"},{"sha":"53965610f98ea33f01d6e4956f1bd51c3039e0e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/MustChangePassword.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -73,14 +73,14 @@ public MustChangePassword(final PageParameters parameters) {\n         passwordField = new AjaxPasswordFieldPanel(\"password\", \"password\", new Model<String>());\n         passwordField.setRequired(true);\n         passwordField.setMarkupId(\"password\");\n-        passwordField.setPlaceholder(getString(\"password\"));\n+        passwordField.setPlaceholder(\"password\");\n         ((PasswordTextField) passwordField.getField()).setResetPassword(true);\n         form.add(passwordField);\n \n         confirmPasswordField = new AjaxPasswordFieldPanel(\"confirmPassword\", \"confirmPassword\", new Model<String>());\n         confirmPasswordField.setRequired(true);\n         confirmPasswordField.setMarkupId(\"confirmPassword\");\n-        confirmPasswordField.setPlaceholder(getString(\"confirmPassword\"));\n+        confirmPasswordField.setPlaceholder(\"confirmPassword\");\n         ((PasswordTextField) confirmPasswordField.getField()).setResetPassword(true);\n         form.add(confirmPasswordField);\n "},{"sha":"b631210324019d8c7a09a5857f284f930a5e9a80","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -199,10 +199,10 @@ public List<StatusBean> getStatusBeans() {\n             final List<T> subjects = new ArrayList<>();\n             if (anyTypeKind == AnyTypeKind.USER) {\n                 subjects.addAll((List<T>) userRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n+                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.USER.toString()));\n             } else {\n                 subjects.addAll((List<T>) groupRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n+                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.GROUP.toString()));\n             }\n \n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects("},{"sha":"cb02ca5acc69a9af7023f326277aa371668cce82","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":136,"deletions":87,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,26 +18,28 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n+import org.apache.syncope.client.console.panels.RealmModalPanel;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.wicket.MarkupContainer;\n+import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.repeater.RepeatingView;\n-import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -48,126 +50,173 @@ public class Realms extends BasePage {\n     @SpringBean\n     private RealmRestClient realmRestClient;\n \n+    private final RealmSidebarPanel realmSidebarPanel;\n+\n     private final WebMarkupContainer content;\n \n+    private final BaseModal<RealmTO> modal;\n+\n     public Realms(final PageParameters parameters) {\n         super(parameters);\n \n-        final List<RealmTO> realms = realmRestClient.list();\n-        Collections.sort(realms, new RealmNameComparator());\n-\n-        add(getParentMap(realms), 0L, Realms.this);\n+        realmSidebarPanel = new RealmSidebarPanel(\"realmSidebarPanel\", getPageReference());\n+        realmSidebarPanel.setMarkupId(\"sidebar\");\n+        realmSidebarPanel.setOutputMarkupId(true);\n+        add(realmSidebarPanel);\n \n         content = new WebMarkupContainer(\"content\");\n+        content.add(new Label(\"header\", \"Root realm\"));\n+        content.add(new Label(\"body\", \"Root realm\"));\n         content.setOutputMarkupId(true);\n         add(content);\n \n-        content.add(new Label(\"header\", \"Root realm\"));\n-        content.add(new Label(\"body\", \"Root realm\"));\n-    }\n+        modal = new BaseModal<>(\"modal\");\n+        content.add(modal);\n \n-    private void add(final Map<Long, List<RealmTO>> parentMap, final Long key, final MarkupContainer container) {\n-        final RepeatingView listItems = new RepeatingView(\"list\");\n-        container.add(listItems);\n+        modal.setWindowClosedCallback(new WindowClosedCallback() {\n \n-        for (final RealmTO realm : parentMap.get(key)) {\n-            final Fragment fragment;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-            final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(realmSidebarPanel.reloadRealmTree());\n \n-                private static final long serialVersionUID = 1L;\n+                modal.show(false);\n \n-                @Override\n-                public void onClick(final AjaxRequestTarget target) {\n-                    send(Realms.this, Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n+                if (isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    setModalResult(false);\n                 }\n-            };\n+            }\n+        });\n \n-            link.add(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n+        setupDeleteLink();\n+        setupCreateLink();\n+        setupEditLink();\n \n-            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).isEmpty()) {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", Realms.this);\n-                add(parentMap, realm.getKey(), fragment);\n-            } else {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", Realms.this);\n-            }\n+        updateRealmContent(realmSidebarPanel.getCurrentRealm());\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n \n-            fragment.add(link);\n-            listItems.add(fragment);\n+        if (event.getPayload() instanceof ControlSidebarClick) {\n+            @SuppressWarnings(\"unchecked\")\n+            final ControlSidebarClick<RealmTO> controlSidebarClick = ControlSidebarClick.class.cast(event.getPayload());\n+            updateRealmContent(controlSidebarClick.getObj());\n+            controlSidebarClick.getTarget().add(content);\n         }\n     }\n \n-    private Map<Long, List<RealmTO>> getParentMap(final List<RealmTO> realms) {\n-        final Map<Long, List<RealmTO>> res = new HashMap<>();\n-        res.put(0L, new ArrayList<RealmTO>());\n+    private WebMarkupContainer updateRealmContent(final RealmTO realmTO) {\n+        content.addOrReplace(new Label(\"header\", realmTO.getName()));\n+        content.addOrReplace(new Realm(\"body\", realmTO, getPageReference()));\n+        return content;\n+    }\n+\n+    private void setupDeleteLink() {\n \n-        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n+        final AjaxLink<Void> deleteLink = new ClearIndicatingAjaxLink<Void>(\"deleteLink\", getPageReference()) {\n \n-        for (RealmTO realm : realms) {\n-            if (res.containsKey(realm.getParent())) {\n-                res.get(realm.getParent()).add(realm);\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                final List<RealmTO> children = new ArrayList<>();\n-                res.put(realm.getKey(), children);\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                try {\n+                    final RealmTO toBeDeleted = realmSidebarPanel.getCurrentRealm();\n \n-                if (cache.containsKey(realm.getKey())) {\n-                    children.addAll(cache.get(realm.getKey()));\n-                    cache.remove(realm.getKey());\n+                    if (toBeDeleted.getKey() == 0) {\n+                        throw new Exception(\"Root realm cannot be deleted\");\n+                    }\n+\n+                    realmRestClient.delete(toBeDeleted.getFullPath());\n+\n+                    target.add(realmSidebarPanel.reloadRealmTree());\n+                    target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n+\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting realm\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    getFeedbackPanel().refresh(target);\n                 }\n-            } else if (cache.containsKey(realm.getParent())) {\n-                cache.get(realm.getParent()).add(realm);\n-            } else {\n-                final List<RealmTO> children = new ArrayList<>();\n-                children.add(realm);\n-                cache.put(realm.getParent(), children);\n             }\n+        };\n+\n+        if (SyncopeConsoleSession.get().owns(Entitlement.REALM_DELETE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(deleteLink, ENABLE, Entitlement.REALM_DELETE);\n         }\n \n-        return res;\n+        content.addOrReplace(deleteLink);\n     }\n \n-    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n+    private void setupCreateLink() {\n \n-        private static final long serialVersionUID = 7085057398406518811L;\n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", getPageReference()) {\n \n-        @Override\n-        public int compare(final RealmTO r1, final RealmTO r2) {\n-            return r1.getName().compareTo(r2.getName());\n-        }\n-    }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                modal.header(new ResourceModel(\"createRealm\"));\n \n-        if (event.getPayload() instanceof ControlSidebarClick) {\n-            @SuppressWarnings(\"unchecked\")\n-            final ControlSidebarClick<RealmTO> controlSidebarClick = ControlSidebarClick.class.cast(event.getPayload());\n-            content.addOrReplace(new Label(\"header\", controlSidebarClick.getObj().getName()));\n-            content.addOrReplace(new Realm(\"body\", controlSidebarClick.getObj()));\n-            controlSidebarClick.getTarget().add(content);\n+                final RealmTO realmTO = new RealmTO();\n+                modal.setFormModel(realmTO);\n+\n+                final RealmModalPanel panel = new RealmModalPanel(\n+                        modal,\n+                        Realms.this.getPageReference(),\n+                        realmTO,\n+                        realmSidebarPanel.getCurrentRealm().getFullPath(),\n+                        Entitlement.REALM_CREATE,\n+                        true);\n+                target.add(modal.setContent(panel));\n+\n+                modal.addSumbitButton();\n+                modal.show(true);\n+            }\n+        };\n+\n+        if (SyncopeConsoleSession.get().owns(Entitlement.REALM_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, Entitlement.REALM_CREATE);\n         }\n+\n+        content.addOrReplace(createLink);\n     }\n \n-    private static class ControlSidebarClick<T> {\n+    private void setupEditLink() {\n+        final AjaxLink<Void> editLink = new ClearIndicatingAjaxLink<Void>(\"editLink\", getPageReference()) {\n \n-        private final AjaxRequestTarget target;\n+            private static final long serialVersionUID = -6957616042924610290L;\n \n-        private final T obj;\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                modal.header(Model.of(realmSidebarPanel.getCurrentRealm().getName()));\n \n-        public ControlSidebarClick(\n-                final T obj, final AjaxRequestTarget target) {\n-            this.obj = obj;\n-            this.target = target;\n-        }\n+                final RealmTO realmTO = realmSidebarPanel.getCurrentRealm();\n+                modal.setFormModel(realmTO);\n \n-        public T getObj() {\n-            return obj;\n-        }\n+                final RealmModalPanel panel = new RealmModalPanel(\n+                        modal,\n+                        Realms.this.getPageReference(),\n+                        realmTO,\n+                        realmTO.getFullPath(),\n+                        Entitlement.REALM_UPDATE,\n+                        false);\n+                target.add(modal.setContent(panel));\n+\n+                modal.addSumbitButton();\n+                modal.show(true);\n+            }\n+        };\n \n-        public AjaxRequestTarget getTarget() {\n-            return target;\n+        if (SyncopeConsoleSession.get().owns(Entitlement.REALM_UPDATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(editLink, ENABLE, Entitlement.REALM_UPDATE);\n         }\n \n+        content.addOrReplace(editLink);\n     }\n }"},{"sha":"57e5a0cc7f6bd4808797020fdbc141c50927d6a5","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java","status":"added","additions":642,"deletions":0,"changes":642,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,642 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n+import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.console.commons.status.Status;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.console.panels.ActionDataTablePanel;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class StatusModalPage<T extends AnyTO> extends AbstractStatusModalPage {\n+\n+    private static final long serialVersionUID = -9148734710505211261L;\n+\n+    private final AnyTO anyTO;\n+\n+    private int rowsPerPage = 10;\n+\n+    private final StatusUtils statusUtils;\n+\n+    private final boolean statusOnly;\n+\n+    // --------------------------------\n+    // password management fields ..\n+    // --------------------------------\n+    private final ClearIndicatingAjaxButton cancel;\n+\n+    private final WebMarkupContainer pwdMgt;\n+\n+    private final Form<?> pwdMgtForm;\n+\n+    private final AjaxCheckBoxPanel changepwd;\n+\n+    private final PasswordTextField password;\n+\n+    private final PasswordTextField confirm;\n+    // --------------------------------\n+\n+    private final PageReference pageRef;\n+\n+    private final ModalWindow window;\n+\n+    private final ActionDataTablePanel<StatusBean, String> table;\n+\n+    private final List<IColumn<StatusBean, String>> columns;\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AnyTO attributableTO) {\n+\n+        this(pageRef, window, attributableTO, false);\n+    }\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AnyTO anyTO,\n+            final boolean statusOnly) {\n+\n+        super();\n+\n+        this.pageRef = pageRef;\n+        this.window = window;\n+        this.statusOnly = statusOnly;\n+        this.anyTO = anyTO;\n+\n+        statusUtils = new StatusUtils(anyTO instanceof UserTO ? userRestClient : groupRestClient);\n+\n+        add(new Label(\"displayName\", anyTO.getKey() + \" \"\n+                + (anyTO instanceof UserTO ? ((UserTO) anyTO).getUsername() : ((GroupTO) anyTO).getName())));\n+\n+        columns = new ArrayList<>();\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null), \"resourceName\") {\n+\n+                    private static final long serialVersionUID = 2054811145491901166L;\n+\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                                    private static final long serialVersionUID = 8432079838783825801L;\n+\n+                                    @Override\n+                                    protected void onComponentTag(final ComponentTag tag) {\n+                                        if (model.getObject().isLinked()) {\n+                                            super.onComponentTag(tag);\n+                                        } else {\n+                                            tag.put(\"style\", \"color: #DDDDDD\");\n+                                        }\n+                                    }\n+                                });\n+                            }\n+                });\n+\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"accountLink\", this, null), \"accountLink\", \"accountLink\"));\n+\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"status\", this, null)) {\n+\n+                    private static final long serialVersionUID = -3503023501954863131L;\n+\n+                    @Override\n+                    public String getCssClass() {\n+                        return \"action\";\n+                    }\n+\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                if (model.getObject().isLinked()) {\n+                                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n+                                                    getStatus()));\n+                                } else {\n+                                    cellItem.add(new Label(componentId, \"\"));\n+                                }\n+                            }\n+                });\n+\n+        table = new ActionDataTablePanel<StatusBean, String>(\n+                \"resourceDatatable\",\n+                columns,\n+                (ISortableDataProvider<StatusBean, String>) new AttributableStatusProvider(),\n+                rowsPerPage,\n+                pageRef) {\n+\n+                    private static final long serialVersionUID = 6510391461033818316L;\n+\n+                    @Override\n+                    public boolean isElementEnabled(final StatusBean element) {\n+                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+                    }\n+                };\n+        table.setOutputMarkupId(true);\n+\n+        final String pageId = anyTO instanceof GroupTO ? \"Groups\" : \"Users\";\n+\n+        final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n+        addOrReplace(pwdMgtFragment);\n+\n+        pwdMgt = new WebMarkupContainer(\"pwdMgt\");\n+        pwdMgtFragment.add(pwdMgt.setOutputMarkupId(true));\n+\n+        pwdMgtForm = new Form(\"pwdMgtForm\");\n+        pwdMgtForm.setVisible(false).setEnabled(false);\n+        pwdMgt.add(pwdMgtForm);\n+\n+        password = new PasswordTextField(\"password\", new Model<String>());\n+        pwdMgtForm.add(password.setRequired(false).setEnabled(false));\n+\n+        confirm = new PasswordTextField(\"confirm\", new Model<String>());\n+        pwdMgtForm.add(confirm.setRequired(false).setEnabled(false));\n+\n+        changepwd = new AjaxCheckBoxPanel(\"changepwd\", \"changepwd\", new Model<Boolean>(false));\n+        pwdMgtForm.add(changepwd.setModelObject(false));\n+        pwdMgtForm.add(new Label(\"changePwdLabel\", new ResourceModel(\"changePwdLabel\", \"Password propagation\")));\n+\n+        changepwd.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                password.setEnabled(changepwd.getModelObject());\n+                confirm.setEnabled(changepwd.getModelObject());\n+                target.add(pwdMgt);\n+            }\n+        });\n+\n+        cancel = new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818026L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // ignore\n+                window.close(target);\n+            }\n+        }.feedbackPanelAutomaticReload(false);\n+\n+        pwdMgtForm.add(cancel);\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"), pageRef) {\n+\n+                    private static final long serialVersionUID = -2341391430136818027L;\n+\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        // none\n+                    }\n+                };\n+\n+        pwdMgtForm.add(goon);\n+\n+        if (statusOnly) {\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        userRestClient.reactivate(\n+                                anyTO.getETagValue(),\n+                                anyTO.getKey(),\n+                                new ArrayList<>(table.getModelObject()));\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error enabling resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.REACTIVATE, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        userRestClient.suspend(\n+                                anyTO.getETagValue(),\n+                                anyTO.getKey(),\n+                                new ArrayList<>(table.getModelObject()));\n+\n+                        if (pageRef.getPage() instanceof BasePage) {\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        }\n+\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error disabling resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.SUSPEND, pageId);\n+        } else {\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        if (anyTO instanceof UserTO) {\n+                            userRestClient.unlink(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            groupRestClient.unlink(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unlinking resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.UNLINK, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        if (anyTO instanceof UserTO) {\n+                            userRestClient.link(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            groupRestClient.link(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error linking resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.LINK, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        BulkActionResult bulkActionResult;\n+                        if (anyTO instanceof UserTO) {\n+                            bulkActionResult = userRestClient.deprovision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            bulkActionResult = groupRestClient.deprovision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error de-provisioning user\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.DEPROVISION, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+\n+                    if (anyTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationAction.PROVISION, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = groupRestClient.provision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning user\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        final BulkActionResult bulkActionResult;\n+                        if (anyTO instanceof UserTO) {\n+                            bulkActionResult = userRestClient.unassign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            bulkActionResult = groupRestClient.unassign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unassigning resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.UNASSIGN, pageId);\n+\n+            table.addAction(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    if (anyTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationAction.ASSIGN, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = groupRestClient.assign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error assigning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n+        }\n+\n+        table.addCancelButton(window);\n+        add(table);\n+    }\n+\n+    private class AttributableStatusProvider extends AbstractStatusBeanProvider {\n+\n+        private static final long serialVersionUID = 4586969457669796621L;\n+\n+        public AttributableStatusProvider() {\n+            super(statusOnly ? \"resourceName\" : \"accountLink\");\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<StatusBean> getStatusBeans() {\n+            final List<String> resources = new ArrayList<>();\n+            for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n+                resources.add(resourceTO.getKey());\n+            }\n+\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(anyTO);\n+\n+            final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n+\n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        anyTO instanceof GroupTO);\n+\n+                statusBeans.add(statusBean);\n+                resources.remove(entry.getResourceName());\n+            }\n+\n+            if (statusOnly) {\n+                final StatusBean syncope = new StatusBean(anyTO, \"Syncope\");\n+\n+                syncope.setConnObjectLink(((UserTO) anyTO).getUsername());\n+\n+                Status syncopeStatus = Status.UNDEFINED;\n+                if (((UserTO) anyTO).getStatus() != null) {\n+                    try {\n+                        syncopeStatus = Status.valueOf(((UserTO) anyTO).getStatus().toUpperCase());\n+                    } catch (IllegalArgumentException e) {\n+                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) anyTO).getStatus(), e);\n+                    }\n+                }\n+                syncope.setStatus(syncopeStatus);\n+\n+                statusBeans.add(syncope);\n+            } else {\n+                for (String resource : resources) {\n+                    final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                            resource,\n+                            null,\n+                            anyTO instanceof GroupTO);\n+\n+                    statusBean.setLinked(false);\n+                    statusBeans.add(statusBean);\n+                }\n+            }\n+\n+            return statusBeans;\n+        }\n+    }\n+\n+    private void passwordManagement(\n+            final AjaxRequestTarget target,\n+            final ResourceAssociationAction type,\n+            final Collection<StatusBean> selection) {\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\"), pageRef) {\n+\n+                    private static final long serialVersionUID = -2341391430136818027L;\n+\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (StringUtils.isNotBlank(password.getModelObject())\n+                            && !password.getModelObject().equals(confirm.getModelObject())) {\n+                                throw new Exception(getString(\"passwordMismatch\"));\n+                            }\n+\n+                            final BulkActionResult bulkActionResult;\n+                            switch (type) {\n+                                case ASSIGN:\n+                                    bulkActionResult = userRestClient.assign(\n+                                            anyTO.getETagValue(),\n+                                            anyTO.getKey(),\n+                                            new ArrayList<>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                case PROVISION:\n+                                    bulkActionResult = userRestClient.provision(\n+                                            anyTO.getETagValue(),\n+                                            anyTO.getKey(),\n+                                            new ArrayList<>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                default:\n+                                    bulkActionResult = null;\n+                                // ignore\n+                            }\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                            if (bulkActionResult != null) {\n+                                loadBulkActionResultPage(selection, bulkActionResult);\n+                            } else {\n+\n+                                target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                                window.close(target);\n+                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }.feedbackPanelAutomaticReload(false);\n+\n+        pwdMgtForm.addOrReplace(goon);\n+\n+        table.setVisible(false);\n+        pwdMgtForm.setVisible(true).setEnabled(true);\n+\n+        target.add(table);\n+        target.add(pwdMgt);\n+    }\n+\n+    private void loadBulkActionResultPage(\n+            final Collection<StatusBean> selection, final BulkActionResult bulkActionResult) {\n+        final List<String> resources = new ArrayList<String>(selection.size());\n+        for (StatusBean statusBean : selection) {\n+            resources.add(statusBean.getResourceName());\n+        }\n+\n+        final List<ConnObjectWrapper> connObjects =\n+                statusUtils.getConnectorObjects(Collections.singletonList(anyTO), resources);\n+\n+        final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size());\n+\n+        for (ConnObjectWrapper entry : connObjects) {\n+            final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                    entry.getResourceName(),\n+                    entry.getConnObjectTO(),\n+                    anyTO instanceof GroupTO);\n+\n+            statusBeans.add(statusBean);\n+        }\n+\n+        setResponsePage(new BulkActionResultModalPage<StatusBean, String>(\n+                window,\n+                statusBeans,\n+                columns,\n+                bulkActionResult,\n+                \"resourceName\"));\n+    }\n+}"},{"sha":"0eeaa42f7817e497a147b795e0ec3a3aa1216987","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserDisplayAttributesModalPage.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display user attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class UserDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n+    \n+    public UserDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_USERS_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_USERS_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return UserTO.class;\n+    }\n+\n+}"},{"sha":"139283f4b6fffc912e16c81f7699bf3234bcb0bb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.rest.ConfigurationRestClient;\n+import org.apache.syncope.client.console.rest.ConnectorRestClient;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.rest.UserSelfRestClient;\n+import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.PriorityHeaderItem;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AbstractModalPanel extends Panel {\n+\n+    private static final long serialVersionUID = 8611724965544132636L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractModalPanel.class);\n+\n+    protected final BaseModal<?> modal;\n+\n+    protected static final String CANCEL = \"cancel\";\n+\n+    protected static final String SUBMIT = \"submit\";\n+\n+    protected static final String APPLY = \"apply\";\n+\n+    protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n+\n+    @SpringBean\n+    protected UserRestClient userRestClient;\n+\n+    @SpringBean\n+    protected UserSelfRestClient userSelfRestClient;\n+\n+    @SpringBean\n+    protected GroupRestClient groupRestClient;\n+\n+    @SpringBean\n+    protected TaskRestClient taskRestClient;\n+\n+    @SpringBean\n+    protected SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    protected ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    protected ConnectorRestClient connectorRestClient;\n+\n+    @SpringBean\n+    protected ReportRestClient reportRestClient;\n+\n+    @SpringBean\n+    protected ConfigurationRestClient confRestClient;\n+\n+    @SpringBean\n+    protected MIMETypesLoader mimeTypesInitializer;\n+\n+    public AbstractModalPanel(final BaseModal<?> modal) {\n+        super(BaseModal.getContentId());\n+        this.modal = modal;\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(new PriorityHeaderItem(meta));\n+    }\n+\n+    protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n+        this.modal.close(target);\n+    }\n+\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        modal.getFeedbackPanel().refresh(target);\n+    }\n+\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        modal.getFeedbackPanel().refresh(target);\n+    }\n+}"},{"sha":"5bda1fd0cc1f8662f208a5ce970542b99ca984a1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":18,"deletions":3,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -147,8 +147,19 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n      */\n     protected final AbstractBasePage page;\n \n+    /**\n+     * Realm related to current panel.\n+     */\n+    private final String realm;\n+\n+    /**\n+     * Any type related to current panel.\n+     */\n+    private final String type;\n+\n     protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient) {\n+            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient,\n+            final String realm, final String type) {\n \n         super(id);\n \n@@ -186,6 +197,9 @@ protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boo\n         add(container);\n \n         rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+\n+        this.realm = realm;\n+        this.type = type;\n     }\n \n     protected void initResultTable() {\n@@ -238,7 +252,7 @@ private void updateResultTable(final boolean create) {\n     }\n \n     private void updateResultTable(final boolean create, final int rows) {\n-        dataProvider = new AnyDataProvider(restClient, rows, filtered);\n+        dataProvider = new AnyDataProvider(restClient, rows, filtered, realm, type);\n         dataProvider.setFIQL(fiql);\n \n         final int currentPage = resultTable != null\n@@ -256,7 +270,8 @@ private void updateResultTable(final boolean create, final int rows) {\n                 restClient,\n                 \"key\",\n                 getPageId(),\n-                page.getPageReference());\n+                page.getPageReference(),\n+                container);\n \n         resultTable.setCurrentPage(currentPage);\n "},{"sha":"289cf265b4e79858bef64ca3f905b1e1632b167e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.ActionTableCheckGroup;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -33,7 +34,6 @@\n import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -87,7 +87,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         bulkActionForm.add(group);\n \n         columns.add(0, new CheckGroupColumn<T, S>(group));\n-        dataTable = new AjaxFallbackDefaultDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage);\n+        dataTable = new AjaxFallbackDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage, this);\n         group.add(dataTable);\n \n         final WebMarkupContainer actionPanelContainer = new WebMarkupContainer(\"actionPanelContainer\");"},{"sha":"b98ba7160151f692e8930a4c42d57c7f9d5f999c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -28,15 +28,17 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.pages.BulkActionModalPage;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n@@ -54,7 +56,8 @@ public AjaxDataTablePanel(\n             final BaseRestClient bulkActionExecutor,\n             final String itemKeyField,\n             final String pageId,\n-            final PageReference pageRef) {\n+            final PageReference pageRef,\n+            final WebMarkupContainer container) {\n \n         super(id);\n \n@@ -109,7 +112,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         bulkActionForm.add(group);\n \n         columns.add(0, new CheckGroupColumn<T, S>(group));\n-        dataTable = new AjaxFallbackDefaultDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage);\n+        dataTable = new AjaxFallbackDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage, container);\n+        dataTable.add(new AttributeModifier(\"class\", \"table table-bordered table-hover dataTable\"));\n+        \n         group.add(dataTable);\n \n         fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, pageRef) {"},{"sha":"e9b137d70415ac4beac739d1e29458b9c71e464a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"added","additions":250,"deletions":0,"changes":250,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class AnySearchResultPanel extends AbstractSearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnySearchResultPanel.class);\n+\n+    @SpringBean\n+    protected SchemaRestClient schemaRestClient;\n+\n+    protected final List<String> schemaNames;\n+\n+    protected final List<String> dSchemaNames;\n+\n+    protected final String pageID = \"Any\";\n+    \n+    private final String entitlement = \"USER_LIST\";\n+\n+    public AnySearchResultPanel(final String type, final String parentId, final boolean filtered,\n+            final String fiql, final PageReference callerRef, final AbstractAnyRestClient restClient,\n+            final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+        super(parentId, filtered, fiql, callerRef, restClient, realm, type);\n+        //setCustomMarkupId(markupId);\n+        add(new Label(\"name\", type));\n+\n+        this.schemaNames = new ArrayList<String>();\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            this.schemaNames.addAll(anyTypeClassTO.getPlainSchemas());\n+        }\n+        this.dSchemaNames = new ArrayList<String>();\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            this.dSchemaNames.addAll(anyTypeClassTO.getDerSchemas());\n+        }\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns =\n+                new ArrayList<IColumn<AnyTO, String>>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : AnyDisplayAttributesModalPage.ANY_DEFAULT_SELECTION) {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel.Builder<AnyTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                // SYNCOPE-294: re-read anyTO before edit\n+                                AnyObjectTO anyTO = ((AnyObjectRestClient) restClient).read(model.getObject().getKey());\n+                                return null;\n+                            }\n+                        });\n+\n+                        editmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        try {\n+                            AnyTO deleteAnyTO =\n+                                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            page.setModalResult(true);\n+\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID = -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return null;\n+                                }\n+                            });\n+\n+                            editmodal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new AnyDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel.build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<ActionLink.ActionType>();\n+\n+        bulkActions.add(ActionLink.ActionType.DELETE);\n+        bulkActions.add(ActionLink.ActionType.SUSPEND);\n+        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"b6b2c9b4e95e651ebee7212c025348a9ac62583e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeMenuItem.java","status":"renamed","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,18 +18,26 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class Any extends Panel {\n+public class AnyTypeMenuItem extends Panel {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(Any.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnyTypeMenuItem.class);\n \n-    public Any(final String id) {\n-        super(id);\n+    public AnyTypeMenuItem(final String label, final String href) {\n+        super(\"anytype-menuitem\");\n+\n+        WebMarkupContainer myLink = new WebMarkupContainer(\"tabLink\");\n+        myLink.add(new AttributeModifier(\"href\", \"#\" + href));\n+        myLink.add(new Label(\"tabLabel\", label));\n+        add(myLink);\n     }\n \n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Any.java"},{"sha":"46237ab52d1c4adc9bc37756df520a94895602c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -22,8 +22,8 @@\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Set;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.DataGridView;\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -43,7 +43,7 @@\n \n     protected CheckGroup<T> group;\n \n-    protected AjaxFallbackDefaultDataTable<T, S> dataTable;\n+    protected AjaxFallbackDataTable<T, S> dataTable;\n \n     protected IModel<Collection<T>> model;\n "},{"sha":"38edbf0d45dc69eeeb09096cc5ca49c02de30542","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/FailureMessageModal.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+\n+public class FailureMessageModal extends ModalContent {\n+\n+    private static final long serialVersionUID = 9216117990503199258L;\n+\n+    public FailureMessageModal(final PageReference pageRef, final ModalWindow window, final String failureMessage) {\n+        super(window, pageRef);\n+        final Label executionFailureMessage;\n+        if (!failureMessage.isEmpty()) {\n+            executionFailureMessage = new Label(\"failureMessage\", new Model<String>(failureMessage));\n+        } else {\n+            executionFailureMessage = new Label(\"failureMessage\");\n+        }\n+        add(executionFailureMessage.setOutputMarkupId(true));\n+    }\n+}"},{"sha":"5bfbe13d71dd878337c47d3422b0e5c7ce6a2b89","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupModalPanel.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.Mode;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+/**\n+ * Modal window with Group form.\n+ */\n+public class GroupModalPanel extends AbstractModalPanel {\n+\n+    private static final long serialVersionUID = -1732493223434085205L;\n+\n+    protected final Mode mode;\n+\n+    protected final boolean createFlag;\n+\n+    protected final GroupPanel groupPanel;\n+\n+    protected GroupTO originalGroupTO;\n+\n+    public GroupModalPanel(final BaseModal<?> modal, final GroupTO groupTO) {\n+        this(modal, groupTO, Mode.ADMIN);\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    public GroupModalPanel(final BaseModal<?> modal, final GroupTO groupTO, final Mode mode) {\n+\n+        super(modal);\n+\n+        this.mode = mode;\n+\n+        this.createFlag = groupTO.getKey() == 0;\n+        if (!createFlag) {\n+            originalGroupTO = SerializationUtils.clone(groupTO);\n+        }\n+\n+        final Form<GroupTO> form = new Form<>(\"groupForm\");\n+        form.setMultiPart(true);\n+\n+        add(new Label(\"displayName\", groupTO.getKey() == 0 ? \"\" : groupTO.getDisplayName()));\n+\n+        form.setModel(new CompoundPropertyModel<>(groupTO));\n+\n+        this.groupPanel = new GroupPanel.Builder(\"groupPanel\").\n+                form(form).groupTO(groupTO).groupModalPageMode(mode).build();\n+        form.add(groupPanel);\n+\n+        final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    submitAction(target, form);\n+                } catch (Exception e) {\n+                    LOG.error(\"Failure managing groupTO {}\", groupTO, e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    modal.getFeedbackPanel().refresh(target);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                modal.getFeedbackPanel().refresh(target);\n+            }\n+        };\n+        form.add(submit);\n+        form.setDefaultButton(submit);\n+    }\n+\n+    protected void submitAction(final AjaxRequestTarget target, final Form<?> form) {\n+        final GroupTO groupTO = (GroupTO) form.getDefaultModelObject();\n+\n+        GroupTO result;\n+        if (createFlag) {\n+            result = groupRestClient.create(groupTO);\n+        } else {\n+            GroupMod groupMod = AnyOperations.diff(groupTO, groupTO);\n+\n+            // update group just if it is changed\n+            if (groupMod.isEmpty()) {\n+                result = groupTO;\n+            } else {\n+                result = groupRestClient.update(originalGroupTO.getETagValue(), groupMod);\n+            }\n+        }\n+\n+        //setResponsePage(new ResultStatusModal.Builder(window, result).build());\n+    }\n+}"},{"sha":"3e58e61b93988dc77ad5b0e9daaab4a8a1b0dc3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupPanel.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.commons.Mode;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public final class GroupPanel extends Panel {\n+\n+    private static final long serialVersionUID = 4216376097320768369L;\n+\n+    public static class Builder implements Serializable {\n+\n+        private static final long serialVersionUID = 8150440254654306070L;\n+\n+        private String id;\n+\n+        private Form form;\n+\n+        private GroupTO groupTO;\n+\n+        private Mode mode;\n+\n+        private PageReference pageReference;\n+\n+        public Builder(final String id) {\n+            this.id = id;\n+        }\n+\n+        public Builder form(final Form form) {\n+            this.form = form;\n+            return this;\n+        }\n+\n+        public Builder groupTO(final GroupTO groupTO) {\n+            this.groupTO = groupTO;\n+            return this;\n+        }\n+\n+        public Builder groupModalPageMode(final Mode mode) {\n+            this.mode = mode;\n+            return this;\n+        }\n+\n+        public GroupPanel build() {\n+            return new GroupPanel(this);\n+        }\n+    }\n+\n+    private GroupPanel(final Builder builder) {\n+        super(builder.id);\n+        \n+\n+    }\n+}"},{"sha":"ffc232ac88cb8bce9b99064b22c03863efbda8c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"added","additions":218,"deletions":0,"changes":218,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,218 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class GroupSearchResultPanel extends AnySearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    private final String entitlement = \"GROUP_READ\";\n+\n+    private final BaseModal<AbstractModalPanel> editModal;\n+\n+    public GroupSearchResultPanel(final String type, final String parentId,\n+            final boolean filtered, final String fiql, final PageReference callerRef,\n+            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+\n+        super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n+\n+        editModal = new BaseModal<>(\"editModal\");\n+//        editModal.addCloseButton();\n+//        editModal.setFooterVisible(true);\n+//        editModal.setHeaderVisible(true);\n+//        editModal.setOutputMarkupId(true);\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns = new ArrayList<>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(GroupTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n+                    Arrays.asList(GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<AnyTO> getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel.Builder<AnyTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        editModal.addOrReplace(new GroupModalPanel(editModal, (GroupTO) model.getObject()));\n+\n+                        target.add(editModal);\n+                        editModal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        try {\n+                            final GroupTO groupTO = (GroupTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            //editmodal.setContent(new ResultStatusModal.Builder(editmodal, groupTO).build());\n+//                            editModal.addOrReplace(new GroupModalPanel(\n+//                                    BaseModal.getModalContentId(), editModal, (GroupTO) model.getObject()));\n+//\n+//                            target.add(editModal);\n+//                            editModal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new GroupDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement);\n+\n+                panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel.build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"49ab781fd966bfa017d00dc0e9a68b5561430b76","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":91,"deletions":10,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,8 +18,24 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.syncope.common.lib.types.AnyTypeKind.USER;\n+\n+import com.googlecode.wicket.jquery.core.panel.LabelPanel;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -31,19 +47,84 @@ public class Realm extends Panel {\n \n     private final RealmTO realmTO;\n \n-    public Realm(final String id, final RealmTO realmTO) {\n+    private final List<AnyTypeTO> anyTypeTOs;\n+\n+    @SpringBean\n+    private AnyTypeRestClient anyTypeRestClient;\n+\n+    @SpringBean\n+    private UserRestClient userRestClient;\n+\n+    @SpringBean\n+    private GroupRestClient groupRestClient;\n+\n+    @SpringBean\n+    private AnyObjectRestClient anyObjectRestClient;\n+\n+    @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n+    public Realm(final String id, final RealmTO realmTO, final PageReference pageReference) {\n         super(id);\n         this.realmTO = realmTO;\n+        this.anyTypeTOs = anyTypeRestClient.getAll();\n+\n+        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageReference)));\n+    }\n+\n+    public RealmTO getRealmTO() {\n+        return realmTO;\n+    }\n \n-        add(new RealmDetails(\"details\", realmTO));\n-        add(new Any(\"users\"));\n-        add(new Any(\"groups\"));\n-        add(new Any(\"services\"));\n-        add(new Any(\"serviceRoles\"));\n-        add(new Any(\"contexts\"));\n-        add(new Any(\"enactmentEngine\"));\n-        add(new AccountPolicy(\"accountPolicy\"));\n-        add(new PasswordPolicy(\"passwordPolicy\"));\n+    private List<ITab> buildTabList(final PageReference pageReference) {\n+\n+        final List<ITab> tabs = new ArrayList<>();\n+\n+        tabs.add(new AbstractTab(new Model<>(\"DETAILS\")) {\n+\n+            private static final long serialVersionUID = -5861786415855103549L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new RealmDetails(panelId, realmTO);\n+            }\n+        });\n+\n+        for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n+\n+            tabs.add(new AbstractTab(new Model<>(anyTypeTO.getKey())) {\n+\n+                private static final long serialVersionUID = -5861786415855103549L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return getAnyPanel(panelId, pageReference, anyTypeTO);\n+                }\n+            });\n+        }\n+        return tabs;\n     }\n \n+    private Panel getAnyPanel(final String id, final PageReference pageReference, final AnyTypeTO anyTypeTO) {\n+        final Panel panel;\n+\n+            switch (anyTypeTO.getKind()) {\n+                case USER:\n+                    panel = new UserSearchResultPanel(anyTypeTO.getKey(), id,\n+                            false, null, pageReference, userRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                    anyTypeTO.getClasses()), realmTO.getFullPath());\n+                    break;\n+                case GROUP:\n+                    panel = new GroupSearchResultPanel(anyTypeTO.getKey(), id,\n+                            false, null, pageReference, groupRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                    anyTypeTO.getClasses()), realmTO.getFullPath());\n+                    break;\n+                case ANY_OBJECT:\n+                    panel = new AnySearchResultPanel(anyTypeTO.getKey(), id,\n+                            false, null, pageReference, anyObjectRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                    anyTypeTO.getClasses()), realmTO.getFullPath());\n+                    break;\n+                default:\n+                    panel = new LabelPanel(id, null);\n+            }\n+        return panel;\n+    }\n }"},{"sha":"b9abec3af3a1421d853be0fc300930acdac4c78b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,8 +18,9 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n@@ -33,9 +34,24 @@ public class RealmDetails extends Panel {\n \n     public RealmDetails(final String id, final RealmTO realmTO) {\n         super(id);\n-        add(new TextField<>(\"id\", new PropertyModel<>(realmTO, \"key\")).setEnabled(false));\n-        add(new TextField<>(\"name\", new PropertyModel<>(realmTO, \"name\")).setEnabled(false));\n-        add(new TextField<>(\"path\", new PropertyModel<>(realmTO, \"fullPath\")).setEnabled(false));\n-    }\n+        final FieldPanel<String> name =\n+                new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(realmTO, \"name\"));\n+        name.addRequiredLabel();\n+        add(name);\n+\n+        final FieldPanel<String> fullPath =\n+                new AjaxTextFieldPanel(\"fullPath\", \"fullPath\", new PropertyModel<String>(realmTO, \"fullPath\"));\n+        fullPath.setEnabled(false);\n+        add(fullPath);\n \n+        final FieldPanel<String> accountPolicy =\n+                new AjaxTextFieldPanel(\"accountPolicy\",\n+                        \"accountPolicy\", new PropertyModel<String>(realmTO, \"accountPolicy\"));\n+        add(accountPolicy);\n+\n+        final FieldPanel<String> passwordPolicy =\n+                new AjaxTextFieldPanel(\"passwordPolicy\",\n+                        \"passwordPolicy\", new PropertyModel<String>(realmTO, \"passwordPolicy\"));\n+        add(passwordPolicy);\n+    }\n }"},{"sha":"7e8f4155349b4b85d8617b2f7332caf608c6950a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class RealmModalPanel extends AbstractModalPanel {\n+\n+    private static final long serialVersionUID = -4285220460543213901L;\n+\n+    protected RealmTO realmTO;\n+\n+    private final PageReference pageRef;\n+\n+    private boolean newRealm = false;\n+\n+    @SpringBean\n+    private RealmRestClient realmRestClient;\n+\n+    private final String parentPath;\n+\n+    public RealmModalPanel(\n+            final BaseModal<?> modal,\n+            final PageReference pageRef,\n+            final RealmTO realmTO,\n+            final String parentPath,\n+            final String entitlement) {\n+        this(modal, pageRef, realmTO, parentPath, entitlement, false);\n+    }\n+\n+    public RealmModalPanel(\n+            final BaseModal<?> modal,\n+            final PageReference pageRef,\n+            final RealmTO realmTO,\n+            final String parentPath,\n+            final String entitlement,\n+            final boolean newRealm) {\n+\n+        super(modal);\n+        this.newRealm = newRealm;\n+\n+        this.pageRef = pageRef;\n+        this.realmTO = realmTO;\n+        this.parentPath = parentPath;\n+\n+        final RealmDetails realmDetail = new RealmDetails(\"details\", realmTO);\n+        if (SyncopeConsoleSession.get().owns(entitlement)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(realmDetail, ENABLE, entitlement);\n+        }\n+\n+        add(realmDetail);\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            final RealmTO updatedRealmTO = RealmTO.class.cast(form.getModelObject());\n+            if (newRealm) {\n+                realmRestClient.create(this.parentPath, updatedRealmTO);\n+            } else {\n+                realmRestClient.update(updatedRealmTO);\n+            }\n+\n+            if (pageRef.getPage() instanceof BasePage) {\n+                ((BasePage) pageRef.getPage()).setModalResult(true);\n+            }\n+\n+            AbstractBasePage.class.cast(pageRef.getPage()).setModalResult(true);\n+\n+            closeAction(target, form);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating realm\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+}"},{"sha":"5d0d7b8d643e7a428aacb530ca0ba0b9b9722d3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"added","additions":271,"deletions":0,"changes":271,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.link.Link;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class RealmSidebarPanel extends Panel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    @SpringBean\n+    private RealmRestClient realmRestClient;\n+\n+    private final WebMarkupContainer menu;\n+\n+    private List<RealmTO> currentPath;\n+\n+    private final PageReference pageRef;\n+\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> tree;\n+\n+    private boolean reload = false;\n+\n+    public RealmSidebarPanel(final String id, final PageReference pageRef) {\n+        super(id);\n+        this.pageRef = pageRef;\n+\n+        final List<RealmTO> realms = realmRestClient.list();\n+        Collections.sort(realms, new RealmNameComparator());\n+\n+        menu = new WebMarkupContainer(\"menu\");\n+        menu.setOutputMarkupId(true);\n+        add(menu);\n+\n+        reloadRealmTree(reloadRealmParentMap(realms), 0L, menu);\n+    }\n+\n+    public final RealmSidebarPanel reloadRealmTree() {\n+        reloadRealmTree(reloadRealmParentMap(), 0L, menu);\n+        return this;\n+    }\n+\n+    private MarkupContainer reloadRealmTree(\n+            final Map<Long, Pair<RealmTO, List<RealmTO>>> parentMap, final Long key, final MarkupContainer container) {\n+\n+        // set the current active path base on the current parent map\n+        setCurrentRealm(getCurrentRealm());\n+\n+        final RepeatingView listItems = new RepeatingView(\"list\");\n+        listItems.setOutputMarkupId(true);\n+        container.addOrReplace(listItems);\n+\n+        if (!parentMap.containsKey(key)) {\n+            return container;\n+        }\n+\n+        for (final RealmTO realm : parentMap.get(key).getRight()) {\n+            final Fragment fragment;\n+\n+            final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    RealmSidebarPanel.this.setCurrentRealm(realm);\n+                    send(pageRef.getPage(), Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n+                }\n+\n+                @Override\n+                protected void onComponentTag(final ComponentTag tag) {\n+                    super.onComponentTag(tag);\n+                    tag.put(\"href\", \"#\");\n+                }\n+            };\n+\n+            link.setMarkupId(\"item-\" + realm.getKey());\n+            link.addOrReplace(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n+\n+            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).getRight().isEmpty()) {\n+                fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", RealmSidebarPanel.this);\n+\n+                final Link<Void> angle = new Link<Void>(\"angle\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick() {\n+                    }\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        super.onComponentTag(tag);\n+                        tag.put(\"href\", \"#\");\n+                    }\n+                };\n+\n+                angle.setMarkupId(\"angle-\" + realm.getKey());\n+                fragment.addOrReplace(angle);\n+\n+                final WebMarkupContainer subtree = new WebMarkupContainer(\"subtree\");\n+                subtree.setOutputMarkupId(true);\n+                subtree.setMarkupId(\"subtree\");\n+                fragment.add(subtree);\n+\n+                reloadRealmTree(parentMap, realm.getKey(), subtree);\n+            } else {\n+                fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", RealmSidebarPanel.this);\n+            }\n+\n+            fragment.addOrReplace(link);\n+            fragment.setOutputMarkupId(true);\n+            listItems.addOrReplace(fragment);\n+        }\n+\n+        return container;\n+    }\n+\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n+        final List<RealmTO> realms = realmRestClient.list();\n+        Collections.sort(realms, new RealmNameComparator());\n+        return reloadRealmParentMap(realms);\n+    }\n+\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n+        tree = new HashMap<>();\n+        tree.put(0L, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n+\n+        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n+\n+        for (RealmTO realm : realms) {\n+            if (tree.containsKey(realm.getParent())) {\n+                tree.get(realm.getParent()).getRight().add(realm);\n+\n+                final List<RealmTO> children = new ArrayList<>();\n+                tree.put(realm.getKey(), Pair.<RealmTO, List<RealmTO>>of(realm, children));\n+\n+                if (cache.containsKey(realm.getKey())) {\n+                    children.addAll(cache.get(realm.getKey()));\n+                    cache.remove(realm.getKey());\n+                }\n+            } else if (cache.containsKey(realm.getParent())) {\n+                cache.get(realm.getParent()).add(realm);\n+            } else {\n+                final List<RealmTO> children = new ArrayList<>();\n+                children.add(realm);\n+                cache.put(realm.getParent(), children);\n+            }\n+        }\n+\n+        return tree;\n+    }\n+\n+    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n+\n+        private static final long serialVersionUID = 7085057398406518811L;\n+\n+        @Override\n+        public int compare(final RealmTO r1, final RealmTO r2) {\n+            if (r1 == null && r2 == null) {\n+                return 0;\n+            } else if (r1 != null && r2 != null) {\n+                return r1.getName().compareTo(r2.getName());\n+            } else if (r1 == null && r2 != null) {\n+                return -1;\n+            } else {\n+                return 1;\n+            }\n+        }\n+    }\n+\n+    public final void setCurrentRealm(final RealmTO realmTO) {\n+        RealmTO realm;\n+\n+        if (tree.containsKey(realmTO.getKey())) {\n+            realm = realmTO;\n+        } else if (tree.containsKey(realmTO.getParent())) {\n+            realm = tree.get(realmTO.getParent()).getLeft();\n+        } else {\n+            realm = tree.get(0L).getLeft();\n+        }\n+\n+        this.currentPath = new ArrayList<>();\n+        this.currentPath.add(realm);\n+\n+        while (realm.getParent() != 0L) {\n+            realm = tree.get(realm.getParent()).getLeft();\n+            this.currentPath.add(realm);\n+        }\n+    }\n+\n+    public RealmTO getCurrentRealm() {\n+        return this.currentPath == null || this.currentPath.isEmpty()\n+                ? tree.get(0L).getLeft() : this.currentPath.get(0);\n+    }\n+\n+    public static class ControlSidebarClick<T> {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final T obj;\n+\n+        public ControlSidebarClick(final T obj, final AjaxRequestTarget target) {\n+            this.obj = obj;\n+            this.target = target;\n+        }\n+\n+        public T getObj() {\n+            return obj;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        if (reload) {\n+            response.render(OnLoadHeaderItem.forScript(\"$.AdminLTE.tree('.syncopeSidebar');\"));\n+\n+            for (RealmTO realm : this.currentPath.subList(1, this.currentPath.size())) {\n+                response.render(OnLoadHeaderItem.forScript(String.format(\"$('#angle-%d').click();\", realm.getKey())));\n+            }\n+        } else {\n+            reload = true;\n+        }\n+    }\n+}"},{"sha":"de4d65ac06eabdeb2cde748dbe479c1745fe75de","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"added","additions":267,"deletions":0,"changes":267,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,267 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.StatusModalPage;\n+import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class UserSearchResultPanel extends AnySearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(UserSearchResultPanel.class);\n+\n+    private final String entitlement = \"USER_LIST\";\n+\n+    public UserSearchResultPanel(final String type, final String parentId,\n+            final boolean filtered, final String fiql, final PageReference callerRef,\n+            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+\n+        super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns = new ArrayList<IColumn<AnyTO, String>>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(UserTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION) {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n+                    Arrays.asList(UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel.Builder<AnyTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage<>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject());\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, entitlement).add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage<>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject(), true);\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.ENABLE, entitlement).add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                // SYNCOPE-294: re-read userTO before edit\n+                                UserTO userTO = ((UserRestClient) restClient).read(model.getObject().getKey());\n+                                return null;\n+                            }\n+                        });\n+\n+                        editmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                        try {\n+                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            page.setModalResult(true);\n+\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID = -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return null;\n+                                }\n+                            });\n+\n+                            editmodal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel.build(componentId, model.getObject());\n+            }\n+\n+            @Override\n+            public ActionLinksPanel getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new UserDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel.build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"42eae3773d538e839606f46007baefb83b389685","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -40,12 +40,12 @@ public abstract class AbstractAnyRestClient extends BaseRestClient {\n     public abstract int count(String realm);\n \n     public abstract List<? extends AnyTO> list(\n-            String realm, int page, int size, final SortParam<String> sort);\n+            String realm, int page, int size, final SortParam<String> sort, final String type);\n \n-    public abstract int searchCount(String realm, String fiql);\n+    public abstract int searchCount(String realm, String fiql, final String type);\n \n     public abstract List<? extends AnyTO> search(\n-            String realm, String fiql, int page, int size, final SortParam<String> sort);\n+            String realm, String fiql, int page, int size, final SortParam<String> sort, final String type);\n \n     public abstract ConnObjectTO readConnObject(String resourceName, Long key);\n "},{"sha":"b4a4642d56a219b9f9a5c0bdb44fc9114dcbd30b","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"added","additions":113,"deletions":0,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest any type class services.\n+ */\n+@Component\n+public class AnyObjectRestClient extends AbstractAnyRestClient {\n+\n+    private static final long serialVersionUID = -8874495991295283249L;\n+\n+    @Override\n+    public int count(final String realm) {\n+        return getService(AnyObjectService.class).list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(\n+                1).build()).getTotalCount();\n+    }\n+\n+    @Override\n+    public List<? extends AnyTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n+        return list(type, realm).getResult();\n+    }\n+\n+    public PagedResult<AnyObjectTO> list(final String type, final String realm) {\n+        return getService(AnyObjectService.class).\n+                list(type, SyncopeClient.getAnyListQueryBuilder().realm(realm).build());\n+    }\n+\n+    @Override\n+    public int searchCount(final String realm, final String fiql, final String type) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public List<? extends AnyTO> search(final String realm, final String fiql, final int page, final int size,\n+            final SortParam<String> sort,\n+            final String type) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public ConnObjectTO readConnObject(final String resourceName, final Long key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    public AnyObjectTO read(final Long id) {\n+        AnyObjectTO anyObjectTO = null;\n+        try {\n+            anyObjectTO = getService(AnyObjectService.class).read(id);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading any object\", e);\n+        }\n+        return anyObjectTO;\n+    }\n+\n+    public AnyObjectTO create(final AnyObjectTO anyObjectTO) {\n+        final Response response = getService(AnyObjectService.class).create(anyObjectTO);\n+        return response.readEntity(AnyObjectTO.class);\n+    }\n+\n+    public AnyObjectTO update(final String etag, final AnyObjectMod anyObjectMod) {\n+        AnyObjectTO result;\n+        synchronized (this) {\n+            AnyObjectService service = getService(etag, AnyObjectService.class);\n+            result = service.update(anyObjectMod).readEntity(AnyObjectTO.class);\n+            resetClient(AnyObjectService.class);\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public AnyTO delete(final String etag, final Long key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+}"},{"sha":"113e30d0f818add52af8022b14677045c0c84f81","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,9 +18,12 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.springframework.stereotype.Component;\n \n@@ -43,4 +46,12 @@ public List<AnyTypeTO> getAll() {\n \n         return types;\n     }\n+\n+    public List<AnyTypeClassTO> getAnyTypeClass(final List<String> anyTypeClassNames) {\n+        List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n+        for (String anyTypeClass : anyTypeClassNames) {\n+            anyTypeClassTOs.add(getService(AnyTypeClassService.class).read(anyTypeClass));\n+        }\n+        return anyTypeClassTOs;\n+    }\n }"},{"sha":"96286d4a6e9dbef27e4ddcc875170cf797b3d59f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -55,23 +55,25 @@ public int count(final String realm) {\n     }\n \n     @Override\n-    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n         return getService(GroupService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n \n     @Override\n-    public int searchCount(final String realm, final String fiql) {\n+    public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(GroupService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<GroupTO> search(\n-            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n \n         return getService(GroupService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size)."},{"sha":"2d99ee71212b691646ad4d4d77c9f00d794542d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.springframework.stereotype.Component;\n@@ -35,4 +34,16 @@ public class RealmRestClient extends BaseRestClient {\n     public List<RealmTO> list() {\n         return getService(RealmService.class).list();\n     }\n+\n+    public void create(final String parentPath, final RealmTO realmTO) {\n+        getService(RealmService.class).create(parentPath, realmTO);\n+    }\n+\n+    public void update(final RealmTO realmTO) {\n+        getService(RealmService.class).update(realmTO);\n+    }\n+\n+    public void delete(final String fullPath) {\n+        getService(RealmService.class).delete(fullPath);\n+    }\n }"},{"sha":"a7804531469a45c7a04f88567ffa1f087dd87ba5","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -59,7 +59,8 @@ public int count(final String realm) {\n     }\n \n     @Override\n-    public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+    public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n         return getService(UserService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).details(false).build()).\n@@ -103,15 +104,16 @@ public UserTO read(final Long id) {\n     }\n \n     @Override\n-    public int searchCount(final String realm, final String fiql) {\n+    public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(UserService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<UserTO> search(\n-            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n \n         return getService(UserService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size)."},{"sha":"1381c005d0b0a906eda743bb600100c43a6abc38","filename":"client/console/src/main/java/org/apache/syncope/client/console/themes/AdminLTE.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.themes;\n+\n+import de.agilecoders.wicket.core.settings.Theme;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIAllJavaScriptReference;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUICoreJavaScriptReference;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIDraggableJavaScriptReference;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIMouseJavaScriptReference;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIResizableJavaScriptReference;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIWidgetJavaScriptReference;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.markup.head.CssHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n+import org.apache.wicket.resource.JQueryPluginResourceReference;\n+\n+public class AdminLTE extends Theme {\n+\n+    public AdminLTE() {\n+        super(\"adminLTE\");\n+    }\n+\n+    @Override\n+    public List<HeaderItem> getDependencies() {\n+        final List<HeaderItem> references = new ArrayList<>();\n+        references.add(JavaScriptHeaderItem.forReference(\n+                new JQueryPluginResourceReference(AdminLTE.class, \"js/AdminLTE-app.min.js\"), \"adminltejs\"));\n+\n+        // Adds WebjarsJavaScriptResourceReference about JQuery\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUIAllJavaScriptReference.instance()));\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUICoreJavaScriptReference.instance()));\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUIMouseJavaScriptReference.instance()));\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUIWidgetJavaScriptReference.instance()));\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUIResizableJavaScriptReference.instance()));\n+        references.add(JavaScriptHeaderItem.forReference(JQueryUIDraggableJavaScriptReference.instance()));\n+\n+        references.add(CssHeaderItem.forReference(AdminLTECssResourceReference.INSTANCE));\n+        references.addAll(super.getDependencies());\n+        return references;\n+    }\n+}"},{"sha":"4eacbbdb4ec78e12c9ddcf840f7944e0a8e42965","filename":"client/console/src/main/java/org/apache/syncope/client/console/themes/AdminLTECssResourceReference.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTECssResourceReference.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTECssResourceReference.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTECssResourceReference.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.themes;\n+\n+import de.agilecoders.wicket.core.Bootstrap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.markup.head.CssHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.request.resource.CssResourceReference;\n+\n+public class AdminLTECssResourceReference extends CssResourceReference {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Singleton instance of this reference\n+     */\n+    public static final AdminLTECssResourceReference INSTANCE = new AdminLTECssResourceReference();\n+\n+    public AdminLTECssResourceReference() {\n+        super(AdminLTECssResourceReference.class, \"css/AdminLTE.css\");\n+    }\n+\n+    @Override\n+    public List<HeaderItem> getDependencies() {\n+        final List<HeaderItem> dependencies = new ArrayList<>();\n+        dependencies.add(CssHeaderItem.forReference(Bootstrap.getSettings().getCssResourceReference()));\n+        dependencies.addAll(super.getDependencies());\n+        return dependencies;\n+    }\n+}"},{"sha":"077521b963a7fa564de1003a0a4a697b24bf8bf0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/navigation/paging/AjaxDataNavigationToolbar.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.markup.html.navigation.paging;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.navigation.ajax.BootstrapAjaxPagingNavigator;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxNavigationToolbar;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.navigation.paging.PagingNavigator;\n+\n+public class AjaxDataNavigationToolbar extends AjaxNavigationToolbar {\n+\n+    private static final long serialVersionUID = -225570234877133351L;\n+\n+    private final WebMarkupContainer container;\n+    \n+    public AjaxDataNavigationToolbar(final DataTable<?, ?> table, final WebMarkupContainer container) {\n+        super(table);\n+        this.container = container;\n+    }\n+\n+    @Override\n+    protected PagingNavigator newPagingNavigator(final String navigatorId, final DataTable<?, ?> table) {\n+        return new BootstrapAjaxPagingNavigator(navigatorId, table) {\n+\n+            private static final long serialVersionUID = -5254490177324296529L;\n+\n+            @Override\n+            protected void onAjaxEvent(final AjaxRequestTarget target) {\n+                target.add(table);\n+                target.add(container);\n+            }\n+        };\n+    }\n+}"},{"sha":"b9dfa62e51a84a5e9323a15025e93676c8854303","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class ActionColumn<T, S> extends AbstractColumn<T, S> {\n+\n+    private static final long serialVersionUID = 7955560320949560725L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(ActionColumn.class);\n+\n+    public ActionColumn(final IModel<String> displayModel) {\n+        super(displayModel);\n+    }\n+\n+    @Override\n+    public String getCssClass() {\n+        return \"action\";\n+    }\n+\n+    @Override\n+    public Component getHeader(final String componentId) {\n+        return super.getHeader(componentId);\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n+        item.add(getActions(componentId, rowModel));\n+    }\n+\n+    public abstract ActionLinksPanel getActions(final String componentId, final IModel<T> rowModel);\n+}"},{"sha":"53096b2dc30207bb75b54496df6706734b681bb0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.navigation.paging.AjaxDataNavigationToolbar;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackHeadersToolbar;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.NoRecordsToolbar;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.markup.repeater.OddEvenItem;\n+import org.apache.wicket.model.IModel;\n+\n+public class AjaxFallbackDataTable<T, S> extends DataTable<T, S> {\n+\n+    private static final long serialVersionUID = 6861105496141602937L;\n+\n+    public AjaxFallbackDataTable(final String id, final List<? extends IColumn<T, S>> columns,\n+            final ISortableDataProvider<T, S> dataProvider, final int rowsPerPage, final WebMarkupContainer container) {\n+        super(id, columns, dataProvider, rowsPerPage);\n+        setOutputMarkupId(true);\n+        setVersioned(false);\n+        addTopToolbar(new AjaxDataNavigationToolbar(this, container));\n+        addTopToolbar(new AjaxFallbackHeadersToolbar<>(this, dataProvider));\n+        addBottomToolbar(new NoRecordsToolbar(this));\n+    }\n+\n+    @Override\n+    protected Item<T> newRowItem(final String id, final int index, final IModel<T> model) {\n+        return new OddEvenItem<>(id, index, model);\n+    }\n+}"},{"sha":"029a523b564e9c0a5d2ce11940d7ab30402b333b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+\n+public class AttrColumn extends AbstractColumn<AnyTO, String> {\n+\n+    private static final long serialVersionUID = 2624734332447371372L;\n+\n+    private final String name;\n+\n+    private final SchemaType schemaType;\n+\n+    public AttrColumn(final String name, final SchemaType schemaType) {\n+        // set sortProperty to schematype#name (e.g. derivedSchema#cn, \n+        // for use with SortableUserProviderComparator.AttrModel#getObject)\n+        super(new ResourceModel(name, name), schemaType.name() + \"#\" + name);\n+        this.name = name;\n+        this.schemaType = schemaType;\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<AnyTO>> cellItem, final String componentId,\n+            final IModel<AnyTO> rowModel) {\n+        List<String> values = null;\n+\n+        switch (schemaType) {\n+            case PLAIN:\n+                if (rowModel.getObject().getPlainAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getPlainAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            case VIRTUAL:\n+                if (rowModel.getObject().getVirAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getVirAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            case DERIVED:\n+                if (rowModel.getObject().getDerAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getDerAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            default:\n+        }\n+\n+        if (values == null || values.isEmpty()) {\n+            cellItem.add(new Label(componentId, \"\"));\n+        } else {\n+            if (values.size() == 1) {\n+                cellItem.add(new Label(componentId, values.get(0)));\n+            } else {\n+                cellItem.add(new Label(componentId, values.toString()));\n+            }\n+        }\n+    }\n+}"},{"sha":"7e1fc1d6e54a7c64e8b8c4dc423b8b05f44221dd","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/buttons/DefaultModalCloseButton.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.ModalCloseButton;\n+import org.apache.wicket.behavior.AttributeAppender;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class DefaultModalCloseButton extends ModalCloseButton {\n+\n+    private static final long serialVersionUID = -1097993976905448580L;\n+\n+    public DefaultModalCloseButton() {\n+        super(new ResourceModel(\"cancel\", \"Cancel\"));\n+\n+        add(new AttributeAppender(\"class\", \" pull-left\"));\n+    }\n+}"},{"sha":"336f85ed48da1c30573b01ad14ad21e351e28f4c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/buttons/PrimaryModalButton.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FPrimaryModalButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FPrimaryModalButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FPrimaryModalButton.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons;\n+\n+import com.googlecode.wicket.jquery.ui.markup.html.link.AjaxSubmitLink;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.ButtonBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.Buttons;\n+import org.apache.wicket.markup.html.form.Form;\n+\n+public class PrimaryModalButton extends AjaxSubmitLink {\n+\n+    private static final long serialVersionUID = -1097993976905448580L;\n+\n+    public PrimaryModalButton(final String id, final String name, final Form<?> form) {\n+        super(id, form);\n+        add(new ButtonBehavior(Buttons.Type.Primary, Buttons.Size.Medium));\n+\n+    }\n+}"},{"sha":"e67daac909c6669becc88e15ae21302247011374","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"added","additions":199,"deletions":0,"changes":199,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,199 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.behavior.Draggable;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.behavior.DraggableConfig;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.behavior.Resizable;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.DefaultModalCloseButton;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.PrimaryModalButton;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BaseModal<T extends Serializable> extends Modal<T> {\n+\n+    private static final long serialVersionUID = -6142277554912316095L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(BaseModal.class);\n+\n+    /** the default id of the content component */\n+    public static final String CONTENT_ID = \"content\";\n+\n+    private static final String SUBMIT = \"submit\";\n+\n+    private static final String FORM = \"form\";\n+\n+    private final NotificationPanel feedbackPanel;\n+\n+    private final List<Component> components;\n+\n+    private WindowClosedCallback windowClosedCallback;\n+\n+    private AbstractModalPanel content;\n+\n+    private PrimaryModalButton submitButton;\n+\n+    private final Form<T> form;\n+\n+    public BaseModal(final String id) {\n+        super(id);\n+\n+        feedbackPanel = new NotificationPanel(Constants.FEEDBACK);\n+        feedbackPanel.setOutputMarkupId(true);\n+        add(feedbackPanel);\n+\n+        form = new Form<T>(FORM);\n+        add(form);\n+\n+        content = new AbstractModalPanel(this) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+        };\n+\n+        content.setOutputMarkupId(true);\n+\n+        form.add(content);\n+\n+        setUseCloseHandler(true);\n+        this.windowClosedCallback = null;\n+        components = new ArrayList<>();\n+\n+        // Note: it would imply the adding of WebjarsJavaScriptResourceReference about JQuery resizable and mouse\n+        add(new Resizable().withChildSelector(\".modal-content\"));\n+\n+        // Note: it would imply the adding of WebjarsJavaScriptResourceReference about JQuery draggable\n+        add(new Draggable(new DraggableConfig().withHandle(\".modal-header\").withCursor(\"move\")));\n+\n+        addButton(new DefaultModalCloseButton());\n+        setUseKeyboard(true);\n+        setFadeIn(true);\n+\n+    }\n+\n+    public NotificationPanel getFeedbackPanel() {\n+        return feedbackPanel;\n+    }\n+\n+    public Form<T> getForm() {\n+        return form;\n+    }\n+\n+    public BaseModal<T> setFormModel(final T modelObject) {\n+        form.setModel(new CompoundPropertyModel<>(modelObject));\n+        return this;\n+    }\n+\n+    public T getFormModel() {\n+        return form.getModelObject();\n+    }\n+\n+    public AbstractModalPanel getContent() {\n+        return content;\n+    }\n+\n+    public BaseModal<T> setContent(final AbstractModalPanel component) {\n+        if (!component.getId().equals(getContentId())) {\n+            throw new WicketRuntimeException(\n+                    \"Modal content id is wrong. Component ID:\" + component.getId() + \"; content ID: \" + getContentId());\n+        }\n+\n+        content.replaceWith(component);\n+        content = component;\n+\n+        return this;\n+    }\n+\n+    public static String getContentId() {\n+        return CONTENT_ID;\n+    }\n+\n+    public BaseModal<T> setWindowClosedCallback(final WindowClosedCallback callback) {\n+        windowClosedCallback = callback;\n+        return this;\n+    }\n+\n+    @Override\n+    protected void onClose(final IPartialPageRequestHandler target) {\n+        if (windowClosedCallback != null) {\n+            windowClosedCallback.onClose((AjaxRequestTarget) target);\n+        }\n+    }\n+\n+    public void addSumbitButton() {\n+\n+        final PrimaryModalButton submit = new PrimaryModalButton(SUBMIT, SUBMIT, form) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                BaseModal.this.getContent().onSubmit(target, form);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                BaseModal.this.getContent().onError(target, form);\n+            }\n+        };\n+\n+        submit.setOutputMarkupId(true);\n+\n+        if (submitButton == null) {\n+            submitButton = submit;\n+            this.components.add(submitButton);\n+        } else {\n+            submitButton.replaceWith(submit);\n+            submitButton = submit;\n+        }\n+    }\n+\n+    @Override\n+    protected void onInitialize() {\n+        super.onInitialize();\n+\n+        final WebMarkupContainer footer = (WebMarkupContainer) this.get(\"dialog:footer\");\n+        footer.addOrReplace(new ListView<Component>(\"inputs\", components) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Component> item) {\n+                item.add(item.getModelObject());\n+            }\n+        }.setOutputMarkupId(true));\n+    }\n+}"},{"sha":"2eb11eaf4ff85abad15d5a02ec4a651d43ea97f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -19,11 +19,8 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -60,17 +57,4 @@ public FieldPanel<String> addRequiredLabel() {\n         this.isRequiredLabelAdded = true;\n         return this;\n     }\n-\n-    public void setPlaceholder(final String placeholder) {\n-        field.add(new Behavior() {\n-\n-            private static final long serialVersionUID = 1469628524240283489L;\n-\n-            @Override\n-            public void onComponentTag(final Component component, final ComponentTag tag) {\n-                tag.put(\"placeholder\", placeholder);\n-            }\n-        });\n-\n-    }\n }"},{"sha":"f42b67fbc9f73fd1da340016b1ca6496c413208a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -28,8 +28,9 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.validation.IValidator;\n \n public class AjaxTextFieldPanel extends FieldPanel<String> implements Cloneable {\n@@ -69,7 +70,8 @@ protected Iterator<String> getChoices(final String input) {\n                 return result.iterator();\n             }\n         };\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        \n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         if (enableOnChange && !isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -82,6 +84,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n         }\n+        \n+        add(new Label(\"label\", new ResourceModel(name, name)));\n     }\n \n     public void addValidator(final IValidator<? super String> validator) {"},{"sha":"3a48d381f42be1c0595bc907051ca79f9303bb06","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -29,6 +29,7 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public abstract class FieldPanel<T> extends AbstractFieldPanel<T> implements Cloneable {\n \n@@ -53,6 +54,11 @@ public FormComponent<T> getField() {\n         return field;\n     }\n \n+    public FieldPanel<T> setPlaceholder(final String id) {\n+        field.add(new AttributeModifier(\"placeholder\", new ResourceModel(id, id)));\n+        return this;\n+    }\n+\n     public FieldPanel<T> setTitle(final String title) {\n         this.title = title;\n         field.add(AttributeModifier.replace(\"title\", title != null\n@@ -122,7 +128,7 @@ public FieldPanel<T> setModelObject(final T object) {\n     }\n \n     public T getModelObject() {\n-        return (T) field.getModelObject();\n+        return field.getModelObject();\n     }\n \n     public FieldPanel<T> setNewModel(final IModel<T> model) {"},{"sha":"2587b849d99cf1a14955aa442974ee09fa8173e1","filename":"client/console/src/main/resources/META-INF/resources/css/AdminLTE.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -4360,3 +4360,7 @@ fieldset[disabled] .btn-vk.active {\n     white-space: normal!important;\n   }\n }\n+\n+i{\n+  margin-right: 5px;\n+}"},{"sha":"864b68e47e47b4a41792e53855c7cb64d2fa0f2c","filename":"client/console/src/main/resources/META-INF/resources/css/AdminLTE_plugins/dataTables/dataTables.bootstrap.css","status":"added","additions":369,"deletions":0,"changes":369,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE_plugins%2FdataTables%2FdataTables.bootstrap.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE_plugins%2FdataTables%2FdataTables.bootstrap.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE_plugins%2FdataTables%2FdataTables.bootstrap.css?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,369 @@\n+div.dataTables_length label {\n+  font-weight: normal;\n+  text-align: left;\n+  white-space: nowrap;\n+}\n+\n+div.dataTables_length select {\n+  width: 75px;\n+  display: inline-block;\n+}\n+\n+div.dataTables_filter {\n+  text-align: right;\n+}\n+\n+div.dataTables_filter label {\n+  font-weight: normal;\n+  white-space: nowrap;\n+  text-align: left;\n+}\n+\n+div.dataTables_filter input {\n+  margin-left: 0.5em;\n+  display: inline-block;\n+  width: auto;\n+}\n+\n+div.dataTables_info {\n+  padding-top: 8px;\n+  white-space: nowrap;\n+}\n+\n+div.dataTables_paginate {\n+  margin: 0;\n+  white-space: nowrap;\n+  text-align: right;\n+}\n+\n+div.dataTables_paginate ul.pagination {\n+  margin: 2px 0;\n+  white-space: nowrap;\n+}\n+\n+@media screen and (max-width: 767px) {\n+  div.dataTables_wrapper > div.row > div,\n+  div.dataTables_length,\n+  div.dataTables_filter,\n+  div.dataTables_info,\n+  div.dataTables_paginate {\n+    text-align: center;\n+  }\n+\n+  div.DTTT {\n+    margin-bottom: 0.5em;\n+  }\n+}\n+\n+table.dataTable td,\n+table.dataTable th {\n+  -webkit-box-sizing: content-box;\n+  -moz-box-sizing: content-box;\n+  box-sizing: content-box;\n+}\n+\n+table.dataTable {\n+  clear: both;\n+  margin-top: 6px !important;\n+  margin-bottom: 6px !important;\n+  max-width: none !important;\n+}\n+\n+table.dataTable thead .sorting,\n+table.dataTable thead .sorting_asc,\n+table.dataTable thead .sorting_desc,\n+table.dataTable thead .sorting_asc_disabled,\n+table.dataTable thead .sorting_desc_disabled {\n+  cursor: pointer;\n+  position: relative;\n+}\n+\n+table.dataTable thead .sorting:after,\n+table.dataTable thead .sorting_asc:after,\n+table.dataTable thead .sorting_desc:after {\n+  position: absolute;\n+  top: 8px;\n+  right: 8px;\n+  display: block;\n+  font-family: 'Glyphicons Halflings';\n+  opacity: 0.5;\n+}\n+table.dataTable thead .sorting:after {\n+  opacity: 0.2;\n+  content: \"\\e150\"; /* sort */\n+}\n+table.dataTable thead .sorting_asc:after {\n+  content: \"\\e155\"; /* sort-by-attributes */\n+}\n+table.dataTable thead .sorting_desc:after {\n+  content: \"\\e156\"; /* sort-by-attributes-alt */\n+}\n+div.dataTables_scrollBody table.dataTable thead .sorting:after,\n+div.dataTables_scrollBody table.dataTable thead .sorting_asc:after,\n+div.dataTables_scrollBody table.dataTable thead .sorting_desc:after {\n+  display: none;\n+}\n+\n+table.dataTable thead .sorting_asc_disabled:after,\n+table.dataTable thead .sorting_desc_disabled:after {\n+  color: #eee;\n+}\n+\n+table.dataTable thead > tr > th {\n+  padding-right: 30px;\n+}\n+\n+table.dataTable th:active {\n+  outline: none;\n+}\n+\n+/* Condensed */\n+table.dataTable.table-condensed thead > tr > th {\n+  padding-right: 20px;\n+}\n+\n+table.dataTable.table-condensed thead .sorting:after,\n+table.dataTable.table-condensed thead .sorting_asc:after,\n+table.dataTable.table-condensed thead .sorting_desc:after {\n+  top: 6px;\n+  right: 6px;\n+}\n+\n+/* Scrolling */\n+div.dataTables_scrollHead table {\n+  margin-bottom: 0 !important;\n+  border-bottom-left-radius: 0;\n+  border-bottom-right-radius: 0;\n+}\n+\n+div.dataTables_scrollHead table thead tr:last-child th:first-child,\n+div.dataTables_scrollHead table thead tr:last-child td:first-child {\n+  border-bottom-left-radius: 0 !important;\n+  border-bottom-right-radius: 0 !important;\n+}\n+\n+div.dataTables_scrollBody table {\n+  border-top: none;\n+  margin-top: 0 !important;\n+  margin-bottom: 0 !important;\n+}\n+\n+div.dataTables_scrollBody tbody tr:first-child th,\n+div.dataTables_scrollBody tbody tr:first-child td {\n+  border-top: none;\n+}\n+\n+div.dataTables_scrollFoot table {\n+  margin-top: 0 !important;\n+  border-top: none;\n+}\n+\n+/* Frustratingly the border-collapse:collapse used by Bootstrap makes the column\n+   width calculations when using scrolling impossible to align columns. We have\n+   to use separate\n+*/\n+table.table-bordered.dataTable {\n+  border-collapse: separate !important;\n+}\n+table.table-bordered thead th,\n+table.table-bordered thead td {\n+  border-left-width: 0;\n+  border-top-width: 0;\n+}\n+table.table-bordered tbody th,\n+table.table-bordered tbody td {\n+  border-left-width: 0;\n+  border-bottom-width: 0;\n+}\n+table.table-bordered tfoot th,\n+table.table-bordered tfoot td {\n+  border-left-width: 0;\n+  border-bottom-width: 0;\n+}\n+table.table-bordered th:last-child,\n+table.table-bordered td:last-child {\n+  border-right-width: 0;\n+}\n+div.dataTables_scrollHead table.table-bordered {\n+  border-bottom-width: 0;\n+}\n+\n+\n+\n+\n+/*\n+ * TableTools styles\n+ */\n+.table.dataTable tbody tr.active td,\n+.table.dataTable tbody tr.active th {\n+  background-color: #08C;\n+  color: white;\n+}\n+\n+.table.dataTable tbody tr.active:hover td,\n+.table.dataTable tbody tr.active:hover th {\n+  background-color: #0075b0 !important;\n+}\n+\n+.table.dataTable tbody tr.active th > a,\n+.table.dataTable tbody tr.active td > a {\n+  color: white;\n+}\n+\n+.table-striped.dataTable tbody tr.active:nth-child(odd) td,\n+.table-striped.dataTable tbody tr.active:nth-child(odd) th {\n+  background-color: #017ebc;\n+}\n+\n+table.DTTT_selectable tbody tr {\n+  cursor: pointer;\n+}\n+\n+div.DTTT .btn:hover {\n+  text-decoration: none !important;\n+}\n+\n+ul.DTTT_dropdown.dropdown-menu {\n+  z-index: 2003;\n+}\n+\n+ul.DTTT_dropdown.dropdown-menu a {\n+  color: #333 !important; /* needed only when demo_page.css is included */\n+}\n+\n+ul.DTTT_dropdown.dropdown-menu li {\n+  position: relative;\n+}\n+\n+ul.DTTT_dropdown.dropdown-menu li:hover a {\n+  background-color: #0088cc;\n+  color: white !important;\n+}\n+\n+div.DTTT_collection_background {\n+  z-index: 2002;\t\n+}\n+\n+/* TableTools information display */\n+div.DTTT_print_info {\n+  position: fixed;\n+  top: 50%;\n+  left: 50%;\n+  width: 400px;\n+  height: 150px;\n+  margin-left: -200px;\n+  margin-top: -75px;\n+  text-align: center;\n+  color: #333;\n+  padding: 10px 30px;\n+  opacity: 0.95;\n+\n+  background-color: white;\n+  border: 1px solid rgba(0, 0, 0, 0.2);\n+  border-radius: 6px;\n+\n+  -webkit-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.5);\n+  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.5);\n+}\n+\n+div.DTTT_print_info h6 {\n+  font-weight: normal;\n+  font-size: 28px;\n+  line-height: 28px;\n+  margin: 1em;\n+}\n+\n+div.DTTT_print_info p {\n+  font-size: 14px;\n+  line-height: 20px;\n+}\n+\n+div.dataTables_processing {\n+  position: absolute;\n+  top: 50%;\n+  left: 50%;\n+  width: 100%;\n+  height: 60px;\n+  margin-left: -50%;\n+  margin-top: -25px;\n+  padding-top: 20px;\n+  padding-bottom: 20px;\n+  text-align: center;\n+  font-size: 1.2em;\n+  background-color: white;\n+  background: -webkit-gradient(linear, left top, right top, color-stop(0%, rgba(255,255,255,0)), color-stop(25%, rgba(255,255,255,0.9)), color-stop(75%, rgba(255,255,255,0.9)), color-stop(100%, rgba(255,255,255,0)));\n+  background: -webkit-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);\n+  background: -moz-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);\n+  background: -ms-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);\n+  background: -o-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);\n+  background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);\n+}\n+\n+\n+\n+/*\n+ * FixedColumns styles\n+ */\n+div.DTFC_LeftHeadWrapper table,\n+div.DTFC_LeftFootWrapper table,\n+div.DTFC_RightHeadWrapper table,\n+div.DTFC_RightFootWrapper table,\n+table.DTFC_Cloned tr.even {\n+  background-color: white;\n+  margin-bottom: 0;\n+}\n+\n+div.DTFC_RightHeadWrapper table ,\n+div.DTFC_LeftHeadWrapper table {\n+  border-bottom: none !important;\n+  margin-bottom: 0 !important;\n+  border-top-right-radius: 0 !important;\n+  border-bottom-left-radius: 0 !important;\n+  border-bottom-right-radius: 0 !important;\n+}\n+\n+div.DTFC_RightHeadWrapper table thead tr:last-child th:first-child,\n+div.DTFC_RightHeadWrapper table thead tr:last-child td:first-child,\n+div.DTFC_LeftHeadWrapper table thead tr:last-child th:first-child,\n+div.DTFC_LeftHeadWrapper table thead tr:last-child td:first-child {\n+  border-bottom-left-radius: 0 !important;\n+  border-bottom-right-radius: 0 !important;\n+}\n+\n+div.DTFC_RightBodyWrapper table,\n+div.DTFC_LeftBodyWrapper table {\n+  border-top: none;\n+  margin: 0 !important;\n+}\n+\n+div.DTFC_RightBodyWrapper tbody tr:first-child th,\n+div.DTFC_RightBodyWrapper tbody tr:first-child td,\n+div.DTFC_LeftBodyWrapper tbody tr:first-child th,\n+div.DTFC_LeftBodyWrapper tbody tr:first-child td {\n+  border-top: none;\n+}\n+\n+div.DTFC_RightFootWrapper table,\n+div.DTFC_LeftFootWrapper table {\n+  border-top: none;\n+  margin-top: 0 !important;\n+}\n+\n+\n+div.DTFC_LeftBodyWrapper table.dataTable thead .sorting:after,\n+div.DTFC_LeftBodyWrapper table.dataTable thead .sorting_asc:after,\n+div.DTFC_LeftBodyWrapper table.dataTable thead .sorting_desc:after,\n+div.DTFC_RightBodyWrapper table.dataTable thead .sorting:after,\n+div.DTFC_RightBodyWrapper table.dataTable thead .sorting_asc:after,\n+div.DTFC_RightBodyWrapper table.dataTable thead .sorting_desc:after {\n+  display: none;\n+}\n+\n+\n+/*\n+ * FixedHeader styles\n+ */\n+div.FixedHeader_Cloned table {\n+  margin: 0 !important\n+}\n+"},{"sha":"1f0e6219089d31a00b7d85dd4d0151b416b55b0c","filename":"client/console/src/main/resources/META-INF/resources/css/bulk.css","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+th.checkGroupColumn{\n+  width: 20px;\n+}\n+\n+td.checkGroupColumn{\n+  text-align: center;\n+}\n+\n+div.bulkAction{\n+  display:inline-table;\n+}\n+\n+div.bulkActionCell{\n+  display: table-cell;\n+  vertical-align: middle;\n+  text-align: center;\n+  width: 40px;\n+  padding-left: 7px;\n+}\n+\n+.pageRowElement{\n+  display: inline-table;\n+  width: 95%;\n+}\n+\n+div#selectedObjects{\n+  text-align: center;\n+  margin-top: 10px;\n+}\n+\n+div#selectedObjects table {\n+  margin: 1em 0;\n+  border-collapse: collapse;\n+}\n+\n+div#selectedObjects table td, div#selectedObjects table th {\n+  border: 1px solid #eee;\n+  padding: .6em 10px;\n+}\n+\n+div#actionRow{\n+  height: 30px;\n+  overflow: hidden;\n+  text-align: left;\n+  margin-top: 10px;\n+}\n+\n+div#actions{\n+  display: inline-table;\n+  height: 30px;\n+  overflow: hidden;\n+}\n+\n+div#actions div#actionPanel{\n+  display: table-cell;\n+  height: 30px;\n+  overflow: hidden;\n+  cursor: auto;\n+  background: none;\n+  padding: 0px 10px;\n+  vertical-align: middle;\n+}\n+\n+div#actions div#cancelBtmForm{\n+  display: table-cell;\n+  height: 30px;\n+  overflow: hidden;\n+  vertical-align: middle;\n+  padding-left: 3px;\n+}\n+\n+div#actions div#cancelBtmForm form{\n+  padding: 0px;\n+  margin: 0px;\n+}\n+\n+div#actions div#cancelBtmForm form input#cancel{\n+  padding: 0.6em 1em;\n+}"},{"sha":"e9dee59baabd0b53ae3fe15bd79e36515f29b92c","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -191,3 +191,15 @@ a.help span a {\n div.basepage-content{\n   margin-top: 55px;\n }\n+\n+.modal-content {\n+  overflow: hidden;\n+}\n+\n+.modal-open .modal {\n+    overflow: hidden;\n+}\n+\n+.modal {\n+    background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\n+}"},{"sha":"242eb6ab981592e4e6216e3e63f14e5a1561d1a2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BaseModalPage.html","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -20,19 +20,16 @@\n   <head>\n     <title></title>\n \n-    <link href=\"webjars/bootstrap/${bootstrap.version}/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/font-awesome/${font-awesome.version}/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/ionicons/${ionicons.version}/css/ionicons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"css/AdminLTE.css\" rel=\"stylesheet\" type=\"text/css\" />\n+\n+    <link href=\"css/AdminLTE_plugins/dataTables/dataTables.bootstrap.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/AdminLTE_skins/skin-green.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/syncopeConsole.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/fieldstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n \n-    <script type=\"text/javascript\" src=\"webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/bootstrap/${bootstrap.version}/js/bootstrap.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/js/bootstrap-select.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"js/AdminLTE-app.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\"></script>>\n \n     <script type=\"text/javascript\">\n       var notificationShownTimes = 0;"},{"sha":"189b139d9d806541455fb57745bce08674d296ac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -25,20 +25,16 @@\n     <title>Apache Syncope</title>\n \n     <link rel=\"shortcut icon\" href=\"img/favicon.png\" type=\"image/png\"/>\n-\n-    <link href=\"webjars/bootstrap/${bootstrap.version}/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/font-awesome/${font-awesome.version}/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/ionicons/${ionicons.version}/css/ionicons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"css/AdminLTE.css\" rel=\"stylesheet\" type=\"text/css\" />\n+\n+    <link href=\"css/AdminLTE_plugins/dataTables/dataTables.bootstrap.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/AdminLTE_skins/skin-green.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/syncopeConsole.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/fieldstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n \n-    <script type=\"text/javascript\" src=\"webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/bootstrap/${bootstrap.version}/js/bootstrap.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/js/bootstrap-select.min.js\"></script>\n-    <script type=\"text/javascript\" src=\"js/AdminLTE-app.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/js/bootstrap-select.min.js\"></script>\n \n     <script type=\"text/javascript\">\n       var notificationShownTimes = 0;\n@@ -160,4 +156,4 @@\n       $('#spanYear').html(new Date().getFullYear());\n     </script>\n   </body>\n-</html>\n\\ No newline at end of file\n+</html>"},{"sha":"c48612f4c2fb7a485529e3014fb567234ac35230","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.html","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,118 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      div.group{\n+        width:450px;\n+      }\n+\n+      div.group div{\n+        width:150;\n+        height: 25px;\n+        float:left;\n+      }\n+\n+      div.group div input {\n+        width: 30px;\n+      }\n+\n+      div#attributes-view {\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        overflow: auto;\n+        margin-top: 0px;\n+        margin-bottom: 20px;\n+        margin-left: 10px;\n+        margin-right: 10px;\n+      }\n+\n+      .submit{\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        margin-left: 10px;\n+      }\n+\n+      span.grouplabel{\n+        display:block;\n+        clear: both;\n+        margin-left: 10px;\n+        margin-bottom: 10px;\n+        font-weight: bold;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <form wicket:id=\"form\">\n+      <div id=\"attributes-view\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <wicket:message key=\"title\"/>\n+        </p>\n+\n+        <span class=\"grouplabel\"><wicket:message key=\"plainSchemas\"/></span>\n+        <span wicket:id=\"dCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"details\">\n+              <input type=\"checkbox\" wicket:id=\"dcheck\"/>\n+              <span wicket:id=\"dname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+\n+        <span wicket:id=\"plainSchemas\">[schemas]</span>\n+\n+        <span wicket:id=\"dschemas\">[derived schemas]</span>\n+\n+      </div>\n+\n+      <wicket:fragment wicket:id=\"sfragment\">\n+        <span wicket:id=\"psCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"plainSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"scheck\"/>\n+              <span wicket:id=\"sname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"dsfragment\">\n+        <span class=\"grouplabel\"><wicket:message key=\"derSchemas\"/></span>\n+        <span wicket:id=\"dsCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"derSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"dscheck\"/>\n+              <span wicket:id=\"dsname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"emptyFragment\">\n+      </wicket:fragment>\n+\n+      <div class=\"submit\">\n+        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n+        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n+      </div>\n+    </form>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"2b5c573d65ddbe785cf65d4a347073fd674a931c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.properties","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,32 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Change display attributes\n+tooManySelections=Too many columns to be shown\n+plainSchemas=Plain attributes\n+derSchemas=Derived attributes\n+\n+firstname=Firstname\n+surname=Surname\n+userId=User Id\n+edit=Edit\n+delete=Delete\n+status=Status\n+token=Token\n+username=Username\n+creationDate=Creation Date\n+tokenValued=Valued\n+tokenNotValued=Not valued"},{"sha":"ce13f8f668f5b4cd422fde52851e5be76399ed5a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Login.html","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -27,15 +27,11 @@\n \n     <link rel=\"shortcut icon\" href=\"img/favicon.png\" type=\"image/png\"/>\n \n-    <link href=\"webjars/bootstrap/${bootstrap.version}/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/font-awesome/${font-awesome.version}/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"webjars/ionicons/${ionicons.version}/css/ionicons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"css/AdminLTE.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/login.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/syncopeConsole.css\" rel=\"stylesheet\" type=\"text/css\" />\n-\n-    <script type=\"text/javascript\" src=\"webjars/bootstrap/${bootstrap.version}/js/bootstrap.min.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/js/bootstrap-select.min.js\"></script>\n   </head>\n   <body class=\"skin-green\">"},{"sha":"890db3438e50b2188cf20d8c837829863aec4715","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":18,"deletions":14,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -17,10 +17,8 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" \n-      xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <wicket:extend>\n-\n     <div class=\"wrapper\">\n       <div class=\"admin-content-page content-margin-layout\" wicket:id=\"content\">\n         <div class=\"box box-solid box-primary\">\n@@ -30,9 +28,21 @@ <h3 class=\"box-title\">\n             </h3>\n             <div class=\"box-tools pull-right\">\n               <ul class=\"nav navbar-nav actions\">\n-                <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n-                <li><a href=\"#\"><i class=\"fa fa-minus\"></i></a></li>\n-                <li><a href=\"#\"><i class=\"fa fa-pencil-square-o\"></i></a></li>\n+                <li>\n+                  <a href=\"#\" wicket:id=\"editLink\">\n+                    <i class=\"fa fa-pencil-square-o\"></i>\n+                  </a>                  \n+                </li>\n+                <li>\n+                  <a href=\"#\" wicket:id=\"createLink\">\n+                    <i class=\"fa fa-plus\"></i>\n+                  </a>                  \n+                </li>\n+                <li>\n+                  <a href=\"#\" wicket:id=\"deleteLink\">\n+                    <i class=\"fa fa-minus\"></i>\n+                  </a>                  \n+                </li>\n               </ul>\n             </div><!-- /.box-tools -->\n           </div><!-- /.box-header -->\n@@ -42,16 +52,10 @@ <h3 class=\"box-title\">\n             </div>\n           </div>\n         </div>\n+        <div wicket:id=\"modal\"></div>\n       </div>\n \n-      <aside class=\"control-sidebar control-sidebar-dark control-sidebar-open block-sidebar\">\n-        <section class=\"sidebar\">\n-          <ul class=\"sidebar-menu\">\n-            <wicket:container wicket:id=\"list\"></wicket:container>\n-          </ul>\n-        </section>\n-      </aside>\n-      <div class=\"control-sidebar-bg inner-control-sidebar\"></div>\n+      <span wicket:id=\"realmSidebarPanel\">[Realm Sidebar Panel]</span>\n     </div>\n \n     <wicket:fragment wicket:id=\"withChildren\">"},{"sha":"abda19e035fa0ac2aa5326579a0ec1e0ad682ea6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractModalPanel.html","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -16,8 +16,8 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <a href=\"#\" wicket:id=\"link\">\n-          <span wicket:id=\"linkTitle\"/> \n-  </a>\n-</wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <wicket:panel>\n+    <wicket:child />\n+  </wicket:panel>\n+</html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/LinkPanel_1.html"},{"sha":"e5433189456207da3df7c0a00958d2a41092ecf6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.html","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,14 +18,19 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-\n     <div wicket:id=\"container\">\n       <span wicket:id=\"resultTable\">[Table]</span>\n-\n+      \n       <span style=\"float:right\">\n         <form wicket:id=\"paginator\" style=\"display:inline\">\n-          <label><wicket:message key=\"displayRows\"/></label>\n-          <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n+          <div class=\"col-sm-6\">\n+            <div class=\"dataTables_length\">\n+              <label>\n+                <wicket:message key=\"displayRows\"/>\n+                <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n+              </label>\n+            </div>\n+          </div>\n         </form>\n       </span>\n     </div>"},{"sha":"86b6359da35954f27a3d25a3e4cbd73fc2b04f67","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AjaxDataTablePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -33,7 +33,7 @@\n       <div class=\"bulkAction\">\n         <div class=\"bulkActionCell\" style=\"width: 40px\">\n           <a href=\"#\" wicket:id=\"bulkActionLink\">\n-            <img src=\"img/actions/bulk.png\" alt=\"bulk action icon\"  title=\"Bulk action\"/>\n+            <i class=\"fa fa-gear\" alt=\"bulk action icon\"  title=\"Bulk action\"></i>\n           </a>\n         </div>\n       </div>"},{"sha":"ce63b0d378239251506c04bd9f12fe3ea65a0f90","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyAjaxTabbedPanel.html","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyAjaxTabbedPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyAjaxTabbedPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyAjaxTabbedPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,35 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"tabbable tabs-left\" style=\"margin-right: 0; border-right: 0;\">\n+      <ul class=\"nav nav-tabs\" style=\"margin-right: 0; border-right: 0;\" wicket:id=\"tabs-container\">\n+        <li wicket:id=\"tabs\">\n+          <a data-toggle=\"tab\" href=\"#\" wicket:id=\"link\">\n+            <span wicket:id=\"title\">[tab title]</span>\n+          </a>\n+        </li>\n+      </ul>\n+      <div class=\"tab-content\" style=\"min-height: 100%; padding-left: 20px; border-left: 1px solid #ddd;\">\n+        <div wicket:id=\"panel\" class=\"tab-pane active\">[tab]</div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"9d9ed0ef01523d7144c394d43a0a686c2cc55288","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeMenuItem.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -23,7 +23,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n-      <h1>ANY</h1>\n+      <a data-toggle=\"tab\" wicket:id=\"tabLink\"><span wicket:id=\"tabLabel\"></span></a>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Any.html"},{"sha":"bbcd878eeb9a0ac0fc55b1392287c07f8d78ef18","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel.html","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,52 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div style=\"margin: 5px;\">\n+      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"displayName\"/>\n+      </p>\n+      <form wicket:id=\"groupForm\">\n+        <div id=\"tabs\">\n+          <div style=\"display: block; clear: both\">\n+            <ul>\n+              <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n+              <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n+              <li><a href=\"#plainAttrs\"><span><wicket:message key=\"plainAttrs\"/></span></a></li>\n+              <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n+              <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n+              <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n+              <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n+              <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n+            </ul>\n+          </div>\n+          <div wicket:id=\"groupPanel\"></div>\n+        </div>\n+        <div style=\"bottom:0;margin:10px\">\n+          <input type=\"submit\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"submit\"/>\n+          <input type=\"button\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"cancel\"/>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"4ffa2fb68c1d6661413d86239972475c72ffd654","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel.properties","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,48 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=All form fields are required.\n+title=Group\n+details=Details\n+plainAttrs=Plain attributes\n+tab3=Derived attributes\n+tab4=Virtual attributes\n+resources=Resources\n+entitlements=Entitlements\n+security=Security\n+add=+\n+drop=-\n+error=Generic error occurred during the operation\n+firstResourcesList=Group's resources\n+secondResourcesList=Available resources\n+firstEntitlementsList=Group's entitlements\n+secondEntitlementsList=Available entitlements\n+derAttrs=Derived Attributes\n+derAttrToRemove=Delete\n+derAttrName=Name\n+derAttrValue=Derived value\n+\n+virAttrs=Virtual Attributes\n+virAttrToRemove=Delete\n+virAttrName=Name\n+virAttrValue=Virtual value\n+\n+addAttributeBtn=Add\n+\n+inheritPlainAttrs=Inherit plain attributes\n+inheritDerAttrs=Inherit derived attributes\n+inheritVirAttrs=Inherit virtual attributes\n+templates=Templates"},{"sha":"1c6efec25120ce59e961fad69558171040144aba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel_it.properties","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,50 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=All form fields are required.\n+title=Gruppo\n+details=Dettagli\n+plainAttrs=Attributi normali\n+tab3=Attributi derivati\n+tab4=Attributi virtuali\n+resources=Risorse\n+entitlements=Entitlement\n+security=Sicurezza\n+add=+\n+drop=-\n+error=Errore generico durante l'operazione\n+firstResourcesList=Risorse ruolo\n+secondResourcesList=Risorse disponibili\n+firstResourcesList=Risorse gruppo\n+secondResourcesList=Risorse disponibili\n+derAttrs=Attributi derivati\n+derAttrToRemove=Elimina\n+derAttrName=Nome\n+derAttrValue=Valore derivato\n+\n+virAttrs=Attributi virtuali\n+virAttrToRemove=Elimina\n+virAttrName=Nome\n+virAttrValue=Valore virtuale\n+\n+addAttributeBtn=Aggiungi\n+\n+inheritPlainAttrs=Eredita attributi normali\n+inheritDerAttrs=Eredita attributi derivati\n+inheritVirAttrs=Eredita attributi virtuali\n+templates=Modelo\n+secondEntitlementsList=Entitlement disponibili\n+firstEntitlementsList=Entitlement gruppo"},{"sha":"064958566d562596d14e3ed26f4f3c3592bbf02e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel_pt_BR.properties","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,48 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n+title=Grupo\n+details=Detalhes\n+plainAttrs=Atributos Normal\n+tab3=Atributos Derivados\n+tab4=Atributos Virtuais\n+resources=Recursos\n+entitlements=Direitos\n+security=Seguran\\u00e7a\n+add=+\n+drop=-\n+error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n+firstResourcesList=Recursos de grupos\n+secondResourcesList=Recursos dispon\\u00edveis\n+firstEntitlementsList=Direitos de grupos\n+secondEntitlementsList=Direitos dispon\\u00edveis\n+derAttrs=Atributos derivados\n+derAttrToRemove=Exluir\n+derAttrName=Nome\n+derAttrValue=Valor Derivado\n+\n+virAttrs=Atributos Virtuais\n+virAttrToRemove=Excluir\n+virAttrName=Nome\n+virAttrValue=Valor Virtual\n+\n+addAttributeBtn=Adicionar\n+\n+inheritPlainAttrs=Atributos Herdados Normal\n+inheritDerAttrs=Atributos Derivados Herdados\n+inheritVirAttrs=Atributos Virtuais Herdados\n+templates=Modelli"},{"sha":"e1fbeff5721bd49a7a46990844f755f7ff05eebb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ModalContent.html","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -19,23 +19,23 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n \n   <wicket:head>\n-    <script type=\"text/javascript\">\n-      var notificationShownTimes = 0;\n-\n-      function showNotification(componentId, messagecount) {\n-        notificationShownTimes++;\n-        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n-        $('div#' + componentId).fadeTo('normal', 1.0);\n-        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n-      }\n-    </script>\n-\n-    <style type=\"text/css\">\n-      table.palette td.header {\n-        background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n-          repeat-x scroll 50% 50% #E6E6E6 !important;\n-      }\n-    </style>\n+      <script type=\"text/javascript\">\n+        var notificationShownTimes = 0;\n+  \n+        function showNotification(componentId, messagecount) {\n+          notificationShownTimes++;\n+          timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n+          $('div#' + componentId).fadeTo('normal', 1.0);\n+          setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n+        }\n+      </script>\n+  \n+      <style type=\"text/css\">\n+        table.palette td.header {\n+          background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n+            repeat-x scroll 50% 50% #E6E6E6 !important;\n+        }\n+      </style>\n   </wicket:head>\n \n   <wicket:panel>"},{"sha":"9a6f9ef36bbceec6c5bf406e4594e0a921682e8c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Realm.html","status":"modified","additions":1,"deletions":65,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -23,71 +23,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n-      \n-      <div class=\"tabbable tabs-left\">\n-        <ul class=\"nav nav-tabs\">\n-          <li class=\"active\">\n-            <a data-toggle=\"tab\" href=\"#lA\">Details</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lB\">Users</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lC\">Groups</a>\n-          </li>\n-          <li class=\"dropdown\">\n-            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n-              ANY\n-              <b class=\"caret\"></b>\n-            </a>\n-            <ul class=\"dropdown-menu\">\n-              <li><a data-toggle=\"tab\" href=\"#lB\">Users</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lC\">Groups</a></li>\n-              <li class=\"divider\"></li>\n-              <li class=\"nav-header\">Others</li>\n-              <li><a data-toggle=\"tab\" href=\"#lD\">Services</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lE\">Service Roles</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lF\">Enactment Engines</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lG\">Contexts</a></li>\n-            </ul>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lH\">Account policy</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lI\">Password policy</a>\n-          </li>\n-        </ul>\n-        <div class=\"tab-content\">\n-          <div id=\"lA\" class=\"tab-pane active\">\n-            <wicket:container wicket:id=\"details\"/>\n-          </div>\n-          <div id=\"lB\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"users\"/>\n-          </div>\n-          <div id=\"lC\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"groups\"/>\n-          </div>\n-          <div id=\"lD\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"services\"/>\n-          </div>\n-          <div id=\"lE\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"serviceRoles\"/>\n-          </div>\n-          <div id=\"lF\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"enactmentEngine\"/>\n-          </div>\n-          <div id=\"lG\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"contexts\"/>\n-          </div>\n-          <div id=\"lH\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"accountPolicy\"/>\n-          </div>\n-          <div id=\"lI\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"passwordPolicy\"/>\n-          </div>\n-        </div>\n-      </div>\n+      <div wicket:id=\"tabbedPanel\"></div>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"281ddd1367158dce1ea76996d1ab505352170e41","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":4,"deletions":17,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -23,23 +23,10 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n-      <br />\n-      <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\">\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Id</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"id\" class=\"form-control\" wicket:id=\"id\" />\n-        </div>\n-        <br />\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Name</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"name\" class=\"form-control\" wicket:id=\"name\" />\n-        </div>\n-        <br />\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Path</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"path\" class=\"form-control\" wicket:id=\"path\" />\n-        </div>\n-      </form>\n+      <span wicket:id=\"name\">[name]</span>\n+      <span wicket:id=\"fullPath\">[fullPath]</span>\n+      <span wicket:id=\"accountPolicy\">[accountPolicy]</span>\n+      <span wicket:id=\"passwordPolicy\">[passwordPolicy]</span>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"d07b59fe996baa5942dfadf2e265a1e9b2aaee0f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmModalPanel.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,6 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <input type=\"text\" class=\"ui-widget-content ui-corner-all long_dynamicsize\" wicket:id=\"textField\"/>\n+    <div wicket:id=\"details\">[details]</div>\n   </wicket:extend>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel_1.html"},{"sha":"2faedc9447830c475b53e9c2cf87f465e8220d7d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmSidebarPanel.html","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,53 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <wicket:panel>\n+    <aside id=\"aside\" name=\"aside\" class=\"control-sidebar control-sidebar-dark control-sidebar-open block-sidebar\">\n+      <section id=\"section\" name=\"section\" class=\"sidebar syncopeSidebar\">\n+        <ul id=\"tree\" name=\"tree\" class=\"sidebar-menu\" wicket:id=\"menu\">\n+          <wicket:container wicket:id=\"list\"></wicket:container>\n+        </ul>\n+      </section>\n+    </aside>\n+    <div id=\"control\" name=\"control\" class=\"control-sidebar-bg inner-control-sidebar\"></div>\n+\n+    <wicket:fragment wicket:id=\"withChildren\">\n+      <li id=\"treeview\" name=\"treeview\" class=\"treeview\">\n+        <a href=\"#\" wicket:id=\"link\"><i class=\"fa fa-folder-o\">\n+          </i><span wicket:id=\"name\">[ITEM NAME]</span>\n+        </a>\n+        <a href=\"#\" class=\"angle\" wicket:id=\"angle\">\n+          <i class=\"fa fa-angle-left pull-right\"></i>\n+        </a>\n+        <ul wicket:id=\"subtree\" name=\"subtree\" class=\"treeview-menu\">\n+          <wicket:container wicket:id=\"list\"></wicket:container>\n+        </ul>\n+      </li>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"withoutChildren\">\n+      <li>\n+        <a name=\"label\" href=\"#\" wicket:id=\"link\">\n+          <i class=\"fa fa-leaf\"></i><span wicket:id=\"name\">[ITEM NAME]</span>\n+        </a>\n+      </li>\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"8cb22f0cf80e42bdc95e4286d3aec1bb7880f73a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModalPage.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,56 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <form wicket:id=\"form\">\n+      <div class=\"tabbable tabs-left\">\n+        <ul class=\"nav nav-tabs\">\n+          <li class=\"active\"><a  data-toggle=\"tab\" href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#gmapping\"><span><wicket:message key=\"gmapping\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n+        </ul>\n+        <div class=\"tab-content\">\n+          <div id=\"resource\" class=\"tab-pane active\">\n+            <span wicket:id=\"details\">[details]</span>\n+            <span wicket:id=\"systeminformation\">[System Information]</span>\n+          </div>\n+          <div id=\"umapping\" class=\"tab-pane\">\n+            <span wicket:id=\"umapping\">[umapping]</span>\n+          </div>\n+          <div id=\"gmapping\" class=\"tab-pane\">\n+            <span wicket:id=\"gmapping\">[gmapping]</span>\n+          </div>\n+          <div id=\"connectorProperties\" class=\"tab-pane\">\n+            <span wicket:id=\"connconf\">[connconf]</span>\n+          </div>\n+          <div id=\"security\" class=\"tab-pane\">\n+            <span wicket:id=\"security\">[security]</span>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <div class=\"modal-footer\">\n+        <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n+        <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n+      </div> \n+    </form>\n+  </wicket:extend>\n+</html>"},{"sha":"789919b55be1d08f2f0dfbaa603acead628432ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModalPage.properties","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,60 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Resource details\n+umapping=User mapping\n+connectorProperties=Connector properties\n+security=Security\n+required_alert=All form fields are required\n+connector=Connector\n+existing_resources=Existing resources\n+action=Action\n+edit_attribute=Edit resource\n+title=Resource\n+extAttrNames=External attributes\n+intMappingTypes=Internal mapping types\n+entity=Entity\n+groupSchema=Group Schema\n+connObjectKey=ConnObjectKey\n+mandatoryCondition=Mandatory\n+password=Password\n+purpose=Purpose\n+mappingUserSchema=Mapping User Schema\n+mappingGroupSchema=Mapping Group Schema\n+delete=Delete\n+intAttrNames=Internal attributes\n+enforceMandatoryCondition=Enforce mandatory condition\n+fieldName=Field name\n+\n+connObjectKeyValidation=There must be exactly one ConnObjectKey\n+propagationMode=Propagation mode\n+connObjectLink=ConnObjectLink\n+enable=Enable\n+\n+createTraceLevel=Create trace level\n+updateTraceLevel=Update trace level\n+deleteTraceLevel=Delete trace level\n+syncTraceLevel=Synchronization trace level\n+propagationPriority=Propagation priority\n+propagationPrimary=Propagation primary\n+\n+success_connection=Successful connection\n+error_connection=Connection failure\n+check=Check connection\n+actionsClasses=Actions classes\n+gmapping=Group mapping\n+new=New resource\n+randomPwdIfNotProvided=Generate random passwords when missing"},{"sha":"2587b849d99cf1a14955aa442974ee09fa8173e1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/themes/css/AdminLTE.css","status":"added","additions":4366,"deletions":0,"changes":4366,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fcss%2FAdminLTE.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fcss%2FAdminLTE.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fcss%2FAdminLTE.css?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4"},{"sha":"e61cc0fa36465e1d1192dc8d5c6f05840697e711","filename":"client/console/src/main/resources/org/apache/syncope/client/console/themes/js/AdminLTE-app.min.js","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fjs%2FAdminLTE-app.min.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fjs%2FAdminLTE-app.min.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2Fjs%2FAdminLTE-app.min.js?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","previous_filename":"client/console/src/main/resources/META-INF/resources/js/AdminLTE-app.min.js"},{"sha":"4b6eff8714e1e0d16a4ca4cee97670202c69feae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/Topology.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -17,7 +17,7 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <wicket:head>\n     <script type=\"text/javascript\" src=\"webjars/jsplumb/${jsplumb.version}/dom.jsPlumb-${jsplumb.version}-min.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/jquery-cookie/${jquery-cookie.version}/jquery.cookie.js\"></script>"},{"sha":"7b7d59302d3894d0dd4b85dd781048d9d5b9a37f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/ajax/markup/html/navigation/paging/AjaxDataNavigationToolbar.html","status":"renamed","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -1,3 +1,4 @@\n+<!DOCTYPE html>\n <!--\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n@@ -17,18 +18,16 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head></wicket:head>\n   <wicket:panel>\n-\n-    <wicket:fragment wicket:id=\"requiredFragment\">\n-      <span wicket:id=\"requiredLabel\"/>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"notRequiredFragment\">\n-    </wicket:fragment>\n-\n-    <wicket:child />\n-\n-    <span wicket:id=\"required\"/>\n+    <span wicket:id=\"span\">\n+      <div class=\"row\">\n+        <div class=\"col-sm-5\">\n+          <div class=\"dataTables_info\"><span wicket:id=\"navigatorLabel\">[navigatorLabel]</span></div>\n+        </div>\n+        <div class=\"col-sm-7\">\n+          <div class=\"dataTables_paginate paging_simple_numbers\"><ul wicket:id=\"navigator\">[navigator]</ul></div>\n+        </div>\n+      </div>\n+    </span>\n   </wicket:panel>\n-</html>\n+</html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel_1.html"},{"sha":"920581ee4cb87531a5fa109bec95c13594bc0adc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.html","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,67 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <script type=\"text/javascript\">\n+      var notificationShownTimes = 0;\n+\n+      function showNotification(componentId, messagecount) {\n+        notificationShownTimes++;\n+        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n+        $('div#' + componentId).fadeTo('normal', 1.0);\n+        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n+      }\n+    </script>\n+\n+    <style type=\"text/css\">\n+      table.palette td.header {\n+        background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n+          repeat-x scroll 50% 50% #E6E6E6 !important;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div class=\"modal-dialog\" wicket:id=\"dialog\">\n+      <div class=\"modal-content\">\n+        <div wicket:id=\"header\" class=\"modal-header\">\n+          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n+          <h4 wicket:id=\"header-label\" class=\"modal-title\">Modal header</h4>\n+        </div>\n+        <div class=\"modal-body\">\n+          <div wicket:id=\"feedback\"/>\n+          <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\" wicket:id=\"form\">\n+            <span wicket:id=\"content\">[modal content]</span>\n+          </form>\n+        </div>\n+        <div class=\"modal-footer\" wicket:id=\"footer\">\n+          <wicket:fragment wicket:id=\"buttons\">\n+            <button type=\"button\" wicket:id=\"button\"></button>\n+          </wicket:fragment>\n+          <wicket:fragment wicket:id=\"inputs\">\n+            <button wicket:id=\"submit\"><wicket:message key=\"submit\"/></button>\n+          </wicket:fragment>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n+\n+\n+"},{"sha":"4d672e8baf3dcf8aabcad4c751b696a6a367f016","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+submit=Save\n+add=Add\n+remove=Delete\n+cancel=Cancel\n+createRealm=Create new realm"},{"sha":"34c0fc4e5f7162fee418843155f2a429020b22f9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_it.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+submit=Salva\n+add=Aggiungi\n+remove=Elimina\n+cancel=Annulla\n+createRealm=Crea nuovo realm"},{"sha":"9c86bdc8c26de0c272ece42a3aed2f5ec365a8c6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal_pt_BR.properties?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+submit=Salvar\n+add=Adicionar\n+remove=Remover\n+cancel=Cancelar\n+createRealm=Criar novo dom\\u00ednio"},{"sha":"67cf987f9fbede44bae9cf22a4b4d35e5630a2e9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -64,7 +64,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentManageResources\">\n-      <a href=\"#\" wicket:id=\"manageResourcesLink\"><img id=\"actionLink\" src=\"img/actions/resources-icon.png\" alt=\"manage resources icon\" title=\"Manage resources\"/></a>\n+      <a href=\"#\" wicket:id=\"manageResourcesLink\"><i id=\"actionLink\" class=\"fa fa-sitemap\" alt=\"manage resources icon\" title=\"Manage resources\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentManageUsers\">\n@@ -100,11 +100,11 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentEnable\">\n-      <a href=\"#\" wicket:id=\"enableLink\"><img id=\"actionLink\" src=\"img/actions/enable.png\" alt=\"enable icon\" title=\"Enable / Disable\"/></a>\n+      <a href=\"#\" wicket:id=\"enableLink\"><i id=\"actionLink\" class=\"fa fa-toggle-on\" alt=\"enable icon\" title=\"Enable / Disable\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentEdit\">\n-      <a href=\"#\" wicket:id=\"editLink\"><img id=\"actionLink\" src=\"img/actions/edit.png\" alt=\"edit icon\" title=\"Edit\"/></a>\n+      <a href=\"#\" wicket:id=\"editLink\"><i id=\"actionLink\" class=\"fa fa-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReset\">\n@@ -148,11 +148,11 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReload\">\n-      <a href=\"#\" wicket:id=\"reloadLink\"><img id=\"actionLink\" src=\"img/actions/reload.png\" alt=\"reload icon\" title=\"Reload\"/></a>\n+      <a href=\"#\" wicket:id=\"reloadLink\"><i id=\"actionLink\" class=\"fa fa-repeat\" alt=\"reload icon\" title=\"Reload\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentChangeView\">\n-      <a href=\"#\" wicket:id=\"changeViewLink\"><img id=\"actionLink\" src=\"img/actions/settings-icon.png\" alt=\"Change view icon\" title=\"Change view\"/></a>\n+      <a href=\"#\" wicket:id=\"changeViewLink\"><i id=\"actionLink\" class=\"fa fa-list\" alt=\"Change view icon\" title=\"Change view\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentUnlink\">"},{"sha":"c512d7766bb2ffab123dc89edc64113b3eae4846","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.html","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -18,6 +18,10 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <input type=\"text\" class=\"ui-widget-content ui-corner-all long_dynamicsize\" wicket:id=\"textField\"/>\n+    <div class=\"input-group\">\n+      <span id=\"basic-addon1\" class=\"input-group-addon\" wicket:id=\"label\">[label]</span>\n+      <input type=\"text\" aria-describedby=\"basic-addon1\" class=\"form-control\" wicket:id=\"textField\"/>\n+    </div>\n+    <br/>\n   </wicket:extend>\n </html>"},{"sha":"f4a6cea6a861b7fde2a2b59db46a2c6b4e939ce8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -57,7 +57,7 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n      */\n     private static final int MAX_SELECTIONS = 9;\n \n-    public static final String[] DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n+        public static final String[] DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n \n     @SpringBean\n     private PreferenceManager prefMan;"},{"sha":"15119d3442ae4cdeb65b7ad203fbe482b08842c1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/EditUserModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -98,6 +98,6 @@ protected void submitAction(final AjaxRequestTarget target, final Form<?> form)\n \n     @Override\n     protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n-        setResponsePage(new ResultStatusModalPage.Builder(window, userTO).mode(mode).build());\n+        setResponsePage(new Realms.Builder(window, userTO).mode(mode).build());\n     }\n }"},{"sha":"b9b1839631df9d2f076652ec001e53e846b6cecf","filename":"pom.xml","status":"modified","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3a4ed075b6854788255cf70f630882fa0c8ab4/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3a4ed075b6854788255cf70f630882fa0c8ab4/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0f3a4ed075b6854788255cf70f630882fa0c8ab4","patch":"@@ -372,10 +372,14 @@ under the License.\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n     \n     <jquery.version>2.1.4</jquery.version>\n-    <jquery-ui.version>1.11.4</jquery-ui.version>\n+    <!-- to be updated as soon as fix for https://github.com/l0rdn1kk0n/wicket-bootstrap/issues/549 is released -->\n+    <jquery-ui.version>1.10.3</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n+\n     <bootstrap-select.version>1.7.3</bootstrap-select.version>\n+    <wicket-bootstrap.version>0.10.3</wicket-bootstrap.version>\n+\n     <font-awesome.version>4.4.0</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n     <highlightjs.version>8.7</highlightjs.version>\n@@ -875,6 +879,16 @@ under the License.\n         <artifactId>wicket-native-websocket-javax</artifactId>\n         <version>${wicket.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>de.agilecoders.wicket</groupId>\n+        <artifactId>wicket-bootstrap-core</artifactId>\n+        <version>${wicket-bootstrap.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>de.agilecoders.wicket</groupId>\n+        <artifactId>wicket-bootstrap-extensions</artifactId>\n+        <version>${wicket-bootstrap.version}</version>\n+      </dependency>\n       <!-- /Wicket -->\n       \n       <dependency>\n@@ -969,8 +983,8 @@ under the License.\n         <artifactId>jquery-cookie</artifactId>\n         <version>${jquery-cookie.version}</version>\n       </dependency>\n-      \n-      \n+\n+            \n       <dependency>\n         <groupId>com.beust</groupId>\n         <artifactId>jcommander</artifactId>"}]}