{"sha":"18e9a49072b9150fdb5ef3f3ce330f98311d7086","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE4ZTlhNDkwNzJiOTE1MGZkYjVlZjNmM2NlMzMwZjk4MzExZDcwODY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-24T14:30:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-24T14:30:19Z"},"message":"Adding Swagger test case","tree":{"sha":"ef466c8e4c6abe3bf5213544aa61d94b8777f0c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ef466c8e4c6abe3bf5213544aa61d94b8777f0c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/18e9a49072b9150fdb5ef3f3ce330f98311d7086","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18e9a49072b9150fdb5ef3f3ce330f98311d7086","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/18e9a49072b9150fdb5ef3f3ce330f98311d7086","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18e9a49072b9150fdb5ef3f3ce330f98311d7086/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"23a391ea7e981a915fab6be42d8ba3d892add056","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23a391ea7e981a915fab6be42d8ba3d892add056","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/23a391ea7e981a915fab6be42d8ba3d892add056"}],"stats":{"total":67,"additions":67,"deletions":0},"files":[{"sha":"654583bc36ea89c38a8a99133f545929b11f930a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SwaggerITCase.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18e9a49072b9150fdb5ef3f3ce330f98311d7086/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18e9a49072b9150fdb5ef3f3ce330f98311d7086/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java?ref=18e9a49072b9150fdb5ef3f3ce330f98311d7086","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.Assume;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class SwaggerITCase extends AbstractITCase {\n+\n+    @Test\n+    public void swagger() throws IOException {\n+        WebClient webClient = WebClient.create(ADDRESS + \"/swagger.json\").accept(MediaType.APPLICATION_JSON_TYPE);\n+        Response response = webClient.get();\n+        Assume.assumeTrue(response.getStatus() == 200);\n+\n+        JsonNode tree = new ObjectMapper().readTree((InputStream) response.getEntity());\n+        assertNotNull(tree);\n+\n+        JsonNode info = tree.get(\"info\");\n+        assertEquals(\"Apache Syncope\", info.get(\"title\").asText());\n+\n+        assertEquals(\"/syncope/rest\", tree.get(\"basePath\").asText());\n+\n+        JsonNode tags = tree.get(\"tags\");\n+        assertNotNull(tags);\n+        assertTrue(tags.isContainerNode());\n+\n+        JsonNode paths = tree.get(\"paths\");\n+        assertNotNull(paths);\n+        assertTrue(paths.isContainerNode());\n+\n+        JsonNode definitions = tree.get(\"definitions\");\n+        assertNotNull(definitions);\n+        assertTrue(definitions.isContainerNode());\n+    }\n+}"}]}