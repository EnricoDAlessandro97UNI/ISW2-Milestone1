{"sha":"2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","node_id":"C_kwDOJfYA1toAKDJmYTdlMjg4NzRhY2ZlY2E4YjYxMjRmZmVjOTRkN2YwYTJkMGQ5YmE","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2021-12-10T05:18:45Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-12-10T05:18:45Z"},"message":"Switch CAS to use 6.5.x / Spring Boot 2.6.x (#296)\n\n* switch cas to use 6.5 rc2\r\n\r\n* resume with boot 2.6 upgrade\r\n\r\n* update spring cloud gateway\r\n\r\n* upgrade to boot 2.6\r\n\r\n* Upgrading Groovy\r\n\r\n* Fix test cases; make sure exceptions are caught in SAML2 metadata generation process\r\n\r\n* assign a name to the syncope authn handler matching master-content and auth-module\r\n\r\n* Upgrading Tomcat\r\n\r\n* Upgrading Spring Boot\r\n\r\n* Upgrading Payara\r\n\r\n* Upgrading Wildfly\r\n\r\n* Getting Started Guide: reviewed for 3.0\r\n\r\n* [SYNCOPE-1651] Reviewing delegation validation logic\r\n\r\n* Upgrading gmavenplus-plugin\r\n\r\n* Reference Guide reviewed and compelted for 3.0 up to Customization\r\n\r\n* Typos in Reference Guide 3.0\r\n\r\n* [SYNCOPE-1654] Allowing to search realm by key or full path\r\n\r\n* Upgrading Swagger UI and Checkstyle\r\n\r\n* Upgrading Bouncycastle\r\n\r\n* Upgrading Wicket\r\n\r\n* upgrade to spring boot 2.6; fixes build issues\r\n\r\n* fix checkstyle\r\n\r\n* restore spring cloud contract wiremock version\r\n\r\n* update pac4j to match latest CAS 6.5 SNAPSHOT\r\n\r\nCo-authored-by: Francesco Chicchiriccò <ilgrosso@apache.org>","tree":{"sha":"157b7cb1469f601d72d67afadc8e063de4eec2f2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/157b7cb1469f601d72d67afadc8e063de4eec2f2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhsuM1CRBK7hj4Ov3rIwAAOBoIADxi7ZP241aLfW5/fQTvoOuu\ntYAt9bqmHUXRUpXhcVOykEVcvQAC9oPLggdFqaPCSG99QkYfWWhz3YaTmAE4B1zF\nrZ70yJL3x6PblPBEv290oY66IHVcDom+EmB+mU8413YsqjlD0znVbdNtCCgfFBq3\nZoOYuOytikB7vjV1Lq4Ws48/BXJJL1ehif9+EUlzGOW6O8Ki0FLIWxb4S8obV2yb\nKyEDjt/Y8YQtiyZyWL3XI/0ExJRnIQBb3arrL/06jdb+bFPfWHPmMhriStIHZ+ft\nv132i9CLGLAbIU3oRMjniY9AfM3MsFdU/x1PQxAGvErNq1a6PMWTeO+c3MNxyfA=\n=U1Jt\n-----END PGP SIGNATURE-----\n","payload":"tree 157b7cb1469f601d72d67afadc8e063de4eec2f2\nparent 342863b6eed55c3eb07c0c183a7ab95c7f516d95\nauthor Misagh Moayyed <mm1844@gmail.com> 1639113525 +0400\ncommitter GitHub <noreply@github.com> 1639113525 +0400\n\nSwitch CAS to use 6.5.x / Spring Boot 2.6.x (#296)\n\n* switch cas to use 6.5 rc2\r\n\r\n* resume with boot 2.6 upgrade\r\n\r\n* update spring cloud gateway\r\n\r\n* upgrade to boot 2.6\r\n\r\n* Upgrading Groovy\r\n\r\n* Fix test cases; make sure exceptions are caught in SAML2 metadata generation process\r\n\r\n* assign a name to the syncope authn handler matching master-content and auth-module\r\n\r\n* Upgrading Tomcat\r\n\r\n* Upgrading Spring Boot\r\n\r\n* Upgrading Payara\r\n\r\n* Upgrading Wildfly\r\n\r\n* Getting Started Guide: reviewed for 3.0\r\n\r\n* [SYNCOPE-1651] Reviewing delegation validation logic\r\n\r\n* Upgrading gmavenplus-plugin\r\n\r\n* Reference Guide reviewed and compelted for 3.0 up to Customization\r\n\r\n* Typos in Reference Guide 3.0\r\n\r\n* [SYNCOPE-1654] Allowing to search realm by key or full path\r\n\r\n* Upgrading Swagger UI and Checkstyle\r\n\r\n* Upgrading Bouncycastle\r\n\r\n* Upgrading Wicket\r\n\r\n* upgrade to spring boot 2.6; fixes build issues\r\n\r\n* fix checkstyle\r\n\r\n* restore spring cloud contract wiremock version\r\n\r\n* update pac4j to match latest CAS 6.5 SNAPSHOT\r\n\r\nCo-authored-by: Francesco Chicchiriccò <ilgrosso@apache.org>"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"342863b6eed55c3eb07c0c183a7ab95c7f516d95","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/342863b6eed55c3eb07c0c183a7ab95c7f516d95","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/342863b6eed55c3eb07c0c183a7ab95c7f516d95"}],"stats":{"total":252,"additions":180,"deletions":72},"files":[{"sha":"c0ba1d60ec98b989e37f6d74459a7cd6372ce874","filename":"client/idrepo/console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -124,7 +124,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j18-impl</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>"},{"sha":"723e8e350969f73ad60c3002bfc67c3003871a7c","filename":"client/idrepo/console/src/main/resources/console.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -17,6 +17,7 @@\n spring.application.name=Apache Syncope ${syncope.version} Console\n spring.groovy.template.check-template-location=false\n spring.main.banner-mode=log\n+spring.main.allow-circular-references=true\n \n server.servlet.encoding.charset=UTF-8\n server.servlet.encoding.enabled=true"},{"sha":"f6b10ebe228bfb4204839d47ddbf07de5372357b","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -112,7 +112,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j18-impl</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>"},{"sha":"a9f693097d08b29f44f9e0a3d1c97d4ff0769ac6","filename":"client/idrepo/enduser/src/main/resources/enduser.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -17,6 +17,7 @@\n spring.application.name=Apache Syncope ${syncope.version} Enduser\n spring.groovy.template.check-template-location=false\n spring.main.banner-mode=log\n+spring.main.allow-circular-references=true\n \n server.servlet.encoding.charset=UTF-8\n server.servlet.encoding.enabled=true"},{"sha":"b9227a773cf0ada73c61a418e6e40dd77b6618af","filename":"client/idrepo/enduser/src/test/java/org/apache/syncope/client/enduser/SyncopeEnduserApplicationTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -25,8 +25,6 @@\n \n import java.io.IOException;\n import java.security.AccessControlException;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.ExecutionException;\n import javax.ws.rs.BadRequestException;"},{"sha":"305decac53d2da12d9ec864a4927db6fd0b2223b","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -88,6 +88,8 @@ public final class AMEntitlement {\n \n     public static final String OIDC_JWKS_READ = \"OIDC_JWKS_READ\";\n \n+    public static final String OIDC_JWKS_SET = \"OIDC_JWKS_SET\";\n+\n     public static final String OIDC_JWKS_DELETE = \"OIDC_JWKS_DELETE\";\n \n     public static final String WA_CONFIG_LIST = \"WA_CONFIG_LIST\";"},{"sha":"53eb241b5afa3fa3937272a4282907de75ceaef4","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCJWKSService.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -52,6 +52,13 @@ public interface OIDCJWKSService extends JAXRSService {\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     OIDCJWKSTO get();\n \n+    @ApiResponses(\n+        @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n+    @POST\n+    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    void set(@NotNull OIDCJWKSTO entityTO);\n+\n     @ApiResponses({\n         @ApiResponse(responseCode = \"201\",\n                 description = \"JWKS successfully created\", headers = {\n@@ -63,6 +70,7 @@ public interface OIDCJWKSService extends JAXRSService {\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    @Path(\"new\")\n     Response generate(\n             @NotNull @QueryParam(\"size\") @DefaultValue(\"2048\") int size,\n             @NotNull @QueryParam(\"algorithm\") @DefaultValue(\"RS256\") JWSAlgorithm algorithm);"},{"sha":"e105e821110d2f59cef94c8f1c92f89480b56886","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/OIDCJWKSLogic.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -76,4 +76,12 @@ protected OIDCJWKSTO resolveReference(final Method method, final Object... args)\n         }\n         return binder.getOIDCJWKSTO(jwks);\n     }\n+\n+    @PreAuthorize(\"hasRole('\" + AMEntitlement.OIDC_JWKS_SET + \"') \"\n+        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    public OIDCJWKSTO set(final OIDCJWKSTO entityTO) {\n+        OIDCJWKS jwks = dao.get();\n+        jwks.setJson(entityTO.getJson());\n+        return binder.getOIDCJWKSTO(dao.save(jwks));\n+    }\n }"},{"sha":"ded23ea13e8c52012da5bd6fbaa798cd4bc29abe","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCJWKSServiceImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -40,6 +40,11 @@ public OIDCJWKSTO get() {\n         return logic.get();\n     }\n \n+    @Override\n+    public void set(final OIDCJWKSTO entityTO) {\n+        logic.set(entityTO);\n+    }\n+\n     @Override\n     public Response generate(final int size, final JWSAlgorithm algorithm) {\n         OIDCJWKSTO jwks = logic.generate(size, algorithm);"},{"sha":"3bf08a6df67db3b3deebb8ecaf378a7d61d22906","filename":"core/starter/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/core%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fpom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -83,7 +83,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j18-impl</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>"},{"sha":"a3319d949864dda916600f4ea6c04694dc5e8669","filename":"fit/build-tools/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -203,7 +203,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j18-impl</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>"},{"sha":"6ee9cb47c88adc987757bc070fe77e8ca4827585","filename":"fit/build-tools/src/main/resources/application.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -17,6 +17,7 @@\n spring.application.name=Apache Syncope ${syncope.version} Build Tools\n spring.groovy.template.check-template-location=false\n #spring.main.banner-mode=log\n+spring.main.allow-circular-references=true\n \n server.servlet.encoding.charset=UTF-8\n server.servlet.encoding.enabled=true"},{"sha":"933e1d2cdf91dfab0320d21e1a49494cae4d3869","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.fit;\n \n-import static org.apache.syncope.fit.AbstractUIITCase.ANONYMOUS_KEY;\n-import static org.apache.syncope.fit.AbstractUIITCase.ANONYMOUS_UNAME;\n import static org.awaitility.Awaitility.await;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;"},{"sha":"6eb99fdfab89012f34fda2b53aa2dd4c4b05238c","filename":"fit/wa-reference/src/main/resources/wa-embedded.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+spring.main.allow-circular-references=true\n+\n keymaster.address=http://localhost:9080/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n@@ -30,3 +32,8 @@ cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}\n cas.authn.oidc.core.issuer=${cas.server.prefix}/oidc\n \n service.discovery.address=http://localhost:9080/syncope-wa/\n+\n+##\n+# Default strategy for matching request paths against\n+# registered Spring MVC handler mappings\n+spring.mvc.pathmatch.matching-strategy=ant-path-matcher"},{"sha":"6f4a6e26148863f8a2474e8ddc5dd848aa48ff7e","filename":"pom.xml","status":"modified","additions":21,"deletions":9,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -409,8 +409,8 @@ under the License.\n \n     <jackson.version>2.13.0</jackson.version>\n \n-    <spring-boot.version>2.5.7</spring-boot.version>\n-    <spring-cloud-gateway.version>3.0.5</spring-cloud-gateway.version>\n+    <spring-boot.version>2.6.1</spring-boot.version>\n+    <spring-cloud-gateway.version>3.1.0</spring-cloud-gateway.version>\n \n     <openjpa.version>3.2.0</openjpa.version>\n     <hikaricp.version>5.0.0</hikaricp.version>\n@@ -428,7 +428,7 @@ under the License.\n \n     <camel.version>3.13.0</camel.version>\n \n-    <slf4j.version>2.0.0-alpha5</slf4j.version>\n+    <slf4j.version>1.7.32</slf4j.version>\n \n     <elasticsearch.version>7.15.2</elasticsearch.version>\n \n@@ -446,9 +446,9 @@ under the License.\n \n     <modernizer-maven.version>2.3.0</modernizer-maven.version>\n \n-    <pac4j.version>5.1.4</pac4j.version>\n+    <pac4j.version>5.2.0</pac4j.version>\n \n-    <cas.version>6.4.2</cas.version>\n+    <cas.version>6.5.0-SNAPSHOT</cas.version>\n     <cas-client.version>3.6.2</cas-client.version>\n \n     <h2.version>1.4.200</h2.version>\n@@ -1740,7 +1740,7 @@ under the License.\n       </dependency>\n       <dependency>\n         <groupId>org.apache.logging.log4j</groupId>\n-        <artifactId>log4j-slf4j18-impl</artifactId>\n+        <artifactId>log4j-slf4j-impl</artifactId>\n         <version>${log4j.version}</version>\n       </dependency>\n       <dependency>\n@@ -1888,9 +1888,7 @@ under the License.\n       <dependency>\n         <groupId>org.springframework.cloud</groupId>\n         <artifactId>spring-cloud-contract-wiremock</artifactId>\n-        <version>3.0.4</version>\n-        <!-- unfortunately, not always aligned with spring-cloud-gateway -->\n-        <!--<version>${spring-cloud-gateway.version}</version>-->\n+        <version>${spring-cloud-gateway.version}</version>\n         <scope>test</scope>\n       </dependency>\n \n@@ -1922,6 +1920,13 @@ under the License.\n         <enabled>true</enabled>\n       </releases>\n     </repository>\n+    <repository>\n+      <id>spring</id>\n+      <url>https://repo.spring.io/milestone</url>\n+      <releases>\n+        <enabled>true</enabled>\n+      </releases>\n+    </repository>\n   </repositories>\n \n   <pluginRepositories>\n@@ -1955,6 +1960,13 @@ under the License.\n         <enabled>true</enabled>\n       </snapshots>\n     </pluginRepository>\n+    <pluginRepository>\n+      <id>spring</id>\n+      <url>https://repo.spring.io/milestone</url>\n+      <releases>\n+        <enabled>true</enabled>\n+      </releases>\n+    </pluginRepository>\n   </pluginRepositories>\n \n   <build>"},{"sha":"8a575db68d0173e8ff1a3cafd75799a7447bb35c","filename":"sra/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/sra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/sra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fpom.xml?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -130,7 +130,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j18-impl</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>"},{"sha":"e3e75b69beccd6f3b4ab6ee4422d1e6ebc61c007","filename":"sra/src/main/java/org/apache/syncope/sra/SecurityConfig.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -63,6 +63,7 @@\n import org.springframework.security.oauth2.client.registration.InMemoryReactiveClientRegistrationRepository;\n import org.springframework.security.oauth2.core.AuthorizationGrantType;\n import org.springframework.security.oauth2.core.OAuth2TokenValidator;\n+import org.springframework.security.oauth2.jose.jws.SignatureAlgorithm;\n import org.springframework.security.oauth2.jwt.Jwt;\n import org.springframework.security.oauth2.jwt.JwtValidators;\n import org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverter;\n@@ -146,8 +147,11 @@ public Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter(\n     @ConditionalOnMissingBean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OIDC\")\n     public ReactiveJwtDecoder oidcJWTDecoder() {\n-        NimbusReactiveJwtDecoder jwtDecoder = NimbusReactiveJwtDecoder.withJwkSetUri(\n-                oidcClientRegistrationRepository().iterator().next().getProviderDetails().getJwkSetUri()).build();\n+        String jwkSetUri = oidcClientRegistrationRepository().iterator().next().getProviderDetails().getJwkSetUri();\n+        NimbusReactiveJwtDecoder jwtDecoder = NimbusReactiveJwtDecoder.withJwkSetUri(jwkSetUri)\n+            .jwsAlgorithm(SignatureAlgorithm.RS256)\n+            .jwsAlgorithm(SignatureAlgorithm.RS512)\n+            .build();\n         jwtDecoder.setJwtValidator(oidcJWTValidator());\n         jwtDecoder.setClaimSetConverter(jwtClaimSetConverter());\n         return jwtDecoder;"},{"sha":"d167e80fec27ad4b21f44fdfbd47df4254088913","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/SyncopeWABootstrapConfiguration.java","status":"modified","additions":19,"deletions":13,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWABootstrapConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWABootstrapConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWABootstrapConfiguration.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -30,23 +30,29 @@\n @PropertySource(value = \"file:${conf.directory}/wa.properties\", ignoreResourceNotFound = true)\n public class SyncopeWABootstrapConfiguration {\n \n-    @Value(\"${wa.anonymousUser}\")\n-    private String anonymousUser;\n+    @Configuration(proxyBeanMethods = false)\n+    public static class WAClientConfiguration {\n+        @Value(\"${wa.anonymousUser}\")\n+        private String anonymousUser;\n \n-    @Value(\"${wa.anonymousKey}\")\n-    private String anonymousKey;\n+        @Value(\"${wa.anonymousKey}\")\n+        private String anonymousKey;\n \n-    @Value(\"${wa.useGZIPCompression:true}\")\n-    private boolean useGZIPCompression;\n+        @Value(\"${wa.useGZIPCompression:true}\")\n+        private boolean useGZIPCompression;\n \n-    @Bean\n-    public WARestClient waRestClient() {\n-        return new WARestClient(anonymousUser, anonymousKey, useGZIPCompression);\n+        @Bean\n+        public WARestClient waRestClient() {\n+            return new WARestClient(anonymousUser, anonymousKey, useGZIPCompression);\n+        }\n     }\n \n-    @Autowired\n-    @Bean\n-    public PropertySourceLocator configPropertySourceLocator(final WARestClient waRestClient) {\n-        return new SyncopeWAPropertySourceLocator(waRestClient);\n+    @Configuration(proxyBeanMethods = false)\n+    public static class PropertySourceConfiguration {\n+        @Autowired\n+        @Bean\n+        public PropertySourceLocator configPropertySourceLocator(final WARestClient waRestClient) {\n+            return new SyncopeWAPropertySourceLocator(waRestClient);\n+        }\n     }\n }"},{"sha":"6e83d8fb36df72adb1c1d2b18c8536f6203503ea","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/SyncopeWAApplication.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -84,8 +84,8 @@ public class SyncopeWAApplication extends SpringBootServletInitializer {\n \n     public static void main(final String[] args) {\n         new SpringApplicationBuilder(SyncopeWAApplication.class).\n-                properties(\"spring.config.name:wa\").\n-                build().run(args);\n+            properties(Map.of(\"spring.config.name\", \"wa\", \"spring.cloud.bootstrap.name\", \"wa\")).\n+            build().run(args);\n     }\n \n     @Autowired\n@@ -96,7 +96,8 @@ public static void main(final String[] args) {\n \n     @Override\n     protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n-        return builder.properties(Map.of(\"spring.config.name\", \"wa\")).sources(SyncopeWAApplication.class);\n+        return builder.properties(Map.of(\"spring.config.name\", \"wa\",\n+            \"spring.cloud.bootstrap.name\", \"wa\")).sources(SyncopeWAApplication.class);\n     }\n \n     /**"},{"sha":"ccb9625a525cdad7a9b5da470c90fb70e22618ed","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/config/SyncopeWAConfiguration.java","status":"modified","additions":38,"deletions":26,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -27,9 +27,12 @@\n import io.swagger.v3.oas.models.security.SecurityScheme;\n import java.time.LocalDate;\n import java.time.ZoneId;\n-import java.util.Collection;\n+import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n+\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n@@ -70,11 +73,12 @@\n import org.apereo.cas.authentication.surrogate.SurrogateAuthenticationService;\n import org.apereo.cas.configuration.CasConfigurationProperties;\n import org.apereo.cas.configuration.model.support.mfa.u2f.U2FCoreMultifactorAuthenticationProperties;\n-import org.apereo.cas.oidc.jwks.OidcJsonWebKeystoreGeneratorService;\n+import org.apereo.cas.oidc.jwks.generator.OidcJsonWebKeystoreGeneratorService;\n import org.apereo.cas.otp.repository.credentials.OneTimeTokenCredentialRepository;\n import org.apereo.cas.otp.repository.token.OneTimeTokenRepository;\n import org.apereo.cas.services.ServiceRegistryExecutionPlanConfigurer;\n import org.apereo.cas.services.ServiceRegistryListener;\n+import org.apereo.cas.services.web.CasThymeleafLoginFormDirector;\n import org.apereo.cas.support.events.CasEventRepository;\n import org.apereo.cas.support.events.CasEventRepositoryFilter;\n import org.apereo.cas.support.pac4j.authentication.DelegatedClientFactoryCustomizer;\n@@ -83,8 +87,10 @@\n import org.apereo.cas.support.saml.idp.metadata.locator.SamlIdPMetadataLocator;\n import org.apereo.cas.util.DateTimeUtils;\n import org.apereo.cas.util.crypto.CipherExecutor;\n+import org.apereo.cas.web.flow.CasWebflowExecutionPlan;\n import org.apereo.cas.webauthn.storage.WebAuthnCredentialRepository;\n import org.pac4j.core.client.Client;\n+import org.springframework.beans.factory.ObjectProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n@@ -96,31 +102,21 @@\n @Configuration(value = \"SyncopeWAConfiguration\", proxyBeanMethods = false)\n public class SyncopeWAConfiguration {\n \n-    @Autowired\n-    private CasConfigurationProperties casProperties;\n-\n-    @Autowired\n-    private ConfigurableApplicationContext ctx;\n-\n-    @Autowired\n-    @Qualifier(\"serviceRegistryListeners\")\n-    private Collection<ServiceRegistryListener> serviceRegistryListeners;\n-\n-    private String version() {\n+    private static String version(final ConfigurableApplicationContext ctx) {\n         return ctx.getEnvironment().getProperty(\"version\");\n     }\n \n     @Bean\n-    public OpenAPI casSwaggerOpenApi() {\n+    public OpenAPI casSwaggerOpenApi(final ConfigurableApplicationContext ctx) {\n         return new OpenAPI().\n                 info(new Info().\n                         title(\"Apache Syncope\").\n-                        description(\"Apache Syncope \" + version()).\n+                        description(\"Apache Syncope \" + version(ctx)).\n                         contact(new Contact().\n                                 name(\"The Apache Syncope community\").\n                                 email(\"dev@syncope.apache.org\").\n                                 url(\"https://syncope.apache.org\")).\n-                        version(version())).\n+                        version(version(ctx))).\n                 schemaRequirement(\"BasicAuthentication\",\n                         new SecurityScheme().type(SecurityScheme.Type.HTTP).scheme(\"basic\")).\n                 schemaRequirement(\"Bearer\",\n@@ -165,7 +161,7 @@ public ClientAppMapper saml2SPClientAppTOMapper() {\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public RegisteredServiceMapper registeredServiceMapper() {\n+    public RegisteredServiceMapper registeredServiceMapper(final ConfigurableApplicationContext ctx) {\n         Map<String, AuthMapper> authPolicyConfMappers = new HashMap<>();\n         ctx.getBeansOfType(AuthMapper.class).forEach((name, bean) -> {\n             AuthMapFor authMapFor = ctx.findAnnotationOnBean(name, AuthMapFor.class);\n@@ -209,10 +205,15 @@ public RegisteredServiceMapper registeredServiceMapper() {\n     @Autowired\n     @Bean\n     public ServiceRegistryExecutionPlanConfigurer syncopeServiceRegistryConfigurer(\n-            final WARestClient restClient, final RegisteredServiceMapper registeredServiceMapper) {\n+            final ConfigurableApplicationContext ctx,\n+            final WARestClient restClient,\n+            final RegisteredServiceMapper registeredServiceMapper,\n+            @Qualifier(\"serviceRegistryListeners\")\n+            final ObjectProvider<List<ServiceRegistryListener>> serviceRegistryListeners) {\n \n         SyncopeWAServiceRegistry registry = new SyncopeWAServiceRegistry(\n-                restClient, registeredServiceMapper, ctx, serviceRegistryListeners);\n+                restClient, registeredServiceMapper, ctx,\n+                Optional.ofNullable(serviceRegistryListeners.getIfAvailable()).orElseGet(ArrayList::new));\n         return plan -> plan.registerServiceRegistry(registry);\n     }\n \n@@ -260,9 +261,10 @@ public DelegatedClientFactoryCustomizer<Client> delegatedClientCustomizer(final\n         return new SyncopeWASAML2ClientCustomizer(restClient);\n     }\n \n-    @Autowired\n     @Bean\n-    public OneTimeTokenRepository oneTimeTokenAuthenticatorTokenRepository(final WARestClient restClient) {\n+    public OneTimeTokenRepository oneTimeTokenAuthenticatorTokenRepository(\n+        final CasConfigurationProperties casProperties,\n+        final WARestClient restClient) {\n         return new SyncopeWAGoogleMfaAuthTokenRepository(\n                 restClient, casProperties.getAuthn().getMfa().getGauth().getCore().getTimeStepSize());\n     }\n@@ -277,7 +279,9 @@ public OneTimeTokenCredentialRepository googleAuthenticatorAccountRegistry(\n \n     @Autowired\n     @Bean\n-    public OidcJsonWebKeystoreGeneratorService oidcJsonWebKeystoreGeneratorService(final WARestClient restClient) {\n+    public OidcJsonWebKeystoreGeneratorService oidcJsonWebKeystoreGeneratorService(\n+        final ConfigurableApplicationContext ctx,\n+        final WARestClient restClient) {\n         int size = ctx.getEnvironment().\n                 getProperty(\"cas.authn.oidc.jwks.size\", int.class, 2048);\n         JWSAlgorithm algorithm = ctx.getEnvironment().\n@@ -287,15 +291,17 @@ public OidcJsonWebKeystoreGeneratorService oidcJsonWebKeystoreGeneratorService(f\n \n     @RefreshScope\n     @Bean\n-    @Autowired\n-    public WebAuthnCredentialRepository webAuthnCredentialRepository(final WARestClient restClient) {\n+    public WebAuthnCredentialRepository webAuthnCredentialRepository(\n+        final CasConfigurationProperties casProperties,\n+        final WARestClient restClient) {\n         return new SyncopeWAWebAuthnCredentialRepository(casProperties, restClient);\n     }\n \n     @Bean\n-    @Autowired\n     @RefreshScope\n-    public U2FDeviceRepository u2fDeviceRepository(final WARestClient restClient) {\n+    public U2FDeviceRepository u2fDeviceRepository(\n+        final CasConfigurationProperties casProperties,\n+        final WARestClient restClient) {\n         U2FCoreMultifactorAuthenticationProperties u2f = casProperties.getAuthn().getMfa().getU2f().getCore();\n         LocalDate expirationDate = LocalDate.now(ZoneId.systemDefault()).\n                 minus(u2f.getExpireDevices(), DateTimeUtils.toChronoUnit(u2f.getExpireDevicesTimeUnit()));\n@@ -333,4 +339,10 @@ public KeymasterStart keymasterStart() {\n     public KeymasterStop keymasterStop() {\n         return new KeymasterStop(NetworkService.Type.WA);\n     }\n+\n+    @Bean\n+    public CasThymeleafLoginFormDirector casThymeleafLoginFormDirector(\n+        @Qualifier(\"casWebflowExecutionPlan\") final CasWebflowExecutionPlan webflowExecutionPlan) {\n+        return new CasThymeleafLoginFormDirector(webflowExecutionPlan);\n+    }\n }"},{"sha":"69fd679886c9014e3416d67be22243bd6dcf84f4","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/events/SyncopeWAEventRepository.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fevents%2FSyncopeWAEventRepository.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fevents%2FSyncopeWAEventRepository.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fevents%2FSyncopeWAEventRepository.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -20,10 +20,11 @@\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.stream.Stream;\n+\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.audit.AuditEntry;\n@@ -100,7 +101,7 @@ public CasEvent saveInternal(final CasEvent event) {\n     }\n \n     @Override\n-    public Collection<? extends CasEvent> load() {\n+    public Stream<? extends CasEvent> load() {\n         throw new UnsupportedOperationException(\"Fetching authentication events from WA is not supported\");\n     }\n }"},{"sha":"830733a169c0193006cd0675bac1221ac73729b7","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/oidc/SyncopeWAOIDCJWKSGeneratorService.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -18,15 +18,20 @@\n  */\n package org.apache.syncope.wa.starter.oidc;\n \n+import org.apereo.cas.oidc.jwks.generator.OidcJsonWebKeystoreGeneratorService;\n+\n import java.nio.charset.StandardCharsets;\n+import java.util.Optional;\n+\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.service.OIDCJWKSService;\n import org.apache.syncope.wa.bootstrap.WARestClient;\n-import org.apereo.cas.oidc.jwks.OidcJsonWebKeystoreGeneratorService;\n+import org.jose4j.jwk.JsonWebKey;\n+import org.jose4j.jwk.JsonWebKeySet;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.core.io.ByteArrayResource;\n@@ -50,6 +55,23 @@ public SyncopeWAOIDCJWKSGeneratorService(\n         this.algorithm = algorithm;\n     }\n \n+    @Override\n+    public JsonWebKeySet store(final JsonWebKeySet jsonWebKeySet) throws Exception {\n+        if (!WARestClient.isReady()) {\n+            throw new RuntimeException(\"Syncope core is not yet ready\");\n+        }\n+        OIDCJWKSService service = waRestClient.getSyncopeClient().getService(OIDCJWKSService.class);\n+        OIDCJWKSTO to = new OIDCJWKSTO();\n+        to.setJson(jsonWebKeySet.toJson(JsonWebKey.OutputControlLevel.INCLUDE_PRIVATE));\n+        service.set(to);\n+        return jsonWebKeySet;\n+    }\n+\n+    @Override\n+    public Optional<Resource> find() {\n+        return Optional.of(generate());\n+    }\n+\n     @Override\n     public Resource generate() {\n         if (!WARestClient.isReady()) {"},{"sha":"25352ceadf50b36b23a77439b22339edab662677","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/saml/idp/metadata/RestfulSamlIdPMetadataLocator.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -87,11 +87,16 @@ public SamlIdPMetadataDocument fetchInternal(final Optional<SamlRegisteredServic\n \n             LOG.warn(\"Not a valid SAML2 IdP metadata document\");\n             return null;\n-        } catch (SyncopeClientException e) {\n-            if (e.getType() == ClientExceptionType.NotFound) {\n+        } catch (Exception e) {\n+            if (e instanceof SyncopeClientException\n+                && ((SyncopeClientException) e).getType() == ClientExceptionType.NotFound) {\n                 LOG.info(e.getMessage());\n             } else {\n-                LOG.error(\"While fetching SAML2 IdP metadata\", e);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.error(\"While fetching SAML2 IdP metadata\", e);\n+                } else {\n+                    LOG.error(\"While fetching SAML2 IdP metadata: \" + e.getMessage());\n+                }\n             }\n         }\n "},{"sha":"281f1483236a6b36e7a4f093e528393711508f0b","filename":"wa/starter/src/main/resources/wa.properties","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -17,6 +17,7 @@\n spring.application.name=Apache Syncope ${syncope.version} WA\n spring.groovy.template.check-template-location=false\n spring.main.banner-mode=log\n+spring.main.allow-circular-references=true\n \n version=${syncope.version}\n \n@@ -79,7 +80,7 @@ cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}\n cas.authn.oidc.core.issuer=${cas.server.prefix}/oidc\n cas.authn.oidc.discovery.id-token-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n cas.authn.oidc.discovery.user-info-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n-cas.authn.oauth.user-profile-view-type=FLAT\n+cas.authn.oauth.core.user-profile-view-type=FLAT\n \n # Disable access to the login endpoint\n # if no target application is specified.\n@@ -102,4 +103,10 @@ cas.authn.mfa.web-authn.core.application-id=https://localhost:8443\n cas.authn.mfa.web-authn.core.relying-party-name=Syncope \n cas.authn.mfa.web-authn.core.relying-party-id=syncope.apache.org\n \n-cas.authn.syncope.url=${cas.server.name}/syncope/rest/\n+cas.authn.syncope.url=${cas.server.name}/syncope\n+cas.authn.syncope.name=DefaultSyncopeAuthModule\n+\n+##\n+# Default strategy for matching request paths against\n+# registered Spring MVC handler mappings\n+spring.mvc.pathmatch.matching-strategy=ant-path-matcher"},{"sha":"9d2f8785ef44ee92ecca08f82f8dd90c3abca496","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/audit/SyncopeWAAuditTrailManagerTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FSyncopeWAAuditTrailManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FSyncopeWAAuditTrailManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FSyncopeWAAuditTrailManagerTest.java?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -50,7 +50,7 @@ private static WARestClient getWaRestClient() {\n     @Test\n     public void saveAuditRecord() {\n         AuditActionContext audit = new AuditActionContext(\"principal\", \"resourceOperatedUpon\", \"actionPerformed\",\n-                \"applicationCode\", new Date(), \"clientIpAddress\", \"serverIpAddress\");\n+                \"applicationCode\", new Date(), \"clientIpAddress\", \"serverIpAddress\", \"userAgent\");\n         SyncopeWAAuditTrailManager auditTrailManager = new SyncopeWAAuditTrailManager(getWaRestClient());\n         auditTrailManager.saveAuditRecord(audit);\n         verify(loggerService).create(any(AuditEntry.class));"},{"sha":"243d97d38ea7abb75dc1ed95fc29fe7825e8bf54","filename":"wa/starter/src/test/resources/debug/wa-debug.properties","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa-debug.properties?ref=2fa7e28874acfeca8b6124ffec94d7f0a2d0d9ba","patch":"@@ -14,11 +14,20 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+spring.main.allow-circular-references=true\n+\n keymaster.address=http://localhost:9080/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n cas.server.name=http://localhost:8080\n cas.server.prefix=${cas.server.name}/syncope-wa\n cas.authn.accept.users=admin::password\n-cas.authn.syncope.url=http://localhost:9080/syncope/rest/\n+\n+cas.authn.syncope.url=http://localhost:9080/syncope\n+cas.authn.syncope.name=DefaultSyncopeAuthModule\n+\n+##\n+# Default strategy for matching request paths against\n+# registered Spring MVC handler mappings\n+spring.mvc.pathmatch.matching-strategy=ant-path-matcher"}]}