{"sha":"60c21d72a62fb78c2b3a91c2ec0724dfe225827e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYwYzIxZDcyYTYyZmI3OGMyYjNhOTFjMmVjMDcyNGRmZTIyNTgyN2U=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-13T18:41:32Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-13T18:41:32Z"},"message":"SYNCOPE-307 merged from the branch 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1445825 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"499551ec36bd0d1aad83f45132252187279f9d70","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/499551ec36bd0d1aad83f45132252187279f9d70"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/60c21d72a62fb78c2b3a91c2ec0724dfe225827e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/60c21d72a62fb78c2b3a91c2ec0724dfe225827e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/60c21d72a62fb78c2b3a91c2ec0724dfe225827e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"9c24f8e0130a271e119338b3a13a37b2c1ce409d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c24f8e0130a271e119338b3a13a37b2c1ce409d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c24f8e0130a271e119338b3a13a37b2c1ce409d"}],"stats":{"total":209,"additions":149,"deletions":60},"files":[{"sha":"6102f2cd6cbe0139e6687a4d6334a6494a8bffe8","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":67,"deletions":50,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=60c21d72a62fb78c2b3a91c2ec0724dfe225827e","patch":"@@ -474,59 +474,77 @@ public void retrieveVirAttrValues(final AbstractAttributable owner, final Attrib\n         final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n         final ConnectorFactory connInstanceLoader = context.getBean(ConnectorFactory.class);\n \n-        final IntMappingType type = owner instanceof SyncopeUser\n-                ? IntMappingType.UserVirtualSchema : IntMappingType.RoleVirtualSchema;\n+        final IntMappingType type = attrUtil.getType() == AttributableType.USER\n+                ? IntMappingType.UserVirtualSchema : attrUtil.getType() == AttributableType.ROLE\n+                ? IntMappingType.RoleVirtualSchema : IntMappingType.MembershipVirtualSchema;\n \n         final Map<String, ConnectorObject> externalResources = new HashMap<String, ConnectorObject>();\n \n         // -----------------------\n-        // Retrieve virtual attribute values\n+        // Retrieve virtual attribute values if and only if they have not been retrieved yet\n         // -----------------------\n         for (AbstractVirAttr virAttr : owner.getVirtualAttributes()) {\n-            final String schemaName = virAttr.getVirtualSchema().getName();\n-            final List<String> values = virAttrCache.get(attrUtil.getType(), owner.getId(), schemaName);\n-\n-            LOG.debug(\"Retrieve values for virtual attribute {}\", schemaName);\n+            // reset value set\n+            if (virAttr.getValues().isEmpty()) {\n+                retrieveVirAttrValue(owner, virAttr, attrUtil, type, externalResources, connInstanceLoader);\n+            }\n+        }\n+        // -----------------------\n+    }\n \n-            if (values == null) {\n-                // non cached ...\n-                LOG.debug(\"Need one or more remote connections\");\n-                for (ExternalResource resource : getTargetResource(virAttr, type, attrUtil)) {\n-                    LOG.debug(\"Seach values into {}\", resource.getName());\n-                    try {\n-                        final ConnectorObject connectorObject;\n+    private void retrieveVirAttrValue(\n+            final AbstractAttributable owner,\n+            final AbstractVirAttr virAttr,\n+            final AttributableUtil attrUtil,\n+            final IntMappingType type,\n+            final Map<String, ConnectorObject> externalResources,\n+            final ConnectorFactory connInstanceLoader) {\n+\n+        final String schemaName = virAttr.getVirtualSchema().getName();\n+        final List<String> values = virAttrCache.get(attrUtil.getType(), owner.getId(), schemaName);\n+\n+        LOG.debug(\"Retrieve values for virtual attribute {} ({})\", schemaName, type);\n+\n+        if (values == null) {\n+            // non cached ...\n+            LOG.debug(\"Need one or more remote connections\");\n+            for (ExternalResource resource : getTargetResource(virAttr, type, attrUtil)) {\n+                LOG.debug(\"Seach values into {}\", resource.getName());\n+                try {\n+                    final ConnectorObject connectorObject;\n+\n+                    if (externalResources.containsKey(resource.getName())) {\n+                        connectorObject = externalResources.get(resource.getName());\n+                    } else {\n+                        LOG.debug(\"Perform connection to {}\", resource.getName());\n+                        final String accountId = attrUtil.getAccountIdItem(resource) == null\n+                                ? null\n+                                : MappingUtil.getAccountIdValue(\n+                                owner, resource, attrUtil.getAccountIdItem(resource));\n \n-                        if (externalResources.containsKey(resource.getName())) {\n-                            connectorObject = externalResources.get(resource.getName());\n-                        } else {\n-                            LOG.debug(\"Perform connection to {}\", resource.getName());\n-                            final String accountId = attrUtil.getAccountIdItem(resource) == null\n-                                    ? null\n-                                    : MappingUtil.getAccountIdValue(\n-                                    owner, resource, attrUtil.getAccountIdItem(resource));\n-\n-                            if (StringUtils.isBlank(accountId)) {\n-                                throw new IllegalArgumentException(\"No AccountId found for \" + resource.getName());\n-                            }\n+                        if (StringUtils.isBlank(accountId)) {\n+                            throw new IllegalArgumentException(\"No AccountId found for \" + resource.getName());\n+                        }\n \n-                            final Set<String> extAttrNames = new HashSet<String>();\n+                        final Set<String> extAttrNames = new HashSet<String>();\n \n-                            // retrieve all mapped virtual attribute values\n-                            for (AbstractMappingItem item :\n-                                    MappingUtil.getMatchingMappingItems(attrUtil.getMappingItems(resource), type)) {\n-                                extAttrNames.add(item.getExtAttrName());\n-                            }\n+                        // retrieve all mapped virtual attribute values\n+                        for (AbstractMappingItem item :\n+                                MappingUtil.getMatchingMappingItems(attrUtil.getMappingItems(resource), type)) {\n+                            extAttrNames.add(item.getExtAttrName());\n+                        }\n \n-                            LOG.debug(\"External attribute ({}) names to get '{}'\", type, extAttrNames);\n+                        LOG.debug(\"External attribute ({}) names to get '{}'\", type, extAttrNames);\n \n-                            final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n-                            oob.setAttributesToGet(extAttrNames);\n+                        final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n+                        oob.setAttributesToGet(extAttrNames);\n \n-                            final SyncopeConnector connector = connInstanceLoader.getConnector(resource);\n-                            connectorObject = connector.getObject(ObjectClass.ACCOUNT, new Uid(accountId), oob.build());\n-                            externalResources.put(resource.getName(), connectorObject);\n-                        }\n+                        final SyncopeConnector connector = connInstanceLoader.getConnector(resource);\n+                        connectorObject = connector.getObject(fromAttributable(owner), new Uid(accountId), oob.build());\n+                        externalResources.put(resource.getName(), connectorObject);\n+                    }\n \n+                    if (connectorObject != null) {\n                         // ask for searched virtual attribute value\n                         final List<AbstractMappingItem> mappings = MappingUtil.getMatchingMappingItems(\n                                 attrUtil.getMappingItems(resource), schemaName, type);\n@@ -543,21 +561,20 @@ public void retrieveVirAttrValues(final AbstractAttributable owner, final Attrib\n                                 }\n                             }\n                         }\n-\n-                        LOG.debug(\"Retrieved values {}\", virAttr.getValues());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error reading connector object from {}\", resource.getName(), e);\n                     }\n+                    \n+                    LOG.debug(\"Retrieved values {}\", virAttr.getValues());\n+                } catch (Exception e) {\n+                    LOG.error(\"Error reading connector object from {}\", resource.getName(), e);\n                 }\n-\n-                virAttrCache.put(attrUtil.getType(), owner.getId(), schemaName, virAttr.getValues());\n-            } else {\n-                // cached ...\n-                LOG.debug(\"Values found in cache {}\", values);\n-                virAttr.setValues(values);\n             }\n+\n+            virAttrCache.put(attrUtil.getType(), owner.getId(), schemaName, virAttr.getValues());\n+        } else {\n+            // cached ...\n+            LOG.debug(\"Values found in cache {}\", values);\n+            virAttr.setValues(values);\n         }\n-        // -----------------------\n     }\n \n     private Set<ExternalResource> getTargetResource("},{"sha":"8c2e9ef557d981a5991a9606a271902160ad5d73","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=60c21d72a62fb78c2b3a91c2ec0724dfe225827e","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.core.connid.PasswordGenerator;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -523,23 +524,44 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n \n         final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n \n+        boolean virAttrRerieved = false;\n+\n         for (ResourceOperation operation : ResourceOperation.values()) {\n             for (String resourceName : propByRes.get(operation)) {\n                 final ExternalResource resource = resourceDAO.find(resourceName);\n                 if (resource == null) {\n                     LOG.error(\"Invalid resource name specified: {}, ignoring...\", resourceName);\n                 } else {\n+                    AttributableUtil attrUtil = AttributableUtil.getInstance(subject);\n+\n                     PropagationTask task = new PropagationTask();\n                     task.setResource(resource);\n                     task.setObjectClassName(connObjectUtil.fromAttributable(subject).getObjectClassValue());\n-                    task.setSubjectType(AttributableUtil.getInstance(subject).getType());\n+                    task.setSubjectType(attrUtil.getType());\n                     if (!deleteOnResource) {\n                         task.setSubjectId(subject.getId());\n                     }\n                     task.setPropagationOperation(operation);\n                     task.setPropagationMode(resource.getPropagationMode());\n                     task.setOldAccountId(propByRes.getOldAccountId(resource.getName()));\n \n+                    if (operation == ResourceOperation.CREATE && !virAttrRerieved\n+                            && vAttrsToBeRemoved != null && vAttrsToBeUpdated != null) {\n+                        connObjectUtil.retrieveVirAttrValues(subject, attrUtil);\n+                        virAttrRerieved = true;\n+\n+                        // update vAttrsToBeUpdated as well\n+                        for (AbstractVirAttr virAttr : subject.getVirtualAttributes()) {\n+                            final String schema = virAttr.getVirtualSchema().getName();\n+\n+                            final AttributeMod attributeMod = new AttributeMod();\n+                            attributeMod.setSchema(schema);\n+                            attributeMod.setValuesToBeAdded(virAttr.getValues());\n+\n+                            vAttrsToBeUpdated.put(schema, attributeMod);\n+                        }\n+                    }\n+\n                     Map.Entry<String, Set<Attribute>> preparedAttrs = prepareAttributes(subject, password,\n                             vAttrsToBeRemoved, vAttrsToBeUpdated, enable, resource);\n                     task.setAccountId(preparedAttrs.getKey());"},{"sha":"13557086464d2f3dd1c19f4097551abbace791aa","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=60c21d72a62fb78c2b3a91c2ec0724dfe225827e","patch":"@@ -69,7 +69,7 @@ public void findAll() {\n         assertEquals(1, sclist.size());\n \n         List<SyncTask> sylist = taskDAO.findAll(SyncTask.class);\n-        assertEquals(5, sylist.size());\n+        assertEquals(6, sylist.size());\n     }\n \n     @Test"},{"sha":"ba0193dec5a9b8e74a7fbc0966a3f9d445be4520","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":50,"deletions":3,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=60c21d72a62fb78c2b3a91c2ec0724dfe225827e","patch":"@@ -61,6 +61,7 @@\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.http.HttpStatus;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.web.client.HttpStatusCodeException;\n@@ -789,11 +790,11 @@ public void issueSYNCOPE258() {\n         // Add a custom correlation rule\n         // -----------------------------\n         SyncPolicyTO policyTO = policyService.read(PolicyType.SYNC, 9L);\n-        ((SyncPolicySpec)policyTO.getSpecification()).setUserJavaRule(TestSyncRule.class.getName());\n-        \n+        ((SyncPolicySpec) policyTO.getSpecification()).setUserJavaRule(TestSyncRule.class.getName());\n+\n         policyService.update(PolicyType.SYNC, policyTO.getId(), policyTO);\n         // -----------------------------\n-        \n+\n         SyncTaskTO task = new SyncTaskTO();\n         task.setName(\"Test Sync Rule\");\n         task.setResource(\"ws-target-resource-2\");\n@@ -836,6 +837,52 @@ public void issueSYNCOPE258() {\n                 executed.getExecutions().get(0).getMessage().contains(\"[updated/failures]: 1/0\"));\n     }\n \n+    @Test\n+    public void issueSYNCOPE307() {\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"s307@apache.org\");\n+\n+        AttributeTO csvuserid = new AttributeTO();\n+        csvuserid.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(csvuserid);\n+\n+        userTO.getResources().clear();\n+        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.addResource(\"resource-csv\");\n+\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+\n+        userTO = userService.read(userTO.getId());\n+        assertEquals(\"virtualvalue\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // Update sync task\n+        SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 12L);\n+        assertNotNull(task);\n+\n+        //  add user template\n+        UserTO template = new UserTO();\n+        template.addResource(\"resource-db-virattr\");\n+\n+        task.setUserTemplate(template);\n+\n+        taskService.update(task.getId(), task);\n+        execSyncTask(task.getId(), 50, false);\n+\n+        // check for sync policy\n+        userTO = userService.read(userTO.getId());\n+        assertEquals(\"virtualvalue\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        try {\n+            final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+\n+            String value = jdbcTemplate.queryForObject(\n+                    \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getId());\n+            assertEquals(\"virtualvalue\", value);\n+        } catch (EmptyResultDataAccessException e) {\n+            assertTrue(false);\n+        }\n+    }\n+\n     /**\n      * remove initial and synchronized users to make test re-runnable\n      */"},{"sha":"426a87974f7d584583fdbddda73be735fabe4015","filename":"core/src/test/resources/content.xml","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/60c21d72a62fb78c2b3a91c2ec0724dfe225827e/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=60c21d72a62fb78c2b3a91c2ec0724dfe225827e","patch":"@@ -331,14 +331,14 @@ under the License.\n                 connectorName=\"org.connid.bundles.db.table.DatabaseTableConnector\" \n                 displayName=\"H2-testsync\" version=\"${connid.db.table.version}\"\n                 xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Edatasource%3C%2Fname%3E%0A++++++%3CdisplayName%3EDatasource+Path%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BJDBC+Data+Source+Name%2FPath%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+JDBC+Data+Source+Name%2FPath+to+connect+to+the+Oracle+server.+If+specified%2C+connector+will+only+try+to+connect+using+Datasource+and+ignore+other+resource+parameters+specified.%26lt%3Bbr%26gt%3Bthe+example+value+is%3A+%26lt%3BCODE%26gt%3Bjdbc%2FSampleDataSourceName%26lt%3B%2FCODE%26gt%3B%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E22%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C%2Fname%3E%0A++++++%3CdisplayName%3EJDBC+Driver%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BJDBC+Driver%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSpecify+the+JDBC+Driver+class+name.+Oracle+is+oracle.jdbc.driver.OracleDriver.+MySQL+is+org.gjt.mm.mysql.Driver.%26lt%3Bbr%26gt%3BCould+be+empty+if+datasource+is+provided.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E14%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Eorg.h2.Driver%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EvalidConnectionQuery%3C%2Fname%3E%0A++++++%3CdisplayName%3EValidate+Connection+Query%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BValidate+Connection+Query%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BThere+can+be+specified+the+check+connection+alive+query.+If+empty%2C+default+implementation+will+test+it+using+the+switch+on%2Foff+the+autocommit.+Some+select+1+from+dummy+table+could+be+more+efficient.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E20%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C%2Fname%3E%0A++++++%3CdisplayName%3EEnabled+Status+Value%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BEnabled+Status+Value%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+value+for+enabled+status.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E12%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpwdEncodeToUpperCase%3C%2Fname%3E%0A++++++%3CdisplayName%3EForce+password+encoding+to+upper+case%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EForce+password+encoding+to+upper+case.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E25%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3ErethrowAllSQLExceptions%3C%2Fname%3E%0A++++++%3CdisplayName%3ERethrow+all+SQLExceptions%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EIf+this+is+not+checked%2C+SQL+statements+which+throw+SQLExceptions+with+a+0+ErrorCode+will+be+have+the+exception+caught+and+suppressed.+Check+it+to+have+exceptions+with+0+ErrorCodes+rethrown.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E17%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EchangeLogColumn%3C%2Fname%3E%0A++++++%3CdisplayName%3EChange+Log+Column+%28Sync%29%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%3D%26lt%3Bb%26gt%3BChange+Log+Column%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BThe+change+log+column+store+the+latest+change+time.+Providing+this+value+the+Sync+capabilities+are+activated.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E21%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenableEmptyString%3C%2Fname%3E%0A++++++%3CdisplayName%3EEnable+writing+empty+string%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BEnable+writing+empty+string%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSelect+to+enable+support+for+writing+an+empty+strings%2C+instead+of+a+NULL+value%2C+in+character+based+columns+defined+as+not-null+in+the+table+schema.+This+option+does+not+influence+the+way+strings+are+written+for+Oracle+based+tables.+By+default+empty+strings+are+written+as+a+NULL+value.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E16%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EallNative%3C%2Fname%3E%0A++++++%3CdisplayName%3EAll+native%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BAll+native%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSelect+to+retrieve+all+data+type+of+the+columns+in+a+native+format+from+the+database+table.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E19%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Edatabase%3C%2Fname%3E%0A++++++%3CdisplayName%3EDatabase%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BDatabase%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+database+on+the+database+server+that+contains+the+table.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E6%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C%2Fname%3E%0A++++++%3CdisplayName%3EDisabled+Status+Value%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BDisabled+Status+Value%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+value+for+disabled+status.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E11%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Column%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BPassword+Column%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+column+in+the+table+that+will+hold+the+password+values.+If+empty%2C+no+validation+on+resource+and+passwords+are+activated.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E9%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C%2Fname%3E%0A++++++%3CdisplayName%3EJDBC+Connection+URL%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BJDBC+Connection+URL%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSpecify+the+JDBC+Driver+Connection+URL.%26lt%3Bbr%26gt%3B+Oracle+template+is+jdbc%3Aoracle%3Athin%3A%40%5Bhost%5D%3A%5Bport%281521%29%5D%3A%5BDB%5D.%26lt%3Bbr%26gt%3B++MySQL+template+is+jdbc%3Amysql%3A%2F%2F%5Bhost%5D%3A%5Bport%283306%29%5D%2F%5Bdb%5D%2C+for+more+info%2C+read+the+JDBC+driver+documentation.%26lt%3Bbr%26gt%3BCould+be+empty+if+datasource+is+provided.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E15%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Ejdbc%3Ah2%3Atcp%3A%2F%2Flocalhost%3A9092%2Ftestdb%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eport%3C%2Fname%3E%0A++++++%3CdisplayName%3EPort%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BTCP+Port%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+port+number+the+database+server+is+listening+on.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E3%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C%2Fname%3E%0A++++++%3CdisplayName%3EKey+Column%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BKey+Column%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BThis+mandatory+column+value+will+be+used+as+the+unique+identifier+for+rows+in+the+table.%26lt%3Bbr%26gt%3B%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E8%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Eid%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EnativeTimestamps%3C%2Fname%3E%0A++++++%3CdisplayName%3ENative+Timestamps+%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BNative+Timestamps%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSelect+to+retrieve+Timestamp+data+type+of+the+columns+in+java.sql.Timestamp+format+from+the+database+table.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E18%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C%2Fname%3E%0A++++++%3CdisplayName%3EStatus+Column%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BStatus+Column%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+column+in+the+table+that+will+hold+the+status+values.+If+empty+enabled+and+disabled+operation+wont+be+performed.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E10%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C%2Fname%3E%0A++++++%3CdisplayName%3EUser%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BUser%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+mandatory+Database+user+with+permission+to+account+table.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E4%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Esa%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C%2Fname%3E%0A++++++%3CdisplayName%3EUser+Password%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BUser+Password%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+a+user+account+that+has+permission+to+access+accounts+table.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E5%3C%2Forder%3E%0A++++++%3Cconfidential%3Etrue%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Esa%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Equoting%3C%2Fname%3E%0A++++++%3CdisplayName%3EName+Quoting%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BName+Quoting%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BSelect+whether+database+column+names+for+this+resource+should+be+quoted%2C+and+the+quoting+characters.+By+default%2C+database+column+names+are+not+quoted+%28None%29.+For+other+selections+%28Single%2C+Double%2C+Back%2C+or+Brackets%29%2C+column+names+will+appear+between+single+quotes%2C+double+quotes%2C+back+quotes%2C+or+brackets+in+the+SQL+generated+to+access+the+database.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E1%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EcipherAlgorithm%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+cipher+algorithm+%28defaults+to+CLEARTEXT%29%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ECipher+algorithm+used+to+encode+password+before+to+store+it+onto+the+database+table.%0ASpecify+one+of+the+values+among+CLEARTEXT%2CAES%2C+MD5%2C+SHA1%2C+SHA256+or+a+custom+implementation+identified+by+its+class+name.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E24%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpwdEncodeToLowerCase%3C%2Fname%3E%0A++++++%3CdisplayName%3EForce+password+encoding+to+lower+case%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EForce+password+encoding+to+lower+case.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E26%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EcipherKey%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+cipher+key%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESpecify+key+in+case+of+reversible+algorithm.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E25%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C%2Fname%3E%0A++++++%3CdisplayName%3EDefault+Status+Value%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BDefault+Status+Value%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+value+for+status+in+case+of+status+not+specified.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E13%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C%2Fname%3E%0A++++++%3CdisplayName%3ETable%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BTable%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+table+in+the+database+that+contains+the+accounts.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E7%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Etestsync%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjndiProperties%3C%2Fname%3E%0A++++++%3CdisplayName%3EInitial+JNDI+Properties%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BInitial+JNDI+Properties%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BCould+be+empty+or+enter+the+JDBC+JNDI+Initial+context+factory%2C+context+provider+in+a+format%3A+key+%3D+value.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E23%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EretrievePassword%3C%2Fname%3E%0A++++++%3CdisplayName%3ERetrieve+password%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESpecify+if+password+must+be+retrieved+by+default.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E27%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ehost%3C%2Fname%3E%0A++++++%3CdisplayName%3EHost%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3E%26lt%3Bb%26gt%3BHost%26lt%3B%2Fb%26gt%3B%26lt%3Bbr%26gt%3BEnter+the+name+of+the+host+where+the+database+is+running.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E2%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"ONE_PHASE_CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"TWO_PHASES_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"ONE_PHASE_UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"TWO_PHASES_UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"TWO_PHASES_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"TWO_PHASES_UPDATE\"/>\n-\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capabilities=\"SEARCH\"/>\n+  \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n@@ -655,6 +655,9 @@ under the License.\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         actionsClassName=\"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\"  \n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+  <Task DTYPE=\"SyncTask\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n+        performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n         \n   <NotificationTask_recipients notificationtask_id=\"8\" address=\"recipient@prova.org\"/>\n "}]}