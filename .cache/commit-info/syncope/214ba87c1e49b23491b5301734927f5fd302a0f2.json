{"sha":"214ba87c1e49b23491b5301734927f5fd302a0f2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIxNGJhODdjMWU0OWIyMzQ5MWI1MzAxNzM0OTI3ZjVmZDMwMmEwZjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-22T16:20:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-22T16:20:11Z"},"message":"[SYNCOPE-249] core: sync extensions implemented (and test case updated)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1437022 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"274d42e3a03b2cc9208a4c384ea5a6b309b860cf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/274d42e3a03b2cc9208a4c384ea5a6b309b860cf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/214ba87c1e49b23491b5301734927f5fd302a0f2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/214ba87c1e49b23491b5301734927f5fd302a0f2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/214ba87c1e49b23491b5301734927f5fd302a0f2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/214ba87c1e49b23491b5301734927f5fd302a0f2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f287a4bb0cb6e6d7d83524fbb65a6eab2364f6b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f287a4bb0cb6e6d7d83524fbb65a6eab2364f6b6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f287a4bb0cb6e6d7d83524fbb65a6eab2364f6b6"}],"stats":{"total":598,"additions":346,"deletions":252},"files":[{"sha":"04a3413cc7b172be5895b68ef1024b96935207b7","filename":"build-tools/src/main/resources/content.ldif","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -30,6 +30,7 @@ objectClass: top\n cn: testLDAPGroup\n uniqueMember: uid=admin,ou=system\n uniqueMember: uid=syncFromLDAP,ou=People,o=isp\n+owner: uid=syncFromLDAP,ou=People,o=isp\n \n DN: uid=syncFromLDAP,ou=People,o=isp\n objectClass: organizationalPerson"},{"sha":"565ca65d7fc4c6b51470dc5bf5804271ef8de8a7","filename":"common/src/main/java/org/apache/syncope/common/to/RoleTO.java","status":"modified","additions":9,"deletions":13,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\r\n import org.codehaus.jackson.annotate.JsonIgnoreProperties;\r\n \r\n-@JsonIgnoreProperties({\"displayName\", \"empty\"})\r\n+@JsonIgnoreProperties({\"displayName\"})\r\n public class RoleTO extends AbstractAttributableTO {\r\n \r\n     private static final long serialVersionUID = -7785920258290147542L;\r\n@@ -118,23 +118,23 @@ public boolean isInheritVirtualAttributes() {\n         return inheritVirtualAttributes;\r\n     }\r\n \r\n-    public void setInheritVirtualAttributes(boolean inheritVirtualAttributes) {\r\n+    public void setInheritVirtualAttributes(final boolean inheritVirtualAttributes) {\r\n         this.inheritVirtualAttributes = inheritVirtualAttributes;\r\n     }\r\n \r\n-    public boolean addEntitlement(String entitlement) {\r\n+    public boolean addEntitlement(final String entitlement) {\r\n         return entitlements.add(entitlement);\r\n     }\r\n \r\n-    public boolean removeEntitlement(String entitlement) {\r\n+    public boolean removeEntitlement(final String entitlement) {\r\n         return entitlements.remove(entitlement);\r\n     }\r\n \r\n     public List<String> getEntitlements() {\r\n         return entitlements;\r\n     }\r\n \r\n-    public void setEntitlements(List<String> entitlements) {\r\n+    public void setEntitlements(final List<String> entitlements) {\r\n         this.entitlements.clear();\r\n         if (entitlements != null && !entitlements.isEmpty()) {\r\n             this.entitlements.addAll(entitlements);\r\n@@ -145,7 +145,7 @@ public Long getPasswordPolicy() {\n         return passwordPolicy;\r\n     }\r\n \r\n-    public void setPasswordPolicy(Long passwordPolicy) {\r\n+    public void setPasswordPolicy(final Long passwordPolicy) {\r\n         this.passwordPolicy = passwordPolicy;\r\n     }\r\n \r\n@@ -158,15 +158,15 @@ public boolean isInheritPasswordPolicy() {\n      *\r\n      * @param inheritPasswordPolicy 'true' to inherit policy, false otherwise.\r\n      */\r\n-    public void setInheritPasswordPolicy(boolean inheritPasswordPolicy) {\r\n+    public void setInheritPasswordPolicy(final boolean inheritPasswordPolicy) {\r\n         this.inheritPasswordPolicy = inheritPasswordPolicy;\r\n     }\r\n \r\n     public Long getAccountPolicy() {\r\n         return accountPolicy;\r\n     }\r\n \r\n-    public void setAccountPolicy(Long accountPolicy) {\r\n+    public void setAccountPolicy(final Long accountPolicy) {\r\n         this.accountPolicy = accountPolicy;\r\n     }\r\n \r\n@@ -179,18 +179,14 @@ public boolean isInheritAccountPolicy() {\n      *\r\n      * @param inheritAccountPolicy 'true' to inherit policy, false otherwise.\r\n      */\r\n-    public void setInheritAccountPolicy(boolean inheritAccountPolicy) {\r\n+    public void setInheritAccountPolicy(final boolean inheritAccountPolicy) {\r\n         this.inheritAccountPolicy = inheritAccountPolicy;\r\n     }\r\n \r\n     public String getDisplayName() {\r\n         return getId() + \" \" + getName();\r\n     }\r\n \r\n-    public String getEmpty() {\r\n-        return \"\";\r\n-    }\r\n-\r\n     public static long fromDisplayName(final String displayName) {\r\n         long result = 0;\r\n         if (displayName != null && !displayName.isEmpty() && displayName.indexOf(' ') != -1) {\r"},{"sha":"e5d28ea9a1ffb75398af188de9e3169a134163a4","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -261,6 +261,18 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                     }\n                     break;\n \n+                case RoleOwnerSchema:\n+                    if (attributableTO instanceof RoleTO && attribute != null && !attribute.getValue().isEmpty()) {\n+                        // using a special attribute (with schema \"\", that will be ignored) for carrying the\n+                        // RoleOwnerSchema value\n+                        attributeTO = new AttributeTO();\n+                        attributeTO.setSchema(\"\");\n+                        attributeTO.addValue(attribute.getValue().get(0).toString());\n+\n+                        ((RoleTO) attributableTO).addAttribute(attributeTO);\n+                    }\n+                    break;\n+\n                 case UserSchema:\n                 case RoleSchema:\n                     attributeTO = new AttributeTO();"},{"sha":"569989061df8821e0687b4a74519a1e6723965d5","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;"},{"sha":"1bb40ae1ce6b3ce67c9bd19929c73fd039b13fcd","filename":"core/src/main/java/org/apache/syncope/core/propagation/SyncopeConnector.java","status":"modified","additions":20,"deletions":19,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -21,7 +21,6 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.common.types.PropagationMode;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n@@ -81,12 +80,12 @@ void delete(PropagationMode propagationMode, ObjectClass objectClass,\n     /**\n      * Sync users from a connector instance.\n      *\n-     * @param objectClass ConnId's object class.\n+     * @param objectClass ConnId's object class\n      * @param token to be passed to the underlying connector\n-     * @param handler to be used to handle deltas.\n+     * @param handler to be used to handle deltas\n+     * @param options ConnId's OperationOptions\n      */\n-    void sync(ObjectClass objectClass, SyncToken token,\n-            SyncResultsHandler handler, OperationOptions options);\n+    void sync(ObjectClass objectClass, SyncToken token, SyncResultsHandler handler, OperationOptions options);\n \n     /**\n      * Read latest sync token from a connector instance.\n@@ -104,8 +103,7 @@ void sync(ObjectClass objectClass, SyncToken token,\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n-    ConnectorObject getObject(ObjectClass objectClass, Uid uid,\n-            OperationOptions options);\n+    ConnectorObject getObject(ObjectClass objectClass, Uid uid, OperationOptions options);\n \n     /**\n      * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n@@ -122,8 +120,15 @@ ConnectorObject getObject(PropagationMode propagationMode,\n             ResourceOperation operationType, ObjectClass objectClass, Uid uid,\n             OperationOptions options);\n \n-    List<ConnectorObject> search(ObjectClass objectClass, Filter filter,\n-            OperationOptions options);\n+    /**\n+     * Search for remote objects.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param filter search filter\n+     * @param options ConnId's OperationOptions\n+     * @return ConnId's connector objects matching the given filter\n+     */\n+    List<ConnectorObject> search(ObjectClass objectClass, Filter filter, OperationOptions options);\n \n     /**\n      * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n@@ -133,8 +138,7 @@ List<ConnectorObject> search(ObjectClass objectClass, Filter filter,\n      * @param handler to be used to handle deltas.\n      * @param options ConnId's OperationOptions.\n      */\n-    void getAllObjects(ObjectClass objectClass, SyncResultsHandler handler,\n-            OperationOptions options);\n+    void getAllObjects(ObjectClass objectClass, SyncResultsHandler handler, OperationOptions options);\n \n     /**\n      * Read attribute for a given connector object.\n@@ -145,8 +149,7 @@ void getAllObjects(ObjectClass objectClass, SyncResultsHandler handler,\n      * @param attributeName attribute to read\n      * @return attribute (if present)\n      */\n-    Attribute getObjectAttribute(ObjectClass objectClass, Uid uid,\n-            OperationOptions options, String attributeName);\n+    Attribute getObjectAttribute(ObjectClass objectClass, Uid uid, OperationOptions options, String attributeName);\n \n     /**\n      *\n@@ -155,8 +158,7 @@ Attribute getObjectAttribute(ObjectClass objectClass, Uid uid,\n      * @param options ConnId's OperationOptions\n      * @return attributes (if present)\n      */\n-    Set<Attribute> getObjectAttributes(ObjectClass objectClass, Uid uid,\n-            OperationOptions options);\n+    Set<Attribute> getObjectAttributes(ObjectClass objectClass, Uid uid, OperationOptions options);\n \n     /**\n      * Return resource schema names.\n@@ -183,9 +185,8 @@ Set<Attribute> getObjectAttributes(ObjectClass objectClass, Uid uid,\n      */\n     ConnInstance getActiveConnInstance();\n \n-    OperationOptions getOperationOptions(\n-            Collection<AbstractMappingItem> mapItems);\n+    OperationOptions getOperationOptions(Collection<AbstractMappingItem> mapItems);\n \n+    @Override\n     String toString();\n-\n-}\n\\ No newline at end of file\n+}"},{"sha":"9170b84d39d9999fcb5b9d976c375e991c6f3f59","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/ConnectorFacadeProxy.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -83,7 +83,7 @@ public class ConnectorFacadeProxy implements SyncopeConnector {\n     /**\n      * Active Connector instance.\n      *\n-     * @see org.apache.syncope.core.persistence.beans.ConnInstance\n+     * @see ConnInstance\n      */\n     private final ConnInstance activeConnInstance;\n \n@@ -163,7 +163,7 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#create(org.apache.syncope.common.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, java.util.Set, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n+     * @see SyncopeConnector#create(PropagationMode, ObjectClass, Set, OperationOptions, Set)\n      */\n     @Override\n     public Uid create(final PropagationMode propagationMode, final ObjectClass objectClass, final Set<Attribute> attrs,\n@@ -187,7 +187,7 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#update(org.apache.syncope.common.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, java.util.Set, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n+     * @see SyncopeConnector#update(PropagationMode, ObjectClass, Uid, Set, OperationOptions, Set)\n      */\n     @Override\n     public Uid update(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n@@ -212,7 +212,7 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#delete(org.apache.syncope.common.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n+     * @see SyncopeConnector#delete(PropagationMode, ObjectClass, Uid, OperationOptions, Set)\n      */\n     @Override\n     public void delete(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n@@ -232,7 +232,7 @@ public void delete(final PropagationMode propagationMode, final ObjectClass obje\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#sync(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.SyncToken, org.identityconnectors.framework.common.objects.SyncResultsHandler, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#sync(ObjectClass, SyncToken, SyncResultsHandler, OperationOptions)\n      */\n     @Override\n     public void sync(final ObjectClass objectClass, final SyncToken token, final SyncResultsHandler handler,\n@@ -247,7 +247,7 @@ public void sync(final ObjectClass objectClass, final SyncToken token, final Syn\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getLatestSyncToken(org.identityconnectors.framework.common.objects.ObjectClass)\n+     * @see SyncopeConnector#getLatestSyncToken(ObjectClass)\n      */\n     @Override\n     public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n@@ -264,15 +264,15 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObject(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#getObject(ObjectClass, Uid, OperationOptions)\n      */\n     @Override\n     public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n         return getObject(null, null, objectClass, uid, options);\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObject(org.apache.syncope.common.types.PropagationMode, org.apache.syncope.common.types.ResourceOperation, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#getObject(PropagationMode, ResourceOperation, ObjectClass, Uid, OperationOptions)\n      */\n     @Override\n     public ConnectorObject getObject(final PropagationMode propagationMode, final ResourceOperation operationType,\n@@ -318,7 +318,7 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#search(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.filter.Filter, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#search(ObjectClass, filter.Filter, OperationOptions)\n      */\n     @Override\n     public List<ConnectorObject> search(final ObjectClass objectClass, final Filter filter,\n@@ -343,7 +343,7 @@ public boolean handle(final ConnectorObject obj) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getAllObjects(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.SyncResultsHandler, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#getAllObjects(ObjectClass, SyncResultsHandler, OperationOptions)\n      */\n     @Override\n     public void getAllObjects(final ObjectClass objectClass, final SyncResultsHandler handler,\n@@ -371,7 +371,7 @@ public boolean handle(final ConnectorObject obj) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObjectAttribute(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions, java.lang.String)\n+     * @see SyncopeConnector#getObjectAttribute(ObjectClass, Uid, OperationOptions, String)\n      */\n     @Override\n     public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid, final OperationOptions options,\n@@ -390,7 +390,7 @@ public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObjectAttributes(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n+     * @see SyncopeConnector#getObjectAttributes(ObjectClass, Uid, OperationOptions)\n      */\n     @Override\n     public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final Uid uid,\n@@ -411,7 +411,7 @@ public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final U\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getSchema(boolean)\n+     * @see SyncopeConnector#getSchema(boolean)\n      */\n     @Override\n     public Set<String> getSchema(final boolean showall) {\n@@ -436,31 +436,31 @@ public Set<String> getSchema(final boolean showall) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#validate()\n+     * @see SyncopeConnector#validate()\n      */\n     @Override\n     public void validate() {\n         connector.validate();\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#test()\n+     * @see SyncopeConnector#test()\n      */\n     @Override\n     public void test() {\n         connector.test();\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getActiveConnInstance()\n+     * @see SyncopeConnector#getActiveConnInstance()\n      */\n     @Override\n     public ConnInstance getActiveConnInstance() {\n         return activeConnInstance;\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getOperationOptions(java.util.Collection)\n+     * @see SyncopeConnector#getOperationOptions(Collection)\n      */\n     @Override\n     public OperationOptions getOperationOptions(final Collection<AbstractMappingItem> mapItems) {\n@@ -528,12 +528,11 @@ private boolean isSpecialName(final String name) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#toString()\n+     * @see SyncopeConnector#toString()\n      */\n     @Override\n     public String toString() {\n         return \"ConnectorFacadeProxy{\"\n                 + \"connector=\" + connector + \"\\n\" + \"capabitilies=\" + activeConnInstance.getCapabilities() + '}';\n     }\n-\n }"},{"sha":"f73d3146e1987fe6d1b5abd19ad6a12663df9b5c","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":7,"deletions":47,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -28,32 +28,26 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.notification.NotificationManager;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.sync.DefaultSyncActions;\n import org.apache.syncope.core.sync.SyncResult;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.identityconnectors.framework.common.objects.Attribute;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.OperationOptionsBuilder;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n-import org.identityconnectors.framework.common.objects.filter.EqualsFilter;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -73,9 +67,6 @@ public class LDAPMembershipSyncActions extends DefaultSyncActions {\n     @Autowired\n     protected RoleDAO roleDAO;\n \n-    @Autowired\n-    protected ConnectorFactory connInstanceLoader;\n-\n     @Autowired\n     protected UserWorkflowAdapter uwfAdapter;\n \n@@ -169,8 +160,8 @@ protected List<Object> getMembAttrValues(final SyncDelta delta, final SyncopeCon\n         if (membAttr == null) {\n             final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n             oob.setAttributesToGet(getGroupMembershipAttrName());\n-            membAttr = connector.getObjectAttribute(\n-                    ObjectClass.GROUP, delta.getUid(), oob.build(), getGroupMembershipAttrName());\n+            membAttr = connector.getObjectAttribute(ObjectClass.GROUP, delta.getUid(), oob.build(),\n+                    getGroupMembershipAttrName());\n         }\n         if (membAttr != null && membAttr.getValue() != null) {\n             result = membAttr.getValue();\n@@ -221,44 +212,13 @@ protected void synchronizeMemberships(final SyncopeSyncResultHandler handler, fi\n \n         final SyncTask task = handler.getSyncTask();\n         final ExternalResource resource = task.getResource();\n-\n-        SyncopeConnector connector;\n-        try {\n-            connector = connInstanceLoader.getConnector(resource);\n-        } catch (Exception e) {\n-            final String msg = String.format(\"Connector instance bean for resource %s and connInstance %s not found\",\n-                    resource, resource.getConnector());\n-\n-            throw new JobExecutionException(msg, e);\n-        }\n+        final SyncopeConnector connector = handler.getConnector();\n \n         for (Object membValue : getMembAttrValues(delta, connector)) {\n-\n-            final List<ConnectorObject> found = connector.search(ObjectClass.ACCOUNT,\n-                    new EqualsFilter(new Name(membValue.toString())),\n-                    connector.getOperationOptions(resource.getUmapping().getItems()));\n-\n-            if (found.isEmpty()) {\n-                LOG.debug(\"No account found on {} with __NAME__ {}\", resource, membValue.toString());\n-            } else {\n-                if (found.size() > 1) {\n-                    LOG.warn(\"More than one account found on {} with __NAME__ {} - taking first only\",\n-                            resource, membValue.toString());\n-                }\n-\n-                ConnectorObject externalAccount = found.iterator().next();\n-                final List<Long> userIds = handler.findExisting(externalAccount.getUid().getUidValue(),\n-                        externalAccount, AttributableUtil.getInstance(AttributableType.USER));\n-                if (userIds.isEmpty()) {\n-                    LOG.debug(\"No matching user found for {}, aborting\", externalAccount);\n-                } else {\n-                    if (userIds.size() > 1) {\n-                        LOG.warn(\"More than one user found {} - taking first only\", userIds);\n-                    }\n-\n-                    UserMod userMod = getUserMod(userIds.iterator().next(), roleTO);\n-                    userUpdate(userMod, resource.getName());\n-                }\n+            Long userId = handler.findMatchingAttributableId(ObjectClass.ACCOUNT, membValue.toString());\n+            if (userId != null) {\n+                UserMod userMod = getUserMod(userId, roleTO);\n+                userUpdate(userMod, resource.getName());\n             }\n         }\n "},{"sha":"fa93b892b70d800c8ee9603689009d68d4142a7b","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncJob.java","status":"modified","additions":62,"deletions":2,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -20,7 +20,10 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-\n+import java.util.Map;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.syncope.common.mod.ReferenceMod;\n+import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.types.ConflictResolutionAction;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.common.types.TraceLevel;\n@@ -33,13 +36,18 @@\n import org.apache.syncope.core.persistence.beans.user.UMapping;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.quartz.AbstractTaskJob;\n+import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.sync.SyncActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.core.util.NotFoundException;\n+import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -78,6 +86,24 @@ public class SyncJob extends AbstractTaskJob {\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n+    /**\n+     * Role DAO.\n+     */\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    /**\n+     * Role DAO.\n+     */\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n+    /**\n+     * Role workflow adapter.\n+     */\n+    @Autowired\n+    private RoleWorkflowAdapter rwfAdapter;\n+\n     /**\n      * SyncJob actions.\n      */\n@@ -302,6 +328,32 @@ private void setupSecurity() {\n                 new UsernamePasswordAuthenticationToken(userDetails, \"FAKE_PASSWORD\", authorities));\n     }\n \n+    protected void setRoleOwners(final SyncopeSyncResultHandler handler)\n+            throws UnauthorizedRoleException, NotFoundException {\n+\n+        for (Map.Entry<Long, String> entry : handler.getRoleOwnerMap().entrySet()) {\n+            RoleMod roleMod = new RoleMod();\n+            roleMod.setId(entry.getKey());\n+\n+            if (StringUtils.isBlank(entry.getValue())) {\n+                roleMod.setRoleOwner(null);\n+                roleMod.setUserOwner(null);\n+            } else {\n+                Long userId = handler.findMatchingAttributableId(ObjectClass.ACCOUNT, entry.getValue());\n+                if (userId == null) {\n+                    Long roleId = handler.findMatchingAttributableId(ObjectClass.GROUP, entry.getValue());\n+                    if (roleId != null) {\n+                        roleMod.setRoleOwner(new ReferenceMod(roleId));\n+                    }\n+                } else {\n+                    roleMod.setUserOwner(new ReferenceMod(userId));\n+                }\n+            }\n+\n+            rwfAdapter.update(roleMod);\n+        }\n+    }\n+\n     @Override\n     protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         // get all entitlements to perform updates\n@@ -349,7 +401,8 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         final SyncopeSyncResultHandler handler =\n                 (SyncopeSyncResultHandler) ((DefaultListableBeanFactory) ApplicationContextProvider.\n                 getApplicationContext().getBeanFactory()).createBean(\n-                SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setConnector(connector);\n         handler.setActions(actions);\n         handler.setDryRun(dryRun);\n         handler.setResAct(resAct);\n@@ -391,6 +444,13 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         } catch (Exception e) {\n             throw new JobExecutionException(\"While syncing on connector\", e);\n         }\n+\n+        try {\n+            setRoleOwners(handler);\n+        } catch (Exception e) {\n+            LOG.error(\"While setting role owners\", e);\n+        }\n+\n         actions.afterAll(handler, results);\n \n         final String result = createReport(results, syncTask.getResource().getSyncTraceLevel(), dryRun);"},{"sha":"b821fe68358f974c3fa2377aaf3af75481b98204","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":72,"deletions":1,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -25,12 +25,14 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.AttributableCond;\n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -56,6 +58,7 @@\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n@@ -71,10 +74,13 @@\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.Name;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.identityconnectors.framework.common.objects.filter.EqualsFilter;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -112,7 +118,7 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     private RoleDAO roleDAO;\n \n     /**\n-     * User search DAO.\n+     * Search DAO.\n      */\n     @Autowired\n     private AttributableSearchDAO searchDAO;\n@@ -165,6 +171,11 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     @Autowired\n     private NotificationManager notificationManager;\n \n+    /**\n+     * Syncing connector.\n+     */\n+    private SyncopeConnector connector;\n+\n     /**\n      * SyncJob actions.\n      */\n@@ -178,6 +189,16 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n \n     private boolean dryRun;\n \n+    private Map<Long, String> roleOwnerMap = new HashMap<Long, String>();\n+\n+    public SyncopeConnector getConnector() {\n+        return connector;\n+    }\n+\n+    public void setConnector(final SyncopeConnector connector) {\n+        this.connector = connector;\n+    }\n+\n     public SyncActions getActions() {\n         return actions;\n     }\n@@ -218,6 +239,10 @@ public void setDryRun(final boolean dryRun) {\n         this.dryRun = dryRun;\n     }\n \n+    public Map<Long, String> getRoleOwnerMap() {\n+        return roleOwnerMap;\n+    }\n+\n     @Override\n     public boolean handle(final SyncDelta delta) {\n         try {\n@@ -389,6 +414,39 @@ public List<Long> findExisting(final String uid, final ConnectorObject connObj,\n                 : findByAttributableSearch(connObj, policySpec, attrUtil);\n     }\n \n+    public Long findMatchingAttributableId(final ObjectClass objectClass, final String name) {\n+        Long result = null;\n+\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(objectClass);\n+\n+        final List<ConnectorObject> found = connector.search(objectClass,\n+                new EqualsFilter(new Name(name)),\n+                connector.getOperationOptions(attrUtil.getMappingItems(syncTask.getResource())));\n+\n+        if (found.isEmpty()) {\n+            LOG.debug(\"No {} found on {} with __NAME__ {}\", objectClass, syncTask.getResource(), name);\n+        } else {\n+            if (found.size() > 1) {\n+                LOG.warn(\"More than one {} found on {} with __NAME__ {} - taking first only\",\n+                        objectClass, syncTask.getResource(), name);\n+            }\n+\n+            ConnectorObject connObj = found.iterator().next();\n+            final List<Long> subjectIds = findExisting(connObj.getUid().getUidValue(), connObj, attrUtil);\n+            if (subjectIds.isEmpty()) {\n+                LOG.debug(\"No matching {} found for {}, aborting\", attrUtil.getType(), connObj);\n+            } else {\n+                if (subjectIds.size() > 1) {\n+                    LOG.warn(\"More than one {} found {} - taking first only\", attrUtil.getType(), subjectIds);\n+                }\n+\n+                result = subjectIds.iterator().next();\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUtil, final boolean dryRun)\n             throws JobExecutionException {\n \n@@ -447,6 +505,10 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                 }\n                 if (AttributableType.ROLE == attrUtil.getType()) {\n                     WorkflowResult<Long> created = rwfAdapter.create((RoleTO) subjectTO);\n+                    AttributeTO roleOwner = subjectTO.getAttributeMap().get(\"\");\n+                    if (roleOwner != null) {\n+                        roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n+                    }\n \n                     EntitlementUtil.extendAuthContext(created.getResult());\n \n@@ -532,6 +594,15 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                         }\n                         if (AttributableType.ROLE == attrUtil.getType()) {\n                             WorkflowResult<Long> updated = rwfAdapter.update((RoleMod) mod);\n+                            String roleOwner = null;\n+                            for (AttributeMod attrMod : mod.getAttributesToBeUpdated()) {\n+                                if (\"\".equals(attrMod.getSchema())) {\n+                                    roleOwner = attrMod.getValuesToBeAdded().iterator().next();\n+                                }\n+                            }\n+                            if (roleOwner != null) {\n+                                roleOwnerMap.put(updated.getResult(), roleOwner);\n+                            }\n \n                             List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n                                     mod.getVirtualAttributesToBeRemoved(), mod.getVirtualAttributesToBeUpdated(),"},{"sha":"a45123375acef508ba16ac44957063df30a9a84a","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":145,"deletions":150,"changes":295,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/214ba87c1e49b23491b5301734927f5fd302a0f2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=214ba87c1e49b23491b5301734927f5fd302a0f2","patch":"@@ -27,8 +27,8 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.common.search.AttributableCond;\n+import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.MembershipCond;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AttributeTO;\n@@ -212,126 +212,112 @@ public void deal() {\n         }\n     }\n \n-\t@Test\n-\tpublic void sync() {\n-\t\ttry {\n-\t\t\t// -----------------------------\n-\t\t\t// Create a new user ... it should be updated applying sync policy\n-\t\t\t// -----------------------------\n-\t\t\tUserTO inUserTO = new UserTO();\n-\t\t\tinUserTO.setPassword(\"password123\");\n-\t\t\tString userName = \"test9\";\n-\t\t\tinUserTO.setUsername(userName);\n-\t\t\tinUserTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n-\t\t\tinUserTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n-\t\t\tinUserTO.addAttribute(attributeTO(\"type\", \"a type\"));\n-\t\t\tinUserTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n-\t\t\tinUserTO.addAttribute(attributeTO(\"userId\",\n-\t\t\t\t\t\"user5@syncope.apache.org\"));\n-\t\t\tinUserTO.addAttribute(attributeTO(\"email\",\n-\t\t\t\t\t\"user5@syncope.apache.org\"));\n-\t\t\tinUserTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n-\n-\t\t\tinUserTO = userService.create(inUserTO);\n-\t\t\tassertNotNull(inUserTO);\n-\t\t\t// -----------------------------\n-\n-\t\t\tint usersPre = userService.count();\n-\t\t\tassertNotNull(usersPre);\n-\n-\t\t\t// Update sync task\n-\t\t\tSyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION,\n-\t\t\t\t\tSYNC_TASK_ID);\n-\t\t\tassertNotNull(task);\n-\n-\t\t\t// add custom SyncJob actions\n-\t\t\ttask.setActionsClassName(TestSyncActions.class.getName());\n-\n-\t\t\t// add user template\n-\t\t\tUserTO template = new UserTO();\n-\t\t\ttemplate.addAttribute(attributeTO(\"type\",\n-\t\t\t\t\t\"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n-\t\t\ttemplate.addDerivedAttribute(attributeTO(\"cn\", null));\n-\t\t\ttemplate.addResource(\"resource-testdb\");\n-\n-\t\t\tMembershipTO membershipTO = new MembershipTO();\n-\t\t\tmembershipTO.setRoleId(8L);\n-\t\t\tmembershipTO.addAttribute(attributeTO(\"subscriptionDate\",\n-\t\t\t\t\t\"'2009-08-18T16:33:12.203+0200'\"));\n-\t\t\ttemplate.addMembership(membershipTO);\n-\n-\t\t\ttask.setUserTemplate(template);\n-\n-\t\t\tSyncTaskTO actual = taskService.update(task.getId(), task);\n-\t\t\tassertNotNull(actual);\n-\t\t\tassertEquals(task.getId(), actual.getId());\n-\t\t\tassertEquals(TestSyncActions.class.getName(),\n-\t\t\t\t\tactual.getActionsClassName());\n-\n-\t\t\texecSyncTask(SYNC_TASK_ID, 50, false);\n-\n-\t\t\t// after execution of the sync task the user data should be synced\n-\t\t\t// from\n-\t\t\t// csv datasource and processed by user template\n-\t\t\tUserTO userTO = userService.read(inUserTO.getId());\n-\t\t\tassertNotNull(userTO);\n-\t\t\tassertEquals(\"test9\", userTO.getUsername());\n-\t\t\tassertEquals(\n-\t\t\t\t\tActivitiDetector.isActivitiEnabledForUsers() ? \"active\"\n-\t\t\t\t\t\t\t: \"created\", userTO.getStatus());\n-\t\t\tassertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap()\n-\t\t\t\t\t.get(\"email\").getValues().get(0));\n-\t\t\tassertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap()\n-\t\t\t\t\t.get(\"userId\").getValues().get(0));\n-\t\t\tassertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\")\n-\t\t\t\t\t.getValues().get(0)) <= 10);\n-\n-\t\t\t// check for user template\n-\t\t\tuserTO = userService.read(\"test7\");\n-\t\t\tassertNotNull(userTO);\n-\t\t\tassertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\")\n-\t\t\t\t\t.getValues().get(0));\n-\t\t\tassertEquals(2, userTO.getResources().size());\n-\t\t\tassertTrue(userTO.getResources().contains(\"resource-testdb\"));\n-\t\t\tassertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n-\t\t\tassertEquals(1, userTO.getMemberships().size());\n-\t\t\tassertTrue(userTO.getMemberships().get(0).getAttributeMap()\n-\t\t\t\t\t.containsKey(\"subscriptionDate\"));\n-\n-\t\t\tuserTO = userService.read(\"test8\");\n-\t\t\tassertNotNull(userTO);\n-\t\t\tassertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\")\n-\t\t\t\t\t.getValues().get(0));\n-\n-\t\t\t// check for sync results\n-\t\t\tint usersPost = userService.count();\n-\t\t\tassertNotNull(usersPost);\n-\t\t\tassertEquals(usersPre + 9, usersPost);\n-\n-\t\t\t// Check for issue 215:\n-\t\t\t// * expected disabled user test1\n-\t\t\t// * expected enabled user test2\n-\n-\t\t\tuserTO = userService.read(\"test1\");\n-\t\t\tassertNotNull(userTO);\n-\t\t\tassertEquals(\"suspended\", userTO.getStatus());\n-\n-\t\t\tuserTO = userService.read(\"test3\");\n-\t\t\tassertNotNull(userTO);\n-\t\t\tassertEquals(\"active\", userTO.getStatus());\n-\n-\t\t} finally {\n-\t\t\t// remove initial and synchronized users to make test re-runnable\n-\t\t\tfor (int i = 0; i < 10; i++) {\n-\t\t\t\tString cUserName = \"test\" + i;\n-\t\t\t\tUserTO cUserTO = userService.read(cUserName);\n-\t\t\t\tuserService.delete(cUserTO.getId());\n-\t\t\t}\n-\t\t}\n-\t}\n+    @Test\n+    public void sync() {\n+        try {\n+            // -----------------------------\n+            // Create a new user ... it should be updated applying sync policy\n+            // -----------------------------\n+            UserTO inUserTO = new UserTO();\n+            inUserTO.setPassword(\"password123\");\n+            String userName = \"test9\";\n+            inUserTO.setUsername(userName);\n+            inUserTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n+            inUserTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n+            inUserTO.addAttribute(attributeTO(\"type\", \"a type\"));\n+            inUserTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n+            inUserTO.addAttribute(attributeTO(\"userId\", \"user5@syncope.apache.org\"));\n+            inUserTO.addAttribute(attributeTO(\"email\", \"user5@syncope.apache.org\"));\n+            inUserTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+\n+            inUserTO = userService.create(inUserTO);\n+            assertNotNull(inUserTO);\n+            // -----------------------------\n+\n+            int usersPre = userService.count();\n+            assertNotNull(usersPre);\n+\n+            // Update sync task\n+            SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, SYNC_TASK_ID);\n+            assertNotNull(task);\n+\n+            // add custom SyncJob actions\n+            task.setActionsClassName(TestSyncActions.class.getName());\n+\n+            // add user template\n+            UserTO template = new UserTO();\n+            template.addAttribute(attributeTO(\"type\", \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n+            template.addDerivedAttribute(attributeTO(\"cn\", null));\n+            template.addResource(\"resource-testdb\");\n+\n+            MembershipTO membershipTO = new MembershipTO();\n+            membershipTO.setRoleId(8L);\n+            membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n+            template.addMembership(membershipTO);\n+\n+            task.setUserTemplate(template);\n+\n+            SyncTaskTO actual = taskService.update(task.getId(), task);\n+            assertNotNull(actual);\n+            assertEquals(task.getId(), actual.getId());\n+            assertEquals(TestSyncActions.class.getName(), actual.getActionsClassName());\n+\n+            execSyncTask(SYNC_TASK_ID, 50, false);\n+\n+            // after execution of the sync task the user data should be synced\n+            // from\n+            // csv datasource and processed by user template\n+            UserTO userTO = userService.read(inUserTO.getId());\n+            assertNotNull(userTO);\n+            assertEquals(\"test9\", userTO.getUsername());\n+            assertEquals(ActivitiDetector.isActivitiEnabledForUsers() ? \"active\"\n+                    : \"created\", userTO.getStatus());\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"email\").getValues().get(0));\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n+            assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);\n+\n+            // check for user template\n+            userTO = userService.read(\"test7\");\n+            assertNotNull(userTO);\n+            assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+            assertEquals(2, userTO.getResources().size());\n+            assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n+            assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n+            assertEquals(1, userTO.getMemberships().size());\n+            assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n+\n+            userTO = userService.read(\"test8\");\n+            assertNotNull(userTO);\n+            assertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+\n+            // check for sync results\n+            int usersPost = userService.count();\n+            assertNotNull(usersPost);\n+            assertEquals(usersPre + 9, usersPost);\n+\n+            // Check for issue 215:\n+            // * expected disabled user test1\n+            // * expected enabled user test2\n+\n+            userTO = userService.read(\"test1\");\n+            assertNotNull(userTO);\n+            assertEquals(\"suspended\", userTO.getStatus());\n+\n+            userTO = userService.read(\"test3\");\n+            assertNotNull(userTO);\n+            assertEquals(\"active\", userTO.getStatus());\n+        } finally {\n+            // remove initial and synchronized users to make test re-runnable\n+            for (int i = 0; i < 10; i++) {\n+                String cUserName = \"test\" + i;\n+                UserTO cUserTO = userService.read(cUserName);\n+                userService.delete(cUserTO.getId());\n+            }\n+        }\n+    }\n \n     @Test\n-    public void reconcileUsers() {\n+    public void reconcileFromDB() {\n         // Update sync task\n         SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 7L);\n         assertNotNull(task);\n@@ -363,7 +349,7 @@ public void reconcileUsers() {\n     }\n \n     @Test\n-    public void reconcileRoles() {\n+    public void reconcileFromLDAP() {\n         // Update sync task\n         SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n         assertNotNull(task);\n@@ -396,11 +382,20 @@ public void reconcileRoles() {\n         assertNotNull(matchingRoles);\n         assertEquals(1, matchingRoles.size());\n \n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributeCond.Type.EQ);\n+        usernameLeafCond.setSchema(\"username\");\n+        usernameLeafCond.setExpression(\"syncFromLDAP\");\n+        final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n+        assertNotNull(matchingUsers);\n+        assertEquals(1, matchingUsers.size());\n+\n         final RoleTO roleTO = matchingRoles.iterator().next();\n         assertNotNull(roleTO);\n         assertEquals(\"testLDAPGroup\", roleTO.getName());\n         assertEquals(8L, roleTO.getParent());\n         assertEquals(\"true\", roleTO.getAttributeMap().get(\"show\").getValues().get(0));\n+        assertEquals(matchingUsers.iterator().next().getId(), (long) roleTO.getUserOwner());\n+        assertNull(roleTO.getRoleOwner());\n \n         // 3. verify that LDAP group membership is propagated as Syncope role membership\n         final MembershipCond membershipCond = new MembershipCond();\n@@ -485,13 +480,13 @@ public void issueSYNCOPE86() {\n             assertNotNull(taskTO);\n             assertEquals(1, taskTO.getExecutions().size());\n         } finally {\n-        \t// Remove execution to make test re-runnable\n-        \tTaskExecTO taskExecTO = taskService.deleteExecution(taskTO.getExecutions().get(0).getId());\n-        \tassertNotNull(taskExecTO);\n+            // Remove execution to make test re-runnable\n+            TaskExecTO taskExecTO = taskService.deleteExecution(taskTO.getExecutions().get(0).getId());\n+            assertNotNull(taskExecTO);\n         }\n     }\n \n-\tprivate NotificationTaskTO findNotificationTaskBySender(String sender) {\t\t\n+    private NotificationTaskTO findNotificationTaskBySender(String sender) {\n         List<NotificationTaskTO> tasks = taskService.list(TaskType.NOTIFICATION);\n         assertNotNull(tasks);\n         assertFalse(tasks.isEmpty());\n@@ -502,12 +497,12 @@ private NotificationTaskTO findNotificationTaskBySender(String sender) {\n                 taskTO = task;\n             }\n         }\n-\t\treturn taskTO;\n-\t}\n+        return taskTO;\n+    }\n \n-\tprivate String createNotificationTask() {\n-\t\t// 1. Create notification\n-\t\tNotificationTO notification = new NotificationTO();\n+    private String createNotificationTask() {\n+        // 1. Create notification\n+        NotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n         notification.addEvent(\"create\");\n \n@@ -540,8 +535,8 @@ private String createNotificationTask() {\n \n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n-\t\treturn sender;\n-\t}\n+        return sender;\n+    }\n \n     @Test\n     public void issueSYNCOPE68() {\n@@ -559,8 +554,8 @@ public void issueSYNCOPE68() {\n         userTO.addAttribute(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n         userTO.addAttribute(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n \n-    \tuserTO.addResource(\"ws-target-resource-nopropagation2\");\n-    \tuserTO.addResource(\"ws-target-resource-nopropagation4\");\n+        userTO.addResource(\"ws-target-resource-nopropagation2\");\n+        userTO.addResource(\"ws-target-resource-nopropagation4\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -611,15 +606,15 @@ public void issueSYNCOPE68() {\n             assertEquals(2, userTO.getMemberships().size());\n             assertEquals(4, userTO.getResources().size());\n         } finally {\n-        \tUserTO dUserTO = userService.delete(userTO.getId());\n-        \tassertNotNull(dUserTO);\n+            UserTO dUserTO = userService.delete(userTO.getId());\n+            assertNotNull(dUserTO);\n         }\n-    \tSystem.out.println(\"After\");\n+        System.out.println(\"After\");\n         List<PropagationTaskTO> tasksA = taskService.list(TaskType.PROPAGATION);\n         for (PropagationTaskTO task : tasksA) {\n-        \tSystem.out.println(task.getId());\n-        \tSystem.out.println(task.getAccountId());\n-        \tSystem.out.println(task.getOldAccountId());\n+            System.out.println(task.getId());\n+            System.out.println(task.getAccountId());\n+            System.out.println(task.getOldAccountId());\n         }\n     }\n \n@@ -712,9 +707,9 @@ private TaskExecTO execSyncTask(final Long taskId, final int maxWaitSeconds,\n     @Test\n     public void issueSYNCOPE272() {\n \n-    \ttry {\n-        \t//Create user with testdb resource\n-        \tUserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope272@syncope.apache.org\");\n+        try {\n+            //Create user with testdb resource\n+            UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope272@syncope.apache.org\");\n             userTO.addResource(\"resource-testdb\");\n \n             userTO = userService.create(userTO);\n@@ -756,13 +751,13 @@ public void issueSYNCOPE272() {\n             userTO = userService.read(userTO.getUsername());\n             assertNotNull(userTO);\n             assertNotNull(userTO.getAttributeMap().get(\"firstname\").getValues().get(0));\n-    \t} finally {\n-\t\t\t// remove initial and synchronized users to make test re-runnable\n-\t\t\tfor (int i = 0; i < 10; i++) {\n-\t\t\t\tString cUserName = \"test\" + i;\n-\t\t\t\tUserTO cUserTO = userService.read(cUserName);\n-\t\t\t\tuserService.delete(cUserTO.getId());\n-\t\t\t}\n-    \t}\n+        } finally {\n+            // remove initial and synchronized users to make test re-runnable\n+            for (int i = 0; i < 10; i++) {\n+                String cUserName = \"test\" + i;\n+                UserTO cUserTO = userService.read(cUserName);\n+                userService.delete(cUserTO.getId());\n+            }\n+        }\n     }\n }\n\\ No newline at end of file"}]}