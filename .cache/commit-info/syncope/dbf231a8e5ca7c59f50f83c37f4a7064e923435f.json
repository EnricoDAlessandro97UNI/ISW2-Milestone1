{"sha":"dbf231a8e5ca7c59f50f83c37f4a7064e923435f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiZjIzMWE4ZTVjYTdjNTlmNTBmODNjMzdmNGE3MDY0ZTkyMzQzNWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-13T15:08:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-13T15:08:55Z"},"message":"Reviewing docs","tree":{"sha":"6d57bd8355c35cfaf93c9ca700a8fabd165af3ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6d57bd8355c35cfaf93c9ca700a8fabd165af3ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dbf231a8e5ca7c59f50f83c37f4a7064e923435f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbf231a8e5ca7c59f50f83c37f4a7064e923435f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbf231a8e5ca7c59f50f83c37f4a7064e923435f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbf231a8e5ca7c59f50f83c37f4a7064e923435f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e38b4c63baee4ce383f4009e3573639910d147dd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e38b4c63baee4ce383f4009e3573639910d147dd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e38b4c63baee4ce383f4009e3573639910d147dd"}],"stats":{"total":131,"additions":63,"deletions":68},"files":[{"sha":"146542bf9672e93eaea74cbcf11722b480d98fc7","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/customization.adoc","status":"modified","additions":63,"deletions":68,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbf231a8e5ca7c59f50f83c37f4a7064e923435f/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbf231a8e5ca7c59f50f83c37f4a7064e923435f/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc?ref=dbf231a8e5ca7c59f50f83c37f4a7064e923435f","patch":"@@ -460,29 +460,34 @@ as\n and modify the JSON files under the new directory\n ====\n \n+[[customization-enduser-form]]\n ===== Form customization\n \n-User self create/edit form could be customized in order to:\n+The <<enduser-application>> allows to customize the form in order to:\n \n-* Hide/show some attributes\n-* Deny/allow attribute write\n+* hide / show attributes\n+* set attributes read-only for users\n+* provide default value(s)\n \n-Under the `enduser/src/main/resources` directory you can find `customForm.json` file.\n-This specifies the rules about form customization, in particular it allows to customize `PLAIN`, `DERIVED` and `VIRTUAL`\n-attributes forms.\n+Under the `enduser/src/main/resources` directory, the `customForm.json` file is available, allowing to configure form\n+customization.\n \n-[TIP]\n+[NOTE]\n+.Hot deploy\n ====\n-The file provided with the archetype contains an empty json: `{}`.\n-If such file is deleted or contains empty or not parseable json, customization will be simply ignored and all attributes\n-will be shown.\n+The `customForm.json` could be edited and reloaded without the need of re-starting the Java EE container.\n ====\n \n-Here is an example:\n+[TIP]\n+The `customForm.json` default content is just an empty object `{}`: if such file is missing, empty or not valid,\n+form customization will be simply disabled and all attributes will be shown.\n \n-```\n+.Sample form customization\n+====\n+[source,json]\n+----\n {\n-  \"PLAIN\": \n+  \"PLAIN\":\n           {\n             \"show\": true,\n             \"attributes\": {\n@@ -521,7 +526,7 @@ Here is an example:\n           {\n             \"show\": false\n           },\n-  \"VIRTUAL\": \n+  \"VIRTUAL\":\n           {\n             \"show\": true,\n             \"attributes\": {\n@@ -532,28 +537,50 @@ Here is an example:\n             }\n           }\n }\n-```\n-As you can see the file has two main levels:\n+----\n+====\n+\n+The `customForm.json` file has two main levels:\n \n-* Schema type: `PLAIN`, `DERIVED`, `VIRTUAL`.\n-* Attributes: list of attributes (by schema type) to be shown in the form.\n+. Schema type, e.g. `PLAIN`, `DERIVED`, `VIRTUAL`;\n+. Attributes: list of attributes (by schema type) to be shown on the form.\n \n+[discrete]\n ====== Schema type\n \n-The schema type level allows to define customization of the three sub-forms available in the wizard.\n-An user can specify one or each of the three sections in order to customize only what is really needed.\n-Though enable/disable of schema forms can be configured also from the `app.js` file of the enduser, form customization\n-json provides an attribute `show` to hide/show attributes input fields.\n-If `show` is set to `false` info contained into `attributes` will be ignored and nothing is displayed in the form section.\n+The schema type level allows to define customization of the three sub-forms available in the Enduser Application's form.\n+\n+Only one, two or all three sections can be specified, in order to customize only what is really needed.\n+\n+Moreover, a global boolean field `show` is available, to indicate that the whole sub-form should be shown or hidden.\n+When not specified, `show` is treated as `true`.\n \n+[discrete]\n ====== Attributes\n \n-Attributes level contains a map of attributes to show.\n+The attributes level contains a map of attributes to show.\n+\n+Each attribute has:\n+\n+* a name, e.g. the name of the <<schema,Schema>> from which the attribute is generated\n+* a body, that specifies if the attribute should be readonly, and possibly its default values\n+\n+.Form attribute specification\n+====\n+[source,json]\n+----\n+              \"firstname\": {\n+                \"readonly\": true,\n+                \"defaultValues\": [\"defaultFirstname1\", \"defaultFirstname2\"]\n+              },\n+----\n+Here, `firstname` is readonly and has two default values `defaultFirstname1` and `defaultFirstname2`.\n+====\n \n [TIP]\n ====\n-Attributes map is meant to be populated, i.e. empty `attributes` field means \"do not filter at all and show all attributes\".\n-For example:\n+An empty `attributes` field translates to skip filtering and show all attributes; for example:\n+\n ```\n {\n   \"PLAIN\": \n@@ -563,57 +590,25 @@ For example:\n           }\n }\n ```\n-shows all attributes.\n-If you want to hide all attributes please use `show` field: `show: false`.\n-====\n-\n-As you can see from the sample json each attribute has:\n-\n-* A name: the name of schema from which the attribute has been generated.\n-* A body: specifies if attribute should be readonly and its default values.\n-\n-Here is an example of attribute specification:\n+shows all `PLAIN` attributes.\n \n-```\n-\"firstname\": {\n-                \"readonly\": true,\n-                \"defaultValues\": [\"defaultFirstname\",\"defaultFirstname2\"]\n-              }\n-```\n-In the example `firstname` is readonly and has two default values defined by a (comma separated) array of strings. \n-Default values section can be omitted if there are not default values to assign to that attribute.\n+If all attributes are to be hidden, please set `\"show\": false`, instead.\n+====\n \n-[CAUTION]\n+[NOTE]\n ====\n-There are some clarifications to be made about form customization:\n-\n-* Default value of `show` (about schema sections) is `true`, i.e. if not specified the section is visible.\n-* `readonly` field must not be confused with schema `readonly` information. In form customization `readonly` \n-means a front-end readonly, i.e. the attribute is not modifiable from the enduser, but it can be fully accessible \n-from the administration console. \n-It does not provide info about the schema, but about the specific attribute of the USER.\n-* If `readonly` is not specified it is considered `false` by default.\n-* `defaultValues` is an array of strings; this means that also date values should be specified as strings, in particular\n-in dates must be provided into timestamp format in milliseconds (this behavior will be improved further).\n-* `defaultValues` (obviously) do not averride populated fields, an attribute is filled with default values \n-only if it is empty (in create and update).\n+The `readonly` field should not be confused with the read-only flag available for <<plain,Plain>> and\n+<<virtual,Virtual>> schema. +\n+Within Enduser form customization, `readonly` prevenst the user's browser to modify the value of a given attribute.\n ====\n \n-====== Hot deploy\n-\n-Form customization supports \"hot deploy\" feature. This means that `customForm.json` could be edited and reloaded \n-without stopping and re-starting the application server.\n-Obviously to see \"hot\" modifications to the form you must refresh the page of the browser.\n-\n [TIP]\n ====\n-When running Syncope into embedded mode you should edit `fit/enduser-reference/target/test-classes/customForm.json`\n-file.\n-\n-While running, instead, Syncope in a real environment you should edit the file under `conf.directory`. Please refer to <<deployment-directories>> section. \n+`defaultValues` is a string array: this means, in particular, that date values should be specified as strings\n+(timestamps). +\n+Moreover, `defaultValues` do not overwrite any existing value.\n ====\n \n-\n [[customization-extensions]]\n ==== Extensions\n "}]}