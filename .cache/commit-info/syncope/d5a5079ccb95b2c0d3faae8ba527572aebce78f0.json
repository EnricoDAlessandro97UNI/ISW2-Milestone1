{"sha":"d5a5079ccb95b2c0d3faae8ba527572aebce78f0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ1YTUwNzljY2I5NWIyYzBkM2ZhYWU4YmE1Mjc1NzJhZWJjZTc4ZjA=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-13T16:30:58Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-13T16:30:58Z"},"message":"Some trivial fixes","tree":{"sha":"259f3f1bf2fd1873f2bec5affcba900166b29c10","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/259f3f1bf2fd1873f2bec5affcba900166b29c10"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d5a5079ccb95b2c0d3faae8ba527572aebce78f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5a5079ccb95b2c0d3faae8ba527572aebce78f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5a5079ccb95b2c0d3faae8ba527572aebce78f0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5a5079ccb95b2c0d3faae8ba527572aebce78f0/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"862835641a986318db2a5c7c6ce1ceccdb9d1296","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/862835641a986318db2a5c7c6ce1ceccdb9d1296","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/862835641a986318db2a5c7c6ce1ceccdb9d1296"}],"stats":{"total":6,"additions":3,"deletions":3},"files":[{"sha":"c44ad36fc0a849b903957a47c3c0a0d7db1dd32a","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5a5079ccb95b2c0d3faae8ba527572aebce78f0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5a5079ccb95b2c0d3faae8ba527572aebce78f0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=d5a5079ccb95b2c0d3faae8ba527572aebce78f0","patch":"@@ -169,7 +169,7 @@ public Pair<User, Boolean> authenticate(final Authentication authentication) {\n                 if (users.size() == 1) {\n                     user = users.get(0);\n                 } else {\n-                    LOG.warn(\"Value {} provided for {} does not uniquely identifies an user\",\n+                    LOG.warn(\"Value {} provided for {} does not uniquely identify a user\",\n                             authentication.getName(), authAttrValues.get(i));\n                 }\n             }"},{"sha":"44202d1e2b99aff13e04908e6020dd72a75538ff","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationFilter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5a5079ccb95b2c0d3faae8ba527572aebce78f0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5a5079ccb95b2c0d3faae8ba527572aebce78f0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java?ref=d5a5079ccb95b2c0d3faae8ba527572aebce78f0","patch":"@@ -53,7 +53,7 @@ public class JWTAuthenticationFilter extends OncePerRequestFilter {\n     private SyncopeAuthenticationDetailsSource authenticationDetailsSource;\n \n     @Autowired\n-    private JwsSignatureVerifier jwsSignatureCerifier;\n+    private JwsSignatureVerifier jwsSignatureVerifier;\n \n     public void setAuthenticationEntryPoint(final AuthenticationEntryPoint authenticationEntryPoint) {\n         this.authenticationEntryPoint = authenticationEntryPoint;\n@@ -91,7 +91,7 @@ protected void doFilterInternal(\n \n         JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(stringToken);\n         try {\n-            if (!consumer.verifySignatureWith(jwsSignatureCerifier)) {\n+            if (!consumer.verifySignatureWith(jwsSignatureVerifier)) {\n                 throw new BadCredentialsException(\"Invalid signature found in JWT\");\n             }\n "}]}