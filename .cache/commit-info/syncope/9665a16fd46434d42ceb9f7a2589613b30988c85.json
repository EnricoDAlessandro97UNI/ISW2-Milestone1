{"sha":"9665a16fd46434d42ceb9f7a2589613b30988c85","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2NjVhMTZmZDQ2NDM0ZDQyY2ViOWY3YTI1ODk2MTNiMzA5ODhjODU=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:24:44Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:24:44Z"},"message":"sonar: fix unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332759 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"76353acb7925da28e0a37e28f2d4f7f869ec7e7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/76353acb7925da28e0a37e28f2d4f7f869ec7e7f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9665a16fd46434d42ceb9f7a2589613b30988c85","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9665a16fd46434d42ceb9f7a2589613b30988c85","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9665a16fd46434d42ceb9f7a2589613b30988c85","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9665a16fd46434d42ceb9f7a2589613b30988c85/comments","author":null,"committer":null,"parents":[{"sha":"cf44bfec27743ceda83123e41cf14f38a88bd76d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf44bfec27743ceda83123e41cf14f38a88bd76d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cf44bfec27743ceda83123e41cf14f38a88bd76d"}],"stats":{"total":8,"additions":6,"deletions":2},"files":[{"sha":"c0319f9d44cce28a556b2002468d4604099f4b8f","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RAttrValue.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9665a16fd46434d42ceb9f7a2589613b30988c85/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9665a16fd46434d42ceb9f7a2589613b30988c85/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrValue.java?ref=9665a16fd46434d42ceb9f7a2589613b30988c85","patch":"@@ -33,7 +33,6 @@ public class RAttrValue extends AbstractAttrValue {\n \n     @Id\n     private Long id;\n-\n     @ManyToOne\n     @NotNull\n     private RAttr attribute;\n@@ -50,6 +49,9 @@ public <T extends AbstractAttr> T getAttribute() {\n \n     @Override\n     public <T extends AbstractAttr> void setAttribute(T attribute) {\n+        if (!(attribute instanceof RAttr)) {\n+            throw new ClassCastException(\"expected type RAttr, found: \" + attribute.getClass().getName());\n+        }\n         this.attribute = (RAttr) attribute;\n     }\n }"},{"sha":"214b518fe94e91fa53f0b81a0c4c3065685ea84f","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UAttrValue.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9665a16fd46434d42ceb9f7a2589613b30988c85/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9665a16fd46434d42ceb9f7a2589613b30988c85/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrValue.java?ref=9665a16fd46434d42ceb9f7a2589613b30988c85","patch":"@@ -33,7 +33,6 @@ public class UAttrValue extends AbstractAttrValue {\n \n     @Id\n     private Long id;\n-\n     @ManyToOne\n     @NotNull\n     private UAttr attribute;\n@@ -50,6 +49,9 @@ public <T extends AbstractAttr> T getAttribute() {\n \n     @Override\n     public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof UAttr)) {\n+            throw new ClassCastException(\"expected type UAttr, found: \" + attribute.getClass().getName());\n+        }\n         this.attribute = (UAttr) attribute;\n     }\n }"}]}