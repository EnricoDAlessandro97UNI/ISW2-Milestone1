{"sha":"e76c59da537ba66f29bea9759e3488c9a7a0e936","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3NmM1OWRhNTM3YmE2NmYyOWJlYTk3NTllMzQ4OGM5YTdhMGU5MzY=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-06-23T15:20:34Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-06-23T15:21:10Z"},"message":"[SYNCOPE-1116] Reference LDAPNestedRealmPropagationActions and relative IT tests","tree":{"sha":"17d7c6f1769d636d5836f4dc37cb0ecec680ed6c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/17d7c6f1769d636d5836f4dc37cb0ecec680ed6c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e76c59da537ba66f29bea9759e3488c9a7a0e936","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e76c59da537ba66f29bea9759e3488c9a7a0e936","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e76c59da537ba66f29bea9759e3488c9a7a0e936","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e76c59da537ba66f29bea9759e3488c9a7a0e936/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3b88f683089162b62fe7b190be177e79e35944ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b88f683089162b62fe7b190be177e79e35944ea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3b88f683089162b62fe7b190be177e79e35944ea"}],"stats":{"total":118,"additions":113,"deletions":5},"files":[{"sha":"9160d3d3f7f464e182692e8d357ed30b74443a6e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -293,13 +293,15 @@ public void updateRemoveOrgUnit() {\n         ExternalResource resource = resourceDAO.find(\"resource-ldap-orgunit\");\n         assertNotNull(resource);\n         assertNotNull(resource.getOrgUnit());\n+        assertTrue(resource.getPropagationActionsClassNames().size() == 1);\n \n         String orgUnitKey = resource.getOrgUnit().getKey();\n         assertNotNull(entityManager().find(JPAOrgUnit.class, orgUnitKey));\n \n         resource.getOrgUnit().setResource(null);\n         resource.setOrgUnit(null);\n-\n+        resource.getPropagationActionsClassNames().clear();\n+        \n         resourceDAO.save(resource);\n         resourceDAO.flush();\n "},{"sha":"820fbcc6ba9730fe51a58cd10f2e073c77c7411f","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -753,6 +753,10 @@ under the License.\n                     jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"entryUUID\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"o=isp\"]}]'/>\n   <OrgUnit id=\"599a59cf-9a23-4447-9a59-cf9a2334473a\" connObjectLink=\"'ou=' + name + ',o=isp'\"\n            extAttrName=\"ou\" objectClass=\"organizationalUnit\" resource_id=\"resource-ldap-orgunit\"/>\n+\n+  <ExternalResource_PropActions resource_id=\"resource-ldap-orgunit\"\n+                                actionClassName=\"org.apache.syncope.core.provisioning.java.propagation.LDAPNestedRealmPropagationActions\"/>\n+  \n   <ExternalResource id=\"ws-target-resource-nopropagation\" connector_id=\"fcf9f2b0-f7d6-42c9-84a6-61b28255a42b\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\""},{"sha":"73ff1b61e17bce44537a25eb24a89f5f21de95b7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPNestedRealmPropagationActions.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPNestedRealmPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPNestedRealmPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPNestedRealmPropagationActions.java?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.propagation;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n+import org.apache.syncope.core.persistence.api.entity.Realm;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeUtil;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.Name;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class LDAPNestedRealmPropagationActions extends DefaultPropagationActions {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(LDAPNestedRealmPropagationActions.class);\n+\n+    @Autowired\n+    private RealmDAO realmDAO;\n+\n+    @Override\n+    public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n+        super.before(task, beforeObj);\n+        if (task.getAnyType() == null && task.getAnyTypeKind() == null && task.getResource().getOrgUnit() != null) {\n+            // search realm involved\n+            Realm realm = realmDAO.find(task.getEntityKey());\n+            Name objectLinkAttr = AttributeUtil.getNameFromAttributes(task.getAttributes());\n+            String oldObjectLink = objectLinkAttr.getNameValue();\n+            String extAttrName = task.getResource().getOrgUnit().getExtAttrName();\n+\n+            String[] fullPathSplitted = realm == null ? null : StringUtils.split(realm.getFullPath(), \"/\");\n+            if (fullPathSplitted != null\n+                    && fullPathSplitted.length > 1\n+                    && StringUtils.isNotBlank(oldObjectLink)\n+                    && StringUtils.isNotBlank(extAttrName)) {\n+                // if realm depth is greater than 1 adapt Object Link accordingly\n+                LOG.debug(\"{} has depth greater than 1, adapting Object Link.\", task.getConnObjectKey(),\n+                        fullPathSplitted);\n+                StringBuilder newOlPrefix = new StringBuilder();\n+\n+                for (int i = fullPathSplitted.length - 1; i >= 0; i--) {\n+                    newOlPrefix.append(extAttrName).append(\"=\").append(fullPathSplitted[i]).append(\",\");\n+                }\n+\n+                String[] olSplitted = oldObjectLink.split(extAttrName + \"=\" + \"[a-zA-Z0-9]*,\");\n+\n+                if (olSplitted.length < 2) {\n+                    LOG.error(\"Unable to generate new object link starting from {}\", oldObjectLink);\n+                } else {\n+                    // change Object Link name attribute\n+                    Set<Attribute> attributes = new HashSet<>(task.getAttributes());\n+                    attributes.remove(objectLinkAttr);\n+                    attributes.add(new Name(newOlPrefix.append(olSplitted[1]).toString()));\n+                    task.setAttributes(attributes);\n+                }\n+            }\n+\n+        } else {\n+            LOG.debug(\"Object to propagte is not a Realm, nothing to do.\");\n+        }\n+    }\n+\n+}"},{"sha":"827499a787002b17cd32d08a677aadba26f60532","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -56,6 +56,7 @@\n import org.apache.syncope.core.provisioning.java.data.DefaultMappingItemTransformer;\n import org.apache.syncope.core.provisioning.java.propagation.DBPasswordPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions;\n+import org.apache.syncope.core.provisioning.java.propagation.LDAPNestedRealmPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPPasswordPropagationActions;\n import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n import org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions;\n@@ -114,6 +115,7 @@ public class ITImplementationLookup implements ImplementationLookup {\n             classNames.add(LDAPMembershipPropagationActions.class.getName());\n             classNames.add(LDAPPasswordPropagationActions.class.getName());\n             classNames.add(DBPasswordPropagationActions.class.getName());\n+            classNames.add(LDAPNestedRealmPropagationActions.class.getName());\n             put(Type.PROPAGATION_ACTIONS, classNames);\n \n             classNames = new HashSet<>();"},{"sha":"0403dfe8fe03c5fb3141130f5d68349168f3312d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -295,7 +295,7 @@ public void orgUnit() {\n         // 2. check\n         assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=odd,o=isp\"));\n         assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=even,o=isp\"));\n-        assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=two,o=isp\"));\n+        assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=two,ou=even,o=isp\"));\n     }\n \n     @Test"},{"sha":"aa096a6aa28f560d14bede9f33af8ec9b61b81f0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RealmITCase.java","status":"modified","additions":19,"deletions":3,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e76c59da537ba66f29bea9759e3488c9a7a0e936/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java?ref=e76c59da537ba66f29bea9759e3488c9a7a0e936","patch":"@@ -203,25 +203,41 @@ public void propagate() {\n         RealmTO realm = new RealmTO();\n         realm.setName(\"test\");\n         realm.getResources().add(RESOURCE_NAME_LDAP_ORGUNIT);\n+        RealmTO childRealm = new RealmTO();\n+        childRealm.setName(\"child\");\n+        childRealm.getResources().add(RESOURCE_NAME_LDAP_ORGUNIT);\n \n         // 2. check propagation\n         ProvisioningResult<RealmTO> result =\n                 realmService.create(\"/\", realm).readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n-        });\n+                });\n+        ProvisioningResult<RealmTO> resultChild =\n+                realmService.create(\"/test\", childRealm).readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n+                });\n         assertNotNull(result);\n+        assertNotNull(resultChild);\n         assertEquals(1, result.getPropagationStatuses().size());\n+        assertEquals(1, resultChild.getPropagationStatuses().size());\n         assertEquals(RESOURCE_NAME_LDAP_ORGUNIT, result.getPropagationStatuses().get(0).getResource());\n+        assertEquals(RESOURCE_NAME_LDAP_ORGUNIT, resultChild.getPropagationStatuses().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, resultChild.getPropagationStatuses().get(0).getStatus());\n \n         realm = result.getEntity();\n \n         // 3. check on LDAP\n         assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=test,o=isp\"));\n \n-        // 4. remove realm\n+        // 3.1. check on LDAP also child realm, it should be under test organizational unit\n+        assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=child,o=isp\"));\n+        assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=child,ou=test,o=isp\"));\n+\n+        // 4. remove realms\n+        realmService.delete(\"/test/child\");\n         realmService.delete(realm.getFullPath());\n \n-        // 5. check on LDAP\n+        // 5. check on LDAP: both realms should be deleted\n         assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=test,o=isp\"));\n+        assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=child,ou=test,o=isp\"));\n     }\n }"}]}