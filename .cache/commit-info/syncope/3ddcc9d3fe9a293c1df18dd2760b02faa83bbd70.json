{"sha":"3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkZGNjOWQzZmU5YTI5M2MxZGYxOGRkMjc2MGIwMmZhYTgzYmJkNzA=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-28T15:52:31Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-28T15:52:31Z"},"message":"SYNCOPE-231 Changing return of UserService.create to Response, making params final\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439455 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1503478be21d0ddcbb4bf925df72040d23a2ef06","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1503478be21d0ddcbb4bf925df72040d23a2ef06"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"c2e6a9b360a61d367297ac9920b3bb982b165610","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c2e6a9b360a61d367297ac9920b3bb982b165610","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c2e6a9b360a61d367297ac9920b3bb982b165610"}],"stats":{"total":243,"additions":138,"deletions":105},"files":[{"sha":"3949e7123f11354a0587b0b8b1110be08ac2c1d3","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserServiceProxy.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -18,8 +18,12 @@\n  */\n package org.apache.syncope.client.services.proxy;\n \n+import java.net.URI;\n import java.util.Arrays;\n import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.UserService;\n@@ -69,8 +73,10 @@ public UserTO read(final String username) {\n     }\n \n     @Override\n-    public UserTO create(final UserTO userTO) {\n-        return getRestTemplate().postForObject(baseUrl + \"user/create\", userTO, UserTO.class);\n+    public Response create(final UserTO userTO) {\n+        UserTO created = getRestTemplate().postForObject(baseUrl + \"user/create\", userTO, UserTO.class);\n+        URI location = URI.create(baseUrl + \"user/\" + created.getId());\n+        return Response.created(location).entity(created).build();\n     }\n \n     @Override"},{"sha":"d87f570db76189f88b5a71200887f239173e49d5","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -27,6 +27,8 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.PropagationRequestTO;\n@@ -61,7 +63,7 @@ public interface UserService {\n     int count();\n \n     @POST\n-    UserTO create(UserTO userTO);\n+    Response create(UserTO userTO);\n \n     @DELETE\n     @Path(\"{userId}\")"},{"sha":"8016dfe6b00a567b1e0359d9b9b1fc0c15a0521f","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -19,6 +19,9 @@\n package org.apache.syncope.console.rest;\n \n import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.ResourceService;\n@@ -57,7 +60,8 @@ public List<UserTO> list(final int page, final int size) {\n     }\n \n     public UserTO create(final UserTO userTO) {\n-        return getService(UserService.class).create(userTO);\n+        Response response = getService(UserService.class).create(userTO);\n+        return response.readEntity(UserTO.class);\n     }\n \n     public UserTO update(final UserMod userModTO) {"},{"sha":"2b35d69adb3253d06d11ac26c176922212bb1c6c","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":46,"deletions":31,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -18,12 +18,17 @@\n  */\n package org.apache.syncope.core.services;\n \n+import java.net.URI;\n import java.util.List;\n \n import javax.ws.rs.MatrixParam;\n import javax.ws.rs.POST;\n import javax.ws.rs.PathParam;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriInfo;\n \n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.UserService;\n@@ -35,35 +40,36 @@\n import org.springframework.stereotype.Service;\n \n @Service\n-public class UserServiceImpl implements UserService {\n+public class UserServiceImpl implements UserService, ContextAware {\n     @Autowired\n     UserController userController;\n+    \n+    private UriInfo uriInfo;\n \n     @Override\n-    public UserTO activate(@PathParam(\"userId\") long userId, String token) {\n+    public UserTO activate(final @PathParam(\"userId\") long userId, final String token) {\n         return userController.activate(userId, token);\n     }\n \n     @Override\n-    public UserTO activate(long userId, String token,\n-            PropagationRequestTO propagationRequestTO) {\n+    public UserTO activate(final long userId, final String token,\n+            final PropagationRequestTO propagationRequestTO) {\n         return userController.activate(userId, token, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO activateByUsername(String username,\n-            @MatrixParam(\"token\") String token) {\n+    public UserTO activateByUsername(final String username, final @MatrixParam(\"token\") String token) {\n         return userController.activate(username, token);\n     }\n \n     @Override\n-    public UserTO activateByUsername(String username, String token,\n-            PropagationRequestTO propagationRequestTO) {\n+    public UserTO activateByUsername(final String username, final String token,\n+            final PropagationRequestTO propagationRequestTO) {\n         return userController.activate(username, token, propagationRequestTO);\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(String taskId) {\n+    public WorkflowFormTO claimForm(final String taskId) {\n         return userController.claimForm(taskId);\n     }\n \n@@ -73,23 +79,26 @@ public int count() {\n     }\n \n     @Override\n-    public UserTO create(UserTO userTO) {\n-        return userController.createInternal(userTO);\n+    public Response create(final UserTO userTO) {\n+        UserTO created = userController.createInternal(userTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getId() + \"\").build();\n+        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, created.getId()).entity(created)\n+                .build();\n     }\n \n     @Override\n-    public UserTO delete(Long userId) {\n+    public UserTO delete(final Long userId) {\n         return userController.delete(userId);\n     }\n \n     @Override\n     @POST\n-    public UserTO executeWorkflow(String taskId, UserTO userTO) {\n+    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n         return userController.executeWorkflow(userTO, taskId);\n     }\n \n     @Override\n-    public WorkflowFormTO getFormForUser(Long userId) {\n+    public WorkflowFormTO getFormForUser(final Long userId) {\n         return userController.getFormForUser(userId);\n     }\n \n@@ -104,38 +113,38 @@ public List<UserTO> list() {\n     }\n \n     @Override\n-    public List<UserTO> list(int page, int size) {\n+    public List<UserTO> list(final int page, final int size) {\n         return userController.list(page, size);\n     }\n \n     @Override\n-    public UserTO reactivate(long userId) {\n+    public UserTO reactivate(final long userId) {\n         return userController.reactivate(userId);\n     }\n \n     @Override\n-    public UserTO reactivate(long userId, PropagationRequestTO propagationRequestTO) {\n+    public UserTO reactivate(final long userId, final PropagationRequestTO propagationRequestTO) {\n         return userController.reactivate(userId, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO reactivateByUsername(String username) {\n+    public UserTO reactivateByUsername(final String username) {\n         return userController.reactivate(username);\n     }\n \n     @Override\n-    public UserTO reactivateByUsername(String username,\n+    public UserTO reactivateByUsername(final String username,\n             PropagationRequestTO propagationRequestTO) {\n         return userController.reactivate(username, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO read(Long userId) {\n+    public UserTO read(final Long userId) {\n         return userController.read(userId);\n     }\n \n     @Override\n-    public UserTO read(String username) {\n+    public UserTO read(final String username) {\n         return userController.read(username);\n     }\n \n@@ -145,53 +154,59 @@ public UserTO readSelf() {\n     }\n \n     @Override\n-    public List<UserTO> search(NodeCond searchCondition) {\n+    public List<UserTO> search(final NodeCond searchCondition) {\n         return userController.search(searchCondition);\n     }\n \n     @Override\n-    public List<UserTO> search(NodeCond searchCondition, int page, int size) {\n+    public List<UserTO> search(final NodeCond searchCondition, final int page, final int size) {\n         return userController.search(searchCondition, page, size);\n     }\n \n     @Override\n-    public int searchCount(NodeCond searchCondition) {\n+    public int searchCount(final NodeCond searchCondition) {\n         return userController.searchCountInternal(searchCondition);\n     }\n \n     @Override\n-    public UserTO submitForm(WorkflowFormTO form) {\n+    public UserTO submitForm(final WorkflowFormTO form) {\n         return userController.submitForm(form);\n     }\n \n     @Override\n-    public UserTO suspend(long userId) {\n+    public UserTO suspend(final long userId) {\n         return userController.suspend(userId);\n     }\n \n     @Override\n-    public UserTO suspend(long userId, PropagationRequestTO propagationRequestTO) {\n+    public UserTO suspend(final long userId, final PropagationRequestTO propagationRequestTO) {\n         return userController.suspend(userId, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO suspendByUsername(String username) {\n+    public UserTO suspendByUsername(final String username) {\n         return userController.suspend(username);\n     }\n \n     @Override\n-    public UserTO suspendByUsername(String username, PropagationRequestTO propagationRequestTO) {\n+    public UserTO suspendByUsername(final String username, final PropagationRequestTO propagationRequestTO) {\n         return userController.suspend(username, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO update(Long userId, UserMod userMod) {\n+    public UserTO update(final Long userId, final UserMod userMod) {\n         return userController.update(userMod);\n     }\n \n     @Override\n-    public Boolean verifyPassword(String username, String password) {\n+    public Boolean verifyPassword(final String username, final String password) {\n         return userController.verifyPasswordInternal(username, password);\n     }\n \n+    @Override\n+    @Context\n+    public void setUriInfo(final UriInfo uriInfo) {\n+        this.uriInfo = uriInfo;\n+    }\n+\n }"},{"sha":"c99b1b29dd8711c85e804e94e498cdb883e7d756","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -64,6 +64,7 @@\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.validation.SyncopeClientErrorHandler;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n@@ -294,4 +295,9 @@ protected static AttributeMod attributeMod(final String schema, final String val\n         attr.addValueToBeAdded(valueToBeAdded);\n         return attr;\n     }\n+    \n+    protected UserTO createUser(UserTO userTO) {\n+        Response response = userService.create(userTO);\n+        return response.readEntity(UserTO.class);\n+    }\n }"},{"sha":"6e8c53a0628eed4d6c51c794dd7169bb009eac0f","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -52,7 +52,7 @@\n \n @FixMethodOrder(MethodSorters.JVM)\n public class AuthenticationTestITCase extends AbstractTest {\n-\n+    \n     @Test\n     public void testAdminEntitlements() {\n         // 1. as anonymous, read all available entitlements\n@@ -101,7 +101,7 @@ public void testUserSchemaAuthorization() {\n         membershipTO.addAttribute(testAttributeTO);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // 3. read the schema created above (as admin) - success\n@@ -146,7 +146,7 @@ public void testUserRead() {\n         membershipTO.addAttribute(testAttributeTO);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         super.setupRestTemplate(userTO.getUsername(), \"password123\");\n@@ -182,7 +182,7 @@ public void testUserSearch() {\n         membershipTO.addAttribute(testAttributeTO);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         super.setupRestTemplate(userTO.getUsername(), \"password123\");\n@@ -230,7 +230,7 @@ public void checkFailedLogins() {\n         membershipTO.addAttribute(testAttributeTO);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         super.setupRestTemplate(userTO.getUsername(), \"password123\");\n@@ -292,7 +292,7 @@ public void checkUserSuspension() {\n         membershipTO.addAttribute(testAttributeTO);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         super.setupRestTemplate(userTO.getUsername(), \"password123\");\n@@ -427,7 +427,7 @@ public void issueSYNCOPE48() {\n         membershipTO.setRoleId(childRole.getId());\n         role1Admin.addMembership(membershipTO);\n \n-        role1Admin = userService.create(role1Admin);\n+        role1Admin = createUser(role1Admin);\n         assertNotNull(role1Admin);\n \n         super.setupRestTemplate(role1Admin.getUsername(), \"password\");\n@@ -438,7 +438,7 @@ public void issueSYNCOPE48() {\n         membershipTO.setRoleId(1L);\n         role1User.addMembership(membershipTO);\n \n-        role1User = userService.create(role1User);\n+        role1User = createUser(role1User);\n         assertNotNull(role1User);\n \n         // reset admin credentials for restTemplate"},{"sha":"30751a52ca75c78e9766508be79aef2114ac01c7","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -192,7 +192,7 @@ public void issue258() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue258@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         schemaTO.setType(SchemaType.Long);\n@@ -216,7 +216,7 @@ public void issue259() {\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue259@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1\"));\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserTO newUserTO = AttributableOperations.clone(userTO);\n@@ -241,7 +241,7 @@ public void issue260() {\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue260@syncope.apache.org\");\n         userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         schemaTO.setUniqueConstraint(false);"},{"sha":"3836fc749c03f4f76513636af200324c53e8924a","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -233,7 +233,7 @@ public void sync() {\n             inUserTO.addAttribute(attributeTO(\"email\", \"user5@syncope.apache.org\"));\n             inUserTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n-            inUserTO = userService.create(inUserTO);\n+            inUserTO = createUser(inUserTO);\n             assertNotNull(inUserTO);\n             // -----------------------------\n \n@@ -537,7 +537,7 @@ private String createNotificationTask() {\n         membershipTO.setRoleId(7);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         return sender;\n     }\n@@ -566,7 +566,7 @@ public void issueSYNCOPE68() {\n \n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(\"testuser2\", userTO.getUsername());\n         assertEquals(1, userTO.getMemberships().size());\n@@ -709,7 +709,7 @@ public void issueSYNCOPE272() {\n             UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope272@syncope.apache.org\");\n             userTO.addResource(\"resource-testdb\");\n \n-            userTO = userService.create(userTO);\n+            userTO = createUser(userTO);\n \n             assertNotNull(userTO);\n             assertEquals(1, userTO.getPropagationStatusTOs().size());"},{"sha":"d5398fc8faed6b77925eb7633255f844318c8e83","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -97,7 +97,7 @@ public void create() {\n         assertTrue(matchingUsers.isEmpty());\n \n         // 7. actually create user\n-        userTO = userService.create(request.getUserTO());\n+        userTO = createUser(request.getUserTO());\n         assertNotNull(userTO);\n     }\n \n@@ -107,7 +107,7 @@ public void update() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfupdate@syncope.apache.org\");\n         String initialPassword = userTO.getPassword();\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -163,7 +163,7 @@ public void delete() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfdelete@syncope.apache.org\");\n         String initialPassword = userTO.getPassword();\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // 2. try to request user delete as admin: failure"},{"sha":"15785672044d2375934e0d9b2ae8c8713bf56ee9","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":52,"deletions":52,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=3ddcc9d3fe9a293c1df18dd2760b02faa83bbd70","patch":"@@ -141,7 +141,7 @@ public void createUserWithNoPropagation() {\n         userTO.setPassword(\"password123\");\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n \n-        userService.create(userTO);\n+        createUser(userTO);\n \n         // get the new task list\n         tasks = taskService.list(TaskType.PROPAGATION);\n@@ -180,7 +180,7 @@ public void issue172() {\n \n         try {\n             UserTO userTO = getUniqueSampleTO(\"issue172@syncope.apache.org\");\n-            userService.create(userTO);\n+            createUser(userTO);\n         } finally {\n             for (PasswordPolicyTO policyTO : policies) {\n                 Response response = policyService.create(PolicyType.GLOBAL_PASSWORD, policyTO);\n@@ -202,7 +202,7 @@ public void issue186() {\n         userTO.addAttribute(attributeTO(\"fullname\", userId));\n         userTO.addAttribute(attributeTO(\"surname\", userId));\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertTrue(userTO.getResources().isEmpty());\n \n@@ -269,14 +269,14 @@ public void testEnforceMandatoryCondition() {\n \n         SyncopeClientException sce = null;\n         try {\n-            userTO = userService.create(userTO);\n+            userTO = createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n         }\n         assertNotNull(sce);\n \n         userTO.addAttribute(type);\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n     }\n \n@@ -297,15 +297,15 @@ public void testEnforceMandatoryConditionOnDerived() {\n \n         SyncopeClientException sce = null;\n         try {\n-            userTO = userService.create(userTO);\n+            userTO = createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n         }\n         assertNotNull(sce);\n \n         userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(Collections.singleton(\"resource-csv-enforcing\"), userTO.getResources());\n     }\n@@ -315,7 +315,7 @@ public void issue147() {\n         // 1. create an user without role nor resources\n         UserTO userTO = getUniqueSampleTO(\"147@t.com\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertTrue(userTO.getResources().isEmpty());\n \n@@ -343,7 +343,7 @@ public void issue147() {\n     public void createUserWithDbPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"yyy@yyy.yyy\");\n         userTO.addResource(\"resource-testdb\");\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n@@ -353,7 +353,7 @@ public void createUserWithDbPropagation() {\n     public void createWithInvalidPassword() {\n         UserTO userTO = getSampleTO(\"invalidpasswd@syncope.apache.org\");\n         userTO.setPassword(\"pass\");\n-        userService.create(userTO);\n+        createUser(userTO);\n     }\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n@@ -366,7 +366,7 @@ public void createWithInvalidUsername() {\n \n         userTO.addMembership(membershipTO);\n \n-        userService.create(userTO);\n+        createUser(userTO);\n     }\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n@@ -378,7 +378,7 @@ public void createWithInvalidPasswordByRes() {\n \n         userTO.setResources(Collections.singleton(\"ws-target-resource-nopropagation\"));\n \n-        userService.create(userTO);\n+        createUser(userTO);\n     }\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n@@ -393,14 +393,14 @@ public void createWithInvalidPasswordByRole() {\n \n         userTO.addMembership(membership);\n \n-        userService.create(userTO);\n+        createUser(userTO);\n     }\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n         UserTO newUserTO = new UserTO();\n         newUserTO.addAttribute(attributeTO(\"userId\", \"userId@nowhere.org\"));\n-        userService.create(newUserTO);\n+        createUser(newUserTO);\n     }\n \n     @Test\n@@ -441,7 +441,7 @@ public void create() {\n         userTO.addAttribute(attributeTO(\"activationDate\", null));\n \n         // 1. create user\n-        UserTO newUserTO = userService.create(userTO);\n+        UserTO newUserTO = createUser(userTO);\n \n         assertNotNull(newUserTO);\n         assertFalse(newUserTO.getAttributes().contains(attrWithInvalidSchemaTO));\n@@ -501,7 +501,7 @@ public void create() {\n \n         SyncopeClientException sce = null;\n         try {\n-            userService.create(userTO);\n+            createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             sce = e.getException(SyncopeClientExceptionType.DataIntegrityViolation);\n         }\n@@ -529,7 +529,7 @@ public void createWithRequiredValueMissing() {\n         SyncopeClientCompositeErrorException ex = null;\n         try {\n             // 1. create user without type (mandatory by UserSchema)\n-            userService.create(userTO);\n+            createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n         }\n@@ -549,7 +549,7 @@ public void createWithRequiredValueMissing() {\n         // 2. create user without surname (mandatory when type == 'F')\n         ex = null;\n         try {\n-            userService.create(userTO);\n+            createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n         }\n@@ -569,7 +569,7 @@ public void createWithReject() {\n         userTO.addMembership(membershipTO);\n \n         // 1. create user with role 9\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getMemberships().size());\n         assertEquals(9, userTO.getMemberships().get(0).getRoleId());\n@@ -629,7 +629,7 @@ public void createWithApproval() {\n         userTO.addMembership(membershipTO);\n \n         // 1. create user with role 9 (and verify that no propagation occurred)\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getMemberships().size());\n         assertEquals(9, userTO.getMemberships().get(0).getRoleId());\n@@ -703,7 +703,7 @@ public void delete() {\n         // specify a propagation\n         userTO.addResource(\"resource-testdb\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         long id = userTO.getId();\n \n@@ -731,7 +731,7 @@ public void deleteByUsername() {\n         // specify a propagation\n         userTO.addResource(\"resource-testdb\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         long id = userTO.getId();\n         userTO = userService.read(id);\n@@ -806,7 +806,7 @@ public void read() {\n     public void updateWithouPassword() {\n         UserTO userTO = getUniqueSampleTO(\"updatewithout@password.com\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n \n@@ -825,7 +825,7 @@ public void updateWithouPassword() {\n     public void updateInvalidPassword() {\n         UserTO userTO = getSampleTO(\"updateinvalid@password.com\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -839,7 +839,7 @@ public void updateInvalidPassword() {\n     public void updateSamePassword() {\n         UserTO userTO = getSampleTO(\"updatesame@password.com\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -858,7 +858,7 @@ public void update() {\n         membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertFalse(userTO.getDerivedAttributes().isEmpty());\n         assertEquals(1, userTO.getMemberships().size());\n@@ -923,7 +923,7 @@ public void updatePasswordOnly() {\n         membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n@@ -973,7 +973,7 @@ public void verifyTaskRegistration() {\n         userTO.addMembership(membershipTO);\n \n         // 1. create user\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // get the new task list\n@@ -1060,7 +1060,7 @@ public void createActivate() {\n         membershipTO.setRoleId(11L);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getToken());\n@@ -1087,7 +1087,7 @@ public void createActivateByUsername() {\n         membershipTO.setRoleId(11L);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getToken());\n@@ -1112,7 +1112,7 @@ public void suspendReactivate() {\n         membershipTO.setRoleId(7L);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n@@ -1138,7 +1138,7 @@ public void suspendReactivateByUsername() {\n         membershipTO.setRoleId(7L);\n         userTO.addMembership(membershipTO);\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n@@ -1173,7 +1173,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(ldap);\n         userTO.addResource(ldap.getName());\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n \n         assertNotNull(userTO);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n@@ -1234,7 +1234,7 @@ public void updateMultivalueAttribute() {\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         AttributeTO loginDate = userTO.getAttributeMap().get(\"loginDate\");\n@@ -1262,7 +1262,7 @@ public void issue213() {\n         UserTO userTO = getUniqueSampleTO(\"issue213@syncope.apache.org\");\n         userTO.addResource(\"resource-testdb\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getResources().size());\n \n@@ -1290,7 +1290,7 @@ public void issue234() {\n         UserTO inUserTO = getUniqueSampleTO(\"issue234@syncope.apache.org\");\n         inUserTO.addResource(\"resource-ldap\");\n \n-        UserTO userTO = userService.create(inUserTO);\n+        UserTO userTO = createUser(inUserTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -1312,7 +1312,7 @@ public void issue270() {\n         // be sure to remove all virtual attributes\n         original.setVirtualAttributes(Collections.<AttributeTO>emptyList());\n \n-        original = userService.create(original);\n+        original = createUser(original);\n \n         assertNotNull(original);\n \n@@ -1345,7 +1345,7 @@ public final void issue280() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -1377,7 +1377,7 @@ public void issue281() {\n         userTO.getDerivedAttributes().clear();\n         userTO.addResource(\"resource-csv\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         final List<PropagationStatusTO> propagations = userTO.getPropagationStatusTOs();\n@@ -1399,7 +1399,7 @@ public void issue288() {\n         userTO.addAttribute(attributeTO(\"aLong\", \"STRING\"));\n \n         try {\n-            userService.create(userTO);\n+            createUser(userTO);\n             fail();\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidValues));\n@@ -1423,7 +1423,7 @@ public void roleAttrPropagation() {\n \n         userTO.addResource(\"resource-csv\");\n \n-        UserTO actual = userService.create(userTO);\n+        UserTO actual = createUser(userTO);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n@@ -1452,7 +1452,7 @@ public void membershipAttrPropagation() {\n \n         userTO.addResource(\"resource-csv\");\n \n-        UserTO actual = userService.create(userTO);\n+        UserTO actual = createUser(userTO);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n@@ -1472,7 +1472,7 @@ public void issueSYNCOPE16() {\n         userTO.addMembership(membershipTO);\n \n         // 1. create user\n-        UserTO actual = userService.create(userTO);\n+        UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n \n         // 2. check for virtual attribute value\n@@ -1516,7 +1516,7 @@ public void issueSYNCOPE108() {\n \n         userTO.addResource(\"resource-csv\");\n \n-        UserTO actual = userService.create(userTO);\n+        UserTO actual = createUser(userTO);\n \n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n@@ -1605,7 +1605,7 @@ public void issueSYNCOPE111() {\n \n         userTO.addResource(\"resource-ldap\");\n \n-        UserTO actual = userService.create(userTO);\n+        UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n \n@@ -1659,7 +1659,7 @@ public void issueSYNCOPE185() {\n         userTO.getVirtualAttributes().clear();\n         userTO.addResource(\"resource-ldap\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"resource-ldap\", userTO.getPropagationStatusTOs().get(0).getResource());\n@@ -1696,7 +1696,7 @@ public void issueSYNCOPE51() {\n         userTO.setPassword(\"password\");\n \n         try {\n-            userService.create(userTO);\n+            createUser(userTO);\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertTrue(e.getException(SyncopeClientExceptionType.NotFound).getElements().iterator().next()\n@@ -1717,7 +1717,7 @@ public void issueSYNCOPE260() {\n         UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n         userTO.addResource(\"ws-target-resource-2\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n@@ -1832,7 +1832,7 @@ public void issueSYNCOPE267() {\n         userTO.getResources().clear();\n         userTO.addResource(\"resource-db-virattr\");\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"resource-db-virattr\", userTO.getPropagationStatusTOs().get(0).getResource());\n@@ -1855,7 +1855,7 @@ public void issueSYNCOPE266() {\n         UserTO userTO = getUniqueSampleTO(\"syncope266@apache.org\");\n         userTO.getResources().clear();\n \n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -1873,7 +1873,7 @@ public void issueSYNCOPE279() {\n         UserTO userTO = getUniqueSampleTO(\"syncope279@apache.org\");\n         userTO.getResources().clear();\n         userTO.addResource(\"ws-target-resource-3\");\n-        userService.create(userTO);\n+        createUser(userTO);\n     }\n \n     @Test\n@@ -1883,7 +1883,7 @@ public void issueSYNCOPE122() {\n         userTO.getResources().clear();\n         userTO.addResource(\"resource-testdb\");\n         userTO.addResource(\"resource-testdb2\");\n-        userTO = userService.create(userTO);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n         assertTrue(userTO.getResources().contains(\"resource-testdb2\"));"}]}