{"sha":"a355b0800f124dbd53aff374e63d12b6e87efd35","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEzNTViMDgwMGYxMjRkYmQ1M2FmZjM3NGU2M2QxMmI2ZTg3ZWZkMzU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-06-28T14:26:29Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-06-28T14:26:29Z"},"message":"[SYNCOPE-1545] WA > Sessions","tree":{"sha":"fc331855f095caa9e83cc935615cf8458cd07d80","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fc331855f095caa9e83cc935615cf8458cd07d80"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a355b0800f124dbd53aff374e63d12b6e87efd35","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a355b0800f124dbd53aff374e63d12b6e87efd35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a355b0800f124dbd53aff374e63d12b6e87efd35","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a355b0800f124dbd53aff374e63d12b6e87efd35/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f6f0f5f29c85ce83a61e0d328cb33024d5471ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f6f0f5f29c85ce83a61e0d328cb33024d5471ea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f6f0f5f29c85ce83a61e0d328cb33024d5471ea"}],"stats":{"total":771,"additions":752,"deletions":19},"files":[{"sha":"7b2eb359c204fa173b6f423990fa80f231e066e5","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -24,6 +24,8 @@ public final class AMConstants {\n \n     public static final String PREF_WACONFIG_PAGINATOR_ROWS = \"waconfig.paginator.rows\";\n \n+    public static final String PREF_WASESSION_PAGINATOR_ROWS = \"wasession.paginator.rows\";\n+\n     public static final String PREF_AUTHMODULE_PAGINATOR_ROWS = \"authmodule.paginator.rows\";\n \n     public static final String PREF_CLIENTAPP_PAGINATOR_ROWS = \"clientapp.paginator.rows\";"},{"sha":"cc283b1f51f1b27fb3d8623904445163c046f486","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -38,13 +38,12 @@\n import org.apache.syncope.client.console.panels.OIDC;\n import org.apache.syncope.client.console.panels.SAML2;\n import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel;\n+import org.apache.syncope.client.console.panels.WASessionPanel;\n import org.apache.syncope.client.console.rest.WAConfigRestClient;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -75,6 +74,8 @@ public WA(final PageParameters parameters) {\n         body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n         body.setOutputMarkupId(true);\n \n+        List<NetworkService> waInstances = serviceOps.list(NetworkService.Type.WA);\n+\n         AjaxLink<?> push = new AjaxLink<>(\"push\") {\n \n             @Override\n@@ -90,19 +91,20 @@ public void onClick(final AjaxRequestTarget target) {\n                 ((BaseWebPage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n-        push.setEnabled(!serviceOps.list(NetworkService.Type.WA).isEmpty()\n-                && SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_PUSH, SyncopeConstants.ROOT_REALM));\n+        push.setEnabled(!waInstances.isEmpty()\n+                && SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_PUSH));\n         body.add(push);\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n+                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(waInstances));\n         content.add(tabbedPanel);\n \n         body.add(content);\n \n-        if (!serviceOps.list(NetworkService.Type.WA).isEmpty()) {\n-            String actuatorEndpoint = serviceOps.list(NetworkService.Type.WA).get(0).getAddress() + \"/actuator/env\";\n+        if (!waInstances.isEmpty()) {\n+            String actuatorEndpoint = waInstances.get(0).getAddress() + \"/actuator/env\";\n             try {\n                 Response response = WebClient.create(\n                         actuatorEndpoint,\n@@ -132,10 +134,10 @@ public void onClick(final AjaxRequestTarget target) {\n         }\n     }\n \n-    private List<ITab> buildTabList() {\n+    private List<ITab> buildTabList(final List<NetworkService> waInstances) {\n         List<ITab> tabs = new ArrayList<>(0);\n \n-        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_MODULE_LIST, SyncopeConstants.ROOT_REALM)) {\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_MODULE_LIST)) {\n             tabs.add(new AbstractTab(new ResourceModel(\"authModules\")) {\n \n                 private static final long serialVersionUID = 5211692813425391144L;\n@@ -147,7 +149,7 @@ public Panel getPanel(final String panelId) {\n             });\n         }\n \n-        if (SyncopeConsoleSession.get().owns(AMEntitlement.CLIENTAPP_LIST, SyncopeConstants.ROOT_REALM)) {\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.CLIENTAPP_LIST)) {\n             tabs.add(new AbstractTab(new ResourceModel(\"clientApps\")) {\n \n                 private static final long serialVersionUID = 5211692813425391144L;\n@@ -179,7 +181,7 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        if (SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_LIST, SyncopeConstants.ROOT_REALM)) {\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_LIST)) {\n             tabs.add(new AbstractTab(new ResourceModel(\"config\")) {\n \n                 private static final long serialVersionUID = 5211692813425391144L;\n@@ -191,7 +193,7 @@ public Panel getPanel(final String panelId) {\n             });\n         }\n \n-        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_PROFILE_LIST, SyncopeConstants.ROOT_REALM)) {\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_PROFILE_LIST)) {\n             tabs.add(new AbstractTab(new ResourceModel(\"authProfiles\")) {\n \n                 private static final long serialVersionUID = 5211692813425391144L;\n@@ -203,15 +205,14 @@ public Panel getPanel(final String panelId) {\n             });\n         }\n \n-        List<NetworkService> instances = serviceOps.list(NetworkService.Type.WA);\n-        if (!instances.isEmpty()) {\n+        if (!waInstances.isEmpty() && SyncopeConsoleSession.get().owns(AMEntitlement.WA_SESSION_LIST)) {\n             tabs.add(new AbstractTab(new ResourceModel(\"sessions\")) {\n \n                 private static final long serialVersionUID = 5211692813425391144L;\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(instances.get(0).getAddress()));\n+                    return new WASessionPanel(panelId, waInstances, getPageReference());\n                 }\n             });\n         }"},{"sha":"2357cb1e7018cda51dae1c8af2c9a2b57b62632b","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARouteDirectoryPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -67,8 +67,6 @@ public SRARouteDirectoryPanel(final String id, final PageReference pageRef) {\n             modal.show(false);\n         });\n \n-        restClient = new SRARouteRestClient();\n-\n         addNewItemPanelBuilder(new SRARouteWizardBuilder(new SRARouteTO(), pageRef), true);\n         initResultTable();\n     }"},{"sha":"db7409413bcb3d8f3166b9a41c93378923df55a2","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WASessionDirectoryPanel.java","status":"added","additions":209,"deletions":0,"changes":209,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,209 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.stream.Stream;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.AMConstants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.WASessionDirectoryPanel.WASessionProvider;\n+import org.apache.syncope.client.console.panels.WASessionPanel.WASessionSearchEvent;\n+import org.apache.syncope.client.console.rest.WASession;\n+import org.apache.syncope.client.console.rest.WASessionRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class WASessionDirectoryPanel\n+        extends DirectoryPanel<WASession, WASession, WASessionProvider, WASessionRestClient> {\n+\n+    private static final long serialVersionUID = 24083331272114L;\n+\n+    private final BaseModal<String> viewModal;\n+\n+    private final List<NetworkService> waInstances;\n+\n+    private String keyword;\n+\n+    public WASessionDirectoryPanel(\n+            final String id,\n+            final List<NetworkService> waInstances,\n+            final PageReference pageRef) {\n+\n+        super(id, pageRef);\n+        this.waInstances = waInstances;\n+\n+        disableCheckBoxes();\n+\n+        viewModal = new BaseModal<>(Constants.OUTER) {\n+\n+            private static final long serialVersionUID = 389935548143327858L;\n+\n+            @Override\n+            protected void onConfigure() {\n+                super.onConfigure();\n+                setFooterVisible(false);\n+            }\n+        };\n+        viewModal.size(Modal.Size.Extra_large);\n+        viewModal.setWindowClosedCallback(target -> viewModal.show(false));\n+        addOuterObject(viewModal);\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected List<IColumn<WASession, String>> getColumns() {\n+        List<IColumn<WASession, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<>(\n+                new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n+        columns.add(new DatePropertyColumn<>(\n+                new ResourceModel(\"authenticationDate\"), \"authenticationDate\", \"authenticationDate\"));\n+        columns.add(new PropertyColumn<>(\n+                new ResourceModel(\"authenticatedPrincipal\"), \"authenticatedPrincipal\", \"authenticatedPrincipal\"));\n+        return columns;\n+    }\n+\n+    @Override\n+    protected ActionsPanel<WASession> getActions(final IModel<WASession> model) {\n+        ActionsPanel<WASession> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<WASession>() {\n+\n+            private static final long serialVersionUID = 22687128346032L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WASession ignore) {\n+                viewModal.header(new ResourceModel(\"details\"));\n+                target.add(viewModal.setContent(\n+                        new JsonEditorPanel(viewModal, Model.of(model.getObject().getJson()), true, pageRef)));\n+                viewModal.show(true);\n+            }\n+        }, ActionLink.ActionType.VIEW, AMEntitlement.WA_SESSION_LIST);\n+\n+        panel.add(new ActionLink<WASession>() {\n+\n+            private static final long serialVersionUID = -4608353559809323466L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WASession ignore) {\n+                WASession waSession = model.getObject();\n+                try {\n+                    WASessionRestClient.delete(waInstances, waSession.getKey());\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", waSession.getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.WA_SESSION_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    protected WASessionProvider dataProvider() {\n+        return new WASessionProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return AMConstants.PREF_WASESSION_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof WASessionSearchEvent) {\n+            WASessionSearchEvent payload = WASessionSearchEvent.class.cast(event.getPayload());\n+            keyword = payload.getKeyword();\n+\n+            updateResultTable(payload.getTarget());\n+        } else {\n+            super.onEvent(event);\n+        }\n+    }\n+\n+    protected final class WASessionProvider extends DirectoryDataProvider<WASession> {\n+\n+        private static final long serialVersionUID = 18002870965042L;\n+\n+        private final SortableDataProviderComparator<WASession> comparator;\n+\n+        public WASessionProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"authenticationDate\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        private Stream<WASession> filtered() {\n+            Stream<WASession> stream = WASessionRestClient.list(waInstances).stream();\n+            return keyword == null\n+                    ? stream\n+                    : stream.filter(s -> s.getJson().contains(keyword));\n+        }\n+\n+        @Override\n+        public Iterator<? extends WASession> iterator(final long first, final long count) {\n+            return filtered().skip(first).limit(count).sorted(comparator).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return filtered().count();\n+        }\n+\n+        @Override\n+        public IModel<WASession> model(final WASession waSession) {\n+            return new CompoundPropertyModel<>(waSession);\n+        }\n+    }\n+}"},{"sha":"24439d9ba4f6ac5369fae1ebd3e10c069e7e8c58","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WASessionPanel.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+\n+public class WASessionPanel extends Panel {\n+\n+    private static final long serialVersionUID = 30189416462011L;\n+\n+    public WASessionPanel(final String id, final List<NetworkService> waInstances, final PageReference pageRef) {\n+        super(id);\n+\n+        Model<String> keywordModel = new Model<>(StringUtils.EMPTY);\n+\n+        WebMarkupContainer searchBoxContainer = new WebMarkupContainer(\"searchBox\");\n+        add(searchBoxContainer);\n+\n+        WASessionDirectoryPanel directoryPanel = new WASessionDirectoryPanel(\"directoryPanel\", waInstances, pageRef);\n+        add(directoryPanel);\n+\n+        Form<?> form = new Form<>(\"form\");\n+        searchBoxContainer.add(form);\n+\n+        AjaxTextFieldPanel filter = new AjaxTextFieldPanel(\"filter\", \"filter\", keywordModel, true);\n+        form.add(filter.hideLabel().setOutputMarkupId(true).setRenderBodyOnly(true));\n+\n+        AjaxButton search = new AjaxButton(\"search\") {\n+\n+            private static final long serialVersionUID = 8390605330558248736L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target) {\n+                send(directoryPanel, Broadcast.EXACT, new WASessionSearchEvent(target, keywordModel.getObject()));\n+            }\n+        };\n+        search.setOutputMarkupId(true);\n+        form.add(search);\n+        form.setDefaultButton(search);\n+    }\n+\n+    public static class WASessionSearchEvent implements Serializable {\n+\n+        private static final long serialVersionUID = 5063826346823013424L;\n+\n+        private final transient AjaxRequestTarget target;\n+\n+        private final String keyword;\n+\n+        WASessionSearchEvent(final AjaxRequestTarget target, final String keyword) {\n+            this.target = target;\n+            this.keyword = keyword;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public String getKeyword() {\n+            return keyword;\n+        }\n+    }\n+}"},{"sha":"2ecdda2add35fe369cacad61ca3e470c6d616794","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASession.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASession.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import java.util.Date;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+\n+@JsonDeserialize(using = WASessionDeserializer.class)\n+public class WASession implements EntityTO {\n+\n+    private static final long serialVersionUID = 18201657700802L;\n+\n+    private String key;\n+\n+    private Date authenticationDate;\n+\n+    private String authenticatedPrincipal;\n+\n+    private String json;\n+\n+    @Override\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @Override\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public Date getAuthenticationDate() {\n+        return authenticationDate;\n+    }\n+\n+    public void setAuthenticationDate(final Date authenticationDate) {\n+        this.authenticationDate = authenticationDate;\n+    }\n+\n+    public String getAuthenticatedPrincipal() {\n+        return authenticatedPrincipal;\n+    }\n+\n+    public void setAuthenticatedPrincipal(final String authenticatedPrincipal) {\n+        this.authenticatedPrincipal = authenticatedPrincipal;\n+    }\n+\n+    public String getJson() {\n+        return json;\n+    }\n+\n+    public void setJson(final String json) {\n+        this.json = json;\n+    }\n+}"},{"sha":"12d39d99acf66ec89c039020475042e8d3291bb4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASessionDeserializer.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionDeserializer.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;\n+import com.fasterxml.jackson.databind.DeserializationContext;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.deser.std.StdDeserializer;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.text.ParseException;\n+import org.apache.commons.lang3.time.DateFormatUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class WASessionDeserializer extends StdDeserializer<WASession> {\n+\n+    private static final long serialVersionUID = 24527200564172L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(WASessionDeserializer.class);\n+\n+    public WASessionDeserializer() {\n+        this(null);\n+    }\n+\n+    public WASessionDeserializer(final Class<?> vc) {\n+        super(vc);\n+    }\n+\n+    @Override\n+    public WASession deserialize(final JsonParser jp, final DeserializationContext ctxt)\n+            throws IOException, JsonProcessingException {\n+\n+        JsonNode node = jp.getCodec().readTree(jp);\n+\n+        WASession waSession = new WASession();\n+\n+        if (node.has(\"authentication_date_formatted\")) {\n+            String authenticationDate = node.get(\"authentication_date_formatted\").textValue();\n+            try {\n+                waSession.setAuthenticationDate(\n+                        DateFormatUtils.ISO_8601_EXTENDED_DATETIME_FORMAT.parse(authenticationDate));\n+            } catch (ParseException e) {\n+                LOG.error(\"Unparsable date: {}\", authenticationDate, e);\n+            }\n+        }\n+\n+        if (node.has(\"authenticated_principal\")) {\n+            waSession.setAuthenticatedPrincipal(node.get(\"authenticated_principal\").textValue());\n+        }\n+\n+        if (node.has(\"ticket_granting_ticket\")) {\n+            waSession.setKey(node.get(\"ticket_granting_ticket\").textValue());\n+        }\n+\n+        StringWriter writer = new StringWriter();\n+        JsonGenerator jgen = jp.getCodec().getFactory().createGenerator(writer);\n+        jgen.setPrettyPrinter(new DefaultPrettyPrinter());\n+        jp.getCodec().writeTree(jgen, node);\n+        waSession.setJson(writer.toString());\n+\n+        return waSession;\n+    }\n+}"},{"sha":"94aaf65926f6df5acf2b18f1f0461d7a91b6f906","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASessionRestClient.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.InputStream;\n+import java.util.List;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class WASessionRestClient implements RestClient {\n+\n+    private static final long serialVersionUID = 22118820292494L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(WASessionRestClient.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private static String getActuatorEndpoint(final List<NetworkService> waInstances) {\n+        return waInstances.get(0).getAddress() + \"/actuator/ssoSessions\";\n+    }\n+\n+    public static List<WASession> list(final List<NetworkService> waInstances) {\n+        try {\n+            Response response = WebClient.create(\n+                    getActuatorEndpoint(waInstances),\n+                    SyncopeWebApplication.get().getAnonymousUser(),\n+                    SyncopeWebApplication.get().getAnonymousKey(),\n+                    null).\n+                    accept(MediaType.APPLICATION_JSON_TYPE).get();\n+            if (response.getStatus() == Response.Status.OK.getStatusCode()) {\n+                JsonNode node = MAPPER.readTree((InputStream) response.getEntity());\n+                if (node.has(\"activeSsoSessions\")) {\n+                    return MAPPER.readValue(\n+                            MAPPER.treeAsTokens(node.get(\"activeSsoSessions\")),\n+                            new TypeReference<List<WASession>>() {\n+                    });\n+                }\n+            } else {\n+                LOG.error(\"Unexpected response for SSO Sessions from {}: {}\",\n+                        getActuatorEndpoint(waInstances), response.getStatus());\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Could not fetch SSO Sessions from {}\", getActuatorEndpoint(waInstances), e);\n+        }\n+\n+        return List.of();\n+    }\n+\n+    public static void delete(final List<NetworkService> waInstances, final String ticketGrantingTicket) {\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+\n+        try {\n+            Response response = WebClient.create(\n+                    getActuatorEndpoint(waInstances),\n+                    SyncopeWebApplication.get().getAnonymousUser(),\n+                    SyncopeWebApplication.get().getAnonymousKey(),\n+                    null).\n+                    path(ticketGrantingTicket).\n+                    accept(MediaType.APPLICATION_JSON_TYPE).type(MediaType.APPLICATION_JSON_TYPE).delete();\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LOG.error(\"Unexpected response when deleting SSO Session {} from {}: {}\",\n+                        ticketGrantingTicket, getActuatorEndpoint(waInstances), response.getStatus());\n+                sce.getElements().add(\"Unexpected response code: \" + response.getStatus());\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Could not delete SSO Session {} from {}\",\n+                    ticketGrantingTicket, getActuatorEndpoint(waInstances), e);\n+            sce.getElements().add(\"Unexpected error: \" + e.getMessage());\n+        }\n+\n+        if (!sce.getElements().isEmpty()) {\n+            throw sce;\n+        }\n+    }\n+\n+    private WASessionRestClient() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"788387227e52505ce04c3405df8315960c68128e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit ${key}\n+any.finish=Submit ${key}\n+any.cancel=Cancel ${key}\n+authenticationDate=Creation Date\n+authenticatedPrincipal=Principal\n+details=Details"},{"sha":"0baec199ab6f3037ac7a0e94fab46d572a0425dc","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_fr_CA.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_fr_CA.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifier ${key}\n+any.finish=Soumettre ${key}\n+any.cancel=Annuler ${key}\n+authenticationDate=Creation Date\n+authenticatedPrincipal=Principal\n+details=Details"},{"sha":"6df8cdc1d40bfd7a9277738ceba9f892f3ebe4c7","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_it.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_it.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica ${key}\n+any.finish=Invia ${key}\n+any.cancel=Annulla ${key}\n+authenticationDate=Data di Creazione\n+authenticatedPrincipal=Soggetto\n+details=Dettagli"},{"sha":"c5c1d0d473a1e56b5850cb6e9ae44da13b45b973","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_ja.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ja.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=${key} \\u3092\\u7de8\\u96c6\n+any.finish=${key} \\u3092\\u5b9f\\u884c\n+any.cancel=${key} \\u3092\\u30ad\\u30e3\\u30f3\\u30bb\\u30eb\n+authenticationDate=Creation Date\n+authenticatedPrincipal=Principal\n+details=Details"},{"sha":"788387227e52505ce04c3405df8315960c68128e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_pt_BR.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_pt_BR.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit ${key}\n+any.finish=Submit ${key}\n+any.cancel=Cancel ${key}\n+authenticationDate=Creation Date\n+authenticatedPrincipal=Principal\n+details=Details"},{"sha":"63e4a85cf286b8877879fffce330ce0d4b3d7d97","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_ru.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionDirectoryPanel_ru.properties?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${key}\n+any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${key}\n+any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${key}\n+authenticationDate=Creation Date\n+authenticatedPrincipal=Principal\n+details=Details"},{"sha":"362e7ed99941cde48eec40b528cbc60634ec6983","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionPanel.html","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWASessionPanel.html?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -0,0 +1,36 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"searchBox\">\n+      <form wicket:id=\"form\">\n+        <div class=\"input-group mb-3\">\n+          <span wicket:id=\"filter\">[FILTER]</span>\n+          <span class=\"input-group-btn\">\n+            <button type=\"button\" class=\"btn btn-default btn-flat\" wicket:id=\"search\">\n+              <span class=\"fas fa-search\" aria-hidden=\"true\"></span>\n+            </button>\n+          </span>\n+        </div>\n+      </form>\n+    </div>\n+\n+    <div wicket:id=\"directoryPanel\"></div>\n+  </wicket:panel>\n+</html>"},{"sha":"979d1731812123a55244a815efb4d68e3ac22428","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -38,10 +38,10 @@\n \n public abstract class BaseRestClient implements RestClient {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(BaseRestClient.class);\n-\n     private static final long serialVersionUID = 1523999867826481989L;\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(BaseRestClient.class);\n+\n     public static SyncopeService getSyncopeService() {\n         return getService(SyncopeService.class);\n     }"},{"sha":"1869e180a74f6372bdb1dff080dc988741830fa8","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a355b0800f124dbd53aff374e63d12b6e87efd35/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a355b0800f124dbd53aff374e63d12b6e87efd35/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=a355b0800f124dbd53aff374e63d12b6e87efd35","patch":"@@ -96,6 +96,10 @@ public final class AMEntitlement {\n \n     public static final String WA_CONFIG_PUSH = \"WA_CONFIG_PUSH\";\n \n+    public static final String WA_SESSION_LIST = \"WA_SESSION_LIST\";\n+\n+    public static final String WA_SESSION_DELETE = \"WA_SESSION_DELETE\";\n+\n     private static final Set<String> VALUES;\n \n     static {"}]}