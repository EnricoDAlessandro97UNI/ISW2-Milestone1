{"sha":"4759ad8ea33a44885645ecc9ddb7834eea9aaba4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3NTlhZDhlYTMzYTQ0ODg1NjQ1ZWNjOWRkYjc4MzRlZWE5YWFiYTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-23T09:00:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-23T09:00:57Z"},"message":"[SYNCOPE-938] Skip some String constructor invocations","tree":{"sha":"60c5099e8d28ac1539e9f968b8841115b818690e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/60c5099e8d28ac1539e9f968b8841115b818690e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4759ad8ea33a44885645ecc9ddb7834eea9aaba4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4759ad8ea33a44885645ecc9ddb7834eea9aaba4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4759ad8ea33a44885645ecc9ddb7834eea9aaba4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8776551b7041ffd06aa9d2dbc3b577b386fb1dc4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8776551b7041ffd06aa9d2dbc3b577b386fb1dc4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8776551b7041ffd06aa9d2dbc3b577b386fb1dc4"}],"stats":{"total":10,"additions":4,"deletions":6},"files":[{"sha":"ae81e6ede71b0f9945ac63cb2bd4ff977f15d841","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttrValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java?ref=4759ad8ea33a44885645ecc9ddb7834eea9aaba4","patch":"@@ -261,7 +261,7 @@ public String getValueAsString(final AttrSchemaType type) {\n                 break;\n \n             case Binary:\n-                result = new String(Base64.getMimeEncoder().encode(getBinaryValue()));\n+                result = Base64.getMimeEncoder().encodeToString(getBinaryValue());\n                 break;\n \n             case String:"},{"sha":"f4a6ebd8e7cb75988babe493487f8834e201632e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainAttrTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java?ref=4759ad8ea33a44885645ecc9ddb7834eea9aaba4","patch":"@@ -25,7 +25,6 @@\n import static org.junit.Assert.fail;\n \n import java.io.UnsupportedEncodingException;\n-import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Base64;\n import java.util.Random;\n@@ -207,7 +206,7 @@ public void saveWithBinary() throws UnsupportedEncodingException {\n \n         byte[] bytes = new byte[20];\n         new Random().nextBytes(bytes);\n-        String photoB64Value = new String(Base64.getMimeEncoder().encode(bytes), StandardCharsets.UTF_8);\n+        String photoB64Value = Base64.getMimeEncoder().encodeToString(bytes);\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n         attr.setOwner(user);"},{"sha":"0828bb6ff0edd26178cd32a84f1a685072dfaf56","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPPasswordPropagationActions.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4759ad8ea33a44885645ecc9ddb7834eea9aaba4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java?ref=4759ad8ea33a44885645ecc9ddb7834eea9aaba4","patch":"@@ -72,10 +72,9 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n \n                     String password = user.getPassword().toLowerCase();\n                     byte[] decodedPassword = DatatypeConverter.parseHexBinary(password);\n-                    byte[] base64EncodedPassword = Base64.getMimeEncoder().encode(decodedPassword);\n+                    String base64EncodedPassword = Base64.getMimeEncoder().encodeToString(decodedPassword);\n \n-                    String cipherPlusPassword =\n-                            (\"{\" + cipherAlgorithm.toLowerCase() + \"}\" + new String(base64EncodedPassword));\n+                    String cipherPlusPassword = (\"{\" + cipherAlgorithm.toLowerCase() + \"}\" + base64EncodedPassword);\n \n                     Attribute passwordAttribute = AttributeBuilder.buildPassword(\n                             new GuardedString(cipherPlusPassword.toCharArray()));"}]}