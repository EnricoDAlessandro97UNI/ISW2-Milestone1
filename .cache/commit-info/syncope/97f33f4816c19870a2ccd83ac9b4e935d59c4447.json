{"sha":"97f33f4816c19870a2ccd83ac9b4e935d59c4447","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk3ZjMzZjQ4MTZjMTk4NzBhMmNjZDgzYWM5YjRlOTM1ZDU5YzQ0NDc=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T16:12:35Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T16:12:35Z"},"message":"[SYNCOPE-231]\n* adding JAVA DOC for LoggerService\n* adding fromString method for some enum types\n* Code cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440496 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1e3f333aec6813321f57d0066eb2def06cd85bb1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1e3f333aec6813321f57d0066eb2def06cd85bb1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/97f33f4816c19870a2ccd83ac9b4e935d59c4447","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97f33f4816c19870a2ccd83ac9b4e935d59c4447","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/97f33f4816c19870a2ccd83ac9b4e935d59c4447","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97f33f4816c19870a2ccd83ac9b4e935d59c4447/comments","author":null,"committer":null,"parents":[{"sha":"8fde5c81d3a983729f2e1a789a04108b89bbd8ce","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8fde5c81d3a983729f2e1a789a04108b89bbd8ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8fde5c81d3a983729f2e1a789a04108b89bbd8ce"}],"stats":{"total":174,"additions":137,"deletions":37},"files":[{"sha":"b4bdad0b4e0373f532e511d27c22192194ed171a","filename":"common/src/main/java/org/apache/syncope/common/services/PolicyService.java","status":"modified","additions":35,"deletions":7,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -30,29 +30,57 @@\n import org.apache.syncope.common.to.PolicyTO;\r\n import org.apache.syncope.common.types.PolicyType;\r\n \r\n-@Path(\"policies/{kind}\")\r\n+@Path(\"policies/{type}\")\r\n public interface PolicyService {\r\n \r\n+    /**\r\n+     * @param type Creates a new policy with given type\r\n+     * @param policyTO Policy to be created (needs to match type)\r\n+     * @return Response containing URI location for created resource\r\n+     */\r\n     @POST\r\n-    <T extends PolicyTO> Response create(@PathParam(\"kind\") PolicyType type, T policyTO);\r\n+    <T extends PolicyTO> Response create(@PathParam(\"type\") PolicyType type, T policyTO);\r\n \r\n+    /**\r\n+     * @param type Deletes policy with given type\r\n+     * @param policyId Deletes policy with given id\r\n+     */\r\n     @DELETE\r\n     @Path(\"{policyId}\")\r\n-    <T extends PolicyTO> void delete(@PathParam(\"kind\") PolicyType type, @PathParam(\"policyId\") Long policyId);\r\n+    <T extends PolicyTO> void delete(@PathParam(\"type\") PolicyType type, @PathParam(\"policyId\") Long policyId);\r\n \r\n+    /**\r\n+     * @param type Type selector for requested policies\r\n+     * @return List of policies with matching type.\r\n+     */\r\n     @GET\r\n-    <T extends PolicyTO> List<T> list(@PathParam(\"kind\") PolicyType type);\r\n+    <T extends PolicyTO> List<T> list(@PathParam(\"type\") PolicyType type);\r\n \r\n+    /**\r\n+     * @param type Request for policy with given type\r\n+     * @param policyId ID of requested policy\r\n+     * @return Returns policy with matching id and type\r\n+     */\r\n     @GET\r\n     @Path(\"{policyId}\")\r\n-    <T extends PolicyTO> T read(@PathParam(\"kind\") PolicyType type, @PathParam(\"policyId\") Long policyId);\r\n+    <T extends PolicyTO> T read(@PathParam(\"type\") PolicyType type, @PathParam(\"policyId\") Long policyId);\r\n \r\n+    /**\r\n+     * @param type PolicyType to read global policy from\r\n+     * @return Global Policy for matching type\r\n+     */\r\n     @GET\r\n     @Path(\"0\")\r\n-    <T extends PolicyTO> T readGlobal(@PathParam(\"kind\") PolicyType type);\r\n+    <T extends PolicyTO> T readGlobal(@PathParam(\"type\") PolicyType type);\r\n \r\n+    /**\r\n+     * @param type PolicyType to be updated.\r\n+     * @param policyId ID of policy to be updated\r\n+     * @param policyTO Policy to replace existing policy\r\n+     */\r\n     @PUT\r\n     @Path(\"{policyId}\")\r\n-    <T extends PolicyTO> void update(@PathParam(\"kind\") PolicyType type,@PathParam(\"policyId\") Long policyId,\r\n+    <T extends PolicyTO> void update(@PathParam(\"type\") PolicyType type, @PathParam(\"policyId\") Long policyId,\r\n             T policyTO);\r\n+\r\n }\r"},{"sha":"b27b9826500979144934ad5ef6ddd70b22b8d1ec","filename":"common/src/main/java/org/apache/syncope/common/services/ReportService.java","status":"modified","additions":71,"deletions":23,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -40,55 +40,103 @@\n @Path(\"reports\")\r\n public interface ReportService {\r\n \r\n+    /**\r\n+     * @return Returns number of existing reports\r\n+     */\r\n+    @GET\r\n+    @Path(\"count\")\r\n+    int count();\r\n+\r\n+    /**\r\n+     * @param reportTO Report to be created\r\n+     * @return Response containing URI location for created resource\r\n+     */\r\n     @POST\r\n     Response create(ReportTO reportTO);\r\n \r\n-    @PUT\r\n+    /**\r\n+     * @param reportId Deletes report with matching id\r\n+     */\r\n+    @DELETE\r\n     @Path(\"{reportId}\")\r\n-    void update(@PathParam(\"reportId\") Long reportId, ReportTO reportTO);\r\n+    void delete(@PathParam(\"reportId\") Long reportId);\r\n+\r\n+    /**\r\n+     * @param executionId ID of execution report to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"executions/{executionId}\")\r\n+    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n+\r\n+    /**\r\n+     * @param reportId ID of report to be executed.\r\n+     * @return Execution result\r\n+     */\r\n+    @POST\r\n+    @Path(\"{reportId}/execute\")\r\n+    ReportExecTO execute(@PathParam(\"reportId\") Long reportId);\r\n \r\n+    /**\r\n+     * @param executionId ID of execution report to be selected\r\n+     * @param fmt file-format selection\r\n+     * @return Returns a stream for content download\r\n+     */\r\n     @GET\r\n-    @Path(\"count\")\r\n-    int count();\r\n+    @Path(\"executions/{executionId}/dbDump\")\r\n+    Response exportExecutionResult(@PathParam(\"executionId\") Long executionId,\r\n+            @QueryParam(\"format\") ReportExecExportFormat fmt);\r\n+\r\n+    /**\r\n+     * @return Returns a list of all reportletConfClasses\r\n+     */\r\n+    @GET\r\n+    @Path(\"reportletConfClasses\")\r\n+    Set<String> getReportletConfClasses();\r\n \r\n+    /**\r\n+     * @return Returns a list of all reports\r\n+     */\r\n     @GET\r\n     List<ReportTO> list();\r\n \r\n+    /**\r\n+     * @param page selected page in relation to size\r\n+     * @param size Number of items per page\r\n+     * @return Returns a list of reports according to pagination\r\n+     */\r\n     @GET\r\n     List<ReportTO> list(@QueryParam(\"page\") int page,\r\n             @QueryParam(\"size\") @DefaultValue(\"25\") int size);\r\n \r\n+    /**\r\n+     * @return Returns list of all previous executions\r\n+     */\r\n     @GET\r\n     @Path(\"executions\")\r\n     List<ReportExecTO> listExecutions();\r\n \r\n-    @GET\r\n-    @Path(\"reportletConfClasses\")\r\n-    Set<String> getReportletConfClasses();\r\n-\r\n+    /**\r\n+     * @param reportId ID of report to be read\r\n+     * @return Report with matching ID\r\n+     */\r\n     @GET\r\n     @Path(\"{reportId}\")\r\n     ReportTO read(@PathParam(\"reportId\") Long reportId);\r\n \r\n+    /**\r\n+     * @param executionId ID ExecutionReport to be selected\r\n+     * @return Returns ExecutionReport with matching id\r\n+     */\r\n     @GET\r\n     @Path(\"executions/{executionId}\")\r\n     ReportExecTO readExecution(@PathParam(\"executionId\") Long executionId);\r\n \r\n-    @GET\r\n-    @Path(\"executions/{executionId}\")\r\n-    @Produces(MediaType.APPLICATION_OCTET_STREAM)\r\n-    Response exportExecutionResult(@PathParam(\"executionId\") Long executionId,\r\n-            @QueryParam(\"format\") ReportExecExportFormat fmt);\r\n-\r\n-    @POST\r\n-    @Path(\"{reportId}/execute\")\r\n-    ReportExecTO execute(@PathParam(\"reportId\") Long reportId);\r\n-\r\n-    @DELETE\r\n+    /**\r\n+     * @param reportId ID for report to be updated\r\n+     * @param reportTO Updates report with matching reportId\r\n+     */\r\n+    @PUT\r\n     @Path(\"{reportId}\")\r\n-    void delete(@PathParam(\"reportId\") Long reportId);\r\n+    void update(@PathParam(\"reportId\") Long reportId, ReportTO reportTO);\r\n \r\n-    @DELETE\r\n-    @Path(\"executions/{executionId}\")\r\n-    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n }\r"},{"sha":"dfcf3a8a4bc109d5c12c83a85a81ac136220bad7","filename":"common/src/main/java/org/apache/syncope/common/types/CipherAlgorithm.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -40,4 +40,8 @@ public enum CipherAlgorithm {\n     public final String getAlgorithm() {\r\n         return algorithm;\r\n     }\r\n+\r\n+    public static CipherAlgorithm fromString(String value) {\r\n+        return CipherAlgorithm.valueOf(value.toUpperCase());\r\n+    }\r\n }\r"},{"sha":"7a43c462baf193a732bc9e0fcea7f4ee043a8efe","filename":"common/src/main/java/org/apache/syncope/common/types/ConflictResolutionAction.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -30,5 +30,9 @@ public enum ConflictResolutionAction {\n     // ignore sync\r\n     IGNORE,\r\n     // sync all\r\n-    ALL\r\n+    ALL;\r\n+\r\n+    public static ConflictResolutionAction fromString(String value) {\r\n+        return ConflictResolutionAction.valueOf(value.toUpperCase());\r\n+    }\r\n }\r"},{"sha":"c327143b3b5216ef7594043ade0499b59a5fed8c","filename":"common/src/main/java/org/apache/syncope/common/types/ConnParameterType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnParameterType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnParameterType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnParameterType.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -28,6 +28,7 @@ public enum ConnParameterType {\n      */\r\n     OVERRIDABLE(true),\r\n     NOT_OVERRIDABLE(false);\r\n+\r\n     private boolean overridable;\r\n \r\n     ConnParameterType(final boolean overridable) {\r"},{"sha":"0ea5ad7d533184e7cc337e194a1c200885eb4140","filename":"common/src/main/java/org/apache/syncope/common/types/ConnectorCapability.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -33,6 +33,10 @@ public enum ConnectorCapability {\n     ONE_PHASE_DELETE,\r\n     TWO_PHASES_DELETE,\r\n     SEARCH,\r\n-    SYNC\r\n+    SYNC;\r\n+\r\n+    public static ConnectorCapability fromString(String value) {\r\n+        return ConnectorCapability.valueOf(value.toUpperCase());\r\n+    }\r\n \r\n }\r"},{"sha":"1e57d4afa2c3e729e5aa57c727b6f370a0875b8f","filename":"common/src/main/java/org/apache/syncope/common/types/ReportExecExportFormat.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -26,6 +26,10 @@ public enum ReportExecExportFormat {\n     XML,\r\n     HTML,\r\n     PDF,\r\n-    RTF\r\n+    RTF;\r\n+\r\n+    public static ReportExecExportFormat fromString(String value) {\r\n+        return ReportExecExportFormat.valueOf(value.toUpperCase());\r\n+    }\r\n \r\n }\r"},{"sha":"68eff7810e3370fc7ffce05db847c4b9091a7216","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceOperation.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -25,5 +25,9 @@ public enum ResourceOperation {\n \r\n     CREATE,\r\n     UPDATE,\r\n-    DELETE\r\n+    DELETE;\r\n+\r\n+    public static ResourceOperation fromString(String value) {\r\n+        return ResourceOperation.valueOf(value.toUpperCase());\r\n+    }\r\n }\r"},{"sha":"51ebc05020fea509ed07fefb44d1a6cf055cfaa7","filename":"common/src/main/java/org/apache/syncope/common/types/TaskType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -47,6 +47,6 @@ public static TaskType fromString(String name) {\n                 }\r\n             }\r\n         }\r\n-        return null;\r\n+        return TaskType.valueOf(name.toUpperCase());\r\n     }\r\n }\r"},{"sha":"760782cb81fddcecfb18791aaf310e06bbe4b21b","filename":"common/src/main/java/org/apache/syncope/common/types/UserRequestType.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -25,6 +25,10 @@ public enum UserRequestType {\n \r\n     CREATE,\r\n     UPDATE,\r\n-    DELETE\r\n+    DELETE;\r\n+\r\n+    public static UserRequestType fromString(String value) {\r\n+        return UserRequestType.valueOf(value.toUpperCase());\r\n+    }\r\n \r\n }\r"},{"sha":"9a5eed50fb2841f31ab9b67f1964b739bf8189ca","filename":"console/src/main/java/org/apache/syncope/console/rest/ReportRestClient.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97f33f4816c19870a2ccd83ac9b4e935d59c4447/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97f33f4816c19870a2ccd83ac9b4e935d59c4447/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java?ref=97f33f4816c19870a2ccd83ac9b4e935d59c4447","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.rest;\n \n-import java.util.Collections;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Set;"}]}