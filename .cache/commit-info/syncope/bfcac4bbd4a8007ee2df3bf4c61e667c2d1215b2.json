{"sha":"bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJmY2FjNGJiZDRhODAwN2VlMmRmM2JmNGM2MWU2NjdjMmQxMjE1YjI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-03-07T11:15:20Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-03-07T11:15:39Z"},"message":"[SYNCOPE-1039] provides on_change event handling to be used to update the field model","tree":{"sha":"4b2c30af4cf00aac89eef46d8075aa078996c2db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4b2c30af4cf00aac89eef46d8075aa078996c2db"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e38c042d84035662ab56bf770c148a21f109d17d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e38c042d84035662ab56bf770c148a21f109d17d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e38c042d84035662ab56bf770c148a21f109d17d"}],"stats":{"total":85,"additions":72,"deletions":13},"files":[{"sha":"17d503648736523eaf0862acad13099901f596d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -60,7 +60,7 @@ public String transform(final ProvisionTO provision) {\n                     }\n                 }, new ArrayList<String>());\n \n-        anyTypes = new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", new Model<String>(), true);\n+        anyTypes = new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", new Model<String>());\n         anyTypes.setChoices(availableAnyTypes);\n         anyTypes.hideLabel();\n         anyTypes.setNullValid(false);"},{"sha":"34cc61cf0c01cdc24941e2b491b101aeb5bcbc64","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -70,7 +70,7 @@ public VirSchemaDetails(final String id,\n         schemaForm.add(readonly);\n \n         final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<>(\n-                \"resource\", getString(\"resource\"), new PropertyModel<String>(schemaTO, \"resource\")).\n+                \"resource\", getString(\"resource\"), new PropertyModel<String>(schemaTO, \"resource\"), false).\n                 setNullValid(false);\n         resource.setChoices(CollectionUtils.collect(resourceRestClient.list(),\n                 EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()));\n@@ -82,7 +82,7 @@ public VirSchemaDetails(final String id,\n         schemaForm.add(resource);\n \n         anyType = new AjaxDropDownChoicePanel<>(\n-                \"anyType\", getString(\"anyType\"), new PropertyModel<String>(schemaTO, \"anyType\")).\n+                \"anyType\", getString(\"anyType\"), new PropertyModel<String>(schemaTO, \"anyType\"), false).\n                 setNullValid(false);\n         anyType.setChoices(new ArrayList<>(anyTypes.keySet()));\n         anyType.setOutputMarkupId(true);"},{"sha":"d3a61d1a688d086f1c312f172c2483b6348bcb8e","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusModal.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -62,7 +62,8 @@ protected List<String> load() {\n             }\n         };\n \n-        AjaxDropDownChoicePanel<String> anyTypes = new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", typeModel);\n+        AjaxDropDownChoicePanel<String> anyTypes\n+                = new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", typeModel, false);\n         anyTypes.setChoices(types);\n         anyTypes.hideLabel();\n         add(anyTypes);"},{"sha":"193c0ad4156bf761528070c91515b7deef77a7f2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -53,6 +53,14 @@ public AjaxDropDownChoicePanel(\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n \n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            }).add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     // nothing to do"},{"sha":"12d315f5ee53a015510626996dcfba5c5112c067","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":28,"deletions":3,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -26,6 +26,9 @@\n import java.io.Serializable;\n import java.util.List;\n import org.apache.commons.lang3.math.NumberUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -47,7 +50,8 @@ private AjaxSpinnerFieldPanel(\n             final String name,\n             final Class<T> reference,\n             final IModel<T> model,\n-            final Options options) {\n+            final Options options,\n+            final boolean enableOnChange) {\n \n         super(id, name, model);\n \n@@ -62,6 +66,19 @@ public JQueryUIBehavior newWidgetBehavior(final String selector) {\n                 return behavior;\n             }\n         };\n+\n+        if (enableOnChange && !isReadOnly()) {\n+            field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+\n         add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         this.name = name;\n@@ -156,7 +173,8 @@ public void setObject(final T object) {\n \n     @Override\n     public AjaxSpinnerFieldPanel<T> clone() {\n-        final AjaxSpinnerFieldPanel<T> panel = new AjaxSpinnerFieldPanel<>(getId(), name, reference, model, options);\n+        final AjaxSpinnerFieldPanel<T> panel\n+                = new AjaxSpinnerFieldPanel<>(getId(), name, reference, model, options, false);\n \n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());\n@@ -173,6 +191,8 @@ public AjaxSpinnerFieldPanel<T> clone() {\n \n         private final Options options = new Options();\n \n+        private boolean enableOnChange = false;\n+\n         public Builder<T> min(final T min) {\n             options.set(\"min\", min);\n             return this;\n@@ -188,13 +208,18 @@ public Builder<T> step(final T step) {\n             return this;\n         }\n \n+        public Builder<T> enableOnChange() {\n+            enableOnChange = true;\n+            return this;\n+        }\n+\n         public AjaxSpinnerFieldPanel<T> build(\n                 final String id,\n                 final String name,\n                 final Class<T> reference,\n                 final IModel<T> model) {\n \n-            return new AjaxSpinnerFieldPanel<>(id, name, reference, model, options);\n+            return new AjaxSpinnerFieldPanel<>(id, name, reference, model, options, enableOnChange);\n         }\n     }\n "},{"sha":"f3c7d0169177c84d8fe7ed84a0aaeb008d19fa5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -18,22 +18,47 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n public class EncryptedFieldPanel extends FieldPanel<String> implements Cloneable {\n \n+    private static final long serialVersionUID = 1882871043451691005L;\n+\n     public EncryptedFieldPanel(final String id, final String name, final IModel<String> model) {\n+        this(id, name, model, false);\n+    }\n+\n+    public EncryptedFieldPanel(\n+            final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n         super(id, name, model);\n \n         field = new TextField<String>(\"encryptedField\", model) {\n \n+            private static final long serialVersionUID = 7545877620091912863L;\n+\n             @Override\n             protected String[] getInputTypes() {\n                 return new String[] { \"password\" };\n             }\n         };\n+\n+        if (enableOnChange && !isReadOnly()) {\n+            field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+\n         add(field.setLabel(new ResourceModel(name, name)).setRequired(false).setOutputMarkupId(true));\n     }\n }"},{"sha":"5c1291a6a53dd40fd02783c0513b10ad42ff4c15","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","patch":"@@ -211,7 +211,7 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n         FieldPanel panel;\n         switch (type) {\n             case Boolean:\n-                panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<Boolean>(), false);\n+                panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<Boolean>(), true);\n                 panel.setRequired(required);\n                 break;\n \n@@ -233,7 +233,7 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 break;\n \n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<>(), false);\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<>(), true);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n \n                 if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n@@ -267,7 +267,7 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Long>().\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().\n                         build(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n \n                 if (required) {\n@@ -276,7 +276,7 @@ public String getObject(\n                 break;\n \n             case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>().step(0.1).\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).\n                         build(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n \n                 if (required) {\n@@ -293,15 +293,15 @@ public String getObject(\n                 break;\n \n             case Encrypted:\n-                panel = new EncryptedFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>());\n+                panel = new EncryptedFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(), true);\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             default:\n-                panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n+                panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(), true);\n \n                 if (jexlHelp) {\n                     AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();"}]}