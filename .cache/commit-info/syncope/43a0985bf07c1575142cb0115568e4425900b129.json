{"sha":"43a0985bf07c1575142cb0115568e4425900b129","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzYTA5ODViZjA3YzE1NzUxNDJjYjAxMTU1NjhlNDQyNTkwMGIxMjk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-11T12:15:30Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-11T12:15:30Z"},"message":"(Fixes issue #64)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246628 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"48949b02cab077477959fe2588b50eb8eb3f61d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/48949b02cab077477959fe2588b50eb8eb3f61d1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43a0985bf07c1575142cb0115568e4425900b129","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43a0985bf07c1575142cb0115568e4425900b129","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43a0985bf07c1575142cb0115568e4425900b129","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43a0985bf07c1575142cb0115568e4425900b129/comments","author":null,"committer":null,"parents":[{"sha":"0d19448b579617beec6d9a92b63d1878cd7cf439","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d19448b579617beec6d9a92b63d1878cd7cf439","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0d19448b579617beec6d9a92b63d1878cd7cf439"}],"stats":{"total":130,"additions":69,"deletions":61},"files":[{"sha":"59921fa2e5ced2a4881e4e016d8d88807341b9ae","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -61,7 +61,7 @@ public class MembershipModalPage extends SyncopeModalPage {\n     public MembershipModalPage(final Page basePage, final ModalWindow window,\n             final MembershipTO membershipTO, final boolean createFlag) {\n \n-        Form form = new Form(\"MembershipForm\");\n+        final Form form = new Form(\"MembershipForm\");\n \n         form.setModel(new CompoundPropertyModel(membershipTO));\n \n@@ -166,7 +166,8 @@ public void setObject(Serializable object) {\n                                         String val = formatter.format(date);\n                                         item.setModelObject(val);\n                                     }\n-                                }, schemaTO.getConversionPattern(),required);\n+                                }, schemaTO.getConversionPattern(),required,\n+                                        schemaTO.isReadonly(), form);\n                     }\n \n                     item.add(panel);"},{"sha":"6a2de26750cd8cdc18988e9f4a65b5768270aef9","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -96,7 +96,7 @@ public RoleModalPage(final BasePage basePage, final ModalWindow window,\n if(!createFlag)\n     cloneOldRoleTO(roleTO);\n \n-Form form = new Form(\"RoleForm\");\n+final Form form = new Form(\"RoleForm\");\n \n form.setModel(new CompoundPropertyModel(roleTO));\n \n@@ -180,7 +180,8 @@ public void setObject(Serializable object) {\n                                     String val = formatter.format(date);\n                                     item.setModelObject(val);\n                                 }\n-                            }, schemaTO.getConversionPattern(),required);\n+                            }, schemaTO.getConversionPattern(),required,\n+                                    schemaTO.isReadonly(),form);\n                 }\n                 /*Common other cases : java.lang.String,java.lang.Double,\n                 java.lang.Long*/"},{"sha":"f3ab486ee3272df9f3445a2d8dc5b2b307083360","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -128,7 +128,7 @@ public UserModalPage(final BasePage basePage, final ModalWindow window,\n createUserWin.setPageMapName(\"create-membership-modal\");\n createUserWin.setCookieName(\"create-membership-modal\");\n \n-Form userForm = new Form(\"UserForm\");\n+final Form userForm = new Form(\"UserForm\");\n \n userForm.setModel(new CompoundPropertyModel(userTO));\n \n@@ -228,7 +228,7 @@ public void setObject(Serializable object) {\n                             item.setModelObject(val);\n                         }\n                     }, schemaTO.getConversionPattern(),required,\n-                            schemaTO.isReadonly());\n+                            schemaTO.isReadonly(),userForm);\n         } else {\n             panel = new AjaxTextFieldPanel(\"panel\",\n                     schemaTO.getName(), new Model() {"},{"sha":"f14def7c72f9e9bada83ed20cdf60920175dc423","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":59,"deletions":55,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -17,71 +17,35 @@\n import java.util.Date;\n import org.apache.wicket.extensions.markup.html.form.DateTextField;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.extensions.yui.calendar.DatePicker;\n import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n+import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.validation.IValidationError;\n+import org.apache.wicket.validation.ValidationError;\n \n /**\n  * DateFieldPanel\n  */\n public class DateFieldPanel extends Panel {\n     /**\n-     * Build a DateFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<Date> date object\n-     * @param schema attribute's date pattern\n-     * @param required flag\n+     *\n+     * @param id wicket id\n+     * @param name component name\n+     * @param model model object\n+     * @param datePattern schema attribute date pattern defined for it\n+     * @param required TRUE if it is required, FALSE otherwise\n+     * @param readonly TRUE if it can't be valued, FALSE otherwise\n+     * @param form form where it will be included\n      */\n     public DateFieldPanel(String id, String name ,IModel<Date> model,\n-                          final String datePattern, boolean required) {\n-        super(id, model);\n-\n-        if (required) {\n-            add(new Label(\"required\", \"*\"));\n-        } else {\n-            add(new Label(\"required\", \"\"));\n-        }\n-\n-        Fragment datePanel = null;\n-        \n-        if(!datePattern.contains(\"H\")) {\n-            datePanel = new Fragment(\"datePanel\",\"dateField\",this);\n-            \n-            DateTextField field = new DateTextField(\"field\", model,datePattern);\n-            field.add(getDatePicker());\n-\n-            datePanel.add(field);\n-        }\n-\n-        else {\n-            datePanel = new Fragment(\"datePanel\",\"dateTimeField\",this);\n-\n-            DateTimeField field = new DateTimeField(\"field\", model);\n-\n-            field.setRequired(required);\n-            field.setLabel(new Model(name));\n-            \n-            datePanel.add(field);\n-        }\n-\n-        add(datePanel);\n-    }\n-\n-    /**\n-     * Build a DateFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<Date> date object\n-     * @param schema attribute's date pattern\n-     * @param required flag\n-     * @param readonly flag\n-     */\n-    public DateFieldPanel(String id, String name ,IModel<Date> model,\n-            final String datePattern, boolean required,boolean readonly) {\n+            final String datePattern, boolean required,boolean readonly,\n+            Form form) {\n         super(id, model);\n \n         if (required) {\n@@ -98,7 +62,6 @@ public DateFieldPanel(String id, String name ,IModel<Date> model,\n             DateTextField field = new DateTextField(\"field\", model,datePattern);\n             field.add(getDatePicker());\n \n-            field.setRequired(required);\n             field.setEnabled(!readonly);\n             field.setLabel(new Model(name));\n \n@@ -110,11 +73,13 @@ public DateFieldPanel(String id, String name ,IModel<Date> model,\n \n             DateTimeField field = new DateTimeField(\"field\", model);\n \n-            field.setRequired(required);\n             field.setEnabled(!readonly);\n             field.setLabel(new Model(name));\n \n             datePanel.add(field);\n+\n+            if(required)\n+                form.add(new DateTimeFormValidator(field));\n         }\n \n         add(datePanel);\n@@ -131,11 +96,50 @@ public DatePicker getDatePicker(){\n             protected boolean enableMonthYearSelection() {\n                 return true;\n             }\n-\n         };\n \n         picker.setShowOnFieldClick(true);\n \n         return picker;\n     }\n-}\n+\n+    /**\n+     * Custom form validator for registering and handling DateTimeField\n+     * components that are in it.\n+     */\n+    public class DateTimeFormValidator extends AbstractFormValidator {\n+        private FormComponent[] dateTimeComponents;\n+\n+        public DateTimeFormValidator(DateTimeField dateTimeComponent) {\n+            if(dateTimeComponent == null)\n+                throw new IllegalArgumentException(\n+\t\t\t\t\t\"argument dateTimeComponent cannot \" +\n+                                        \"be null\");\n+\n+            dateTimeComponents = new FormComponent[] {dateTimeComponent};\n+        }\n+        \n+        @Override\n+        public FormComponent[] getDependentFormComponents() {\n+            return dateTimeComponents;\n+        }\n+\n+        /**\n+         * Validation rule : all 3 fields (date,hours,minutes) must be not-null.\n+         * @param form\n+         */\n+        @Override\n+        public void validate(Form form) {\n+        DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n+\n+        if(dateTimeField.getDate() == null || dateTimeField.getHours() == null\n+                || dateTimeField.getMinutes() == null) {\n+\n+            ValidationError ve = new ValidationError();\n+            ve.setVariables(DateTimeFormValidator.this.variablesMap());\n+            ve.addMessageKey(resourceKey());\n+            dateTimeComponents[0].error((IValidationError) ve);\n+        }\n+      }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"875d9420839ad6b6b6e01962dcebc5e612486e92","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/DateFieldPanel.properties","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.properties?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -0,0 +1 @@\n+field.DateFieldPanel$DateTimeFormValidator=Field '${label0}' must be fully valued"},{"sha":"e5d81046b745fae4521d2a94ada513f57a487346","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/DateFieldPanel_it.properties","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43a0985bf07c1575142cb0115568e4425900b129/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel_it.properties?ref=43a0985bf07c1575142cb0115568e4425900b129","patch":"@@ -0,0 +1 @@\n+field.DateFieldPanel$DateTimeFormValidator=Il campo '${label0}' dev'essere completamente valorizzato"}]}