{"sha":"dba895f0e555306a3793f343d671ff44e57d5631","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiYTg5NWYwZTU1NTMwNmEzNzkzZjM0M2Q2NzFmZjQ0ZTU3ZDU2MzE=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-10-07T14:38:55Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-10-07T14:38:55Z"},"message":"SYNCOPE-393 fixed\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1529856 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"53fa301109968ba75da6e52700864e2151023f17","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/53fa301109968ba75da6e52700864e2151023f17"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dba895f0e555306a3793f343d671ff44e57d5631","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dba895f0e555306a3793f343d671ff44e57d5631","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dba895f0e555306a3793f343d671ff44e57d5631","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dba895f0e555306a3793f343d671ff44e57d5631/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a034745b9b3097c0d8ca722ec3107f9404d5f633","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a034745b9b3097c0d8ca722ec3107f9404d5f633","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a034745b9b3097c0d8ca722ec3107f9404d5f633"}],"stats":{"total":2633,"additions":2294,"deletions":339},"files":[{"sha":"b3aad068df5444bf2ebaa1d51d9771aca36d9f28","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -30,6 +30,7 @@\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n+import org.apache.syncope.common.to.BulkAssociationAction;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n@@ -110,4 +111,14 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n     @POST\r\n     @Path(\"bulk\")\r\n     BulkActionRes bulkAction(BulkAction bulkAction);\r\n+\r\n+    @PUT\r\n+    @Path(\"{resourceName}/users\")\r\n+    BulkActionRes usersBulkAssociationAction(\r\n+            @PathParam(\"resourceName\") String resourceName, BulkAssociationAction bulkAction);\r\n+\r\n+    @PUT\r\n+    @Path(\"{resourceName}/roles\")\r\n+    BulkActionRes rolesBulkAssociationAction(\r\n+            @PathParam(\"resourceName\") String resourceName, BulkAssociationAction bulkAction);\r\n }\r"},{"sha":"1e5cbe99bb5a85c918a3515b97a55c35630e3c19","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":36,"deletions":3,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -30,6 +30,7 @@\n \r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n+import org.apache.syncope.common.to.PropagationTargetsTO;\r\n import org.apache.syncope.common.to.RoleTO;\r\n \r\n @Path(\"roles\")\r\n@@ -99,7 +100,7 @@ public interface RoleService {\n     /**\r\n      * @param searchCondition Filter condition for role list\r\n      * @return Returns list of roles with matching filter conditions\r\n-     * @throws InvalidSearchConditionException \r\n+     * @throws InvalidSearchConditionException\r\n      */\r\n     @POST\r\n     @Path(\"search\")\r\n@@ -110,7 +111,7 @@ public interface RoleService {\n      * @param page Page of roles in relation to size parameter\r\n      * @param size Number of roles to be displayed per page\r\n      * @return Returns paginated list of roles with matching filter conditions\r\n-     * @throws InvalidSearchConditionException \r\n+     * @throws InvalidSearchConditionException\r\n      */\r\n     @POST\r\n     @Path(\"search\")\r\n@@ -120,7 +121,7 @@ List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     /**\r\n      * @param searchCondition Filter condition for role list\r\n      * @return Returns number of roles matching provided filter conditions\r\n-     * @throws InvalidSearchConditionException \r\n+     * @throws InvalidSearchConditionException\r\n      */\r\n     @POST\r\n     @Path(\"search/count\")\r\n@@ -146,4 +147,36 @@ List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @Path(\"{roleId}\")\r\n     RoleTO update(@PathParam(\"roleId\") Long roleId, RoleMod roleMod);\r\n \r\n+    /**\r\n+     * Unlinks role and the given external resources specified by <tt>propagationTargetsTO</tt> parameter.\r\n+     *\r\n+     * @param roleId role id.\r\n+     * @param propagationTargetsTO resource names.\r\n+     * @return updated role.\r\n+     */\r\n+    @POST\r\n+    @Path(\"{roleId}/unlink\")\r\n+    RoleTO unlink(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n+\r\n+    /**\r\n+     * Unassigns resources to the given role (performs unlink + de-provision).\r\n+     *\r\n+     * @param roleId role id.\r\n+     * @param propagationTargetsTO resources to be unassigned.\r\n+     * @return updated role.\r\n+     */\r\n+    @POST\r\n+    @Path(\"{roleId}/unassign\")\r\n+    RoleTO unassign(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n+\r\n+    /**\r\n+     * De-provision role from the given resources without unlinking.\r\n+     *\r\n+     * @param roleId role id of the role to be de-provisioned.\r\n+     * @param propagationTargetsTO resource names.\r\n+     * @return updated role.\r\n+     */\r\n+    @POST\r\n+    @Path(\"{roleId}/deprovision\")\r\n+    RoleTO deprovision(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n }\n\\ No newline at end of file"},{"sha":"e0ea76bdcc059895274e1e938671287ba3c35742","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":48,"deletions":13,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -23,6 +23,7 @@\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n@@ -32,25 +33,26 @@\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationRequestTO;\n+import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.UserTO;\n \n @Path(\"users\")\n public interface UserService {\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/activate\")\n     UserTO activate(@PathParam(\"userId\") long userId, @QueryParam(\"token\") String token);\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/activate/propagation\")\n     UserTO activate(@PathParam(\"userId\") long userId, @QueryParam(\"token\") String token,\n             PropagationRequestTO propagationRequestTO);\n \n-    @POST\n+    @PUT\n     @Path(\"activateByUsername/{username}\")\n     UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"token\") String token);\n \n-    @POST\n+    @PUT\n     @Path(\"activateByUsername/{username}/propagation\")\n     UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"token\") String token,\n             PropagationRequestTO propagationRequestTO);\n@@ -72,19 +74,19 @@ UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"t\n     @GET\n     List<UserTO> list(@QueryParam(\"page\") int page, @QueryParam(\"size\") @DefaultValue(\"25\") int size);\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/reactivate\")\n     UserTO reactivate(@PathParam(\"userId\") long userId);\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/reactivate/propagation\")\n     UserTO reactivate(@PathParam(\"userId\") long userId, PropagationRequestTO propagationRequestTO);\n \n-    @POST\n+    @PUT\n     @Path(\"reactivateByUsername/{username}\")\n     UserTO reactivateByUsername(@PathParam(\"username\") String username);\n \n-    @POST\n+    @PUT\n     @Path(\"reactivateByUsername/{username}/propagation\")\n     UserTO reactivateByUsername(@PathParam(\"username\") String username, PropagationRequestTO propagationRequestTO);\n \n@@ -112,27 +114,60 @@ List<UserTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @Path(\"search/count\")\n     int searchCount(NodeCond searchCondition) throws InvalidSearchConditionException;\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/suspend\")\n     UserTO suspend(@PathParam(\"userId\") long userId);\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}/status/suspend/propagation\")\n     UserTO suspend(@PathParam(\"userId\") long userId, PropagationRequestTO propagationRequestTO);\n \n-    @POST\n+    @PUT\n     @Path(\"suspendByUsername/{username}\")\n     UserTO suspendByUsername(@PathParam(\"username\") String username);\n \n-    @POST\n+    @PUT\n     @Path(\"suspendByUsername/{username}/propagation\")\n     UserTO suspendByUsername(@PathParam(\"username\") String username, PropagationRequestTO propagationRequestTO);\n \n-    @POST\n+    @PUT\n     @Path(\"{userId}\")\n     UserTO update(@PathParam(\"userId\") Long userId, UserMod userMod);\n \n     @POST\n     @Path(\"bulk\")\n     BulkActionRes bulkAction(BulkAction bulkAction);\n+\n+    /**\n+     * Unlinks user and the given external resources specified by <tt>propagationTargetsTO</tt> parameter.\n+     *\n+     * @param userId user id.\n+     * @param propagationTargetsTO resource names.\n+     * @return updated user.\n+     */\n+    @PUT\n+    @Path(\"{userId}/unlink\")\n+    UserTO unlink(@PathParam(\"userId\") Long userId, PropagationTargetsTO propagationTargetsTO);\n+\n+    /**\n+     * Unassigns resources to the given user (performs unlink + de-provision).\n+     *\n+     * @param userId user id.\n+     * @param propagationTargetsTO resources to be unassigned.\n+     * @return updated user.\n+     */\n+    @PUT\n+    @Path(\"{userId}/unassign\")\n+    UserTO unassign(@PathParam(\"userId\") Long userId, PropagationTargetsTO propagationTargetsTO);\n+\n+    /**\n+     * De-provision user from the given resources without unlinking.\n+     *\n+     * @param userId user id of the user to be de-provisioned.\n+     * @param propagationTargetsTO resource names.\n+     * @return updated user.\n+     */\n+    @PUT\n+    @Path(\"{userId}/deprovision\")\n+    UserTO deprovision(@PathParam(\"userId\") Long userId, PropagationTargetsTO propagationTargetsTO);\n }"},{"sha":"a7298dbf524c2b07c3570ed46dfffdd7dd12130b","filename":"common/src/main/java/org/apache/syncope/common/to/AttributableTargetsTO.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributableTargetsTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributableTargetsTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributableTargetsTO.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+/**\n+ * Propagation request on internal storage or on 0+ external resources.\n+ */\n+@XmlRootElement(name = \"attributableTargets\")\n+@XmlType\n+public class AttributableTargetsTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -2410740018092105778L;\n+\n+    /**\n+     * Attributables.\n+     */\n+    private final Set<Long> attributables;\n+\n+    public AttributableTargetsTO() {\n+        super();\n+\n+        this.attributables = new HashSet<Long>();\n+    }\n+\n+    @XmlElementWrapper(name = \"resources\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resources\")\n+    public Set<Long> getAttributables() {\n+        return attributables;\n+    }\n+}"},{"sha":"134e3976297825cfdcd7d4d4f9816fbfa75f2965","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAssociationAction.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"bulkAction\")\n+@XmlType\n+public class BulkAssociationAction extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 1395353278878758961L;\n+\n+    @XmlEnum\n+    @XmlType(name = \"bulkActionType\")\n+    public enum Type {\n+\n+        UNLINK,\n+        UNASSIGN,\n+        DEPROVISION\n+\n+    }\n+\n+    private Type operation;\n+\n+    /**\n+     * Serialized identifiers.\n+     */\n+    private Collection<Long> targets;\n+\n+    public Type getOperation() {\n+        return operation;\n+    }\n+\n+    public void setOperation(final Type operation) {\n+        this.operation = operation;\n+    }\n+\n+    public void setTargets(final Collection<Long> targets) {\n+        this.targets = targets;\n+    }\n+\n+    public Collection<Long> getTargets() {\n+        return targets;\n+    }\n+\n+    public void addTarget(final Long target) {\n+        if (this.targets == null) {\n+            this.targets = new ArrayList<Long>();\n+        }\n+\n+        this.targets.add(target);\n+    }\n+\n+    public int size() {\n+        return targets == null ? 0 : targets.size();\n+    }\n+}"},{"sha":"f290ffef5f552321982074d8c9f5850da3332452","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationRequestTO.java","status":"modified","additions":1,"deletions":21,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationRequestTO.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -18,38 +18,25 @@\n  */\n package org.apache.syncope.common.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.HashSet;\n-import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.AbstractBaseBean;\n \n /**\n  * Propagation request on internal storage or on 0+ external resources.\n  */\n @XmlRootElement(name = \"propagationRequest\")\n @XmlType\n-public class PropagationRequestTO extends AbstractBaseBean {\n+public class PropagationRequestTO extends PropagationTargetsTO {\n \n     private static final long serialVersionUID = 7601716025754543004L;\n \n-    /**\n-     * External resources propagation is requested to.\n-     */\n-    private final Set<String> resources;\n-\n     /**\n      * Whether update should be performed on internal storage.\n      */\n     private boolean onSyncope;\n \n     public PropagationRequestTO() {\n         super();\n-\n-        this.resources = new HashSet<String>();\n     }\n \n     public boolean isOnSyncope() {\n@@ -59,11 +46,4 @@ public boolean isOnSyncope() {\n     public void setOnSyncope(final boolean onSyncope) {\n         this.onSyncope = onSyncope;\n     }\n-\n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n-    public Set<String> getResources() {\n-        return resources;\n-    }\n }"},{"sha":"68cf9ea7895604f7e3906595a455c58a36a9039d","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationTargetsTO.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+/**\n+ * Propagation request on internal storage or on 0+ external resources.\n+ */\n+@XmlRootElement(name = \"propagationTargets\")\n+@XmlType\n+public class PropagationTargetsTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -2410740018092105778L;\n+\n+    /**\n+     * External resources propagation is requested to.\n+     */\n+    private final Set<String> resources;\n+\n+    public PropagationTargetsTO() {\n+        super();\n+\n+        this.resources = new HashSet<String>();\n+    }\n+\n+    @XmlElementWrapper(name = \"resources\")\n+    @XmlElement(name = \"resource\")\n+    @JsonProperty(\"resources\")\n+    public Set<String> getResources() {\n+        return resources;\n+    }\n+}"},{"sha":"e1038c07e23dffc949587ca25e8923a99557adf8","filename":"console/src/main/java/org/apache/syncope/console/commons/ActionTableCheckGroup.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FActionTableCheckGroup.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.console.commons;\n+\n+import java.util.Collection;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+\n+public class ActionTableCheckGroup<T> extends CheckGroup<T> {\n+\n+    private static final long serialVersionUID = 1288270558573401394L;\n+\n+    public ActionTableCheckGroup(String id,\n+            Collection<T> collection) {\n+        super(id, collection);\n+    }\n+\n+    public boolean isCheckable(final T element) {\n+        return true;\n+    }\n+}"},{"sha":"24c9426b7e5208fdf94c748841dc4909e7605112","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusBean.java","status":"modified","additions":23,"deletions":5,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusBean.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -21,17 +21,31 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.to.UserTO;\n \n public class StatusBean implements Serializable {\n \n     private static final long serialVersionUID = -5207260204921071129L;\n \n-    private String resourceName = null;\n+    private final Long attributableId;\n+\n+    private final String attributableName;\n+\n+    private final String resourceName;\n \n     private String accountLink = null;\n \n     private StatusUtils.Status status = StatusUtils.Status.OBJECT_NOT_FOUND;\n \n+    public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n+        this.attributableId = attributable.getId();\n+        this.attributableName = attributable instanceof UserTO\n+                ? ((UserTO) attributable).getUsername() : ((RoleTO) attributable).getName();\n+        this.resourceName = resourceName;\n+    }\n+\n     public String getAccountLink() {\n         return accountLink;\n     }\n@@ -44,10 +58,6 @@ public String getResourceName() {\n         return resourceName;\n     }\n \n-    public void setResourceName(final String resourceName) {\n-        this.resourceName = resourceName;\n-    }\n-\n     public StatusUtils.Status getStatus() {\n         return status;\n     }\n@@ -56,6 +66,14 @@ public void setStatus(final StatusUtils.Status status) {\n         this.status = status;\n     }\n \n+    public Long getAttributableId() {\n+        return attributableId;\n+    }\n+\n+    public String getAttributableName() {\n+        return attributableName;\n+    }\n+\n     @Override\n     public String toString() {\n         return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);"},{"sha":"3034482ad66f47629c1d235b9a47936828aab102","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":254,"deletions":19,"changes":273,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -22,23 +22,36 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.LinkedHashMap;\n+import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n+import org.apache.syncope.common.to.PropagationTargetsTO;\n+import org.apache.syncope.console.pages.panels.ImagePanel;\n import org.apache.syncope.console.pages.panels.StatusPanel;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n public class StatusUtils implements Serializable {\n \n     private static final long serialVersionUID = 7238009174387184309L;\n \n+    public static final String IMG_STATUES = \"../statuses/\";\n+\n     public enum Status {\n \n         NOT_YET_SUBMITTED(\"\"),\n@@ -75,32 +88,57 @@ public StatusUtils(final AbstractAttributableRestClient restClient) {\n         this.restClient = restClient;\n     }\n \n-    public Map<String, ConnObjectTO> getConnectorObjects(final AbstractAttributableTO attributable) {\n-        final Map<String, ConnObjectTO> objects = new HashMap<String, ConnObjectTO>();\n+    public List<ConnObjectWrapper> getConnectorObjects(final Collection<AbstractAttributableTO> attributables) {\n+        final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n+\n+        for (AbstractAttributableTO attributableTO : attributables) {\n+            objects.addAll(getConnectorObjects(attributableTO, attributableTO.getResources()));\n+        }\n+\n+        return objects;\n+    }\n+\n+    public List<ConnObjectWrapper> getConnectorObjects(\n+            final Collection<AbstractAttributableTO> attributables, final Collection<String> resources) {\n+        final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n+\n+        for (AbstractAttributableTO attributableTO : attributables) {\n+            objects.addAll(getConnectorObjects(attributableTO, resources));\n+        }\n+\n+        return objects;\n+    }\n+\n+    private List<ConnObjectWrapper> getConnectorObjects(\n+            final AbstractAttributableTO attributableTO, final Collection<String> resources) {\n+        final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n \n-        for (String resouceName : attributable.getResources()) {\n+        for (String resourceName : resources) {\n             ConnObjectTO objectTO = null;\n             try {\n-                objectTO = restClient.getConnectorObject(resouceName, attributable.getId());\n+                objectTO = restClient.getConnectorObject(resourceName, attributableTO.getId());\n             } catch (Exception e) {\n-                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributable.getId(), resouceName);\n+                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributableTO.getId(), resourceName);\n             }\n \n-            objects.put(resouceName, objectTO);\n+            objects.add(new ConnObjectWrapper(attributableTO, resourceName, objectTO));\n         }\n \n         return objects;\n     }\n \n-    public StatusBean getStatusBean(final String resourceName, final ConnObjectTO objectTO) {\n-        final StatusBean statusBean = new StatusBean();\n-        statusBean.setResourceName(resourceName);\n+    public StatusBean getStatusBean(\n+            final AbstractAttributableTO attributable,\n+            final String resourceName,\n+            final ConnObjectTO objectTO,\n+            final boolean isRole) {\n+        final StatusBean statusBean = new StatusBean(attributable, resourceName);\n \n         if (objectTO != null) {\n             final Boolean enabled = isEnabled(objectTO);\n \n             final StatusUtils.Status status = enabled == null\n-                    ? StatusUtils.Status.UNDEFINED\n+                    ? (isRole ? StatusUtils.Status.ACTIVE : StatusUtils.Status.UNDEFINED)\n                     : enabled\n                     ? StatusUtils.Status.ACTIVE\n                     : StatusUtils.Status.SUSPENDED;\n@@ -161,23 +199,37 @@ public static PropagationRequestTO buildPropagationRequestTO(final Collection<St\n         return propagationRequestTO;\n     }\n \n-    public static void update(final StatusPanel statusPanel, final AjaxRequestTarget target,\n-            final Collection<String> resourcesToAdd, final Collection<String> resourcesToRemove) {\n+    public static PropagationTargetsTO buildPropagationTargetsTO(final Collection<StatusBean> statuses) {\n+\n+        final PropagationTargetsTO propagationTargetsTO = new PropagationTargetsTO();\n+\n+        for (StatusBean status : statuses) {\n+            propagationTargetsTO.getResources().add(status.getResourceName());\n+        }\n+\n+        return propagationTargetsTO;\n+    }\n+\n+    public static void update(\n+            final AbstractAttributableTO attributable,\n+            final StatusPanel statusPanel,\n+            final AjaxRequestTarget target,\n+            final Collection<String> resourcesToAdd,\n+            final Collection<String> resourcesToRemove) {\n \n         if (statusPanel != null) {\n             Map<String, StatusBean> statusMap = new LinkedHashMap<String, StatusBean>();\n             for (StatusBean statusBean : statusPanel.getStatusBeans()) {\n                 statusMap.put(statusBean.getResourceName(), statusBean);\n             }\n \n-            for (String resource : resourcesToAdd) {\n-                if (!statusMap.keySet().contains(resource)) {\n+            for (String resourceName : resourcesToAdd) {\n+                if (!statusMap.keySet().contains(resourceName)) {\n                     StatusBean statusBean;\n-                    if (statusPanel.getInitialStatusBeanMap().containsKey(resource)) {\n-                        statusBean = statusPanel.getInitialStatusBeanMap().get(resource);\n+                    if (statusPanel.getInitialStatusBeanMap().containsKey(resourceName)) {\n+                        statusBean = statusPanel.getInitialStatusBeanMap().get(resourceName);\n                     } else {\n-                        statusBean = new StatusBean();\n-                        statusBean.setResourceName(resource);\n+                        statusBean = new StatusBean(attributable, resourceName);\n                         statusBean.setStatus(StatusUtils.Status.NOT_YET_SUBMITTED);\n                     }\n \n@@ -193,4 +245,187 @@ public static void update(final StatusPanel statusPanel, final AjaxRequestTarget\n             target.add(statusPanel);\n         }\n     }\n+\n+    public ConnObjectTO getConnObjectTO(\n+            final Long attributableId, final String resourceName, final List<ConnObjectWrapper> objects) {\n+\n+        for (ConnObjectWrapper object : objects) {\n+            if (attributableId.equals(object.getAttributable())\n+                    && resourceName.equalsIgnoreCase(object.getResourceName())) {\n+                return object.getConnObjectTO();\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    public Image getStatusImage(final String componentId, final Status status) {\n+        final String alt, title, statusName;\n+\n+        switch (status) {\n+\n+            case NOT_YET_SUBMITTED:\n+                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Not yet submitted\";\n+                break;\n+\n+            case ACTIVE:\n+                statusName = StatusUtils.Status.ACTIVE.toString();\n+                alt = \"active icon\";\n+                title = \"Enabled\";\n+                break;\n+\n+            case UNDEFINED:\n+                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Undefined status\";\n+                break;\n+\n+            case OBJECT_NOT_FOUND:\n+                statusName = StatusUtils.Status.OBJECT_NOT_FOUND.toString();\n+                alt = \"notfound icon\";\n+                title = \"Not found\";\n+                break;\n+\n+            default:\n+                statusName = StatusUtils.Status.SUSPENDED.toString();\n+                alt = \"inactive icon\";\n+                title = \"Disabled\";\n+        }\n+\n+        final Image img = new Image(componentId, IMG_STATUES + statusName + Constants.PNG_EXT);\n+\n+        img.add(new Behavior() {\n+\n+            private static final long serialVersionUID = 1469628524240283489L;\n+\n+            @Override\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                tag.put(\"alt\", alt);\n+                tag.put(\"title\", title);\n+            }\n+        });\n+\n+        return img;\n+    }\n+\n+    public ImagePanel getStatusImagePanel(final String componentId, final Status status) {\n+        final String alt, title, statusName;\n+\n+        switch (status) {\n+\n+            case NOT_YET_SUBMITTED:\n+                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Not yet submitted\";\n+                break;\n+\n+            case ACTIVE:\n+                statusName = StatusUtils.Status.ACTIVE.toString();\n+                alt = \"active icon\";\n+                title = \"Enabled\";\n+                break;\n+\n+            case UNDEFINED:\n+                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Undefined status\";\n+                break;\n+\n+            case OBJECT_NOT_FOUND:\n+                statusName = StatusUtils.Status.OBJECT_NOT_FOUND.toString();\n+                alt = \"notfound icon\";\n+                title = \"Not found\";\n+                break;\n+\n+            default:\n+                statusName = StatusUtils.Status.SUSPENDED.toString();\n+                alt = \"inactive icon\";\n+                title = \"Disabled\";\n+        }\n+\n+        final ImagePanel imagePanel = new ImagePanel(componentId, IMG_STATUES + statusName + Constants.PNG_EXT);\n+        imagePanel.add(new Behavior() {\n+\n+            private static final long serialVersionUID = 1469628524240283489L;\n+\n+            @Override\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                tag.put(\"alt\", alt);\n+                tag.put(\"title\", title);\n+            }\n+        });\n+\n+        return imagePanel;\n+    }\n+\n+    public static class ConnObjectWrapper {\n+\n+        private final AbstractAttributableTO attributable;\n+\n+        private final String resourceName;\n+\n+        private final ConnObjectTO connObjectTO;\n+\n+        public ConnObjectWrapper(AbstractAttributableTO attributable, String resourceName, ConnObjectTO connObjectTO) {\n+            this.attributable = attributable;\n+            this.resourceName = resourceName;\n+            this.connObjectTO = connObjectTO;\n+        }\n+\n+        public AbstractAttributableTO getAttributable() {\n+            return attributable;\n+        }\n+\n+        public String getResourceName() {\n+            return resourceName;\n+        }\n+\n+        public ConnObjectTO getConnObjectTO() {\n+            return connObjectTO;\n+        }\n+    }\n+\n+    public static abstract class StatusBeanProvider extends SortableDataProvider<StatusBean, String> {\n+\n+        private static final long serialVersionUID = 4287357360778016173L;\n+\n+        private SortableDataProviderComparator<StatusBean> comparator;\n+\n+        public StatusBeanProvider(final String sort) {\n+            //Default sorting\n+            setSort(sort, SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<StatusBean>(this);\n+        }\n+\n+        @Override\n+        public Iterator<StatusBean> iterator(final long first, final long count) {\n+            List<StatusBean> list = getStatusBeans();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return getStatusBeans().size();\n+        }\n+\n+        @Override\n+        public IModel<StatusBean> model(final StatusBean resource) {\n+            return new AbstractReadOnlyModel<StatusBean>() {\n+\n+                private static final long serialVersionUID = -7802635613997243712L;\n+\n+                @Override\n+                public StatusBean getObject() {\n+                    return resource;\n+                }\n+            };\n+        }\n+\n+        public abstract List<StatusBean> getStatusBeans();\n+    }\n }"},{"sha":"0cc55626d3b7a7627103c03d08ae5a576f258c8e","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractBasePage.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.rest.ReportRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n+import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n@@ -63,15 +64,18 @@ public class AbstractBasePage extends WebPage {\n     @SpringBean\n     protected UserRestClient userRestClient;\n \n+    @SpringBean\n+    protected RoleRestClient roleRestClient;\n+\n     @SpringBean\n     protected TaskRestClient taskRestClient;\n-    \n+\n     @SpringBean\n     protected SchemaRestClient schemaRestClient;\n-    \n+\n     @SpringBean\n     protected ResourceRestClient resourceRestClient;\n-    \n+\n     @SpringBean\n     protected ReportRestClient reportRestClient;\n "},{"sha":"d78ee9db7c4dd0759df1f5df714ffdabade03de4","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractStatusModlaPage.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.console.pages;\n+\n+public class AbstractStatusModlaPage extends BaseModalPage {\n+\n+    protected static final long serialVersionUID = 6633408683036028540L;\n+\n+}"},{"sha":"acec48e55ca7adb641bbee230b89d58ef27bd2e1","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"added","additions":247,"deletions":0,"changes":247,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,247 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import org.apache.syncope.common.search.NodeCond;\n+import org.apache.syncope.common.search.ResourceCond;\n+import org.apache.syncope.common.services.InvalidSearchConditionException;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.common.to.BulkAssociationAction;\n+import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.commons.StatusBean;\n+import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n+import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class ProvisioningModalPage<T extends AbstractAttributableTO> extends AbstractStatusModlaPage {\n+\n+    private static final long serialVersionUID = 4114026480146090961L;\n+\n+    private final ResourceTO resourceTO;\n+\n+    private final Class<? extends AbstractAttributableTO> typeRef;\n+\n+    private final PageReference pageRef;\n+\n+    private final ModalWindow window;\n+\n+    private int rowsPerPage = 25;\n+\n+    private final StatusUtils statusUtils;\n+\n+    public ProvisioningModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final ResourceTO resourceTO,\n+            final Class<T> typeRef) {\n+\n+        super();\n+\n+        this.pageRef = pageRef;\n+        this.window = window;\n+        this.resourceTO = resourceTO;\n+        this.typeRef = typeRef;\n+\n+        statusUtils = new StatusUtils((UserTO.class.isAssignableFrom(typeRef) ? userRestClient : roleRestClient));\n+\n+        final List<IColumn<StatusBean, String>> columns = new ArrayList<IColumn<StatusBean, String>>();\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"id\", this, null, \"Attributable id\"), \"attributableId\", \"attributableId\"));\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"name\", this, null, \"Attributable name\"), \"attributableName\", \"attributableName\"));\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\", \"resourceName\"));\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"accountLink\", this, null, \"Account link\"), \"accountLink\", \"accountLink\"));\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"status\", this, null, \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+                cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+            }\n+        });\n+\n+        final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n+                \"resourceDatatable\",\n+                columns,\n+                (ISortableDataProvider<StatusBean, String>) new StatusBeanProvider(),\n+                rowsPerPage,\n+                pageRef);\n+\n+        final String pageId = \"Resources\";\n+\n+        table.addAction(new ActionLink() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    bulkAssociationAction(target, BulkAssociationAction.Type.UNLINK, table, columns);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error unlinkink resources\", e);\n+                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n+            }\n+        }, ActionLink.ActionType.UNLINK, pageId);\n+\n+        table.addAction(new ActionLink() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    bulkAssociationAction(target, BulkAssociationAction.Type.DEPROVISION, table, columns);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error de-provisioning user\", e);\n+                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n+            }\n+        }, ActionLink.ActionType.DEPROVISION, pageId);\n+\n+        table.addAction(new ActionLink() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    bulkAssociationAction(target, BulkAssociationAction.Type.UNASSIGN, table, columns);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error unassigning resources\", e);\n+                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n+            }\n+        }, ActionLink.ActionType.UNASSIGN, pageId);\n+\n+        table.addCancelButton(window);\n+\n+        add(table);\n+    }\n+\n+    private class StatusBeanProvider extends StatusUtils.StatusBeanProvider {\n+\n+        private static final long serialVersionUID = 4287357360778016173L;\n+\n+        public StatusBeanProvider() {\n+            super(\"accountLink\");\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<StatusBean> getStatusBeans() {\n+            final ResourceCond res = new ResourceCond();\n+            res.setResourceName(resourceTO.getName());\n+\n+            final List<T> attributables = new ArrayList<T>();\n+\n+            try {\n+                if (UserTO.class.isAssignableFrom(typeRef)) {\n+                    attributables.addAll((List<T>) userRestClient.search(NodeCond.getLeafCond(res), 0, rowsPerPage));\n+                } else {\n+                    attributables.addAll((List<T>) roleRestClient.search(NodeCond.getLeafCond(res), 0, rowsPerPage));\n+                }\n+            } catch (InvalidSearchConditionException e) {\n+                LOG.warn(\"Invalid serach condition {}\", res, e);\n+            }\n+\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(\n+                    (List<AbstractAttributableTO>) attributables, Collections.<String>singleton(resourceTO.getName()));\n+\n+            final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n+            final LinkedHashMap<String, StatusBean> initialStatusBeanMap =\n+                    new LinkedHashMap<String, StatusBean>(connObjects.size());\n+\n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(\n+                        entry.getAttributable(),\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        RoleTO.class.isAssignableFrom(typeRef));\n+\n+                initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n+                statusBeans.add(statusBean);\n+            }\n+\n+            return statusBeans;\n+        }\n+    }\n+\n+    private void bulkAssociationAction(\n+            final AjaxRequestTarget target,\n+            final BulkAssociationAction.Type type,\n+            final ActionDataTablePanel<StatusBean, String> table,\n+            final List<IColumn<StatusBean, String>> columns) {\n+        final BulkAssociationAction bulkAction = new BulkAssociationAction();\n+        bulkAction.setOperation(type);\n+\n+        final List<StatusBean> beans = new ArrayList<StatusBean>(table.getModelObject());\n+        for (StatusBean bean : beans) {\n+            LOG.debug(\"Selected bean {}\", bean);\n+            bulkAction.addTarget(bean.getAttributableId());\n+        }\n+\n+        if (!beans.isEmpty()) {\n+            final BulkActionRes res =\n+                    resourceRestClient.bulkAssociationAction(resourceTO.getName(), bulkAction, typeRef);\n+\n+            ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+            setResponsePage(new BulkActionResultModalPage<StatusBean, String>(\n+                    window, beans, columns, res, \"attributableId\"));\n+        } else {\n+            window.close(target);\n+        }\n+    }\n+}"},{"sha":"f38d6c84d87964004c022bca81e39586057f0cc5","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -68,7 +68,7 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n         //--------------------------------\n         form.add(new ResourceDetailsPanel(\"details\", resourceTO,\n                 resourceRestClient.getPropagationActionsClasses(), createFlag));\n-        \n+\n         form.add(new SysInfoPanel(\"systeminformation\", resourceTO));\n         //--------------------------------\n "},{"sha":"32d83c5008cc5235b890174776a944e48d43b300","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":82,"deletions":10,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -25,6 +25,8 @@\n import java.util.List;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n@@ -98,6 +100,21 @@ public class Resources extends BasePage {\n \n     private int connectorPaginatorRows;\n \n+    /**\n+     * Modal window to be used for user status management.\n+     */\n+    protected final ModalWindow statusmodal = new ModalWindow(\"statusModal\");\n+\n+    /**\n+     * Schemas to be shown modal window height.\n+     */\n+    private final static int STATUS_MODAL_WIN_HEIGHT = 500;\n+\n+    /**\n+     * Schemas to be shown modal window width.\n+     */\n+    private final static int STATUS_MODAL_WIN_WIDTH = 700;\n+\n     public Resources(final PageParameters parameters) {\n         super(parameters);\n \n@@ -106,6 +123,12 @@ public Resources(final PageParameters parameters) {\n         add(createConnectorWin = new ModalWindow(\"createConnectorWin\"));\n         add(editConnectorWin = new ModalWindow(\"editConnectorWin\"));\n \n+        statusmodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        statusmodal.setInitialHeight(STATUS_MODAL_WIN_HEIGHT);\n+        statusmodal.setInitialWidth(STATUS_MODAL_WIN_WIDTH);\n+        statusmodal.setCookieName(\"status-modal\");\n+        add(statusmodal);\n+\n         AjaxLink<Void> reloadLink = new ClearIndicatingAjaxLink<Void>(\"reloadLink\", getPageReference()) {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n@@ -153,7 +176,8 @@ public CharSequence getPrecondition(final Component component) {\n     private void setupResources() {\n         List<IColumn<ResourceTO, String>> columns = new ArrayList<IColumn<ResourceTO, String>>();\n \n-        columns.add(new PropertyColumn(new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n+        columns.add(\n+                new PropertyColumn<ResourceTO, String>(new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n \n         columns.add(new AbstractColumn<ResourceTO, String>(\n                 new StringResourceModel(\"connector\", this, null, \"connector\")) {\n@@ -197,9 +221,9 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new PropertyColumn(new StringResourceModel(\n+        columns.add(new PropertyColumn<ResourceTO, String>(new StringResourceModel(\n                 \"propagationPrimary\", this, null), \"propagationPrimary\", \"propagationPrimary\"));\n-        columns.add(new PropertyColumn(new StringResourceModel(\n+        columns.add(new PropertyColumn<ResourceTO, String>(new StringResourceModel(\n                 \"propagationPriority\", this, null), \"propagationPriority\", \"propagationPriority\"));\n \n         columns.add(new AbstractColumn<ResourceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n@@ -218,6 +242,51 @@ public void populateItem(final Item<ICellPopulator<ResourceTO>> cellItem, final\n \n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n \n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new ProvisioningModalPage<UserTO>(\n+                                        getPageReference(), statusmodal, model.getObject(), UserTO.class);\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_USERS, \"Resources\");\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new ProvisioningModalPage<RoleTO>(\n+                                        getPageReference(), statusmodal, model.getObject(), RoleTO.class);\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_ROLES, \"Resources\");\n+\n+\n                 panel.add(new ActionLink() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n@@ -349,15 +418,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     private void setupConnectors() {\n         List<IColumn<ConnInstanceTO, String>> columns = new ArrayList<IColumn<ConnInstanceTO, String>>();\n \n-        columns.add(new PropertyColumn(\n+        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n                 new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n-        columns.add(new PropertyColumn(\n+        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n                 new StringResourceModel(\"name\", this, null), \"connectorName\", \"connectorName\"));\n-        columns.add(new PropertyColumn(\n+        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n                 new StringResourceModel(\"displayName\", this, null), \"displayName\", \"displayName\"));\n-        columns.add(new PropertyColumn(\n+        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n                 new StringResourceModel(\"bundleName\", this, null), \"bundleName\", \"bundleName\"));\n-        columns.add(new PropertyColumn(\n+        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n                 new StringResourceModel(\"version\", this, null), \"version\", \"version\"));\n         columns.add(new AbstractColumn<ConnInstanceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n@@ -486,8 +555,11 @@ public Page createPage() {\n         MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n                 \"Connectors\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n-                \"connectorPaginatorRows\"), prefMan.getPaginatorChoices());\n+        final DropDownChoice<Integer> rowsChooser = new DropDownChoice<Integer>(\n+                \"rowsChooser\",\n+                new PropertyModel<Integer>(this,\n+                \"connectorPaginatorRows\"),\n+                prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n "},{"sha":"901ad8f5b39fc4047cfb8df7a6c48708271cbd26","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -381,7 +381,8 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n     private Fragment getStatusIcon(final String id, final String resourceName, final ConnObjectTO objectTO) {\n         final Image image;\n         final String alt, title;\n-        switch (statusUtils.getStatusBean(resourceName, objectTO).getStatus()) {\n+        switch (statusUtils.getStatusBean(\n+                attributable, resourceName, objectTO, this.attributable instanceof RoleTO).getStatus()) {\n \n             case ACTIVE:\n                 image = new Image(\"status\", IMG_STATUSES + StatusUtils.Status.ACTIVE.toString()"},{"sha":"f9eed53ddcb0ec54ccf1b0a13c9f952e2d7647e5","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":213,"deletions":57,"changes":270,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -18,51 +18,138 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import static org.apache.syncope.console.pages.AbstractBasePage.LOG;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.pages.panels.StatusPanel;\n+import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n+import org.apache.syncope.console.commons.StatusUtils.Status;\n+import org.apache.syncope.console.commons.StatusUtils.StatusBeanProvider;\n+import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.StringResourceModel;\n \n-public class StatusModalPage extends BaseModalPage {\n+public class StatusModalPage<T extends AbstractAttributableTO> extends AbstractStatusModlaPage {\n \n     private static final long serialVersionUID = 4114026480146090961L;\n \n-    public StatusModalPage(final PageReference pageRef, final ModalWindow window,\n-            final AbstractAttributableTO attributable) {\n+    private final AbstractAttributableTO attributableTO;\n+\n+    private int rowsPerPage = 25;\n+\n+    final StatusUtils statusUtils;\n+\n+    final boolean statusOnly;\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AbstractAttributableTO attributableTO) {\n+        this(pageRef, window, attributableTO, false);\n+    }\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AbstractAttributableTO attributableTO,\n+            final boolean statusOnly) {\n \n         super();\n \n-        final Form form = new Form(FORM);\n-        add(form);\n+        this.statusOnly = statusOnly;\n+        this.attributableTO = attributableTO;\n+\n+        statusUtils = new StatusUtils(attributableTO instanceof UserTO ? userRestClient : roleRestClient);\n+\n+        final List<IColumn<StatusBean, String>> columns = new ArrayList<IColumn<StatusBean, String>>();\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\", \"resourceName\"));\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"accountLink\", this, null, \"Account link\"), \"accountLink\", \"accountLink\"));\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"status\", this, null, \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+            }\n+        });\n+\n+        final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n+                \"resourceDatatable\",\n+                columns,\n+                (ISortableDataProvider<StatusBean, String>) new AttributableStatusProvider(),\n+                rowsPerPage,\n+                pageRef) {\n+\n+            private static final long serialVersionUID = 6510391461033818316L;\n+\n+            @Override\n+            public boolean isElementEnabled(final StatusBean element) {\n+                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+            }\n+        };\n+\n+        final String pageId = attributableTO instanceof RoleTO ? \"Roles\" : \"Users\";\n \n-        final List<StatusBean> statuses = new ArrayList<StatusBean>();\n+        if (statusOnly) {\n+            table.addAction(new ActionLink() {\n \n-        final StatusPanel statusPanel = new StatusPanel(\"statuspanel\", attributable, statuses, null);\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                statusPanel, RENDER, xmlRolesReader.getAllAllowedRoles(\"Resources\", \"getConnectorObject\"));\n-        form.add(statusPanel);\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n-        final AjaxButton disable;\n-        if (attributable instanceof UserTO) {\n-            disable = new IndicatingAjaxButton(\"disable\", new ResourceModel(\"disable\", \"Disable\")) {\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        userRestClient.reactivate(\n+                                attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n-                private static final long serialVersionUID = -958724007591692537L;\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error enabling resources\", e);\n+                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        target.add(feedbackPanel);\n+                    }\n+                }\n+            }, ActionLink.ActionType.REACTIVATE, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n+                public void onClick(final AjaxRequestTarget target) {\n                     try {\n-                        userRestClient.suspend(attributable.getId(), statuses);\n+                        userRestClient.suspend(\n+                                attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n \n                         if (pageRef.getPage() instanceof BasePage) {\n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -75,69 +162,138 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                         target.add(feedbackPanel);\n                     }\n                 }\n+            }, ActionLink.ActionType.SUSPEND, pageId);\n+        } else {\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                    target.add(feedbackPanel);\n-                }\n-            };\n-        } else {\n-            disable = new AjaxButton(\"disable\") {\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        if (attributableTO instanceof UserTO) {\n+                            userRestClient.unlink(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        } else {\n+                            roleRestClient.unlink(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        }\n \n-                private static final long serialVersionUID = 5538299138211283825L;\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n \n-            };\n-            disable.setVisible(false);\n-        }\n-        form.add(disable);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unlinkink resources\", e);\n+                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        target.add(feedbackPanel);\n+                    }\n+                }\n+            }, ActionLink.ActionType.UNLINK, pageId);\n \n-        final AjaxButton enable;\n-        if (attributable instanceof UserTO) {\n-            enable = new IndicatingAjaxButton(\"enable\", new ResourceModel(\"enable\", \"Enable\")) {\n+            table.addAction(new ActionLink() {\n \n-                private static final long serialVersionUID = -958724007591692537L;\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                public void onClick(final AjaxRequestTarget target) {\n                     try {\n-                        userRestClient.reactivate(attributable.getId(), statuses);\n+                        if (attributableTO instanceof UserTO) {\n+                            userRestClient.deprovision(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        } else {\n+                            roleRestClient.deprovision(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n \n                         window.close(target);\n                     } catch (Exception e) {\n-                        LOG.error(\"Error enabling resources\", e);\n+                        LOG.error(\"Error de-provisioning user\", e);\n                         error(getString(Constants.ERROR) + \":\" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n+            }, ActionLink.ActionType.DEPROVISION, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        if (attributableTO instanceof UserTO) {\n+                            userRestClient.unassign(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        } else {\n+                            roleRestClient.unassign(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n \n-                    target.add(feedbackPanel);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unassigning resources\", e);\n+                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        target.add(feedbackPanel);\n+                    }\n                 }\n-            };\n-        } else {\n-            enable = new AjaxButton(\"enable\") {\n+            }, ActionLink.ActionType.UNASSIGN, pageId);\n+        }\n+\n+        table.addCancelButton(window);\n+\n+        add(table);\n+    }\n \n-                private static final long serialVersionUID = 5538299138211283825L;\n+    class AttributableStatusProvider extends StatusBeanProvider {\n \n-            };\n-            enable.setVisible(false);\n+        private static final long serialVersionUID = 4586969457669796621L;\n+\n+        public AttributableStatusProvider() {\n+            super(\"resourceName\");\n         }\n-        form.add(enable);\n \n-        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<StatusBean> getStatusBeans() {\n \n-            private static final long serialVersionUID = -958724007591692537L;\n+            final List<ConnObjectWrapper> connObjects =\n+                    statusUtils.getConnectorObjects(Collections.<AbstractAttributableTO>singleton(attributableTO));\n \n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n-                window.close(target);\n+            final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n+\n+            if (statusOnly) {\n+                final StatusBean syncope = new StatusBean(attributableTO, \"Syncope\");\n+\n+                syncope.setAccountLink(((UserTO) attributableTO).getUsername());\n+\n+                Status syncopeStatus = Status.UNDEFINED;\n+                if (((UserTO) attributableTO).getStatus() != null) {\n+                    try {\n+                        syncopeStatus = Status.valueOf(((UserTO) attributableTO).getStatus().toUpperCase());\n+                    } catch (IllegalArgumentException e) {\n+                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) attributableTO).getStatus(), e);\n+                    }\n+                }\n+                syncope.setStatus(syncopeStatus);\n+\n+                statusBeans.add(syncope);\n             }\n-        };\n-        cancel.setDefaultFormProcessing(false);\n-        form.add(cancel);\n+\n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(\n+                        entry.getAttributable(),\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        attributableTO instanceof RoleTO);\n+\n+                statusBeans.add(statusBean);\n+            }\n+\n+            return statusBeans;\n+        }\n     }\n }"},{"sha":"5dc0f44ba5a3309086ca2165d528c2c90f6eb773","filename":"console/src/main/java/org/apache/syncope/console/pages/TaskModalPage.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -67,16 +67,16 @@ public abstract class TaskModalPage extends BaseModalPage {\n \n     protected WebMarkupContainer executions;\n \n-    protected Form form;\n+    protected Form<AbstractTaskTO> form;\n \n     public TaskModalPage(final AbstractTaskTO taskTO) {\n         final ModalWindow taskExecMessageWin = new ModalWindow(\"taskExecMessageWin\");\n         taskExecMessageWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         taskExecMessageWin.setCookieName(\"task-exec-message-win-modal\");\n         add(taskExecMessageWin);\n \n-        form = new Form(FORM);\n-        form.setModel(new CompoundPropertyModel(taskTO));\n+        form = new Form<AbstractTaskTO>(FORM);\n+        form.setModel(new CompoundPropertyModel<AbstractTaskTO>(taskTO));\n         add(form);\n \n         profile = new WebMarkupContainer(\"profile\");\n@@ -96,17 +96,17 @@ public TaskModalPage(final AbstractTaskTO taskTO) {\n         id.setEnabled(false);\n         profile.add(id);\n \n-        final List<IColumn> columns = new ArrayList<IColumn>();\n+        final List<IColumn<TaskExecTO, String>> columns = new ArrayList<IColumn<TaskExecTO, String>>();\n \n         final int paginatorRows = 10;\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n+        columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n \n-        columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n+        columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"status\"), \"status\", \"status\"));\n+        columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"status\"), \"status\", \"status\"));\n \n         columns.add(new ActionColumn<TaskExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n@@ -173,8 +173,8 @@ public Component getHeader(final String componentId) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         if (target != null) {\n-                            final AjaxFallbackDefaultDataTable currentTable =\n-                                    new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n+                            final AjaxFallbackDefaultDataTable<TaskExecTO, String> currentTable =\n+                                    new AjaxFallbackDefaultDataTable<TaskExecTO, String>(\"executionsTable\", columns,\n                                     new TaskExecutionsProvider(getCurrentTaskExecution(taskTO)), paginatorRows);\n                             currentTable.setOutputMarkupId(true);\n                             target.add(currentTable);\n@@ -187,7 +187,8 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n+        final AjaxFallbackDefaultDataTable<TaskExecTO, String> table =\n+                new AjaxFallbackDefaultDataTable<TaskExecTO, String>(\"executionsTable\", columns,\n                 new TaskExecutionsProvider(getCurrentTaskExecution(taskTO)), paginatorRows);\n \n         executions.add(table);"},{"sha":"f21361bf3faee65ee95967016314eff9154a98a7","filename":"console/src/main/java/org/apache/syncope/console/pages/Tasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -151,7 +151,7 @@ public TasksProvider(\n         public Iterator<T> iterator(final long first, final long count) {\n             final List<T> tasks = new ArrayList<T>();\n \n-            for (T task : (List<T>) restClient.listTasks(reference, ((int) first / paginatorRows) + 1, paginatorRows)) {\n+            for (T task : restClient.listTasks(reference, ((int) first / paginatorRows) + 1, paginatorRows)) {\n \n                 if (task instanceof SchedTaskTO && ((SchedTaskTO) task).getLastExec() == null\n                         && task.getExecutions() != null && !task.getExecutions().isEmpty()) {\n@@ -197,7 +197,7 @@ public IModel<T> model(final T object) {\n      */\n     public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n             final List<IColumn<AbstractTaskTO, String>> columns,\n-            final TasksProvider dataProvider,\n+            final TasksProvider<? extends AbstractTaskTO> dataProvider,\n             final WebMarkupContainer container,\n             final int currentPage,\n             final PageReference pageRef,\n@@ -208,8 +208,8 @@ public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n                 columns,\n                 (ISortableDataProvider<AbstractTaskTO, String>) dataProvider,\n                 dataProvider.paginatorRows,\n-                Arrays.asList(new ActionLink.ActionType[]{\n-                    ActionLink.ActionType.DELETE, ActionLink.ActionType.DRYRUN, ActionLink.ActionType.EXECUTE}),\n+                Arrays.asList(new ActionLink.ActionType[] {\n+            ActionLink.ActionType.DELETE, ActionLink.ActionType.DRYRUN, ActionLink.ActionType.EXECUTE}),\n                 restClient,\n                 \"id\",\n                 TASKS,"},{"sha":"f660d1eb99db38d02c7ecb6c110ade5183c9ebf0","filename":"console/src/main/java/org/apache/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -55,9 +55,9 @@ public void setSchemaModalPage(final PageReference pageRef, final ModalWindow wi\n             schema = new VirSchemaTO();\n         }\n \n-        final Form schemaForm = new Form(FORM);\n+        final Form<AbstractBaseBean> schemaForm = new Form<AbstractBaseBean>(FORM);\n \n-        schemaForm.setModel(new CompoundPropertyModel(schema));\n+        schemaForm.setModel(new CompoundPropertyModel<AbstractBaseBean>(schema));\n \n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n                 schema, \"name\"));"},{"sha":"821422ff428d50fa3150a96b1967cb0ce762be2b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -84,7 +84,7 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     /**\n      * Schemas to be shown modal window width.\n      */\n-    private final static int STATUS_MODAL_WIN_WIDTH = 500;\n+    private final static int STATUS_MODAL_WIN_WIDTH = 700;\n \n     /**\n      * Application preferences."},{"sha":"746e3aaaeed2d9bd4bc5250678f8bb865491926e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ActionDataTablePanel.java","status":"added","additions":184,"deletions":0,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.syncope.console.commons.ActionTableCheckGroup;\n+import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ActionDataTablePanel<T, S> extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(ActionDataTablePanel.class);\n+\n+    private static final long serialVersionUID = -8826989026203543957L;\n+\n+    private final CheckGroup<T> group;\n+\n+    private final Form bulkActionForm;\n+\n+    private final ActionLinksPanel actionPanel;\n+\n+    private final AjaxFallbackDefaultDataTable<T, S> dataTable;\n+\n+    private final PageReference pageRef;\n+\n+    private final String CANCEL = \"cancel\";\n+\n+    public ActionDataTablePanel(\n+            final String id,\n+            final List<IColumn<T, S>> columns,\n+            final ISortableDataProvider<T, S> dataProvider,\n+            final int rowsPerPage,\n+            final PageReference pageRef) {\n+\n+        super(id);\n+\n+        this.pageRef = pageRef;\n+\n+        bulkActionForm = new Form(\"groupForm\");\n+        add(bulkActionForm);\n+\n+        group = new ActionTableCheckGroup<T>(\"checkgroup\", new ArrayList<T>()) {\n+\n+            private static final long serialVersionUID = -8667764190925075389L;\n+\n+            @Override\n+            public boolean isCheckable(T element) {\n+                return isElementEnabled(element);\n+            }\n+        };\n+        bulkActionForm.add(group);\n+\n+        group.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                // ignore\n+            }\n+        });\n+\n+        columns.add(0, new CheckGroupColumn<T, S>(group));\n+        dataTable = new AjaxFallbackDefaultDataTable<T, S>(\"dataTable\", columns, dataProvider, rowsPerPage);\n+        group.add(dataTable);\n+\n+        final WebMarkupContainer actionPanelContainer = new WebMarkupContainer(\"actionPanelContainer\");\n+        bulkActionForm.add(actionPanelContainer);\n+\n+        actionPanel = new ActionLinksPanel(\"actions\", new Model(), pageRef);\n+        actionPanelContainer.add(actionPanel);\n+\n+        if (dataTable.getRowCount() == 0) {\n+            actionPanelContainer.add(new AttributeModifier(\"style\", \"display: none\"));\n+        }\n+\n+        bulkActionForm.add(new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818025L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // ignore\n+            }\n+        }.setVisible(false).setEnabled(false));\n+    }\n+\n+    public final void setCurrentPage(final long page) {\n+        dataTable.setCurrentPage(page);\n+    }\n+\n+    public final long getRowCount() {\n+        return dataTable.getRowCount();\n+    }\n+\n+    public final long getCurrentPage() {\n+        return dataTable.getCurrentPage();\n+    }\n+\n+    public final long getPageCount() {\n+        return dataTable.getPageCount();\n+    }\n+\n+    public void setItemsPerPage(final int resourcePaginatorRows) {\n+        dataTable.setItemsPerPage(resourcePaginatorRows);\n+    }\n+\n+    public void addAction(final ActionLink action, final ActionType type, final String pageId) {\n+        actionPanel.add(action, type, pageId);\n+    }\n+\n+    public void addAction(final ActionLink action, final ActionType type, final String pageId, final String actionId) {\n+        actionPanel.add(action, type, pageId, actionId);\n+    }\n+\n+    public void addAction(final ActionLink action, final ActionType type, final String pageId, final boolean enabled) {\n+        actionPanel.add(action, type, pageId, enabled);\n+    }\n+\n+    public void addCancelButton(final ModalWindow window) {\n+\n+        final AjaxButton cancel = new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818025L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+        };\n+\n+        cancel.setDefaultFormProcessing(false);\n+        bulkActionForm.addOrReplace(cancel);\n+    }\n+\n+    public Collection<T> getModelObject() {\n+        return group.getModelObject();\n+    }\n+\n+    public boolean isElementEnabled(final T element) {\n+        return true;\n+    }\n+}"},{"sha":"085845f51a02d12bc0516d99324b0979574a206a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ImagePanel.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,40 @@\n+package org.apache.syncope.console.pages.panels;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+public class ImagePanel extends Panel {\n+\n+    private static final long serialVersionUID = 5564818820574092960L;\n+\n+    final Image img;\n+\n+    public ImagePanel(final String id, final String img) {\n+        super(id);\n+        this.img = new Image(\"img\", img);\n+        add(this.img);\n+    }\n+\n+    @Override\n+    public Component add(Behavior... behaviors) {\n+        this.img.add(behaviors);\n+        return this;\n+    }\n+}"},{"sha":"98b782793efd25969547149d3c1dd878187f736d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.console.pages.MembershipModalPage;\n import org.apache.syncope.console.pages.UserModalPage;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingOnConfirmAjaxLink;\n import org.apache.syncope.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansion;\n import org.apache.syncope.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansionModel;\n import org.apache.syncope.console.wicket.markup.html.tree.TreeRoleProvider;\n@@ -182,7 +182,7 @@ public Page createPage() {\n                 };\n                 item.add(editLink);\n \n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n+                AjaxLink deleteLink = new IndicatingOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -206,7 +206,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                             resourcesToRemove.removeAll(userTO.getResources());\n                         }\n \n-                        StatusUtils.update(statusPanel, target, Collections.<String>emptySet(), resourcesToRemove);\n+                        StatusUtils.update(\n+                                userTO, statusPanel, target, Collections.<String>emptySet(), resourcesToRemove);\n                     }\n                 };\n                 item.add(deleteLink);\n@@ -236,7 +237,8 @@ public void onClose(final AjaxRequestTarget target) {\n                         long roleId = updatedUserTO.getMembershipMap().get(diffMembId).getRoleId();\n                         RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, roleId);\n                         resourcesToAdd.addAll(roleTO.getResources());\n-                        StatusUtils.update(statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n+                        StatusUtils.update(\n+                                userTO, statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n                     }\n                 }\n "},{"sha":"0e615be8ab9aaa03600acbd77b5492fad21d2749","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -169,7 +169,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                                 previousResources.clear();\n                                 previousResources.addAll(userTO.getResources());\n \n-                                StatusUtils.update(statusPanel, target, userTO.getResources(), resourcesToRemove);\n+                                StatusUtils.update(\n+                                        userTO, statusPanel, target, userTO.getResources(), resourcesToRemove);\n                             }\n                         }\n                     });"},{"sha":"f0616bfa8f9e050cbf8fd96eff085d38237ca5cd","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchResultPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -98,13 +98,14 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new StatusModalPage(page.getPageReference(), statusmodal, model.getObject());\n+                                return new StatusModalPage<RoleTO>(\n+                                        page.getPageReference(), statusmodal, (RoleTO) model.getObject());\n                             }\n                         });\n \n                         statusmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.SEARCH, PAGEID);\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, PAGEID);\n \n                 panel.add(new ActionLink() {\n "},{"sha":"4809c68f5606d57b47fc1ddf7d6cbb7dad4df99e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":50,"deletions":106,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n@@ -29,31 +30,26 @@\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.StatusBean;\n import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n import org.apache.syncope.console.commons.StatusUtils.Status;\n import org.apache.syncope.console.markup.html.list.AltListView;\n import org.apache.syncope.console.pages.ConnObjectModalPage;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.head.CssContentHeaderItem;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.html.IHeaderContributor;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Check;\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.CheckGroupSelector;\n-import org.apache.wicket.markup.html.image.Image;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -86,21 +82,23 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n \n     private final ModalWindow connObjectWin;\n \n-    private final AbstractAttributableTO attributable;\n-\n-    private final Map<String, ConnObjectTO> connObjects;\n+    private final List<ConnObjectWrapper> connObjects;\n \n     private final Map<String, StatusBean> initialStatusBeanMap;\n \n     private final CheckGroup<StatusBean> checkGroup;\n \n     private final ListView<StatusBean> statusBeansListView;\n \n-    public <T extends AbstractAttributableTO> StatusPanel(final String id, final AbstractAttributableTO attributable,\n-            final List<StatusBean> selectedResources, final PageReference pageref) {\n+    private final StatusUtils statusUtils;\n+\n+    public <T extends AbstractAttributableTO> StatusPanel(\n+            final String id,\n+            final AbstractAttributableTO attributable,\n+            final List<StatusBean> selectedResources,\n+            final PageReference pageref) {\n \n         super(id);\n-        this.attributable = attributable;\n \n         connObjectWin = new ModalWindow(\"connObjectWin\");\n         connObjectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n@@ -109,45 +107,57 @@ public <T extends AbstractAttributableTO> StatusPanel(final String id, final Abs\n         connObjectWin.setCookieName(\"connobject-modal\");\n         add(connObjectWin);\n \n-        final StatusBean syncope = new StatusBean();\n-        syncope.setResourceName(\"Syncope\");\n+        statusUtils = new StatusUtils(attributable instanceof RoleTO ? roleRestClient : userRestClient);\n+\n+        connObjects = statusUtils.getConnectorObjects(Collections.<AbstractAttributableTO>singleton(attributable));\n+\n+        final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n+        initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(connObjects.size() + 1);\n+\n+        final StatusBean syncope = new StatusBean(attributable, \"syncope\");\n+\n         if (attributable instanceof UserTO) {\n-            UserTO userTO = (UserTO) attributable;\n-            syncope.setAccountLink(userTO.getUsername());\n+            syncope.setAccountLink(((UserTO) attributable).getUsername());\n \n             Status syncopeStatus = Status.UNDEFINED;\n-            if (userTO.getStatus() != null) {\n+            if (((UserTO) attributable).getStatus() != null) {\n                 try {\n-                    syncopeStatus = Status.valueOf(userTO.getStatus().toUpperCase());\n+                    syncopeStatus = Status.valueOf(((UserTO) attributable).getStatus().toUpperCase());\n                 } catch (IllegalArgumentException e) {\n-                    LOG.warn(\"Unexpected status found: {}\", userTO.getStatus());\n+                    LOG.warn(\"Unexpected status found: {}\", ((UserTO) attributable).getStatus(), e);\n                 }\n             }\n             syncope.setStatus(syncopeStatus);\n-        }\n-        if (attributable instanceof RoleTO) {\n-            RoleTO roleTO = (RoleTO) attributable;\n-            syncope.setAccountLink(roleTO.getDisplayName());\n+        } else if (attributable instanceof RoleTO) {\n+            syncope.setAccountLink(((RoleTO) attributable).getDisplayName());\n             syncope.setStatus(Status.ACTIVE);\n         }\n \n-        StatusUtils statusUtils = new StatusUtils((attributable instanceof UserTO ? userRestClient : roleRestClient));\n-\n-        connObjects = statusUtils.getConnectorObjects(attributable);\n-\n-        List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n         statusBeans.add(syncope);\n-        initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(connObjects.size() + 1);\n         initialStatusBeanMap.put(syncope.getResourceName(), syncope);\n-        for (Map.Entry<String, ConnObjectTO> entry : connObjects.entrySet()) {\n-            final StatusBean statusBean = statusUtils.getStatusBean(entry.getKey(), entry.getValue());\n \n-            initialStatusBeanMap.put(entry.getKey(), statusBean);\n+        for (ConnObjectWrapper entry : connObjects) {\n+            final StatusBean statusBean = statusUtils.getStatusBean(\n+                    entry.getAttributable(),\n+                    entry.getResourceName(),\n+                    entry.getConnObjectTO(),\n+                    attributable instanceof RoleTO);\n+\n+            initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n             statusBeans.add(statusBean);\n         }\n \n         checkGroup = new CheckGroup<StatusBean>(\"group\", selectedResources);\n         checkGroup.setOutputMarkupId(true);\n+        checkGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                // ignore\n+            }\n+        });\n         add(checkGroup);\n \n         add(new CheckGroupSelector(\"groupselector\", checkGroup));\n@@ -158,59 +168,9 @@ public <T extends AbstractAttributableTO> StatusPanel(final String id, final Abs\n \n             @Override\n             protected void populateItem(final ListItem<StatusBean> item) {\n-                final Image image;\n-                final String alt, title;\n-                boolean checkVisibility = true;\n-\n-                switch (item.getModelObject().getStatus()) {\n-\n-                    case NOT_YET_SUBMITTED:\n-                        image = newImage(StatusUtils.Status.UNDEFINED.toString());\n-                        alt = \"undefined icon\";\n-                        title = \"Not yet submitted\";\n-                        break;\n-\n-                    case ACTIVE:\n-                        image = newImage(StatusUtils.Status.ACTIVE.toString());\n-                        alt = \"active icon\";\n-                        title = \"Enabled\";\n-                        break;\n-\n-                    case UNDEFINED:\n-                        image = newImage(StatusUtils.Status.UNDEFINED.toString());\n-                        checkVisibility = false;\n-                        alt = \"undefined icon\";\n-                        title = \"Undefined status\";\n-                        break;\n-\n-                    case OBJECT_NOT_FOUND:\n-                        image = newImage(StatusUtils.Status.OBJECT_NOT_FOUND.toString());\n-                        checkVisibility = false;\n-                        alt = \"notfound icon\";\n-                        title = \"User not found\";\n-                        break;\n-\n-                    default:\n-                        image = newImage(StatusUtils.Status.SUSPENDED.toString());\n-                        alt = \"inactive icon\";\n-                        title = \"Disabled\";\n-                }\n-\n-                image.add(new Behavior() {\n-\n-                    private static final long serialVersionUID = 1469628524240283489L;\n-\n-                    @Override\n-                    public void onComponentTag(final Component component, final ComponentTag tag) {\n-                        tag.put(\"alt\", alt);\n-                        tag.put(\"title\", title);\n-                    }\n-                });\n-                item.add(image);\n+                item.add(statusUtils.getStatusImage(\"icon\", item.getModelObject().getStatus()));\n \n                 final Check<StatusBean> check = new Check<StatusBean>(\"check\", item.getModel(), checkGroup);\n-                check.setEnabled(checkVisibility);\n-                check.setVisible(checkVisibility);\n                 item.add(check);\n \n                 item.add(new Label(\"resource\", new ResourceModel(item.getModelObject().getResourceName(), item\n@@ -223,13 +183,14 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                     item.add(new Label(\"accountLink\", \"\"));\n                 }\n \n-                if (pageref != null\n-                        && connObjects.containsKey(item.getModelObject().getResourceName())\n-                        && connObjects.get(item.getModelObject().getResourceName()) != null) {\n+                final ConnObjectTO connObjectTO = statusUtils.getConnObjectTO(\n+                        item.getModelObject().getAttributableId(),\n+                        item.getModelObject().getResourceName(),\n+                        connObjects);\n \n-                    final ConnObjectTO connObjectTO = connObjects.get(item.getModelObject().getResourceName());\n+                if (pageref != null && connObjectTO != null) {\n \n-                    ActionLinksPanel connObject = new ActionLinksPanel(\"connObject\", new Model(), pageref);\n+                    final ActionLinksPanel connObject = new ActionLinksPanel(\"connObject\", new Model(), pageref);\n \n                     connObject.add(new ActionLink() {\n \n@@ -261,10 +222,6 @@ public Page createPage() {\n         checkGroup.add(statusBeansListView);\n     }\n \n-    private Image newImage(final String imageStatus) {\n-        return new Image(\"icon\", IMG_STATUES + imageStatus + Constants.PNG_EXT);\n-    }\n-\n     public PropagationRequestTO getPropagationRequestTO() {\n         PropagationRequestTO result = null;\n \n@@ -298,17 +255,4 @@ public void updateStatusBeans(final List<StatusBean> statusBeans) {\n             }\n         }\n     }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        if (this.attributable instanceof RoleTO) {\n-            response.render(new CssContentHeaderItem(\n-                    \"div#check{\"\n-                    + \"display:none;\"\n-                    + \"}\"\n-                    + \"div#status{\"\n-                    + \"display:none;\"\n-                    + \"}\", null, null));\n-        }\n-    }\n }"},{"sha":"e02d11cba8b4c8af9d52a117dc74d17536a7be7e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -153,7 +153,29 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new StatusModalPage(page.getPageReference(), statusmodal, model.getObject());\n+                                return new StatusModalPage<UserTO>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject());\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, PAGEID);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage<UserTO>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject(), true);\n                             }\n                         });\n "},{"sha":"6ae65a444daf0ba8922b2ad90d32eda6436051d9","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -21,10 +21,13 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.services.ResourceService;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.common.to.BulkAssociationAction;\n import org.apache.syncope.common.to.PropagationActionClassTO;\n import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.springframework.stereotype.Component;\n@@ -87,4 +90,13 @@ public void delete(final String name) {\n     public BulkActionRes bulkAction(final BulkAction action) {\n         return getService(ResourceService.class).bulkAction(action);\n     }\n+\n+    public BulkActionRes bulkAssociationAction(\n+            String resourceName, BulkAssociationAction bulkAction, Class<? extends AbstractAttributableTO> typeRef) {\n+        if (UserTO.class.isAssignableFrom(typeRef)) {\n+            return getService(ResourceService.class).usersBulkAssociationAction(resourceName, bulkAction);\n+        } else {\n+            return getService(ResourceService.class).rolesBulkAssociationAction(resourceName, bulkAction);\n+        }\n+    }\n }"},{"sha":"ef943f6d37f035cfaae611e2fc2e724a17baf600","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -32,6 +32,8 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.console.commons.StatusBean;\n+import org.apache.syncope.console.commons.StatusUtils;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -95,4 +97,16 @@ public RoleTO delete(final Long id) {\n     public BulkActionRes bulkAction(final BulkAction action) {\n         return getService(RoleRestClient.class).bulkAction(action);\n     }\n+\n+    public RoleTO unlink(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).unlink(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n+\n+    public RoleTO unassign(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).unassign(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n+\n+    public RoleTO deprovision(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).deprovision(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n }"},{"sha":"d1531e921e7124e66aa19e119ae9fc7ffe4ad900","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -127,4 +127,16 @@ public UserTO reactivate(final long userId, final List<StatusBean> statuses) {\n     public BulkActionRes bulkAction(final BulkAction action) {\n         return getService(UserService.class).bulkAction(action);\n     }\n+\n+    public UserTO unlink(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).unlink(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n+\n+    public UserTO unassign(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).unassign(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n+\n+    public UserTO deprovision(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).deprovision(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    }\n }"},{"sha":"05808a48155cf1f375eb5ba6e28af6e4490d55b0","filename":"console/src/main/java/org/apache/syncope/console/wicket/ajax/markup/html/IndicatingOnConfirmAjaxLink.java","status":"renamed","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -22,18 +22,20 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.attributes.AjaxCallListener;\n import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n-import org.apache.wicket.model.IModel;\n \n-public abstract class IndicatingDeleteOnConfirmAjaxLink<T> extends ClearIndicatingAjaxLink<T> {\n+public abstract class IndicatingOnConfirmAjaxLink<T> extends ClearIndicatingAjaxLink<T> {\n \n     private static final long serialVersionUID = 2228670850922265663L;\n \n-    public IndicatingDeleteOnConfirmAjaxLink(final String id, final PageReference pageRef) {\n-        super(id, pageRef);\n+    private final String msg;\n+\n+    public IndicatingOnConfirmAjaxLink(final String id, final PageReference pageRef) {\n+        this(id, pageRef, \"confirmDelete\");\n     }\n \n-    public IndicatingDeleteOnConfirmAjaxLink(final String id, final IModel<T> model, final PageReference pageRef) {\n-        super(id, model, pageRef);\n+    public IndicatingOnConfirmAjaxLink(final String id, final PageReference pageRef, final String msg) {\n+        super(id, pageRef);\n+        this.msg = msg;\n     }\n \n     @Override\n@@ -46,7 +48,9 @@ protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n \n             @Override\n             public CharSequence getPrecondition(final Component component) {\n-                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) {return false;} else {return true;}\";\n+                return \"if (!confirm('\"\n+                        + getString(IndicatingOnConfirmAjaxLink.this.msg)\n+                        + \"')) {return false;} else {return true;}\";\n             }\n         };\n         attributes.getAjaxCallListeners().add(ajaxCallListener);","previous_filename":"console/src/main/java/org/apache/syncope/console/wicket/ajax/markup/html/IndicatingDeleteOnConfirmAjaxLink.java"},{"sha":"0072df90c07ba263e7c6c0fc2db1fe2178615b97","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxPanel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n \n+import org.apache.syncope.console.commons.ActionTableCheckGroup;\n import org.apache.wicket.markup.html.form.Check;\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -32,6 +33,11 @@\n     public CheckBoxPanel(final String componentId, final IModel<T> model, final CheckGroup<T> checkGroup) {\n         super(componentId, model);\n         this.check = new Check<T>(\"check\", model, checkGroup);\n+        if (checkGroup instanceof ActionTableCheckGroup) {\n+            boolean checkable = ((ActionTableCheckGroup<T>) checkGroup).isCheckable(model.getObject());\n+            this.check.setEnabled(checkable);\n+            this.check.setVisible(checkable);\n+        }\n         add(this.check);\n     }\n }"},{"sha":"6e59b2a1f49b3db30c20d38d00552cfc89c726fd","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -42,7 +42,13 @@ public enum ActionType {\n         SUSPEND(\"update\"),\n         REACTIVATE(\"update\"),\n         RELOAD(\"reload\"),\n-        CHANGE_VIEW(\"changeView\");\n+        CHANGE_VIEW(\"changeView\"),\n+        UNLINK(\"update\"),\n+        UNASSIGN(\"update\"),\n+        DEPROVISION(\"update\"),\n+        MANAGE_RESOURCES(\"update\"),\n+        MANAGE_USERS(\"update\"),\n+        MANAGE_ROLES(\"update\");\n \n         private final String actionId;\n "},{"sha":"93c35f530ac0860446d605529c57bd5bed79d69c","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":119,"deletions":2,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -49,6 +49,9 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         this.pageRef = pageRef;\n \n         super.add(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelManageRoles\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n@@ -64,6 +67,9 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         super.add(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReload\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelChangeView\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n     }\n \n     public void add(\n@@ -110,6 +116,48 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 });\n                 break;\n \n+            case MANAGE_RESOURCES:\n+                fragment = new Fragment(\"panelManageResources\", \"fragmentManageResources\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"manageResourcesLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610291L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case MANAGE_USERS:\n+                fragment = new Fragment(\"panelManageUsers\", \"fragmentManageUsers\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"manageUsersLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610292L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case MANAGE_ROLES:\n+                fragment = new Fragment(\"panelManageRoles\", \"fragmentManageRoles\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"manageRolesLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610293L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n             case CREATE:\n                 fragment = new Fragment(\"panelCreate\", \"fragmentCreate\", this);\n \n@@ -225,7 +273,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case DELETE:\n                 fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n \n-                fragment.addOrReplace(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -321,6 +369,51 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     }\n                 });\n                 break;\n+\n+            case UNLINK:\n+                fragment = new Fragment(\"panelUnlink\", \"fragmentUnlink\", this);\n+\n+                fragment.addOrReplace(\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", pageRef, \"confirmUnlink\") {\n+\n+                    private static final long serialVersionUID = -6957616042924610293L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case UNASSIGN:\n+                fragment = new Fragment(\"panelUnassign\", \"fragmentUnassign\", this);\n+\n+                fragment.addOrReplace(\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", pageRef, \"confirmUnassign\") {\n+\n+                    private static final long serialVersionUID = -6957616042924610294L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case DEPROVISION:\n+                fragment = new Fragment(\"panelDeprovision\", \"fragmentDeprovision\", this);\n+\n+                fragment.addOrReplace(\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", pageRef, \"confirmDeprovision\") {\n+\n+                    private static final long serialVersionUID = -6957616042924610295L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n             default:\n             // do nothink\n         }\n@@ -338,6 +431,18 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n                 break;\n \n+            case MANAGE_RESOURCES:\n+                super.addOrReplace(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n+                break;\n+\n+            case MANAGE_USERS:\n+                super.addOrReplace(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n+                break;\n+\n+            case MANAGE_ROLES:\n+                super.addOrReplace(new Fragment(\"panelManageRoles\", \"emptyFragment\", this));\n+                break;\n+\n             case CREATE:\n                 super.addOrReplace(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n                 break;\n@@ -389,6 +494,18 @@ public void remove(final ActionLink.ActionType type) {\n             case CHANGE_VIEW:\n                 super.addOrReplace(new Fragment(\"panelChangeView\", \"emptyFragment\", this));\n                 break;\n+\n+            case UNLINK:\n+                super.addOrReplace(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n+                break;\n+\n+            case UNASSIGN:\n+                super.addOrReplace(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n+                break;\n+\n+            case DEPROVISION:\n+                super.addOrReplace(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n+                break;\n             default:\n             // do nothing\n         }"},{"sha":"d5793533956920691e6fd252709c9c13ae6dfdc4","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.console.pages.Roles;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -122,7 +122,7 @@ public Page createPage() {\n             updateRoleLink.setOutputMarkupId(true);\n             fragment.add(updateRoleLink);\n \n-            final AjaxLink dropRoleLink = new IndicatingDeleteOnConfirmAjaxLink(\"dropRoleLink\", pageRef) {\n+            final AjaxLink dropRoleLink = new IndicatingOnConfirmAjaxLink(\"dropRoleLink\", pageRef) {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"d09ef92b8e7c9ec580e1adf0ff18647caec62284","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -57,7 +57,7 @@ under the License.\n     <action id=\"delete\">\n       <entitlement>USER_DELETE</entitlement>\n     </action>\n-\n+    \n     <action id=\"changeView\">\n       <entitlement>USER_VIEW</entitlement>\n     </action>"},{"sha":"319fda4f2c86f4429e9ff9617b84c0762cd10385","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -27,6 +27,10 @@ operation_succeeded=Operation executed successfully\n operation_error=Error occurred during the requested operation\n alert=Alert:\n confirmDelete=Do you really want to delete the selected item?\n+confirmUnlink=Do you really want to remove the link between user(s) and resource?\n+confirmUnassign=Do you really want to remove the assignment between user(s) and resource?\n+confirmDeprovision=Do you really want to de-provision user(s)?\n+\n \n unauthorizedInstantiationException=Missing authorization.\n httpClientException=Missing authorization while contacting Syncope core."},{"sha":"2dda3aba462a662c08b916b1d56faedec96f0be0","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -27,6 +27,9 @@ operation_succeeded=Operazione eseguita con successo\n operation_error=Attenzione si \\u00e8 verificato un errore durante l'esecuzione dell'operazione richiesta\n alert=Attenzione:\n confirmDelete=Vuoi davvero procedere con la cancellazione?\n+confirmUnlink=Vuoi davvero procedere rimuovendo il link tra utente/i e risorsa?\n+confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento tra utente/i e risorsa?\n+confirmDeprovision=Vuoi davvero procedere con il de-provisioning dell'utente?\n \n unauthorizedInstantiationException=Autorizzazione mancante.\n httpClientException=Autorizzazione mancante durante la comunicazione con Syncope core."},{"sha":"a6bc6659680c66b0b12287424ce2f28e2df08797","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":17,"deletions":14,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -14,35 +14,38 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-users=Usu\\u00E1rios\n-roles=Fun\\u00E7\\u00F5es\n-configuration=Configura\\u00E7\\u00F5es\n+users=Usu\\u00e1rios\n+roles=Fun\\u00e7\\u00f5es\n+configuration=Configura\\u00e7\\u00f5es\n resources=Recursos\n connectors=Conectores\n-reports=Relat\\u00F3rios\n+reports=Relat\\u00f3rios\n tasks=Tarefas\n logout=Sair\n schema=Esquemas\n-operation_succeded=Opera\\u00E7\\u00E3o executada com sucesso\n-operation_error=Um erro ocorreu ao executar esta opera\\u00E7\\u00E3o\n+operation_succeded=Opera\\u00e7\\u00e3o executada com sucesso\n+operation_error=Um erro ocorreu ao executar esta opera\\u00e7\\u00e3o\n alert=Alerta:\n-confirmDelete=Voc\\u00EA realmente deseja apagar este item selecionado?\n+confirmDelete=Voc\\u00ea realmente deseja apagar este item selecionado?\n+confirmUnlink=Voc\\u00ea realmente deseja apagar o v\\u00ednculo entre o usu\\u00e1rio e de recursos?\n+confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o usu\\u00e1rio e de recursos?\n+confirmDeprovision=Voc\\u00ea realmente de-provision usu\\u00e1rio?\n \n-unauthorizedInstantiationException=Falta de autoriza\\u00E7\\u00E3o para concluir.\n-httpClientException=Falta de autoriza\\u00E7\\u00E3o ao comunicar-se com o Syncope core.\n+unauthorizedInstantiationException=Falta de autoriza\\u00e7\\u00e3o para concluir.\n+httpClientException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core.\n restClientException=Erro ao comunicar-se com o Syncope core.\n-pageExpiredException=Sess\\u00E3o encerrada, favor logar-se novamente.\n+pageExpiredException=Sess\\u00e3o encerrada, favor logar-se novamente.\n \n dropDownChoiceField.nullValid=Escolha um\n todo=A fazer\n DateTimeField$HoursValidator=O seu valor precisa estar entre (1, 12)\n error=Erro\n-generic_error=Um erro ocorreu durante a opera\\u00E7\\u00E3o\n+generic_error=Um erro ocorreu durante a opera\\u00e7\\u00e3o\n id=Id\n name=Nome\n-palette.available=Dispon\\u00ED\\u00ADvel\n+palette.available=Dispon\\u00ed\\u00advel\n palette.selected=Selecionado\n-jexl_info=Este campo \\u00E9 designado a uma express\\u00E3o do tipo JEXL, por exemplo\\:\n+jexl_info=Este campo \\u00e9 designado a uma express\\u00e3o do tipo JEXL, por exemplo\\:\n jexl_ex1=sobrenome + ',' + nome\n jexl_ex2='novo.' + sobrenome\n-jexl_syntax_url=Refer\\u00EAncia JEXL completa\n+jexl_syntax_url=Refer\\u00eancia JEXL completa"},{"sha":"3ceeacbeff52d77aed73db149111b47673aa1ba5","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage.html","status":"renamed","additions":10,"deletions":17,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.html?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -17,30 +17,23 @@\n under the License.\n -->\n <wicket:head>\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n   <style>\n-    .submit{\n+    #dataTableSpan{\n       display:  block;\n       clear:  both;\n       float: none;\n-      margin-left: 10px;\n+      margin: 10px;\n       padding-top: 10px;\n     }\n+\n+    #dataTableSpan table{\n+      width: 100%;\n+    }\n   </style>\n </wicket:head>\n <wicket:extend>\n-  <form wicket:id=\"form\">\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-    <wicket:message key=\"title\"/>\n-    </p>\n-\n-    <div style=\"display: block; margin: 10px\">\n-      <span wicket:id=\"statuspanel\">[Status Panel]</span>\n-    </div>\n-\n-    <div class=\"submit\">\n-      <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"enable\"/>\n-      <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"disable\"/>\n-      <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n-    </div>\n-  </form>\n+  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+  <span wicket:id=\"resourceDatatable\" id=\"dataTableSpan\">[resources]</span>\n+  <wicket:child />\n </wicket:extend>","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/StatusModalPage.html"},{"sha":"16b74ccaab9d1ee4bb1cd4365be3a9dc8c88536f","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/StatusModalPage.properties"},{"sha":"9d477bd5dc6d8c0b7c5d6e9fc378b2c82bc961da","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_it.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/StatusModalPage_it.properties"},{"sha":"6301e36fe12972aa12917ecb1bedf276dbca728d","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModlaPage_pt_BR.properties?ref=dba895f0e555306a3793f343d671ff44e57d5631","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/StatusModalPage_pt_BR.properties"},{"sha":"d0513fe0bdd228e3fd179a9626100eee9eec1191","filename":"console/src/main/resources/org/apache/syncope/console/pages/Resources.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -40,6 +40,7 @@\n           </span>\n         </div>\n \n+        <div wicket:id=\"statusModal\">[Show modal window for provisioning status]</div>\n         <div wicket:id=\"createResourceWin\">[Show modal window for creating resource]</div>\n         <div wicket:id=\"editResourceWin\">[Show modal window for editing resource]</div>\n "},{"sha":"5ad205fb81dcb935bc4fb76e6cedcd7246d06d8c","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ActionDataTablePanel.html","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.html?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,45 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+  </wicket:head>\n+  <wicket:panel>\n+\n+    <form wicket:id=\"groupForm\">\n+      <span wicket:id=\"checkgroup\">\n+        <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"dataTable\">[Data Table]</table>\n+      </span>\n+\n+      <div id=\"actionRow\" class=\"pageRowElement\">\n+        <div id=\"actions\">\n+          <div id=\"actionPanel\"  wicket:id=\"actionPanelContainer\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <span wicket:id=\"actions\">[Actions]</span>\n+          </div>\n+\n+          <div id=\"cancelBtmForm\">\n+            <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n+          </div>\n+        </div>\n+      </div>\n+    </form>\n+\n+  </wicket:panel>\n+</html>"},{"sha":"63a568ee121474ec12166b6b5d11cd05e09a4c53","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ImagePanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FImagePanel.html?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <img wicket:id=\"img\" />\n+  </wicket:panel>\n+</html>"},{"sha":"c283a5870b56fb74b546e2355a855bc3a44ecd54","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -27,6 +27,9 @@\n   </wicket:head>\n   <wicket:panel>\n     <span wicket:id=\"panelClaim\">[plus]</span>\n+    <span wicket:id=\"panelManageResources\">[plus]</span>\n+    <span wicket:id=\"panelManageUsers\">[plus]</span>\n+    <span wicket:id=\"panelManageRoles\">[plus]</span>\n     <span wicket:id=\"panelDryRun\">[plus]</span>\n     <span wicket:id=\"panelExecute\">[plus]</span>\n     <span wicket:id=\"panelEnable\">[plus]</span>\n@@ -42,11 +45,26 @@\n     <span wicket:id=\"panelReactivate\">[plus]</span>\n     <span wicket:id=\"panelReload\">[plus]</span>\n     <span wicket:id=\"panelChangeView\">[plus]</span>\n+    <span wicket:id=\"panelUnlink\">[plus]</span>\n+    <span wicket:id=\"panelUnassign\">[plus]</span>\n+    <span wicket:id=\"panelDeprovision\">[plus]</span>\n \n     <wicket:fragment wicket:id=\"fragmentClaim\">\n       <a href=\"#\" wicket:id=\"claimLink\"><img id=\"action\" src=\"img/actions/claim.png\" alt=\"claim icon\" title=\"Claim\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentManageResources\">\n+      <a href=\"#\" wicket:id=\"manageResourcesLink\"><img id=\"action\" src=\"img/actions/resources-icon.png\" alt=\"manage resources icon\" title=\"Manage resources\"/></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentManageUsers\">\n+      <a href=\"#\" wicket:id=\"manageUsersLink\"><img id=\"action\" src=\"img/actions/users-icon.png\" alt=\"manage users icon\" title=\"Manage users\"/></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentManageRoles\">\n+      <a href=\"#\" wicket:id=\"manageRolesLink\"><img id=\"action\" src=\"img/actions/roles-icon.png\" alt=\"manage roles icon\" title=\"Manage roles\"/></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentCreate\">\n       <a href=\"#\" wicket:id=\"createLink\"><img id=\"action\" src=\"img/actions/create.png\" alt=\"create icon\"  title=\"Create\"/></a>\n     </wicket:fragment>\n@@ -107,6 +125,18 @@\n       <a href=\"#\" wicket:id=\"changeViewLink\"><img id=\"action\" src=\"img/actions/settings-icon.png\" alt=\"Change view icon\"  title=\"Change view\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentUnlink\">\n+      <a href=\"#\" wicket:id=\"unlinkLink\"><img id=\"action\" src=\"img/actions/unlink-icon.png\" alt=\"Unlink icon\"  title=\"Unlink\"/></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentUnassign\">\n+      <a href=\"#\" wicket:id=\"unassignLink\"><img id=\"action\" src=\"img/actions/unassign-icon.png\" alt=\"Unassign icon\"  title=\"Unassign\"/></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentDeprovision\">\n+      <a href=\"#\" wicket:id=\"deprovisionLink\"><img id=\"action\" src=\"img/actions/deprovision-icon.png\" alt=\"De-provision icon\"  title=\"De-provision\"/></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"emptyFragment\">\n     </wicket:fragment>\n   </wicket:panel>"},{"sha":"ec35ed2c6a1bc4f959d74e64dafb0aab721b4f84","filename":"console/src/main/webapp/img/actions/deprovision-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fdeprovision-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fdeprovision-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fdeprovision-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"2e8e1903d9bcef0c039d67384f3e327c3ccaf5cc","filename":"console/src/main/webapp/img/actions/manage-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fmanage-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fmanage-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fmanage-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"75c6bbcf19b2d76b3fe2dd493dfcce6102123761","filename":"console/src/main/webapp/img/actions/resources-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fresources-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fresources-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fresources-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"2d0b5f0683538c2bf0037bc8cbbb773992a8d2bc","filename":"console/src/main/webapp/img/actions/roles-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Froles-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Froles-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Froles-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"bb492bb3bd9913ba67535c872e6d698bcc116103","filename":"console/src/main/webapp/img/actions/unassign-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"86700a53bf3af4702f057fbaa69d839a83e76133","filename":"console/src/main/webapp/img/actions/unlink-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funlink-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funlink-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funlink-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"6f9b75f0815875eaae24d98540b85e761fe19fa4","filename":"console/src/main/webapp/img/actions/users-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fusers-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fusers-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fusers-icon.png?ref=dba895f0e555306a3793f343d671ff44e57d5631"},{"sha":"b01f6d4d5a7bd73c99080a44057278683f695a00","filename":"console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -46,7 +46,7 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr/td[3]/div/span[9]/a\");\n+        selenium.click(\"//tr/td[3]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n \n@@ -106,7 +106,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr[7]/td[3]/div/span[11]/a\");\n+        selenium.click(\"//tr[7]/td[3]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"3090552e0076786c3ec63225fee925e78a75940d","filename":"console/src/test/java/org/apache/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -55,7 +55,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[7]/div/span[9]/a\");\n+        selenium.click(\"//tr[4]/td[7]/div/span[12]/a\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\\\");\", \"30000\");\n@@ -76,7 +76,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[7]/div/span[11]/a\");\n+        selenium.click(\"//tr[4]/td[7]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n@@ -90,7 +90,7 @@ public void checkConnection() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[2]/td[7]/div/span[9]/a\");\n+        selenium.click(\"//tr[2]/td[7]/div/span[12]/a\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\\\"//select[@name='version:dropDownChoiceField']\\\");\", \"30000\");"},{"sha":"b561a0ab11218163d11c86754b6b79920476a053","filename":"console/src/test/java/org/apache/syncope/console/ReportTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -27,7 +27,7 @@ public void readReportlet() {\n         selenium.click(\"css=img[alt=\\\"Reports\\\"]\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[8]/div/span[9]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[12]/a\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//div[2]/form/div[2]/div/div/span/div/div/div/span\\\");\", \"30000\");\n \n@@ -54,7 +54,7 @@ public void executeReport() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[8]/div/span[3]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[6]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }"},{"sha":"0b0dc9ef79b80149e64716293baa67f2986fbe91","filename":"console/src/test/java/org/apache/syncope/console/ResourceTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -42,7 +42,7 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[6]/div/span[9]/a\");\n+        selenium.click(\"//td[6]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -64,7 +64,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr[3]/td[6]/div/span[11]/a\");\n+        selenium.click(\"//tr[3]/td[6]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n@@ -75,7 +75,7 @@ public void checkSecurityTab() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[6]/div/span[9]/a\");\n+        selenium.click(\"//td[6]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -97,7 +97,7 @@ public void checkConnection() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=\\\"ws-target-resource-delete\\\"]/../td[6]/div/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=\\\"ws-target-resource-delete\\\"]/../td[6]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");"},{"sha":"1ad00c41fdbc0f6e52fad5a2db8123d6304c21d5","filename":"console/src/test/java/org/apache/syncope/console/RoleTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -130,9 +130,9 @@ public void browseUserEditModal() {\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[5]/div/span[9]/a\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[5]/div/span[12]/a\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[5]/div/span[9]/a\");\n+        selenium.click(\"//table/tbody/tr/td[5]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div[contains(text(),'Username')]\\\");\", \"30000\");\n@@ -156,9 +156,9 @@ public void deleteUser() {\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[11]/a\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[14]/a\\\");\", \"30000\");\n \n-        selenium.click(\"//span[11]/a\");\n+        selenium.click(\"//span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }"},{"sha":"43b0f29f697125c810060f53364f6b20f8f07032","filename":"console/src/test/java/org/apache/syncope/console/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -48,7 +48,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/div/div/div/div/div/span/table/tbody/tr/td[7]/div/span[11]/a\");\n+        selenium.click(\"//div[3]/div/div/div/div/div/span/table/tbody/tr/td[7]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }"},{"sha":"997fae4e5cf8e7cbd52f151a55d9fa5aa9b10a8d","filename":"console/src/test/java/org/apache/syncope/console/TaskTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -29,11 +29,11 @@ public void execute() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n-        selenium.click(\"//*[div=1]/../td[10]/div/span[3]/a\");\n+        selenium.click(\"//*[div=1]/../td[10]/div/span[6]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n \n-        selenium.click(\"//*[div=1]/../td[10]/div/span[9]/a\");\n+        selenium.click(\"//*[div=1]/../td[10]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/div/span/div/div/div[2]/span/input\\\");\", \"30000\");\n@@ -50,7 +50,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n-        selenium.click(\"//table/tbody/tr/td[8]/div/span[11]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"86044df102a0c61e71db32a7922ed1f709629af4","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -50,7 +50,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         //Edit vivaldi\n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[5]/div/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[5]/div/span[12]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='Antonio Vivaldi']\\\");\", \"30000\");\n \n@@ -89,7 +89,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=4]/../td[5]/div/span[11]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=4]/../td[5]/div/span[14]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"84b65a83c9f3f8f7101bc354d8a623adf517b0a6","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":44,"deletions":8,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -20,6 +20,7 @@\n \n import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -362,7 +363,7 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n     public List<PropagationTask> getUserDeleteTaskIds(final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        return getUserDeleteTaskIds(userId, null);\n+        return getUserDeleteTaskIds(userId, Collections.<String>emptySet());\n     }\n \n     /**\n@@ -371,12 +372,30 @@ public List<PropagationTask> getUserDeleteTaskIds(final Long userId)\n      * the creation fails onto a mandatory resource.\n      *\n      * @param userId to be deleted\n-     * @param noPropResourceNames name of external resource not to be considered for propagation\n+     * @param noPropResourceName name of external resource not to be considered for propagation\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if user is not found\n+     * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given user\n+     */\n+    public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final String noPropResourceName)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        SyncopeUser user = userDataBinder.getUserFromId(userId);\n+        return getDeleteTaskIds(user, Collections.<String>singleton(noPropResourceName));\n+    }\n+\n+    /**\n+     * Perform delete on each resource associated to the user. It is possible to ask for a mandatory provisioning for\n+     * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if\n+     * the creation fails onto a mandatory resource.\n+     *\n+     * @param userId to be deleted\n+     * @param noPropResourceNames name of external resources not to be considered for propagation\n      * @return list of propagation tasks\n      * @throws NotFoundException if user is not found\n      * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given user\n      */\n-    public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final String noPropResourceNames)\n+    public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Collection<String> noPropResourceNames)\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(userId);\n@@ -409,7 +428,7 @@ public List<PropagationTask> getUserDeleteTaskIds(final WorkflowResult<Long> wfR\n     public List<PropagationTask> getRoleDeleteTaskIds(final Long roleId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        return getRoleDeleteTaskIds(roleId, null);\n+        return getRoleDeleteTaskIds(roleId, Collections.<String>emptySet());\n     }\n \n     /**\n@@ -426,17 +445,34 @@ public List<PropagationTask> getRoleDeleteTaskIds(final Long roleId)\n     public List<PropagationTask> getRoleDeleteTaskIds(final Long roleId, final String noPropResourceName)\n             throws NotFoundException, UnauthorizedRoleException {\n \n+        return getRoleDeleteTaskIds(roleId, Collections.<String>singleton(noPropResourceName));\n+    }\n+\n+    /**\n+     * Perform delete on each resource associated to the user. It is possible to ask for a mandatory provisioning for\n+     * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if\n+     * the creation fails onto a mandatory resource.\n+     *\n+     * @param roleId to be deleted\n+     * @param noPropResourceNames name of external resources not to be considered for propagation\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if role is not found\n+     * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given role\n+     */\n+    public List<PropagationTask> getRoleDeleteTaskIds(final Long roleId, final Collection<String> noPropResourceNames)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n         SyncopeRole role = roleDataBinder.getRoleFromId(roleId);\n-        return getDeleteTaskIds(role, noPropResourceName);\n+        return getDeleteTaskIds(role, noPropResourceNames);\n     }\n \n     protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attributable,\n-            final String noPropResourceName) {\n+            final Collection<String> noPropResourceNames) {\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(ResourceOperation.DELETE, attributable.getResourceNames());\n-        if (noPropResourceName != null) {\n-            propByRes.get(ResourceOperation.DELETE).remove(noPropResourceName);\n+        if (noPropResourceNames != null && !noPropResourceNames.isEmpty()) {\n+            propByRes.get(ResourceOperation.DELETE).removeAll(noPropResourceNames);\n         }\n         return createTasks(attributable, null, null, null, false, true, propByRes);\n     }"},{"sha":"eaec1ffdae107753d54121bf0420661dc8b44285","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -18,13 +18,19 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n+import static org.apache.syncope.core.rest.controller.AbstractController.LOG;\n+\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.EntityExistsException;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.common.to.BulkAssociationAction;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -88,6 +94,12 @@ public class ResourceController extends AbstractController {\n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n \n+    @Autowired\n+    private UserController userController;\n+\n+    @Autowired\n+    private RoleController roleController;\n+\n     /**\n      * ConnectorObject util.\n      */\n@@ -308,4 +320,50 @@ public BulkActionRes bulkAction(final BulkAction bulkAction) {\n \n         return res;\n     }\n+\n+    public BulkActionRes usersBulkAssociationAction(\n+            final String resourceName, final BulkAssociationAction bulkAction) {\n+        return bulkAssociationActionDelegate(userController, bulkAction, resourceName);\n+    }\n+\n+    public BulkActionRes rolesBulkAssociationAction(\n+            final String resourceName, final BulkAssociationAction bulkAction) {\n+        return bulkAssociationActionDelegate(roleController, bulkAction, resourceName);\n+    }\n+\n+    private BulkActionRes bulkAssociationActionDelegate(\n+            final Object obj,\n+            final BulkAssociationAction bulkAction,\n+            final String resourceName) {\n+\n+        final String methodName = bulkAction.getOperation().name().toLowerCase();\n+\n+        try {\n+            final Method method = obj.getClass().getMethod(methodName, Long.class, Collection.class);\n+\n+            final BulkActionRes res = new BulkActionRes();\n+\n+            for (Long id : bulkAction.getTargets()) {\n+                try {\n+                    // audit is delegated to the called userController method ...\n+                    method.invoke(obj, id, Collections.<String>singleton(resourceName));\n+                    res.add(id, BulkActionRes.Status.SUCCESS);\n+                } catch (Exception e) {\n+                    LOG.warn(\"Error performing {} of user {}\", methodName, id, e);\n+                    res.add(id, BulkActionRes.Status.FAILURE);\n+                }\n+            }\n+\n+            return res;\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving {} method\", methodName, e);\n+\n+            SyncopeClientCompositeException scce =\n+                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Unknown);\n+            sce.addElement(\"Operation execution failed\");\n+            scce.addException(sce);\n+            throw scce;\n+        }\n+    }\n }"},{"sha":"dfa50c3313b152231a8617af80e6dee09290b38d","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.controller;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n@@ -349,4 +350,69 @@ public RoleTO delete(final Long roleId) {\n \n         return roleTO;\n     }\n+\n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n+        LOG.debug(\"About to unlink role({}) and resources {}\", roleId, resources);\n+\n+        final RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleId);\n+\n+        roleMod.getResourcesToBeRemoved().addAll(resources);\n+\n+        final WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n+\n+        final RoleTO updatedTO = binder.getRoleTO(updated.getResult());\n+\n+        auditManager.audit(Category.user, AuditElements.RoleSubCategory.update, Result.success,\n+                \"Successfully updated role: \" + updatedTO.getName());\n+\n+        LOG.debug(\"About to return updated role\\n{}\", updatedTO);\n+\n+        return updatedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n+        LOG.debug(\"About to unassign role({}) and resources {}\", roleId, resources);\n+\n+        final RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleId);\n+        roleMod.getResourcesToBeRemoved().addAll(resources);\n+\n+        return update(roleMod);\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public RoleTO deprovision(final Long roleId, final Collection<String> resources) {\n+        LOG.debug(\"About to deprovision role({}) from resources {}\", roleId, resources);\n+\n+        final SyncopeRole role = binder.getRoleFromId(roleId);\n+\n+        final Set<String> noPropResourceName = role.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, noPropResourceName);\n+        final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, propHanlder);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n+\n+        final RoleTO updatedTO = binder.getRoleTO(role);\n+        updatedTO.getPropagationStatusTOs().addAll(propagations);\n+\n+        auditManager.audit(Category.user, AuditElements.RoleSubCategory.update, Result.success,\n+                \"Successfully deprovisioned role: \" + updatedTO.getName());\n+\n+        LOG.debug(\"About to return updated role\\n{}\", updatedTO);\n+\n+        return updatedTO;\n+    }\n }"},{"sha":"8c97436437a86547b276a6d38e612e7d4803d9e0","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":67,"deletions":1,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.controller;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n@@ -478,7 +479,7 @@ public UserTO delete(final String username) {\n     protected UserTO setStatus(final SyncopeUser user, final String token,\n             final PropagationRequestTO propagationRequestTO, final boolean status, final String task) {\n \n-        LOG.debug(\"About to set status of {}\" + user);\n+        LOG.debug(\"About to set 'enabled:{}' status to {}\", user, status);\n \n         WorkflowResult<Long> updated;\n         if (propagationRequestTO == null || propagationRequestTO.isOnSyncope()) {\n@@ -619,4 +620,69 @@ public BulkActionRes bulkAction(final BulkAction bulkAction) {\n \n         return res;\n     }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO unlink(final Long userId, final Collection<String> resources) {\n+        LOG.debug(\"About to unlink user({}) and resources {}\", userId, resources);\n+\n+        final UserMod userMod = new UserMod();\n+        userMod.setId(userId);\n+\n+        userMod.getResourcesToBeRemoved().addAll(resources);\n+\n+        final WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n+\n+        final UserTO updatedTO = binder.getUserTO(updated.getResult().getKey());\n+\n+        auditManager.audit(Category.user, UserSubCategory.update, Result.success,\n+                \"Successfully updated user: \" + updatedTO.getUsername());\n+\n+        LOG.debug(\"About to return updated user\\n{}\", updatedTO);\n+\n+        return updatedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO unassign(final Long userId, final Collection<String> resources) {\n+        LOG.debug(\"About to unassign user({}) and resources {}\", userId, resources);\n+\n+        final UserMod userMod = new UserMod();\n+        userMod.setId(userId);\n+        userMod.getResourcesToBeRemoved().addAll(resources);\n+\n+        return update(userMod);\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO deprovision(final Long userId, final Collection<String> resources) {\n+        LOG.debug(\"About to deprovision user({}) from resources {}\", userId, resources);\n+\n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n+        final Set<String> noPropResourceName = user.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId, noPropResourceName);\n+        final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, propHanlder);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n+\n+        final UserTO updatedUserTO = binder.getUserTO(user);\n+        updatedUserTO.getPropagationStatusTOs().addAll(propagations);\n+\n+        auditManager.audit(Category.user, UserSubCategory.update, Result.success,\n+                \"Successfully deprovisioned user: \" + updatedUserTO.getUsername());\n+\n+        LOG.debug(\"About to return updated user\\n{}\", updatedUserTO);\n+\n+        return updatedUserTO;\n+    }\n }"},{"sha":"138b8a6e718f01bb45c48e70f755e89f8485164b","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.services.ResourceService;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n+import org.apache.syncope.common.to.BulkAssociationAction;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n@@ -96,4 +97,14 @@ public boolean check(final ResourceTO resourceTO) {\n     public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n         return controller.bulkAction(bulkAction);\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes usersBulkAssociationAction(final String resourceName, final BulkAssociationAction bulkAction) {\r\n+        return controller.usersBulkAssociationAction(resourceName, bulkAction);\r\n+    }\r\n+\r\n+    @Override\r\n+    public BulkActionRes rolesBulkAssociationAction(final String resourceName, final BulkAssociationAction bulkAction) {\r\n+        return controller.rolesBulkAssociationAction(resourceName, bulkAction);\r\n+    }\r\n }\r"},{"sha":"521053c20ed09793cd9766fee6e3decba8ac5a50","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.services.InvalidSearchConditionException;\r\n import org.apache.syncope.common.services.RoleService;\r\n+import org.apache.syncope.common.to.PropagationTargetsTO;\r\n import org.apache.syncope.common.to.RoleTO;\r\n import org.apache.syncope.core.rest.controller.RoleController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n@@ -111,4 +112,19 @@ public RoleTO selfRead(final Long roleId) {\n     public RoleTO update(final Long roleId, final RoleMod roleMod) {\r\n         return controller.update(roleMod);\r\n     }\r\n+\r\n+    @Override\r\n+    public RoleTO unlink(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n+        return controller.unlink(roleId, propagationTargetsTO.getResources());\r\n+    }\r\n+\r\n+    @Override\r\n+    public RoleTO unassign(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n+        return controller.unassign(roleId, propagationTargetsTO.getResources());\r\n+    }\r\n+\r\n+    @Override\r\n+    public RoleTO deprovision(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n+        return controller.deprovision(roleId, propagationTargetsTO.getResources());\r\n+    }\r\n }\r"},{"sha":"51d484fe1947298b2850fe0a30f05083ae6f6694","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationRequestTO;\n+import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.rest.controller.UserController;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -171,4 +172,19 @@ public UserTO update(final Long userId, final UserMod userMod) {\n     public BulkActionRes bulkAction(final BulkAction bulkAction) {\n         return controller.bulkAction(bulkAction);\n     }\n+\n+    @Override\n+    public UserTO unlink(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n+        return controller.unlink(userId, propagationTargetsTO.getResources());\n+    }\n+\n+    @Override\n+    public UserTO unassign(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n+        return controller.unassign(userId, propagationTargetsTO.getResources());\n+    }\n+\n+    @Override\n+    public UserTO deprovision(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n+        return controller.deprovision(userId, propagationTargetsTO.getResources());\n+    }\n }"},{"sha":"c2e20eb7bd7fe93843c08fc4217e45fc70d3b731","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.rest;\n \n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n+import static org.apache.syncope.core.rest.AbstractTest.roleService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -32,6 +34,7 @@\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n+import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -388,4 +391,78 @@ public void issueSYNCOPE228() {\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getEntitlements().isEmpty());\n     }\n+\n+    @Test\n+    public void unlink() {\n+        RoleTO actual = createRole(roleService, buildRoleTO(\"unlink\"));\n+        assertNotNull(actual);\n+\n+        assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(\"resource-ldap\");\n+\n+        actual = roleService.unlink(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        actual = roleService.read(actual.getId());\n+        assertNotNull(actual);\n+\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n+    }\n+\n+    @Test\n+    public void unassign() {\n+        RoleTO actual = createRole(roleService, buildRoleTO(\"unassign\"));\n+        assertNotNull(actual);\n+\n+        assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(\"resource-ldap\");\n+\n+        actual = roleService.unassign(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        actual = roleService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        try {\n+            readConnectorObject(\"resource-ldap\", actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+    }\n+\n+    @Test\n+    public void deprovision() {\n+        RoleTO actual = createRole(roleService, buildRoleTO(\"deprovision\"));\n+        assertNotNull(actual);\n+\n+        assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(\"resource-ldap\");\n+\n+        actual = roleService.deprovision(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        actual = roleService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        try {\n+            readConnectorObject(\"resource-ldap\", actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+    }\n }"},{"sha":"2a4b559c60b4ae4a4c41387f2778fe778c98f2ce","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dba895f0e555306a3793f343d671ff44e57d5631/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=dba895f0e555306a3793f343d671ff44e57d5631","patch":"@@ -22,6 +22,7 @@\n import static org.apache.syncope.core.rest.AbstractTest.attributeMod;\n import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import static org.apache.syncope.core.rest.AbstractTest.getUUIDString;\n+import static org.apache.syncope.core.rest.AbstractTest.userService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n@@ -60,6 +61,7 @@\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.PropagationStatusTO;\n+import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.PropagationTaskTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n@@ -2419,6 +2421,108 @@ public void issueSYNCOPE15() {\n         }\n     }\n \n+    @Test\n+    public void unlink() {\n+        UserTO userTO = getUniqueSampleTO(\"unlink@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n+\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        assertNotNull(connObjectTO);\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(RESOURCE_NAME_CSV);\n+\n+        actual = userService.unlink(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        assertNotNull(connObjectTO);\n+    }\n+\n+    @Test\n+    public void unassign() {\n+        UserTO userTO = getUniqueSampleTO(\"unassign@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n+\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        assertNotNull(connObjectTO);\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(RESOURCE_NAME_CSV);\n+\n+        actual = userService.unassign(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        try {\n+            readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+    }\n+\n+    @Test\n+    public void deprovision() {\n+        UserTO userTO = getUniqueSampleTO(\"deprovision@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getResources().add(RESOURCE_NAME_CSV);\n+\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        assertNotNull(connObjectTO);\n+\n+        PropagationTargetsTO res = new PropagationTargetsTO();\n+        res.getResources().add(RESOURCE_NAME_CSV);\n+\n+        actual = userService.deprovision(actual.getId(), res);\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        try {\n+            readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+    }\n+\n     private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"}]}