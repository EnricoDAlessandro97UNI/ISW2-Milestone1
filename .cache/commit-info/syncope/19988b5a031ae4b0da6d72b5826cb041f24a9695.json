{"sha":"19988b5a031ae4b0da6d72b5826cb041f24a9695","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE5OTg4YjVhMDMxYWU0YjBkYTZkNzJiNTgyNmNiMDQxZjI0YTk2OTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-16T14:47:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-16T14:47:37Z"},"message":"Some minor clean up about UserSuspender and related\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1433960 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9eb1a568655e82ca2534db5fedae279ee23ad34c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9eb1a568655e82ca2534db5fedae279ee23ad34c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/19988b5a031ae4b0da6d72b5826cb041f24a9695","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19988b5a031ae4b0da6d72b5826cb041f24a9695","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/19988b5a031ae4b0da6d72b5826cb041f24a9695","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19988b5a031ae4b0da6d72b5826cb041f24a9695/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b4539aae6a708904966aad025d37665637fa523f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4539aae6a708904966aad025d37665637fa523f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4539aae6a708904966aad025d37665637fa523f"}],"stats":{"total":65,"additions":33,"deletions":32},"files":[{"sha":"59fd45f3fcdec7ad248ee31d62cd86a6e232fb64","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -490,7 +490,7 @@ public void setSuspended(final Boolean suspended) {\n         this.suspended = getBooleanAsInteger(suspended);\n     }\n \n-    public Boolean getSuspended() {\n+    public Boolean isSuspended() {\n         return isBooleanAsInteger(suspended);\n     }\n "},{"sha":"4b40ae3811c26786b52c848ab00bab7026402a0c","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.policy;\n \n import java.util.regex.Pattern;\n-\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.types.AccountPolicySpec;\n import org.apache.syncope.types.PolicyType;\n@@ -34,9 +33,9 @@ public class AccountPolicyEnforcer extends PolicyEnforcer<AccountPolicySpec, Syn\n     private static final Pattern LCPATTERN = Pattern.compile(\"[a-z0-9-_@. ]+\");\n \n     private static final Pattern UCPATTERN = Pattern.compile(\"[A-Z0-9-_@. ]+\");\n-    \n-    @Autowired(required=false)\n-    UserSuspender userSuspender;\n+\n+    @Autowired(required = false)\n+    private UserSuspender userSuspender;\n \n     /* (non-Javadoc)\n      * @see AccountPolicyEnforcer#enforce(AccountPolicySpec, PolicyType, SyncopeUser)\n@@ -74,6 +73,7 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n         if ((policy.isAllLowerCase() && !LCPATTERN.matcher(user.getUsername()).matches())\n                 || (policy.isAllUpperCase() && !UCPATTERN.matcher(user.getUsername()).matches())\n                 || !PATTERN.matcher(user.getUsername()).matches()) {\n+\n             throw new AccountPolicyException(\"Invalid username syntax\");\n         }\n \n@@ -92,10 +92,11 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n         }\n \n         // check for subsequent failed logins\n-        if (user.getFailedLogins() != null && policy.getPermittedLoginRetries() > 0\n-                && user.getFailedLogins() > policy.getPermittedLoginRetries() && !user.getSuspended()) {\n-            userSuspender.suspend(policy, user);\n+        if (userSuspender != null\n+                && user.getFailedLogins() != null && policy.getPermittedLoginRetries() > 0\n+                && user.getFailedLogins() > policy.getPermittedLoginRetries() && !user.isSuspended()) {\n+\n+            userSuspender.suspend(user, policy.isPropagateSuspension());\n         }\n     }\n-\n }"},{"sha":"bb3d8ae95fe6663a7201bc9cd3db10ed77ac798c","filename":"core/src/main/java/org/apache/syncope/core/policy/UserSuspender.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FUserSuspender.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.core.policy;\n \n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.types.AccountPolicySpec;\n \n public interface UserSuspender {\n-    void suspend(final AccountPolicySpec policy, final SyncopeUser user);\n+\n+    void suspend(SyncopeUser user, boolean suspend);\n }"},{"sha":"eaf05af54527224b27f5c2f592b8377ca1119716","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationException.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -23,14 +23,15 @@\n  */\n public class PropagationException extends Exception {\n \n+    private static final long serialVersionUID = -4828426289616526116L;\n+\n     /**\n      * The resource involved in this exception.\n      */\n     private final String resourceName;\n \n     /**\n-     * Create a new instance based on resource name and original stacktrace\n-     * received during propagation.\n+     * Create a new instance based on resource name and original stacktrace received during propagation.\n      *\n      * @param resourceName name of resource involved in this exception\n      * @param stackTrace original stacktrace"},{"sha":"5066915d05d87d9e39d39e288d156cbcf24f75fe","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -123,7 +123,7 @@ public Authentication authenticate(final Authentication authentication)\n             user = userDAO.find(username);\n \n             if (user != null) {\n-                if (user.getSuspended()) {\n+                if (user.isSuspended()) {\n                     throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n                 }\n                 authenticated = PasswordEncoder.verifyPassword("},{"sha":"33c8cc39e3abe0e4e2a8a740899d0a466b629fdf","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowUserSuspender.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -18,10 +18,9 @@\n  */\n package org.apache.syncope.core.workflow;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.List;\n import java.util.Map;\n-import java.util.AbstractMap.SimpleEntry;\n-\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -30,14 +29,14 @@\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n-import org.apache.syncope.types.AccountPolicySpec;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class WorkflowUserSuspender implements UserSuspender {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(WorkflowUserSuspender.class);\n \n     @Autowired\n@@ -53,7 +52,7 @@ public class WorkflowUserSuspender implements UserSuspender {\n     private UserDataBinder userDataBinder;\n \n     @Override\n-    public void suspend(AccountPolicySpec policy, SyncopeUser user) {\n+    public void suspend(final SyncopeUser user, final boolean suspend) {\n         try {\n             LOG.debug(\"User {}:{} is over to max failed logins\", user.getId(), user.getUsername());\n \n@@ -64,7 +63,7 @@ public void suspend(AccountPolicySpec policy, SyncopeUser user) {\n             final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n \n             // propagate suspension if and only if it is required by policy\n-            if (policy.isPropagateSuspension()) {\n+            if (suspend) {\n                 final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n                         new WorkflowResult<Map.Entry<Long, Boolean>>(\n                         new SimpleEntry<Long, Boolean>(updated.getResult(), Boolean.FALSE),\n@@ -79,6 +78,6 @@ public void suspend(AccountPolicySpec policy, SyncopeUser user) {\n             }\n         } catch (Exception e) {\n             LOG.error(\"Error during user suspension\", e);\n-        }    }\n-\n+        }\n+    }\n }"},{"sha":"d1f478ff59869bfe0bb7e5b6048e16edc96a0b9f","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19988b5a031ae4b0da6d72b5826cb041f24a9695/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=19988b5a031ae4b0da6d72b5826cb041f24a9695","patch":"@@ -78,11 +78,11 @@ private ConnObjectTO readUserConnObj(String resourceName, String userId) {\n     }\n \n     public static UserTO getUniqueSampleTO(final String email) {\n-    \treturn getSampleTO(getUUIDString() + email);\n+        return getSampleTO(getUUIDString() + email);\n     }\n \n     public static UserTO getSampleTO(final String email) {\n-    \tString uid = email;\n+        String uid = email;\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(uid);\n@@ -169,20 +169,20 @@ public void createUserWithNoPropagation() {\n      * introducing a simple control.\n      */\n     public void issue172() {\n-    \tList<PasswordPolicyTO> policies = policyService.listByType(PolicyType.GLOBAL_PASSWORD);\n-    \tfor (PasswordPolicyTO policyTO : policies) {\n+        List<PasswordPolicyTO> policies = policyService.listByType(PolicyType.GLOBAL_PASSWORD);\n+        for (PasswordPolicyTO policyTO : policies) {\n             policyService.delete(PolicyType.PASSWORD, policyTO.getId());\n-    \t}\n+        }\n \n-    \ttry {\n+        try {\n             UserTO userTO = getUniqueSampleTO(\"issue172@syncope.apache.org\");\n             userService.create(userTO);\n-    \t} finally {\n-        \tfor (PasswordPolicyTO policyTO : policies) {\n+        } finally {\n+            for (PasswordPolicyTO policyTO : policies) {\n                 PolicyTO cPolicyTO = policyService.create(PolicyType.GLOBAL_PASSWORD, policyTO);\n                 assertNotNull(cPolicyTO);\n-        \t}\n-    \t}\n+            }\n+        }\n     }\n \n     @Test\n@@ -870,7 +870,7 @@ public void update() {\n         userMod.addAttributeToBeUpdated(attributeMod(\"userId\", newUserId));\n \n         userMod.addAttributeToBeRemoved(\"fullname\");\n-        String newFullName = getUUIDString() +  \"g.h@t.com\";\n+        String newFullName = getUUIDString() + \"g.h@t.com\";\n         userMod.addAttributeToBeUpdated(attributeMod(\"fullname\", newFullName));\n \n         userMod.addDerivedAttributeToBeAdded(\"cn\");"}]}