{"sha":"a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE2NmJkYjlmNWZkNWZmMWJjZmIwZmM2MDY1MWZkNDBlMjg1YjgwMGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-18T11:57:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-18T11:57:43Z"},"message":"[SYNCOPE-1413] CLI removed","tree":{"sha":"641b2d48b179ab02be83ba587cad7f083571c8ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/641b2d48b179ab02be83ba587cad7f083571c8ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"84ef23f404bc5b09935d258c5d89925668737f9e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/84ef23f404bc5b09935d258c5d89925668737f9e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/84ef23f404bc5b09935d258c5d89925668737f9e"}],"stats":{"total":16057,"additions":6,"deletions":16051},"files":[{"sha":"eeb76fe47f697a82f1621d4152fded3011bc2e82","filename":"client/cli/LICENSE","status":"removed","additions":0,"deletions":687,"changes":687,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2FLICENSE?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,687 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n-\n-==\n-\n-For Jackson (http://wiki.fasterxml.com/JacksonHome):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For LMAX Disruptor (https://lmax-exchange.github.io/disruptor/):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For JAX-B (http://jaxb.java.net/):\n-This is licensed under the CDDL 1.0:\n-\n-COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n-\n-1. Definitions.\n-\n-1.1. \"Contributor\" means each individual or entity that\n-creates or contributes to the creation of Modifications.\n-\n-1.2. \"Contributor Version\" means the combination of the\n-Original Software, prior Modifications used by a\n-Contributor (if any), and the Modifications made by that\n-particular Contributor.\n-\n-1.3. \"Covered Software\" means (a) the Original Software, or\n-(b) Modifications, or (c) the combination of files\n-containing Original Software with files containing\n-Modifications, in each case including portions thereof.\n-\n-1.4. \"Executable\" means the Covered Software in any form\n-other than Source Code.\n-\n-1.5. \"Initial Developer\" means the individual or entity\n-that first makes Original Software available under this\n-License.\n-\n-1.6. \"Larger Work\" means a work which combines Covered\n-Software or portions thereof with code not governed by the\n-terms of this License.\n-\n-1.7. \"License\" means this document.\n-\n-1.8. \"Licensable\" means having the right to grant, to the\n-maximum extent possible, whether at the time of the initial\n-grant or subsequently acquired, any and all of the rights\n-conveyed herein.\n-\n-1.9. \"Modifications\" means the Source Code and Executable\n-form of any of the following:\n-\n-A. Any file that results from an addition to,\n-deletion from or modification of the contents of a\n-file containing Original Software or previous\n-Modifications;\n-\n-B. Any new file that contains any part of the\n-Original Software or previous Modification; or\n-\n-C. Any new file that is contributed or otherwise made\n-available under the terms of this License.\n-\n-1.10. \"Original Software\" means the Source Code and\n-Executable form of computer software code that is\n-originally released under this License.\n-\n-1.11. \"Patent Claims\" means any patent claim(s), now owned\n-or hereafter acquired, including without limitation,\n-method, process, and apparatus claims, in any patent\n-Licensable by grantor.\n-\n-1.12. \"Source Code\" means (a) the common form of computer\n-software code in which modifications are made and (b)\n-associated documentation included in or with such code.\n-\n-1.13. \"You\" (or \"Your\") means an individual or a legal\n-entity exercising rights under, and complying with all of\n-the terms of, this License. For legal entities, \"You\"\n-includes any entity which controls, is controlled by, or is\n-under common control with You. For purposes of this\n-definition, \"control\" means (a) the power, direct or\n-indirect, to cause the direction or management of such\n-entity, whether by contract or otherwise, or (b) ownership\n-of more than fifty percent (50%) of the outstanding shares\n-or beneficial ownership of such entity.\n-\n-2. License Grants.\n-\n-2.1. The Initial Developer Grant.\n-\n-Conditioned upon Your compliance with Section 3.1 below and\n-subject to third party intellectual property claims, the\n-Initial Developer hereby grants You a world-wide,\n-royalty-free, non-exclusive license:\n-\n-(a) under intellectual property rights (other than\n-patent or trademark) Licensable by Initial Developer,\n-to use, reproduce, modify, display, perform,\n-sublicense and distribute the Original Software (or\n-portions thereof), with or without Modifications,\n-and/or as part of a Larger Work; and\n-\n-(b) under Patent Claims infringed by the making,\n-using or selling of Original Software, to make, have\n-made, use, practice, sell, and offer for sale, and/or\n-otherwise dispose of the Original Software (or\n-portions thereof).\n-\n-(c) The licenses granted in Sections 2.1(a) and (b)\n-are effective on the date Initial Developer first\n-distributes or otherwise makes the Original Software\n-available to a third party under the terms of this\n-License.\n-\n-(d) Notwithstanding Section 2.1(b) above, no patent\n-license is granted: (1) for code that You delete from\n-the Original Software, or (2) for infringements\n-caused by: (i) the modification of the Original\n-Software, or (ii) the combination of the Original\n-Software with other software or devices.\n-\n-2.2. Contributor Grant.\n-\n-Conditioned upon Your compliance with Section 3.1 below and\n-subject to third party intellectual property claims, each\n-Contributor hereby grants You a world-wide, royalty-free,\n-non-exclusive license:\n-\n-(a) under intellectual property rights (other than\n-patent or trademark) Licensable by Contributor to\n-use, reproduce, modify, display, perform, sublicense\n-and distribute the Modifications created by such\n-Contributor (or portions thereof), either on an\n-unmodified basis, with other Modifications, as\n-Covered Software and/or as part of a Larger Work; and\n-\n-(b) under Patent Claims infringed by the making,\n-using, or selling of Modifications made by that\n-Contributor either alone and/or in combination with\n-its Contributor Version (or portions of such\n-combination), to make, use, sell, offer for sale,\n-have made, and/or otherwise dispose of: (1)\n-Modifications made by that Contributor (or portions\n-thereof); and (2) the combination of Modifications\n-made by that Contributor with its Contributor Version\n-(or portions of such combination).\n-\n-(c) The licenses granted in Sections 2.2(a) and\n-2.2(b) are effective on the date Contributor first\n-distributes or otherwise makes the Modifications\n-available to a third party.\n-\n-(d) Notwithstanding Section 2.2(b) above, no patent\n-license is granted: (1) for any code that Contributor\n-has deleted from the Contributor Version; (2) for\n-infringements caused by: (i) third party\n-modifications of Contributor Version, or (ii) the\n-combination of Modifications made by that Contributor\n-with other software (except as part of the\n-Contributor Version) or other devices; or (3) under\n-Patent Claims infringed by Covered Software in the\n-absence of Modifications made by that Contributor.\n-\n-3. Distribution Obligations.\n-\n-3.1. Availability of Source Code.\n-\n-Any Covered Software that You distribute or otherwise make\n-available in Executable form must also be made available in\n-Source Code form and that Source Code form must be\n-distributed only under the terms of this License. You must\n-include a copy of this License with every copy of the\n-Source Code form of the Covered Software You distribute or\n-otherwise make available. You must inform recipients of any\n-such Covered Software in Executable form as to how they can\n-obtain such Covered Software in Source Code form in a\n-reasonable manner on or through a medium customarily used\n-for software exchange.\n-\n-3.2. Modifications.\n-\n-The Modifications that You create or to which You\n-contribute are governed by the terms of this License. You\n-represent that You believe Your Modifications are Your\n-original creation(s) and/or You have sufficient rights to\n-grant the rights conveyed by this License.\n-\n-3.3. Required Notices.\n-\n-You must include a notice in each of Your Modifications\n-that identifies You as the Contributor of the Modification.\n-You may not remove or alter any copyright, patent or\n-trademark notices contained within the Covered Software, or\n-any notices of licensing or any descriptive text giving\n-attribution to any Contributor or the Initial Developer.\n-\n-3.4. Application of Additional Terms.\n-\n-You may not offer or impose any terms on any Covered\n-Software in Source Code form that alters or restricts the\n-applicable version of this License or the recipients'\n-rights hereunder. You may choose to offer, and to charge a\n-fee for, warranty, support, indemnity or liability\n-obligations to one or more recipients of Covered Software.\n-However, you may do so only on Your own behalf, and not on\n-behalf of the Initial Developer or any Contributor. You\n-must make it absolutely clear that any such warranty,\n-support, indemnity or liability obligation is offered by\n-You alone, and You hereby agree to indemnify the Initial\n-Developer and every Contributor for any liability incurred\n-by the Initial Developer or such Contributor as a result of\n-warranty, support, indemnity or liability terms You offer.\n-\n-3.5. Distribution of Executable Versions.\n-\n-You may distribute the Executable form of the Covered\n-Software under the terms of this License or under the terms\n-of a license of Your choice, which may contain terms\n-different from this License, provided that You are in\n-compliance with the terms of this License and that the\n-license for the Executable form does not attempt to limit\n-or alter the recipient's rights in the Source Code form\n-from the rights set forth in this License. If You\n-distribute the Covered Software in Executable form under a\n-different license, You must make it absolutely clear that\n-any terms which differ from this License are offered by You\n-alone, not by the Initial Developer or Contributor. You\n-hereby agree to indemnify the Initial Developer and every\n-Contributor for any liability incurred by the Initial\n-Developer or such Contributor as a result of any such terms\n-You offer.\n-\n-3.6. Larger Works.\n-\n-You may create a Larger Work by combining Covered Software\n-with other code not governed by the terms of this License\n-and distribute the Larger Work as a single product. In such\n-a case, You must make sure the requirements of this License\n-are fulfilled for the Covered Software.\n-\n-4. Versions of the License.\n-\n-4.1. New Versions.\n-\n-Sun Microsystems, Inc. is the initial license steward and\n-may publish revised and/or new versions of this License\n-from time to time. Each version will be given a\n-distinguishing version number. Except as provided in\n-Section 4.3, no one other than the license steward has the\n-right to modify this License.\n-\n-4.2. Effect of New Versions.\n-\n-You may always continue to use, distribute or otherwise\n-make the Covered Software available under the terms of the\n-version of the License under which You originally received\n-the Covered Software. If the Initial Developer includes a\n-notice in the Original Software prohibiting it from being\n-distributed or otherwise made available under any\n-subsequent version of the License, You must distribute and\n-make the Covered Software available under the terms of the\n-version of the License under which You originally received\n-the Covered Software. Otherwise, You may also choose to\n-use, distribute or otherwise make the Covered Software\n-available under the terms of any subsequent version of the\n-License published by the license steward.\n-\n-4.3. Modified Versions.\n-\n-When You are an Initial Developer and You want to create a\n-new license for Your Original Software, You may create and\n-use a modified version of this License if You: (a) rename\n-the license and remove any references to the name of the\n-license steward (except to note that the license differs\n-from this License); and (b) otherwise make it clear that\n-the license contains terms which differ from this License.\n-\n-5. DISCLAIMER OF WARRANTY.\n-\n-COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS\"\n-BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n-INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED\n-SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\n-PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND\n-PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY\n-COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE\n-INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF\n-ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF\n-WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n-ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS\n-DISCLAIMER.\n-\n-6. TERMINATION.\n-\n-6.1. This License and the rights granted hereunder will\n-terminate automatically if You fail to comply with terms\n-herein and fail to cure such breach within 30 days of\n-becoming aware of the breach. Provisions which, by their\n-nature, must remain in effect beyond the termination of\n-this License shall survive.\n-\n-6.2. If You assert a patent infringement claim (excluding\n-declaratory judgment actions) against Initial Developer or\n-a Contributor (the Initial Developer or Contributor against\n-whom You assert such claim is referred to as \"Participant\")\n-alleging that the Participant Software (meaning the\n-Contributor Version where the Participant is a Contributor\n-or the Original Software where the Participant is the\n-Initial Developer) directly or indirectly infringes any\n-patent, then any and all rights granted directly or\n-indirectly to You by such Participant, the Initial\n-Developer (if the Initial Developer is not the Participant)\n-and all Contributors under Sections 2.1 and/or 2.2 of this\n-License shall, upon 60 days notice from Participant\n-terminate prospectively and automatically at the expiration\n-of such 60 day notice period, unless if within such 60 day\n-period You withdraw Your claim with respect to the\n-Participant Software against such Participant either\n-unilaterally or pursuant to a written agreement with\n-Participant.\n-\n-6.3. In the event of termination under Sections 6.1 or 6.2\n-above, all end user licenses that have been validly granted\n-by You or any distributor hereunder prior to termination\n-(excluding licenses granted to You by any distributor)\n-shall survive termination.\n-\n-7. LIMITATION OF LIABILITY.\n-\n-UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n-(INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE\n-INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF\n-COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE\n-LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR\n-CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT\n-LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK\n-STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n-COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n-INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n-LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL\n-INJURY RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT\n-APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO\n-NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR\n-CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT\n-APPLY TO YOU.\n-\n-8. U.S. GOVERNMENT END USERS.\n-\n-The Covered Software is a \"commercial item,\" as that term is\n-defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of \"commercial\n-computer software\" (as that term is defined at 48 C.F.R. $\n-252.227-7014(a)(1)) and \"commercial computer software\n-documentation\" as such terms are used in 48 C.F.R. 12.212 (Sept.\n-1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1\n-through 227.7202-4 (June 1995), all U.S. Government End Users\n-acquire Covered Software with only those rights set forth herein.\n-This U.S. Government Rights clause is in lieu of, and supersedes,\n-any other FAR, DFAR, or other clause or provision that addresses\n-Government rights in computer software under this License.\n-\n-9. MISCELLANEOUS.\n-\n-This License represents the complete agreement concerning subject\n-matter hereof. If any provision of this License is held to be\n-unenforceable, such provision shall be reformed only to the\n-extent necessary to make it enforceable. This License shall be\n-governed by the law of the jurisdiction specified in a notice\n-contained within the Original Software (except to the extent\n-applicable law, if any, provides otherwise), excluding such\n-jurisdiction's conflict-of-law provisions. Any litigation\n-relating to this License shall be subject to the jurisdiction of\n-the courts located in the jurisdiction and venue specified in a\n-notice contained within the Original Software, with the losing\n-party responsible for costs, including, without limitation, court\n-costs and reasonable attorneys' fees and expenses. The\n-application of the United Nations Convention on Contracts for the\n-International Sale of Goods is expressly excluded. Any law or\n-regulation which provides that the language of a contract shall\n-be construed against the drafter shall not apply to this License.\n-You agree that You alone are responsible for compliance with the\n-United States export administration regulations (and the export\n-control laws and regulation of any other countries) when You use,\n-distribute or otherwise make available any Covered Software.\n-\n-10. RESPONSIBILITY FOR CLAIMS.\n-\n-As between Initial Developer and the Contributors, each party is\n-responsible for claims and damages arising, directly or\n-indirectly, out of its utilization of rights under this License\n-and You agree to work with Initial Developer and Contributors to\n-distribute such responsibility on an equitable basis. Nothing\n-herein is intended or shall be deemed to constitute any admission\n-of liability.\n-\n-==\n-\n-For javax.annotation-api (https://jcp.org/en/jsr/detail?id=250):\n-This is licensed under the CDDL 1.0, see above.\n-\n-==\n-\n-For Bean Validation API (http://beanvalidation.org/):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For javax.ws.rs-api (https://jax-rs-spec.java.net/):\n-This is licensed under the CDDL 1.0, see above.\n-\n-==\n-\n-For Joda Time (http://www.joda.org/joda-time/):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For StAX2 API (http://wiki.fasterxml.com/WoodstoxStax2):\n-This is licensed under the BSD license:\n-\n-Redistribution and use in source and binary forms, with or without \n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this \n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice, \n-this list of conditions and the following disclaimer in the documentation \n-and/or other materials provided with the distribution.\n-\n-3. Neither the name of the copyright holder nor the names of its contributors \n-may be used to endorse or promote products derived from this software without \n-specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-==\n-\n-For Woodstox (http://wiki.fasterxml.com/WoodstoxHome):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For jasypt (http://www.jasypt.org/):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For Simple Logging Facade for Java - SLF4J (http://www.slf4j.org/):\n-This is licensed under the MIT license:\n-\n- Permission is hereby granted, free  of charge, to any person obtaining\n- a  copy  of this  software  and  associated  documentation files  (the\n- \"Software\"), to  deal in  the Software without  restriction, including\n- without limitation  the rights to  use, copy, modify,  merge, publish,\n- distribute,  sublicense, and/or sell  copies of  the Software,  and to\n- permit persons to whom the Software  is furnished to do so, subject to\n- the following conditions:\n- \n- The  above  copyright  notice  and  this permission  notice  shall  be\n- included in all copies or substantial portions of the Software.\n- \n- THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n- EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n- MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n- NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n- LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n- OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n- WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-==\n-\n-For Spring Framework (http://projects.spring.io/spring-framework/):\n-This is licensed under the AL 2.0, see above."},{"sha":"3171f8e46e514407dc4fdedc83590e1c87da8d4d","filename":"client/cli/NOTICE","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2FNOTICE?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-Apache Syncope\n-Copyright 2012-2018 The Apache Software Foundation\n-\n-This product includes software developed by:\n-The Apache Software Foundation (http://www.apache.org/).\n-\n-The following copyright notice(s) were affixed to portions of this code\n-with which this file is now or was at one time distributed.\n-\n-==\n-\n-This product includes software developed by the Jackson project.\n-\n-==\n-\n-This product includes software developed by the JAXB project.\n-Copyright (c) 2013-2016 The JAXB project.\n-\n-==\n-\n-This product includs software developed by Oracle.\n-Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.\n-\n-==\n-\n-This product includes software developed by the Bean Validation Project (http://beanvalidation.org).\n-Copyright (c) Red Hat, Inc., Emmanuel Bernard\n-\n-==\n-\n-This product includes software developed by the JAX-RS project.\n-Copyright (c) 2014, Oracle Corporation and/or its affiliates. All rights reserved.\n-\n-==\n-\n-This product includes software developed by the Joda Time project.\n-Copyright (c) 2002-2016 Joda.org. All Rights Reserved.\n-\n-==\n-\n-This product includes software developed by the Stax 2 Extension API Project.\n-\n-==\n-\n-This product includes software developed by the Woodstox Project.\n-\n-==\n-\n-This project includes software developed by the Jasypt project.\n-Copyright (c) 2014 The JASYPT team. All Rights Reserved\n-\n-==\n-\n-This products includes software developed by the Simple Logging Facade for Java (SLF4J) project.\n-Copyright (c) 2004-2016 QOS.ch.\n-\n-==\n-\n-This product includes software developed by SpringSource.\n-Copyright (c) 2004-2016 SpringSource\n-All rights reserved."},{"sha":"e0daba52b2f643f8cce4100edae4b9a60bb90aae","filename":"client/cli/pom.xml","status":"removed","additions":0,"deletions":206,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,206 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope</groupId>\n-    <artifactId>syncope-client</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Client CLI</name>\n-  <description>Apache Syncope Client CLI</description>\n-  \n-  <groupId>org.apache.syncope.client</groupId>\n-  <artifactId>syncope-client-cli</artifactId>\n-  <packaging>jar</packaging>\n-\n-  <properties>\n-    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n-  </properties>\n-  \n-  <dependencies>\n-    \n-    <dependency>\n-      <groupId>org.apache.syncope.client.idm</groupId>\n-      <artifactId>syncope-client-idm-lib</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.jasypt</groupId>\n-      <artifactId>jasypt</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-jdbc</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-persistence-jpa</artifactId>\n-      <version>${project.version}</version>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.h2database</groupId>\n-      <artifactId>h2</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.junit.jupiter</groupId>\n-      <artifactId>junit-jupiter-engine</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-  </dependencies>\n-\n-  <build>\n-  \n-    <defaultGoal>package</defaultGoal>\n-  \n-    <plugins>\n-      <plugin>\n-        <groupId>org.codehaus.gmaven</groupId>\n-        <artifactId>gmaven-plugin</artifactId>\n-        <inherited>true</inherited>\n-        <executions>\n-          <execution>\n-            <phase>generate-resources</phase>\n-            <goals>\n-              <goal>execute</goal>\n-            </goals>\n-            <configuration>\n-              <source>\n-                project.properties['log.directory'] = System.getProperty(\"java.io.tmpdir\")\n-              </source>\n-            </configuration>\n-          </execution>\n-        </executions>\n-      </plugin>\n-      \n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-assembly-plugin</artifactId>\n-        <configuration>\n-          <appendAssemblyId>false</appendAssemblyId>\n-          <descriptors>\n-            <descriptor>src/assemble/cli-zip.xml</descriptor>\n-          </descriptors>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <id>make-cli-zip</id>\n-            <phase>verify</phase>\n-            <goals>\n-              <goal>single</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n-      \n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-     \n-    <resources>\n-      <resource>\n-        <directory>src/main/resources</directory>\n-        <filtering>true</filtering>\n-      </resource>\n-\n-      <resource>\n-        <directory>${basedir}</directory>\n-        <targetPath>META-INF</targetPath>\n-        <includes>\n-          <include>LICENSE</include>\n-          <include>NOTICE</include>\n-        </includes>\n-      </resource>\n-    </resources>\n-    \n-    <testResources>\n-      <testResource>\n-        <directory>src/test/resources</directory>\n-        <filtering>true</filtering>\n-      </testResource>\n-    </testResources>\n-  </build>\n-  \n-  <profiles>\n-    <profile>\n-      <id>apache-release</id>\n-\n-      <build>\n-        <plugins>      \n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-deploy-plugin</artifactId>\n-            <configuration>\n-              <skip>true</skip>\n-            </configuration>\n-          </plugin>           \n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-source-plugin</artifactId>\n-            <inherited>false</inherited>\n-            <configuration>\n-              <skipSource>true</skipSource>\n-            </configuration>\n-          </plugin>\n-        </plugins>\n-      </build>\n-    </profile>\n-  </profiles>\n-    \n-</project>"},{"sha":"1e242a385192292495e656d395d999539bff612c","filename":"client/cli/src/assemble/cli-zip.xml","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fassemble%2Fcli-zip.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fassemble%2Fcli-zip.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fassemble%2Fcli-zip.xml?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,62 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"\n-          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-          xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 \n-                              http://maven.apache.org/xsd/assembly-1.1.2.xsd\">\n-\n-  <id>cli</id>\n-  \n-  <formats>\n-    <format>zip</format>\n-  </formats>\n-  \n-  <includeBaseDirectory>false</includeBaseDirectory>\n-  \n-  <fileSets>\n-    <fileSet>\n-      <directory>${basedir}</directory>\n-      <includes>\n-        <include>LICENSE</include>\n-        <include>NOTICE</include>\n-      </includes>\n-      <outputDirectory>${project.build.finalName}</outputDirectory>\n-    </fileSet>\n-    <fileSet>\n-      <directory>${project.build.directory}/classes</directory>\n-      <includes>\n-        <include>syncopeadm.sh</include>\n-        <include>syncopeadm.bat</include>\n-      </includes>\n-      <outputDirectory>${project.build.finalName}</outputDirectory>\n-      <fileMode>0755</fileMode>\n-    </fileSet>\n-  </fileSets>\n-\n-  <dependencySets>\n-    <dependencySet>\n-      <outputDirectory>${project.build.finalName}/lib</outputDirectory>\n-      <useProjectArtifact>true</useProjectArtifact>\n-      <unpack>false</unpack>\n-      <scope>runtime</scope>\n-    </dependencySet>\n-  </dependencySets>\n-  \n-</assembly>"},{"sha":"06dd7f423fb09945f13f7a0247f15eba94234dd3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ArgsManager.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.io.File;\n-import org.apache.syncope.client.cli.commands.install.InstallConfigFileTemplate;\n-\n-public final class ArgsManager {\n-\n-    public static void validator(final String[] args) throws IllegalArgumentException {\n-        if (args.length == 0) {\n-            throw new IllegalArgumentException(\"Syntax error: no options\");\n-        } else if (!\"install\".equalsIgnoreCase(args[0])) {\n-            final File configFile = new File(InstallConfigFileTemplate.configurationFilePath());\n-            if (!configFile.exists()) {\n-                throw new IllegalArgumentException(\n-                        \"It seems you need to first setup the CLI client. Run install --setup.\");\n-            }\n-        }\n-    }\n-\n-    public static String[] operands(final String[] args) {\n-        final String[] operands = new String[args.length - 1];\n-        for (int i = 1; i < args.length; i++) {\n-            operands[i - 1] = args[i];\n-        }\n-        return operands;\n-    }\n-\n-    private ArgsManager() {\n-        // private constructor for static utility class\n-    }\n-\n-}"},{"sha":"2c36dd8423d0c962fd41bf9bbc66296a01d705af","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Command.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-\n-@Retention(value = RetentionPolicy.RUNTIME)\n-@Target(value = ElementType.TYPE)\n-public @interface Command {\n-\n-    String name();\n-\n-}"},{"sha":"9ee78855413cfaf64e3719d3d12a4e3d88c6593b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/CommandClassScanner.java","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,47 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n-import org.springframework.core.type.filter.AnnotationTypeFilter;\n-import org.springframework.util.ClassUtils;\n-\n-public class CommandClassScanner extends ClassPathScanningCandidateComponentProvider {\n-\n-    public CommandClassScanner() {\n-        super(false);\n-        addIncludeFilter(new AnnotationTypeFilter(Command.class));\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public final List<Class<? extends AbstractCommand>> getComponentClasses() throws IllegalArgumentException {\n-        final String basePackage = \"org.apache.syncope.client.cli.commands\";\n-        List<Class<? extends AbstractCommand>> classes = new ArrayList<>();\n-        findCandidateComponents(basePackage).stream().\n-                map(candidate -> (Class<? extends AbstractCommand>) ClassUtils.resolveClassName(\n-                candidate.getBeanClassName(), ClassUtils.getDefaultClassLoader())).\n-                forEachOrdered(cls -> {\n-                    classes.add(cls);\n-                });\n-        return classes;\n-    }\n-}"},{"sha":"0290902f855a80a9697897b85f672c9ac294c34a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"removed","additions":0,"deletions":117,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,117 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-\n-public class Input {\n-\n-    public static Pair<String, String> toPairParameter(final String parameter) throws IllegalArgumentException {\n-        if (!parameter.contains(\"=\")) {\n-            throw new IllegalArgumentException(\"Parameter syntax error!\");\n-        }\n-        final String[] pairParameterArray = parameter.split(\"=\");\n-        return Pair.of(pairParameterArray[0], pairParameterArray[1]);\n-    }\n-\n-    private final AbstractCommand command;\n-\n-    private final String[] parameters;\n-\n-    private final List<String> commandFields = new ArrayList<>();\n-\n-    private String option;\n-\n-    public Input(final String[] args)\n-            throws InstantiationException, IllegalAccessException, IllegalArgumentException,\n-            NoSuchMethodException, InvocationTargetException {\n-\n-        command = CommandUtils.fromArgs(args[0]);\n-        commandFields.add(args[0]);\n-\n-        if (args.length > 1) {\n-            option = args[1];\n-            commandFields.add(args[1]);\n-        }\n-\n-        if (args.length > 2) {\n-            parameters = new String[args.length - 2];\n-            for (int i = 0; i < parameters.length; i++) {\n-                parameters[i] = args[i + 2];\n-                commandFields.add(parameters[i]);\n-            }\n-        } else {\n-            parameters = new String[0];\n-        }\n-    }\n-\n-    public AbstractCommand getCommand() {\n-        return command;\n-    }\n-\n-    public void setOption(final String option) {\n-        this.option = option;\n-    }\n-\n-    public String getOption() {\n-        return option;\n-    }\n-\n-    public String[] getParameters() {\n-        return parameters;\n-    }\n-\n-    public List<String> listParameters() {\n-        return Arrays.asList(parameters);\n-    }\n-\n-    public String firstParameter() {\n-        return parameters[0];\n-    }\n-\n-    public String secondParameter() {\n-        return parameters[1];\n-    }\n-\n-    public String thirdParameter() {\n-        return parameters[2];\n-    }\n-\n-    public String lastParameter() {\n-        return parameters[parameters.length - 1];\n-    }\n-\n-    public int parameterNumber() {\n-        return parameters.length;\n-    }\n-\n-    public String printCommandFields() {\n-        final StringBuilder commandBuilder = new StringBuilder();\n-        commandFields.forEach(commandField -> {\n-            commandBuilder.append(commandField).append(\" \");\n-        });\n-        return commandBuilder.toString();\n-    }\n-}"},{"sha":"de3d0f1507ea18f8059eebb3efa2d9adb39e7850","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ResultManager.java","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,25 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-\n-public class ResultManager extends CommonsResultManager {\n-\n-}"},{"sha":"8a75f757276a903f0144be34b5a11e3f460e290b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"removed","additions":0,"deletions":96,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,96 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import javax.ws.rs.ProcessingException;\n-import org.apache.commons.lang3.exception.ExceptionUtils;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public final class SyncopeAdm {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeAdm.class);\n-\n-    private static final ResultManager RESULT_MANAGER = new ResultManager();\n-\n-    public static void main(final String[] args) {\n-        LOG.debug(\"Starting with args \\n\");\n-\n-        try {\n-            ArgsManager.validator(args);\n-            final Input input = new Input(args);\n-            final AbstractCommand command = input.getCommand();\n-\n-            LOG.debug(\"Command: {}\", command.getClass().getAnnotation(Command.class).name());\n-            LOG.debug(\"Option: {}\", input.getOption());\n-            LOG.debug(\"Parameters:\");\n-            for (final String parameter : input.getParameters()) {\n-                LOG.debug(\"   > \" + parameter);\n-            }\n-\n-            System.out.println(\"\");\n-            System.out.println(\"You are running: \" + input.printCommandFields());\n-            command.execute(input);\n-        } catch (IllegalAccessException | InstantiationException | NoSuchMethodException\n-                | InvocationTargetException e) {\n-\n-            System.out.println(helpMessage());\n-        } catch (final IllegalArgumentException ex) {\n-            LOG.error(\"Error in main\", ex);\n-            if (!ex.getMessage().startsWith(\"It seems you\")) {\n-                System.out.println(\"\");\n-                System.out.println(helpMessage());\n-            } else {\n-                RESULT_MANAGER.genericError(ex.getMessage());\n-            }\n-        } catch (final ProcessingException e) {\n-            LOG.error(\"Error in main\", e);\n-            RESULT_MANAGER.genericError(\"Problems contacting Syncope Server\");\n-            RESULT_MANAGER.genericError(ExceptionUtils.getMessage(e));\n-        }\n-\n-    }\n-\n-    private static String helpMessage() {\n-        final StringBuilder helpMessageBuilder = new StringBuilder(\"Usage: Main [options]\\n\");\n-        helpMessageBuilder.append(\"  Options:\\n\");\n-        try {\n-            for (AbstractCommand command : CommandUtils.commands()) {\n-                final String commandName = command.getClass().getAnnotation(Command.class).name();\n-                helpMessageBuilder.append(\"    \").append(commandName);\n-                if (!\"help\".equalsIgnoreCase(commandName)) {\n-                    helpMessageBuilder.append(\" --help\");\n-                }\n-                helpMessageBuilder.append(\"\\n\");\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"Error in main\", e);\n-            RESULT_MANAGER.genericError(e.getMessage());\n-        }\n-\n-        return helpMessageBuilder.toString();\n-    }\n-\n-    private SyncopeAdm() {\n-        // private constructor for static utility class\n-    }\n-}"},{"sha":"29c6feb6382fdeb191de06eaa770cb9292149a74","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeServices.java","status":"removed","additions":0,"deletions":87,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,87 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.util.Properties;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.syncope.client.cli.commands.install.InstallConfigFileTemplate;\n-import org.apache.syncope.client.cli.util.JasyptUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.client.lib.batch.BatchRequest;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public final class SyncopeServices {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeServices.class);\n-\n-    private static String SYNCOPE_ADDRESS;\n-\n-    private static SyncopeClient client() {\n-        final Properties properties = new Properties();\n-        try (InputStream is = Files.newInputStream(Paths.get(InstallConfigFileTemplate.configurationFilePath()))) {\n-            properties.load(is);\n-        } catch (final IOException e) {\n-            LOG.error(\"Error opening properties file\", e);\n-        }\n-\n-        String syncopeAdminPassword = JasyptUtils.get().decrypt(properties.getProperty(\"syncope.admin.password\"));\n-        SYNCOPE_ADDRESS = properties.getProperty(\"syncope.rest.services\");\n-        String useGZIPCompression = properties.getProperty(\"useGZIPCompression\");\n-        return new SyncopeClientFactoryBean().\n-                setAddress(SYNCOPE_ADDRESS).\n-                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression)).\n-                create(properties.getProperty(\"syncope.admin.user\"), syncopeAdminPassword);\n-    }\n-\n-    public static <T> T get(final Class<T> clazz) {\n-        LOG.debug(\"Creating service for {}\", clazz.getName());\n-        return client().getService(clazz);\n-    }\n-\n-    public static BatchRequest batch() {\n-        return client().batch();\n-    }\n-\n-    public static String getAddress() {\n-        return SYNCOPE_ADDRESS;\n-    }\n-\n-    public static void testUsernameAndPassword(final String username, final String password) {\n-        final Properties properties = new Properties();\n-        try (InputStream is = Files.newInputStream(Paths.get(InstallConfigFileTemplate.configurationFilePath()))) {\n-            properties.load(is);\n-        } catch (final IOException e) {\n-            LOG.error(\"Error opening properties file\", e);\n-        }\n-        final SyncopeClient syncopeClient = new SyncopeClientFactoryBean()\n-                .setAddress(properties.getProperty(\"syncope.rest.services\")).create(username, password);\n-        syncopeClient.getService(SyncopeService.class).platform();\n-    }\n-\n-    private SyncopeServices() {\n-        // private constructor for static utility class\n-    }\n-}"},{"sha":"7d9d541d7a87e30cf62576413a5904a31c2bb4fa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/AbstractCommand.java","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FAbstractCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,28 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands;\n-\n-import org.apache.syncope.client.cli.Input;\n-\n-public abstract class AbstractCommand {\n-\n-    public abstract void execute(Input input);\n-\n-    public abstract String getHelpMessage();\n-}"},{"sha":"da5b2b4dd3ca6bc4b9bb51b26041d77afa382880","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"removed","additions":0,"deletions":99,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,99 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.view.Messages;\n-import org.apache.syncope.client.cli.view.Table;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n-\n-public abstract class CommonsResultManager {\n-\n-    public void numberFormatException(final String what, final String key) {\n-        Messages.printIdNotNumberDeletedMessage(what, key);\n-    }\n-\n-    public void unnecessaryParameters(final List<String> parameters, final String helpMessage) {\n-        Messages.printUnnecessaryParameters(parameters, helpMessage);\n-    }\n-\n-    public void deletedMessage(final String what, final String key) {\n-        Messages.printDeletedMessage(what, key);\n-    }\n-\n-    public void notFoundError(final String what, final String parameter) {\n-        Messages.printNofFoundMessage(what, parameter);\n-    }\n-\n-    public void notBooleanDeletedError(final String what, final String key) {\n-        Messages.printNotBooleanDeletedMessage(what, key);\n-    }\n-\n-    public void typeNotValidError(final String what, final String parameter, final String[] options) {\n-        Messages.printTypeNotValidMessage(what, parameter, options);\n-    }\n-\n-    public void commandOptionError(final String message) {\n-        Messages.printCommandOptionMessage(message);\n-    }\n-\n-    public void defaultOptionMessage(final String option, final String helpMessage) {\n-        Messages.printDefaultMessage(option, helpMessage);\n-    }\n-\n-    public void genericMessage(final String... messages) {\n-        Messages.printMessage(messages);\n-    }\n-\n-    public void genericError(final String error) {\n-        Messages.printMessage(\"Error: \" + error);\n-    }\n-\n-    public String commandHelpMessage(final Class<?> name) {\n-        return Messages.commandHelpMessage(name.getAnnotation(Command.class).name());\n-    }\n-\n-    protected void printConfiguration(final Collection<ConnConfProperty> props) {\n-        props.forEach(prop -> {\n-            System.out.println(\"       name: \" + prop.getSchema().getName());\n-            System.out.println(\"       values: \" + prop.getValues());\n-            System.out.println(\"       type: \" + prop.getSchema().getType());\n-            System.out.println(\"       display name: \" + prop.getSchema().getDisplayName());\n-            System.out.println(\"       help message: \" + prop.getSchema().getHelpMessage());\n-            System.out.println(\"       order: \" + prop.getSchema().getOrder());\n-            System.out.println(\"       default values: \" + prop.getSchema().getDefaultValues());\n-            System.out.println(\"       confidential: \" + prop.getSchema().isConfidential());\n-            System.out.println(\"       required: \" + prop.getSchema().isRequired());\n-            System.out.println(\"       overridable: \" + prop.isOverridable());\n-            System.out.println(\"\");\n-        });\n-    }\n-\n-    protected void printDetails(final String title, final Map<String, String> details) {\n-        final Table.TableBuilder tableBuilder = new Table.TableBuilder(title).header(\"detail\").header(\"value\");\n-        details.forEach((key, value) -> {\n-            tableBuilder.rowValues(Arrays.asList(key, value));\n-        });\n-        tableBuilder.build().print();\n-    }\n-}"},{"sha":"b78b772754fc747f83092664cc38ccac7528953f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AbstractAnyObjectCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAbstractAnyObjectCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAbstractAnyObjectCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAbstractAnyObjectCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-public abstract class AbstractAnyObjectCommand {\n-\n-    protected final AnyObjectSyncopeOperations anySyncopeOperations = new AnyObjectSyncopeOperations();\n-\n-    protected final AnyObjectResultManager anyResultManager = new AnyObjectResultManager();\n-\n-}"},{"sha":"520e3ecaefa736ef9acf0f5ac17778bbcdc03cc8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectCommand.java","status":"removed","additions":0,"deletions":111,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,111 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"anyObject\")\n-public class AnyObjectCommand extends AbstractCommand {\n-\n-    private final AnyObjectResultManager anyObjectResultManager = new AnyObjectResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(AnyObjectOptions.HELP.getOptionName());\n-        }\n-        switch (AnyObjectOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                break;\n-            case LIST:\n-                new AnyObjectList(input).list();\n-                break;\n-            case READ:\n-                new AnyObjectRead(input).read();\n-                break;\n-            case READ_ATTRIBUTES_BY_SCHEMA:\n-                new AnyObjectReadAttributeBySchemaTypeAndSchemaKey(input).read();\n-                break;\n-            case READ_ATTRIBUTES_BY_SCHEMA_TYPE:\n-                new AnyObjectReadAttributesBySchemaType(input).read();\n-                break;\n-            case DELETE:\n-                new AnyObjectDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                anyObjectResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return anyObjectResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum AnyObjectOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        READ_ATTRIBUTES_BY_SCHEMA(\"--read-attr-by-schema\"),\n-        READ_ATTRIBUTES_BY_SCHEMA_TYPE(\"--read-attr-by-schema-type\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        AnyObjectOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static AnyObjectOptions fromName(final String name) {\n-            AnyObjectOptions optionToReturn = HELP;\n-            for (final AnyObjectOptions option : AnyObjectOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final AnyObjectOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"f7b635c7553c5597446c7bfdfd3306d9d21d62dd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectDelete.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class AnyObjectDelete extends AbstractAnyObjectCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"any --delete {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public AnyObjectDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    anySyncopeOperations.delete(parameter);\n-                    anyResultManager.deletedMessage(\"Any\", parameter);\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting group\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        anyResultManager.notFoundError(\"any\", parameter);\n-                    } else {\n-                        anyResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    anyResultManager.numberFormatException(\"any\", parameter);\n-                }\n-            }\n-        } else {\n-            anyResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"1e3e6585a3450987e6e49e8654b817eeacf0b511","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class AnyObjectList extends AbstractAnyObjectCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"any --list {ANY-TYPE}\";\n-\n-    private final Input input;\n-\n-    public AnyObjectList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                anyResultManager.printAnys(anySyncopeOperations.list(input.firstParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing any object\", ex);\n-                anyResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            anyResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"f084c38d39a9a86e301ff90f46dc8fe6b57e7fd9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectRead.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class AnyObjectRead extends AbstractAnyObjectCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"any --read {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public AnyObjectRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    anyResultManager.printAny(anySyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error reading group\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        anyResultManager.notFoundError(\"Any object\", parameter);\n-                    } else {\n-                        anyResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    anyResultManager.numberFormatException(\"any object\", parameter);\n-                }\n-            }\n-        } else {\n-            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e3deda36abc02aec459b91095b92902eba7c9502","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectReadAttributeBySchemaTypeAndSchemaKey.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributeBySchemaTypeAndSchemaKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributeBySchemaTypeAndSchemaKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributeBySchemaTypeAndSchemaKey.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class AnyObjectReadAttributeBySchemaTypeAndSchemaKey extends AbstractAnyObjectCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectReadAttributeBySchemaTypeAndSchemaKey.class);\n-\n-    private static final String READ_HELP_MESSAGE\n-            = \"any --read-attr-by-schema {ANY_OBJECT-KEY} {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public AnyObjectReadAttributeBySchemaTypeAndSchemaKey(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() == 3) {\n-            try {\n-                anyResultManager.printAttribute(anySyncopeOperations.readAttribute(\n-                        input.firstParameter(), input.secondParameter(), input.thirdParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading any object\", ex);\n-                anyResultManager.genericError(ex.getMessage());\n-            } catch (final NumberFormatException ex) {\n-                anyResultManager.numberFormatException(\"any object\", input.firstParameter());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                anyResultManager.typeNotValidError(\n-                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"c2ece790763d3116f7a7d4549468f67166b65b75","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectReadAttributesBySchemaType.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributesBySchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributesBySchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectReadAttributesBySchemaType.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class AnyObjectReadAttributesBySchemaType extends AbstractAnyObjectCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectReadAttributesBySchemaType.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"any --read-attr-by-schema-type {ANY_OBJECT-KEY} {SCHEMA-TYPE}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public AnyObjectReadAttributesBySchemaType(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() == 2) {\n-            try {\n-                anyResultManager.printAttributes(anySyncopeOperations.readAttributes(\n-                        input.firstParameter(), input.secondParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading any\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    anyResultManager.notFoundError(\"Any\", input.firstParameter());\n-                } else {\n-                    anyResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                anyResultManager.numberFormatException(\"any\", input.firstParameter());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                anyResultManager.typeNotValidError(\n-                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"d022ef7de83dbc9eb12b906655f0f41528f7b963","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectResultManager.java","status":"removed","additions":0,"deletions":77,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,77 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-\n-public class AnyObjectResultManager extends CommonsResultManager {\n-\n-    public void printAnys(final List<AnyObjectTO> anyObjectTOs) {\n-        System.out.println(\"\");\n-        for (final AnyObjectTO anyObjectTO : anyObjectTOs) {\n-            printAny(anyObjectTO);\n-        }\n-    }\n-\n-    public void printAny(final AnyObjectTO anyObjectTO) {\n-        System.out.println(\" > ANY OBJECT KEY: \" + anyObjectTO.getKey());\n-        System.out.println(\"    type: \" + anyObjectTO.getType());\n-        System.out.println(\"    realm: \" + anyObjectTO.getRealm());\n-        System.out.println(\"    status: \" + anyObjectTO.getStatus());\n-        System.out.println(\"    RESOURCES: \");\n-        printResources(anyObjectTO.getResources());\n-        System.out.println(\"    PLAIN ATTRIBUTES: \");\n-        printAttributes(anyObjectTO.getPlainAttrs());\n-        System.out.println(\"    DERIVED ATTRIBUTES: \");\n-        printAttributes(anyObjectTO.getDerAttrs());\n-        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n-        printAttributes(anyObjectTO.getVirAttrs());\n-    }\n-\n-    private void printResources(final Set<String> resources) {\n-        for (final String resource : resources) {\n-            System.out.println(\"      - \" + resource);\n-        }\n-    }\n-\n-    public void printAttributes(final Set<Attr> attributes) {\n-        for (final Attr attribute : attributes) {\n-            printAttribute(attribute);\n-        }\n-        System.out.println(\"\");\n-    }\n-\n-    public void printAttribute(final Attr attribute) {\n-        final StringBuilder attributeMessageBuilder = new StringBuilder();\n-        attributeMessageBuilder.append(\"     - \")\n-                .append(attribute.getSchema())\n-                .append(\": \")\n-                .append(attribute.getValues());\n-        System.out.println(attributeMessageBuilder.toString());\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"groups details\", details);\n-    }\n-}"},{"sha":"936ebb044001e3cbf046de9e60272f7372b01cb2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectSyncopeOperations.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,56 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.anyobject;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.rest.api.beans.AnyQuery;\n-import org.apache.syncope.common.rest.api.service.AnyObjectService;\n-\n-public class AnyObjectSyncopeOperations {\n-\n-    private final AnyObjectService anyObjectService = SyncopeServices.get(AnyObjectService.class);\n-\n-    public List<AnyObjectTO> list(final String type) {\n-        return anyObjectService.search(\n-                new AnyQuery.Builder().fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(type).query()).build()).\n-                getResult();\n-    }\n-\n-    public AnyObjectTO read(final String anyKey) {\n-        return anyObjectService.read(anyKey);\n-    }\n-\n-    public Set<Attr> readAttributes(final String anyKey, final String schemaType) {\n-        return anyObjectService.read(anyKey, SchemaType.valueOf(schemaType));\n-    }\n-\n-    public Attr readAttribute(final String anyKey, final String schemaType, final String schema) {\n-        return anyObjectService.read(anyKey, SchemaType.valueOf(schemaType), schema);\n-    }\n-\n-    public void delete(final String anyKey) {\n-        anyObjectService.delete(anyKey);\n-    }\n-}"},{"sha":"d7e2d27417fb61fce618fda928fa9a3e38858798","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/AbstractConfigurationCommand.java","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FAbstractConfigurationCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,28 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-public abstract class AbstractConfigurationCommand {\n-\n-    protected final ConfigurationSyncopeOperations configurationSyncopeOperations =\n-            new ConfigurationSyncopeOperations();\n-\n-    protected final ConfigurationResultManager configurationResultManager = new ConfigurationResultManager();\n-\n-}"},{"sha":"ed7a613b8eb8a1cf4b2fc116ffbda3e5aeab2f3c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationCommand.java","status":"removed","additions":0,"deletions":109,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,109 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"configuration\")\n-public class ConfigurationCommand extends AbstractCommand {\n-\n-    private final ConfigurationResultManager configurationResultManager = new ConfigurationResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case GET:\n-                new ConfigurationGet(input).get();\n-                break;\n-            case READ:\n-                new ConfigurationRead(input).read();\n-                break;\n-            case UPDATE:\n-                new ConfigurationUpdate(input).update();\n-                break;\n-            case DELETE:\n-                new ConfigurationDelete(input).delete();\n-                break;\n-            case EXPORT:\n-                new ConfigurationExport(input).export();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                configurationResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return configurationResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        GET(\"--get\"),\n-        READ(\"--read\"),\n-        UPDATE(\"--update\"),\n-        DELETE(\"--delete\"),\n-        EXPORT(\"--export\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"423139b69186199f64fc1392438f454755be1485","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationDelete.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConfigurationDelete extends AbstractConfigurationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"configuration --delete {CONF-NAME} {CONF-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public ConfigurationDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    configurationSyncopeOperations.delete(parameter);\n-                    configurationResultManager.deletedMessage(\"Configuration\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error deleting configuration\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        configurationResultManager.notFoundError(\"Configuration\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        configurationResultManager.genericError(\"You cannot delete configuration \" + parameter);\n-                    } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                }\n-            }\n-        } else {\n-            configurationResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"d86a95d5f867ee0df964314216040f9f6735c88b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationExport.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.io.InputStream;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.XMLUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConfigurationExport extends AbstractConfigurationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationExport.class);\n-\n-    private static final String EXPORT_HELP_MESSAGE = \"configuration --export {WHERE-DIR}\";\n-\n-    private static final String EXPORT_FILE_NAME = \"/content.xml\";\n-\n-    private final Input input;\n-\n-    public ConfigurationExport(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void export() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                XMLUtils.createXMLFile(\n-                        (InputStream) configurationSyncopeOperations.export().getEntity(),\n-                        input.firstParameter() + EXPORT_FILE_NAME);\n-                configurationResultManager.genericMessage(\n-                        input.firstParameter() + EXPORT_FILE_NAME + \" successfully created\");\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error exporting configuration\", ex);\n-                configurationResultManager.genericError(\"Error calling configuration service \" + ex.getMessage());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Error exporting configuration\", ex);\n-                configurationResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            configurationResultManager.commandOptionError(EXPORT_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"af620e21db865df44d9b519e7dbf3b8b1decb59e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationGet.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConfigurationGet extends AbstractConfigurationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationGet.class);\n-\n-    private static final String GET_HELP_MESSAGE = \"configuration --get\";\n-\n-    private final Input input;\n-\n-    public ConfigurationGet(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void get() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                configurationResultManager.fromGet(configurationSyncopeOperations.list());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Error getting configuration\", ex);\n-                configurationResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            configurationResultManager.unnecessaryParameters(input.listParameters(), GET_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"dbde8ffebd4cc5725ac305002da9574595d2c49d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationRead.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConfigurationRead extends AbstractConfigurationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"configuration --read {CONF-NAME} {CONF-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public ConfigurationRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            final List<Attr> attrList = new ArrayList<>();\n-            boolean failed = false;\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    attrList.add(configurationSyncopeOperations.get(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading configuration\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        configurationResultManager.notFoundError(\"Configuration\", parameter);\n-                    } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n-                    }\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                configurationResultManager.fromGet(attrList);\n-            }\n-        } else {\n-            configurationResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"94509e349b9c35027a0c682376182a92e58c732d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationResultManager.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.client.cli.view.Table;\n-import org.apache.syncope.common.lib.Attr;\n-\n-public class ConfigurationResultManager extends CommonsResultManager {\n-\n-    public void fromGet(final List<Attr> attrTOs) {\n-        fromCommandToView(\"syncope configuration\", attrTOs);\n-    }\n-\n-    public void fromRead(final List<Attr> attrTOs) {\n-        fromCommandToView(\"selected conf attributes\", attrTOs);\n-    }\n-\n-    public void fromUpdate(final List<Attr> attrTOs) {\n-        fromCommandToView(\"updated conf attributes\", attrTOs);\n-    }\n-\n-    private void fromCommandToView(final String title, final List<Attr> attrTOs) {\n-        final Table.TableBuilder tableBuilder = new Table.TableBuilder(title).header(\"attribute\").header(\"value\");\n-        attrTOs.forEach(attrTO -> {\n-            String attrValue = attrTO.getValues().toString();\n-            attrValue = attrValue.substring(0, attrValue.length() - 1);\n-            attrValue = attrValue.substring(1, attrValue.length());\n-            tableBuilder.rowValues(Arrays.asList(attrTO.getSchema(), attrValue));\n-        });\n-        tableBuilder.build().print();\n-    }\n-}"},{"sha":"c9e6856502a5bef847c7f9a5c165635177ab72b1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationSyncopeOperations.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.util.List;\n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-\n-public class ConfigurationSyncopeOperations {\n-\n-    private final ConfigurationService configurationService = SyncopeServices.get(ConfigurationService.class);\n-\n-    public Attr get(final String schema) {\n-        return configurationService.get(schema);\n-    }\n-\n-    public void set(final Attr attrTO) {\n-        configurationService.set(attrTO);\n-    }\n-\n-    public List<Attr> list() {\n-        return configurationService.list();\n-    }\n-\n-    public Response export() {\n-        return configurationService.export();\n-    }\n-\n-    public void delete(final String schema) {\n-        configurationService.delete(schema);\n-    }\n-}"},{"sha":"e4e4f9e73c44860c204ccb20a8793fd06628bd77","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"removed","additions":0,"deletions":83,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,83 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.configuration;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConfigurationUpdate extends AbstractConfigurationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationUpdate.class);\n-\n-    private static final String UPDATE_HELP_MESSAGE =\n-            \"configuration --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\";\n-\n-    private final Input input;\n-\n-    public ConfigurationUpdate(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void update() {\n-        if (input.parameterNumber() >= 1) {\n-            List<Attr> attrList = new ArrayList<>();\n-            boolean failed = false;\n-            for (String parameter : input.getParameters()) {\n-                Pair<String, String> pairParameter = Input.toPairParameter(parameter);\n-                try {\n-                    Attr attrTO = configurationSyncopeOperations.get(pairParameter.getKey());\n-                    attrTO.getValues().clear();\n-                    attrTO.getValues().add(pairParameter.getValue());\n-                    configurationSyncopeOperations.set(attrTO);\n-                    attrList.add(attrTO);\n-                } catch (IllegalArgumentException ex) {\n-                    LOG.error(\"Error updating configuration\", ex);\n-                    configurationResultManager.genericError(ex.getMessage());\n-                    configurationResultManager.genericError(UPDATE_HELP_MESSAGE);\n-                    failed = true;\n-                    break;\n-                } catch (SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error updating configuration\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        configurationResultManager.notFoundError(\"Configuration\", pairParameter.getKey());\n-                    } else if (ex.getMessage().startsWith(\"InvalidValues\")) {\n-                        configurationResultManager.genericError(\n-                                pairParameter.getValue() + \" is not a valid value for \" + pairParameter.getKey());\n-                    } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n-                    }\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                configurationResultManager.fromUpdate(attrList);\n-            }\n-        } else {\n-            configurationResultManager.commandOptionError(UPDATE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6286ed46d094deab457437ae28012f0e367e6987","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/AbstractConnectorCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-public abstract class AbstractConnectorCommand {\n-\n-    protected final ConnectorSyncopeOperations connectorSyncopeOperations = new ConnectorSyncopeOperations();\n-\n-    protected final ConnectorResultManager connectorResultManager = new ConnectorResultManager();\n-\n-}"},{"sha":"aeec15c4853d0a4636bbe2a0932bb1c0eb994b72","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"removed","additions":0,"deletions":117,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,117 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"connector\")\n-public class ConnectorCommand extends AbstractCommand {\n-\n-    private final ConnectorResultManager connectorResultManager = new ConnectorResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(ConnectorOptions.HELP.getOptionName());\n-        }\n-\n-        switch (ConnectorOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new ConnectorDetails(input).details();\n-                break;\n-            case LIST:\n-                new ConnectorList(input).list();\n-                break;\n-            case LIST_BUNDLES:\n-                new ConnectorListBundles(input).list();\n-                break;\n-            case LIST_CONFIGURATION:\n-                new ConnectorListConfigurationProperties(input).list();\n-                break;\n-            case READ:\n-                new ConnectorRead(input).read();\n-                break;\n-            case READ_BY_RESOURCE:\n-                new ConnectorReadByResource(input).read();\n-                break;\n-            case DELETE:\n-                new ConnectorDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                connectorResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return connectorResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum ConnectorOptions {\n-\n-        HELP(\"--help\"),\n-        LIST(\"--list\"),\n-        DETAILS(\"--details\"),\n-        LIST_BUNDLES(\"--list-bundles\"),\n-        LIST_CONFIGURATION(\"--list-configuration-properties\"),\n-        READ(\"--read\"),\n-        READ_BY_RESOURCE(\"--read-by-resource\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        ConnectorOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static ConnectorOptions fromName(final String name) {\n-            ConnectorOptions optionToReturn = HELP;\n-            for (final ConnectorOptions option : ConnectorOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final ConnectorOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"4039c4077875777832a213bba4870129de8f5065","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDelete.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorDelete extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"connector --delete {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ConnectorDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.getParameters().length >= 1) {\n-            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    connectorSyncopeOperations.delete(parameter);\n-                    connectorResultManager.deletedMessage(\"connector\", parameter);\n-                } catch (final NumberFormatException ex) {\n-                    connectorResultManager.numberFormatException(\"connector\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error deleting connector\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        LOG.error(\"Error deleting connector\", ex);\n-                        connectorResultManager.notFoundError(\"Connector\", parameter);\n-                    } else {\n-                        connectorResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                }\n-            }\n-            connectorResultManager.printConnectors(connInstanceTOs);\n-        } else {\n-            connectorResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"ac3072cb01b0165de8bc83e6307652571425b3c6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDetails.java","status":"removed","additions":0,"deletions":86,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,86 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.types.ConnectorCapability;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorDetails extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"connector --details\";\n-\n-    private final Input input;\n-\n-    public ConnectorDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<ConnInstanceTO> connInstanceTOs = connectorSyncopeOperations.list();\n-                int withCreateCapability = 0;\n-                int withDeleteCapability = 0;\n-                int withSearchCapability = 0;\n-                int withSyncCapability = 0;\n-                int withUpdateCapability = 0;\n-                for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n-                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.CREATE)) {\n-                        withCreateCapability++;\n-                    }\n-                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.DELETE)) {\n-                        withDeleteCapability++;\n-                    }\n-                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n-                        withSearchCapability++;\n-                    }\n-                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SYNC)) {\n-                        withSyncCapability++;\n-                    }\n-                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n-                        withUpdateCapability++;\n-                    }\n-                }\n-                details.put(\"Total number\", String.valueOf(connInstanceTOs.size()));\n-                details.put(\"With create capability\", String.valueOf(withCreateCapability));\n-                details.put(\"With delete capability\", String.valueOf(withDeleteCapability));\n-                details.put(\"With search capability\", String.valueOf(withSearchCapability));\n-                details.put(\"With sync capability\", String.valueOf(withSyncCapability));\n-                details.put(\"With update capability\", String.valueOf(withUpdateCapability));\n-                details.put(\"Bundles number\", String.valueOf(connectorSyncopeOperations.getBundles().size()));\n-                connectorResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about connector\", ex);\n-                connectorResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            connectorResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"19d81a4e20d5a02196037c6858f4540b2b4628e4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorList extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"connector --list\";\n-\n-    private final Input input;\n-\n-    public ConnectorList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                connectorResultManager.printConnectors(connectorSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listening connector\", ex);\n-                connectorResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"1327120c5d15ea37f1adaa44047d9e819cda1dc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListBundles.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorListBundles extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorListBundles.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"connector --list-bundles\";\n-\n-    private final Input input;\n-\n-    public ConnectorListBundles(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                connectorResultManager.printBundles(connectorSyncopeOperations.getBundles());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listening connector\", ex);\n-                connectorResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"d830f80702428cfec38c6f30920e8d304fd8320e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListConfigurationProperties.java","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,62 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorListConfigurationProperties extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorListConfigurationProperties.class);\n-\n-    private static final String LIST_CONFIGURATION_HELP_MESSAGE\n-            = \"connector --list-configuration-properties {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ConnectorListConfigurationProperties(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    connectorResultManager.printConfigurationProperties(\n-                            connectorSyncopeOperations.read(parameter).getConf());\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error listening connector\", ex);\n-                    connectorResultManager.numberFormatException(\"connector\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error listening connector\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        connectorResultManager.notFoundError(\"Connector\", parameter);\n-                    } else {\n-                        connectorResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            connectorResultManager.commandOptionError(LIST_CONFIGURATION_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"732b2ae6c0a9cfed6ef49f1340676d2e2b6cee0d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorRead.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorRead extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"connector --read {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ConnectorRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    connectorResultManager.printConnector(connectorSyncopeOperations.read(parameter));\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading connector\", ex);\n-                    connectorResultManager.numberFormatException(\"connector\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading connector\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        connectorResultManager.notFoundError(\"Connector\", parameter);\n-                    } else {\n-                        connectorResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"c6c33455edeea06679336a57761f83cbc5baecb7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorReadByResource.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConnectorReadByResource extends AbstractConnectorCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConnectorReadByResource.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"connector --read-by-resource {RESOURCE-KEY} {RESOURCE-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ConnectorReadByResource(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    connectorResultManager.printConnector(connectorSyncopeOperations.readByResource(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading connector\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        connectorResultManager.notFoundError(\"Resource\", parameter);\n-                    } else {\n-                        connectorResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6b7e91ea5f1b3c4ba45fbf890f7fa8c9d65b7e51","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorResultManager.java","status":"removed","additions":0,"deletions":90,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,90 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.ConnectorCapability;\n-\n-public class ConnectorResultManager extends CommonsResultManager {\n-\n-    public void printConnectors(final List<ConnInstanceTO> connInstanceTOs) {\n-        System.out.println(\"\");\n-        connInstanceTOs.forEach(connInstanceTO -> {\n-            printConnector(connInstanceTO);\n-        });\n-    }\n-\n-    public void printConnector(final ConnInstanceTO connInstanceTO) {\n-        System.out.println(\" > CONNECTOR KEY: \" + connInstanceTO.getKey());\n-        System.out.println(\"    bundle name: \" + connInstanceTO.getBundleName());\n-        System.out.println(\"    connector name: \" + connInstanceTO.getConnectorName());\n-        System.out.println(\"    display name: \" + connInstanceTO.getDisplayName());\n-        System.out.println(\"    location: \" + connInstanceTO.getLocation());\n-        System.out.println(\"    version: \" + connInstanceTO.getVersion());\n-        System.out.println(\"    timeout: \" + connInstanceTO.getConnRequestTimeout());\n-        System.out.println(\"    CAPABILITIES:\");\n-        printCapabilities(connInstanceTO.getCapabilities());\n-        System.out.println(\"    CONFIGURATION:\");\n-        printConfiguration(connInstanceTO.getConf());\n-        System.out.println(\"    POOL CONFIGURATION:\");\n-        printConfPool(connInstanceTO.getPoolConf());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printCapabilities(final Set<ConnectorCapability> capabilities) {\n-        capabilities.forEach(capability -> {\n-            System.out.println(\"       - \" + capability.name());\n-        });\n-    }\n-\n-    private void printConfPool(final ConnPoolConfTO connPoolConfTO) {\n-        System.out.println(\"       min idle: \" + connPoolConfTO.getMinIdle());\n-        System.out.println(\"       min evictlable idle: \" + connPoolConfTO.getMinEvictableIdleTimeMillis());\n-        System.out.println(\"       max idle: \" + connPoolConfTO.getMaxIdle());\n-        System.out.println(\"       max objects: \" + connPoolConfTO.getMaxObjects());\n-        System.out.println(\"       max wait: \" + connPoolConfTO.getMaxWait());\n-    }\n-\n-    public void printBundles(final List<ConnBundleTO> connBundleTOs) {\n-        connBundleTOs.forEach(connBundleTO -> {\n-            System.out.println(\" > BUNDLE NAME: \" + connBundleTO.getBundleName());\n-            System.out.println(\"    connector name: \" + connBundleTO.getConnectorName());\n-            System.out.println(\"    display name: \" + connBundleTO.getDisplayName());\n-            System.out.println(\"    location: \" + connBundleTO.getLocation());\n-            System.out.println(\"    version: \" + connBundleTO.getVersion());\n-        });\n-    }\n-\n-    public void printConfigurationProperties(final Collection<ConnConfProperty> connConfPropertys) {\n-        printConfiguration(connConfPropertys);\n-\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"connectors details\", details);\n-    }\n-}"},{"sha":"44c9ea8567e27d666d4830f49c64ae1cef2f8d0a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorSyncopeOperations.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.connector;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.rest.api.service.ConnectorService;\n-\n-public class ConnectorSyncopeOperations {\n-\n-    private final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n-\n-    public ConnInstanceTO readByResource(final String resourceName) {\n-        return connectorService.readByResource(resourceName, null);\n-    }\n-\n-    public ConnInstanceTO read(final String resourceKey) {\n-        return connectorService.read(resourceKey, null);\n-    }\n-\n-    public List<ConnBundleTO> getBundles() {\n-        return connectorService.getBundles(null);\n-    }\n-\n-    public List<ConnInstanceTO> list() {\n-        return connectorService.list(null);\n-    }\n-\n-    public void delete(final String resourceKey) {\n-        connectorService.delete(resourceKey);\n-    }\n-}"},{"sha":"902f55ca2e4042ee4356db80af2082027ea666ac","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/AbstractDomainCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-public abstract class AbstractDomainCommand {\n-\n-    protected final DomainSyncopeOperations domainSyncopeOperations = new DomainSyncopeOperations();\n-\n-    protected final DomainResultManager domainResultManager = new DomainResultManager();\n-\n-}"},{"sha":"c3a023af4353804c19bf7ca44636f28e2e67617d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainCommand.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"domain\")\n-public class DomainCommand extends AbstractCommand {\n-\n-    private final DomainResultManager domainResultManager = new DomainResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-        switch (Options.fromName(input.getOption())) {\n-            case DETAILS:\n-                new DomainDetails(input).details();\n-                break;\n-            case LIST:\n-                new DomainList(input).list();\n-                break;\n-            case DELETE:\n-                new DomainDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                new DomainResultManager().deletedMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return domainResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"d666301f18adb1323f7690756986e52a05b46e92","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDelete.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class DomainDelete extends AbstractDomainCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(DomainDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"domain --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public DomainDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    domainSyncopeOperations.delete(parameter);\n-                    domainResultManager.deletedMessage(\"Domain\", parameter);\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting domain\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        domainResultManager.notFoundError(\"Domain\", parameter);\n-                    } else {\n-                        domainResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            domainResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"061b8f3c1089b31efc941a8d78ac6a24f9abea99","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDetails.java","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,55 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class DomainDetails extends AbstractDomainCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(DomainDetails.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"domain --details\";\n-\n-    private final Input input;\n-\n-    public DomainDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                details.put(\"Total number\", String.valueOf(domainSyncopeOperations.list().size()));\n-                domainResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about domain\", ex);\n-                domainResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            domainResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-\n-    }\n-}"},{"sha":"aa4a0f8920d57f2e2c51cc12505e798a9ad42980","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainList.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class DomainList extends AbstractDomainCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(DomainList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"domain --list\";\n-\n-    private final Input input;\n-\n-    public DomainList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                domainResultManager.printDomains(domainSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing domain\", ex);\n-                domainResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            domainResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-\n-    }\n-}"},{"sha":"015bf06f8ac8f19a88674f931bd98d751c383563","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainRead.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,56 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class DomainRead extends AbstractDomainCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(DomainRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"domain --read {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public DomainRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    domainResultManager.printDomain(domainSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error reading domain\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        domainResultManager.notFoundError(\"Domain\", parameter);\n-                    } else {\n-                        domainResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            domainResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"23fad70d8a4102fce617d074fd698479e392ca7b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainResultManager.java","status":"removed","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.DomainTO;\n-\n-public class DomainResultManager extends CommonsResultManager {\n-\n-    public void printDomains(final List<DomainTO> domainTOs) {\n-        System.out.println(\"\");\n-        domainTOs.forEach(domainTO -> {\n-            printDomain(domainTO);\n-        });\n-    }\n-\n-    public void printDomain(final DomainTO domainTO) {\n-        System.out.println(\" > DOIMAIN KEY: \" + domainTO.getKey());\n-        System.out.println(\"    cipher algorithm: \" + domainTO.getAdminCipherAlgorithm());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"domains details\", details);\n-    }\n-}"},{"sha":"994c2178bfa7547aed99bd36a5d845a072ae5aa4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainSyncopeOperations.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.domain;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.DomainTO;\n-import org.apache.syncope.common.rest.api.service.DomainService;\n-\n-public class DomainSyncopeOperations {\n-\n-    private final DomainService domainService = SyncopeServices.get(DomainService.class);\n-\n-    public DomainTO read(final String domainName) {\n-        return domainService.read(domainName);\n-    }\n-\n-    public List<DomainTO> list() {\n-        return domainService.list();\n-    }\n-    \n-    public void delete(final String domainName) {\n-        domainService.delete(domainName);\n-    }\n-}"},{"sha":"f09665d0fa40b5e1efb75b4dccde628bc381bc14","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/AbstractEntitlementCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-public abstract class AbstractEntitlementCommand {\n-\n-    protected final EntitlementSyncopeOperations entitlementSyncopeOperations = new EntitlementSyncopeOperations();\n-\n-    protected final EntitlementResultManager entitlementResultManager = new EntitlementResultManager();\n-\n-}"},{"sha":"2c4420eb7ba9d09d933f06dc45599bd7f1bb60c1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementCommand.java","status":"removed","additions":0,"deletions":109,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,109 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"entitlement\")\n-public class EntitlementCommand extends AbstractCommand {\n-\n-    private final EntitlementResultManager entitlementResultManager = new EntitlementResultManager();\n-    \n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(EntitlementOptions.HELP.getOptionName());\n-        }\n-\n-        switch (EntitlementOptions.fromName(input.getOption())) {\n-            case LIST:\n-                new EntitlementList(input).list();\n-                break;\n-            case READ_BY_USERNAME:\n-                new EntitlementReadByUsername(input).read();\n-                break;\n-            case READ_BY_USERKEY:\n-                new EntitlementReadByUserKey(input).read();\n-                break;\n-            case SEARCH_BY_ROLE:\n-                new EntitlementSearchByRole(input).search();\n-                break;\n-            case LIST_ROLE:\n-                new EntitlementListRole(input).list();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                entitlementResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return entitlementResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum EntitlementOptions {\n-\n-        HELP(\"--help\"),\n-        LIST(\"--list\"),\n-        READ_BY_USERNAME(\"--read-by-username\"),\n-        READ_BY_USERKEY(\"--read-by-userkey\"),\n-        SEARCH_BY_ROLE(\"--search-by-role\"),\n-        LIST_ROLE(\"--list-role\");\n-\n-        private final String optionName;\n-\n-        EntitlementOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static EntitlementOptions fromName(final String name) {\n-            EntitlementOptions optionToReturn = HELP;\n-            for (final EntitlementOptions option : EntitlementOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final EntitlementOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"e20482348ef9d9b1a302089c566c7755ded6ca17","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementList.java","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,40 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import org.apache.syncope.client.cli.Input;\n-\n-public class EntitlementList extends AbstractEntitlementCommand {\n-\n-    private static final String READ_HELP_MESSAGE = \"entitlement --list\";\n-\n-    private final Input input;\n-\n-    public EntitlementList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            entitlementResultManager.toView(entitlementSyncopeOperations.list());\n-        } else {\n-            entitlementResultManager.unnecessaryParameters(input.listParameters(), READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"575208f5865ec6bd5caeaf5c0765e65955ee493a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementListRole.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import java.util.Set;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class EntitlementListRole extends AbstractEntitlementCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(EntitlementListRole.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"entitlement --list-role {ENTITLEMENT-NAME}\";\n-\n-    private final Input input;\n-\n-    public EntitlementListRole(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                final Set<RoleTO> roleTOs = entitlementSyncopeOperations.rolePerEntitlements(input.firstParameter());\n-                if (!entitlementSyncopeOperations.exists(input.firstParameter())) {\n-                    entitlementResultManager.notFoundError(\"Entitlement\", input.firstParameter());\n-                } else if (roleTOs != null && !roleTOs.isEmpty()) {\n-                    entitlementResultManager.rolesToView(roleTOs);\n-                } else {\n-                    entitlementResultManager.genericMessage(\"No roles found for entitlement \" + input.firstParameter());\n-                }\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading entitlement\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n-                } else {\n-                    entitlementResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error reading entitlement\", ex);\n-                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n-            }\n-        } else {\n-            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"1cbc794901fd8b69f720bd730dd9da3957e562af","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUserKey.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserKey.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class EntitlementReadByUserKey extends AbstractEntitlementCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(EntitlementReadByUserKey.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"entitlement --read-by-userkey {USER-KEY}\";\n-\n-    private final Input input;\n-\n-    public EntitlementReadByUserKey(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                entitlementResultManager.toView(\n-                        entitlementSyncopeOperations.userIdEntitlements(input.firstParameter()));\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading entitlement\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n-                } else {\n-                    entitlementResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error reading entitlement\", ex);\n-                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n-            }\n-        } else {\n-            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"8e77d7ec5e22d4b0e2cd629732fe8d4dc1ab7c27","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUsername.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class EntitlementReadByUsername extends AbstractEntitlementCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(EntitlementReadByUsername.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"entitlement --read-by-username {USERNAME}\";\n-\n-    private final Input input;\n-\n-    public EntitlementReadByUsername(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                entitlementResultManager.toView(\n-                        entitlementSyncopeOperations.usernameEntitlements(input.firstParameter()));\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    LOG.error(\"Error reading username\", ex);\n-                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n-                } else {\n-                    entitlementResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error reading username\", ex);\n-                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n-            }\n-        } else {\n-            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6a5b5b5e75d81466bec2da0b5197516f7994dc07","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementResultManager.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import java.util.Collection;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-\n-public class EntitlementResultManager extends CommonsResultManager {\n-\n-    public void toView(final Collection<String> entitlements) {\n-        System.out.println(\"\");\n-        entitlements.forEach(entitlement -> {\n-            System.out.println(\"- \" + entitlement);\n-        });\n-        System.out.println(\"\");\n-    }\n-\n-    public void rolesToView(final Collection<RoleTO> roles) {\n-        System.out.println(\"\");\n-        roles.forEach(role -> {\n-            printRole(role);\n-        });\n-    }\n-\n-    private void printRole(final RoleTO roleTO) {\n-        System.out.println(\" > ROLE KEY: \" + roleTO.getKey());\n-        System.out.println(\"    REALMS: \");\n-        printRealms(roleTO.getRealms());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printRealms(final Collection<String> realms) {\n-        realms.forEach(realm -> {\n-            System.out.println(\"       - \" + realm);\n-        });\n-    }\n-}"},{"sha":"30ec04b186cdc0da31b9830d448cdcf32f34de26","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSearchByRole.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class EntitlementSearchByRole extends AbstractEntitlementCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(EntitlementSearchByRole.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"entitlement --search-by-role {ROLE-KEY}\";\n-\n-    private final Input input;\n-\n-    public EntitlementSearchByRole(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void search() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                entitlementResultManager.toView(\n-                        entitlementSyncopeOperations.entitlementsPerRole(input.firstParameter()));\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error searching entitlement\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n-                } else {\n-                    entitlementResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error searching entitlement\", ex);\n-                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n-            }\n-        } else {\n-            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6d13269b1e56a31e75f230cf042915802c194b6f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSyncopeOperations.java","status":"removed","additions":0,"deletions":79,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,79 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.entitlement;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.TreeSet;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.commands.role.RoleSyncopeOperations;\n-import org.apache.syncope.client.cli.commands.user.UserSyncopeOperations;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.apache.syncope.common.lib.info.PlatformInfo;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-\n-public class EntitlementSyncopeOperations {\n-\n-    private final PlatformInfo platformInfo = SyncopeServices.get(SyncopeService.class).platform();\n-\n-    private final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n-\n-    private final RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n-\n-    public Set<String> list() {\n-        return platformInfo.getEntitlements();\n-    }\n-\n-    public boolean exists(final String entitlement) {\n-        return list().contains(entitlement);\n-    }\n-\n-    public Set<String> usernameEntitlements(final String username) {\n-        final Set<String> entitlements = new TreeSet<>();\n-        final UserTO userTO = userSyncopeOperations.read(username);\n-        for (final String role : userTO.getRoles()) {\n-            entitlements.addAll(roleSyncopeOperations.read(role).getEntitlements());\n-        }\n-        return entitlements;\n-    }\n-\n-    public Set<String> userIdEntitlements(final String userId) {\n-        final Set<String> entitlements = new TreeSet<>();\n-        final UserTO userTO = userSyncopeOperations.read(userId);\n-        for (final String role : userTO.getRoles()) {\n-            entitlements.addAll(roleSyncopeOperations.read(role).getEntitlements());\n-        }\n-        return entitlements;\n-    }\n-\n-    public Set<String> entitlementsPerRole(final String roleId) {\n-        return roleSyncopeOperations.read(roleId).getEntitlements();\n-    }\n-\n-    public Set<RoleTO> rolePerEntitlements(final String entitlement) {\n-        final Set<RoleTO> roles = new HashSet<>();\n-        for (final RoleTO role : roleSyncopeOperations.list()) {\n-            if (role.getEntitlements().contains(entitlement)) {\n-                roles.add(role);\n-            }\n-        }\n-        return roles;\n-    }\n-}"},{"sha":"b8f53a5575908315e95f74030ce7265f3356cfdb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/AbstractGroupCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-public abstract class AbstractGroupCommand {\n-\n-    protected final GroupSyncopeOperations groupSyncopeOperations = new GroupSyncopeOperations();\n-\n-    protected final GroupResultManager groupResultManager = new GroupResultManager();\n-\n-}"},{"sha":"1197a558859cb17d1985533a0937db6bdcfa4363","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupCommand.java","status":"removed","additions":0,"deletions":112,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,112 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"group\")\n-public class GroupCommand extends AbstractCommand {\n-\n-    private final GroupResultManager groupResultManager = new GroupResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(GroupOptions.HELP.getOptionName());\n-        }\n-        switch (GroupOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new GroupDetails(input).details();\n-                break;\n-            case LIST:\n-                new GroupList(input).list();\n-                break;\n-            case READ:\n-                new GroupRead(input).read();\n-                break;\n-            case READ_ATTRIBUTES_BY_SCHEMA_TYPE:\n-                new GroupReadAttributesBySchemaType(input).read();\n-                break;\n-            case READ_ATTRIBUTES_BY_SCHEMA:\n-                new GroupReadAttributeBySchemaTypeAndSchemaKey(input).read();\n-                break;\n-            case DELETE:\n-                new GroupDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                groupResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return groupResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum GroupOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        READ_ATTRIBUTES_BY_SCHEMA(\"--read-attr-by-schema\"),\n-        READ_ATTRIBUTES_BY_SCHEMA_TYPE(\"--read-attr-by-schema-type\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        GroupOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static GroupOptions fromName(final String name) {\n-            GroupOptions optionToReturn = HELP;\n-            for (final GroupOptions option : GroupOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final GroupOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"9e5d96cac47d064bd6cd6f4c7cfb05d0b2ef06f1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupDelete.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupDelete extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"group --delete {GROUP-KEY} {GROUP-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public GroupDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    groupSyncopeOperations.delete(parameter);\n-                    groupResultManager.deletedMessage(\"Group\", parameter);\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting group\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        groupResultManager.notFoundError(\"group\", parameter);\n-                    } else {\n-                        groupResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    groupResultManager.numberFormatException(\"group\", parameter);\n-                }\n-            }\n-        } else {\n-            groupResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"26da0e9a231bf001ebe14e464f97508194501c43","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupDetails.java","status":"removed","additions":0,"deletions":78,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,78 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupDetails extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"group --details\";\n-\n-    private final Input input;\n-\n-    public GroupDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<GroupTO> groupTOs = groupSyncopeOperations.list();\n-                int withoudResources = 0;\n-                int withoudAttributes = 0;\n-                int onRootRealm = 0;\n-                for (final GroupTO groupTO : groupTOs) {\n-                    if (groupTO.getResources() == null || groupTO.getResources().isEmpty()) {\n-                        withoudResources++;\n-                    }\n-                    if ((groupTO.getPlainAttrs() == null || groupTO.getPlainAttrs().isEmpty())\n-                            && (groupTO.getDerAttrs() == null || groupTO.getDerAttrs().isEmpty())\n-                            && (groupTO.getVirAttrs() == null || groupTO.getVirAttrs().isEmpty())) {\n-                        withoudAttributes++;\n-                    }\n-                    if (SyncopeConstants.ROOT_REALM.equals(groupTO.getRealm())) {\n-                        onRootRealm++;\n-                    }\n-                }\n-                details.put(\"Total number\", String.valueOf(groupTOs.size()));\n-                details.put(\"Without resources\", String.valueOf(withoudResources));\n-                details.put(\"Without attributes\", String.valueOf(withoudAttributes));\n-                details.put(\"On root realm\", String.valueOf(onRootRealm));\n-                details.put(\"On the other realm\", String.valueOf(groupTOs.size() - onRootRealm));\n-                groupResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about realm\", ex);\n-                groupResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            groupResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"f5996bbc840f3ce4e206e00e751cc2f3f5be3e0c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupList extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"group --list\";\n-\n-    private final Input input;\n-\n-    public GroupList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                groupResultManager.printGroups(groupSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing group\", ex);\n-                groupResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            groupResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"c8c82cc1931d3af8c65346ebb42c4acea347408a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupRead.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupRead extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"group --read {GROUP-KEY} {GROUP-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public GroupRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    groupResultManager.printGroup(groupSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException ex) {\n-                    LOG.error(\"Error reading group\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        groupResultManager.notFoundError(\"Group\", parameter);\n-                    } else {\n-                        groupResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    groupResultManager.numberFormatException(\"group\", parameter);\n-                }\n-            }\n-        } else {\n-            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"18f89395e97dcfb2a0c0e24943f64ea3de955356","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupReadAttributeBySchemaTypeAndSchemaKey.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaKey.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupReadAttributeBySchemaTypeAndSchemaKey extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupReadAttributeBySchemaTypeAndSchemaKey.class);\n-\n-    private static final String READ_HELP_MESSAGE\n-            = \"group --read-attr-by-schema {GROUP-KEY} {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public GroupReadAttributeBySchemaTypeAndSchemaKey(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() == 3) {\n-            try {\n-                groupResultManager.printAttribute(groupSyncopeOperations.readAttribute(\n-                        input.firstParameter(), input.secondParameter(), input.thirdParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading group\", ex);\n-                groupResultManager.genericError(ex.getMessage());\n-            } catch (final NumberFormatException ex) {\n-                groupResultManager.numberFormatException(\"group\", input.firstParameter());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                groupResultManager.typeNotValidError(\n-                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"df6dcc2837fb4f6fccf191bc2f5ca60c6ccc9ea3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupReadAttributesBySchemaType.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupReadAttributesBySchemaType extends AbstractGroupCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupReadAttributesBySchemaType.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"group --read-attr-by-schema-type {GROUP-KEY} {SCHEMA-TYPE}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public GroupReadAttributesBySchemaType(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() == 2) {\n-            try {\n-                groupResultManager.printAttributes(groupSyncopeOperations.readAttributes(\n-                        input.firstParameter(), input.secondParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading group\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    groupResultManager.notFoundError(\"Group\", input.firstParameter());\n-                } else {\n-                    groupResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                groupResultManager.numberFormatException(\"group\", input.firstParameter());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                groupResultManager.typeNotValidError(\n-                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6ae5c91cc5c79b0c4b3a7e75634e3654c450d459","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupResultManager.java","status":"removed","additions":0,"deletions":81,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,81 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-\n-public class GroupResultManager extends CommonsResultManager {\n-\n-    public void printGroups(final List<GroupTO> groupTOs) {\n-        System.out.println(\"\");\n-        groupTOs.forEach(groupTO -> {\n-            printGroup(groupTO);\n-        });\n-    }\n-\n-    public void printGroup(final GroupTO groupTO) {\n-        System.out.println(\" > GROUP KEY: \" + groupTO.getKey());\n-        System.out.println(\"    name: \" + groupTO.getName());\n-        System.out.println(\"    type: \" + groupTO.getType());\n-        System.out.println(\"    realm: \" + groupTO.getRealm());\n-        System.out.println(\"    status: \" + groupTO.getStatus());\n-        System.out.println(\"    user owner: \" + groupTO.getUserOwner());\n-        System.out.println(\"    group owner: \" + groupTO.getGroupOwner());\n-        System.out.println(\"    RESOURCES: \");\n-        printResources(groupTO.getResources());\n-        System.out.println(\"    PLAIN ATTRIBUTES: \");\n-        printAttributes(groupTO.getPlainAttrs());\n-        System.out.println(\"    DERIVED ATTRIBUTES: \");\n-        printAttributes(groupTO.getDerAttrs());\n-        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n-        printAttributes(groupTO.getVirAttrs());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printResources(final Set<String> resources) {\n-        resources.forEach(resource -> {\n-            System.out.println(\"      - \" + resource);\n-        });\n-    }\n-\n-    public void printAttributes(final Set<Attr> attributes) {\n-        attributes.forEach(attribute -> {\n-            printAttribute(attribute);\n-        });\n-    }\n-\n-    public void printAttribute(final Attr attribute) {\n-        final StringBuilder attributeMessageBuilder = new StringBuilder();\n-        attributeMessageBuilder.append(\"     - \")\n-                .append(attribute.getSchema())\n-                .append(\": \")\n-                .append(attribute.getValues());\n-        System.out.println(attributeMessageBuilder.toString());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"groups details\", details);\n-    }\n-}"},{"sha":"053804e4118a5c167b152a4fb8bff76b543acad6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupSyncopeOperations.java","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,53 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.group;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.rest.api.beans.AnyQuery;\n-import org.apache.syncope.common.rest.api.service.GroupService;\n-\n-public class GroupSyncopeOperations {\n-\n-    private final GroupService groupService = SyncopeServices.get(GroupService.class);\n-\n-    public List<GroupTO> list() {\n-        return groupService.search(new AnyQuery()).getResult();\n-    }\n-\n-    public GroupTO read(final String groupKey) {\n-        return groupService.read(groupKey);\n-    }\n-\n-    public Set<Attr> readAttributes(final String groupKey, final String schemaType) {\n-        return groupService.read(groupKey, SchemaType.valueOf(schemaType));\n-    }\n-\n-    public Attr readAttribute(final String groupKey, final String schemaType, final String schema) {\n-        return groupService.read(groupKey, SchemaType.valueOf(schemaType), schema);\n-    }\n-\n-    public void delete(final String groupKey) {\n-        groupService.delete(groupKey);\n-    }\n-}"},{"sha":"516ad3cfa236f63e968f41ec3259a525cea26572","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/Help.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.help;\n-\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class Help {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(Help.class);\n-\n-    private final HelpResultManager helpResultManager = new HelpResultManager();\n-\n-    public void help() {\n-        final StringBuilder generalHelpBuilder = new StringBuilder(\"General help\\n\");\n-        try {\n-            for (final AbstractCommand command : CommandUtils.commands()) {\n-                generalHelpBuilder.append(\"Command: \")\n-                        .append(command.getClass().getAnnotation(Command.class).name())\n-                        .append(\"\\n\")\n-                        .append(command.getHelpMessage())\n-                        .append(\"\\n\")\n-                        .append(\" \\n\");\n-            }\n-            helpResultManager.toView(generalHelpBuilder.toString());\n-        } catch (Exception e) {\n-            LOG.error(\"Error helping\", e);\n-            helpResultManager.genericMessage(e.getMessage());\n-        }\n-    }\n-}"},{"sha":"a42ff8523eeb04bd6b2d441dd29ba6cf4f39586d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/HelpCommand.java","status":"removed","additions":0,"deletions":90,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,90 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.help;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-\n-@Command(name = \"help\")\n-public class HelpCommand extends AbstractCommand {\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case HELP:\n-                new Help().help();\n-                break;\n-            default:\n-                new HelpResultManager().defaultOptionMessage(\n-                        input.getOption(), CommandUtils.helpMessage(\"info\", Options.toList()));\n-                break;\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return CommandUtils.helpMessage(\"help\", Options.toList());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--print\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"b70664d3b438eba1869b84840028c119b56f9432","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/HelpResultManager.java","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,28 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.help;\n-\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-\n-public class HelpResultManager extends CommonsResultManager {\n-\n-    public void toView(final String generalHelp) {\n-        System.out.println(generalHelp);\n-    }\n-}"},{"sha":"e277b9da02ff94ff976b8d42793638934671b296","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"removed","additions":0,"deletions":243,"changes":243,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,243 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.info;\n-\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.info.PlatformInfo;\n-import org.apache.syncope.common.lib.types.ImplementationType;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class Info {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(Info.class);\n-\n-    private final PlatformInfo platformInfo = SyncopeServices.get(SyncopeService.class).platform();\n-\n-    private final InfoResultManager infoResultManager = new InfoResultManager();\n-\n-    public void version() {\n-        try {\n-            infoResultManager.printVersion(platformInfo.getVersion());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void pwdResetAllowed() {\n-        try {\n-            infoResultManager.printPwdResetAllowed(platformInfo.isPwdResetAllowed());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void resetWithSecurityQuestion() {\n-        try {\n-            infoResultManager.printPwdResetRequiringSecurityQuestions(\n-                    platformInfo.isPwdResetRequiringSecurityQuestions());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void selfRegistrationAllowed() {\n-        try {\n-            infoResultManager.printSelfRegistrationAllowed(platformInfo.isSelfRegAllowed());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void provisioningManager() {\n-        try {\n-            infoResultManager.printProvisioningManager(\n-                    platformInfo.getProvisioningInfo().getAnyObjectProvisioningManager(),\n-                    platformInfo.getProvisioningInfo().getUserProvisioningManager(),\n-                    platformInfo.getProvisioningInfo().getGroupProvisioningManager());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void accountRules() {\n-        platformInfo.getJavaImplInfo(ImplementationType.ACCOUNT_RULE).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void connidLocations() {\n-        try {\n-            infoResultManager.printConnidLocations(platformInfo.getConnIdLocations());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void reconFilterBuilders() {\n-        platformInfo.getJavaImplInfo(ImplementationType.RECON_FILTER_BUILDER).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void logicActions() {\n-        platformInfo.getJavaImplInfo(ImplementationType.LOGIC_ACTIONS).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void itemTransformers() {\n-        platformInfo.getJavaImplInfo(ImplementationType.ITEM_TRANSFORMER).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void passwordRules() {\n-        platformInfo.getJavaImplInfo(ImplementationType.PASSWORD_RULE).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void propagationActions() {\n-        platformInfo.getJavaImplInfo(ImplementationType.PROPAGATION_ACTIONS).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void pushActions() {\n-        platformInfo.getJavaImplInfo(ImplementationType.PUSH_ACTIONS).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void reportletConfs() {\n-        platformInfo.getJavaImplInfo(ImplementationType.REPORTLET).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void pullActions() {\n-        platformInfo.getJavaImplInfo(ImplementationType.PULL_ACTIONS).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void pullCorrelationRules() {\n-        platformInfo.getJavaImplInfo(ImplementationType.PULL_CORRELATION_RULE).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void taskJobs() {\n-        platformInfo.getJavaImplInfo(ImplementationType.TASKJOB_DELEGATE).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void validators() {\n-        platformInfo.getJavaImplInfo(ImplementationType.VALIDATOR).ifPresent(info -> {\n-            try {\n-                infoResultManager.printAccountRules(info.getClasses());\n-            } catch (final Exception ex) {\n-                LOG.error(\"Information error\", ex);\n-                infoResultManager.genericError(ex.getMessage());\n-            }\n-        });\n-    }\n-\n-    public void passwordGenerator() {\n-        try {\n-            infoResultManager.printPasswordGenerator(platformInfo.getPasswordGenerator());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n-    public void virAttrCache() {\n-        try {\n-            infoResultManager.printVirtualAttributeCacheClass(platformInfo.getProvisioningInfo().getVirAttrCache());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-}"},{"sha":"460d54a3990a7dcd636c5f2a4ecb5aeebc9259c2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoCommand.java","status":"removed","additions":0,"deletions":171,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,171 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.info;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-\n-@Command(name = \"info\")\n-public class InfoCommand extends AbstractCommand {\n-\n-    @Override\n-    public void execute(final Input input) {\n-        final Info info = new Info();\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case VERSION:\n-                info.version();\n-                break;\n-            case PWD_RESET_ALLOWED:\n-                info.pwdResetAllowed();\n-                break;\n-            case PWD_RESET_WITH_SECURITY_QUESTION:\n-                info.resetWithSecurityQuestion();\n-                break;\n-            case SELF_REG_ALLOWED:\n-                info.selfRegistrationAllowed();\n-                break;\n-            case PROVISIONING_MANAGER:\n-                info.provisioningManager();\n-                break;\n-            case ACCOUNT_RULES:\n-                info.accountRules();\n-                break;\n-            case CONNID_LOCATION:\n-                info.connidLocations();\n-                break;\n-            case RECON_FILTER_BUILDERS:\n-                info.reconFilterBuilders();\n-                break;\n-            case LOGIC_ACTIONS:\n-                info.logicActions();\n-                break;\n-            case MAPPING_ITEM_TRANSFORMERS:\n-                info.itemTransformers();\n-                break;\n-            case PASSWORD_RULES:\n-                info.passwordRules();\n-                break;\n-            case PROPAGATION_ACTIONS:\n-                info.propagationActions();\n-                break;\n-            case PUSH_ACTIONS:\n-                info.pushActions();\n-                break;\n-            case REPORTLET_CONFS:\n-                info.reportletConfs();\n-                break;\n-            case SYNC_ACTIONS:\n-                info.pullActions();\n-                break;\n-            case SYNC_CORRELATION_RULES:\n-                info.pullCorrelationRules();\n-                break;\n-            case TASK_JOBS:\n-                info.taskJobs();\n-                break;\n-            case VALIDATORS:\n-                info.validators();\n-                break;\n-            case PASSWORD_GENERATOR:\n-                info.passwordGenerator();\n-                break;\n-            case VIR_ATTR_CACHE:\n-                info.virAttrCache();\n-                break;\n-            case HELP:\n-                System.out.println(CommandUtils.helpMessage(\"info\", Options.toList()));\n-                break;\n-            default:\n-                new InfoResultManager().defaultOptionMessage(\n-                        input.getOption(), CommandUtils.helpMessage(\"info\", Options.toList()));\n-                break;\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return CommandUtils.helpMessage(\"info\", Options.toList());\n-    }\n-\n-    private enum Options {\n-\n-        VERSION(\"--version\"),\n-        PWD_RESET_ALLOWED(\"--pwd-reset-allowed\"),\n-        PWD_RESET_WITH_SECURITY_QUESTION(\"--pwd-reset-with-question\"),\n-        SELF_REG_ALLOWED(\"--self-reg-allowed\"),\n-        PROVISIONING_MANAGER(\"--provisioning-manager-classes\"),\n-        ACCOUNT_RULES(\"--account-rules-classes\"),\n-        CONNID_LOCATION(\"--connid-locations\"),\n-        RECON_FILTER_BUILDERS(\"--reconciliation-filter-builders\"),\n-        LOGIC_ACTIONS(\"--logic-actions\"),\n-        MAPPING_ITEM_TRANSFORMERS(\"--mapping-item-transformers\"),\n-        PASSWORD_RULES(\"--password-rules\"),\n-        PROPAGATION_ACTIONS(\"--propagation-actions\"),\n-        PUSH_ACTIONS(\"--push-actions\"),\n-        REPORTLET_CONFS(\"--reportletConfs\"),\n-        SYNC_ACTIONS(\"--sync-actions\"),\n-        SYNC_CORRELATION_RULES(\"--sync-correlation-rules\"),\n-        TASK_JOBS(\"--task-jobs\"),\n-        VALIDATORS(\"--validators\"),\n-        PASSWORD_GENERATOR(\"--password-generator\"),\n-        VIR_ATTR_CACHE(\"--vir-attr-cache\"),\n-        HELP(\"--help\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"65ba20633606290028c7463f8ef22e52452f2605","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoResultManager.java","status":"removed","additions":0,"deletions":142,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,142 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.info;\n-\n-import java.util.Collection;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-\n-public class InfoResultManager extends CommonsResultManager {\n-\n-    public void printVersion(final String version) {\n-        genericMessage(\"Syncope version: \" + version);\n-    }\n-\n-    public void printPwdResetAllowed(final boolean pwdResetAllowed) {\n-        genericMessage(\"Password reset allowed: \" + pwdResetAllowed);\n-    }\n-\n-    public void printPwdResetRequiringSecurityQuestions(final boolean pwdResetRequiringSecurityQuestions) {\n-        genericMessage(\"Password reset requiring security question: \" + pwdResetRequiringSecurityQuestions);\n-    }\n-\n-    public void printSelfRegistrationAllowed(final boolean selfRegAllowed) {\n-        genericMessage(\"Self registration allowed: \" + selfRegAllowed);\n-    }\n-\n-    public void printProvisioningManager(final String anyObjectProvisioningManager,\n-            final String getUserProvisioningManager,\n-            final String getGroupProvisioningManager) {\n-        genericMessage(\n-                \"Any object provisioning manager class: \" + anyObjectProvisioningManager,\n-                \"User provisioning manager class: \" + getUserProvisioningManager,\n-                \"Group provisioning manager class: \" + getGroupProvisioningManager);\n-    }\n-\n-    public void printAccountRules(final Collection<String> rules) {\n-        rules.forEach(accountRule -> {\n-            genericMessage(\"Account rule: \" + accountRule);\n-        });\n-    }\n-\n-    public void printConnidLocations(final Collection<String> locations) {\n-        locations.forEach(location -> {\n-            genericMessage(\"ConnId location: \" + location);\n-        });\n-    }\n-\n-    public void printReconFilterBuilders(final Collection<String> reconFilterBuilders) {\n-        reconFilterBuilders.forEach(reconciliationFilterBuilder -> {\n-            genericMessage(\"Reconciliation filter builder: \" + reconciliationFilterBuilder);\n-        });\n-    }\n-\n-    public void printLogicActions(final Collection<String> actions) {\n-        actions.forEach(action -> {\n-            genericMessage(\"Logic action: \" + action);\n-        });\n-    }\n-\n-    public void printItemTransformers(final Collection<String> transformers) {\n-        transformers.forEach(tranformer -> {\n-            genericMessage(\"Mapping item tranformer: \" + tranformer);\n-        });\n-    }\n-\n-    public void printPasswordRules(final Collection<String> rules) {\n-        rules.forEach(rule -> {\n-            genericMessage(\"Password rule: \" + rule);\n-        });\n-    }\n-\n-    public void printCorrelationRules(final Collection<String> rules) {\n-        rules.forEach(rule -> {\n-            genericMessage(\"Correlation rule: \" + rule);\n-        });\n-    }\n-\n-    public void printPropagationActions(final Collection<String> actions) {\n-        actions.forEach(action -> {\n-            genericMessage(\"Propagation action: \" + action);\n-        });\n-    }\n-\n-    public void printPushActions(final Collection<String> actions) {\n-        actions.forEach(action -> {\n-            genericMessage(\"Push action: \" + action);\n-        });\n-    }\n-\n-    public void printPullActions(final Collection<String> actions) {\n-        actions.forEach(action -> {\n-            genericMessage(\"Sync action: \" + action);\n-        });\n-    }\n-\n-    public void printCorrelationActions(final Collection<String> actions) {\n-        actions.forEach(action -> {\n-            genericMessage(\"Push correlation rule: \" + action);\n-        });\n-    }\n-\n-    public void printReportletConfs(final Collection<String> reportletConfs) {\n-        reportletConfs.forEach(reportletConf -> {\n-            genericMessage(\"Reportlet conf: \" + reportletConf);\n-        });\n-    }\n-\n-    public void printJobs(final Collection<String> jobs) {\n-        jobs.forEach(job -> {\n-            genericMessage(\"Task job: \" + job);\n-        });\n-    }\n-\n-    public void printValidators(final Collection<String> validators) {\n-        validators.forEach(validator -> {\n-            genericMessage(\"Validator: \" + validator);\n-        });\n-    }\n-\n-    public void printPasswordGenerator(final String passwordGenerator) {\n-        genericMessage(\"Password generator class: \" + passwordGenerator);\n-    }\n-\n-    public void printVirtualAttributeCacheClass(final String virAttrCache) {\n-        genericMessage(\"Virtual attribute cache class: \" + virAttrCache);\n-    }\n-}"},{"sha":"172e26135955868b00d661a4d62bbbb244c9fecd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"removed","additions":0,"deletions":110,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,110 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.install;\n-\n-import java.io.FileNotFoundException;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-@Command(name = \"install\")\n-public class InstallCommand extends AbstractCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(InstallCommand.class);\n-\n-    private final InstallResultManager installResultManager = new InstallResultManager();\n-\n-    private static final String HELP_MESSAGE = \"\\nUsage: install [options]\\n\"\n-            + \"  Options:\\n\"\n-            + \"    --help \\n\"\n-            + \"    --setup\\n\"\n-            + \"    --setup-debug\\n\";\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case SETUP:\n-                try {\n-                    new InstallSetup().setup();\n-                } catch (final FileNotFoundException | IllegalAccessException ex) {\n-                    LOG.error(\"Error installing CLI\", ex);\n-                    installResultManager.genericError(ex.getMessage());\n-                    break;\n-                }\n-                break;\n-            case SETUP_DEBUG:\n-                try {\n-                    new InstallSetupForDebug().setup();\n-                } catch (final FileNotFoundException | IllegalAccessException ex) {\n-                    LOG.error(\"Error installing CLI\", ex);\n-                    installResultManager.genericError(ex.getMessage());\n-                    break;\n-                }\n-                break;\n-            case HELP:\n-                System.out.println(HELP_MESSAGE);\n-                break;\n-            default:\n-                installResultManager.defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return HELP_MESSAGE;\n-    }\n-\n-    public enum Options {\n-\n-        HELP(\"--help\"),\n-        SETUP(\"--setup\"),\n-        SETUP_DEBUG(\"--setup-debug\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-    }\n-}"},{"sha":"4eb15a42bda5af7796cf487818856a920ba6e9f2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallConfigFileTemplate.java","status":"removed","additions":0,"deletions":78,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,78 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.install;\n-\n-import java.util.ResourceBundle;\n-import org.apache.commons.lang3.SystemUtils;\n-\n-public final class InstallConfigFileTemplate {\n-\n-    private static final ResourceBundle CONF = ResourceBundle.getBundle(\"configuration\");\n-\n-    public static final String CONFIGURATION_FILE_NAME = CONF.getString(\"cli.installation.filename\");\n-\n-    private static final String SYNCOPE_REST_SERVICES = \"syncope.rest.services=%s://%s:%s%s\";\n-\n-    private static final String SYNCOPE_ADMIN_USER = \"syncope.admin.user=%s\";\n-\n-    private static final String SYNCOPE_ADMIN_PASSWORD = \"syncope.admin.password=%s\";\n-\n-    public static String cliPropertiesFile(\n-            final String schema,\n-            final String hostname,\n-            final String port,\n-            final String restContext,\n-            final String user,\n-            final String password) {\n-\n-        final String syncopeRestServices = String.format(SYNCOPE_REST_SERVICES, schema, hostname, port, restContext);\n-        final String syncopeAdminUser = String.format(SYNCOPE_ADMIN_USER, user);\n-        final String syncopeAdminPassword = String.format(SYNCOPE_ADMIN_PASSWORD, password);\n-        final String useGZIPCompression = String.format(\"syncope.useGZIPCompression=true\");\n-\n-        return syncopeRestServices + \"\\n\" + syncopeAdminUser + \"\\n\" + syncopeAdminPassword + \"\\n\" + useGZIPCompression;\n-    }\n-\n-    public static String dirPath() {\n-        if (SystemUtils.IS_OS_WINDOWS) {\n-            return CONF.getString(\"cli.installation.directory.windows\");\n-        } else {\n-            return CONF.getString(\"cli.installation.directory.linux\");\n-        }\n-    }\n-\n-    public static String configurationFilePath() {\n-        return dirPath() + CONFIGURATION_FILE_NAME;\n-    }\n-\n-    private static String scriptFileName() {\n-        if (SystemUtils.IS_OS_WINDOWS) {\n-            return CONF.getString(\"script.file.name.windows\");\n-        } else {\n-            return CONF.getString(\"script.file.name.linux\");\n-        }\n-    }\n-\n-    public static String scriptFilePath() {\n-        return dirPath() + scriptFileName();\n-    }\n-\n-    private InstallConfigFileTemplate() {\n-    }\n-}"},{"sha":"ad854f1820270117a1e9eca95dae30cbab200a3c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallResultManager.java","status":"removed","additions":0,"deletions":102,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,102 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.install;\n-\n-import java.net.ConnectException;\n-import java.net.UnknownHostException;\n-import javax.ws.rs.ProcessingException;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-\n-public class InstallResultManager extends CommonsResultManager {\n-\n-    public void printWelcome() {\n-        System.out.println(\"\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"# Welcome to Syncope CLI installation process #\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"\");\n-    }\n-\n-    public void installationSuccessful(final String version) {\n-        System.out.println(\"Installation parameters checked on Syncope core version: \" + version);\n-        System.out.println(\"\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"#           Installation successful           #\");\n-        System.out.println(\"#     now you can use Syncope CLI client      #\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"\");\n-    }\n-\n-    public void manageProcessingException(final ProcessingException ex) {\n-        if (ex.getCause() instanceof UnknownHostException) {\n-            final String unknownHost = ex.getCause().getMessage().split(\":\")[3];\n-            System.out.println(\"\");\n-            System.out.println(\"Provided host:\" + unknownHost);\n-            System.out.println(\"\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"#            Provided unknown host!           #\");\n-            System.out.println(\"#        START the installation AGAIN!        #\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"\");\n-        } else if (ex.getCause() instanceof ConnectException) {\n-            System.out.println(\"\");\n-            System.out.println(\"Provided address :\" + SyncopeServices.getAddress());\n-            System.out.println(\"\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"#       Provided address is unreachable!      #\");\n-            System.out.println(\"#         Check it and if it is wrong         #\");\n-            System.out.println(\"#        START the installation AGAIN!        #\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"\");\n-        }\n-    }\n-\n-    public void manageException(final Exception e) {\n-        if (e.getMessage().contains(\"not authenticated\")) {\n-            System.out.println(\"\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"#   Username or password provided are wrong   #\");\n-            System.out.println(\"#        START the installation AGAIN!        #\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"\");\n-        } else {\n-            System.out.println(\"\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"#                Something wrong              #\");\n-            System.out.println(\"#        START the installation AGAIN!        #\");\n-            System.out.println(\"#                                             #\");\n-            System.out.println(\"###############################################\");\n-            System.out.println(\"\");\n-            System.out.println(e.getMessage());\n-            System.out.println(\"\");\n-        }\n-    }\n-}"},{"sha":"7acf12f2caadcb3e334496ac957de8c7bdf61bff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"removed","additions":0,"deletions":178,"changes":178,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,178 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.install;\n-\n-import java.io.FileNotFoundException;\n-import java.io.IOException;\n-import java.util.Scanner;\n-import javax.ws.rs.ProcessingException;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.util.FileSystemUtils;\n-import org.apache.syncope.client.cli.util.JasyptUtils;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class InstallSetup {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(InstallSetup.class);\n-\n-    private final InstallResultManager installResultManager = new InstallResultManager();\n-\n-    private String syncopeAdminUser;\n-\n-    private String syncopeAdminPassword;\n-\n-    private String syncopeServerSchema;\n-\n-    private String syncopeServerHostname = \"localhost\";\n-\n-    private String syncopeServerPort = \"8080\";\n-\n-    private String syncopeServerRestContext = \"/syncope/rest/\";\n-\n-    public void setup() throws FileNotFoundException, IllegalAccessException {\n-        installResultManager.printWelcome();\n-\n-        System.out.println(\"Path to config files of Syncope CLI client will be: \"\n-                + InstallConfigFileTemplate.dirPath());\n-\n-        if (!FileSystemUtils.exists(InstallConfigFileTemplate.dirPath())) {\n-            throw new FileNotFoundException(\"Directory: \" + InstallConfigFileTemplate.dirPath() + \" does not exists!\");\n-        }\n-\n-        if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.dirPath())) {\n-            throw new IllegalAccessException(\"Permission denied on \" + InstallConfigFileTemplate.dirPath());\n-        }\n-        System.out.println(\"- File system permission checked\");\n-        System.out.println(\"\");\n-\n-        try (Scanner scanIn = new Scanner(System.in)) {\n-            System.out.print(\"Syncope server schema [http/https]: \");\n-            String syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n-            boolean schemaFound = false;\n-            while (!schemaFound) {\n-                if ((\"http\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))\n-                        || (\"https\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))) {\n-                    syncopeServerSchema = syncopeServerSchemaFromSystemIn;\n-                    schemaFound = true;\n-                } else {\n-                    System.out.println(\"Please use one of below values: \");\n-                    System.out.println(\"   - http\");\n-                    System.out.println(\"   - https\");\n-                    syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n-                }\n-            }\n-\n-            System.out.print(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]: \");\n-            String syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n-            boolean syncopeServerHostnameFound = false;\n-            while (!syncopeServerHostnameFound) {\n-                if (StringUtils.isNotBlank(syncopeServerHostnameFromSystemIn)) {\n-                    syncopeServerHostname = syncopeServerHostnameFromSystemIn;\n-                    syncopeServerHostnameFound = true;\n-                } else {\n-                    System.out.print(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]: \");\n-                    syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n-                }\n-            }\n-\n-            System.out.print(\"Syncope server port [e.g. \" + syncopeServerPort + \"]: \");\n-            String syncopeServerPortFromSystemIn = scanIn.nextLine();\n-            boolean syncopeServerPortFound = false;\n-            while (!syncopeServerPortFound) {\n-                if (StringUtils.isNotBlank(syncopeServerPortFromSystemIn)) {\n-                    syncopeServerPort = syncopeServerPortFromSystemIn;\n-                    syncopeServerPortFound = true;\n-                } else if (!StringUtils.isNumeric(syncopeServerPortFromSystemIn)) {\n-                    System.err.println(syncopeServerPortFromSystemIn + \" is not a numeric string, try again\");\n-                    syncopeServerPortFromSystemIn = scanIn.nextLine();\n-                } else {\n-                    System.out.print(\"Syncope server port [e.g. \" + syncopeServerPort + \"]: \");\n-                    syncopeServerPortFromSystemIn = scanIn.nextLine();\n-                }\n-            }\n-\n-            System.out.print(\"Syncope server rest context [e.g. \" + syncopeServerRestContext + \"]: \");\n-            String syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n-            boolean syncopeServerRestContextFound = false;\n-            while (!syncopeServerRestContextFound) {\n-                if (StringUtils.isNotBlank(syncopeServerRestContextFromSystemIn)) {\n-                    syncopeServerRestContext = syncopeServerRestContextFromSystemIn;\n-                    syncopeServerRestContextFound = true;\n-                } else {\n-                    System.out.print(\"Syncope server port [e.g. \" + syncopeServerRestContext + \"]: \");\n-                    syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n-                }\n-            }\n-\n-            System.out.print(\"Syncope admin user: \");\n-            String syncopeAdminUserFromSystemIn = scanIn.nextLine();\n-            boolean syncopeAdminUserFound = false;\n-            while (!syncopeAdminUserFound) {\n-                if (StringUtils.isNotBlank(syncopeAdminUserFromSystemIn)) {\n-                    syncopeAdminUser = syncopeAdminUserFromSystemIn;\n-                    syncopeAdminUserFound = true;\n-                } else {\n-                    System.out.print(\"Syncope admin user: \");\n-                    syncopeAdminUserFromSystemIn = scanIn.nextLine();\n-                }\n-            }\n-\n-            char[] syncopeAdminPasswordFromSystemConsole = System.console().readPassword(\"Syncope admin password: \");\n-            boolean syncopeAdminPasswordFound = false;\n-            while (!syncopeAdminPasswordFound) {\n-                if (syncopeAdminPasswordFromSystemConsole != null && syncopeAdminPasswordFromSystemConsole.length > 0) {\n-                    syncopeAdminPassword = new String(syncopeAdminPasswordFromSystemConsole);\n-                    syncopeAdminPasswordFound = true;\n-                } else {\n-                    syncopeAdminPasswordFromSystemConsole = System.console().readPassword(\"Syncope admin password: \");\n-                }\n-            }\n-        }\n-\n-        final JasyptUtils jasyptUtils = JasyptUtils.get();\n-        try {\n-\n-            final String contentCliPropertiesFile = InstallConfigFileTemplate.cliPropertiesFile(\n-                    syncopeServerSchema,\n-                    syncopeServerHostname,\n-                    syncopeServerPort,\n-                    syncopeServerRestContext,\n-                    syncopeAdminUser,\n-                    jasyptUtils.encrypt(syncopeAdminPassword));\n-            FileSystemUtils.createFileWith(InstallConfigFileTemplate.configurationFilePath(), contentCliPropertiesFile);\n-        } catch (final IOException ex) {\n-            System.out.println(ex.getMessage());\n-        }\n-\n-        try {\n-            final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n-            final String syncopeVersion = syncopeService.platform().getVersion();\n-            installResultManager.installationSuccessful(syncopeVersion);\n-        } catch (final ProcessingException ex) {\n-            LOG.error(\"Error installing CLI\", ex);\n-            installResultManager.manageProcessingException(ex);\n-        } catch (final Exception e) {\n-            LOG.error(\"Error installing CLI\", e);\n-            installResultManager.manageException(e);\n-        }\n-    }\n-}"},{"sha":"7e7bc46fb8a30e9fc7c14da2e89f66f1718a5900","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetupForDebug.java","status":"removed","additions":0,"deletions":80,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,80 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.install;\n-\n-import java.io.FileNotFoundException;\n-import java.io.IOException;\n-import javax.ws.rs.ProcessingException;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.util.FileSystemUtils;\n-import org.apache.syncope.client.cli.util.JasyptUtils;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class InstallSetupForDebug {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(InstallSetupForDebug.class);\n-\n-    private final InstallResultManager installResultManager = new InstallResultManager();\n-\n-    public void setup() throws FileNotFoundException, IllegalAccessException {\n-        installResultManager.printWelcome();\n-\n-        System.out.println(\"Path to config files of Syncope CLI client will be: \"\n-                + InstallConfigFileTemplate.dirPath());\n-\n-        if (!FileSystemUtils.exists(InstallConfigFileTemplate.dirPath())) {\n-            throw new FileNotFoundException(\"Directory: \" + InstallConfigFileTemplate.dirPath() + \" does not exists!\");\n-        }\n-\n-        if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.dirPath())) {\n-            throw new IllegalAccessException(\"Permission denied on \" + InstallConfigFileTemplate.dirPath());\n-        }\n-        System.out.println(\"- File system permission checked\");\n-        System.out.println(\"\");\n-\n-        final JasyptUtils jasyptUtils = JasyptUtils.get();\n-        try {\n-\n-            final String contentCliPropertiesFile = InstallConfigFileTemplate.cliPropertiesFile(\n-                    \"http\",\n-                    \"localhost\",\n-                    \"9080\",\n-                    \"/syncope/rest\",\n-                    \"admin\",\n-                    jasyptUtils.encrypt(\"password\"));\n-            FileSystemUtils.createFileWith(InstallConfigFileTemplate.configurationFilePath(), contentCliPropertiesFile);\n-        } catch (final IOException ex) {\n-            System.out.println(ex.getMessage());\n-        }\n-\n-        try {\n-            final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n-            final String syncopeVersion = syncopeService.platform().getVersion();\n-            installResultManager.installationSuccessful(syncopeVersion);\n-        } catch (final ProcessingException ex) {\n-            LOG.error(\"Error installing CLI\", ex);\n-            installResultManager.manageProcessingException(ex);\n-        } catch (final Exception e) {\n-            LOG.error(\"Error installing CLI\", e);\n-            installResultManager.manageException(e);\n-        }\n-    }\n-}"},{"sha":"3e0978a66710e88ea8ced486c20b9d84e7a49e01","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/AbstractLoggerCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FAbstractLoggerCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-public abstract class AbstractLoggerCommand {\n-\n-    protected final LoggerSyncopeOperations loggerSyncopeOperations = new LoggerSyncopeOperations();\n-\n-    protected final LoggerResultManager loggerResultManager = new LoggerResultManager();\n-\n-}"},{"sha":"916157159077404fb95361fc5425c5b75649943d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCommand.java","status":"removed","additions":0,"deletions":125,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,125 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"logger\")\n-public class LoggerCommand extends AbstractCommand {\n-\n-    private final LoggerResultManager loggerResultManager = new LoggerResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(LoggerOptions.HELP.getOptionName());\n-        }\n-\n-        switch (LoggerOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new LoggerDetails(input).details();\n-                break;\n-            case LIST:\n-                new LoggerList(input).list();\n-                break;\n-            case LIST_MEMORY_APPENDERS:\n-                new LoggerListMemoryAppenders(input).list();\n-                break;\n-            case LAST_STATEMENTS:\n-                new LoggerLastStatements(input).read();\n-                break;\n-            case READ:\n-                new LoggerRead(input).read();\n-                break;\n-            case UPDATE:\n-                new LoggerUpdate(input).update();\n-                break;\n-            case UPDATE_ALL:\n-                new LoggerUpdateAll(input).updateAll();\n-                break;\n-            case CREATE:\n-                new LoggerCreate(input).create();\n-                break;\n-            case DELETE:\n-                new LoggerDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                loggerResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return loggerResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum LoggerOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST_MEMORY_APPENDERS(\"--list-memory-appenders\"),\n-        LAST_STATEMENTS(\"--last-statements\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        UPDATE(\"--update\"),\n-        UPDATE_ALL(\"--update-all\"),\n-        CREATE(\"--create\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        LoggerOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static LoggerOptions fromName(final String name) {\n-            LoggerOptions optionToReturn = HELP;\n-            for (final LoggerOptions option : LoggerOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final LoggerOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"7c95633a7d7c8b29d64cbf0c4ad063b0f6430338","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"removed","additions":0,"deletions":73,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,73 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerCreate extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerCreate.class);\n-\n-    private static final String CREATE_HELP_MESSAGE =\n-            \"logger --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n-\n-    private final Input input;\n-\n-    public LoggerCreate(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void create() {\n-        if (input.parameterNumber() >= 1) {\n-            final List<LoggerTO> loggerTOs = new ArrayList<>();\n-            boolean failed = false;\n-            for (String parameter : input.getParameters()) {\n-                LoggerTO loggerTO = new LoggerTO();\n-                Pair<String, String> pairParameter = Input.toPairParameter(parameter);\n-                try {\n-                    loggerTO.setKey(pairParameter.getKey());\n-                    loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n-                    loggerSyncopeOperations.update(loggerTO);\n-                    loggerTOs.add(loggerTO);\n-                } catch (WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n-                    LOG.error(\"Error creating logger\", ex);\n-                    loggerResultManager.typeNotValidError(\n-                            \"logger level\", input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                loggerResultManager.fromUpdate(loggerTOs);\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(CREATE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"15038c3f30c3ce86d9b428ca01777a6d65b7bb47","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerDelete extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"logger --delete {LOG-NAME} {LOG-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public LoggerDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    loggerSyncopeOperations.delete(parameter);\n-                    loggerResultManager.deletedMessage(\"Logger\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting logger\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        loggerResultManager.notFoundError(\"Logger\", parameter);\n-                    } else {\n-                        loggerResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"3a2006c65ceb68167ce3f4ec3b9e949f993e74f9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDetails.java","status":"removed","additions":0,"deletions":98,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,98 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerDetails extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerDetails.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"logger --details\";\n-\n-    private final Input input;\n-\n-    public LoggerDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<LoggerTO> loggerTOs = loggerSyncopeOperations.list();\n-                int debugLevel = 0;\n-                int errorLevel = 0;\n-                int fatalLevel = 0;\n-                int infoLevel = 0;\n-                int offLevel = 0;\n-                int traceLevel = 0;\n-                int warnLevel = 0;\n-                for (final LoggerTO loggerTO : loggerTOs) {\n-                    switch (loggerTO.getLevel()) {\n-                        case DEBUG:\n-                            debugLevel++;\n-                            break;\n-                        case ERROR:\n-                            errorLevel++;\n-                            break;\n-                        case FATAL:\n-                            fatalLevel++;\n-                            break;\n-                        case INFO:\n-                            infoLevel++;\n-                            break;\n-                        case OFF:\n-                            offLevel++;\n-                            break;\n-                        case TRACE:\n-                            traceLevel++;\n-                            break;\n-                        case WARN:\n-                            warnLevel++;\n-                            break;\n-                        default:\n-                            break;\n-                    }\n-                }\n-                details.put(\"Total number\", String.valueOf(loggerTOs.size()));\n-                details.put(\"Set to DEBUG\", String.valueOf(debugLevel));\n-                details.put(\"Set to ERROR\", String.valueOf(errorLevel));\n-                details.put(\"Set to FATAL\", String.valueOf(fatalLevel));\n-                details.put(\"Set to INFO\", String.valueOf(infoLevel));\n-                details.put(\"Set to OFF\", String.valueOf(offLevel));\n-                details.put(\"Set to TRACE\", String.valueOf(traceLevel));\n-                details.put(\"Set to WARN\", String.valueOf(warnLevel));\n-                loggerResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about logger\", ex);\n-                loggerResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            loggerResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"62fd2e13e2396a9b21d024e27c823cd9a1d3610f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerLastStatements.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerLastStatements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerLastStatements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerLastStatements.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerLastStatements extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerLastStatements.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"logger --last-statements {APPENDER-NAME}\";\n-\n-    private final Input input;\n-\n-    public LoggerLastStatements(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                loggerResultManager.fromGetLastLogStatements(\n-                        loggerSyncopeOperations.getLastLogStatements(input.getParameters()[0]));\n-            } catch (final Exception ex) {\n-                LOG.error(\"Error reading last statements\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    loggerResultManager.notFoundError(\"Memory appender\", input.getParameters()[0]);\n-                } else {\n-                    loggerResultManager.genericError(ex.getMessage());\n-                }\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"28bf679ef46c34d7b27dee4980e4b42b51a5e83e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerList extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"logger --list\";\n-\n-    private final Input input;\n-\n-    public LoggerList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                loggerResultManager.fromList(loggerSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing logger\", ex);\n-                loggerResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            loggerResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e39b03a3c721c115fb59ca8665ae3fd16cb9a641","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerListMemoryAppenders.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerListMemoryAppenders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerListMemoryAppenders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerListMemoryAppenders.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerListMemoryAppenders extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerListMemoryAppenders.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"logger --list-memory-appenders\";\n-\n-    private final Input input;\n-\n-    public LoggerListMemoryAppenders(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                loggerResultManager.fromListMemoryAppenders(loggerSyncopeOperations.listMemoryAppenders());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing memory appenders\", ex);\n-                loggerResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            loggerResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"af4ec243f325dbeff4428a0393a760b5cebc8a67","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerRead extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"logger --read {LOG-NAME} {LOG-NAME} [...]\";\n-\n-    private final Input input;\n-\n-    public LoggerRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<LoggerTO> loggerTOs = new ArrayList<>();\n-            boolean failed = false;\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    loggerTOs.add(loggerSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading logger\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        loggerResultManager.notFoundError(\"Logger\", parameter);\n-                    } else {\n-                        loggerResultManager.genericError(ex.getMessage());\n-                    }\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                loggerResultManager.fromRead(loggerTOs);\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"2865b9209f610a680bc1fbb75f198b7c8c4d4371","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerResultManager.java","status":"removed","additions":0,"deletions":88,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,88 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.client.cli.view.Table;\n-import org.apache.syncope.common.lib.log.LogStatement;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-\n-public class LoggerResultManager extends CommonsResultManager {\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    public void fromListMemoryAppenders(final List<String> memoryAppenders) {\n-        final Table.TableBuilder tableBuilder = new Table.TableBuilder(\"list memory appenders\").header(\"appender\");\n-        memoryAppenders.forEach(appender -> {\n-            tableBuilder.rowValues(Collections.singletonList(appender));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void fromGetLastLogStatements(final List<LogStatement> statements) throws JsonProcessingException {\n-        final Table.TableBuilder tableBuilder = new Table.TableBuilder(\"last statements\").header(\"statement\");\n-        for (final LogStatement statement : statements) {\n-            tableBuilder.rowValues(Collections.singletonList(\n-                    MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(statement)));\n-        }\n-        tableBuilder.build().print();\n-    }\n-\n-    public void fromList(final List<LoggerTO> loggerTOs) {\n-        fromCommandToView(\"list loggers\", \"level\", loggerTOs);\n-    }\n-\n-    public void fromRead(final List<LoggerTO> loggerTOs) {\n-        fromCommandToView(\"read loggers\", \"level\", loggerTOs);\n-    }\n-\n-    public void fromCreate(final List<LoggerTO> loggerTOs) {\n-        fromCommandToView(\"created loggers\", \"level\", loggerTOs);\n-    }\n-\n-    public void fromUpdate(final List<LoggerTO> loggerTOs) {\n-        fromCommandToView(\"updated loggers\", \"new level\", loggerTOs);\n-    }\n-\n-    public void fromDelete(final List<LoggerTO> loggerTOs) {\n-        fromCommandToView(\"deleted loggers\", \"new level\", loggerTOs);\n-    }\n-\n-    private void fromCommandToView(\n-            final String title,\n-            final String secondHeader,\n-            final List<LoggerTO> loggerTOs) {\n-\n-        final Table.TableBuilder tableBuilder = new Table.TableBuilder(title).header(\"logger\").header(secondHeader);\n-        loggerTOs.forEach(loggerTO -> {\n-            tableBuilder.rowValues(Arrays.asList(loggerTO.getKey(), loggerTO.getLevel().getLevel().name()));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"loggers details\", details);\n-    }\n-}"},{"sha":"8b44c37aa552685114051afcbec80b5dee318a3f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerSyncopeOperations.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.log.LogAppender;\n-import org.apache.syncope.common.lib.log.LogStatement;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.apache.syncope.common.lib.types.LoggerType;\n-import org.apache.syncope.common.rest.api.service.LoggerService;\n-\n-public class LoggerSyncopeOperations {\n-\n-    private final LoggerService loggerService = SyncopeServices.get(LoggerService.class);\n-\n-    public List<String> listMemoryAppenders() {\n-        return loggerService.memoryAppenders().stream().map(LogAppender::getName).collect(Collectors.toList());\n-    }\n-\n-    public List<LogStatement> getLastLogStatements(final String appender) {\n-        return loggerService.getLastLogStatements(appender);\n-    }\n-\n-    public List<LoggerTO> list() {\n-        return loggerService.list(LoggerType.LOG);\n-    }\n-\n-    public void update(final LoggerTO loggerTO) {\n-        loggerService.update(LoggerType.LOG, loggerTO);\n-    }\n-\n-    public LoggerTO read(final String loggerName) {\n-        return loggerService.read(LoggerType.LOG, loggerName);\n-    }\n-\n-    public void delete(final String loggerName) {\n-        loggerService.delete(LoggerType.LOG, loggerName);\n-    }\n-}"},{"sha":"03335b96cd202f38aeb3439cbc1efffba8586062","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"removed","additions":0,"deletions":84,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,84 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerUpdate extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerUpdate.class);\n-\n-    private static final String UPDATE_HELP_MESSAGE =\n-            \"logger --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n-\n-    private final Input input;\n-\n-    public LoggerUpdate(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void update() {\n-        if (input.parameterNumber() >= 1) {\n-            final List<LoggerTO> loggerTOs = new ArrayList<>();\n-            boolean failed = false;\n-            for (String parameter : input.getParameters()) {\n-                Pair<String, String> pairParameter = Input.toPairParameter(parameter);\n-                try {\n-                    LoggerTO loggerTO = loggerSyncopeOperations.read(pairParameter.getKey());\n-                    loggerTO.setLevel(LoggerLevel.valueOf(pairParameter.getValue()));\n-                    loggerSyncopeOperations.update(loggerTO);\n-                    loggerTOs.add(loggerTO);\n-                } catch (WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n-                    LOG.error(\"Error updating logger\", ex);\n-                    if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n-                        loggerResultManager.typeNotValidError(\n-                                \"logger level\",\n-                                input.firstParameter(),\n-                                CommandUtils.fromEnumToArray(LoggerLevel.class));\n-                    } else if (\"Parameter syntax error!\".equalsIgnoreCase(ex.getMessage())) {\n-                        loggerResultManager.genericError(ex.getMessage());\n-                        loggerResultManager.genericError(UPDATE_HELP_MESSAGE);\n-                    } else if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        loggerResultManager.notFoundError(\"Logger\", parameter);\n-                    } else {\n-                        loggerResultManager.genericError(ex.getMessage());\n-                        loggerResultManager.genericError(UPDATE_HELP_MESSAGE);\n-                    }\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                loggerResultManager.fromUpdate(loggerTOs);\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(UPDATE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"2ba57288145a083f8f8b0edaf8d6929e60b8f1e8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"removed","additions":0,"deletions":75,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,75 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.logger;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.log.LoggerTO;\n-import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LoggerUpdateAll extends AbstractLoggerCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerUpdateAll.class);\n-\n-    private static final String UPDATE_ALL_HELP_MESSAGE = \"logger --update-all {LOG-LEVEL}\";\n-\n-    private final Input input;\n-\n-    public LoggerUpdateAll(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void updateAll() {\n-        if (input.parameterNumber() == 1) {\n-            final List<LoggerTO> loggerTOs = new ArrayList<>();\n-            boolean failed = false;\n-            for (final LoggerTO loggerTO : loggerSyncopeOperations.list()) {\n-                try {\n-                    loggerTO.setLevel(LoggerLevel.valueOf(input.firstParameter()));\n-                    loggerSyncopeOperations.update(loggerTO);\n-                    loggerTOs.add(loggerTO);\n-                } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n-                    LOG.error(\"Error updating logger\", ex);\n-                    if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n-                        loggerResultManager.typeNotValidError(\n-                                \"logger level\",\n-                                input.firstParameter(),\n-                                CommandUtils.fromEnumToArray(LoggerLevel.class));\n-                    } else {\n-                        loggerResultManager.genericError(ex.getMessage());\n-                        loggerResultManager.genericError(UPDATE_ALL_HELP_MESSAGE);\n-                    }\n-                    failed = true;\n-                    break;\n-                }\n-            }\n-            if (!failed) {\n-                loggerResultManager.fromUpdate(loggerTOs);\n-            }\n-        } else {\n-            loggerResultManager.commandOptionError(UPDATE_ALL_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"a21f2cd8e452251e9410bd130d0610e9c29efba5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/AbstractNotificationCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FAbstractNotificationCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-public abstract class AbstractNotificationCommand {\n-\n-    protected final NotificationSyncopeOperations notificationSyncopeOperations = new NotificationSyncopeOperations();\n-    \n-    protected final NotificationResultManager notificationResultManager = new NotificationResultManager();\n-\n-}"},{"sha":"3acbda318f8bb34b5ace7119567cf62d1c5eb5b9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationCommand.java","status":"removed","additions":0,"deletions":101,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,101 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"notification\")\n-public class NotificationCommand extends AbstractCommand {\n-\n-    private final NotificationResultManager notificationResultManager = new NotificationResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case LIST:\n-                new NotificationList(input).list();\n-                break;\n-            case READ:\n-                new NotificationRead(input).read();\n-                break;\n-            case DELETE:\n-                new NotificationDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                notificationResultManager.deletedMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return notificationResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"d684ec7b2f5b3227190ef9a9a451ee7339755a62","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationDelete.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class NotificationDelete extends AbstractNotificationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(NotificationDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE =\n-            \"notification --delete {NOTIFICATION-KEY} {NOTIFICATION-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public NotificationDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    notificationSyncopeOperations.delete(parameter);\n-                    notificationResultManager.deletedMessage(\"Notification\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting notification\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        notificationResultManager.notFoundError(\"Notification\", parameter);\n-                    } else {\n-                        notificationResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    notificationResultManager.notBooleanDeletedError(\"notification\", parameter);\n-                }\n-            }\n-        } else {\n-            notificationResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"463d8e9f12e3c8d2b4a83446f4f2bd27177c3f81","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class NotificationList extends AbstractNotificationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(NotificationList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"notification --list\";\n-\n-    private final Input input;\n-\n-    public NotificationList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                notificationResultManager.printNotifications(notificationSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing notification\", ex);\n-                notificationResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            notificationResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"c51c8ecebfb2f2d1068617795ba79db2a5402dce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationRead.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class NotificationRead extends AbstractNotificationCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(NotificationRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"notification --read {NOTIFICATION-KEY} {NOTIFICATION-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public NotificationRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    notificationResultManager.printNotification(notificationSyncopeOperations.read(parameter));\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading notification\", ex);\n-                    notificationResultManager.notBooleanDeletedError(\"notification\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error reading notification\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        notificationResultManager.notFoundError(\"Notification\", parameter);\n-                    } else {\n-                        notificationResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-        } else {\n-            notificationResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"5e1740fc194fcf9eadd7fa0df8935912f4e7b0bb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationResultManager.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.NotificationTO;\n-\n-public class NotificationResultManager extends CommonsResultManager {\n-\n-    public void printNotifications(final List<NotificationTO> notificationTOs) {\n-        System.out.println(\"\");\n-        notificationTOs.forEach(notificationTO -> {\n-            printNotification(notificationTO);\n-        });\n-    }\n-\n-    public void printNotification(final NotificationTO notificationTO) {\n-        System.out.println(\" > NOTIFICATION KEY: \" + notificationTO.getKey());\n-        System.out.println(\"    events: \" + notificationTO.getEvents());\n-        System.out.println(\"    sender: \" + notificationTO.getSender());\n-        System.out.println(\"    subject: \" + notificationTO.getSubject());\n-        System.out.println(\"    recipients: \" + notificationTO.getRecipientsFIQL());\n-        System.out.println(\"    recipient attribute name: \" + notificationTO.getRecipientAttrName());\n-        System.out.println(\"    template: \" + notificationTO.getTemplate());\n-        System.out.println(\"    abouts: \" + notificationTO.getAbouts());\n-        System.out.println(\"    static recipient: \" + notificationTO.getStaticRecipients());\n-        System.out.println(\"    trace level: \" + notificationTO.getTraceLevel());\n-        System.out.println(\"    active: \" + notificationTO.isActive());\n-        System.out.println(\"    self as recipient: \" + notificationTO.isSelfAsRecipient());\n-        System.out.println(\"\");\n-    }\n-}"},{"sha":"cbdbf61c3d131b1e2c2a532cd894b729eda6b749","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationSyncopeOperations.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.notification;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.NotificationTO;\n-import org.apache.syncope.common.rest.api.service.NotificationService;\n-\n-public class NotificationSyncopeOperations {\n-\n-    private final NotificationService notificationService = SyncopeServices.get(NotificationService.class);\n-\n-    public NotificationTO read(final String notificationKey) {\n-        return notificationService.read(notificationKey);\n-    }\n-\n-    public List<NotificationTO> list() {\n-        return notificationService.list();\n-    }\n-\n-    public void delete(final String notificationKey) {\n-        notificationService.delete(notificationKey);\n-    }\n-}"},{"sha":"0c8a55f1fa1af693898e6ca2b549383f688aeeb3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/AbstractPolicyCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-public abstract class AbstractPolicyCommand {\n-\n-    protected final PolicySyncopeOperations policySyncopeOperations = new PolicySyncopeOperations();\n-\n-    protected final PolicyResultManager policyResultManager = new PolicyResultManager();\n-\n-}"},{"sha":"f334888dd09f6890d3866a6008aa0079eaf08149","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"removed","additions":0,"deletions":105,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,105 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"policy\")\n-public class PolicyCommand extends AbstractCommand {\n-\n-    private final PolicyResultManager policyResultManager = new PolicyResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(PolicyOptions.HELP.getOptionName());\n-        }\n-\n-        switch (PolicyOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new PolicyDetails(input).details();\n-                break;\n-            case LIST:\n-                new PolicyList(input).list();\n-                break;\n-            case READ:\n-                new PolicyRead(input).read();\n-                break;\n-            case DELETE:\n-                new PolicyDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                policyResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return policyResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum PolicyOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        PolicyOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static PolicyOptions fromName(final String name) {\n-            PolicyOptions optionToReturn = HELP;\n-            for (final PolicyOptions option : PolicyOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final PolicyOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"c9f5ff90ee150ab735cbad4ce53f38aae198726c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDelete.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class PolicyDelete extends AbstractPolicyCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"policy --delete {POLICY-KEY} {POLICY-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public PolicyDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    policySyncopeOperations.delete(parameter);\n-                    policyResultManager.deletedMessage(\"Policy\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting policy\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        policyResultManager.notFoundError(\"Policy\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        policyResultManager.genericError(\"You cannot delete policy \" + parameter);\n-                    } else {\n-                        policyResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting policy\", ex);\n-                    policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n-                }\n-            }\n-        } else {\n-            policyResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"bc4b5cf1b2d41931936ec5f6a4cb623d4ac2340e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDetails.java","status":"removed","additions":0,"deletions":65,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,65 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class PolicyDetails extends AbstractPolicyCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"policy --details\";\n-\n-    private final Input input;\n-\n-    public PolicyDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final int accountPolicySize = policySyncopeOperations.list(PolicyType.ACCOUNT.name()).size();\n-                final int passwordPolicySize = policySyncopeOperations.list(PolicyType.PASSWORD.name()).size();\n-                final int pullPolicySize = policySyncopeOperations.list(PolicyType.PULL.name()).size();\n-                final int pushPolicySize = policySyncopeOperations.list(PolicyType.PUSH.name()).size();\n-                details.put(\"total number\", String.valueOf(accountPolicySize\n-                        + passwordPolicySize\n-                        + pullPolicySize\n-                        + pushPolicySize));\n-                details.put(\"account policies\", String.valueOf(accountPolicySize));\n-                details.put(\"password policies\", String.valueOf(passwordPolicySize));\n-                details.put(\"pull policies\", String.valueOf(pullPolicySize));\n-                details.put(\"push policies\", String.valueOf(pushPolicySize));\n-                policyResultManager.printDetails(details);\n-            } catch (final Exception ex) {\n-                LOG.error(\"Error reading details about policy\", ex);\n-                policyResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            policyResultManager.commandOptionError(DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"213f2e4c54dab719341c77790a37431addac321c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class PolicyList extends AbstractPolicyCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"policy --list {POLICY-TYPE}\\n\"\n-            + \"   Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\";\n-\n-    private final Input input;\n-\n-    public PolicyList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                policyResultManager.printPoliciesByType(\n-                        input.firstParameter(), policySyncopeOperations.list(input.firstParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing policy\", ex);\n-                policyResultManager.genericError(ex.getMessage());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error listing policy\", ex);\n-                policyResultManager.typeNotValidError(\n-                        \"policy\", input.firstParameter(), CommandUtils.fromEnumToArray(PolicyType.class));\n-            }\n-        } else {\n-            policyResultManager.commandOptionError(LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"26ee655173bd11b8ca1bce32ec4d1057796cdee6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyRead.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.policy.PolicyTO;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class PolicyRead extends AbstractPolicyCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"policy --read {POLICY-TYPE} {POLICY-KEY}\\n\"\n-            + \"   Policy type:  ACCOUNT / PASSWORD / PULL / PUSH\";\n-\n-    private final Input input;\n-\n-    public PolicyRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 2) {\n-            final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n-            try {\n-                final List<PolicyTO> policyTOs = new ArrayList<>();\n-                for (final String parameter : parameters) {\n-                    policyTOs.add(policySyncopeOperations.read(input.firstParameter(), parameter));\n-                }\n-                policyResultManager.printPolicies(policyTOs);\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading policy\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    policyResultManager.notFoundError(\"Policy\", parameters[0]);\n-                } else {\n-                    policyResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading policy\", ex);\n-                policyResultManager.typeNotValidError(\n-                        \"policy\", input.firstParameter(), CommandUtils.fromEnumToArray(PolicyType.class));\n-            }\n-        } else {\n-            policyResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"70d373dbfc46699951df40519951ba3014eb0116","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,116 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.policy.PolicyTO;\n-import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n-import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n-import org.apache.syncope.common.lib.policy.PullPolicyTO;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-\n-public class PolicyResultManager extends CommonsResultManager {\n-\n-    public void printPolicies(final List<PolicyTO> policyTOs) {\n-        System.out.println(\"\");\n-        policyTOs.forEach(policyTO -> {\n-            if (policyTO instanceof AccountPolicyTO) {\n-                printAccountPolicy((AccountPolicyTO) policyTO);\n-            } else if (policyTO instanceof PasswordPolicyTO) {\n-                printPasswordPolicy((PasswordPolicyTO) policyTO);\n-            } else if (policyTO instanceof PullPolicyTO) {\n-                printPullPolicy((PullPolicyTO) policyTO);\n-            }\n-        });\n-    }\n-\n-    public void printPoliciesByType(final String policyTypeString, final List<PolicyTO> policyTOs) {\n-        System.out.println(\"\");\n-        final PolicyType policyType = PolicyType.valueOf(policyTypeString);\n-        switch (policyType) {\n-            case ACCOUNT:\n-                policyTOs.forEach(policyTO -> {\n-                    printAccountPolicy((AccountPolicyTO) policyTO);\n-                });\n-                break;\n-            case PASSWORD:\n-                policyTOs.forEach(policyTO -> {\n-                    printPasswordPolicy((PasswordPolicyTO) policyTO);\n-                });\n-                break;\n-            case PUSH:\n-                policyTOs.forEach(policyTO -> {\n-                    System.out.println(policyTO);\n-                });\n-                break;\n-            case PULL:\n-                policyTOs.forEach(policyTO -> {\n-                    printPullPolicy((PullPolicyTO) policyTO);\n-                });\n-                break;\n-            default:\n-                break;\n-        }\n-    }\n-\n-    public void printAccountPolicy(final AccountPolicyTO policyTO) {\n-        System.out.println(\" > KEY: \" + policyTO.getKey());\n-        System.out.println(\"    type: \" + policyTO.getClass().getSimpleName());\n-        System.out.println(\"    description: \" + policyTO.getDescription());\n-        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n-        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n-        System.out.println(\"    max authentication attempts : \" + policyTO.getMaxAuthenticationAttempts());\n-        System.out.println(\"    propagation suspension : \" + policyTO.isPropagateSuspension());\n-        System.out.println(\"    RULES : \");\n-        System.out.println(\"       > class : \" + policyTO.getRules());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printPasswordPolicy(final PasswordPolicyTO policyTO) {\n-        System.out.println(\" > KEY: \" + policyTO.getKey());\n-        System.out.println(\"    type: \" + policyTO.getClass().getSimpleName());\n-        System.out.println(\"    description: \" + policyTO.getDescription());\n-        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n-        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n-        System.out.println(\"    history lenght : \" + policyTO.getHistoryLength());\n-        System.out.println(\"    allow null password : \" + policyTO.isAllowNullPassword());\n-        System.out.println(\"    RULES : \");\n-        System.out.println(\"       > class : \" + policyTO.getRules());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printPullPolicy(final PullPolicyTO policyTO) {\n-        System.out.println(\" > KEY: \" + policyTO.getKey());\n-        System.out.println(\"    type: \" + policyTO.getClass().getSimpleName());\n-        System.out.println(\"    description: \" + policyTO.getDescription());\n-        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n-        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n-        System.out.println(\"    conflict resolution action: \"\n-                + policyTO.getConflictResolutionAction().name());\n-        System.out.println(\"    correlation rules : \"\n-                + policyTO.getCorrelationRules().toString());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"policies details\", details);\n-    }\n-}"},{"sha":"f738ad9eccfcf5b4d82c3c38737a2065d5ad3904","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicySyncopeOperations.java","status":"removed","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,42 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.policy;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.policy.PolicyTO;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.syncope.common.rest.api.service.PolicyService;\n-\n-public class PolicySyncopeOperations {\n-\n-    private final PolicyService policyService = SyncopeServices.get(PolicyService.class);\n-\n-    public <T extends PolicyTO> T read(final String type, final String policyKey) {\n-        return policyService.read(PolicyType.valueOf(type), policyKey);\n-    }\n-\n-    public <T extends PolicyTO> List<T> list(final String policyType) {\n-        return policyService.list(PolicyType.valueOf(policyType));\n-    }\n-\n-    public void delete(final String policyKey) {\n-        policyService.delete(null, policyKey);\n-    }\n-}"},{"sha":"0a3846ae8a84231e5498cd2641bc45ccea845e8f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/AbstractQuestionCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-public abstract class AbstractQuestionCommand {\n-\n-    protected final QuestionSyncopeOperations questionSyncopeOperations = new QuestionSyncopeOperations();\n-\n-    protected final QuestionResultManager questionResultManager = new QuestionResultManager();\n-\n-}"},{"sha":"8c40375178a539929abb9eb3e9bf404852cd17de","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionCommand.java","status":"removed","additions":0,"deletions":101,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,101 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"question\")\n-public class QuestionCommand extends AbstractCommand {\n-\n-    private final QuestionResultManager questionResultManager = new QuestionResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(QuestionOptions.HELP.getOptionName());\n-        }\n-\n-        switch (QuestionOptions.fromName(input.getOption())) {\n-            case LIST:\n-                new QuestionList(input).list();\n-                break;\n-            case READ:\n-                new QuestionRead(input).read();\n-                break;\n-            case DELETE:\n-                new QuestionDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                questionResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return questionResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum QuestionOptions {\n-\n-        HELP(\"--help\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        QuestionOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static QuestionOptions fromName(final String name) {\n-            QuestionOptions optionToReturn = HELP;\n-            for (final QuestionOptions option : QuestionOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final QuestionOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"a83ca1cef95dde473ea841fbc01cc781ad655a88","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionDelete.java","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,62 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class QuestionDelete extends AbstractQuestionCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(QuestionDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"question --delete {QUESTION-KEY} {QUESTION-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public QuestionDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    questionSyncopeOperations.delete(parameter);\n-                    questionResultManager.deletedMessage(\"security question\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error deleting question\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        questionResultManager.notFoundError(\"Security question\", parameter);\n-                    } else {\n-                        questionResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting question\", ex);\n-                    questionResultManager.numberFormatException(\"security question\", parameter);\n-                }\n-            }\n-        } else {\n-            questionResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"081d4185b50720b4c235288fcac4bf50c28c8e8c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class QuestionList extends AbstractQuestionCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(QuestionList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"question --list\";\n-\n-    private final Input input;\n-\n-    public QuestionList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                questionResultManager.printQuestions(questionSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing question\", ex);\n-                questionResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            questionResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6393774ab7724c26614d82b3fff9631339283987","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionRead.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class QuestionRead extends AbstractQuestionCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(QuestionRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"question --read {QUESTION-KEY} {QUESTION-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public QuestionRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<SecurityQuestionTO> questionTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    questionTOs.add(questionSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading question\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        questionResultManager.notFoundError(\"Security question\", parameter);\n-                    } else {\n-                        questionResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading question\", ex);\n-                    questionResultManager.numberFormatException(\"security question\", parameter);\n-                }\n-            }\n-            questionResultManager.printQuestions(questionTOs);\n-        } else {\n-            questionResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"fb0bd18b7a8e6f2aef7d07f10a734bfb123fe980","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionResultManager.java","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,39 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-\n-public class QuestionResultManager extends CommonsResultManager {\n-\n-    public void printQuestions(final List<SecurityQuestionTO> questionTOs) {\n-        System.out.println(\"\");\n-        questionTOs.forEach(questionTO -> {\n-            printQuestion(questionTO);\n-        });\n-    }\n-\n-    public void printQuestion(final SecurityQuestionTO securityQuestionTO) {\n-        System.out.println(\" > SECURITY QUESTION KEY: \" + securityQuestionTO.getKey());\n-        System.out.println(\"    content: \" + securityQuestionTO.getContent());\n-        System.out.println(\"\");\n-    }\n-}"},{"sha":"f4c09bbdc63cdfc4c3e771dd9a12c2d949334ed3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionSyncopeOperations.java","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,45 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.question;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n-\n-public class QuestionSyncopeOperations {\n-\n-    private final SecurityQuestionService securityQuestionService = SyncopeServices.get(SecurityQuestionService.class);\n-\n-    public List<SecurityQuestionTO> list() {\n-        return securityQuestionService.list();\n-    }\n-\n-    public void delete(final String questionKey) {\n-        securityQuestionService.delete(questionKey);\n-    }\n-\n-    public SecurityQuestionTO read(final String questionKey) {\n-        return securityQuestionService.read(questionKey);\n-    }\n-\n-    public SecurityQuestionTO readByUser(final String username) {\n-        return securityQuestionService.readByUser(username);\n-    }\n-}"},{"sha":"06cd1badb4191fced577a34a078e95906545295b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/AbstractRealmCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FAbstractRealmCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-public abstract class AbstractRealmCommand {\n-\n-    protected final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n-\n-    protected final RealmResultManager realmResultManager = new RealmResultManager();\n-\n-}"},{"sha":"db62d91a76196abf9d0d2392e582f99bcc26307d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmCommand.java","status":"removed","additions":0,"deletions":96,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,96 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"realm\")\n-public class RealmCommand extends AbstractCommand {\n-\n-    private final RealmResultManager realmResultManager = new RealmResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(RealmOptions.HELP.getOptionName());\n-        }\n-        switch (RealmOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new RealmDetails(input).details();\n-                break;\n-            case LIST:\n-                new RealmList(input).list();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                realmResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return realmResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum RealmOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\");\n-\n-        private final String optionName;\n-\n-        RealmOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static RealmOptions fromName(final String name) {\n-            RealmOptions optionToReturn = HELP;\n-            for (final RealmOptions option : RealmOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final RealmOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"1468aa3acbef07aaeecd0954942acb76d7be74f6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmDetails.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RealmDetails extends AbstractRealmCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RealmDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"realm --details\";\n-\n-    private final Input input;\n-\n-    public RealmDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                details.put(\"Total number\", String.valueOf(realmSyncopeOperations.list().size()));\n-                realmResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about realm\", ex);\n-                realmResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            realmResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"8a444ac06c02a53a4f6b65d8721ced820d428fc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RealmList extends AbstractRealmCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RealmList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"realm --list\";\n-\n-    private final Input input;\n-\n-    public RealmList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                realmResultManager.printRealms(realmSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing realm\", ex);\n-                realmResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            realmResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"b207450abd3742d1095c471f6435514dc8e468d7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmResultManager.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-\n-public class RealmResultManager extends CommonsResultManager {\n-\n-    public void printRealms(final List<RealmTO> realmTOs) {\n-        System.out.println(\"\");\n-        realmTOs.forEach(realmTO -> {\n-            printRealm(realmTO);\n-        });\n-    }\n-\n-    private void printRealm(final RealmTO realmTO) {\n-        System.out.println(\" > REALM KEY: \" + realmTO.getKey());\n-        System.out.println(\"    name: \" + realmTO.getName());\n-        System.out.println(\"    full path: \" + realmTO.getFullPath());\n-        System.out.println(\"    actions: \" + realmTO.getActions());\n-        System.out.println(\"    templates: \" + realmTO.getTemplates());\n-        System.out.println(\"    parent key: \" + realmTO.getParent());\n-        System.out.println(\"    account policy key: \" + realmTO.getAccountPolicy());\n-        System.out.println(\"    password policy key: \" + realmTO.getPasswordPolicy());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"realms details\", details);\n-    }\n-}"},{"sha":"19af12f7709e9d7e15be8c509185129e3502013c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmSyncopeOperations.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.realm;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.rest.api.service.RealmService;\n-\n-public class RealmSyncopeOperations {\n-\n-    private final RealmService realmService = SyncopeServices.get(RealmService.class);\n-\n-    public List<RealmTO> list() {\n-        return realmService.list();\n-    }\n-\n-    public boolean exists(final String realm) {\n-        boolean exists = false;\n-        for (final RealmTO list : list()) {\n-            if (list.getName().equals(realm)) {\n-                exists = true;\n-            }\n-        }\n-        return exists;\n-    }\n-}"},{"sha":"38a7b2f91d262acf4bba0be15641092e60d97403","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/AbstractReportCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FAbstractReportCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-public abstract class AbstractReportCommand {\n-\n-    protected final ReportSyncopeOperations reportSyncopeOperations = new ReportSyncopeOperations();\n-\n-    protected final ReportResultManager reportResultManager = new ReportResultManager();\n-\n-}"},{"sha":"7612610a27fc0be82a8fc73ca746a0228efa0073","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportCommand.java","status":"removed","additions":0,"deletions":121,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,121 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"report\")\n-public class ReportCommand extends AbstractCommand {\n-\n-    private final ReportResultManager reportResultManager = new ReportResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(ReportOptions.HELP.getOptionName());\n-        }\n-\n-        switch (ReportOptions.fromName(input.getOption())) {\n-            case LIST:\n-                new ReportList(input).list();\n-                break;\n-            case DETAILS:\n-                new ReportDetails(input).details();\n-                break;\n-            case LIST_JOBS:\n-                new ReportListJobs(input).list();\n-                break;\n-            case READ:\n-                new ReportRead(input).read();\n-                break;\n-            case DELETE:\n-                new ReportDelete(input).delete();\n-                break;\n-            case EXECUTE:\n-                new ReportExecute(input).execute();\n-                break;\n-            case DELETE_EXECUTION:\n-                new ReportDeleteExecution(input).delete();\n-                break;\n-            case EXPORT_EXECUTION_RESULT:\n-                new ReportExportExecution(input).export();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                reportResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return reportResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum ReportOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        LIST_JOBS(\"--list-jobs\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\"),\n-        EXECUTE(\"--execute\"),\n-        DELETE_EXECUTION(\"--delete-execution\"),\n-        EXPORT_EXECUTION_RESULT(\"--export-execution-result\");\n-\n-        private final String optionName;\n-\n-        ReportOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static ReportOptions fromName(final String name) {\n-            ReportOptions optionToReturn = HELP;\n-            for (final ReportOptions option : ReportOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final ReportOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"3da081018fb4c049f5461c945fa1fa3cc0ea1e92","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDelete.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportDelete extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"report --delete {REPORT-KEY} {REPORT-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ReportDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    reportSyncopeOperations.delete(parameter);\n-                    reportResultManager.deletedMessage(\"Report\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting report\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        reportResultManager.notFoundError(\"Report\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        reportResultManager.genericError(\"You cannot delete report \" + parameter);\n-                    } else {\n-                        reportResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting report\", ex);\n-                    reportResultManager.numberFormatException(\"report\", parameter);\n-                }\n-            }\n-        } else {\n-            reportResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"4d0b2618cc6c61322454ca56b3c8bdf9e9338ecc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDeleteExecution.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportDeleteExecution extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportDeleteExecution.class);\n-\n-    private static final String DELETE_EXECUTION_HELP_MESSAGE\n-            = \"report --delete-execution {EXECUTION-KEY} {EXECUTION-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ReportDeleteExecution(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    reportSyncopeOperations.deleteExecution(parameter);\n-                    reportResultManager.deletedMessage(\"Report execution\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting execution\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        reportResultManager.notFoundError(\"Report\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        reportResultManager.genericError(\"You cannot delete report \" + parameter);\n-                    } else {\n-                        reportResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting execution\", ex);\n-                    reportResultManager.numberFormatException(\"report\", parameter);\n-                }\n-            }\n-        } else {\n-            reportResultManager.commandOptionError(DELETE_EXECUTION_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"4b693d7dccc8ac5e2c683c6c5d4706a911151c29","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDetails.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportDetails extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportDetails.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"report --details\";\n-\n-    private final Input input;\n-\n-    public ReportDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<ReportTO> reportTOs = reportSyncopeOperations.list();\n-                long withoutExecutions = reportTOs.stream().\n-                        filter(reportTO -> (reportTO.getExecutions().isEmpty())).count();\n-                details.put(\"Total numbers\", String.valueOf(reportTOs.size()));\n-                details.put(\"Never executed\", String.valueOf(withoutExecutions));\n-                reportResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about report\", ex);\n-                reportResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"c69a114cb339d43ee57a660b5e9f2a8883556169","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExecute.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportExecute extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportExecute.class);\n-\n-    private static final String EXECUTE_HELP_MESSAGE = \"report --execute {REPORT-KEY}\";\n-\n-    private final Input input;\n-\n-    public ReportExecute(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void execute() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                reportSyncopeOperations.execute(input.firstParameter());\n-                reportResultManager.genericMessage(\"Report \" + input.firstParameter() + \"executed.\");\n-                reportResultManager.genericMessage(\n-                        \"Run \"\n-                        + ReportCommand.ReportOptions.READ.getOptionName()\n-                        + \" \"\n-                        + input.firstParameter()\n-                        + \" to see the results.\");\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n-                LOG.error(\"Error executin report\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    reportResultManager.notFoundError(\"Report\", input.firstParameter());\n-                } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    reportResultManager.genericError(\"You cannot delete report \" + input.firstParameter());\n-                } else {\n-                    reportResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error executin report\", ex);\n-                reportResultManager.numberFormatException(\"report\", input.firstParameter());\n-            }\n-        } else {\n-            reportResultManager.commandOptionError(EXECUTE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"cbbaff13521cebfa986f15b51064908ebd9ecbac","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExportExecution.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.Arrays;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportExportExecution extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportExportExecution.class);\n-\n-    private static final String EXPORT_EXECUTION_HELP_MESSAGE =\n-            \"report --export-execution-result {EXECUTION-KEY} {EXECUTION-KEY} [...] {FORMAT}\\n\"\n-            + \"          Format: CSV / HTML / PDF / XML / RTF\";\n-\n-    private final Input input;\n-\n-    public ReportExportExecution(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void export() {\n-        if (input.parameterNumber() >= 2) {\n-            final String[] parameters = Arrays.copyOf(input.getParameters(), input.parameterNumber() - 1);\n-            for (final String parameter : parameters) {\n-                try {\n-                    String result = reportSyncopeOperations.exportExecutionResult(parameter, input.lastParameter());\n-                    reportResultManager.genericMessage(result + \"created.\");\n-                } catch (final WebServiceException | SyncopeClientException e) {\n-                    LOG.error(\"Error exporting execution\", e);\n-                    if (e.getMessage().startsWith(\"NotFound\")) {\n-                        reportResultManager.notFoundError(\"Report\", parameter);\n-                    } else {\n-                        reportResultManager.genericError(e.getMessage());\n-                    }\n-                } catch (final Exception e) {\n-                    LOG.error(\"Error exporting execution\", e);\n-                    reportResultManager.genericError(\n-                            \" - Error creating \" + \"export_\" + parameter + \" \" + e.getMessage());\n-                }\n-                break;\n-            }\n-        } else {\n-            reportResultManager.commandOptionError(EXPORT_EXECUTION_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"719e1dcc99d0d36a49a06a0a8dc486f7c69b8643","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportList extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"report --list\";\n-\n-    private final Input input;\n-\n-    public ReportList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                reportResultManager.printReports(reportSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing report\", ex);\n-                reportResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"b15ad7d3979b58e94ef54c05a486e1e9cbcdce01","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportListJobs.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportListJobs extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportListJobs.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"report --list-jobs\";\n-\n-    private final Input input;\n-\n-    public ReportListJobs(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                List<JobTO> jobs = reportSyncopeOperations.listJobs();\n-                if (jobs.isEmpty()) {\n-                    reportResultManager.genericMessage(\"There are NO jobs available\");\n-                } else {\n-                    reportResultManager.printJobs(jobs);\n-                }\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing report\", ex);\n-                reportResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"5ca6ac679fd3a6b19b788f7141077cc4d4a466ad","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"removed","additions":0,"deletions":65,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,65 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ReportRead extends AbstractReportCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ReportRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"report --read {REPORT-KEY} {REPORT-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ReportRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 1) {\n-            final List<ReportTO> reportTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    reportTOs.add(reportSyncopeOperations.read(parameter));\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading report\", ex);\n-                    reportResultManager.numberFormatException(\"report\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error reading report\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        reportResultManager.notFoundError(\"Report\", parameter);\n-                    } else {\n-                        reportResultManager.genericError(ex.getMessage());\n-                    }\n-                }\n-            }\n-            reportResultManager.printReports(reportTOs);\n-        } else {\n-            reportResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"7c737ccba218718698bbd9e73a55c9d7dcd8fffa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportResultManager.java","status":"removed","additions":0,"deletions":76,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,76 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.ExecTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-\n-public class ReportResultManager extends CommonsResultManager {\n-\n-    public void printReports(final List<ReportTO> reportTOs) {\n-        System.out.println(\"\");\n-        reportTOs.forEach((reportTO) -> {\n-            printReport(reportTO);\n-        });\n-    }\n-\n-    private void printReport(final ReportTO reportTO) {\n-        System.out.println(\" > REPORT KEY: \" + reportTO.getKey());\n-        System.out.println(\"    name: \" + reportTO.getName());\n-        System.out.println(\"    cron expression: \" + reportTO.getCronExpression());\n-        System.out.println(\"    latest execution status: \" + reportTO.getLatestExecStatus());\n-        System.out.println(\"    start date: \" + reportTO.getStart());\n-        System.out.println(\"    end date: \" + reportTO.getEnd());\n-        System.out.println(\"    CONF:\");\n-        reportTO.getReportlets().forEach(reportlet -> {\n-            System.out.println(\"       name: \" + reportlet);\n-        });\n-        System.out.println(\"    EXECUTIONS:\");\n-        printReportExecutions(reportTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    public void printReportExecutions(final List<ExecTO> reportExecTOs) {\n-        reportExecTOs.forEach(reportExecTO -> {\n-            System.out.println(\"       REPORT EXEC KEY: \" + reportExecTO.getKey());\n-            System.out.println(\"       status: \" + reportExecTO.getStatus());\n-            System.out.println(\"       message: \" + reportExecTO.getMessage());\n-            System.out.println(\"       start date: \" + reportExecTO.getStart());\n-            System.out.println(\"       end date: \" + reportExecTO.getEnd());\n-            System.out.println(\"       report: \" + reportExecTO.getRefDesc());\n-        });\n-    }\n-\n-    public void printJobs(final List<JobTO> jobTOs) {\n-        jobTOs.forEach(jobTO -> {\n-            System.out.println(\"       REPORT: \" + jobTO.getRefDesc());\n-            System.out.println(\"       start date: \" + jobTO.getStart());\n-            System.out.println(\"       running: \" + jobTO.isRunning());\n-            System.out.println(\"       scheduled: \" + jobTO.isScheduled());\n-        });\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"reports details\", details);\n-    }\n-}"},{"sha":"17c6efad48db6f8e557f8718aa1e70afd71ccd38","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportSyncopeOperations.java","status":"removed","additions":0,"deletions":111,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,111 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.report;\n-\n-import java.io.OutputStream;\n-import java.io.SequenceInputStream;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.util.List;\n-import org.apache.cxf.helpers.IOUtils;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.util.XMLUtils;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n-import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n-import org.apache.syncope.common.rest.api.service.ReportService;\n-\n-public class ReportSyncopeOperations {\n-\n-    private final ReportService reportService = SyncopeServices.get(ReportService.class);\n-\n-    public ReportTO read(final String reportKey) {\n-        return reportService.read(reportKey);\n-    }\n-\n-    public List<JobTO> listJobs() {\n-        return reportService.listJobs();\n-    }\n-\n-    public List<ReportTO> list() {\n-        return reportService.list();\n-    }\n-\n-    public String exportExecutionResult(final String executionKey, final String reportExecExportFormat)\n-            throws Exception {\n-\n-        ReportExecExportFormat format = ReportExecExportFormat.valueOf(reportExecExportFormat);\n-        SequenceInputStream report = (SequenceInputStream) reportService.exportExecutionResult(executionKey, format).\n-                getEntity();\n-\n-        String fileName = \"export_\" + executionKey;\n-        OutputStream os = null;\n-        switch (format) {\n-            case XML:\n-                fileName += \".xml\";\n-                XMLUtils.createXMLFile(report, fileName);\n-                break;\n-\n-            case CSV:\n-                fileName += \".csv\";\n-                os = Files.newOutputStream(Paths.get(fileName));\n-                IOUtils.copyAndCloseInput(report, os);\n-                break;\n-\n-            case PDF:\n-                fileName += \".pdf\";\n-                os = Files.newOutputStream(Paths.get(fileName));\n-                IOUtils.copyAndCloseInput(report, os);\n-                break;\n-\n-            case HTML:\n-                fileName += \".html\";\n-                os = Files.newOutputStream(Paths.get(fileName));\n-                IOUtils.copyAndCloseInput(report, os);\n-                break;\n-\n-            case RTF:\n-                fileName += \".rtf\";\n-                os = Files.newOutputStream(Paths.get(fileName));\n-                IOUtils.copyAndCloseInput(report, os);\n-                break;\n-\n-            default:\n-                return format + \" not supported\";\n-        }\n-        if (os != null) {\n-            os.close();\n-        }\n-\n-        return fileName;\n-    }\n-\n-    public void execute(final String reportKey) {\n-        reportService.execute(new ExecuteQuery.Builder().key(reportKey).build());\n-    }\n-\n-    public void deleteExecution(final String executionKey) {\n-        reportService.deleteExecution(executionKey);\n-    }\n-\n-    public void delete(final String reportKey) {\n-        reportService.delete(reportKey);\n-    }\n-}"},{"sha":"943f4054b3d5829b9eb5f44d1721d2d830393d31","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/AbstractResourceCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-public abstract class AbstractResourceCommand {\n-\n-    protected final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n-    \n-    protected final ResourceResultManager resourceResultManager = new ResourceResultManager();\n-\n-}"},{"sha":"ee7a252a069ef2b63ee5f973a5bcce35ea551672","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceCommand.java","status":"removed","additions":0,"deletions":105,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,105 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"resource\")\n-public class ResourceCommand extends AbstractCommand {\n-\n-    private final ResourceResultManager resourceResultManager = new ResourceResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(ResourceOptions.HELP.getOptionName());\n-        }\n-\n-        switch (ResourceOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new ResourceDetails(input).details();\n-                break;\n-            case LIST:\n-                new ResourceList(input).list();\n-                break;\n-            case READ:\n-                new ResourceRead(input).read();\n-                break;\n-            case DELETE:\n-                new ResourceDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                resourceResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return resourceResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum ResourceOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        ResourceOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static ResourceOptions fromName(final String name) {\n-            ResourceOptions optionToReturn = HELP;\n-            for (final ResourceOptions option : ResourceOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final ResourceOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"8651ec1f9325339a392a4ee142d0a1b6b13e372c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDelete.java","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,62 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ResourceDelete extends AbstractResourceCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"resource --delete {RESOURCE-KEY} {RESOURCE-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ResourceDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    resourceSyncopeOperations.delete(parameter);\n-                    resourceResultManager.deletedMessage(\"resource\", parameter);\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting resource\", ex);\n-                    resourceResultManager.numberFormatException(\"resource\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error deleting resource\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        resourceResultManager.notFoundError(\"Resource\", parameter);\n-                    } else {\n-                        resourceResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                }\n-            }\n-        } else {\n-            resourceResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"af58864606ae3fd92f65865ecb3d9cd50d8cf81a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDetails.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ResourceDetails extends AbstractResourceCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"resource --details\";\n-\n-    private final Input input;\n-\n-    public ResourceDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<ResourceTO> resourceTOs = resourceSyncopeOperations.list();\n-                details.put(\"Total number\", String.valueOf(resourceTOs.size()));\n-                resourceResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about resource\", ex);\n-                resourceResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            resourceResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"203254333df6103e2b348ec3954973dfdeddd8b9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ResourceList extends AbstractResourceCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"resource --list\";\n-\n-    private final Input input;\n-\n-    public ResourceList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                resourceResultManager.printResources(resourceSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing resource\", ex);\n-                resourceResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            resourceResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"471e864996a5973bd4ae34d25152ede8f51a46a3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceRead.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ResourceRead extends AbstractResourceCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"resource --read {RESOURCE-KEY} {RESOURCE-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public ResourceRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<ResourceTO> resourceTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    resourceTOs.add(resourceSyncopeOperations.read(parameter));\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading resource\", ex);\n-                    resourceResultManager.numberFormatException(\"resource\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading resource\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        resourceResultManager.notFoundError(\"Resource\", parameter);\n-                    } else {\n-                        resourceResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                }\n-            }\n-            resourceResultManager.printResources(resourceTOs);\n-        } else {\n-            resourceResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"4c772eedf18bc11f82f49920789f64f1a6669a9f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"removed","additions":0,"deletions":99,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,99 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.MappingTO;\n-import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-\n-public class ResourceResultManager extends CommonsResultManager {\n-\n-    public void printResources(final List<ResourceTO> resourceTOs) {\n-        System.out.println(\"\");\n-        resourceTOs.forEach(resourceTO -> {\n-            printResource(resourceTO);\n-        });\n-    }\n-\n-    private void printResource(final ResourceTO resourceTO) {\n-        System.out.println(\" > RESOURCE KEY: \" + resourceTO.getKey());\n-        System.out.println(\"    connector dispaly name: \" + resourceTO.getConnectorDisplayName());\n-        System.out.println(\"    connector key: \" + resourceTO.getConnector());\n-        System.out.println(\"    account policy key: \" + resourceTO.getAccountPolicy());\n-        System.out.println(\"    password policy key: \" + resourceTO.getPasswordPolicy());\n-        System.out.println(\"    pull policy key: \" + resourceTO.getPullPolicy());\n-        System.out.println(\"    propagation actions: \" + resourceTO.getPropagationActions());\n-        System.out.println(\"    propagation priority: \" + resourceTO.getPropagationPriority());\n-        System.out.println(\"    PROVISIONS:\");\n-        printProvision(resourceTO.getProvisions());\n-        System.out.println(\"    create trace level: \" + resourceTO.getCreateTraceLevel());\n-        System.out.println(\"    delete trace level: \" + resourceTO.getDeleteTraceLevel());\n-        System.out.println(\"    update trace level: \" + resourceTO.getUpdateTraceLevel());\n-        System.out.println(\"    pull trace level: \" + resourceTO.getProvisioningTraceLevel());\n-        System.out.println(\"    enforce mandatory condition: \" + resourceTO.isEnforceMandatoryCondition());\n-        System.out.println(\"    override capabilities: \" + resourceTO.isOverrideCapabilities());\n-        System.out.println(\"    random password if not provided: \" + resourceTO.isRandomPwdIfNotProvided());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printProvision(final List<ProvisionTO> provisionTOs) {\n-        provisionTOs.forEach(provisionTO -> {\n-            System.out.println(\"       provision key: \" + provisionTO.getKey());\n-            System.out.println(\"       any type: \" + provisionTO.getAnyType());\n-            System.out.println(\"       object class: \" + provisionTO.getObjectClass());\n-            System.out.println(\"       sync token: \" + provisionTO.getSyncToken());\n-            System.out.println(\"       virtual schema: \" + provisionTO.getVirSchemas());\n-            System.out.println(\"       MAPPING: \");\n-            printMapping(provisionTO.getMapping());\n-        });\n-    }\n-\n-    private void printMapping(final MappingTO mappingTO) {\n-        System.out.println(\"          ConnObjectLink: \" + mappingTO.getConnObjectLink());\n-        System.out.println(\"          MAPPING ITEM: \");\n-        printItem(mappingTO.getItems());\n-    }\n-\n-    private void printItem(final List<ItemTO> itemTOs) {\n-        itemTOs.forEach(itemTO -> {\n-            System.out.println(\"             mapping key: \" + itemTO.getKey());\n-            System.out.println(\"             internal attribute name: \" + itemTO.getIntAttrName());\n-            System.out.println(\"             external attribute name: \" + itemTO.getExtAttrName());\n-            System.out.println(\"             mandatory condition: \" + itemTO.getMandatoryCondition());\n-            System.out.println(\"             JEXL propagation transformer: \"\n-                    + itemTO.getPropagationJEXLTransformer());\n-            System.out.println(\"             JEXL pull transformer: \"\n-                    + itemTO.getPullJEXLTransformer());\n-            System.out.println(\"             transformers: \"\n-                    + itemTO.getTransformers());\n-            System.out.println(\"             purpose: \" + itemTO.getPurpose());\n-            System.out.println(\"             connector object key: \" + itemTO.isConnObjectKey());\n-            System.out.println(\"             password: \" + itemTO.isPassword());\n-            System.out.println(\"\");\n-        });\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"resources details\", details);\n-    }\n-}"},{"sha":"9ddedf8a4b686febc1d617c03f4d3452b7a8336c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceSyncopeOperations.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.resource;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.rest.api.service.ResourceService;\n-\n-public class ResourceSyncopeOperations {\n-\n-    private final ResourceService resourceService = SyncopeServices.get(ResourceService.class);\n-\n-    public void delete(final String name) {\n-        resourceService.delete(name);\n-    }\n-\n-    public List<ResourceTO> list() {\n-        return resourceService.list();\n-    }\n-\n-    public ResourceTO read(final String name) {\n-        return resourceService.read(name);\n-    }\n-\n-    public boolean exists(final String name) {\n-        try {\n-            read(name);\n-            return true;\n-        } catch (final SyncopeClientException ex) {\n-            return false;\n-        }\n-    }\n-}"},{"sha":"de4aac6df69172a25c883259aeb3acc3dbc989c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/AbstractRoleCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-public abstract class AbstractRoleCommand {\n-\n-    protected final RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n-\n-    protected final RoleResultManager roleResultManager = new RoleResultManager();\n-\n-}"},{"sha":"52974ac6b77681c9e77183e609f34312fc79ffdd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleCommand.java","status":"removed","additions":0,"deletions":105,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,105 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"role\")\n-public class RoleCommand extends AbstractCommand {\n-\n-    private final RoleResultManager roleResultManager = new RoleResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(RoleOptions.HELP.getOptionName());\n-        }\n-\n-        switch (RoleOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new RoleDetails(input).details();\n-                break;\n-            case LIST:\n-                new RoleList(input).list();\n-                break;\n-            case READ:\n-                new RoleRead(input).read();\n-                break;\n-            case DELETE:\n-                new RoleDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                roleResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return roleResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum RoleOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        RoleOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static RoleOptions fromName(final String name) {\n-            RoleOptions optionToReturn = HELP;\n-            for (final RoleOptions option : RoleOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final RoleOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"36eb7ce6590dd2ceeec54ac3c87d0ce55c03f89d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDelete.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RoleDelete extends AbstractRoleCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RoleDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"role --delete {ROLE-KEY} {ROLE-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public RoleDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.getParameters().length >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    roleSyncopeOperations.delete(parameter);\n-                    roleResultManager.deletedMessage(\"role\", parameter);\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error deleting role\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        roleResultManager.notFoundError(\"Role\", parameter);\n-                    } else {\n-                        roleResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting role\", ex);\n-                    roleResultManager.numberFormatException(\"role\", parameter);\n-                }\n-            }\n-        } else {\n-            roleResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-\n-}"},{"sha":"0fd28676225917881fdfcc5430fe76db98442a06","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDetails.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RoleDetails extends AbstractRoleCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RoleDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"role --details\";\n-\n-    private final Input input;\n-\n-    public RoleDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<RoleTO> roleTOs = roleSyncopeOperations.list();\n-                long withoutEntitlements = roleTOs.stream().\n-                        filter(roleTO -> roleTO.getEntitlements().isEmpty()).count();\n-                details.put(\"Total number\", String.valueOf(roleTOs.size()));\n-                details.put(\"Without entitlements\", String.valueOf(withoutEntitlements));\n-                roleResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about role\", ex);\n-                roleResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            roleResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"9aaabab7c4808281a86ed085f9615af61d8abadb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleList.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RoleList extends AbstractRoleCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RoleList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"role --list\";\n-\n-    private final Input input;\n-\n-    public RoleList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                roleResultManager.printRoles(roleSyncopeOperations.list());\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing role\", ex);\n-                roleResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            roleResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"f5f9e91d2905be3a13082bb2f43ee6d9a9a77ec3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleRead.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class RoleRead extends AbstractRoleCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(RoleRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"role --read {ROLE-KEY} {ROLE-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public RoleRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<RoleTO> roleTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    roleTOs.add(roleSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading role\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        roleResultManager.notFoundError(\"Role\", parameter);\n-                    } else {\n-                        roleResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading role\", ex);\n-                    roleResultManager.numberFormatException(\"user\", parameter);\n-                }\n-            }\n-            roleResultManager.printRoles(roleTOs);\n-        } else {\n-            roleResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"158f26d050789bc3250b822c367f34fb0792090c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleResultManager.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-\n-public class RoleResultManager extends CommonsResultManager {\n-\n-    public void printRoles(final List<RoleTO> roleTOs) {\n-        System.out.println(\"\");\n-        roleTOs.forEach(roleTO -> {\n-            printRole(roleTO);\n-        });\n-    }\n-\n-    private void printRole(final RoleTO roleTO) {\n-        System.out.println(\" > ROLE KEY: \" + roleTO.getKey());\n-        System.out.println(\"    REALMS: \");\n-        printRealms(roleTO.getRealms());\n-        System.out.println(\"    ENTITLEMENTS:\");\n-        printEntitlements(roleTO.getEntitlements());\n-        System.out.println(\"    dynamic membership condition: \" + roleTO.getDynMembershipCond());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printRealms(final List<String> realms) {\n-        realms.forEach(realm -> {\n-            System.out.println(\"       - \" + realm);\n-        });\n-    }\n-\n-    private void printEntitlements(final Set<String> entitlements) {\n-        entitlements.forEach(entitlement -> {\n-            System.out.println(\"       - \" + entitlement);\n-        });\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"Roles details\", details);\n-    }\n-}"},{"sha":"6bffb17942fb6d51beac29c029bb30ceac528a0f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleSyncopeOperations.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.role;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.apache.syncope.common.rest.api.service.RoleService;\n-\n-public class RoleSyncopeOperations {\n-\n-    private final RoleService roleService = SyncopeServices.get(RoleService.class);\n-\n-    public List<RoleTO> list() {\n-        return roleService.list();\n-    }\n-\n-    public RoleTO read(final String role) {\n-        return roleService.read(role);\n-    }\n-\n-    public void delete(final String role) {\n-        roleService.delete(role);\n-    }\n-}"},{"sha":"96dae04c36707a18455920f6c75d8c386593b948","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/AbstractSchemaCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FAbstractSchemaCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-public abstract class AbstractSchemaCommand {\n-\n-    protected final SchemaSyncopeOperations schemaSyncopeOperations = new SchemaSyncopeOperations();\n-\n-    protected final SchemaResultManager schemaResultManager = new SchemaResultManager();\n-\n-}"},{"sha":"c4a44acadd4b48d1aa1391b7b88aa28e55664164","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaCommand.java","status":"removed","additions":0,"deletions":121,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,121 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"schema\")\n-public class SchemaCommand extends AbstractCommand {\n-\n-    private final SchemaResultManager schemaResultManager = new SchemaResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case DETAILS:\n-                new SchemaDetails(input).details();\n-                break;\n-            case LIST:\n-                new SchemaList(input).list();\n-                break;\n-            case LIST_ALL:\n-                new SchemaListAll(input).listAll();\n-                break;\n-            case LIST_PLAIN:\n-                new SchemaListPlain(input).listPlain();\n-                break;\n-            case LIST_DERIVED:\n-                new SchemaListDerived(input).listDerived();\n-                break;\n-            case LIST_VIRTUAL:\n-                new SchemaListVirtual(input).listVirtual();\n-                break;\n-            case READ:\n-                new SchemaRead(input).read();\n-                break;\n-            case DELETE:\n-                new SchemaDelete(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                schemaResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return schemaResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        LIST_ALL(\"--list-all\"),\n-        LIST_PLAIN(\"--list-plain\"),\n-        LIST_DERIVED(\"--list-derived\"),\n-        LIST_VIRTUAL(\"--list-virtual\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"beae0883bbf0ae07a8f9b2b749ed1e71d7b75702","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDelete.java","status":"removed","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,69 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.Arrays;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaDelete extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"schema --delete {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public SchemaDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 2) {\n-            final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n-            try {\n-                for (final String parameter : parameters) {\n-                    schemaSyncopeOperations.delete(input.firstParameter(), parameter);\n-                    schemaResultManager.deletedMessage(\"Schema\", parameter);\n-                }\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error deleting schema\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n-                } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    schemaResultManager.genericError(\"You cannot delete schema \" + parameters[0]);\n-                } else {\n-                    schemaResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error deleting schema\", ex);\n-                schemaResultManager.typeNotValidError(\n-                        \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            schemaResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"7f58fc3cce279bcde1befcf80d8a8eca0ba58777","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDetails.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaDetails extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"schema --details\";\n-\n-    private final Input input;\n-\n-    public SchemaDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final int plainSchemaSize = schemaSyncopeOperations.listPlain().size();\n-                final int derivedSchemaSize = schemaSyncopeOperations.listDerived().size();\n-                final int virtualSchemaSize = schemaSyncopeOperations.listVirtual().size();\n-                details.put(\"total number\", String.valueOf(plainSchemaSize\n-                        + derivedSchemaSize\n-                        + virtualSchemaSize));\n-                details.put(\"plain schema\", String.valueOf(plainSchemaSize));\n-                details.put(\"derived schema\", String.valueOf(derivedSchemaSize));\n-                details.put(\"virtual schema\", String.valueOf(virtualSchemaSize));\n-                schemaResultManager.printDetails(details);\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading details about schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            schemaResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"bc7c3e68d7fe1d2da7e7286b59ce906e2b315e5e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaList.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaList extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"schema --list {SCHEMA-TYPE}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public SchemaList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                schemaResultManager.toView(\n-                        input.firstParameter(), schemaSyncopeOperations.list(input.firstParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.typeNotValidError(\n-                        \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            schemaResultManager.commandOptionError(LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"0380487d2d45834175e8926eed84eed41e98d6e1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListAll.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaListAll extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaListAll.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"schema --list-all\";\n-\n-    private final Input input;\n-\n-    public SchemaListAll(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void listAll() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                for (final SchemaType schemaType : SchemaType.values()) {\n-                    schemaResultManager.toView(schemaType.name(), schemaSyncopeOperations.list(schemaType.name()));\n-                }\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"bc88a74029a0ae6a068bf96b193d20d48c5cffe5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListDerived.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaListDerived extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaListDerived.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"schema --list-derived\";\n-\n-    private final Input input;\n-\n-    public SchemaListDerived(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void listDerived() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                schemaResultManager.fromListDerived(schemaSyncopeOperations.listDerived());\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"38422c4beead6e503f1a26200f5d48808e08a08e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListPlain.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaListPlain extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaListPlain.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"schema --list-plain\";\n-\n-    private final Input input;\n-\n-    public SchemaListPlain(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void listPlain() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                schemaResultManager.printPlainSchemas(schemaSyncopeOperations.listPlain());\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"24426d1f93fa976cec87a15f15a083a0e1d14f32","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListVirtual.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaListVirtual extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaListVirtual.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"schema --list-virtual\";\n-\n-    private final Input input;\n-\n-    public SchemaListVirtual(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void listVirtual() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                schemaResultManager.fromListVirtual(schemaSyncopeOperations.listVirtual());\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error listing schema\", ex);\n-                schemaResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"96cd5cc39d6dcc5f2d194db54c49e527cf75e55f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaRead.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SchemaRead extends AbstractSchemaCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"schema --read {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n-            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n-\n-    private final Input input;\n-\n-    public SchemaRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 2) {\n-            final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n-            try {\n-                final List<SchemaTO> schemaTOs = new ArrayList<>();\n-                for (final String parameter : parameters) {\n-                    schemaTOs.add(schemaSyncopeOperations.read(input.firstParameter(), parameter));\n-                }\n-                schemaResultManager.toView(input.firstParameter(), schemaTOs);\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n-                } else {\n-                    schemaResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading schema\", ex);\n-                schemaResultManager.typeNotValidError(\n-                        \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n-            }\n-        } else {\n-            schemaResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"546e673facf99a838efdee86f47171bda1d4b633","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaResultManager.java","status":"removed","additions":0,"deletions":107,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,107 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.client.cli.view.Table;\n-import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-\n-public class SchemaResultManager extends CommonsResultManager {\n-\n-    public void toView(final String schemaTypeString, final List<? extends SchemaTO> schemaTOs) {\n-        switch (SchemaType.valueOf(schemaTypeString)) {\n-            case PLAIN:\n-                printPlainSchemasDetailed(schemaTOs);\n-                break;\n-            case DERIVED:\n-                fromListDerived(schemaTOs);\n-                break;\n-            case VIRTUAL:\n-                fromListVirtual(schemaTOs);\n-                break;\n-            default:\n-                break;\n-        }\n-    }\n-\n-    private void printPlainSchemasDetailed(final List<? extends SchemaTO> schemaTOs) {\n-        System.out.println(\"\");\n-        schemaTOs.forEach(schemaTO -> {\n-            printPlanSchemaDetailed((PlainSchemaTO) schemaTO);\n-        });\n-    }\n-\n-    private void printPlanSchemaDetailed(final PlainSchemaTO schemaTO) {\n-        System.out.println(\" > SCHEMA KEY: \" + schemaTO.getKey());\n-        System.out.println(\"    type: \" + schemaTO.getType().toString());\n-        System.out.println(\"    any type class: \" + schemaTO.getAnyTypeClass());\n-        System.out.println(\"    conversion pattern: \" + schemaTO.getConversionPattern());\n-        System.out.println(\"    mandatory condition: \" + schemaTO.getMandatoryCondition());\n-        System.out.println(\"    mime type: \" + schemaTO.getMimeType());\n-        System.out.println(\"    validator class: \" + schemaTO.getValidator());\n-        System.out.println(\"    cipher algorithm: \" + (schemaTO.getCipherAlgorithm() == null\n-                ? \"\" : schemaTO.getCipherAlgorithm().getAlgorithm()));\n-        System.out.println(\"\");\n-    }\n-\n-    public void printPlainSchemas(final List<? extends SchemaTO> schemaTOs) {\n-        final Table.TableBuilder tableBuilder =\n-                new Table.TableBuilder(\"plain schemas\").header(\"schema key\").header(\"type\").header(\"mandatory\");\n-        schemaTOs.forEach(schemaTO -> {\n-            tableBuilder.rowValues(Arrays.asList(\n-                    ((PlainSchemaTO) schemaTO).getKey(),\n-                    ((PlainSchemaTO) schemaTO).getType().toString(),\n-                    ((PlainSchemaTO) schemaTO).getMandatoryCondition()));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void fromListDerived(final List<? extends SchemaTO> schemaTOs) {\n-        final Table.TableBuilder tableBuilder =\n-                new Table.TableBuilder(\"derived schemas\").header(\"schema key\").header(\"expression\");\n-        schemaTOs.forEach(schemaTO -> {\n-            tableBuilder.rowValues(Arrays.asList(\n-                    ((DerSchemaTO) schemaTO).getKey(),\n-                    ((DerSchemaTO) schemaTO).getExpression()));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void fromListVirtual(final List<? extends SchemaTO> schemaTOs) {\n-        final Table.TableBuilder tableBuilder =\n-                new Table.TableBuilder(\"virtual schemas\").header(\"schema key\").header(\"readonly\");\n-        schemaTOs.forEach(schemaTO -> {\n-            tableBuilder.rowValues(Arrays.asList(\n-                    ((VirSchemaTO) schemaTO).getKey(),\n-                    String.valueOf(((VirSchemaTO) schemaTO).isReadonly())));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"Schemas details\", details);\n-    }\n-}"},{"sha":"4dd17b1cd09b54c0ed000c081d889a392d0c4e5a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaSyncopeOperations.java","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,55 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.schema;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n-import org.apache.syncope.common.rest.api.service.SchemaService;\n-\n-public class SchemaSyncopeOperations {\n-\n-    private final SchemaService schemaService = SyncopeServices.get(SchemaService.class);\n-\n-    public <T extends SchemaTO> T read(final String schemaTypeString, final String schemaName) {\n-        return schemaService.read(SchemaType.valueOf(schemaTypeString), schemaName);\n-    }\n-\n-    public <T extends SchemaTO> List<T> list(final String schemaTypeString) {\n-        return schemaService.search(new SchemaQuery.Builder().type(SchemaType.valueOf(schemaTypeString)).build());\n-    }\n-\n-    public <T extends SchemaTO> List<T> listPlain() {\n-        return schemaService.search(new SchemaQuery.Builder().type(SchemaType.PLAIN).build());\n-    }\n-\n-    public <T extends SchemaTO> List<T> listDerived() {\n-        return schemaService.search(new SchemaQuery.Builder().type(SchemaType.DERIVED).build());\n-    }\n-\n-    public <T extends SchemaTO> List<T> listVirtual() {\n-        return schemaService.search(new SchemaQuery.Builder().type(SchemaType.VIRTUAL).build());\n-    }\n-\n-    public void delete(final String schemaTypeString, final String schemaName) {\n-        schemaService.delete(SchemaType.valueOf(schemaTypeString), schemaName);\n-    }\n-}"},{"sha":"bdc4c2225676939ba415682c1fcdcac7ba2b0708","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/AbstractTaskCommand.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FAbstractTaskCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-public abstract class AbstractTaskCommand {\n-\n-    protected final TaskSyncopeOperations taskSyncopeOperations = new TaskSyncopeOperations();\n-\n-    protected final TaskResultManager taskResultManager = new TaskResultManager();\n-\n-}"},{"sha":"1277ead1af77bb0f874db8a8ee4d0d1139a31159","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskCommand.java","status":"removed","additions":0,"deletions":121,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,121 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"task\")\n-public class TaskCommand extends AbstractCommand {\n-\n-    private final TaskResultManager taskResultManager = new TaskResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case DETAILS:\n-                new TaskDetails(input).details();\n-                break;\n-            case LIST:\n-                new TaskList(input).list();\n-                break;\n-            case LIST_JOBS:\n-                new TaskListJobs(input).list();\n-                break;\n-            case READ:\n-                new TaskRead(input).read();\n-                break;\n-            case DELETE:\n-                new TaskDelete(input).delete();\n-                break;\n-            case DELETE_PROP_TASK:\n-                new TaskDeleteAllProp(input).delete();\n-                break;\n-            case DELETE_EXECUTION:\n-                new TaskExecutionDelete(input).delete();\n-                break;\n-            case EXECUTE:\n-                new TaskExecute(input).execute();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                taskResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return taskResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        LIST_JOBS(\"--list-jobs\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\"),\n-        DELETE_PROP_TASK(\"--delete-all-prop\"),\n-        DELETE_EXECUTION(\"--delete-execution\"),\n-        EXECUTE(\"--execute\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"85165073ef4b97a11cd7fafc87d3005c778e2ae8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDelete.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskDelete extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"task --delete {TASK-KEY} {TASK-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public TaskDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    taskSyncopeOperations.delete(parameter);\n-                    taskResultManager.deletedMessage(\"Task\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting task\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        taskResultManager.notFoundError(\"Task\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        taskResultManager.genericError(\"You cannot delete task \" + parameter);\n-                    } else {\n-                        taskResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting task\", ex);\n-                    taskResultManager.notBooleanDeletedError(\"task\", parameter);\n-                }\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"7d1660b02049e84e3c235b16700e59bd1560d517","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDeleteAllProp.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDeleteAllProp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDeleteAllProp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDeleteAllProp.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskDeleteAllProp extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskDeleteAllProp.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"task --delete-all-prop\";\n-\n-    private final Input input;\n-\n-    public TaskDeleteAllProp(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-\n-        if (input.parameterNumber() == 0) {\n-            for (final TaskTO taskTO : taskSyncopeOperations.listPropagationTask()) {\n-                final String taskId = String.valueOf(taskTO.getKey());\n-                try {\n-                    taskSyncopeOperations.delete(taskId);\n-                    taskResultManager.deletedMessage(\"Task\", taskId);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting task\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        taskResultManager.notFoundError(\"Task\", taskId);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        taskResultManager.genericError(\"You cannot delete task \" + taskId);\n-                    } else {\n-                        taskResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting task\", ex);\n-                    taskResultManager.notBooleanDeletedError(\"task\", taskId);\n-                }\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"03bebdddfbed8b6701c90237bb963d6dd9f6cbb5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"removed","additions":0,"deletions":126,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,126 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.NotificationTaskTO;\n-import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.syncope.common.lib.to.PushTaskTO;\n-import org.apache.syncope.common.lib.to.PullTaskTO;\n-import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.types.PullMode;\n-import org.apache.syncope.common.lib.types.TaskType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskDetails extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskDetails.class);\n-\n-    private static final String DETAILS_HELP_MESSAGE = \"task --details\";\n-\n-    private final Input input;\n-\n-    public TaskDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<TaskTO> notificationTaskTOs =\n-                        taskSyncopeOperations.list(TaskType.NOTIFICATION.name());\n-                final List<TaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION.name());\n-                final List<TaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH.name());\n-                final List<TaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED.name());\n-                final List<TaskTO> pullTaskTOs = taskSyncopeOperations.list(TaskType.PULL.name());\n-                final List<JobTO> jobTOs = taskSyncopeOperations.listJobs();\n-                final int notificationTaskSize = notificationTaskTOs.size();\n-                final int propagationTaskSize = propagationTaskTOs.size();\n-                final int pushTaskSize = pushTaskTOs.size();\n-                final int scheduledTaskSize = scheduledTaskTOs.size();\n-                final int pullTaskSize = pullTaskTOs.size();\n-                final int jobsSize = jobTOs.size();\n-\n-                long notificationNotExecuted = notificationTaskTOs.stream().\n-                        filter(notificationTaskTO -> !((NotificationTaskTO) notificationTaskTO).isExecuted()).\n-                        count();\n-\n-                long propagationNotExecuted = propagationTaskTOs.stream().\n-                        filter(propagationTaskTO -> ((PropagationTaskTO) propagationTaskTO).getExecutions().isEmpty()).\n-                        count();\n-\n-                long pushNotExecuted = pushTaskTOs.stream().\n-                        filter(pushTaskTO -> ((PushTaskTO) pushTaskTO).getExecutions().isEmpty()).\n-                        count();\n-\n-                long scheduledNotExecuted = scheduledTaskTOs.stream().\n-                        filter(scheduledTaskTO -> ((SchedTaskTO) scheduledTaskTO).getExecutions().isEmpty()).\n-                        count();\n-\n-                int pullNotExecuted = 0;\n-                int pullFull = 0;\n-                for (final TaskTO pullTaskTO : pullTaskTOs) {\n-                    if (((PullTaskTO) pullTaskTO).getExecutions().isEmpty()) {\n-                        pullNotExecuted++;\n-                    }\n-                    if (((PullTaskTO) pullTaskTO).getPullMode() == PullMode.FULL_RECONCILIATION) {\n-                        pullFull++;\n-                    }\n-                }\n-\n-                details.put(\"total number\", String.valueOf(notificationTaskSize\n-                        + propagationTaskSize\n-                        + pushTaskSize\n-                        + scheduledTaskSize\n-                        + pullTaskSize));\n-                details.put(\"notification tasks\", String.valueOf(notificationTaskSize));\n-                details.put(\"notification tasks not executed\", String.valueOf(notificationNotExecuted));\n-                details.put(\"propagation tasks\", String.valueOf(propagationTaskSize));\n-                details.put(\"propagation tasks not executed\", String.valueOf(propagationNotExecuted));\n-                details.put(\"push tasks\", String.valueOf(pushTaskSize));\n-                details.put(\"push tasks not executed\", String.valueOf(pushNotExecuted));\n-                details.put(\"scheduled tasks\", String.valueOf(scheduledTaskSize));\n-                details.put(\"scheduled tasks not executed\", String.valueOf(scheduledNotExecuted));\n-                details.put(\"pull tasks\", String.valueOf(pullTaskSize));\n-                details.put(\"pull tasks not executed\", String.valueOf(pullNotExecuted));\n-                details.put(\"pull tasks with full reconciliation\", String.valueOf(pullFull));\n-                details.put(\"jobs\", String.valueOf(jobsSize));\n-                taskResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about task\", ex);\n-                taskResultManager.genericError(ex.getMessage());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading details about task\", ex);\n-                taskResultManager.typeNotValidError(\n-                        \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(DETAILS_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"493525d8eea9fc7247ac17acecb60667f1ace5d8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecute.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.Arrays;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskExecute extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskExecute.class);\n-\n-    private static final String EXECUTE_HELP_MESSAGE = \"task --execute {TASK-KEY} {DRY-RUN}\\n\"\n-            + \"          Dry run: true / false\";\n-\n-    private final Input input;\n-\n-    public TaskExecute(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void execute() {\n-        if (input.parameterNumber() == 2) {\n-            try {\n-                boolean dryRun = true;\n-                if (\"false\".equalsIgnoreCase(input.secondParameter())) {\n-                    dryRun = false;\n-                } else if (\"true\".equalsIgnoreCase(input.secondParameter())) {\n-                    dryRun = true;\n-                } else {\n-                    taskResultManager.notBooleanDeletedError(\"dry run\", input.secondParameter());\n-                }\n-                taskResultManager.printTaskExecTOs(Arrays.asList(\n-                        taskSyncopeOperations.execute(input.firstParameter(), dryRun)));\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n-                LOG.error(\"Error executing task\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    taskResultManager.notFoundError(\"Task\", input.firstParameter());\n-                } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    taskResultManager.genericError(\"You cannot delete task \" + input.firstParameter());\n-                } else {\n-                    taskResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final NumberFormatException ex) {\n-                LOG.error(\"Error executing task\", ex);\n-                taskResultManager.notBooleanDeletedError(\"task\", input.firstParameter());\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(EXECUTE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"3d8264b3d47776f7d0f74e921865f6855507705f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionDelete.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskExecutionDelete extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskExecutionDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"task --delete-execution \"\n-            + \"{TASK-EXEC-KEY} {TASK-EXEC-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public TaskExecutionDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    taskSyncopeOperations.deleteExecution(parameter);\n-                    taskResultManager.deletedMessage(\"Task execution\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting execution\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        taskResultManager.notFoundError(\"Task execution\", parameter);\n-                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        taskResultManager.genericError(\"You cannot delete task execution\" + parameter);\n-                    } else {\n-                        taskResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting execution\", ex);\n-                    taskResultManager.notBooleanDeletedError(\"task execution\", parameter);\n-                }\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e162c1b81e6e98c1d3e3ea6725ea84aecbfc2c39","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.TaskType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskList extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"task --list {TASK-TYPE}\\n\"\n-            + \"   Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\";\n-\n-    private final Input input;\n-\n-    public TaskList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                taskResultManager.printTasksType(\n-                        input.firstParameter(), taskSyncopeOperations.list(input.firstParameter()));\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing task\", ex);\n-                taskResultManager.genericError(ex.getMessage());\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error listing task\", ex);\n-                taskResultManager.typeNotValidError(\n-                        \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"f21a3ff81af9af959e84cf7dcb9d5724308701e8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskListJobs.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListJobs.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskListJobs extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskListJobs.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"task --list-jobs\";\n-\n-    private final Input input;\n-\n-    public TaskListJobs(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                List<JobTO> jobs = taskSyncopeOperations.listJobs();\n-                if (jobs.isEmpty()) {\n-                    taskResultManager.genericMessage(\"There are NO jobs available\");\n-                } else {\n-                    taskResultManager.printJobs(jobs);\n-                }\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing jobs\", ex);\n-                taskResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            taskResultManager.unnecessaryParameters(input.listParameters(), READ_HELP_MESSAGE);\n-        }\n-\n-    }\n-}"},{"sha":"be5221a8c7ba6c5f452accfc27ae1bac0dd703cb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRead.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.apache.syncope.common.lib.types.TaskType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class TaskRead extends AbstractTaskCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TaskRead.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"task --read {TASK-TYPE} {TASK-KEY}\\n\"\n-            + \"   Task type:  PROPAGATION / NOTIFICATION / SCHEDULED / PULL / PUSH\";\n-\n-    private final Input input;\n-\n-    public TaskRead(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.parameterNumber() >= 2) {\n-            final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n-            try {\n-                final List<TaskTO> taskTOs = new ArrayList<>();\n-                for (final String parameter : parameters) {\n-                    taskTOs.add(taskSyncopeOperations.read(input.firstParameter(), parameter));\n-                }\n-                taskResultManager.printTasks(taskTOs);\n-            } catch (final SyncopeClientException | WebServiceException ex) {\n-                LOG.error(\"Error reading task\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    taskResultManager.notFoundError(\"Task\", parameters[0]);\n-                } else {\n-                    taskResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (final IllegalArgumentException ex) {\n-                LOG.error(\"Error reading task\", ex);\n-                taskResultManager.typeNotValidError(\n-                        \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n-            }\n-        } else {\n-            taskResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"82823c75d25026580bdc973dbe138deab1e005e1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskResultManager.java","status":"removed","additions":0,"deletions":224,"changes":224,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,224 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.NotificationTaskTO;\n-import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.syncope.common.lib.to.PushTaskTO;\n-import org.apache.syncope.common.lib.to.ProvisioningTaskTO;\n-import org.apache.syncope.common.lib.to.PullTaskTO;\n-import org.apache.syncope.common.lib.to.ExecTO;\n-import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.types.TaskType;\n-\n-public class TaskResultManager extends CommonsResultManager {\n-\n-    public void printTasks(final List<TaskTO> taskTOs) {\n-        System.out.println(\"\");\n-        taskTOs.forEach(taskTO -> {\n-            if (taskTO instanceof NotificationTaskTO) {\n-                printNotificationTask((NotificationTaskTO) taskTO);\n-            } else if (taskTO instanceof PropagationTaskTO) {\n-                printPropagationTask((PropagationTaskTO) taskTO);\n-            } else if (taskTO instanceof PushTaskTO) {\n-                printPushTask((PushTaskTO) taskTO);\n-            } else if (taskTO instanceof ProvisioningTaskTO) {\n-                printScheduledTask((ProvisioningTaskTO) taskTO);\n-            } else if (taskTO instanceof PullTaskTO) {\n-                printPullTask((PullTaskTO) taskTO);\n-            }\n-        });\n-    }\n-\n-    public void printTasksType(final String taskTypeString, final List<TaskTO> taskTOs) {\n-        System.out.println(\"\");\n-        switch (TaskType.valueOf(taskTypeString)) {\n-            case NOTIFICATION:\n-                taskTOs.forEach(taskTO -> {\n-                    printNotificationTask(((NotificationTaskTO) taskTO));\n-                });\n-                break;\n-            case PROPAGATION:\n-                taskTOs.forEach(taskTO -> {\n-                    printPropagationTask((PropagationTaskTO) taskTO);\n-                });\n-                break;\n-            case PUSH:\n-                taskTOs.forEach(taskTO -> {\n-                    printPushTask((PushTaskTO) taskTO);\n-                });\n-                break;\n-            case SCHEDULED:\n-                taskTOs.forEach(taskTO -> {\n-                    printScheduledTask((SchedTaskTO) taskTO);\n-                });\n-                break;\n-            case PULL:\n-                taskTOs.forEach(taskTO -> {\n-                    printPullTask((PullTaskTO) taskTO);\n-                });\n-                break;\n-            default:\n-                break;\n-        }\n-    }\n-\n-    private void printNotificationTask(final NotificationTaskTO notificationTaskTO) {\n-        System.out.println(\" - Notification task key: \" + notificationTaskTO.getKey());\n-        System.out.println(\"     executed: \" + notificationTaskTO.isExecuted());\n-        System.out.println(\"     sender: \" + notificationTaskTO.getSender());\n-        System.out.println(\"     subjetc: \" + notificationTaskTO.getSubject());\n-        System.out.println(\"     text body: \" + notificationTaskTO.getTextBody());\n-        System.out.println(\"     html body: \" + notificationTaskTO.getHtmlBody());\n-        System.out.println(\"     latest execution status: \" + notificationTaskTO.getLatestExecStatus());\n-        System.out.println(\"     start date: \" + notificationTaskTO.getStart());\n-        System.out.println(\"     end date: \" + notificationTaskTO.getEnd());\n-        System.out.println(\"     recipients: \" + notificationTaskTO.getRecipients());\n-        System.out.println(\"     trace level: \" + notificationTaskTO.getTraceLevel());\n-        printTaskExecTOs(notificationTaskTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printPropagationTask(final PropagationTaskTO propagationTaskTO) {\n-        System.out.println(\" - Propagation task key: \" + propagationTaskTO.getKey());\n-        System.out.println(\"     resource: \" + propagationTaskTO.getResource());\n-        System.out.println(\"     any key: \" + propagationTaskTO.getEntityKey());\n-        System.out.println(\"     any type kind: \" + propagationTaskTO.getAnyTypeKind());\n-        System.out.println(\"     connector object key: \" + propagationTaskTO.getConnObjectKey());\n-        System.out.println(\"     old connector object key: \" + propagationTaskTO.getOldConnObjectKey());\n-        System.out.println(\"     latest execution status: \" + propagationTaskTO.getLatestExecStatus());\n-        System.out.println(\"     class name: \" + propagationTaskTO.getObjectClassName());\n-        System.out.println(\"     attributes: \" + propagationTaskTO.getAttributes());\n-        System.out.println(\"     start date: \" + propagationTaskTO.getStart());\n-        System.out.println(\"     end date: \" + propagationTaskTO.getEnd());\n-        System.out.println(\"     operation: \" + propagationTaskTO.getOperation());\n-        printTaskExecTOs(propagationTaskTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printPushTask(final PushTaskTO pushTaskTO) {\n-        System.out.println(\" - Push task key: \" + pushTaskTO.getKey());\n-        System.out.println(\"     name: \" + pushTaskTO.getName());\n-        System.out.println(\"     resource: \" + pushTaskTO.getResource());\n-        System.out.println(\"     cron expression: \" + pushTaskTO.getCronExpression());\n-        System.out.println(\"     description: \" + pushTaskTO.getDescription());\n-        System.out.println(\"     is perform create: \" + pushTaskTO.isPerformCreate());\n-        System.out.println(\"     is perform delete: \" + pushTaskTO.isPerformDelete());\n-        System.out.println(\"     is perform update: \" + pushTaskTO.isPerformUpdate());\n-        System.out.println(\"     is pull status: \" + pushTaskTO.isSyncStatus());\n-        System.out.println(\"     start date: \" + pushTaskTO.getStart());\n-        System.out.println(\"     end date: \" + pushTaskTO.getEnd());\n-        System.out.println(\"     last execution: \" + pushTaskTO.getLastExec());\n-        System.out.println(\"     next execution: \" + pushTaskTO.getNextExec());\n-        System.out.println(\"     latest execution status: \" + pushTaskTO.getLatestExecStatus());\n-        System.out.println(\"     filters: \" + pushTaskTO.getFilters());\n-        System.out.println(\"     delegate: \" + pushTaskTO.getJobDelegate());\n-        System.out.println(\"     actions: \" + pushTaskTO.getActions());\n-        System.out.println(\"     matching rule: \" + pushTaskTO.getMatchingRule());\n-        System.out.println(\"     not matching rule: \" + pushTaskTO.getUnmatchingRule());\n-        printTaskExecTOs(pushTaskTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printScheduledTask(final SchedTaskTO schedTaskTO) {\n-        System.out.println(\" - Scheduled task key: \" + schedTaskTO.getKey());\n-        System.out.println(\"     name: \" + schedTaskTO.getName());\n-        System.out.println(\"     cron expression: \" + schedTaskTO.getCronExpression());\n-        System.out.println(\"     description: \" + schedTaskTO.getDescription());\n-        System.out.println(\"     start date: \" + schedTaskTO.getStart());\n-        System.out.println(\"     end date: \" + schedTaskTO.getEnd());\n-        System.out.println(\"     last execution: \" + schedTaskTO.getLastExec());\n-        System.out.println(\"     next execution: \" + schedTaskTO.getNextExec());\n-        System.out.println(\"     latest execution status: \" + schedTaskTO.getLatestExecStatus());\n-        System.out.println(\"     job delegate: \" + schedTaskTO.getJobDelegate());\n-        printTaskExecTOs(schedTaskTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printPullTask(final PullTaskTO pullTaskTO) {\n-        System.out.println(\" - Pull task key: \" + pullTaskTO.getKey());\n-        System.out.println(\"     name: \" + pullTaskTO.getName());\n-        System.out.println(\"     resource: \" + pullTaskTO.getResource());\n-        System.out.println(\"     realm destination: \" + pullTaskTO.getDestinationRealm());\n-        System.out.println(\"     cron expression: \" + pullTaskTO.getCronExpression());\n-        System.out.println(\"     description: \" + pullTaskTO.getDescription());\n-        System.out.println(\"     pull mode: \" + pullTaskTO.getPullMode());\n-        System.out.println(\"     perform create: \" + pullTaskTO.isPerformCreate());\n-        System.out.println(\"     perform delete: \" + pullTaskTO.isPerformDelete());\n-        System.out.println(\"     perform update: \" + pullTaskTO.isPerformUpdate());\n-        System.out.println(\"     pull status: \" + pullTaskTO.isSyncStatus());\n-        System.out.println(\"     TEMPLATES:\");\n-        printTemplates(pullTaskTO.getTemplates());\n-        System.out.println(\"     start date: \" + pullTaskTO.getStart());\n-        System.out.println(\"     end date: \" + pullTaskTO.getEnd());\n-        System.out.println(\"     next execution: \" + pullTaskTO.getNextExec());\n-        System.out.println(\"     last execution: \" + pullTaskTO.getLastExec());\n-        System.out.println(\"     latest execution status: \" + pullTaskTO.getLatestExecStatus());\n-        System.out.println(\"     job delegate: \" + pullTaskTO.getJobDelegate());\n-        System.out.println(\"     actions: \" + pullTaskTO.getActions());\n-        System.out.println(\"     matching rule: \" + pullTaskTO.getMatchingRule());\n-        System.out.println(\"     unmatching rule: \" + pullTaskTO.getUnmatchingRule());\n-        printTaskExecTOs(pullTaskTO.getExecutions());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printTemplates(final Map<String, AnyTO> templates) {\n-        templates.forEach((type, template) -> {\n-            System.out.println(\"        \"\n-                    + type + \" key: \" + template.getKey()\n-                    + \" of realm\" + template.getRealm()\n-                    + \" on resources \" + template.getResources());\n-        });\n-    }\n-\n-    public void printTaskExecTOs(final List<ExecTO> taskExecTOs) {\n-        taskExecTOs.forEach(taskExecTO -> {\n-            System.out.println(\"     EXECUTIONS: \");\n-            System.out.println(\"     - task execution key: \" + taskExecTO.getKey());\n-            System.out.println(\"       task: \" + taskExecTO.getRefDesc());\n-            System.out.println(\"       message: \");\n-            System.out.println(\"       ###############     <BEGIN MESSAGE>     ###############\");\n-            System.out.println(\"       message: \" + taskExecTO.getMessage());\n-            System.out.println(\"       ###############     <END   MESSAGE>     ###############\");\n-            System.out.println(\"       status: \" + taskExecTO.getStatus());\n-            System.out.println(\"       start date: \" + taskExecTO.getStart());\n-            System.out.println(\"       end date: \" + taskExecTO.getEnd());\n-            System.out.println(\"\");\n-        });\n-    }\n-\n-    public void printJobs(final List<JobTO> jobTOs) {\n-        jobTOs.forEach(jobTO -> {\n-            System.out.println(\"       TASK: \" + jobTO.getRefDesc());\n-            System.out.println(\"       start date: \" + jobTO.getStart());\n-            System.out.println(\"       running: \" + jobTO.isRunning());\n-            System.out.println(\"       scheduled: \" + jobTO.isScheduled());\n-        });\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"tasks details\", details);\n-    }\n-}"},{"sha":"d577968292cf3690988530bc4dcc89ebb5e6beee","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskSyncopeOperations.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.task;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.apache.syncope.common.lib.to.ExecTO;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n-import org.apache.syncope.common.rest.api.beans.TaskQuery;\n-import org.apache.syncope.common.rest.api.service.TaskService;\n-\n-public class TaskSyncopeOperations {\n-\n-    private final TaskService taskService = SyncopeServices.get(TaskService.class);\n-\n-    public List<JobTO> listJobs() {\n-        return taskService.listJobs();\n-    }\n-\n-    public <T extends TaskTO> T read(final String type, final String taskKey) {\n-        return taskService.read(TaskType.valueOf(type), taskKey, true);\n-    }\n-\n-    public void delete(final String taskKey) {\n-        taskService.delete(null, taskKey);\n-    }\n-\n-    public List<TaskTO> list(final String type) {\n-        return taskService.search(new TaskQuery.Builder(TaskType.valueOf(type)).build()).getResult();\n-    }\n-\n-    public List<TaskTO> listPropagationTask() {\n-        return taskService.search(new TaskQuery.Builder(TaskType.PROPAGATION).build()).getResult();\n-    }\n-\n-    public void deleteExecution(final String executionKey) {\n-        taskService.deleteExecution(executionKey);\n-    }\n-\n-    public ExecTO execute(final String executionKey, final boolean dryRun) {\n-        return taskService.execute(\n-                new ExecuteQuery.Builder().key(executionKey).dryRun(dryRun).build());\n-    }\n-}"},{"sha":"eb53ab1b4218a2b5ea2e5a6b372f0a6e5daa4a39","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/AbstractUserCommand.java","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,34 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n-import org.apache.syncope.client.cli.commands.resource.ResourceSyncopeOperations;\n-\n-public abstract class AbstractUserCommand {\n-\n-    protected final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n-    \n-    protected final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n-    \n-    protected final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n-\n-    protected final UserResultManager userResultManager = new UserResultManager();\n-\n-}"},{"sha":"35688c7a5efdb38ed9133b291690a0b89b86403e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"removed","additions":0,"deletions":129,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,129 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"user\")\n-public class UserCommand extends AbstractCommand {\n-\n-    private final UserResultManager userResultManager = new UserResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(UserOptions.HELP.getOptionName());\n-        }\n-\n-        switch (UserOptions.fromName(input.getOption())) {\n-            case DETAILS:\n-                new UserDetails(input).details();\n-                break;\n-            case LIST:\n-                new UserList(input).list();\n-                break;\n-            case READ_BY_KEY:\n-                new UserReadByUserKey(input).read();\n-                break;\n-            case READ_BY_USERNAME:\n-                new UserReadByUsername(input).read();\n-                break;\n-            case SEARCH_BY_ATTRIBUTE:\n-                new UserSearchByAttribute(input).search();\n-                break;\n-            case SEARCH_BY_ROLE:\n-                new UserSearchByRole(input).search();\n-                break;\n-            case SEARCH_BY_RESOURCE:\n-                new UserSearchByResource(input).search();\n-                break;\n-            case DELETE:\n-                new UserDelete(input).delete();\n-                break;\n-            case DELETE_ALL:\n-                new UserDeleteAll(input).delete();\n-                break;\n-            case DELETE_BY_ATTRIBUTE:\n-                new UserDeleteByAttribute(input).delete();\n-                break;\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-            default:\n-                userResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return userResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    public enum UserOptions {\n-\n-        HELP(\"--help\"),\n-        DETAILS(\"--details\"),\n-        LIST(\"--list\"),\n-        READ_BY_KEY(\"--read-by-userkey\"),\n-        READ_BY_USERNAME(\"--read-by-username\"),\n-        SEARCH_BY_ATTRIBUTE(\"--search-by-attribute\"),\n-        SEARCH_BY_ROLE(\"--search-by-role\"),\n-        SEARCH_BY_RESOURCE(\"--search-by-resource\"),\n-        DELETE(\"--delete\"),\n-        DELETE_ALL(\"--delete-all\"),\n-        DELETE_BY_ATTRIBUTE(\"--delete-by-attribute\");\n-\n-        private final String optionName;\n-\n-        UserOptions(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static UserOptions fromName(final String name) {\n-            UserOptions optionToReturn = HELP;\n-            for (final UserOptions option : UserOptions.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final UserOptions value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"a5278d643898c337065395ad5fdcbfa43bbe549f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDelete.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserDelete extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserDelete.class);\n-\n-    private static final String DELETE_HELP_MESSAGE = \"user --delete {USER-KEY} {USER-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public UserDelete(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() >= 1) {\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    userSyncopeOperations.delete(parameter);\n-                    userResultManager.deletedMessage(\"User\", parameter);\n-                } catch (final WebServiceException | SyncopeClientException ex) {\n-                    LOG.error(\"Error deleting user\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        userResultManager.notFoundError(\"User\", parameter);\n-                    } else {\n-                        userResultManager.genericError(ex.getMessage());\n-                    }\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error deleting user\", ex);\n-                    userResultManager.numberFormatException(\"user\", parameter);\n-                }\n-            }\n-        } else {\n-            userResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e54812dbe2145dac16f8c24c7dfb6154c2b12496","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteAll.java","status":"removed","additions":0,"deletions":114,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,114 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Scanner;\n-import java.util.concurrent.atomic.AtomicReference;\n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserDeleteAll extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserDeleteAll.class);\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private static final String DELETE_ALL_HELP_MESSAGE = \"user --delete-all {REALM}\";\n-\n-    private final Input input;\n-\n-    public UserDeleteAll(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() == 1) {\n-            try {\n-                final Scanner scanIn = new Scanner(System.in);\n-                System.out.println(\n-                        \"\\nRunning this operation you will delete all the realm users managed by Syncope, \"\n-                        + \"are you sure? [yes/no]\");\n-                final String answer = scanIn.nextLine();\n-                if (\"yes\".equalsIgnoreCase(answer)) {\n-                    System.out.println(\"\\nUsername:\");\n-                    final String username = scanIn.nextLine();\n-                    System.out.println(\"\\nPassword:\");\n-                    final String password = scanIn.nextLine();\n-                    if (userSyncopeOperations.auth(username, password)) {\n-                        System.out.println(\"Deleting process started\");\n-                        final String realm = input.firstParameter();\n-                        if (!realmSyncopeOperations.exists(realm)) {\n-                            userResultManager.notFoundError(\"Realm\", realm);\n-                            return;\n-                        }\n-                        List<BatchResponseItem> results = userSyncopeOperations.deleteAll(realm);\n-\n-                        Map<String, String> failedUsers = new HashMap<>();\n-                        AtomicReference<Integer> deletedUsers = new AtomicReference<>(0);\n-\n-                        results.forEach(item -> {\n-                            if (item.getStatus() == Response.Status.OK.getStatusCode()) {\n-                                deletedUsers.getAndSet(deletedUsers.get() + 1);\n-                            } else {\n-                                try {\n-                                    ProvisioningResult<UserTO> user = MAPPER.readValue(item.getContent(),\n-                                            new TypeReference<ProvisioningResult<UserTO>>() {\n-                                    });\n-                                    failedUsers.put(\n-                                            user.getEntity().getUsername(),\n-                                            item.getHeaders().get(RESTHeaders.ERROR_CODE).toString());\n-                                } catch (IOException ioe) {\n-                                    LOG.error(\"Error reading {}\", item.getContent(), ioe);\n-                                }\n-                            }\n-                        });\n-\n-                        userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n-                        if (!failedUsers.isEmpty()) {\n-                            userResultManager.printFailedUsers(failedUsers);\n-                        }\n-                    } else {\n-                        userResultManager.genericError(\"Authentication error\");\n-                    }\n-                } else if (\"no\".equalsIgnoreCase(answer)) {\n-                    userResultManager.genericError(\"Delete all operation skipped\");\n-                } else {\n-                    userResultManager.genericError(\"Invalid parameter, please use [yes/no]\");\n-                }\n-            } catch (Exception e) {\n-                LOG.error(\"Error deleting user\", e);\n-                userResultManager.genericError(e.getMessage());\n-            }\n-        } else {\n-            userResultManager.commandOptionError(DELETE_ALL_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"f5e735e3185cd600afd23d3509cdbf966d330f2d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteByAttribute.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.concurrent.atomic.AtomicReference;\n-import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserDeleteByAttribute extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserDeleteByAttribute.class);\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private static final String SEARCH_HELP_MESSAGE = \"user --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\";\n-\n-    private final Input input;\n-\n-    public UserDeleteByAttribute(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void delete() {\n-        if (input.parameterNumber() == 2) {\n-            String realm = input.firstParameter();\n-            Pair<String, String> pairParameter = Input.toPairParameter(input.secondParameter());\n-            try {\n-                if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.notFoundError(\"Realm\", realm);\n-                    return;\n-                }\n-                List<BatchResponseItem> results = userSyncopeOperations.deleteByAttribute(\n-                        realm, pairParameter.getKey(), pairParameter.getValue());\n-\n-                Map<String, String> failedUsers = new HashMap<>();\n-                AtomicReference<Integer> deletedUsers = new AtomicReference<>(0);\n-\n-                results.forEach(item -> {\n-                    if (item.getStatus() == Response.Status.OK.getStatusCode()) {\n-                        deletedUsers.getAndSet(deletedUsers.get() + 1);\n-                    } else {\n-                        try {\n-                            ProvisioningResult<UserTO> user = MAPPER.readValue(item.getContent(),\n-                                    new TypeReference<ProvisioningResult<UserTO>>() {\n-                            });\n-                            failedUsers.put(\n-                                    user.getEntity().getUsername(),\n-                                    item.getHeaders().get(RESTHeaders.ERROR_CODE).toString());\n-                        } catch (IOException ioe) {\n-                            LOG.error(\"Error reading {}\", item.getContent(), ioe);\n-                        }\n-                    }\n-                });\n-\n-                userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n-                if (!failedUsers.isEmpty()) {\n-                    userResultManager.printFailedUsers(failedUsers);\n-                }\n-            } catch (Exception e) {\n-                LOG.error(\"Error searching user\", e);\n-                if (e.getMessage().startsWith(\"NotFound\")) {\n-                    userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n-                } else {\n-                    userResultManager.genericError(e.getMessage());\n-                }\n-            }\n-        } else {\n-            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"ade6cb35d2d6a9d2f2241f8d38b699e70de0f648","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDetails.java","status":"removed","additions":0,"deletions":78,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,78 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserDetails extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserDetails.class);\n-\n-    private static final String COUNT_HELP_MESSAGE = \"user --details\";\n-\n-    private final Input input;\n-\n-    public UserDetails(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void details() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Map<String, String> details = new LinkedHashMap<>();\n-                final List<UserTO> users = userSyncopeOperations.list();\n-                int withoutResource = 0;\n-                int withoutRole = 0;\n-                int activeStatus = 0;\n-                int suspendedStatus = 0;\n-                for (final UserTO userTO : users) {\n-                    if (userTO.getResources().isEmpty()) {\n-                        withoutResource++;\n-                    }\n-                    if (userTO.getRoles().isEmpty()) {\n-                        withoutRole++;\n-                    }\n-                    if (\"active\".equalsIgnoreCase(userTO.getStatus())) {\n-                        activeStatus++;\n-                    } else if (\"suspended\".equalsIgnoreCase(userTO.getStatus())) {\n-                        suspendedStatus++;\n-                    }\n-                }\n-                details.put(\"Total number\", String.valueOf(users.size()));\n-                details.put(\"Active\", String.valueOf(activeStatus));\n-                details.put(\"Suspended\", String.valueOf(suspendedStatus));\n-                details.put(\"Without resources\", String.valueOf(withoutResource));\n-                details.put(\"Without roles\", String.valueOf(withoutRole));\n-                userResultManager.printDetails(details);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error reading details about user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            userResultManager.unnecessaryParameters(input.listParameters(), COUNT_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"d83b7345ec18044b405f6e6caa53d3783eac883e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserList.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.Scanner;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserList extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserList.class);\n-\n-    private static final String LIST_HELP_MESSAGE = \"user --list\";\n-\n-    private final Input input;\n-\n-    public UserList(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void list() {\n-        if (input.parameterNumber() == 0) {\n-            try {\n-                final Scanner scanIn = new Scanner(System.in);\n-                System.out.println(\n-                        \"\\nThis operation might produce very large output. Do you want to continue? [yes/no]\");\n-                final String answer = scanIn.nextLine();\n-                if (\"yes\".equalsIgnoreCase(answer)) {\n-                    userResultManager.printUsers(userSyncopeOperations.list());\n-                } else if (\"no\".equalsIgnoreCase(answer)) {\n-                    userResultManager.genericError(\"List operation skipped\");\n-                } else {\n-                    userResultManager.genericError(\"Invalid parameter, please use [yes/no]\");\n-                }\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error listing user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            userResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"d848037a8fc8434e36843796c3361bfa4a935278","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserReadByUserKey.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUserKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUserKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUserKey.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserReadByUserKey extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserReadByUserKey.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"user --read-by-userkey {USER-KEY} {USER-KEY} [...]\";\n-\n-    private final Input input;\n-\n-    public UserReadByUserKey(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<UserTO> userTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    userTOs.add(userSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading user\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        userResultManager.notFoundError(\"User\", parameter);\n-                    } else {\n-                        userResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading user\", ex);\n-                    userResultManager.numberFormatException(\"user\", parameter);\n-                }\n-            }\n-            userResultManager.printUsers(userTOs);\n-        } else {\n-            userResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e09ec83a84a49d32b3a4cd59124b748b1e34df76","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserReadByUsername.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserReadByUsername extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserReadByUsername.class);\n-\n-    private static final String READ_HELP_MESSAGE = \"user --read-by-username {USERNAME} {USERNAME} [...]\";\n-\n-    private final Input input;\n-\n-    public UserReadByUsername(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void read() {\n-        if (input.getParameters().length >= 1) {\n-            final List<UserTO> userTOs = new ArrayList<>();\n-            for (final String parameter : input.getParameters()) {\n-                try {\n-                    userTOs.add(userSyncopeOperations.read(parameter));\n-                } catch (final SyncopeClientException | WebServiceException ex) {\n-                    LOG.error(\"Error reading user\", ex);\n-                    if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        userResultManager.notFoundError(\"User\", parameter);\n-                    } else {\n-                        userResultManager.genericError(ex.getMessage());\n-                    }\n-                    break;\n-                } catch (final NumberFormatException ex) {\n-                    LOG.error(\"Error reading user\", ex);\n-                    userResultManager.numberFormatException(\"user\", parameter);\n-                }\n-            }\n-            userResultManager.printUsers(userTOs);\n-        } else {\n-            userResultManager.commandOptionError(READ_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"6f82c0321ec9db416d514b9f65849c9c3941ac72","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"removed","additions":0,"deletions":112,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,112 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-import org.apache.syncope.client.cli.view.Table;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.RelationshipTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-\n-public class UserResultManager extends CommonsResultManager {\n-\n-    public void printUsers(final List<UserTO> userTOs) {\n-        System.out.println(\"\");\n-        userTOs.forEach(userTO -> {\n-            printUser(userTO);\n-        });\n-    }\n-\n-    private void printUser(final UserTO userTO) {\n-        System.out.println(\" > USER KEY: \" + userTO.getKey());\n-        System.out.println(\"    username: \" + userTO.getUsername());\n-        System.out.println(\"    realm: \" + userTO.getRealm());\n-        System.out.println(\"    status: \" + userTO.getStatus());\n-        System.out.println(\"    RESOURCES: \");\n-        printResource(userTO.getResources());\n-        System.out.println(\"    ROLES: \");\n-        printRole(userTO.getRoles());\n-        System.out.println(\"    creation date: \" + userTO.getCreationDate());\n-        System.out.println(\"    change password date: \" + userTO.getChangePwdDate());\n-        System.out.println(\"    PLAIN ATTRIBUTES: \");\n-        printAttributes(userTO.getPlainAttrs());\n-        System.out.println(\"    DERIVED ATTRIBUTES: \");\n-        printAttributes(userTO.getDerAttrs());\n-        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n-        printAttributes(userTO.getVirAttrs());\n-        System.out.println(\"    creator: \" + userTO.getCreator());\n-        System.out.println(\"    last modifier: \" + userTO.getLastModifier());\n-        System.out.println(\"    token: \" + userTO.getToken());\n-        System.out.println(\"    token expiration time: \" + userTO.getTokenExpireTime());\n-        System.out.println(\"    last change: \" + userTO.getLastChangeDate());\n-        System.out.println(\"    last login: \" + userTO.getLastLoginDate());\n-        System.out.println(\"    failed logins: \" + userTO.getFailedLogins());\n-        System.out.println(\"RELATIONSHIPS:\");\n-        printRelationships(userTO.getRelationships());\n-        System.out.println(\"    security question key: \" + userTO.getSecurityQuestion());\n-        System.out.println(\"    security question answer key: \" + userTO.getSecurityAnswer());\n-        System.out.println(\"\");\n-    }\n-\n-    private void printResource(final Set<String> resources) {\n-        resources.forEach(resource -> {\n-            System.out.println(\"       - \" + resource);\n-        });\n-    }\n-\n-    private void printRole(final List<String> roles) {\n-        roles.forEach((role) -> {\n-            System.out.println(\"       - \" + role);\n-        });\n-    }\n-\n-    private void printAttributes(final Set<Attr> derAttrs) {\n-        derAttrs.forEach(attrTO -> {\n-            final StringBuilder attributeSentence = new StringBuilder();\n-            attributeSentence.append(\"       \")\n-                    .append(attrTO.getSchema())\n-                    .append(\": \")\n-                    .append(attrTO.getValues());\n-            System.out.println(attributeSentence);\n-        });\n-    }\n-\n-    private void printRelationships(final List<RelationshipTO> relationshipTOs) {\n-        relationshipTOs.forEach(relationshipTO -> {\n-            System.out.println(\"       type: \" + relationshipTO.getType());\n-        });\n-    }\n-\n-    public void printFailedUsers(final Map<String, String> users) {\n-        Table.TableBuilder tableBuilder =\n-                new Table.TableBuilder(\"Users not deleted\").header(\"user key\").header(\"cause\");\n-        users.forEach((key, value) -> {\n-            tableBuilder.rowValues(Arrays.asList(key, value));\n-        });\n-        tableBuilder.build().print();\n-    }\n-\n-    public void printDetails(final Map<String, String> details) {\n-        printDetails(\"users details\", details);\n-    }\n-}"},{"sha":"92dc52b575f2d5ba39d448054dd716286bcf3f72","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"removed","additions":0,"deletions":76,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,76 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserSearchByAttribute extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByAttribute.class);\n-\n-    private static final String SEARCH_HELP_MESSAGE = \"user --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\";\n-\n-    private final Input input;\n-\n-    public UserSearchByAttribute(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void search() {\n-        if (input.parameterNumber() == 2) {\n-            String realm = input.firstParameter();\n-            Pair<String, String> pairParameter = Input.toPairParameter(input.secondParameter());\n-            try {\n-                if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.genericMessage(\n-                            \"Operation performed on root realm because \" + realm + \" does not exists\");\n-                }\n-                List<UserTO> userTOs =\n-                        userSyncopeOperations.searchByAttribute(\n-                                realm, pairParameter.getKey(), pairParameter.getValue());\n-                if (userTOs.isEmpty()) {\n-                    userResultManager.genericMessage(\"No users found with attribute \"\n-                            + pairParameter.getKey() + \" and value \" + pairParameter.getValue());\n-                } else {\n-                    userResultManager.printUsers(userTOs);\n-                }\n-            } catch (WebServiceException | SyncopeClientException ex) {\n-                LOG.error(\"Error searching user\", ex);\n-                if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n-                } else {\n-                    userResultManager.genericError(ex.getMessage());\n-                }\n-            } catch (IllegalArgumentException ex) {\n-                LOG.error(\"Error searching user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n-            }\n-        } else {\n-            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"83af7edbdb02ee87908009eeadb47b6aa574b88b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByResource.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,70 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserSearchByResource extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByResource.class);\n-\n-    private static final String SEARCH_HELP_MESSAGE = \"user --search-by-resource {REALM} {RESOURCE-KEY}\";\n-\n-    private final Input input;\n-\n-    public UserSearchByResource(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void search() {\n-        if (input.parameterNumber() == 2) {\n-            final String realm = input.firstParameter();\n-            final String resource = input.secondParameter();\n-            try {\n-                List<UserTO> userTOs = null;\n-                if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n-                            + \" does not exists\");\n-                }\n-                if (!resourceSyncopeOperations.exists(resource)) {\n-                    userResultManager.notFoundError(\"Resource\", resource);\n-                } else {\n-                    userTOs = userSyncopeOperations.searchByResource(realm, resource);\n-                }\n-                if (userTOs == null || userTOs.isEmpty()) {\n-                    userResultManager.genericMessage(\"No users has \" + resource + \" assigned\");\n-                } else {\n-                    userResultManager.printUsers(userTOs);\n-                }\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n-                LOG.error(\"Error searching user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n-            }\n-        } else {\n-            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"10c760ec8f52f5352e2dac01c533a68ce375dbf6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByRole.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.util.List;\n-import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserSearchByRole extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByRole.class);\n-\n-    private static final String SEARCH_HELP_MESSAGE = \"user --search-by-role {REALM} {ROLE-KEY}\";\n-\n-    private final Input input;\n-\n-    public UserSearchByRole(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void search() {\n-        if (input.parameterNumber() == 2) {\n-            final String realm = input.firstParameter();\n-            final String role = input.secondParameter();\n-            try {\n-                List<UserTO> userTOs;\n-                if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.genericMessage(\"Operation performed on root realm because \"\n-                            + realm + \" does not exists\");\n-                }\n-                userTOs = userSyncopeOperations.searchByRole(realm, input.secondParameter());\n-                if (userTOs == null || userTOs.isEmpty()) {\n-                    userResultManager.genericMessage(\"No users has \" + role + \" assigned\");\n-                } else {\n-                    userResultManager.printUsers(userTOs);\n-                }\n-            } catch (final WebServiceException | SyncopeClientException ex) {\n-                LOG.error(\"Error searching user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n-            }\n-        } else {\n-            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"2c712ba28e108e0657af6c2ebad7c9ace9eddff6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"removed","additions":0,"deletions":126,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,126 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.client.lib.batch.BatchRequest;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.batch.BatchPayloadParser;\n-import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n-import org.apache.syncope.common.rest.api.beans.AnyQuery;\n-import org.apache.syncope.common.rest.api.service.UserService;\n-\n-public class UserSyncopeOperations {\n-\n-    private static final int PAGE_SIZE = 100;\n-\n-    private final UserService userService = SyncopeServices.get(UserService.class);\n-\n-    public boolean auth(final String username, final String password) {\n-        try {\n-            SyncopeServices.testUsernameAndPassword(username, password);\n-            return true;\n-        } catch (final Exception e) {\n-            return false;\n-        }\n-    }\n-\n-    public List<UserTO> searchByRole(final String realm, final String role) {\n-        return search(new AnyQuery.Builder().realm(realm).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(role).query()).build());\n-    }\n-\n-    public List<UserTO> searchByResource(final String realm, final String resource) {\n-        return search(new AnyQuery.Builder().realm(realm).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().hasResources(resource).query()).build());\n-    }\n-\n-    public List<UserTO> searchByAttribute(final String realm, final String attributeName, final String attributeValue) {\n-        return search(new AnyQuery.Builder().realm(realm).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue).query()).\n-                build());\n-    }\n-\n-    public List<UserTO> list() {\n-        return search(new AnyQuery());\n-    }\n-\n-    private List<UserTO> search(final AnyQuery query) {\n-        query.setPage(0);\n-        query.setSize(0);\n-        int count = userService.search(query).getTotalCount();\n-\n-        List<UserTO> result = new ArrayList<>();\n-\n-        query.setSize(PAGE_SIZE);\n-        for (int page = 1; page <= (count / PAGE_SIZE) + 1; page++) {\n-            query.setPage(page);\n-\n-            result.addAll(userService.search(query).getResult());\n-        }\n-\n-        return result;\n-    }\n-\n-    public UserTO read(final String userKey) {\n-        return userService.read(userKey);\n-    }\n-\n-    public void delete(final String userKey) {\n-        userService.delete(userKey);\n-    }\n-\n-    public List<BatchResponseItem> deleteByAttribute(\n-            final String realm, final String attributeName, final String attributeValue) throws IOException {\n-\n-        return batchDelete(new AnyQuery.Builder().realm(realm).fiql(\n-                SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue).query()).\n-                build());\n-    }\n-\n-    public List<BatchResponseItem> deleteAll(final String realm) throws IOException {\n-        return batchDelete(new AnyQuery.Builder().realm(realm).details(false).build());\n-    }\n-\n-    private List<BatchResponseItem> batchDelete(final AnyQuery query) throws IOException {\n-        query.setPage(0);\n-        query.setSize(0);\n-        int count = userService.search(query).getTotalCount();\n-\n-        BatchRequest batchRequest = SyncopeServices.batch();\n-        UserService batchUserService = batchRequest.getService(UserService.class);\n-\n-        query.setSize(PAGE_SIZE);\n-        for (int page = 1; page <= (count / PAGE_SIZE) + 1; page++) {\n-            query.setPage(page);\n-\n-            userService.search(query).getResult().forEach(user -> batchUserService.delete(user.getKey()));\n-        }\n-\n-        Response response = batchRequest.commit().getResponse();\n-        return BatchPayloadParser.parse(\n-                (InputStream) response.getEntity(), response.getMediaType(), new BatchResponseItem());\n-    }\n-}"},{"sha":"b1b6db410fda19661aec8b4ea0075fb275eee429","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/CommandUtils.java","status":"removed","additions":0,"deletions":90,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,90 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.CommandClassScanner;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-public final class CommandUtils {\n-\n-    public static AbstractCommand fromArgs(final String arg)\n-            throws NoSuchMethodException, InstantiationException, IllegalAccessException,\n-            IllegalArgumentException, InvocationTargetException {\n-\n-        final CommandClassScanner ccs = new CommandClassScanner();\n-        final List<Class<? extends AbstractCommand>> commands = ccs.getComponentClasses();\n-\n-        Class<? extends AbstractCommand> commandClass = null;\n-        for (final Class<? extends AbstractCommand> cmd : commands) {\n-            if (arg.equals(cmd.getAnnotation(Command.class).name())) {\n-                commandClass = cmd;\n-            }\n-        }\n-\n-        if (commandClass == null) {\n-            throw new IllegalArgumentException(arg + \" is not a valid command\");\n-        }\n-\n-        return commandClass.getDeclaredConstructor().newInstance();\n-    }\n-\n-    public static List<AbstractCommand> commands()\n-            throws InstantiationException, IllegalAccessException, IllegalArgumentException,\n-            NoSuchMethodException, InvocationTargetException {\n-\n-        final List<AbstractCommand> listCommands = new ArrayList<>();\n-\n-        final CommandClassScanner ccs = new CommandClassScanner();\n-        final List<Class<? extends AbstractCommand>> commands = ccs.getComponentClasses();\n-\n-        for (final Class<? extends AbstractCommand> cmd : commands) {\n-            if (cmd == null) {\n-                throw new IllegalArgumentException();\n-            }\n-            listCommands.add(cmd.getDeclaredConstructor().newInstance());\n-        }\n-\n-        return listCommands;\n-    }\n-\n-    public static String[] fromEnumToArray(final Class<? extends Enum<?>> enumClass) {\n-        final String[] types = new String[enumClass.getFields().length];\n-        for (int i = 0; i < enumClass.getFields().length; i++) {\n-            types[i] = enumClass.getFields()[i].getName();\n-        }\n-        return types;\n-    }\n-\n-    public static String helpMessage(final String command, final List<String> options) {\n-        final StringBuilder helpMessageBuilder = new StringBuilder(String.format(\"%nUsage: %s [options]%n\", command));\n-        helpMessageBuilder.append(\"  Options:\\n\");\n-        options.forEach(option -> {\n-            helpMessageBuilder.append(\"    \").append(option).append(\"\\n\");\n-        });\n-        return helpMessageBuilder.toString();\n-    }\n-\n-    private CommandUtils() {\n-\n-    }\n-}"},{"sha":"5c8eb6802b609d06597e74325c606a9f03621670","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/FileSystemUtils.java","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,48 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.PrintWriter;\n-import java.io.UnsupportedEncodingException;\n-\n-public final class FileSystemUtils {\n-\n-    public static void createFileWith(final String filePath, final String content)\n-            throws FileNotFoundException, UnsupportedEncodingException {\n-        try (PrintWriter writer = new PrintWriter(filePath, \"UTF-8\")) {\n-            writer.println(content);\n-        }\n-    }\n-\n-    public static boolean canWrite(final String path) {\n-        final File installationDirectory = new File(path);\n-        return installationDirectory.canWrite();\n-    }\n-\n-    public static boolean exists(final String path) {\n-        final File installationDirectory = new File(path);\n-        return installationDirectory.exists();\n-    }\n-\n-    private FileSystemUtils() {\n-\n-    }\n-}"},{"sha":"0f31de00e59df4204ec88216b338cf2a94f5a723","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import org.jasypt.util.text.BasicTextEncryptor;\n-\n-public final class JasyptUtils {\n-\n-    private static final String JASYPT_KEY = \"Ka9s8yadaisj9mud87ssdaifansy\";\n-\n-    private final BasicTextEncryptor textEncryptor;\n-\n-    private static JasyptUtils JASYPT_UTILS;\n-\n-    public static JasyptUtils get() {\n-        if (JASYPT_UTILS == null) {\n-            JASYPT_UTILS = new JasyptUtils();\n-        }\n-        return JASYPT_UTILS;\n-    }\n-\n-    private JasyptUtils() {\n-        textEncryptor = new BasicTextEncryptor();\n-        textEncryptor.setPassword(JASYPT_KEY);\n-    }\n-\n-    public String encrypt(final String password) {\n-        return textEncryptor.encrypt(password);\n-    }\n-\n-    public String decrypt(final String encryptedString) {\n-        return textEncryptor.decrypt(encryptedString);\n-    }\n-}"},{"sha":"93754d683f23202c6962c6ddcef6f70d74691a18","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/XMLUtils.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import java.io.File;\n-import java.io.InputStream;\n-import javax.xml.XMLConstants;\n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.dom.DOMSource;\n-import javax.xml.transform.stream.StreamResult;\n-import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n-import org.w3c.dom.ls.DOMImplementationLS;\n-import org.w3c.dom.ls.LSInput;\n-import org.w3c.dom.ls.LSParser;\n-\n-public final class XMLUtils {\n-\n-    public static void createXMLFile(final InputStream sis, final String filePath) throws Exception {\n-        DOMImplementationRegistry reg = DOMImplementationRegistry.newInstance();\n-        DOMImplementationLS domImpl = (DOMImplementationLS) reg.getDOMImplementation(\"LS\");\n-        LSInput lsinput = domImpl.createLSInput();\n-        lsinput.setByteStream(sis);\n-        LSParser parser = domImpl.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS, null);\n-\n-        TransformerFactory tf = TransformerFactory.newInstance();\n-        tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\n-\n-        tf.newTransformer().transform(new DOMSource(parser.parse(lsinput)), new StreamResult(new File(filePath)));\n-    }\n-\n-    private XMLUtils() {\n-        // private constructor for static utility class\n-    }\n-}"},{"sha":"a45d3935ab797fbf0c421044d1aaf693303dc043","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/view/Messages.java","status":"removed","additions":0,"deletions":107,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,107 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.view;\n-\n-import java.util.List;\n-import java.util.ResourceBundle;\n-\n-public final class Messages {\n-\n-    private static final ResourceBundle MESSAGES = ResourceBundle.getBundle(\"messages\");\n-\n-    private static final String OPTION_COMMAND_MESSAGE_TEMPLATE = \"%n - Usage: %s%n\";\n-\n-    private static final String CREATED_MESSAGE_TEMPLATE = \"%s %s successfully created\";\n-\n-    private static final String UPDATED_MESSAGE_TEMPLATE = \"%s %s successfully updated\";\n-\n-    private static final String DELETED_MESSAGE_TEMPLATE = \"%s %s successfully deleted\";\n-\n-    private static final String DOESNT_EXIST_MESSAGE_TEMPLATE = \"%s %s doesn't exist\";\n-\n-    private static final String TYPE_NOT_VALID_MESSAGE_TEMPLATE = \"%s isn't a valid %s type, try with: %s\";\n-\n-    private static final String ID_NOT_NUMBER_MESSAGE_TEMPLATE = \"Error reading %s. It isn't a valid %s \"\n-            + \"id because it isn't a long value\";\n-\n-    private static final String NOT_BOOLEAN_MESSAGE_TEMPLATE = \"Error reading %s. It isn't a valid %s \"\n-            + \"value because it isn't a boolean value\";\n-\n-    private static final String DEFAULT_MESSAGE_TEMPLATE = \"%s is not a valid option. %n\\b %s\";\n-\n-    public static void printCommandOptionMessage(final String message) {\n-        System.out.println(String.format(OPTION_COMMAND_MESSAGE_TEMPLATE, message));\n-    }\n-\n-    public static void printMessage(final String... messages) {\n-        final StringBuilder messageBuilder = new StringBuilder(\"\\n\");\n-        for (final String message : messages) {\n-            messageBuilder.append(\" - \").append(message).append(\"\\n\");\n-        }\n-        System.out.println(messageBuilder.toString());\n-    }\n-\n-    public static void printNofFoundMessage(final String what, final String key) {\n-        printMessage(String.format(DOESNT_EXIST_MESSAGE_TEMPLATE, what, key));\n-    }\n-\n-    public static void printCreatedMessage(final String what, final String key) {\n-        printMessage(String.format(CREATED_MESSAGE_TEMPLATE, what, key));\n-    }\n-\n-    public static void printUpdatedMessage(final String what, final String key) {\n-        printMessage(String.format(UPDATED_MESSAGE_TEMPLATE, what, key));\n-    }\n-\n-    public static void printDeletedMessage(final String what, final String key) {\n-        printMessage(String.format(DELETED_MESSAGE_TEMPLATE, what, key));\n-    }\n-\n-    public static void printIdNotNumberDeletedMessage(final String what, final String key) {\n-        printMessage(String.format(ID_NOT_NUMBER_MESSAGE_TEMPLATE, key, what));\n-    }\n-\n-    public static void printNotBooleanDeletedMessage(final String what, final String key) {\n-        printMessage(String.format(NOT_BOOLEAN_MESSAGE_TEMPLATE, key, what));\n-    }\n-\n-    public static void printTypeNotValidMessage(final String what, final String key, final String[] types) {\n-        final StringBuilder typesBuilder = new StringBuilder();\n-        for (final String type : types) {\n-            typesBuilder.append(\"\\n     *** \").append(type);\n-        }\n-        printMessage(String.format(TYPE_NOT_VALID_MESSAGE_TEMPLATE, key, what, typesBuilder.toString()));\n-    }\n-\n-    public static void printDefaultMessage(final String option, final String helpMessage) {\n-        printMessage(String.format(DEFAULT_MESSAGE_TEMPLATE, option, helpMessage));\n-    }\n-\n-    public static void printUnnecessaryParameters(final List<String> parameters, final String helpMessage) {\n-        printMessage(\"Unnecessary parameter: \" + parameters, \"Usage: \" + helpMessage);\n-    }\n-\n-    public static String commandHelpMessage(final String name) {\n-        return MESSAGES.getString(name + \".help.message\");\n-    }\n-\n-    private Messages() {\n-\n-    }\n-}"},{"sha":"9264798c7aa8a17b368d98d2dc9090ff032828c3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/view/Table.java","status":"removed","additions":0,"deletions":197,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,197 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.view;\n-\n-import java.util.ArrayList;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.commons.lang3.StringUtils;\n-\n-public final class Table {\n-\n-    private static final String TABLE_TITLE_FORMAT = \"#  %s  #%n\";\n-\n-    private final String title;\n-\n-    private final List<String> headers;\n-\n-    private final Set<List<String>> values;\n-\n-    private int columnsNumber;\n-\n-    private Object[] tmpValuesArray;\n-\n-    private String tableContentFormat;\n-\n-    private int[] columnsSize;\n-\n-    private int tableWidth;\n-\n-    private String border = \"\";\n-\n-    private Table(\n-            final String title,\n-            final List<String> headers,\n-            final Set<List<String>> values) {\n-        this.title = title;\n-        this.headers = headers;\n-        this.values = values;\n-    }\n-\n-    public void print() {\n-        System.out.println(\"\");\n-        columnsNumber = headers.size();\n-        tmpValuesArray = new String[columnsNumber];\n-\n-        buildTableContentFormat();\n-        initializeColumnSize();\n-        countTableWidth();\n-\n-        printBorder();\n-        printTitle();\n-        printBorder();\n-        printHeaders();\n-        printBorder();\n-        printeContent();\n-        printBorder();\n-        System.out.println(\"\");\n-    }\n-\n-    private void buildTableContentFormat() {\n-        final StringBuilder tableContentFormatBuilder = new StringBuilder(\"#\");\n-        for (int s = 0; s < columnsNumber; s++) {\n-            tableContentFormatBuilder.append(\"  %s  #\");\n-        }\n-        tableContentFormatBuilder.append(\"\\n\");\n-        tableContentFormat = tableContentFormatBuilder.toString();\n-    }\n-\n-    private void initializeColumnSize() {\n-        columnsSize = new int[columnsNumber];\n-        for (int j = 0; j < columnsSize.length; j++) {\n-            columnsSize[j] = 0;\n-        }\n-\n-        for (int i = 0; i < columnsSize.length; i++) {\n-            if (headers.get(i).length() > columnsSize[i]) {\n-                columnsSize[i] = headers.get(i).length();\n-            }\n-        }\n-\n-        values.forEach(value -> {\n-            for (int j = 0; j < columnsSize.length; j++) {\n-                if (value.get(j) != null && value.get(j).length() > columnsSize[j]) {\n-                    columnsSize[j] = value.get(j).length();\n-                }\n-            }\n-        });\n-    }\n-\n-    private void countTableWidth() {\n-        int maxColumnValueSum = 0;\n-        for (int j = 0; j < columnsSize.length; j++) {\n-            maxColumnValueSum = maxColumnValueSum + columnsSize[j];\n-        }\n-\n-        tableWidth = maxColumnValueSum + (columnsNumber * (2 + 2)) + columnsNumber + 1;\n-    }\n-\n-    private void printBorder() {\n-        if (border.isEmpty()) {\n-            final StringBuilder borderBuilder = new StringBuilder();\n-            for (int j = 0; j < tableWidth; j++) {\n-                borderBuilder.append(\"#\");\n-            }\n-            border = borderBuilder.toString();\n-        }\n-\n-        System.out.println(border);\n-    }\n-\n-    private void printTitle() {\n-        System.out.format(TABLE_TITLE_FORMAT, StringUtils.center(\" \", tableWidth - 6));\n-        System.out.format(TABLE_TITLE_FORMAT, StringUtils.center(title.toUpperCase(), tableWidth - 6));\n-        System.out.format(TABLE_TITLE_FORMAT, StringUtils.center(\" \", tableWidth - 6));\n-    }\n-\n-    private void printHeaders() {\n-        printColumnSpace();\n-\n-        for (int h = 0; h < columnsNumber; h++) {\n-            tmpValuesArray[h] = StringUtils.center(headers.get(h).toUpperCase(), columnsSize[h]);\n-        }\n-\n-        System.out.format(tableContentFormat, tmpValuesArray);\n-\n-        printColumnSpace();\n-    }\n-\n-    private void printeContent() {\n-        printColumnSpace();\n-\n-        values.forEach(value -> {\n-            for (int j = 0; j < columnsNumber; j++) {\n-                if (value.get(j) == null) {\n-                    tmpValuesArray[j] = StringUtils.center(\"null\", columnsSize[j]);\n-                } else {\n-                    tmpValuesArray[j] = StringUtils.center(value.get(j), columnsSize[j]);\n-                }\n-            }\n-            System.out.format(tableContentFormat, tmpValuesArray);\n-        });\n-\n-        printColumnSpace();\n-    }\n-\n-    private void printColumnSpace() {\n-        for (int h = 0; h < columnsNumber; h++) {\n-            tmpValuesArray[h] = StringUtils.center(\" \", columnsSize[h]);\n-        }\n-\n-        System.out.format(tableContentFormat, tmpValuesArray);\n-    }\n-\n-    public static class TableBuilder {\n-\n-        private final List<String> headers = new ArrayList<>();\n-\n-        private final Set<List<String>> values = new LinkedHashSet<>();\n-\n-        private final String title;\n-\n-        public TableBuilder(final String title) {\n-            this.title = title;\n-        }\n-\n-        public TableBuilder header(final String header) {\n-            headers.add(header);\n-            return this;\n-        }\n-\n-        public TableBuilder rowValues(final List<String> row) {\n-            values.add(row);\n-            return this;\n-        }\n-\n-        public Table build() {\n-            return new Table(title, headers, values);\n-        }\n-    }\n-}"},{"sha":"76b93fa554c4e320bd0d88b3db66693df00c6429","filename":"client/cli/src/main/resources/configuration.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-cli.installation.directory.linux=./\n-cli.installation.directory.windows=.\\\\\n-cli.installation.filename=cli.properties"},{"sha":"1a94ac3ede2fb8b756c4cb98d0096a12e1326920","filename":"client/cli/src/main/resources/log4j2.xml","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,82 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<configuration status=\"WARN\">\n-\n-  <appenders>\n-\n-    <RollingRandomAccessFile name=\"lib\" fileName=\"${log.directory}/cli-lib.log\"\n-                             filePattern=\"${log.directory}/cli-lib-%d{yyyy-MM-dd}.log.gz\"\n-                             immediateFlush=\"false\" append=\"true\">\n-      <PatternLayout>\n-        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-      </PatternLayout>\n-      <Policies>\n-        <TimeBasedTriggeringPolicy/>\n-        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n-      </Policies>\n-    </RollingRandomAccessFile>\n-    \n-    <RollingRandomAccessFile name=\"cli\" fileName=\"${log.directory}/cli.log\"\n-                             filePattern=\"${log.directory}/cli-%d{yyyy-MM-dd}.log.gz\"\n-                             immediateFlush=\"false\" append=\"true\">\n-      <PatternLayout>\n-        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-      </PatternLayout>\n-      <Policies>\n-        <TimeBasedTriggeringPolicy/>\n-        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n-      </Policies>\n-    </RollingRandomAccessFile>\n-    \n-  </appenders>\n-\n-  <loggers>\n-\n-    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"DEBUG\">\n-      <appender-ref ref=\"lib\"/>\n-    </asyncLogger>\n-\n-    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"lib\"/>\n-    </asyncLogger>\n-\n-    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"lib\"/>\n-    </asyncLogger>\n-\n-    <asyncLogger name=\"org.apache.syncope.client.cli\" additivity=\"false\" level=\"DEBUG\">\n-      <appender-ref ref=\"cli\"/>\n-    </asyncLogger>\n-\n-    <asyncLogger name=\"org.apache.syncope.client\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"lib\"/>\n-    </asyncLogger>\n-\n-    <asyncLogger name=\"org.apache.syncope.common\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"lib\"/>\n-    </asyncLogger>\n-\n-    <root level=\"DEBUG\">\n-      <appender-ref ref=\"cli\"/>\n-    </root>\n-\n-  </loggers>\n-\n-</configuration>"},{"sha":"7bd62fa2766f6055a6c84f8ca5468a3246d77f2e","filename":"client/cli/src/main/resources/messages.properties","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,34 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-anyObject.help.message=\\nUsage: any [options]\\n   Options:\\n     --help \\n     --details \\n     --list \\n     --read \\n        Syntax: --read {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\\n     --read-attr-by-schema-type {ANY_OBJECT-KEY} {SCHEMA-TYPE}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n     --read-attr-by-schema {ANY_OBJECT-KEY} {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n     --delete \\n        Syntax: --delete {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\\n\n-configuration.help.message=\\nUsage: configuration [options]\\n  Options:\\n    --help \\n    --get \\n    --read \\n       Syntax: --read {CONF-NAME} {CONF-NAME} [...] \\n    --update \\n       Syntax: --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\\n    --delete \\n       Syntax: --delete {CONF-NAME} {CONF-NAME} [...]\\n    --export \\n       Syntax: --export {WHERE-DIR}\\n\n-connector.help.message=\\nUsage: connector [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --list-bundles \\n    --list-configuration-properties\\n       Syntax: --list-configuration-properties {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\\n    --read \\n       Syntax: --read {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\\n    --delete \\n       Syntax: --delete {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\\n\n-domain.help.message=\\nUsage: domain [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --delete \\n       Syntax: --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\\n\n-entitlement.help.message=\\nUsage: entitlement [options]\\n  Options:\\n    --help \\n    --list\\n    --list-role\\n       Syntax: --list-role {ENTITLEMENT-NAME}\\n    --read-by-username\\n       Syntax: --read-by-username {USERNAME}\\n    --read-by-userkey\\n       Syntax: --read-by-userkey {USER-KEY}\\n    --search-by-role\\n       Syntax: --search-by-role {ROLE-KEY}\\n\n-group.help.message=\\nUsage: group [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {GROUP-KEY} {GROUP-KEY} [...]\\n    --read-attr-by-schema-type {GROUP-KEY} {SCHEMA-TYPE}\\n       Schema type: PLAIN / DERIVED / VIRTUAL\\n    --read-attr-by-schema {GROUP-KEY} {SCHEMA-TYPE} {SCHEMA-KEY}\\n       Schema type: PLAIN / DERIVED / VIRTUAL\\n    --delete \\n       Syntax: --delete {GROUP-KEY} {GROUP-KEY} [...]\\n\n-logger.help.message=\\nUsage: logger [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {LOG-NAME} {LOG-NAME} [...]\\n    --update \\n       Syntax: --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\\n    --update-all \\n       Syntax: --update-all {LOG-LEVEL} \\n    --create \\n       Syntax: --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\\n    --delete \\n       Syntax: --delete {LOG-NAME} {LOG-NAME} [...]\\n\n-notification.help.message=\\nUsage: notification [options]\\n  Options:\\n    --help \\n    --list \\n    --read \\n       Syntax: --read {NOTIFICATION-KEY} \\n    --delete \\n       Syntax: --delete {NOTIFICATION-KEY}\\n\n-policy.help.message=\\nUsage: policy [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n       Syntax: --list-policy {POLICY-TYPE} \\n          Policy type: ACCOUNT / PASSWORD / PULL / PUSH\\n    --read \\n       Syntax: --read {POLICY-TYPE} {POLICY-KEY}\\n   Policy type:  ACCOUNT / PASSWORD / PULL / PUSH\\n    --delete \\n       Syntax: --delete {POLICY-KEY} {POLICY-KEY} [...]\\n\n-question.help.message=\\nUsage: question [options]\\n  Options:\\n    --help \\n    --list \\n    --read \\n       Syntax: --read {QUESTION-KEY} {QUESTION-KEY} [...]\\n    --delete \\n       Syntax: --delete {QUESTION-KEY} {QUESTION-KEY} [...]\\n\n-realm.help.message=\\nUsage: realm [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n\n-report.help.message=\\nUsage: report [options]\\n  Options:\\n    --help \\n    --details\\n    --list \\n    --list-jobs \\n    --read \\n       Syntax: --read {REPORT-KEY} {REPORT-KEY} [...] \\n    --delete \\n       Syntax: --delete {REPORT-KEY} {REPORT-KEY} [...]\\n    --execute \\n       Syntax: --execute {REPORT-KEY} \\n    --delete-execution \\n       Syntax: --delete-execution {EXECUTION-KEY} {EXECUTION-KEY} [...]\\n    --export-execution-result \\n       Syntax: --export-execution-result {EXECUTION-KEY} {EXECUTION-KEY} [...] {FORMAT}\\n          Format: CSV / HTML / PDF / XML / RTF\\n\n-resource.help.message=\\nUsage: resource [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {RESOURCE-KEY} {RESOURCE-KEY} [...]\\n    --delete \\n       Syntax: --delete {RESOURCE-KEY} {RESOURCE-KEY} [...]\\n\n-role.help.message=\\nUsage: role [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {ROLE-KEY} {ROLE-KEY} [...]\\n    --delete \\n       Syntax: --delete {ROLE-KEY} {ROLE-KEY} [...]\\n\n-schema.help.message=\\nUsage: schema [options]\\n  Options:\\n    --help \\n    --details \\n    --list-all\\n    --list-plain\\n    --list-derived\\n    --list-virtual\\n    --read {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n    --delete {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n\n-task.help.message=\\nUsage: task [options]\\n  Options:\\n    --help \\n    --details\\n    --list\\n       Syntax: --list {TASK-TYPE} \\n          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\\n    --list-running-jobs \\n    --list-scheduled-jobs \\n    --read \\n       Syntax: --read {TASK-TYPE} {TASK-KEY}\\n   Task type:  PROPAGATION / NOTIFICATION / SCHEDULED / PULL / PUSH\\n    --delete \\n       Syntax: --delete {TASK-KEY} {TASK-KEY} [...]\\n    --delete-all-prop\\n    --delete-execution \\n       Syntax: --delete-execution {TASK-EXEC-KEY} {TASK-EXEC-KEY} [...]\\n    --execute \\n       Syntax: --execute {TASK-KEY} {DRY-RUN}\\n          Dry run: true / false\\n\n-user.help.message=\\nUsage: user [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --get-user-key\\n       Syntax: --get-user-key {USERNAME}\\n    --get-username\\n       Syntax: --get-username {USER-KEY}\\n    --read-by-userkey \\n       Syntax: --read-by-userkey {USER-KEY} {USER-KEY} [...]\\n    --read-by-username\\n       Syntax: --read-by-username {USERNAME} {USERNAME} [...]\\n    --search-by-attribute \\n       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n    --search-by-role \\n       Syntax: --search-by-role {REALM} {ROLE-KEY}\\n    --search-by-resource \\n       Syntax: --search-by-resource {REALM} {RESOURCE-KEY}\\n    --delete \\n       Syntax: --delete {USER-KEY} {USER-KEY} [...]\\n    --delete-all \\n       Syntax: --delete-all {REALM}\\n    --delete-by-attribute \\n       Syntax: --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n\n-migrate.help.message=\\nUsage: migrate [options]\\n  Options:\\n    --help \\n    --conf {SRC} {DST}\\n        Syncope 1.2.X content.xml SRC absolute path\\n        Syncope 2.0.X *Content.xml DST absolute path\\n"},{"sha":"5236147b326da22e330f2ba0912c5e0bf1d030ef","filename":"client/cli/src/main/resources/syncopeadm.bat","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.bat","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.bat","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.bat?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,27 +0,0 @@\n-@ECHO OFF\n-\n-rem Licensed to the Apache Software Foundation (ASF) under one\n-rem or more contributor license agreements.  See the NOTICE file\n-rem distributed with this work for additional information\n-rem regarding copyright ownership.  The ASF licenses this file\n-rem to you under the Apache License, Version 2.0 (the\n-rem \"License\"); you may not use this file except in compliance\n-rem with the License.  You may obtain a copy of the License at\n-rem\n-rem   http://www.apache.org/licenses/LICENSE-2.0\n-rem\n-rem Unless required by applicable law or agreed to in writing,\n-rem software distributed under the License is distributed on an\n-rem \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-rem KIND, either express or implied.  See the License for the\n-rem specific language governing permissions and limitations\n-rem under the License.\n-\n-setLocal EnableDelayedExpansion\n-set CLASSPATH=\"\n-for /R ./lib %%a in (*.jar) do (\n-  set CLASSPATH=!CLASSPATH!;%%a\n-)\n-set CLASSPATH=!CLASSPATH!\"\n-\n-java -Xms256m -Xmx512m -classpath !CLASSPATH! org.apache.syncope.client.cli.SyncopeAdm %*\n\\ No newline at end of file"},{"sha":"d83e96368af53e9ae929f5ecb2e791c33c6b7546","filename":"client/cli/src/main/resources/syncopeadm.sh","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fsyncopeadm.sh?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,23 +0,0 @@\n-#!/bin/sh\n-\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-LIB=`ls lib`\n-CLASSPATH=lib/`echo $LIB | sed \"s/jar /jar:lib\\//g\"`\n-\n-java -Xms256m -Xmx512m -classpath \"$CLASSPATH\" org.apache.syncope.client.cli.SyncopeAdm \"$@\"\n\\ No newline at end of file"},{"sha":"c75273875b0ec28e24ee9e134d79af8b3e3ade10","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/CommandUtilsTest.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import static org.junit.jupiter.api.Assertions.fail;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-\n-import java.util.List;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.junit.jupiter.api.Test;\n-\n-public class CommandUtilsTest {\n-\n-    @Test\n-    public void fromArgs() throws Exception {\n-        String commandName = \"logger\";\n-        AbstractCommand command = CommandUtils.fromArgs(commandName);\n-        assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n-\n-        String wrongCommandName = \"wrong\";\n-        try {\n-            CommandUtils.fromArgs(wrongCommandName);\n-            fail(wrongCommandName + \" isn't a right command, why you are here?\");\n-        } catch (IllegalArgumentException ex) {\n-            assertEquals(IllegalArgumentException.class, ex.getClass());\n-            assertEquals(wrongCommandName + \" is not a valid command\", ex.getMessage());\n-        }\n-    }\n-\n-    @Test\n-    public void commands() throws Exception {\n-        List<AbstractCommand> commands = CommandUtils.commands();\n-        assertFalse(commands.isEmpty());\n-        assertEquals(20, commands.size());\n-    }\n-}"},{"sha":"241dbdac74f85c43ebb29c5b0db330afc4e347ad","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/JasyptUtilsTest.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,35 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.util;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n-import org.junit.jupiter.api.Test;\n-\n-public class JasyptUtilsTest {\n-\n-    @Test\n-    public void encryption() {\n-        String password = \"password\";\n-        JasyptUtils jasyptUtils = JasyptUtils.get();\n-        String encPassword = jasyptUtils.encrypt(password);\n-        String decPassword = jasyptUtils.decrypt(encPassword);\n-        assertEquals(password, decPassword);\n-    }\n-}"},{"sha":"b8da090e53700235cf910cd2dfab4d61d7a4e0fc","filename":"client/cli/src/test/resources/log4j2.xml","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<configuration status=\"WARN\" shutdownHook=\"disable\">\n-  <appenders>\n-    <RollingRandomAccessFile name=\"main\" fileName=\"${log.directory}/cli-test.log\"\n-                                 filePattern=\"${log.directory}/cli-test-%d{yyyy-MM-dd}.log.gz\"\n-                                 immediateFlush=\"false\" append=\"true\">\n-      <PatternLayout>\n-        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-      </PatternLayout>\n-      <Policies>\n-        <TimeBasedTriggeringPolicy/>\n-        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n-      </Policies>\n-    </RollingRandomAccessFile>\n-  </appenders>\n-\n-  <loggers>    \n-    <root level=\"ERROR\">\n-      <appenderRef ref=\"main\"/>\n-    </root>\n-  </loggers>\n-</configuration>"},{"sha":"02e6488b57671e5cc3b06297ccf7a7bd65685cfc","filename":"client/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -79,7 +79,6 @@ under the License.\n   <modules>\n     <module>idrepo</module>\n     <module>idm</module>\n-    <module>cli</module>\n     <module>enduser</module>\n   </modules>\n "},{"sha":"acdbde8b31721297527b7a273b6a5e1adfea33c7","filename":"fit/core-reference/pom.xml","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -38,7 +38,6 @@ under the License.\n     <jdbcdriver.artifactId>h2</jdbcdriver.artifactId>\n     \n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n-    <cli-test.dir>${project.build.directory}/cli-test</cli-test.dir>\n   </properties>\n \n   <dependencies>\n@@ -125,12 +124,6 @@ under the License.\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.client</groupId>\n-      <artifactId>syncope-client-cli</artifactId>\n-      <version>${project.version}</version>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-console</artifactId>\n@@ -243,14 +236,11 @@ under the License.\n         <inherited>true</inherited>\n         <executions>\n           <execution>\n-            <id>setupCSV_CLI</id>\n+            <id>setupCSV</id>\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n                 <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\" />\n-\n-                <mkdir dir=\"${cli-test.dir}\" />\n-                <unzip src=\"${basedir}/../../client/cli/target/syncope-client-cli-${project.version}.zip\" dest=\"${cli-test.dir}\" />\n               </target>\n             </configuration>\n             <goals>"},{"sha":"87e98407cfab4f5d2c31d8b81e418c4d3eed5789","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"removed","additions":0,"deletions":284,"changes":284,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,284 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.cli;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.charset.StandardCharsets;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Properties;\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang3.SystemUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.commands.connector.ConnectorCommand;\n-import org.apache.syncope.client.cli.commands.entitlement.EntitlementCommand;\n-import org.apache.syncope.client.cli.commands.group.GroupCommand;\n-import org.apache.syncope.client.cli.commands.install.InstallCommand;\n-import org.apache.syncope.client.cli.commands.logger.LoggerCommand;\n-import org.apache.syncope.client.cli.commands.report.ReportCommand;\n-import org.apache.syncope.client.cli.commands.role.RoleCommand;\n-import org.apache.syncope.client.cli.commands.user.UserCommand;\n-import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-\n-public class CLIITCase extends AbstractITCase {\n-\n-    private static final String SCRIPT_FILENAME = \"syncopeadm\";\n-\n-    private static ProcessBuilder PROCESS_BUILDER;\n-\n-    @BeforeAll\n-    public static void install() {\n-        Properties props = new Properties();\n-        Process process = null;\n-        try (InputStream propStream = CLIITCase.class.getResourceAsStream(\"/cli-test.properties\")) {\n-            props.load(propStream);\n-\n-            File workDir = new File(props.getProperty(\"cli-work.dir\"));\n-            PROCESS_BUILDER = new ProcessBuilder().directory(workDir);\n-\n-            PROCESS_BUILDER.command(getCommand(\n-                    new InstallCommand().getClass().getAnnotation(Command.class).name(),\n-                    InstallCommand.Options.SETUP_DEBUG.getOptionName()));\n-            process = PROCESS_BUILDER.start();\n-            process.waitFor();\n-\n-            File cliPropertiesFile = new File(workDir + File.separator + \"cli.properties\");\n-            assertTrue(cliPropertiesFile.exists());\n-        } catch (IOException | InterruptedException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    private static String[] getCommand(final String... arguments) {\n-        List<String> command = new ArrayList<>();\n-\n-        if (SystemUtils.IS_OS_WINDOWS) {\n-            command.add(\"cmd.exe\");\n-            command.add(\"/C\");\n-            command.add(SCRIPT_FILENAME + \".bat\");\n-        } else {\n-            command.add(\"/bin/bash\");\n-            command.add(SCRIPT_FILENAME + \".sh\");\n-        }\n-\n-        command.addAll(Arrays.asList(arguments));\n-\n-        return command.toArray(new String[command.size()]);\n-    }\n-\n-    @Test\n-    public void runScriptWithoutOptions() {\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand());\n-            process = PROCESS_BUILDER.start();\n-\n-            String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8).\n-                    replaceAll(\"(?m)^\\\\s*$[\\n\\r]{1,}\", \"\");\n-            assertTrue(result.startsWith(\"Usage: Main [options]\"));\n-            assertTrue(result.contains(\n-                    new EntitlementCommand().getClass().getAnnotation(Command.class).name()\n-                    + \" \"\n-                    + EntitlementCommand.EntitlementOptions.HELP.getOptionName()));\n-            assertTrue(result.contains(\n-                    new GroupCommand().getClass().getAnnotation(Command.class).name()\n-                    + \" \"\n-                    + GroupCommand.GroupOptions.HELP.getOptionName()));\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void entitlementCount() {\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new EntitlementCommand().getClass().getAnnotation(Command.class).name(),\n-                    EntitlementCommand.EntitlementOptions.LIST.getOptionName()));\n-            process = PROCESS_BUILDER.start();\n-\n-            long entitlements = IOUtils.readLines(process.getInputStream(), StandardCharsets.UTF_8).\n-                    stream().filter(line -> line.startsWith(\"-\")).count();\n-            assertEquals(syncopeService.platform().getEntitlements().size(), entitlements);\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void connectorCount() {\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new ConnectorCommand().getClass().getAnnotation(Command.class).name(),\n-                    ConnectorCommand.ConnectorOptions.LIST_BUNDLES.getOptionName()));\n-            process = PROCESS_BUILDER.start();\n-\n-            long bundles = IOUtils.readLines(process.getInputStream(), StandardCharsets.UTF_8).\n-                    stream().filter(line -> line.startsWith(\" > BUNDLE NAME:\")).count();\n-            assertEquals(connectorService.getBundles(null).size(), bundles);\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void userRead() {\n-        final String userKey1 = \"1417acbe-cbf6-4277-9372-e75e04f97000\";\n-        final String userKey2 = \"74cd8ece-715a-44a4-a736-e17b46c4e7e6\";\n-        final String userKey3 = \"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\";\n-        final String userKey4 = \"c9b2dec2-00a7-4855-97c0-d854842b4b24\";\n-        final String userKey5 = \"823074dc-d280-436d-a7dd-07399fae48ec\";\n-        Process process1 = null;\n-        Process process2 = null;\n-        Process process3 = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n-                    UserCommand.UserOptions.READ_BY_KEY.getOptionName(),\n-                    userKey1));\n-            process1 = PROCESS_BUILDER.start();\n-            String result = IOUtils.toString(process1.getInputStream(), StandardCharsets.UTF_8);\n-            assertTrue(result.contains(\"username: \" + userService.read(userKey1).getUsername()));\n-\n-            PROCESS_BUILDER.command(getCommand(\n-                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n-                    UserCommand.UserOptions.READ_BY_KEY.getOptionName(),\n-                    userKey1, userKey2, userKey3, userKey4, userKey5));\n-            process2 = PROCESS_BUILDER.start();\n-            long users = IOUtils.readLines(process2.getInputStream(), StandardCharsets.UTF_8).\n-                    stream().filter(line -> line.startsWith(\" > USER KEY:\")).count();\n-            assertEquals(5, users);\n-\n-            PROCESS_BUILDER.command(getCommand(\n-                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n-                    UserCommand.UserOptions.READ_BY_KEY.getOptionName(),\n-                    userKey1, userKey2, userKey3, userKey4, userKey5));\n-            process3 = PROCESS_BUILDER.start();\n-            String result3 = IOUtils.toString(process3.getInputStream(), StandardCharsets.UTF_8);\n-            assertTrue(\n-                    result3.contains(\"username: \" + userService.read(userKey1).getUsername())\n-                    && result3.contains(\"username: \" + userService.read(userKey2).getUsername())\n-                    && result3.contains(\"username: \" + userService.read(userKey3).getUsername())\n-                    && result3.contains(\"username: \" + userService.read(userKey4).getUsername())\n-                    && result3.contains(\"username: \" + userService.read(userKey5).getUsername()));\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process1 != null) {\n-                process1.destroy();\n-            }\n-            if (process2 != null) {\n-                process2.destroy();\n-            }\n-            if (process3 != null) {\n-                process3.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void roleRead() {\n-        final String roleId = \"Search for realm evenTwo\";\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new RoleCommand().getClass().getAnnotation(Command.class).name(),\n-                    RoleCommand.RoleOptions.READ.getOptionName(),\n-                    roleId));\n-            process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n-            assertTrue(result.contains(roleService.read(roleId).getEntitlements().iterator().next()));\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void reportNotExists() {\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new ReportCommand().getClass().getAnnotation(Command.class).name(),\n-                    ReportCommand.ReportOptions.READ.getOptionName(),\n-                    \"72\"));\n-            process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n-            assertTrue(result.contains(\"- Report 72 doesn't exist\"));\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void lastStatements() {\n-        Process process = null;\n-        try {\n-            PROCESS_BUILDER.command(getCommand(\n-                    new LoggerCommand().getClass().getAnnotation(Command.class).name(),\n-                    LoggerCommand.LoggerOptions.LAST_STATEMENTS.getOptionName(),\n-                    \"connid\"));\n-            process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n-            assertTrue(result.contains(\"\\\"level\\\" : \\\"INFO\\\",\"));\n-            assertTrue(result.contains(\"\\\"loggerName\\\" :\"\n-                    + \" \\\"org.apache.syncope.core.provisioning.api.ConnIdBundleManager\\\"\"));\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        } finally {\n-            if (process != null) {\n-                process.destroy();\n-            }\n-        }\n-    }\n-}"},{"sha":"3cc61fcbe02fee8669ecd1201f1ab37d66dd20cc","filename":"fit/core-reference/src/test/resources/cli-test.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcli-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcli-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcli-test.properties?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-cli-work.dir=${cli-test.dir}/syncope-client-cli-${project.version}"},{"sha":"272f1f2358987edaabe9a79baacad85e1533435e","filename":"src/main/asciidoc/getting-started/introduction.adoc","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fintroduction.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fintroduction.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fintroduction.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -99,9 +99,6 @@ for delegated administration.\n \n *_End-user UI_* is the web-based application for self-registration, self-service and password reset.\n \n-*_CLI_* is the command-line application for interacting with Apache Syncope from scripts, particularly useful for \n-system administrators.\n-\n *_Core_* is the central component, providing all services offered by Apache Syncope. +\n It exposes a fully-compliant https://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services[JAX-RS 2.0^] \n https://en.wikipedia.org/wiki/Representational_state_transfer[RESTful^] interface which enables third-party applications,\n@@ -129,7 +126,7 @@ changes: MySQL, MariaDB, PostgreSQL, Oracle and MS SQL Server are fully supporte\n implementation of delegated administration scenarios.\n \n Third-party applications are provided full access to IdM services by leveraging the REST interface, either via the \n-Java Client Library (the basis of Admin UI, End-user UI and CLI) or plain HTTP calls.\n+Java Client Library (the basis of Admin UI and End-user UI) or plain HTTP calls.\n \n .ConnId\n ****"},{"sha":"95f972ab9ea51be86a647ed55f9347c3c2c001ba","filename":"src/main/asciidoc/getting-started/obtain.adoc","status":"modified","additions":0,"deletions":171,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -722,177 +722,6 @@ You can configure any LDAP client (such as http://jxplorer.org/[JXplorer^], for\n \n |===\n \n-=== CLI\n-\n-The command-line interface (CLI) client is an utility tool meant for interacting with Apache Syncope deployments from\n-shell scripts.\n-\n-Once downloaded and uncompressed, you will find a `lib` directory and two scripts: `syncopeadm.sh` and `syncopeadm.bat`,\n-which will be used depending on the operating system.\n-\n-The installation process creates `cli.properties`, which contains all the required information to invoke the Apache \n-Syncope REST API services.\n-The file content looks like the following:\n-\n-....\n-syncope.rest.services=http://localhost:9080/syncope/rest\n-syncope.admin.user=admin\n-syncope.admin.password=QePSFVTnzwQowM4ohhaUYcE6aW47MVZ/\n-....\n-\n-where:\n-\n-syncope.rest.services::\n-    the base URL where the Apache Syncope REST API services are listening;\n-syncope.admin.user::\n-    the username which will be used to invoke the Syncope APIs;\n-syncope.admin.password::\n-    the password for the admin user configured above.\n-\n-As shown above, the password value is encrypted for security reasons.\n-\n-[discrete]\n-===== Help message\n-[source,bash]\n-----\n-Usage: install [options]\n-  Options:\n-    --help \n-    --setup\n-    --setup-debug\n-----\n-\n-[[cli-installation]]\n-==== Installation\n-After the file is unzipped you can start with CLI client using the `syncopeadm` file.\n-If you have tried to run a CLI command before the installation process, the script will return\n-[source]\n---\n- - Error: It seems you need to first setup the CLI client. Run install --setup.\n---\n-\n-So, as suggested, you have to run the install command to use the CLI:\n-[source]\n---\n-$ ./syncopeadm.sh install --setup\n---\n-\n-A successful result will be:\n-[source,bash,subs=\"verbatim,attributes\"]\n-----\n-\n-You are running: install --setup \n-\n-###############################################\n-#                                             #\n-# Welcome to Syncope CLI installation process #\n-#                                             #\n-###############################################\n-\n-Path to config files of Syncope CLI client will be: ./\n-- File system permission checked\n-\n-Syncope server schema [http/https]: http\n-Syncope server hostname [e.g. localhost]: localhost\n-Syncope server port [e.g. 8080]: 9080\n-Syncope server rest context [e.g. /syncope/rest/]: /syncope/rest\n-Syncope admin user: admin\n-Syncope admin password: password\n-Installation parameters checked on Syncope core version: {docVersion}\n-\n-###############################################\n-#                                             #\n-#           Installation successful           #\n-#     now you can use Syncope CLI client      #\n-#                                             #\n-###############################################\n-\n-----\n-\n-During the installation you have to provide:\n-\n-Syncope server schema::\n-    the http protocol used by the Apache Syncope core, it will be http or https;\n-Syncope server hostname::\n-    the hostname where the core is deployed;\n-Syncope server port::\n-    the port where the services are listening;\n-Syncope server rest context::\n-    the context where the rest services are deployed (/syncope/rest is the default);\n-Syncope admin user::\n-    the user with the permission to call the Syncope APIs;\n-Syncope admin password::\n-    the user password.\n-\n-==== Troubleshooting\n-Various error messages are possible on installation. Here are some sample error messages:\n-\n-===== Syncope unreachable (or wrong address):\n-\n-[source]\n---\n-\n-Provided address: http://localhost:9080/syncope/rest\n-\n-###############################################\n-#                                             #\n-#       Provided address is unreachable!      #\n-#         Check it and if it is wrong         #\n-#        START the installation AGAIN!        #\n-#                                             #\n-###############################################\n-\n---\n-\n-===== Authentication failed:\n-\n-[source]\n---\n-\n-###############################################\n-#                                             #\n-#   Username or password provided are wrong   #\n-#        START the installation AGAIN!        #\n-#                                             #\n-###############################################\n-\n---\n-\n-As the message suggests you have to start the installation again when this error occurs.\n-\n-\n-==== Debug\n-To work with the debug environment provided by Syncope we added a particular installation option for it.\n-It enough to run the script with the --setup-debug option\n-[source]\n---\n-$ ./syncopeadm.sh install --setup-debug\n---\n-[source,bash,subs=\"verbatim,attributes\"]\n-----\n-\n-You are running: install --setup-debug \n-\n-###############################################\n-#                                             #\n-# Welcome to Syncope CLI installation process #\n-#                                             #\n-###############################################\n-\n-Path to config files of Syncope CLI client will be: ./\n-- File system permission checked\n-\n-Installation parameters checked on Syncope core version: {docVersion}\n-\n-###############################################\n-#                                             #\n-#           Installation successful           #\n-#     now you can use Syncope CLI client      #\n-#                                             #\n-###############################################\n-\n-----\n-\n === Eclipse IDE Plugin\n \n The Eclipse IDE plugin allows remote management of notification e-mail and report templates."},{"sha":"600a5a4dcac29d9f5b89fb8526bd79bc3edc8643","filename":"src/main/asciidoc/reference-guide/architecture/architecture.adoc","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Farchitecture%2Farchitecture.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Farchitecture%2Farchitecture.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Farchitecture%2Farchitecture.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -143,20 +143,10 @@ E.g.\n \n To reset to the default mode, it is enough to click again on the specific icon.\n \n-[[cli-component]]\n-=== CLI\n-\n-The command-line interface (CLI) client is an utility tool meant for interacting with Apache Syncope deployments from \n-shell scripts.\n-\n-The communication between CLI and Core is exclusively REST-based.\n-\n-More details are available in the dedicated <<cli,usage>> section.\n-\n === Third Party Applications\n \n Third-party applications are provided full access to IdM services by leveraging the REST interface, either via the \n-Java <<client-library,Client Library>> (the basis of Admin UI, End-user UI and CLI) or plain HTTP calls.\n+Java <<client-library,Client Library>> (the basis of Admin UI and End-user UI) or plain HTTP calls.\n \n ==== Eclipse IDE Plugin\n "},{"sha":"a4554c70d8223f01aab715609ceda03c829cb659","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/anyObject.adoc","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2FanyObject.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2FanyObject.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2FanyObject.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,55 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Any command\n-This command works with <<users-groups-and-any-objects,any objects>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: any [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --read \n-       Syntax: --read {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\n-    --read-attr-by-schema-type {ANY_OBJECT-KEY} {SCHEMA-TYPE}\n-       Schema type: PLAIN / DERIVED / VIRTUAL\n-    --read-attr-by-schema {ANY_OBJECT-KEY} {SCHEMA-TYPE} {SCHEMA-NAME}\n-       Schema type: PLAIN / DERIVED / VIRTUAL\n-    --delete \n-       Syntax: --delete {ANY_OBJECT-KEY} {ANY_OBJECT-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with the amount of available Any Objects and some additional information.\n---list::\n-Running the command with this option you will see the list of the Any Objects.\n---read::\n-The option to read the any object passed as input.\n---read-attr-by-schema-type::\n-The option to read the specified attribute type of the any object passed as input.\n---read-attr-by-schema::\n-The option to read the specified attribute name of the any object passed as input.\n---delete::\n-The option to delete a specified any object."},{"sha":"157323f6657b608a97aa3803716096f693173a10","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/cli.adoc","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fcli.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fcli.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fcli.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,60 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-=== CLI\n-\n-[NOTE]\n-Examples in this document are executed on GNU / Linux with _debug environment_.\n-\n-==== Commands\n-\n-include::schema.adoc[]\n-\n-include::connector.adoc[]\n-\n-include::resource.adoc[]\n-\n-include::user.adoc[]\n-\n-include::group.adoc[]\n-\n-include::anyObject.adoc[]\n-\n-include::role.adoc[]\n-\n-include::realm.adoc[]\n-\n-include::question.adoc[]\n-\n-include::configuration.adoc[]\n-\n-include::logger.adoc[]\n-\n-include::task.adoc[]\n-\n-include::notification.adoc[]\n-\n-include::report.adoc[]\n-\n-include::policy.adoc[]\n-\n-include::info.adoc[]\n-\n-include::entitlement.adoc[]\n-\n-include::domain.adoc[]"},{"sha":"0d47e354fc9bc17070b3d53dbf30cb8d31cb9780","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/configuration.adoc","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconfiguration.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconfiguration.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconfiguration.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,53 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Configuration command\n-This command works with <<configuration-parameters,configuration parameters>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: configuration [options]\n-  Options:\n-    --help \n-    --get \n-    --read \n-       Syntax: --read {CONF-NAME} {CONF-NAME} [...] \n-    --update \n-       Syntax: --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\n-    --delete \n-       Syntax: --delete {CONF-NAME} {CONF-NAME} [...]\n-    --export \n-       Syntax: --export {WHERE-DIR}\n-\n-----\n-\n-[discrete]\n-====== Options\n-\n---get::\n-This get option shows a table with the Syncope configuration.\n---read::\n-The option to read the value of specified configuration attributes.\n---update::\n-The option to update a value of specified configuration attributes.\n---delete::\n-The option to delete specified configuration attributes.\n---export::\n-The option to export the Syncope configuration to a specified directory."},{"sha":"fd81414524d5b36627123ff94b76ebd8a8d1d5b7","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/connector.adoc","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconnector.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconnector.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fconnector.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,54 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Connector command\n-This command works with <<connector-instance-details,connectors>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: connector [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --list-bundles \n-    --list-configuration-properties\n-       Syntax: --list-configuration-properties {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\n-    --read \n-       Syntax: --read {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\n-    --delete \n-       Syntax: --delete {CONNECTOR-KEY} {CONNECTOR-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about connectors and bundles.\n---list::\n-Running the command with this option you will see the list of connectors with their configuration.\n---list-bundles::\n-Running the command with this option you will see the list of the bundles available in Syncope.\n---list-configuration-properties::\n-This option lists the configuration of specified connectors.\n---read::\n-The option to read all the information of specified connectors.\n---delete::\n-The option to delete a specified connector."},{"sha":"120d88d98086d2919733e5bf191799819b1eb28a","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/domain.adoc","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fdomain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fdomain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fdomain.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,45 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Domain command\n-This command works with <<domains,domains>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: domain [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --delete \n-       Syntax: --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with domain amount.\n-\n---list::\n-Running the command with this option you will see the list of the domains.\n-\n---delete::\n-The option to delete a specified domain."},{"sha":"8c54a67c3a81cf65fc95b67d89988391e6d1e4a4","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/entitlement.adoc","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fentitlement.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fentitlement.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fentitlement.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,53 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-\n-===== Entitlement command\n-This command works with <<entitlements,entitlements>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: entitlement [options]\n-  Options:\n-    --help \n-    --list\n-    --list-role\n-       Syntax: --list-role {ENTITLEMENT-NAME}\n-    --read-by-username\n-       Syntax: --read-by-username {USERNAME}\n-    --read-by-userkey\n-       Syntax: --read-by-userkey {USER-KEY}\n-    --search-by-role\n-       Syntax: --search-by-role {ROLE-KEY}\n-----\n-\n-[discrete]\n-====== Options\n-\n---list::\n-Running the command with this option you will see the list of the entitlements.\n---list-role::\n-Running the command with this option you will see the list of the roles with a certain entitlement.\n---read-by-username::\n-The option to read the entitlements of the username passed as input.\n---read-by-userkey::\n-The option to read the entitlements of the user key passed as input.\n---search-by-role::\n-The option to read the entitlements of a certain role."},{"sha":"38351f161a34d5c4af1b038f59a039407aeaa4c4","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/group.adoc","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fgroup.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fgroup.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fgroup.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,55 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Group command\n-This command works with <<users-groups-and-any-objects,groups>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: group [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --read \n-       Syntax: --read {GROUP-KEY} {GROUP-KEY} [...]\n-    --read-attr-by-schema-type {GROUP-KEY} {SCHEMA-TYPE}\n-       Schema type: PLAIN / DERIVED / VIRTUAL\n-    --read-attr-by-schema {GROUP-KEY} {SCHEMA-TYPE} {SCHEMA-NAME}\n-       Schema type: PLAIN / DERIVED / VIRTUAL\n-    --delete \n-       Syntax: --delete {GROUP-KEY} {GROUP-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with the amount of available Groups and some additional information.\n---list::\n-Running the command with this option you will see the list of the Groups.\n---read::\n-The option to read the group passed as input.\n---read-attr-by-schema-type::\n-The option to read the specified attribute type of the group passed as input.\n---read-attr-by-schema::\n-The option to read the specified attribute name of the group passed as input.\n---delete::\n-The option to delete a specified group."},{"sha":"01e883d21551e479930bbe4ca30b526305ca9bbc","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/info.adoc","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Finfo.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Finfo.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Finfo.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,52 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Info command\n-This command reports general information about the current Apache Syncope deployment.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: info [options]\n-  Options:\n-    --version\n-    --pwd-reset-allowed\n-    --pwd-reset-with-question\n-    --self-reg-allowed\n-    --provisioning-manager-classes\n-    --workflow-adapter-classes\n-    --account-rules-classes\n-    --connid-locations\n-    --reconciliation-filter-builders\n-    --logic-actions\n-    --mail-templates\n-    --mapping-item-transformers\n-    --password-rules\n-    --propagation-actions\n-    --push-actions\n-    --push-correlation-actions\n-    --reportlets\n-    --sync-actions\n-    --sync-correlation-rules\n-    --task-jobs\n-    --validators\n-    --password-generator\n-    --vir-attr-cache\n-    --help\n-----"},{"sha":"236cde995dbcd8c6dee8b2e396b700a5360327ee","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/logger.adoc","status":"removed","additions":0,"deletions":68,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,68 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Logger command\n-This command is meant for tweaking runtime logger configuration.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: logger [options]\n-  Options:\n-    --help \n-    --details\n-    --list-memory-appenders\n-    --last-statements\n-       Syntax: --last-statements {APPENDER-NAME}\n-    --list \n-    --read \n-       Syntax: --read {LOG-NAME} {LOG-NAME} [...]\n-    --update \n-       Syntax: --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\n-    --update-all \n-       Syntax: --update-all {LOG-LEVEL} \n-    --create \n-       Syntax: --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\n-    --delete \n-       Syntax: --delete {LOG-NAME} {LOG-NAME} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about logger configuration.\n---list::\n-Running the command with this option you will see the table of the loggers configuration.\n---list-memory-appenders\n-Running the command with this option you will see the table of the memory appenders, whose last statements can be\n-inspected\n---last-statements\n-The option to get the last statements available for the passed memory appender\n---read::\n-The option to read all the information of specified loggers.\n---update::\n-The option to change the value of the logger passed as input.\n---update-all::\n-This option is especially helpful in production environment when every log is disabled and you need to change them for a \n-while in DEBUG mode.\n---create::\n-The option to add a new logger configuration.\n---delete::\n-The option to delete a specified logger."},{"sha":"5b3744bad85c8b4f259f9200ad06500a78ee6663","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/notification.adoc","status":"removed","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fnotification.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fnotification.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fnotification.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,44 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Notification command\n-This command works with <<notifications,notifications>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: notification [options]\n-  Options:\n-    --help \n-    --list \n-    --read \n-       Syntax: --read {NOTIFICATION-KEY} \n-    --delete \n-       Syntax: --delete {NOTIFICATION-KEY}\n-----\n-\n-[discrete]\n-====== Options\n-\n---list::\n-Running the command with this option you will see the list of notifications with their configuration.\n---read::\n-The option to read all the information of the specified notifications.\n---delete::\n-The option to delete a specified notification."},{"sha":"807957cd5547d330261bf5b86e2198f3194f417a","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/policy.adoc","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fpolicy.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fpolicy.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fpolicy.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,49 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Policy command\n-This command works with <<policies,policies>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: policy [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-       Syntax: --list-policy {POLICY-TYPE} \n-          Policy type: ACCOUNT / PASSWORD / PULL / PUSH\n-    --read \n-       Syntax: --read {POLICY-KEY} {POLICY-KEY} [...]\n-    --delete \n-       Syntax: --delete {POLICY-KEY} {POLICY-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with the amount of policies for each type.\n---list::\n-Running the command with this option you will see the list of the policies.\n---read::\n-The option to read all the information of a specified policy.\n---delete::\n-The option to delete a specified policy.\n\\ No newline at end of file"},{"sha":"329823062a1704c9f6a57b8541b0cac319d8aa62","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/question.adoc","status":"removed","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fquestion.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fquestion.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fquestion.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,44 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Question command\n-This command works with security questions for use with <<password-reset,password reset>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: question [options]\n-  Options:\n-    --help \n-    --list \n-    --read \n-       Syntax: --read {QUESTION-KEY} {QUESTION-KEY} [...]\n-    --delete \n-       Syntax: --delete {QUESTION-KEY} {QUESTION-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---list::\n-Running the command with this option you will see the list of questions with their content.\n---read::\n-The option to read all the information of specified questions.\n---delete::\n-The option to delete a specified question."},{"sha":"e6bff7464f5d69f894ea324f2b29d71a307fb8a5","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/realm.adoc","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frealm.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frealm.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frealm.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,39 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Realm command\n-This command works with <<realms,realms>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: realm [options]\n-  Options:\n-    --help \n-    --details \n-    --list\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with the amount of the available realms.\n---list::\n-Running the command with this option you will see the list of the realms.\n\\ No newline at end of file"},{"sha":"4f21cca48de0b5381456876b6750a02282ca37bd","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/report.adoc","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Freport.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Freport.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Freport.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,67 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Report command\n-This command works with <<reports,reports>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: report [options]\n-  Options:\n-    --help \n-    --details\n-    --list \n-    --list-jobs \n-    --read \n-       Syntax: --read {REPORT-KEY} {REPORT-KEY} [...] \n-    --delete \n-       Syntax: --delete {REPORT-KEY} {REPORT-KEY} [...]\n-    --execute \n-       Syntax: --execute {REPORT-KEY} \n-    --read-execution \n-       Syntax: --read-execution {EXECUTION-KEY} {EXECUTION-KEY} [...]\n-    --delete-execution \n-       Syntax: --delete-execution {EXECUTION-KEY} {EXECUTION-KEY} [...]\n-    --export-execution-result \n-       Syntax: --export-execution-result {EXECUTION-KEY} {EXECUTION-KEY} [...] {FORMAT}\n-          Format: CSV / HTML / PDF / XML / RTF\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about the reports and their executions.\n---list::\n-Running the command with this option you will see the list of configured reports.\n---list-jobs::\n-Running the command with this option you will see the list of the report executions.\n---read::\n-The option to read all the information of a specified report.\n---read-execution::\n-The option to read all the information of a specified report execution.\n---delete::\n-The option to delete a specified report.\n---delete-execution::\n-The option to delete a specified report execution.\n---execute::\n-The option to run a report.\n---export-execution-result::\n-The option to export an execution in a certain format to see the results."},{"sha":"1db624c520dcafa95bafa97b1d5bc87a987ddb69","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/resource.adoc","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fresource.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fresource.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fresource.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,47 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Resource command\n-This command works with <<external-resource-details,external resources>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: resource [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --read \n-       Syntax: --read {RESOURCE-KEY} {RESOURCE-KEY} [...]\n-    --delete \n-       Syntax: --delete {RESOURCE-KEY} {RESOURCE-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with the amount of available resources.\n---list::\n-Running the command with this option you will see the list of resources.\n---read::\n-The option to read all the information of a specified resource.\n---delete::\n-The option to delete a specified resource."},{"sha":"471c388c8592ea0d76ef7ea638814219d6ca82d1","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/role.adoc","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frole.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frole.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Frole.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,47 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Role command\n-This command works with <<roles,roles>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: role [options]\n-  Options:\n-    --help \n-    --details \n-    --list \n-    --read \n-       Syntax: --read {ROLE-KEY} {ROLE-KEY} [...]\n-    --delete \n-       Syntax: --delete {ROLE-KEY} {ROLE-KEY} [...]\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about the roles.\n---list::\n-Running the command with this option you will see the list of roles with the realm where they are configured and their entitlements.\n---read::\n-The option to read all the information of specified roles.\n---delete::\n-The option to delete specified roles."},{"sha":"3a32c418e0dd248ef3bba49501a7de3696c20d52","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/schema.adoc","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fschema.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fschema.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fschema.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,57 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Schema command\n-This command works with <<schema,schemas>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: schema [options]\n-  Options:\n-    --help \n-    --details \n-    --list-all\n-    --list-plain\n-    --list-derived\n-    --list-virtual\n-    --read {SCHEMA-TYPE} {SCHEMA-KEY}\n-        Schema type: PLAIN / DERIVED / VIRTUAL\n-    --delete {SCHEMA-TYPE} {SCHEMA-KEY}\n-        Schema type: PLAIN / DERIVED / VIRTUAL\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about the schemas and their categories.\n---list-all::\n-Running the command with this option you will see the list of all (PLAIN, DERIVED, VIRTUAL) schemas configured.\n---list-plain::\n-Running the command with this option you will see the list of the plain schemas available in Syncope.\n---list-derived::\n-Running the command with this option you will see the list of the derived schemas available in Syncope with \n-their expressions.\n---list-virtual::\n-Running the command with this option you will see the list of the virtual schemas available in Syncope.\n---read::\n-The option to read all the information of a specified schema.\n---delete::\n-The option to delete a specified schema."},{"sha":"0f12ad8cdf53831fcf516c342f41017ea6306d93","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/task.adoc","status":"removed","additions":0,"deletions":68,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,68 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== Task command\n-This command works with <<tasks,tasks>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: task [options]\n-  Options:\n-    --help \n-    --details\n-    --list\n-       Syntax: --list {TASK-TYPE} \n-          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\n-    --list-running-jobs\n-    --list-scheduled-jobs\n-    --read \n-       Syntax: --read {TASK-KEY} {TASK-KEY} [...]\n-    --read-execution \n-       Syntax: --read-execution {TASK-EXEC-KEY} {TASK-EXEC-KEY} [...]\n-    --delete \n-       Syntax: --delete {TASK-KEY} {TASK-KEY} [...]\n-    --delete-execution \n-       Syntax: --delete-execution {TASK-EXEC-KEY} {TASK-EXEC-KEY} [...]\n-    --execute \n-       Syntax: --execute {TASK-KEY} {DRY-RUN}\n-          Dry run: true / false\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about tasks and jobs.\n---list::\n-Running the command with this option you will see the list of selected tasks type with their information.\n---list-scheduled-jobs::\n-Running the command with this option you will see the list of the actual scheduled jobs.\n---list-running-jobs::\n-Running the command with this option you will see the list of the actual running jobs.\n---read::\n-The option to read all the information of a task.\n---read-execution::\n-The option to read all the information of the specified task execution(s).\n---delete::\n-The option to delete specified tasks.\n---delete-execution::\n-The option to delete the specified task execution(s).\n---execute::\n-The option to execute the specified task."},{"sha":"a880b49064565c3539cd9437bab9e4330c76039d","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/user.adoc","status":"removed","additions":0,"deletions":80,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fuser.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84ef23f404bc5b09935d258c5d89925668737f9e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fuser.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Fuser.adoc?ref=84ef23f404bc5b09935d258c5d89925668737f9e","patch":"@@ -1,80 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-===== User command\n-This command works with <<users-groups-and-any-objects,users>>.\n-\n-[discrete]\n-====== Help message\n-[source,bash]\n-----\n-Usage: user [options]\n-  Options:\n-    --help \n-    --list \n-    --details \n-    --get-user-key\n-       Syntax: --get-user-key {USERNAME} {USERNAME} [...]\n-    --get-username\n-       Syntax: --get-username {USER-KEY} {USER-KEY} [...]\n-    --read-by-username\n-       Syntax: --read-by-username {USERNAME} {USERNAME} [...]\n-    --read-by-userkey\n-       Syntax: --read-by-userkey {USER-KEY} {USER-KEY} [...]\n-    --search-by-attribute\n-       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\n-    --search-by-role\n-       Syntax: --search-by-role {REALM} {ROLE-KEY}\n-    --search-by-resource\n-       Syntax: --search-by-resource {REALM} {RESOURCE-KEY}\n-    --delete\n-       Syntax: --delete {USER-KEY} {USER-KEY} [...]\n-    --delete-all \n-       Syntax: --delete-all {REALM}\n-    --delete-by-attribute\n-       Syntax: --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\n-----\n-\n-[discrete]\n-====== Options\n-\n---details::\n-This option shows a table with some details about the Users.\n---list::\n-Running the command with this option you will see the list of all Users in the environment. However, the system will \n-ask you a confirmation before execution, because as you can imagine this operation might produce a very large output.\n---get-user-key::\n-The option to get the user key starting from a username.\n---get-username::\n-The option to get the username starting from a user key.\n---read-by-userkey::\n-The option to read user information by their user key.\n---read-by-username::\n-The option to read user information by their username.\n---search-by-attribute::\n-The option to search a list of Users with a common attribute.\n---search-by-role::\n-The option to search a list of Users with a specified role.\n---search-by-resource::\n-The option to search a list of Users with a specified resource.\n---delete::\n-The option to delete a specified user.\n---delete-by-attribute::\n-The option to delete the Users with a common attribute.\n---delete-all::\n-The option to delete all Users of the realm passed as input."},{"sha":"ecc48ce0143d10bbfdeffeb5e34561e558399623","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/configurationparameters.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -19,7 +19,7 @@\n \n ==== Configuration Parameters\n \n-Most run-time configuration options are available as parameters and can be tuned either via the admin console, CLI or\n+Most run-time configuration options are available as parameters and can be tuned either via the admin console or\n barely invoking the REST layer through http://curl.haxx.se/[curl^]:\n \n * `password.cipher.algorithm` - which cipher algorithm shall be used for encrypting password values; supported "},{"sha":"61759bd376b6f950e4f1906af7a135902add465d","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/domainsmanagement.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdomainsmanagement.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdomainsmanagement.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdomainsmanagement.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -31,7 +31,7 @@ the `Master` domain, which is always present.\n [CAUTION]\n Adding a new domain requires re-deploying the <<core>> application and restarting the Java EE container.\n \n-Once a new domain is added, the admin credentials for such domain can be set via the admin console, CLI or\n+Once a new domain is added, the admin credentials for such domain can be set via the admin console or\n barely invoking the REST layer through http://curl.haxx.se/[curl^].\n \n [[sample-domain-create]]"},{"sha":"b57eff0880151faefc0e317eea4acd53fe601822","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/importexport.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fimportexport.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fimportexport.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fimportexport.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -64,7 +64,7 @@ lower_case_table_names=1\n \n ===== Export\n \n-This task can be accomplished either via the admin console, CLI or by barely invoking the REST layer through\n+This task can be accomplished either via the admin console or by barely invoking the REST layer through\n http://curl.haxx.se/[curl^], for example:\n \n ...."},{"sha":"c4b9639949be350ebe24f3208ecd16496b2bf610","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/workingwithapachesyncope.adoc","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc?ref=a66bdb9f5fd5ff1bcfb0fc60651fd40e285b800c","patch":"@@ -32,8 +32,6 @@ include::adminconsole/adminconsole.adoc[]\n \n include::enduser.adoc[]\n \n-include::cli/cli.adoc[]\n-\n include::restfulservices.adoc[]\n \n include::customization.adoc[]"}]}