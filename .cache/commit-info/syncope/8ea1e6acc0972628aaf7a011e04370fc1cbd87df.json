{"sha":"8ea1e6acc0972628aaf7a011e04370fc1cbd87df","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhlYTFlNmFjYzA5NzI2MjhhYWY3YTAxMWUwNDM3MGZjMWNiZDg3ZGY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-27T10:17:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-27T10:17:51Z"},"message":"[SYNCOPE-673] Merge from 1_2_X","tree":{"sha":"07436d4cbe19cfaff52457b850ab5378a55b81b9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/07436d4cbe19cfaff52457b850ab5378a55b81b9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8ea1e6acc0972628aaf7a011e04370fc1cbd87df","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ea1e6acc0972628aaf7a011e04370fc1cbd87df","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8ea1e6acc0972628aaf7a011e04370fc1cbd87df","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ea1e6acc0972628aaf7a011e04370fc1cbd87df/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c74d198098eecc3c21e50749de6ec505dc0898a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c74d198098eecc3c21e50749de6ec505dc0898a1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c74d198098eecc3c21e50749de6ec505dc0898a1"},{"sha":"f672ce4925667fd80582878bdd55b9b0d644af0d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f672ce4925667fd80582878bdd55b9b0d644af0d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f672ce4925667fd80582878bdd55b9b0d644af0d"}],"stats":{"total":22,"additions":9,"deletions":13},"files":[{"sha":"1c66f2026f47655ecfa8414829ca832dec03514a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/GroupSyncResultHandlerImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ea1e6acc0972628aaf7a011e04370fc1cbd87df/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ea1e6acc0972628aaf7a011e04370fc1cbd87df/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java?ref=8ea1e6acc0972628aaf7a011e04370fc1cbd87df","patch":"@@ -83,12 +83,9 @@ protected AbstractSubjectTO doCreate(\n         Map.Entry<Long, List<PropagationStatus>> created = groupProvisioningManager.create(groupTO, groupOwnerMap,\n                 Collections.singleton(profile.getTask().getResource().getKey()));\n \n-        groupTO = groupDataBinder.getGroupTO(created.getKey());\n-\n         result.setKey(created.getKey());\n-        result.setName(getName(subjectTO));\n \n-        return groupTO;\n+        return groupDataBinder.getGroupTO(created.getKey());\n     }\n \n     @Override\n@@ -97,7 +94,7 @@ protected AbstractSubjectTO doLink(\n             final ProvisioningResult result,\n             final boolean unlink) {\n \n-        final GroupMod groupMod = new GroupMod();\n+        GroupMod groupMod = new GroupMod();\n         groupMod.setKey(before.getKey());\n \n         if (unlink) {"},{"sha":"d111ac679b0d27e11dd1a4ced9ad846ddb992f5c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/UserSyncResultHandlerImpl.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ea1e6acc0972628aaf7a011e04370fc1cbd87df/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ea1e6acc0972628aaf7a011e04370fc1cbd87df/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java?ref=8ea1e6acc0972628aaf7a011e04370fc1cbd87df","patch":"@@ -55,9 +55,7 @@ protected AbstractSubjectTO getSubjectTO(final long key) {\n     }\n \n     @Override\n-    protected AbstractSubjectMod getSubjectMod(\n-            final AbstractSubjectTO subjectTO, final SyncDelta delta) {\n-\n+    protected AbstractSubjectMod getSubjectMod(final AbstractSubjectTO subjectTO, final SyncDelta delta) {\n         return connObjectUtils.getAttributableMod(subjectTO.getKey(),\n                 delta.getObject(),\n                 subjectTO,\n@@ -72,8 +70,9 @@ protected AbstractSubjectTO doCreate(\n         UserTO userTO = UserTO.class.cast(subjectTO);\n \n         Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n-        Map.Entry<Long, List<PropagationStatus>> created = userProvisioningManager.create(userTO, true, true, enabled,\n-                Collections.singleton(profile.getTask().getResource().getKey()));\n+        Map.Entry<Long, List<PropagationStatus>> created =\n+                userProvisioningManager.create(userTO, true, true, enabled,\n+                        Collections.singleton(profile.getTask().getResource().getKey()));\n \n         result.setKey(created.getKey());\n \n@@ -86,7 +85,7 @@ protected AbstractSubjectTO doLink(\n             final ProvisioningResult result,\n             final boolean unlink) {\n \n-        final UserMod userMod = new UserMod();\n+        UserMod userMod = new UserMod();\n         userMod.setKey(before.getKey());\n \n         if (unlink) {\n@@ -105,8 +104,8 @@ protected AbstractSubjectTO doUpdate(\n             final SyncDelta delta,\n             final ProvisioningResult result) {\n \n-        final UserMod userMod = UserMod.class.cast(subjectMod);\n-        final Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n+        UserMod userMod = UserMod.class.cast(subjectMod);\n+        Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n \n         Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.update(userMod, before.getKey(),\n                 result, enabled, Collections.singleton(profile.getTask().getResource().getKey()));"}]}