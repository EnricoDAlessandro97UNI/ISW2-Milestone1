{"sha":"c881e5060111f182cfedaf8c37b1d179de423213","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM4ODFlNTA2MDExMWYxODJjZmVkYWY4YzM3YjFkMTc5ZGU0MjMyMTM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-21T10:13:35Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-21T10:13:35Z"},"message":"(Fixes issue #49)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246706 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ffbdb0a5d48ad6280638adce86d29c56ee855141","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ffbdb0a5d48ad6280638adce86d29c56ee855141"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c881e5060111f182cfedaf8c37b1d179de423213","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c881e5060111f182cfedaf8c37b1d179de423213","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c881e5060111f182cfedaf8c37b1d179de423213","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c881e5060111f182cfedaf8c37b1d179de423213/comments","author":null,"committer":null,"parents":[{"sha":"7e327646ba936c7614a46b9edac95f5d21d01094","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7e327646ba936c7614a46b9edac95f5d21d01094","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7e327646ba936c7614a46b9edac95f5d21d01094"}],"stats":{"total":382,"additions":81,"deletions":301},"files":[{"sha":"b8b574f8b16f825033e266a53068971f7df63747","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":61,"deletions":108,"changes":169,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=c881e5060111f182cfedaf8c37b1d179de423213","patch":"@@ -15,10 +15,11 @@\n package org.syncope.console.pages;\n \n import java.io.InputStream;\n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import java.util.Locale;\n+import org.apache.commons.httpclient.UsernamePasswordCredentials;\n+import org.apache.commons.httpclient.auth.AuthScope;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.Session;\n import org.apache.wicket.markup.html.WebPage;\n@@ -31,8 +32,12 @@\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.http.client.CommonsClientHttpRequestFactory;\n+import org.springframework.web.client.HttpClientErrorException;\n import org.syncope.console.SyncopeSession;\n import org.syncope.console.SyncopeUser;\n+import org.syncope.console.rest.RestClient;\n \n /**\n  * Syncope Login page.\n@@ -45,6 +50,9 @@ public class Login extends WebPage {\n     public DropDownChoice<String> languageSelect;\n     public InputStream inputStream;\n \n+    @SpringBean(name = \"restClient\")\n+    protected RestClient restClient;\n+\n     public Login(PageParameters parameters) {\n         super(parameters);\n         form = new Form(\"login\");\n@@ -67,15 +75,13 @@ public Login(PageParameters parameters) {\n \n             @Override\n             public void onSubmit() {\n-               SyncopeUser user = authenticate(usernameField\n-                       .getRawInput(), passwordField.getRawInput());\n+               SyncopeUser user = authenticate(usernameField.getRawInput(),\n+                       passwordField.getRawInput());\n \n                if(user != null) {\n                 ((SyncopeSession)Session.get()).setUser(user);\n                 setResponsePage(new WelcomePage(null));\n                }\n-               else\n-                    error(getString(\"login-error\"));\n             }\n         };\n \n@@ -87,132 +93,79 @@ public void onSubmit() {\n     }\n \n     /**\n-     *\n+     * Authenticate the user.\n      * @param username\n      * @param password\n-     * @return\n+     * @return SyncopeUser object if the authorization succedes, null value\n+     *  otherwise.\n      */\n     public SyncopeUser authenticate(String username, String password) {\n \n         SyncopeUser user = null;\n         String roles = \"\";\n \n-        if (\"admin\".equals(username) && \"password\".equals(password)) {\n-\n-\n-            List<String> rolesList = getAdminRoles();\n-\n-            for(int i = 0; i< rolesList.size(); i++) {\n-                String role = rolesList.get(i);\n-                roles +=role;\n-\n-                if(i != rolesList.size())\n-                    roles += \",\";\n-            }\n+        //1.Set provided credentials to check\n+        ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n+                .getRequestFactory()).getHttpClient().getState()\n+                .setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(username, password));\n \n-            user = new SyncopeUser(username, roles);\n+        //2.Search authorizations for user specified by credentials\n+        List<String> auths;\n \n-            return user;\n+        try {\n+        auths = Arrays.asList(\n+                restClient.getRestTemplate().getForObject(\n+                restClient.getBaseURL()+ \"auth/entitlements.json\",\n+                String[].class));\n+        }\n+        catch(HttpClientErrorException e){\n+            //Reset the credentials if exception occurs\n+            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n+                .getRequestFactory()).getHttpClient().getState()\n+                .setCredentials(AuthScope.ANY,null);\n+            getSession().error(e.getMessage());\n+            return null;\n         }\n-        else  if (\"manager\".equals(username) && \"password\".equals(password)) {\n \n-            List<String> rolesList = getManagerRoles();\n+        if (auths != null && auths.size() > 0) {\n \n-            for (int i = 0; i < rolesList.size(); i++) {\n-                String role = rolesList.get(i);\n-                roles += role;\n+            for(int i = 0; i< auths.size(); i++) {\n+                String role = auths.get(i);\n+                roles +=role;\n \n-                if (i != rolesList.size())\n+                if(i != auths.size())\n                     roles += \",\";\n-\n             }\n \n-            user = new SyncopeUser(username, roles);\n+        user = new SyncopeUser(username, roles);\n \n-            return user;\n+        return user;\n+        }\n+        else {\n+           //Reset the credentials if no auth exist for the specified user\n+            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n+                .getRequestFactory()).getHttpClient().getState()\n+                .setCredentials(AuthScope.ANY,null);\n+           getSession().error(getString(\"login-error\"));\n+           return null;\n         }\n-        else\n-            return null;\n     }\n \n-    public List<String> getAdminRoles() {\n-        List<String> roles = new ArrayList<String>();\n-\n-        roles.add(\"USER_CREATE\");\n-        roles.add(\"USER_LIST\");\n-        roles.add(\"USER_READ\");\n-        roles.add(\"USER_DELETE\");\n-        roles.add(\"USER_UPDATE\");\n-        roles.add(\"USER_VIEW\");\n-\n-        roles.add(\"SCHEMA_CREATE\");\n-        roles.add(\"SCHEMA_LIST\");\n-        roles.add(\"SCHEMA_READ\");\n-        roles.add(\"SCHEMA_DELETE\");\n-        roles.add(\"SCHEMA_UPDATE\");\n-\n-        roles.add(\"ROLE_CREATE\");\n-        roles.add(\"ROLE_LIST\");\n-        roles.add(\"ROLE_READ\");\n-        roles.add(\"ROLE_DELETE\");\n-        roles.add(\"ROLE_UPDATE\");\n-\n-        roles.add(\"RESOURCE_CREATE\");\n-        roles.add(\"RESOURCE_LIST\");\n-        roles.add(\"RESOURCE_READ\");\n-        roles.add(\"RESOURCE_DELETE\");\n-        roles.add(\"RESOURCE_UPDATE\");\n-\n-        roles.add(\"CONNECTOR_CREATE\");\n-        roles.add(\"CONNECTOR_LIST\");\n-        roles.add(\"CONNECTOR_READ\");\n-        roles.add(\"CONNECTOR_DELETE\");\n-        roles.add(\"CONNECTOR_UPDATE\");\n-\n-        roles.add(\"REPORT_LIST\");\n-\n-        roles.add(\"CONFIGURATION_CREATE\");\n-        roles.add(\"CONFIGURATION_LIST\");\n-        roles.add(\"CONFIGURATION_READ\");\n-        roles.add(\"CONFIGURATION_DELETE\");\n-        roles.add(\"CONFIGURATION_UPDATE\");\n-\n-        roles.add(\"TASK_CREATE\");\n-        roles.add(\"TASK_LIST\");\n-        roles.add(\"TASK_READ\");\n-        roles.add(\"TASK_DELETE\");\n-        roles.add(\"TASK_UPDATE\");\n-        roles.add(\"TASK_EXECUTE\");\n-\n-        return roles;\n+    /**\n+     * Getter for restClient attribute.\n+     * @return RestClient instance\n+     */\n+    public RestClient getRestClient() {\n+        return restClient;\n     }\n \n-    public List<String> getManagerRoles() {\n-        List<String> roles = new ArrayList<String>();\n-\n-        //roles.add(\"USER_CREATE\");\n-        roles.add(\"USER_LIST\");\n-        roles.add(\"USER_READ\");\n-        roles.add(\"USER_DELETE\");\n-//        roles.add(\"USER_UPDATE\");\n-\n-//        roles.add(\"SCHEMA_CREATE\");\n-        roles.add(\"SCHEMA_LIST\");\n-//        roles.add(\"SCHEMA_READ\");\n-//        roles.add(\"SCHEMA_DELETE\");\n-//        roles.add(\"SCHEMA_UPDATE\");\n-\n-         roles.add(\"CONNECTOR_LIST\");\n-         roles.add(\"REPORT_LIST\");\n-\n-//        roles.add(\"ROLE_CREATE\");\n-        roles.add(\"ROLE_LIST\");\n-        roles.add(\"ROLE_READ\");\n-//        roles.add(\"ROLE_DELETE\");\n-//        roles.add(\"ROLE_UPDATE\");\n-        roles.add(\"TASK_LIST\");\n-\n-        return roles;\n+    /**\n+     * Setter for restClient attribute.\n+     * @param restClient instance\n+     */\n+    public void setRestClient(RestClient restClient) {\n+        this.restClient = restClient;\n     }\n \n     /**"},{"sha":"58de79a04e740876a459370e1e3232710ff20a29","filename":"console/src/main/java/org/syncope/console/rest/AuthRestClient.java","status":"removed","additions":0,"deletions":179,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7e327646ba936c7614a46b9edac95f5d21d01094/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7e327646ba936c7614a46b9edac95f5d21d01094/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java?ref=7e327646ba936c7614a46b9edac95f5d21d01094","patch":"@@ -1,179 +0,0 @@\n-/* \n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.rest;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.syncope.console.SyncopeUser;\n-\n-/**\n- * Console client for invoking authentication services.\n- */\n-public class AuthRestClient {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(AuthRestClient.class);\n-    protected RestClient restClient;\n-\n-    /**\n-     * Authenticate the user.\n-     * @param username\n-     * @param password\n-     * @return SyncopeUser valued object\n-     */\n-    public SyncopeUser authenticate(String username, String password) {\n-\n-        SyncopeUser user = null;\n-        String roles = \"\";\n-\n-        if (\"admin\".equals(username) && \"password\".equals(password)) {\n-           \n-\n-            List<String> rolesList = getAdminRoles();\n-\n-            for(int i = 0; i< rolesList.size(); i++) {\n-                String role = rolesList.get(i);\n-                roles +=role;\n-\n-                if(i != rolesList.size())\n-                    roles += \",\";\n-            }\n-\n-            user = new SyncopeUser(username, roles);\n-\n-            return user;\n-        }\n-        else  if (\"manager\".equals(username) && \"password\".equals(password)) {\n-\n-            List<String> rolesList = getManagerRoles();\n-\n-            for (int i = 0; i < rolesList.size(); i++) {\n-                String role = rolesList.get(i);\n-                roles += role;\n-\n-                if (i != rolesList.size())\n-                    roles += \",\";\n-\n-            }\n-\n-            user = new SyncopeUser(username, roles);\n-\n-            return user;\n-        }\n-        else\n-            return null;\n-    }\n-\n-    public List<String> getAdminRoles() {\n-        List<String> roles = new ArrayList<String>();\n-        \n-        roles.add(\"USER_CREATE\");\n-        roles.add(\"USER_LIST\");\n-        roles.add(\"USER_READ\");\n-        roles.add(\"USER_DELETE\");\n-        roles.add(\"USER_UPDATE\");\n-        roles.add(\"USER_VIEW\");\n-\n-        roles.add(\"SCHEMA_CREATE\");\n-        roles.add(\"SCHEMA_LIST\");\n-        roles.add(\"SCHEMA_READ\");\n-        roles.add(\"SCHEMA_DELETE\");\n-        roles.add(\"SCHEMA_UPDATE\");\n-\n-        roles.add(\"ROLE_CREATE\");\n-        roles.add(\"ROLE_LIST\");\n-        roles.add(\"ROLE_READ\");\n-        roles.add(\"ROLE_DELETE\");\n-        roles.add(\"ROLE_UPDATE\");\n-\n-        roles.add(\"RESOURCE_CREATE\");\n-        roles.add(\"RESOURCE_LIST\");\n-        roles.add(\"RESOURCE_READ\");\n-        roles.add(\"RESOURCE_DELETE\");\n-        roles.add(\"RESOURCE_UPDATE\");\n-\n-        roles.add(\"CONNECTOR_CREATE\");\n-        roles.add(\"CONNECTOR_LIST\");\n-        roles.add(\"CONNECTOR_READ\");\n-        roles.add(\"CONNECTOR_DELETE\");\n-        roles.add(\"CONNECTOR_UPDATE\");\n-\n-        roles.add(\"REPORT_LIST\");\n-\n-        roles.add(\"CONFIGURATION_CREATE\");\n-        roles.add(\"CONFIGURATION_LIST\");\n-        roles.add(\"CONFIGURATION_READ\");\n-        roles.add(\"CONFIGURATION_DELETE\");\n-        roles.add(\"CONFIGURATION_UPDATE\");\n-\n-        roles.add(\"TASK_CREATE\");\n-        roles.add(\"TASK_LIST\");\n-        roles.add(\"TASK_READ\");\n-        roles.add(\"TASK_DELETE\");\n-        roles.add(\"TASK_UPDATE\");\n-        roles.add(\"TASK_EXECUTE\");\n-\n-        return roles;\n-    }\n-\n-    public List<String> getManagerRoles() {\n-        List<String> roles = new ArrayList<String>();\n-\n-        //roles.add(\"USER_CREATE\");\n-        roles.add(\"USER_LIST\");\n-        roles.add(\"USER_READ\");\n-        roles.add(\"USER_DELETE\");\n-//        roles.add(\"USER_UPDATE\");\n-\n-//        roles.add(\"SCHEMA_CREATE\");\n-        roles.add(\"SCHEMA_LIST\");\n-//        roles.add(\"SCHEMA_READ\");\n-//        roles.add(\"SCHEMA_DELETE\");\n-//        roles.add(\"SCHEMA_UPDATE\");\n-\n-         roles.add(\"CONNECTOR_LIST\");\n-         roles.add(\"REPORT_LIST\");\n-\n-//        roles.add(\"ROLE_CREATE\");\n-        roles.add(\"ROLE_LIST\");\n-        roles.add(\"ROLE_READ\");\n-//        roles.add(\"ROLE_DELETE\");\n-//        roles.add(\"ROLE_UPDATE\");\n-        roles.add(\"TASK_LIST\");\n-\n-        return roles;\n-    }\n-\n-    /**\n-     * Getter for restClient attribute.\n-     * @return RestClient instance\n-     */\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    /**\n-     * Setter for restClient attribute.\n-     * @param restClient instance\n-     */\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n-    }\n-}"},{"sha":"d0ebbb187331da9df53fa00b6d2f76dfa92c00a5","filename":"console/src/main/java/org/syncope/console/rest/RestClient.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRestClient.java?ref=c881e5060111f182cfedaf8c37b1d179de423213","patch":"@@ -14,9 +14,6 @@\n  */\n package org.syncope.console.rest;\n \n-import org.apache.commons.httpclient.UsernamePasswordCredentials;\n-import org.apache.commons.httpclient.auth.AuthScope;\n-import org.springframework.http.client.CommonsClientHttpRequestFactory;\n import org.springframework.web.client.RestTemplate;\n \n /**\n@@ -34,11 +31,6 @@ public RestTemplate getRestTemplate() {\n \n     public void setRestTemplate(RestTemplate restTemplate) {\n         this.restTemplate = restTemplate;\n-\n-        // TODO: CABLATONE!!!\n-        ((CommonsClientHttpRequestFactory) this.restTemplate.getRequestFactory()).\n-                getHttpClient().getState().setCredentials(AuthScope.ANY,\n-                new UsernamePasswordCredentials(\"admin\", \"password\"));\n     }\n \n     public String getBaseURL() {"},{"sha":"9eae7fa48bc23a45afbc2c0fdeb3f0e9e8fbd212","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":14,"deletions":6,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=c881e5060111f182cfedaf8c37b1d179de423213","patch":"@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n        xmlns:p=\"http://www.springframework.org/schema/p\"\n        xmlns:context=\"http://www.springframework.org/schema/context\"\n        xmlns:oxm=\"http://www.springframework.org/schema/oxm\"\n@@ -12,7 +13,9 @@\n        http://www.springframework.org/schema/oxm\n        http://www.springframework.org/schema/oxm/spring-oxm.xsd\n        http://www.springframework.org/schema/tx\n-       http://www.springframework.org/schema/tx/spring-tx.xsd\">\n+       http://www.springframework.org/schema/tx/spring-tx.xsd\n+       http://www.springframework.org/schema/aop\n+              http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\">\n \n     <bean id=\"propertyConfigurer\"\n           class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n@@ -32,28 +35,33 @@\n         <property name=\"objectMapper\" ref=\"jacksonObjectMapper\"/>\n     </bean>\n \n-    <bean id=\"httpClientParams\" class=\"org.apache.commons.httpclient.params.HttpClientParams\">\n+    <bean id=\"httpClientParams\" class=\"org.apache.commons.httpclient.params.HttpClientParams\" scope=\"prototype\">\n         <property name=\"authenticationPreemptive\" value=\"true\"/>\n         <property name=\"connectionManagerClass\"\n                   value=\"org.apache.commons.httpclient.MultiThreadedHttpConnectionManager\"/>\n     </bean>\n-    <bean id=\"httpClient\" class=\"org.apache.commons.httpclient.HttpClient\">\n+\n+    <bean id=\"httpClient\" class=\"org.apache.commons.httpclient.HttpClient\" scope=\"prototype\">\n         <constructor-arg ref=\"httpClientParams\"/>\n     </bean>\n-    <bean id=\"httpClientFactory\" class=\"org.springframework.http.client.CommonsClientHttpRequestFactory\">\n+\n+    <bean id=\"httpClientFactory\" class=\"org.springframework.http.client.CommonsClientHttpRequestFactory\" scope=\"prototype\">\n         <constructor-arg ref=\"httpClient\"/>\n     </bean>\n-    <bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\">\n+\n+    <bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\" scope=\"session\">\n         <constructor-arg ref=\"httpClientFactory\"/>\n \n         <property name=\"messageConverters\" ref=\"mappingJacksonHttpMessageConverter\"/>\n         <property name=\"errorHandler\">\n             <bean id=\"syncopeClientErrorHandler\"\n             class=\"org.syncope.client.validation.SyncopeClientErrorHandler\"/>\n         </property>\n+\n+        <aop:scoped-proxy/>\n     </bean>\n \n-    <bean id=\"restClient\" class=\"org.syncope.console.rest.RestClient\">\n+    <bean id=\"restClient\" class=\"org.syncope.console.rest.RestClient\" scope=\"prototype\">\n         <property name=\"restTemplate\" ref=\"restTemplate\"/>\n         <property name=\"baseURL\" value=\"${baseURL}\"/>\n     </bean>"},{"sha":"8888da54ae94b2f5857193a5319ee7a997b7f8a3","filename":"console/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c881e5060111f182cfedaf8c37b1d179de423213/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=c881e5060111f182cfedaf8c37b1d179de423213","patch":"@@ -58,4 +58,10 @@\n             org.springframework.web.context.ContextLoaderListener\n         </listener-class>\n     </listener>\n+\n+    <listener>\n+        <listener-class>\n+                org.springframework.web.context.request.RequestContextListener\n+        </listener-class>\n+    </listener>\n </web-app>"}]}