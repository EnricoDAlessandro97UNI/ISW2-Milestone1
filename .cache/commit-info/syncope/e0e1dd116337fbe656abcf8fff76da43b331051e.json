{"sha":"e0e1dd116337fbe656abcf8fff76da43b331051e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwZTFkZDExNjMzN2ZiZTY1NmFiY2Y4ZmZmNzZkYTQzYjMzMTA1MWU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-10T08:20:08Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-10T08:20:08Z"},"message":"Missing method... ;-(\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246471 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0bd170098104fdd7038e4fcbc12393fefc3925ca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0bd170098104fdd7038e4fcbc12393fefc3925ca"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e0e1dd116337fbe656abcf8fff76da43b331051e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0e1dd116337fbe656abcf8fff76da43b331051e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0e1dd116337fbe656abcf8fff76da43b331051e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0e1dd116337fbe656abcf8fff76da43b331051e/comments","author":null,"committer":null,"parents":[{"sha":"f5a434bc74450644f0d6866cb30c95afed7bcd94","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5a434bc74450644f0d6866cb30c95afed7bcd94","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5a434bc74450644f0d6866cb30c95afed7bcd94"}],"stats":{"total":71,"additions":71,"deletions":0},"files":[{"sha":"e027d6fce019f76428e6cd7d33ebc8fd3d3a0497","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0e1dd116337fbe656abcf8fff76da43b331051e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0e1dd116337fbe656abcf8fff76da43b331051e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=e0e1dd116337fbe656abcf8fff76da43b331051e","patch":"@@ -21,17 +21,22 @@\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import java.util.List;\n+import java.util.Set;\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n import org.springframework.http.HttpStatus;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.ResourceTOs;\n+import org.syncope.client.to.SchemaMappingTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ResourceDAO;\n+import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n import org.syncope.core.rest.data.ResourceDataBinder;\n import org.syncope.types.SyncopeClientExceptionType;\n \n@@ -42,6 +47,8 @@ public class ResourceController extends AbstractController {\n     @Autowired\n     private ResourceDAO resourceDAO;\n     @Autowired\n+    private SyncopeRoleDAO syncopeRoleDAO;\n+    @Autowired\n     private ResourceDataBinder binder;\n \n     @RequestMapping(method = RequestMethod.POST,\n@@ -231,4 +238,68 @@ public ResourceTOs list(HttpServletResponse response)\n \n         return binder.getResourceTOs(resources);\n     }\n+\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/{roleName}/mappings\")\n+    public SchemaMappingTOs getRoleResourcesMapping(\n+            HttpServletResponse response,\n+            @PathVariable(\"roleName\") Long roleId)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        SyncopeRole role = null;\n+        if (roleId != null) {\n+            role = syncopeRoleDAO.find(roleId);\n+        }\n+\n+        if (role == null) {\n+            LOG.error(\"Role \" + roleId + \" not found.\");\n+\n+            SyncopeClientCompositeErrorException compositeErrorException =\n+                    new SyncopeClientCompositeErrorException(\n+                    HttpStatus.BAD_REQUEST);\n+\n+            SyncopeClientException ex = new SyncopeClientException(\n+                    SyncopeClientExceptionType.RequiredValuesMissing);\n+\n+            ex.addElement(\"resource\");\n+\n+            compositeErrorException.addException(ex);\n+\n+            throw compositeErrorException;\n+        }\n+\n+        SchemaMappingTOs roleMappings = new SchemaMappingTOs();\n+\n+        Set<TargetResource> resources = role.getTargetResources();\n+\n+        SchemaMappingTOs resourceMappings = null;\n+\n+        for (TargetResource resource : resources) {\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Ask for the mappings of '\" + resource + \"'\");\n+            }\n+\n+            List<SchemaMapping> schemaMappings = resource.getMappings();\n+\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"The mappings of '\" + resource + \"' are '\"\n+                        + schemaMappings + \"'\");\n+            }\n+\n+            resourceMappings = binder.getSchemaMappingTOs(schemaMappings);\n+\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"The mappings TO of '\" + resource + \"' are '\"\n+                        + resourceMappings.getMappings() + \"'\");\n+            }\n+\n+            roleMappings.getMappings().addAll(resourceMappings.getMappings());\n+        }\n+\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Mappings found: \" + roleMappings.getMappings());\n+        }\n+\n+        return roleMappings;\n+    }\n }"}]}