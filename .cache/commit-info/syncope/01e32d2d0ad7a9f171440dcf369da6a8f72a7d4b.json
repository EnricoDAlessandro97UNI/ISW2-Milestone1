{"sha":"01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAxZTMyZDJkMGFkN2E5ZjE3MTQ0MGRjZjM2OWRhNmE4ZjcyYTdkNGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-30T16:56:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-30T16:57:57Z"},"message":"[SYNCOPE-1388] Now only POST /user/self/mustChangePassword is allowed when mustChangePassword flag is set on user","tree":{"sha":"142bd459c10ca296c13a4aa41dadde3b99e29b92","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/142bd459c10ca296c13a4aa41dadde3b99e29b92"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9fc33d2dc0d26d49059c3c14b51e41adcd1419d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9fc33d2dc0d26d49059c3c14b51e41adcd1419d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9fc33d2dc0d26d49059c3c14b51e41adcd1419d9"}],"stats":{"total":123,"additions":63,"deletions":60},"files":[{"sha":"f58a884c6d3da63574c49a79f2878c1d3126625e","filename":"appveyor.yml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/appveyor.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/appveyor.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/appveyor.yml?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -26,9 +26,9 @@ install:\n         (new-object System.Net.WebClient).DownloadFile('https://www.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.zip', 'C:\\maven-bin.zip')\n         [System.IO.Compression.ZipFile]::ExtractToDirectory(\"C:\\maven-bin.zip\", \"C:\\maven\")\n       }\n-  - cmd: SET PATH=C:\\maven\\apache-maven-3.5.3\\bin;%JAVA_HOME%\\bin;=%;\n-  - cmd: SET JAVA_HOME=C:\\Program Files\\Java\\jdk10\n-  - cmd: SET M2_HOME=C:\\maven\\apache-maven-3.5.3\n+  - cmd: SET PATH=C:\\maven\\apache-maven-3.5.4\\bin;%JAVA_HOME%\\bin;=%;\n+  - cmd: SET JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0\n+  - cmd: SET M2_HOME=C:\\maven\\apache-maven-3.5.4\n   - cmd: SET MAVEN_OPTS=-Xmx4g\n   - cmd: SET JAVA_OPTS=-Xmx4g\n build_script:"},{"sha":"3431f04d9212e72d55a6cabb443915edd08744fa","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -49,7 +49,6 @@\n import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.wicket.Page;\n import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n@@ -254,7 +253,7 @@ protected Class<? extends WebPage> getSignInPageClass() {\n     @Override\n     public Class<? extends Page> getHomePage() {\n         return AuthenticatedWebSession.get().isSignedIn()\n-                && SyncopeConsoleSession.get().owns(StandardEntitlement.MUST_CHANGE_PASSWORD)\n+                && SyncopeConsoleSession.get().getSelfTO().isMustChangePassword()\n                 ? MustChangePassword.class\n                 : Dashboard.class;\n     }"},{"sha":"6f9d7a9009373e2f50dc50eb92dd45c2e9ef0eb2","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":17,"deletions":7,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -31,6 +31,7 @@\n import java.util.concurrent.Callable;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.Future;\n+import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.collections4.list.SetUniqueList;\n@@ -48,6 +49,7 @@\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n@@ -163,7 +165,7 @@ public boolean authenticate(final String username, final String password) {\n         try {\n             client = clientFactory.setDomain(getDomain()).create(username, password);\n \n-            refreshAuth();\n+            refreshAuth(username);\n \n             authenticated = true;\n         } catch (Exception e) {\n@@ -179,7 +181,7 @@ public boolean authenticate(final String jwt) {\n         try {\n             client = clientFactory.setDomain(getDomain()).create(jwt);\n \n-            refreshAuth();\n+            refreshAuth(null);\n \n             authenticated = true;\n         } catch (Exception e) {\n@@ -270,11 +272,19 @@ public Roles getRoles() {\n         return roles;\n     }\n \n-    public void refreshAuth() {\n-        Pair<Map<String, Set<String>>, UserTO> self = client.self();\n-        auth = self.getLeft();\n-        selfTO = self.getRight();\n-        roles = null;\n+    public void refreshAuth(final String username) {\n+        try {\n+            Pair<Map<String, Set<String>>, UserTO> self = client.self();\n+            auth = self.getLeft();\n+            selfTO = self.getRight();\n+            roles = null;\n+        } catch (ForbiddenException e) {\n+            LOG.warn(\"Could not read self(), probably in a {} scenario\", StandardEntitlement.MUST_CHANGE_PASSWORD, e);\n+\n+            selfTO = new UserTO();\n+            selfTO.setUsername(username);\n+            selfTO.setMustChangePassword(true);\n+        }\n     }\n \n     @SuppressWarnings(\"unchecked\")"},{"sha":"8e407f7a3eff448d93d422a64da37691a36aa77f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -75,7 +75,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n                         try {\n                             if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n                                 restClient.create(modelObject);\n-                                SyncopeConsoleSession.get().refreshAuth();\n+                                SyncopeConsoleSession.get().refreshAuth(null);\n                             } else {\n                                 restClient.update(modelObject);\n                             }\n@@ -175,7 +175,7 @@ public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n             public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n                 try {\n                     restClient.delete(model.getObject().getKey());\n-                    SyncopeConsoleSession.get().refreshAuth();\n+                    SyncopeConsoleSession.get().refreshAuth(null);\n \n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);"},{"sha":"3b48522fefaaa33b6aac162a92dfccc6b760705a","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":14,"deletions":9,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -19,12 +19,10 @@\n package org.apache.syncope.client.enduser;\n \n import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n import java.util.stream.Collectors;\n+import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n-import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -33,6 +31,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n@@ -87,9 +86,16 @@ public SyncopeEnduserSession(final Request request) {\n                 filter(object -> object.getType() != AttrSchemaType.Date).collect(Collectors.toSet()));\n     }\n \n-    private void afterAuthentication() {\n-        Pair<Map<String, Set<String>>, UserTO> self = client.self();\n-        selfTO = self.getRight();\n+    private void afterAuthentication(final String username) {\n+        try {\n+            selfTO = client.self().getRight();\n+        } catch (ForbiddenException e) {\n+            LOG.warn(\"Could not read self(), probably in a {} scenario\", StandardEntitlement.MUST_CHANGE_PASSWORD, e);\n+\n+            selfTO = new UserTO();\n+            selfTO.setUsername(username);\n+            selfTO.setMustChangePassword(true);\n+        }\n \n         // bind explicitly this session to have a stateful behavior during http requests, unless session will\n         // expire for every request\n@@ -104,7 +110,7 @@ public boolean authenticate(final String username, final String password) {\n                     setDomain(SyncopeEnduserApplication.get().getDomain()).\n                     create(username, password);\n \n-            afterAuthentication();\n+            afterAuthentication(username);\n \n             authenticated = true;\n         } catch (Exception e) {\n@@ -121,7 +127,7 @@ public boolean authenticate(final String jwt) {\n             client = SyncopeEnduserApplication.get().getClientFactory().\n                     setDomain(SyncopeEnduserApplication.get().getDomain()).create(jwt);\n \n-            afterAuthentication();\n+            afterAuthentication(null);\n \n             authenticated = true;\n         } catch (Exception e) {\n@@ -190,5 +196,4 @@ public boolean isXsrfTokenGenerated() {\n     public void setXsrfTokenGenerated(final boolean xsrfTokenGenerated) {\n         this.xsrfTokenGenerated = xsrfTokenGenerated;\n     }\n-\n }"},{"sha":"e18cd288a9ae46b52949ce7b20a00ff15c143115","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfChangePassword.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.enduser.resources;\n \n-import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n@@ -56,16 +55,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                     mustChangePassword(parameters.get(\"newPassword\")[0]);\n \n             response.setTextEncoding(StandardCharsets.UTF_8.name());\n-\n-            response.setWriteCallback(new WriteCallback() {\n-\n-                @Override\n-                public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(\"Password changed correctly\");\n-                }\n-            });\n-\n-            response.setStatusCode(Response.Status.OK.getStatusCode());\n+            response.setStatusCode(Response.Status.NO_CONTENT.getStatusCode());\n         } catch (final Exception e) {\n             LOG.error(\"Error while updating user\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()"},{"sha":"c58be8531c64c787a09c25db9e34829641d7ef7e","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -149,5 +149,4 @@ private void customizeAttrTOs(final Set<AttrTO> attrs, final CustomAttributesInf\n             attrs.clear();\n         }\n     }\n-\n }"},{"sha":"f919b08e99c052feb25c2ac687aa0c872cd11655","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -341,7 +341,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           $scope.user = UserUtil.getUnwrappedUser(response);\n           $scope.user.password = undefined;\n \n-\n           $scope.initialSecurityQuestion = $scope.user.securityQuestion;\n           // initialize already assigned resources\n           $scope.dynamicForm.selectedResources = $scope.user.resources;\n@@ -520,7 +519,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n                     + $filter('translate')([\"SUCCESSFULLY_UPDATED\"]).SUCCESSFULLY_UPDATED\n           });\n         }, function (response) {\n-          console.info(\"Error during user update: \", response);\n+          console.error(\"Error during user update: \", response);\n           var errorMessage;\n           // parse error response \n           if (response !== undefined) {\n@@ -614,8 +613,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         //check if password and confirmPassword are equals using angular built-in validation\n         if (ValidationExecutor.validate(currentForm, $scope)) {\n           if (user && user.password) {\n-            UserSelfService.changePassword({\"newPassword\": user.password}).then(function (data) {\n-              $scope.logout(data);\n+            UserSelfService.changePassword({\"newPassword\": user.password}).then(function (response) {\n+              console.debug(\"User \" + user.username + \" password successfully CHANGED\");\n+              $scope.logout({\n+                successMessage: $filter('translate')([\"PASSWORD_UPDATED\"]).PASSWORD_UPDATED\n+              });\n             }, function (response) {\n               var errorMessage;\n               // parse error response "},{"sha":"b7e05d34995843a3c0bae318fa26a79bc9458ed2","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/userSelfService.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -115,8 +115,9 @@ angular.module('login')\n                                 }\n                               })\n                       .then(function (response) {\n-                        return response.data || response.statusText;\n+                        return response;\n                       }, function (response) {\n+                        console.error(\"Something went wrong during passwod change, exit with status: \", response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };"},{"sha":"56a01b40b70aeac9357db81cf7b32d655bdf932f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -85,7 +85,7 @@ public class UserLogic extends AbstractAnyLogic<UserTO, UserPatch> {\n     @Autowired\n     protected SyncopeLogic syncopeLogic;\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.MUST_CHANGE_PASSWORD + \"'))\")\n     @Transactional(readOnly = true)\n     public Pair<String, UserTO> selfRead() {\n         return Pair.of(\n@@ -164,7 +164,9 @@ protected ProvisioningResult<UserTO> doCreate(\n                 binder.returnUserTO(binder.getUserTO(created.getKey())), created.getRight(), before.getRight());\n     }\n \n-    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"')) \"\n+            + \"and not(hasRole('\" + StandardEntitlement.MUST_CHANGE_PASSWORD + \"'))\")\n     public ProvisioningResult<UserTO> selfUpdate(final UserPatch userPatch, final boolean nullPriorityAsync) {\n         UserTO userTO = binder.getAuthenticatedUserTO();\n         userPatch.setKey(userTO.getKey());\n@@ -264,7 +266,7 @@ public ProvisioningResult<UserTO> status(final StatusPatch statusPatch, final bo\n                 Collections.<String>emptySet());\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n+    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.MUST_CHANGE_PASSWORD + \"'))\")\n     public ProvisioningResult<UserTO> selfStatus(final StatusPatch statusPatch, final boolean nullPriorityAsync) {\n         statusPatch.setKey(userDAO.findKey(AuthContextUtils.getUsername()));\n         Pair<String, List<PropagationStatus>> updated = setStatusOnWfAdapter(statusPatch, nullPriorityAsync);\n@@ -316,7 +318,9 @@ public void confirmPasswordReset(final String token, final String password) {\n         provisioningManager.confirmPasswordReset(user.getKey(), token, password);\n     }\n \n-    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"')) \"\n+            + \"and not(hasRole('\" + StandardEntitlement.MUST_CHANGE_PASSWORD + \"'))\")\n     public ProvisioningResult<UserTO> selfDelete(final boolean nullPriorityAsync) {\n         UserTO userTO = binder.getAuthenticatedUserTO();\n         return doDelete(userTO, true, nullPriorityAsync);"},{"sha":"15ea6a98502daa1d4dec641701e85bfe57634a68","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/MustChangePasswordFilter.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -25,18 +25,13 @@\n import javax.servlet.ServletException;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n-import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.springframework.security.access.AccessDeniedException;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper;\n \n public class MustChangePasswordFilter implements Filter {\n \n-    private static final String[] ALLOWED = new String[] {\n-        \"/users/self\", \"/users/self/changePassword\"\n-    };\n-\n     @Override\n     public void init(final FilterConfig filterConfig) throws ServletException {\n         // not used\n@@ -58,14 +53,13 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n \n             SecurityContextHolderAwareRequestWrapper wrapper =\n                     SecurityContextHolderAwareRequestWrapper.class.cast(request);\n-            if (isMustChangePassword && \"GET\".equalsIgnoreCase(wrapper.getMethod())\n-                    && !ArrayUtils.contains(ALLOWED, wrapper.getPathInfo())) {\n+            if (isMustChangePassword && !\"POST\".equalsIgnoreCase(wrapper.getMethod())\n+                    && !\"/users/self/changePassword\".equals(wrapper.getPathInfo())) {\n \n                 throw new AccessDeniedException(\"Please change your password first\");\n             }\n         }\n \n         chain.doFilter(request, response);\n     }\n-\n }"},{"sha":"279cd6fee76ccc629d026772b01b9d827c6314e6","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeJWTSSOProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -87,7 +87,7 @@ public Pair<User, Set<SyncopeGrantedAuthority>> resolve(final JwtClaims jwtClaim\n         Set<SyncopeGrantedAuthority> authorities = Collections.emptySet();\n         if (user != null) {\n             AccessToken accessToken = accessTokenDAO.find(jwtClaims.getTokenId());\n-            if (accessToken.getAuthorities() != null) {\n+            if (accessToken != null && accessToken.getAuthorities() != null) {\n                 try {\n                     authorities = POJOHelper.deserialize(\n                             ENCRYPTOR.decode(new String(accessToken.getAuthorities()), CipherAlgorithm.AES),"},{"sha":"d6b10c9b737aa0dec40389ed8fb8b80a6dc06609","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SPLogin.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -68,5 +68,4 @@ public SAML2SPLogin(final PageParameters parameters) {\n         }\n         strategy.remove();\n     }\n-\n }"},{"sha":"162cb88f095558303ba199f59db549522e69b7de","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=01e32d2d0ad7a9f171440dcf369da6a8f72a7d4b","patch":"@@ -57,7 +57,7 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestFormQuery;\n-import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.apache.syncope.common.rest.api.service.AccessTokenService;\n import org.apache.syncope.common.rest.api.service.UserRequestService;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.syncope.common.rest.api.service.UserService;\n@@ -377,10 +377,10 @@ public void mustChangePassword() {\n \n         // 0. access as vivaldi -> succeed\n         SyncopeClient vivaldiClient = clientFactory.create(\"vivaldi\", \"password321\");\n-        Pair<Map<String, Set<String>>, UserTO> self = vivaldiClient.self();\n-        assertFalse(self.getRight().isMustChangePassword());\n+        Response response = vivaldiClient.getService(AccessTokenService.class).refresh();\n+        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n \n-        // 1. update user vivaldi (3) requirig password update\n+        // 1. update user vivaldi requiring password update\n         userPatch = new UserPatch();\n         userPatch.setKey(\"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\");\n         userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(true).build());\n@@ -389,7 +389,7 @@ public void mustChangePassword() {\n \n         // 2. attempt to access -> fail\n         try {\n-            vivaldiClient.getService(ResourceService.class).list();\n+            vivaldiClient.self();\n             fail(\"This should not happen\");\n         } catch (ForbiddenException e) {\n             assertNotNull(e);\n@@ -400,7 +400,7 @@ public void mustChangePassword() {\n         vivaldiClient.getService(UserSelfService.class).mustChangePassword(\"password123\");\n \n         // 4. verify it worked\n-        self = clientFactory.create(\"vivaldi\", \"password123\").self();\n+        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(\"vivaldi\", \"password123\").self();\n         assertFalse(self.getRight().isMustChangePassword());\n     }\n "}]}