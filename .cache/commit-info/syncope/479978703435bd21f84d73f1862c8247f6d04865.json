{"sha":"479978703435bd21f84d73f1862c8247f6d04865","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3OTk3ODcwMzQzNWJkMjFmODRkNzNmMTg2MmM4MjQ3ZjZkMDQ4NjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T15:31:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T15:31:19Z"},"message":"[SYNCOPE-788] Fixing typos","tree":{"sha":"a73100307ce3b78335407cef88677585f2413ac7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a73100307ce3b78335407cef88677585f2413ac7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/479978703435bd21f84d73f1862c8247f6d04865","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/479978703435bd21f84d73f1862c8247f6d04865","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/479978703435bd21f84d73f1862c8247f6d04865","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/479978703435bd21f84d73f1862c8247f6d04865/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"93cf22969741764d711435a00ba38583484151a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93cf22969741764d711435a00ba38583484151a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93cf22969741764d711435a00ba38583484151a7"}],"stats":{"total":18,"additions":9,"deletions":9},"files":[{"sha":"a03ca5898709c72b3eb82239ff8bfe208a24e4db","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/479978703435bd21f84d73f1862c8247f6d04865/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/479978703435bd21f84d73f1862c8247f6d04865/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=479978703435bd21f84d73f1862c8247f6d04865","patch":"@@ -142,7 +142,7 @@ public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO, fin\n         }\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(before.getLeft().getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.CREATE.getFor(before.getLeft().getType())),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n@@ -163,7 +163,7 @@ public ProvisioningResult<AnyObjectTO> update(\n                 ? before.getLeft().getRealm().getValue()\n                 : anyObjectTO.getRealm();\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 realm);\n         securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n@@ -178,7 +178,7 @@ public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean null\n         Pair<AnyObjectTO, List<LogicActions>> before = beforeDelete(anyObject);\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(before.getLeft().getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.DELETE.getFor(before.getLeft().getType())),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), before.getLeft().getKey());\n \n@@ -195,7 +195,7 @@ public AnyObjectTO unlink(final Long key, final Collection<String> resources) {\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n@@ -217,7 +217,7 @@ public AnyObjectTO link(final Long key, final Collection<String> resources) {\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n@@ -241,7 +241,7 @@ public ProvisioningResult<AnyObjectTO> unassign(\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n@@ -269,7 +269,7 @@ public ProvisioningResult<AnyObjectTO> assign(\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n@@ -293,7 +293,7 @@ public ProvisioningResult<AnyObjectTO> deprovision(\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n@@ -316,7 +316,7 @@ public ProvisioningResult<AnyObjectTO> provision(\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.UPDATE.getFor(anyObjectTO.getType())),\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n "}]}