{"sha":"05bb4ccbd25f58010dd0655aaca64aefd7492d77","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1YmI0Y2NiZDI1ZjU4MDEwZGQwNjU1YWFjYTY0YWVmZDc0OTJkNzc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-24T17:26:28Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-24T17:26:28Z"},"message":"Rolling back to a working version :-(\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246647 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"de315eee2c064927d420575c0b70d134d2b1d757","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/de315eee2c064927d420575c0b70d134d2b1d757"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/05bb4ccbd25f58010dd0655aaca64aefd7492d77","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05bb4ccbd25f58010dd0655aaca64aefd7492d77","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05bb4ccbd25f58010dd0655aaca64aefd7492d77","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05bb4ccbd25f58010dd0655aaca64aefd7492d77/comments","author":null,"committer":null,"parents":[{"sha":"312482ad95b84dd0185aff8750415cef2f9d4a87","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/312482ad95b84dd0185aff8750415cef2f9d4a87","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/312482ad95b84dd0185aff8750415cef2f9d4a87"}],"stats":{"total":24,"additions":13,"deletions":11},"files":[{"sha":"5c25d45f9d515424bcba9b56c50fd79293260483","filename":"core/src/main/java/jpasymphony/workflow/spi/jpa/JPAWorkflowStore.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05bb4ccbd25f58010dd0655aaca64aefd7492d77/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05bb4ccbd25f58010dd0655aaca64aefd7492d77/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java?ref=05bb4ccbd25f58010dd0655aaca64aefd7492d77","patch":"@@ -65,7 +65,7 @@ public class JPAWorkflowStore implements WorkflowStore {\n     private JPAWorkflowEntry getEntry(final long entryId)\n             throws StoreException {\n \n-        final JPAWorkflowEntry entry = workflowEntryDAO.find(entryId);\n+        JPAWorkflowEntry entry = workflowEntryDAO.find(entryId);\n         if (entry == null) {\n             throw new StoreException(\n                     \"Could not find workflow entry \" + entryId);\n@@ -78,7 +78,8 @@ private JPAWorkflowEntry getEntry(final long entryId)\n     public void setEntryState(final long entryId, final int state)\n             throws StoreException {\n \n-        final JPAWorkflowEntry entry = getEntry(entryId);\n+        JPAWorkflowEntry entry = getEntry(entryId);\n+\n         entry.setWorkflowState(state);\n     }\n \n@@ -106,7 +107,7 @@ public Step createCurrentStep(final long entryId,\n \n         JPAWorkflowEntry entry = getEntry(entryId);\n \n-        final JPACurrentStep step = new JPACurrentStep();\n+        JPACurrentStep step = new JPACurrentStep();\n         step.setWorkflowEntry(entry);\n         step.setStepId(stepId);\n         step.setOwner(owner);\n@@ -137,27 +138,23 @@ public List findCurrentSteps(final long entryId)\n             throws StoreException {\n \n         JPAWorkflowEntry entry = getEntry(entryId);\n+\n         return entry.getCurrentSteps();\n     }\n \n     @Override\n     public WorkflowEntry findEntry(final long entryId)\n             throws StoreException {\n \n-        JPAWorkflowEntry entry = workflowEntryDAO.find(entryId);\n-        if (entry == null) {\n-            throw new StoreException(\n-                    \"Could not find workflow entry \" + entryId);\n-        }\n-\n-        return entry;\n+        return getEntry(entryId);\n     }\n \n     @Override\n     public List findHistorySteps(final long entryId)\n             throws StoreException {\n \n-        final JPAWorkflowEntry entry = getEntry(entryId);\n+        JPAWorkflowEntry entry = getEntry(entryId);\n+\n         return entry.getHistorySteps();\n     }\n \n@@ -181,6 +178,8 @@ public Step markFinished(final Step step,\n         currentStep.setStatus(status);\n         currentStep.setCaller(caller);\n \n+        workflowEntryDAO.save(currentStep.getWorkflowEntry());\n+\n         return currentStep;\n     }\n \n@@ -203,7 +202,10 @@ public void moveToHistory(final Step step)\n         historyStep.setWorkflowEntry(entry);\n \n         entry.removeCurrentStep(currentStep);\n+        workflowEntryDAO.deleteCurrentStep(currentStep.getId());\n+\n         entry.addHistoryStep(historyStep);\n+        workflowEntryDAO.save(entry);\n     }\n \n     @Override"}]}