{"sha":"480ea47befd1b651b373658960bd0beee9f6a9d7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4MGVhNDdiZWZkMWI2NTFiMzczNjU4OTYwYmQwYmVlZTlmNmE5ZDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-12T10:23:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-12T11:58:04Z"},"message":"[SYNCOPE-1446] Do not apply transactions to audit table","tree":{"sha":"bb36f592f5925a2c3ce251e486cda909113d689c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bb36f592f5925a2c3ce251e486cda909113d689c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/480ea47befd1b651b373658960bd0beee9f6a9d7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/480ea47befd1b651b373658960bd0beee9f6a9d7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/480ea47befd1b651b373658960bd0beee9f6a9d7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/480ea47befd1b651b373658960bd0beee9f6a9d7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f9cf6bfbb840e43e6cbb7a43cfa7d995794dee0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f9cf6bfbb840e43e6cbb7a43cfa7d995794dee0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f9cf6bfbb840e43e6cbb7a43cfa7d995794dee0"}],"stats":{"total":87,"additions":85,"deletions":2},"files":[{"sha":"77ded77a108a3a7a34183af8bfc98fbe4ac2334b","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/LoggerLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/480ea47befd1b651b373658960bd0beee9f6a9d7/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/480ea47befd1b651b373658960bd0beee9f6a9d7/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java?ref=480ea47befd1b651b373658960bd0beee9f6a9d7","patch":"@@ -95,8 +95,8 @@ public void load(final String domain, final DataSource datasource) {\n         Appender appender = ctx.getConfiguration().getAppender(\"audit_for_\" + domain);\n         if (appender == null) {\n             appender = JdbcAppender.newBuilder().\n-                    withName(\"audit_for_\" + domain).\n-                    withIgnoreExceptions(false).\n+                    setName(\"audit_for_\" + domain).\n+                    setIgnoreExceptions(false).\n                     setConnectionSource(new DataSourceConnectionSource(domain, datasource)).\n                     setBufferSize(0).\n                     setTableName(\"SYNCOPEAUDIT\")."},{"sha":"3d44e352cf97fd8a2c878e3604f933cf84f1d07a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAuditManager.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/480ea47befd1b651b373658960bd0beee9f6a9d7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/480ea47befd1b651b373658960bd0beee9f6a9d7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java?ref=480ea47befd1b651b373658960bd0beee9f6a9d7","patch":"@@ -30,6 +30,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(readOnly = true)\n@@ -72,6 +73,7 @@ public boolean auditRequested(\n         return auditRequested;\n     }\n \n+    @Transactional(propagation = Propagation.NOT_SUPPORTED)\n     @Override\n     public void audit(final AfterHandlingEvent event) {\n         audit(\n@@ -86,6 +88,7 @@ public void audit(final AfterHandlingEvent event) {\n                 event.getInput());\n     }\n \n+    @Transactional(propagation = Propagation.NOT_SUPPORTED)\n     @Override\n     public void audit(\n             final String who,"},{"sha":"fe19fefd3f0fff50a3509d79b8e055d7c87ecc1f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/480ea47befd1b651b373658960bd0beee9f6a9d7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/480ea47befd1b651b373658960bd0beee9f6a9d7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=480ea47befd1b651b373658960bd0beee9f6a9d7","patch":"@@ -45,14 +45,17 @@\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n import org.apache.syncope.common.lib.types.LoggerType;\n+import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.common.rest.api.LoggerWrapper;\n import org.apache.syncope.core.logic.ConnectorLogic;\n import org.apache.syncope.core.logic.ReportLogic;\n@@ -370,4 +373,81 @@ public void issueSYNCOPE976() {\n         assertNotNull(userLogic);\n         assertEquals(1, userLogic.getEvents().stream().filter(event -> \"create\".equals(event)).count());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1446() {\n+        AuditLoggerName createSuccess = new AuditLoggerName(\n+                AuditElements.EventCategoryType.PROPAGATION,\n+                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                RESOURCE_NAME_DBSCRIPTED,\n+                \"create\",\n+                AuditElements.Result.SUCCESS);\n+        AuditLoggerName createFailure = new AuditLoggerName(\n+                AuditElements.EventCategoryType.PROPAGATION,\n+                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                RESOURCE_NAME_DBSCRIPTED,\n+                \"create\",\n+                AuditElements.Result.FAILURE);\n+        AuditLoggerName updateSuccess = new AuditLoggerName(\n+                AuditElements.EventCategoryType.PROPAGATION,\n+                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                RESOURCE_NAME_DBSCRIPTED,\n+                \"update\",\n+                AuditElements.Result.SUCCESS);\n+        AuditLoggerName updateFailure = new AuditLoggerName(\n+                AuditElements.EventCategoryType.PROPAGATION,\n+                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                RESOURCE_NAME_DBSCRIPTED,\n+                \"update\",\n+                AuditElements.Result.FAILURE);\n+        try {\n+            // 1. setup audit for propagation\n+            LoggerTO loggerTO = new LoggerTO();\n+            loggerTO.setKey(createSuccess.toLoggerName());\n+            loggerTO.setLevel(LoggerLevel.DEBUG);\n+            loggerService.update(LoggerType.AUDIT, loggerTO);\n+\n+            loggerTO.setKey(createFailure.toLoggerName());\n+            loggerService.update(LoggerType.AUDIT, loggerTO);\n+\n+            loggerTO.setKey(updateSuccess.toLoggerName());\n+            loggerService.update(LoggerType.AUDIT, loggerTO);\n+\n+            loggerTO.setKey(updateFailure.toLoggerName());\n+            loggerService.update(LoggerType.AUDIT, loggerTO);\n+\n+            // 2. push on resource\n+            PushTaskTO pushTask = new PushTaskTO();\n+            pushTask.setPerformCreate(true);\n+            pushTask.setPerformUpdate(true);\n+            pushTask.setUnmatchingRule(UnmatchingRule.PROVISION);\n+            pushTask.setMatchingRule(MatchingRule.UPDATE);\n+            reconciliationService.push(\n+                    AnyTypeKind.ANY_OBJECT, \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\", RESOURCE_NAME_DBSCRIPTED, pushTask);\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected exception\", e);\n+            fail(e.getMessage());\n+        } finally {\n+            try {\n+                loggerService.delete(LoggerType.AUDIT, createSuccess.toLoggerName());\n+            } catch (Exception e) {\n+                // ignore\n+            }\n+            try {\n+                loggerService.delete(LoggerType.AUDIT, createFailure.toLoggerName());\n+            } catch (Exception e) {\n+                // ignore\n+            }\n+            try {\n+                loggerService.delete(LoggerType.AUDIT, updateSuccess.toLoggerName());\n+            } catch (Exception e) {\n+                // ignore\n+            }\n+            try {\n+                loggerService.delete(LoggerType.AUDIT, updateFailure.toLoggerName());\n+            } catch (Exception e) {\n+                // ignore\n+            }\n+        }\n+    }\n }"}]}