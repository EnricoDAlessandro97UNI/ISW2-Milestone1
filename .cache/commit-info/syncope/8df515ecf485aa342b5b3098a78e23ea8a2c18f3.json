{"sha":"8df515ecf485aa342b5b3098a78e23ea8a2c18f3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkZjUxNWVjZjQ4NWFhMzQyYjViMzA5OGE3OGUyM2VhOGEyYzE4ZjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-31T16:25:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-31T16:29:12Z"},"message":"[SYNCOPE-1004] Now managing selfRead() too","tree":{"sha":"4d722ae5baaa271f222e483d129adf6ce42db04b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4d722ae5baaa271f222e483d129adf6ce42db04b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8df515ecf485aa342b5b3098a78e23ea8a2c18f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8df515ecf485aa342b5b3098a78e23ea8a2c18f3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8df515ecf485aa342b5b3098a78e23ea8a2c18f3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"07b12385b9f6875f5d29c962a6088baf2c9a6f4f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/07b12385b9f6875f5d29c962a6088baf2c9a6f4f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/07b12385b9f6875f5d29c962a6088baf2c9a6f4f"}],"stats":{"total":13,"additions":9,"deletions":4},"files":[{"sha":"f51fdb608c9378df611e5e8d5e21f79da4dc463e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=8df515ecf485aa342b5b3098a78e23ea8a2c18f3","patch":"@@ -115,7 +115,7 @@ public UserTO transform(final User input) {\n \n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n-    public Pair<String, UserTO> readSelf() {\n+    public Pair<String, UserTO> selfRead() {\n         return ImmutablePair.of(\n                 POJOHelper.serialize(AuthContextUtils.getAuthorizations()),\n                 binder.returnUserTO(binder.getAuthenticatedUserTO()));"},{"sha":"1a021ae908accd3f76ae8407f8464fe086369374","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=8df515ecf485aa342b5b3098a78e23ea8a2c18f3","patch":"@@ -28,6 +28,7 @@\n import java.util.Set;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -270,6 +271,10 @@ public List<NotificationTask> createTasks(\n             any = userDAO.find(((UserTO) before).getKey());\n         } else if (output instanceof UserTO) {\n             any = userDAO.find(((UserTO) output).getKey());\n+        } else if (output instanceof Pair\n+                && ((Pair) output).getRight() instanceof UserTO) {\n+\n+            any = userDAO.find(((UserTO) ((Pair) output).getRight()).getKey());\n         } else if (output instanceof ProvisioningResult\n                 && ((ProvisioningResult) output).getEntity() instanceof UserTO) {\n "},{"sha":"c76986efe5cac76c7c5cbf23cedf6d5cc3536846","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=8df515ecf485aa342b5b3098a78e23ea8a2c18f3","patch":"@@ -56,7 +56,7 @@ public Response create(final UserTO userTO, final boolean storePassword) {\n \n     @Override\n     public Response read() {\n-        Pair<String, UserTO> self = logic.readSelf();\n+        Pair<String, UserTO> self = logic.selfRead();\n         return Response.ok().\n                 header(RESTHeaders.RESOURCE_KEY, self.getValue().getKey()).\n                 header(RESTHeaders.OWNED_ENTITLEMENTS, self.getKey()).\n@@ -72,7 +72,7 @@ public Response update(final UserPatch patch) {\n \n     @Override\n     public Response update(final UserTO user) {\n-        Pair<String, UserTO> self = logic.readSelf();\n+        Pair<String, UserTO> self = logic.selfRead();\n         return update(AnyOperations.diff(user, self.getValue(), false));\n     }\n "},{"sha":"57ba47e6f434d3cf8e2aa918f93d2ac6f39d3349","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8df515ecf485aa342b5b3098a78e23ea8a2c18f3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=8df515ecf485aa342b5b3098a78e23ea8a2c18f3","patch":"@@ -257,7 +257,7 @@ public void auditReport() throws IOException {\n                 AuditElements.EventCategoryType.LOGIC,\n                 \"UserLogic\",\n                 null,\n-                \"readSelf\",\n+                \"selfRead\",\n                 AuditElements.Result.SUCCESS);\n \n         try {"}]}