{"sha":"706cd3671d72b773358442e4a634f8a6c0e3cf6f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcwNmNkMzY3MWQ3MmI3NzMzNTg0NDJlNGE2MzRmOGE2YzBlM2NmNmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-03T17:12:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-03T17:12:37Z"},"message":"[SYNCOPE-666] Introducing dynamic group memberships per any type","tree":{"sha":"6540cadbec66853e8dce17b42a1120c18a9f64f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6540cadbec66853e8dce17b42a1120c18a9f64f0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/706cd3671d72b773358442e4a634f8a6c0e3cf6f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/706cd3671d72b773358442e4a634f8a6c0e3cf6f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/706cd3671d72b773358442e4a634f8a6c0e3cf6f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/706cd3671d72b773358442e4a634f8a6c0e3cf6f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cfce9b9f3a1b0aaac2fb607953add73078ccd74f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfce9b9f3a1b0aaac2fb607953add73078ccd74f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cfce9b9f3a1b0aaac2fb607953add73078ccd74f"}],"stats":{"total":490,"additions":277,"deletions":213},"files":[{"sha":"8ae413c30523033244af411f164bbbbf9ec7e34f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -328,11 +328,9 @@ public static GroupPatch diff(final GroupTO updated, final GroupTO original, fin\n         result.setGroupOwner(replacePatchItem(\n                 original.getGroupOwner(), updated.getGroupOwner(), new LongReplacePatchItem()));\n \n-        // 3. dynMembershipCond\n-        result.setADynMembershipCond(replacePatchItem(\n-                updated.getADynMembershipCond(), original.getADynMembershipCond(), new StringReplacePatchItem()));\n-        result.setUDynMembershipCond(replacePatchItem(\n-                updated.getUDynMembershipCond(), original.getUDynMembershipCond(), new StringReplacePatchItem()));\n+        // 3. dynamic membership\n+        result.setUDynMembershipCond(updated.getUDynMembershipCond());\n+        result.getADynMembershipConds().putAll(updated.getADynMembershipConds());\n \n         return result;\n     }\n@@ -442,12 +440,9 @@ public static GroupTO patch(final GroupTO groupTO, final GroupPatch groupPatch)\n             result.setGroupOwner(groupPatch.getGroupOwner().getValue());\n         }\n \n-        if (groupPatch.getADynMembershipCond() != null) {\n-            result.setADynMembershipCond(groupPatch.getADynMembershipCond().getValue());\n-        }\n-        if (groupPatch.getUDynMembershipCond() != null) {\n-            result.setADynMembershipCond(groupPatch.getUDynMembershipCond().getValue());\n-        }\n+        result.setUDynMembershipCond(groupPatch.getUDynMembershipCond());\n+        result.getADynMembershipConds().clear();\n+        result.getADynMembershipConds().putAll(groupPatch.getADynMembershipConds());\n \n         return result;\n     }"},{"sha":"5e6a05f01144e4c780fa3f751ef4e00898911c3b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/GroupPatch.java","status":"modified","additions":16,"deletions":13,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -21,13 +21,17 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n \n @XmlRootElement(name = \"groupPatch\")\n@@ -42,9 +46,11 @@ public class GroupPatch extends AnyPatch {\n \n     private LongReplacePatchItem groupOwner;\n \n-    private StringReplacePatchItem adynMembershipCond;\n+    private String udynMembershipCond;\n \n-    private StringReplacePatchItem udynMembershipCond;\n+    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n+    @JsonIgnore\n+    private final Map<String, String> adynMembershipConds = new HashMap<>();\n \n     private final List<TypeExtensionTO> typeExtensions = new ArrayList<>();\n \n@@ -72,22 +78,19 @@ public void setGroupOwner(final LongReplacePatchItem groupOwner) {\n         this.groupOwner = groupOwner;\n     }\n \n-    public StringReplacePatchItem getADynMembershipCond() {\n-        return adynMembershipCond;\n-    }\n-\n-    public void setADynMembershipCond(final StringReplacePatchItem adynMembershipCond) {\n-        this.adynMembershipCond = adynMembershipCond;\n-    }\n-\n-    public StringReplacePatchItem getUDynMembershipCond() {\n+    public String getUDynMembershipCond() {\n         return udynMembershipCond;\n     }\n \n-    public void setUDynMembershipCond(final StringReplacePatchItem udynMembershipCond) {\n+    public void setUDynMembershipCond(final String udynMembershipCond) {\n         this.udynMembershipCond = udynMembershipCond;\n     }\n \n+    @JsonIgnore\n+    public Map<String, String> getADynMembershipConds() {\n+        return adynMembershipConds;\n+    }\n+\n     @JsonIgnore\n     public TypeExtensionTO getTypeExtension(final String anyType) {\n         return IterableUtils.find(typeExtensions, new Predicate<TypeExtensionTO>() {\n@@ -110,7 +113,7 @@ public List<TypeExtensionTO> getTypeExtensions() {\n     public boolean isEmpty() {\n         return super.isEmpty()\n                 && name == null && userOwner == null && groupOwner == null\n-                && adynMembershipCond == null && udynMembershipCond == null && typeExtensions.isEmpty();\n+                && udynMembershipCond == null && adynMembershipConds.isEmpty() && typeExtensions.isEmpty();\n     }\n \n }"},{"sha":"45b022010338ae3d2dabe1ac6b4bf12c2c582408","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -21,13 +21,17 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n @XmlRootElement(name = \"group\")\n@@ -42,10 +46,12 @@ public class GroupTO extends AnyTO {\n \n     private Long groupOwner;\n \n-    private String adynMembershipCond;\n-\n     private String udynMembershipCond;\n \n+    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n+    @JsonIgnore\n+    private final Map<String, String> adynMembershipConds = new HashMap<>();\n+\n     private final List<TypeExtensionTO> typeExtensions = new ArrayList<>();\n \n     @Override\n@@ -82,14 +88,6 @@ public void setGroupOwner(final Long groupOwner) {\n         this.groupOwner = groupOwner;\n     }\n \n-    public String getADynMembershipCond() {\n-        return adynMembershipCond;\n-    }\n-\n-    public void setADynMembershipCond(final String aDynMembershipCond) {\n-        this.adynMembershipCond = aDynMembershipCond;\n-    }\n-\n     public String getUDynMembershipCond() {\n         return udynMembershipCond;\n     }\n@@ -98,6 +96,11 @@ public void setUDynMembershipCond(final String uDynMembershipCond) {\n         this.udynMembershipCond = uDynMembershipCond;\n     }\n \n+    @JsonIgnore\n+    public Map<String, String> getADynMembershipConds() {\n+        return adynMembershipConds;\n+    }\n+\n     @JsonIgnore\n     public TypeExtensionTO getTypeExtension(final String anyType) {\n         return IterableUtils.find(typeExtensions, new Predicate<TypeExtensionTO>() {"},{"sha":"1253eee0b5fbb2e1fff117d469d13e8b57fd8743","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/EntityViolationType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -25,6 +25,7 @@ public enum EntityViolationType {\n \n     Standard(\"\"),\n     InvalidAnyType(\"org.apache.syncope.core.persistence.validation.anytype\"),\n+    InvalidADynMemberships(\"org.apache.syncope.core.persistence.validation.group.adynMembershipCond\"),\n     InvalidConnInstanceLocation(\"org.apache.syncope.core.persistence.validation.conninstance.location\"),\n     InvalidConnPoolConf(\"org.apache.syncope.core.persistence.validation.conninstance.poolConf\"),\n     InvalidMapping(\"org.apache.syncope.core.persistence.validation.mapping\"),"},{"sha":"19723cf887a288407633509f19b70b99bbeff780","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/anyobject/ADynGroupMembership.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FADynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FADynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FADynGroupMembership.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -18,8 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.anyobject;\n \n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.DynGroupMembership;\n \n public interface ADynGroupMembership extends DynGroupMembership<AnyObject> {\n \n+    AnyType getAnyType();\n+\n+    void setAnyType(AnyType anyType);\n }"},{"sha":"74a32f33cb14e45ae5313aba69aa0f6c1fcc2b51","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/Group.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -51,14 +51,18 @@ public interface Group extends Any<GPlainAttr> {\n     @Override\n     List<? extends GPlainAttr> getPlainAttrs();\n \n-    ADynGroupMembership getADynMembership();\n-\n-    void setADynMembership(ADynGroupMembership aDynMembership);\n-\n     UDynGroupMembership getUDynMembership();\n \n     void setUDynMembership(UDynGroupMembership uDynMembership);\n \n+    boolean add(ADynGroupMembership dynGroupMembership);\n+\n+    boolean remove(ADynGroupMembership dynGroupMembership);\n+\n+    ADynGroupMembership getADynMembership(AnyType anyType);\n+\n+    List<? extends ADynGroupMembership> getADynMemberships();\n+\n     boolean add(TypeExtension typeExtension);\n \n     boolean remove(TypeExtension typeExtension);"},{"sha":"0052cd58b89abcb1ebc232f2120af9c871e8c095","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTask.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -23,11 +23,11 @@\n \n public interface PushTask extends ProvisioningTask {\n \n-    boolean add(AnyFilter filter);\n+    boolean add(PushTaskAnyFilter filter);\n \n-    boolean remove(AnyFilter filter);\n+    boolean remove(PushTaskAnyFilter filter);\n \n-    AnyFilter getFilter(AnyType anyType);\n+    PushTaskAnyFilter getFilter(AnyType anyType);\n \n-    List<? extends AnyFilter> getFilters();\n+    List<? extends PushTaskAnyFilter> getFilters();\n }"},{"sha":"76d54c217af845387e34a5e241e332136c0f667c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTaskAnyFilter.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface AnyFilter extends Entity<Long> {\n+public interface PushTaskAnyFilter extends Entity<Long> {\n \n     PushTask getPushTask();\n \n@@ -31,7 +31,7 @@ public interface AnyFilter extends Entity<Long> {\n \n     void setAnyType(AnyType anyType);\n \n-    String get();\n+    String getFIQLCond();\n \n-    void set(String filter);\n+    void setFIQLCond(String fiql);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/AnyFilter.java"},{"sha":"7901a6e3d98b971b2dcfed58e9a642cee834c3a6","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/UDynMembership.java","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cfce9b9f3a1b0aaac2fb607953add73078ccd74f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDynMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cfce9b9f3a1b0aaac2fb607953add73078ccd74f/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDynMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDynMembership.java?ref=cfce9b9f3a1b0aaac2fb607953add73078ccd74f","patch":"@@ -1,25 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.entity.user;\n-\n-import org.apache.syncope.core.persistence.api.entity.DynMembership;\n-\n-public interface UDynMembership extends DynMembership<User> {\n-\n-}"},{"sha":"83cc0a5731f2a5b726efd7ba0550006783540bd2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -109,7 +109,7 @@ public AnyObject save(final AnyObject anyObject) {\n     @Override\n     public void delete(final AnyObject any) {\n         for (Group group : findDynGroupMemberships(any)) {\n-            group.getADynMembership().remove(any);\n+            group.getADynMembership(any.getType()).remove(any);\n         }\n \n         entityManager().remove(any);"},{"sha":"66cee45974f04194fdbddc3906b6deea5ac231f2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":19,"deletions":16,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -48,6 +48,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.ADynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.TypeExtension;\n@@ -173,16 +174,6 @@ private SearchCond buildDynMembershipCond(final String baseCondFIQL, final Realm\n     @Override\n     public Group save(final Group group) {\n         // refresh dynaminc memberships\n-        if (group.getADynMembership() != null) {\n-            List<AnyObject> matching = searchDAO.search(\n-                    buildDynMembershipCond(group.getADynMembership().getFIQLCond(), group.getRealm()),\n-                    AnyTypeKind.ANY_OBJECT);\n-\n-            group.getADynMembership().getMembers().clear();\n-            for (AnyObject anyObject : matching) {\n-                group.getADynMembership().add(anyObject);\n-            }\n-        }\n         if (group.getUDynMembership() != null) {\n             List<User> matching = searchDAO.search(\n                     buildDynMembershipCond(group.getUDynMembership().getFIQLCond(), group.getRealm()),\n@@ -193,6 +184,16 @@ public Group save(final Group group) {\n                 group.getUDynMembership().add(user);\n             }\n         }\n+        for (ADynGroupMembership memb : group.getADynMemberships()) {\n+            List<AnyObject> matching = searchDAO.search(\n+                    buildDynMembershipCond(memb.getFIQLCond(), group.getRealm()),\n+                    AnyTypeKind.ANY_OBJECT);\n+\n+            memb.getMembers().clear();\n+            for (AnyObject anyObject : matching) {\n+                memb.add(anyObject);\n+            }\n+        }\n \n         return super.save(group);\n     }\n@@ -272,12 +273,14 @@ public List<TypeExtension> findTypeExtensionByAnyTypeClass(final AnyTypeClass an\n     @Override\n     public void refreshDynMemberships(final AnyObject anyObject) {\n         for (Group group : findAll()) {\n-            if (group.getADynMembership() != null && !searchDAO.matches(\n-                    anyObject,\n-                    buildDynMembershipCond(group.getADynMembership().getFIQLCond(), group.getRealm()),\n-                    AnyTypeKind.ANY_OBJECT)) {\n-\n-                group.getADynMembership().remove(anyObject);\n+            for (ADynGroupMembership memb : group.getADynMemberships()) {\n+                if (!searchDAO.matches(\n+                        anyObject,\n+                        buildDynMembershipCond(memb.getFIQLCond(), group.getRealm()),\n+                        AnyTypeKind.ANY_OBJECT)) {\n+\n+                    memb.remove(anyObject);\n+                }\n             }\n         }\n     }"},{"sha":"8fc70e3edc9b5c0a7c27d5f15e8835ddfb059e38","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -68,11 +68,11 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n@@ -103,7 +103,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAMapping;\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAMappingItem;\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAProvision;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n@@ -228,8 +228,8 @@ public <KEY, T extends Entity<KEY>> T newEntity(final Class<T> reference) {\n             result = (T) new JPASchedTask();\n         } else if (reference.equals(TaskExec.class)) {\n             result = (T) new JPATaskExec();\n-        } else if (reference.equals(AnyFilter.class)) {\n-            result = (T) new JPAAnyFilter();\n+        } else if (reference.equals(PushTaskAnyFilter.class)) {\n+            result = (T) new JPAPushTaskAnyFilter();\n         } else if (reference.equals(AnyTemplateSyncTask.class)) {\n             result = (T) new JPAAnyTemplateSyncTask();\n         } else if (reference.equals(SecurityQuestion.class)) {"},{"sha":"1d3d69e56a7454d010dce4e1d9bfd70c45ce0286","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAADynGroupMembership.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -25,12 +25,15 @@\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n+import javax.persistence.ManyToOne;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ADynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractDynMembership;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAAnyType;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup;\n \n @Entity\n@@ -47,6 +50,9 @@ public class JPAADynGroupMembership extends AbstractDynMembership<AnyObject> imp\n     @OneToOne\n     private JPAGroup group;\n \n+    @ManyToOne\n+    private JPAAnyType anyType;\n+\n     @ManyToMany\n     @JoinTable(joinColumns =\n             @JoinColumn(name = \"aDynGroupMembership_id\"),\n@@ -70,6 +76,17 @@ public void setGroup(final Group role) {\n         this.group = (JPAGroup) role;\n     }\n \n+    @Override\n+    public AnyType getAnyType() {\n+        return anyType;\n+    }\n+\n+    @Override\n+    public void setAnyType(final AnyType anyType) {\n+        checkType(anyType, JPAAnyType.class);\n+        this.anyType = (JPAAnyType) anyType;\n+    }\n+\n     @Override\n     public boolean add(final AnyObject anyObject) {\n         checkType(anyObject, JPAAnyObject.class);"},{"sha":"bd3cbce5f52d603a03f14ae283ae2c6b146eceac","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAGroup.java","status":"modified","additions":32,"deletions":16,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGroup.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -97,14 +97,13 @@ public class JPAGroup extends AbstractAny<GPlainAttr> implements Group {\n             @JoinColumn(name = \"anyTypeClass_name\"))\n     private List<JPAAnyTypeClass> auxClasses = new ArrayList<>();\n \n-    @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"group\")\n-    @Valid\n-    private JPAADynGroupMembership aDynMembership;\n-\n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"group\")\n     @Valid\n     private JPAUDynGroupMembership uDynMembership;\n \n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"group\")\n+    private List<JPAADynGroupMembership> aDynMemberships = new ArrayList<>();\n+\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"group\")\n     private List<JPATypeExtension> typeExtensions = new ArrayList<>();\n \n@@ -177,25 +176,14 @@ public List<? extends GPlainAttr> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n-    @Override\n-    public ADynGroupMembership getADynMembership() {\n-        return aDynMembership;\n-    }\n-\n-    @Override\n-    public void setADynMembership(final ADynGroupMembership aDynMembership) {\n-        checkType(aDynMembership, JPAADynGroupMembership.class);\n-        this.aDynMembership = (JPAADynGroupMembership) aDynMembership;\n-    }\n-\n     @Override\n     public UDynGroupMembership getUDynMembership() {\n         return uDynMembership;\n     }\n \n     @Override\n     public void setUDynMembership(final UDynGroupMembership uDynMembership) {\n-        checkType(aDynMembership, JPAADynGroupMembership.class);\n+        checkType(uDynMembership, JPAUDynGroupMembership.class);\n         this.uDynMembership = (JPAUDynGroupMembership) uDynMembership;\n     }\n \n@@ -216,6 +204,34 @@ public List<? extends AnyTypeClass> getAuxClasses() {\n         return auxClasses;\n     }\n \n+    @Override\n+    public boolean add(final ADynGroupMembership dynGroupMembership) {\n+        checkType(dynGroupMembership, JPAADynGroupMembership.class);\n+        return this.aDynMemberships.add((JPAADynGroupMembership) dynGroupMembership);\n+    }\n+\n+    @Override\n+    public boolean remove(final ADynGroupMembership dynGroupMembership) {\n+        checkType(dynGroupMembership, JPAADynGroupMembership.class);\n+        return this.aDynMemberships.remove((JPAADynGroupMembership) dynGroupMembership);\n+    }\n+\n+    @Override\n+    public ADynGroupMembership getADynMembership(final AnyType anyType) {\n+        return IterableUtils.find(aDynMemberships, new Predicate<ADynGroupMembership>() {\n+\n+            @Override\n+            public boolean evaluate(final ADynGroupMembership dynGroupMembership) {\n+                return anyType != null && anyType.equals(dynGroupMembership.getAnyType());\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public List<? extends ADynGroupMembership> getADynMemberships() {\n+        return aDynMemberships;\n+    }\n+\n     @Override\n     public boolean add(final TypeExtension typeExtension) {\n         checkType(typeExtension, JPATypeExtension.class);"},{"sha":"a6f6d75d25e6b07f056404024309e57fb8de0172","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTask.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -35,8 +35,8 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n \n @Entity\n @DiscriminatorValue(\"PushTask\")\n@@ -52,7 +52,7 @@ public class JPAPushTask extends AbstractProvisioningTask implements PushTask {\n     private Set<String> actionsClassNames = new HashSet<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pushTask\")\n-    private List<JPAAnyFilter> filters = new ArrayList<>();\n+    private List<JPAPushTaskAnyFilter> filters = new ArrayList<>();\n \n     /**\n      * Default constructor.\n@@ -67,30 +67,30 @@ public Set<String> getActionsClassNames() {\n     }\n \n     @Override\n-    public boolean add(final AnyFilter filter) {\n-        checkType(filter, JPAAnyFilter.class);\n-        return this.filters.add((JPAAnyFilter) filter);\n+    public boolean add(final PushTaskAnyFilter filter) {\n+        checkType(filter, JPAPushTaskAnyFilter.class);\n+        return this.filters.add((JPAPushTaskAnyFilter) filter);\n     }\n \n     @Override\n-    public boolean remove(final AnyFilter filter) {\n-        checkType(filter, JPAAnyFilter.class);\n-        return this.filters.remove((JPAAnyFilter) filter);\n+    public boolean remove(final PushTaskAnyFilter filter) {\n+        checkType(filter, JPAPushTaskAnyFilter.class);\n+        return this.filters.remove((JPAPushTaskAnyFilter) filter);\n     }\n \n     @Override\n-    public AnyFilter getFilter(final AnyType anyType) {\n-        return IterableUtils.find(filters, new Predicate<AnyFilter>() {\n+    public PushTaskAnyFilter getFilter(final AnyType anyType) {\n+        return IterableUtils.find(filters, new Predicate<PushTaskAnyFilter>() {\n \n             @Override\n-            public boolean evaluate(final AnyFilter filter) {\n+            public boolean evaluate(final PushTaskAnyFilter filter) {\n                 return anyType != null && anyType.equals(filter.getAnyType());\n             }\n         });\n     }\n \n     @Override\n-    public List<? extends AnyFilter> getFilters() {\n+    public List<? extends PushTaskAnyFilter> getFilters() {\n         return filters;\n     }\n }"},{"sha":"5a310bad8e99f769b320478ed66bd98c1aaeb400","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTaskAnyFilter.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -20,24 +20,24 @@\n \n import javax.persistence.Entity;\n import javax.persistence.Id;\n-import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n+import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractEntity;\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyType;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n \n @Entity\n-@Table(name = JPAAnyFilter.TABLE, uniqueConstraints =\n+@Table(name = JPAPushTaskAnyFilter.TABLE, uniqueConstraints =\n         @UniqueConstraint(columnNames = { \"pushTask_id\", \"anyType_name\" }))\n-public class JPAAnyFilter extends AbstractEntity<Long> implements AnyFilter {\n+public class JPAPushTaskAnyFilter extends AbstractEntity<Long> implements PushTaskAnyFilter {\n \n     private static final long serialVersionUID = 3517381731849788407L;\n \n-    public static final String TABLE = \"AnyFilter\";\n+    public static final String TABLE = \"PushTaskAnyFilter\";\n \n     @Id\n     private Long id;\n@@ -48,8 +48,8 @@ public class JPAAnyFilter extends AbstractEntity<Long> implements AnyFilter {\n     @ManyToOne\n     private JPAAnyType anyType;\n \n-    @Lob\n-    private String filter;\n+    @NotNull\n+    private String fiql;\n \n     @Override\n     public Long getKey() {\n@@ -79,13 +79,13 @@ public void setAnyType(final AnyType anyType) {\n     }\n \n     @Override\n-    public String get() {\n-        return filter;\n+    public String getFIQLCond() {\n+        return fiql;\n     }\n \n     @Override\n-    public void set(final String filter) {\n-        this.filter = filter;\n+    public void setFIQLCond(final String fiql) {\n+        this.fiql = fiql;\n     }\n \n }","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAAnyFilter.java"},{"sha":"5dd09022f658ebd498d3cf8dad1436181f6cf136","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/AbstractUDynMembership.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -20,12 +20,11 @@\n \n import java.util.List;\n import javax.persistence.MappedSuperclass;\n-import org.apache.syncope.core.persistence.api.entity.user.UDynMembership;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractDynMembership;\n \n @MappedSuperclass\n-public abstract class AbstractUDynMembership extends AbstractDynMembership<User> implements UDynMembership {\n+public abstract class AbstractUDynMembership extends AbstractDynMembership<User> {\n \n     private static final long serialVersionUID = 6296230283800203205L;\n "},{"sha":"090c482bbb9c16675b1b54f7737bb5417ac58020","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/GroupValidator.java","status":"modified","additions":33,"deletions":2,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FGroupValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FGroupValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FGroupValidator.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -18,19 +18,24 @@\n  */\n package org.apache.syncope.core.persistence.jpa.validation.entity;\n \n+import java.util.HashSet;\n+import java.util.Set;\n import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.ADynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n \n public class GroupValidator extends AbstractValidator<GroupCheck, Group> {\n \n     @Override\n-    public boolean isValid(final Group object, final ConstraintValidatorContext context) {\n+    public boolean isValid(final Group group, final ConstraintValidatorContext context) {\n         context.disableDefaultConstraintViolation();\n \n         boolean isValid = true;\n \n-        if (object.getUserOwner() != null && object.getGroupOwner() != null) {\n+        if (group.getUserOwner() != null && group.getGroupOwner() != null) {\n             isValid = false;\n \n             context.buildConstraintViolationWithTemplate(\n@@ -39,6 +44,32 @@ public boolean isValid(final Group object, final ConstraintValidatorContext cont\n                     addPropertyNode(\"owner\").addConstraintViolation();\n         }\n \n+        if (isValid) {\n+            Set<AnyType> anyTypes = new HashSet<>();\n+            for (ADynGroupMembership memb : group.getADynMemberships()) {\n+                anyTypes.add(memb.getAnyType());\n+\n+                if (memb.getAnyType().getKind() != AnyTypeKind.ANY_OBJECT) {\n+                    isValid = false;\n+\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidADynMemberships,\n+                                    \"No user or group dynamic membership condition are allowed here\")).\n+                            addPropertyNode(\"aDynMemberships\").addConstraintViolation();\n+                }\n+            }\n+\n+            if (isValid && anyTypes.size() < group.getADynMemberships().size()) {\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidADynMemberships,\n+                                \"Each dynamic membership condition requires a different \"\n+                                + AnyType.class.getSimpleName())).\n+                        addPropertyNode(\"aDynMemberships\").addConstraintViolation();\n+                return false;\n+            }\n+\n+        }\n+\n         return isValid;\n     }\n }"},{"sha":"72fadcd5ced4a1a4ef35726e4956692086ff6740","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-oracle.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -329,11 +329,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyFilter\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyFilter\" pk-column-value=\"SEQ_AnyFilter\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_PushTaskAnyFilter\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_PushTaskAnyFilter\" pk-column-value=\"SEQ_PushTaskAnyFilter\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"72fadcd5ced4a1a4ef35726e4956692086ff6740","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-sqlserver.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -329,11 +329,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyFilter\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyFilter\" pk-column-value=\"SEQ_AnyFilter\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_PushTaskAnyFilter\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_PushTaskAnyFilter\" pk-column-value=\"SEQ_PushTaskAnyFilter\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"5fc68ea66f8885f94604752fe05bcf4f144dec70","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -377,11 +377,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyFilter\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyFilter\" pk-column-value=\"SEQ_AnyFilter\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_PushTaskAnyFilter\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_PushTaskAnyFilter\" pk-column-value=\"SEQ_PushTaskAnyFilter\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"7d4067891c7ae581d76c0ac5e6d9ac7284662991","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -290,10 +290,11 @@ public void adynMembership() {\n         group.setName(\"new\");\n \n         ADynGroupMembership dynMembership = entityFactory.newEntity(ADynGroupMembership.class);\n+        dynMembership.setAnyType(anyTypeDAO.find(\"PRINTER\"));\n         dynMembership.setFIQLCond(\"model==Canon MFC8030\");\n         dynMembership.setGroup(group);\n \n-        group.setADynMembership(dynMembership);\n+        group.add(dynMembership);\n \n         Group actual = groupDAO.save(group);\n         assertNotNull(actual);\n@@ -303,14 +304,15 @@ public void adynMembership() {\n         // 2. verify that dynamic membership is there\n         actual = groupDAO.find(actual.getKey());\n         assertNotNull(actual);\n-        assertNotNull(actual.getADynMembership());\n-        assertNotNull(actual.getADynMembership().getKey());\n-        assertEquals(actual, actual.getADynMembership().getGroup());\n+        assertNotNull(actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")));\n+        assertNotNull(actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getKey());\n+        assertEquals(actual, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getGroup());\n \n         // 3. verify that expected any objects have the created group dynamically assigned\n-        assertEquals(2, actual.getADynMembership().getMembers().size());\n+        assertEquals(2, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().size());\n         assertEquals(new HashSet<>(Arrays.asList(1L, newAnyObjectKey)),\n-                CollectionUtils.collect(actual.getADynMembership().getMembers(), new Transformer<AnyObject, Long>() {\n+                CollectionUtils.collect(actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers(),\n+                        new Transformer<AnyObject, Long>() {\n \n                     @Override\n                     public Long transform(final AnyObject input) {\n@@ -322,19 +324,19 @@ public Long transform(final AnyObject input) {\n         assertNotNull(anyObject);\n         Collection<Group> dynGroupMemberships = findDynGroupMemberships(anyObject);\n         assertEquals(1, dynGroupMemberships.size());\n-        assertTrue(dynGroupMemberships.contains(actual.getADynMembership().getGroup()));\n+        assertTrue(dynGroupMemberships.contains(actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getGroup()));\n \n         // 4. delete the new any object and verify that dynamic membership was updated\n         anyObjectDAO.delete(newAnyObjectKey);\n \n         anyObjectDAO.flush();\n \n         actual = groupDAO.find(actual.getKey());\n-        assertEquals(1, actual.getADynMembership().getMembers().size());\n-        assertEquals(1L, actual.getADynMembership().getMembers().get(0).getKey(), 0);\n+        assertEquals(1, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().size());\n+        assertEquals(1L, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().get(0).getKey(), 0);\n \n         // 5. delete group and verify that dynamic membership was also removed\n-        Long dynMembershipKey = actual.getADynMembership().getKey();\n+        Long dynMembershipKey = actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getKey();\n \n         groupDAO.delete(actual);\n "},{"sha":"5acb4f937e0b3e4a49e165de2b7378cdf96150b7","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -986,7 +986,7 @@ under the License.\n   <AnyTemplateSyncTask id=\"41\" syncTask_id=\"4\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"leftType\":null,\"leftKey\":0,\"rightType\":\"GROUP\",\"rightKey\":8,\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"42\" syncTask_id=\"4\" anyType_name=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SchedTask\" type=\"SCHEDULED\" id=\"5\" name=\"SampleJob Task\" \n         jobDelegateClassName=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" operation=\"UPDATE\"\n@@ -999,7 +999,7 @@ under the License.\n   <AnyTemplateSyncTask id=\"71\" syncTask_id=\"7\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"72\" syncTask_id=\"7\" anyType_name=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"NotificationTask\" type=\"NOTIFICATION\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n@@ -1014,74 +1014,74 @@ under the License.\n   <AnyTemplateSyncTask id=\"1\" syncTask_id=\"11\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"readonly\":true,\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplateSyncTask id=\"2\" syncTask_id=\"11\" anyType_name=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"true\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"true\"]}]}'/>\n   <SyncTask_actionsClassNames SyncTask_id=\"11\" actionClassName=\"org.apache.syncope.core.provisioning.java.sync.LDAPMembershipSyncActions\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n         destinationRealm_id=\"1\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" syncMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"13\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>  \n-  <AnyFilter id=\"131\" anyType_name=\"USER\" pushTask_id=\"13\" filter=\"surname==Vivaldi\"/>\n-  <AnyFilter id=\"132\" anyType_name=\"GROUP\" pushTask_id=\"13\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"131\" anyType_name=\"USER\" pushTask_id=\"13\" fiql=\"surname==Vivaldi\"/>\n+  <PushTaskAnyFilter id=\"132\" anyType_name=\"GROUP\" pushTask_id=\"13\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"14\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n         unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\"/>\n-  <AnyFilter id=\"141\" anyType_name=\"USER\" pushTask_id=\"14\" filter=\"surname==Bellini\"/>\n-  <AnyFilter id=\"142\" anyType_name=\"GROUP\" pushTask_id=\"14\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"141\" anyType_name=\"USER\" pushTask_id=\"14\" fiql=\"surname==Bellini\"/>\n+  <PushTaskAnyFilter id=\"142\" anyType_name=\"GROUP\" pushTask_id=\"14\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"15\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\"/>\n-  <AnyFilter id=\"151\" anyType_name=\"USER\" pushTask_id=\"15\" filter=\"surname==Puccini\"/>\n-  <AnyFilter id=\"152\" anyType_name=\"GROUP\" pushTask_id=\"15\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"151\" anyType_name=\"USER\" pushTask_id=\"15\" fiql=\"surname==Puccini\"/>\n+  <PushTaskAnyFilter id=\"152\" anyType_name=\"GROUP\" pushTask_id=\"15\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"16\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n         unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\"/>\n-  <AnyFilter id=\"161\" anyType_name=\"USER\" pushTask_id=\"16\" filter=\"surname==Verdi\"/>\n-  <AnyFilter id=\"162\" anyType_name=\"GROUP\" pushTask_id=\"16\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"161\" anyType_name=\"USER\" pushTask_id=\"16\" fiql=\"surname==Verdi\"/>\n+  <PushTaskAnyFilter id=\"162\" anyType_name=\"GROUP\" pushTask_id=\"16\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"17\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\"/>\n-  <AnyFilter id=\"171\" anyType_name=\"USER\" pushTask_id=\"17\" filter=\"username==_NO_ONE_\"/>\n-  <AnyFilter id=\"172\" anyType_name=\"GROUP\" pushTask_id=\"17\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"171\" anyType_name=\"USER\" pushTask_id=\"17\" fiql=\"username==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"172\" anyType_name=\"GROUP\" pushTask_id=\"17\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"18\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\"/>\n-  <AnyFilter id=\"181\" anyType_name=\"USER\" pushTask_id=\"18\" filter=\"surname==Verdi\"/>\n-  <AnyFilter id=\"182\" anyType_name=\"GROUP\" pushTask_id=\"18\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"181\" anyType_name=\"USER\" pushTask_id=\"18\" fiql=\"surname==Verdi\"/>\n+  <PushTaskAnyFilter id=\"182\" anyType_name=\"GROUP\" pushTask_id=\"18\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"19\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\"/>\n-  <AnyFilter id=\"191\" anyType_name=\"USER\" pushTask_id=\"19\" filter=\"surname==Rossini\"/>\n-  <AnyFilter id=\"192\" anyType_name=\"GROUP\" pushTask_id=\"19\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"191\" anyType_name=\"USER\" pushTask_id=\"19\" fiql=\"surname==Rossini\"/>\n+  <PushTaskAnyFilter id=\"192\" anyType_name=\"GROUP\" pushTask_id=\"19\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"20\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"LINK\"/>\n-  <AnyFilter id=\"201\" anyType_name=\"USER\" pushTask_id=\"20\" filter=\"surname==Verdi\"/>\n-  <AnyFilter id=\"202\" anyType_name=\"GROUP\" pushTask_id=\"20\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"201\" anyType_name=\"USER\" pushTask_id=\"20\" fiql=\"surname==Verdi\"/>\n+  <PushTaskAnyFilter id=\"202\" anyType_name=\"GROUP\" pushTask_id=\"20\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"21\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\"/>\n-  <AnyFilter id=\"211\" anyType_name=\"USER\" pushTask_id=\"21\" filter=\"surname==Verdi\"/>\n-  <AnyFilter id=\"212\" anyType_name=\"GROUP\" pushTask_id=\"21\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"211\" anyType_name=\"USER\" pushTask_id=\"21\" fiql=\"surname==Verdi\"/>\n+  <PushTaskAnyFilter id=\"212\" anyType_name=\"GROUP\" pushTask_id=\"21\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"22\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n         \n         unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"/>\n-  <AnyFilter id=\"221\" anyType_name=\"USER\" pushTask_id=\"22\" filter=\"surname==Verdi\"/>\n-  <AnyFilter id=\"222\" anyType_name=\"GROUP\" pushTask_id=\"22\" filter=\"name==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"221\" anyType_name=\"USER\" pushTask_id=\"22\" fiql=\"surname==Verdi\"/>\n+  <PushTaskAnyFilter id=\"222\" anyType_name=\"GROUP\" pushTask_id=\"22\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"23\" name=\"Export on resource-ldap\" resource_name=\"resource-ldap\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n         unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\"/>\n-  <AnyFilter id=\"231\" anyType_name=\"USER\" pushTask_id=\"23\" filter=\"username==_NO_ONE_\"/>\n-  <AnyFilter id=\"232\" anyType_name=\"GROUP\" pushTask_id=\"23\" filter=\"name==citizen\"/>\n+  <PushTaskAnyFilter id=\"231\" anyType_name=\"USER\" pushTask_id=\"23\" fiql=\"username==_NO_ONE_\"/>\n+  <PushTaskAnyFilter id=\"232\" anyType_name=\"GROUP\" pushTask_id=\"23\" fiql=\"name==citizen\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"24\" name=\"CSV Task (update matching; provision unmatching)\" resource_name=\"resource-csv\"\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <AnyTemplateSyncTask id=\"3\" syncTask_id=\"24\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"readonly\":false,\"values\":[\"\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"4\" syncTask_id=\"24\" anyType_name=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"25\" name=\"CSV (unlink matching; ignore unmatching)\" resource_name=\"resource-csv\"\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\"/>"},{"sha":"5ddb8bc1cee1b904584d581ec7101e5942baf111","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":35,"deletions":24,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -60,7 +60,7 @@ public class GroupDataBinderImpl extends AbstractAnyDataBinder implements GroupD\n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n \n-    private void setDynMembership(final Group group, final AnyTypeKind anyTypeKind, final String dynMembershipFIQL) {\n+    private void setDynMembership(final Group group, final AnyType anyType, final String dynMembershipFIQL) {\n         SearchCond dynMembershipCond = SearchCondConverter.convert(dynMembershipFIQL);\n         if (!dynMembershipCond.isValid()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidSearchExpression);\n@@ -69,17 +69,17 @@ private void setDynMembership(final Group group, final AnyTypeKind anyTypeKind,\n         }\n \n         DynGroupMembership<?> dynMembership;\n-        if (anyTypeKind == AnyTypeKind.ANY_OBJECT && group.getADynMembership() == null) {\n+        if (anyType.getKind() == AnyTypeKind.ANY_OBJECT && group.getADynMembership(anyType) == null) {\n             dynMembership = entityFactory.newEntity(ADynGroupMembership.class);\n             dynMembership.setGroup(group);\n-            group.setADynMembership((ADynGroupMembership) dynMembership);\n-        } else if (anyTypeKind == AnyTypeKind.USER && group.getUDynMembership() == null) {\n+            group.add((ADynGroupMembership) dynMembership);\n+        } else if (anyType.getKind() == AnyTypeKind.USER && group.getUDynMembership() == null) {\n             dynMembership = entityFactory.newEntity(UDynGroupMembership.class);\n             dynMembership.setGroup(group);\n             group.setUDynMembership((UDynGroupMembership) dynMembership);\n         } else {\n-            dynMembership = anyTypeKind == AnyTypeKind.ANY_OBJECT\n-                    ? group.getADynMembership()\n+            dynMembership = anyType.getKind() == AnyTypeKind.ANY_OBJECT\n+                    ? group.getADynMembership(anyType)\n                     : group.getUDynMembership();\n         }\n         dynMembership.setFIQLCond(dynMembershipFIQL);\n@@ -129,11 +129,17 @@ public void create(final Group group, final GroupTO groupTO) {\n             }\n         }\n \n-        if (groupTO.getADynMembershipCond() != null) {\n-            setDynMembership(group, AnyTypeKind.ANY_OBJECT, groupTO.getADynMembershipCond());\n-        }\n+        // dynamic membership\n         if (groupTO.getUDynMembershipCond() != null) {\n-            setDynMembership(group, AnyTypeKind.USER, groupTO.getUDynMembershipCond());\n+            setDynMembership(group, anyTypeDAO.findUser(), groupTO.getUDynMembershipCond());\n+        }\n+        for (Map.Entry<String, String> entry : groupTO.getADynMembershipConds().entrySet()) {\n+            AnyType anyType = anyTypeDAO.find(entry.getKey());\n+            if (anyType == null) {\n+                LOG.warn(\"Ignoring invalid {}: {}\", AnyType.class.getSimpleName(), entry.getKey());\n+            } else {\n+                setDynMembership(group, anyType, entry.getValue());\n+            }\n         }\n \n         // type extensions\n@@ -218,20 +224,25 @@ public PropagationByResource update(final Group toBeUpdated, final GroupPatch gr\n         }\n \n         // dynamic membership\n-        if (groupPatch.getADynMembershipCond() != null) {\n-            if (groupPatch.getADynMembershipCond().getValue() == null) {\n-                group.setADynMembership(null);\n-            } else {\n-                group.getADynMembership().getMembers().clear();\n-                setDynMembership(group, AnyTypeKind.ANY_OBJECT, groupPatch.getADynMembershipCond().getValue());\n+        if (groupPatch.getUDynMembershipCond() == null) {\n+            if (group.getUDynMembership() != null) {\n+                group.getUDynMembership().setGroup(null);\n+                group.setUDynMembership(null);\n             }\n+        } else {\n+            setDynMembership(group, anyTypeDAO.findUser(), groupPatch.getUDynMembershipCond());\n         }\n-        if (groupPatch.getUDynMembershipCond() != null) {\n-            if (groupPatch.getUDynMembershipCond().getValue() == null) {\n-                group.setUDynMembership(null);\n+        for (Iterator<? extends ADynGroupMembership> itor = group.getADynMemberships().iterator(); itor.hasNext();) {\n+            ADynGroupMembership memb = itor.next();\n+            memb.setGroup(null);\n+            itor.remove();\n+        }\n+        for (Map.Entry<String, String> entry : groupPatch.getADynMembershipConds().entrySet()) {\n+            AnyType anyType = anyTypeDAO.find(entry.getKey());\n+            if (anyType == null) {\n+                LOG.warn(\"Ignoring invalid {}: {}\", AnyType.class.getSimpleName(), entry.getKey());\n             } else {\n-                group.getUDynMembership().getMembers().clear();\n-                setDynMembership(group, AnyTypeKind.USER, groupPatch.getUDynMembershipCond().getValue());\n+                setDynMembership(group, anyType, entry.getValue());\n             }\n         }\n \n@@ -317,12 +328,12 @@ public GroupTO getGroupTO(final Group group, final boolean details) {\n         fillTO(groupTO, group.getRealm().getFullPath(), group.getAuxClasses(),\n                 group.getPlainAttrs(), derAttrValues, virAttrValues, group.getResources());\n \n-        if (group.getADynMembership() != null) {\n-            groupTO.setADynMembershipCond(group.getADynMembership().getFIQLCond());\n-        }\n         if (group.getUDynMembership() != null) {\n             groupTO.setUDynMembershipCond(group.getUDynMembership().getFIQLCond());\n         }\n+        for (ADynGroupMembership memb : group.getADynMemberships()) {\n+            groupTO.getADynMembershipConds().put(memb.getAnyType().getKey(), memb.getFIQLCond());\n+        }\n \n         for (TypeExtension typeExt : group.getTypeExtensions()) {\n             TypeExtensionTO typeExtTO = new TypeExtensionTO();"},{"sha":"94dcd130361f179383b74431b63b1c6ec8df493f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -55,7 +55,6 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyFilter;\n import org.apache.syncope.core.persistence.api.entity.AnyTemplate;\n import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.provisioning.java.sync.PushJobDelegate;\n@@ -69,6 +68,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n \n @Component\n public class TaskDataBinderImpl implements TaskDataBinder {\n@@ -118,21 +118,21 @@ private void fill(final ProvisioningTask task, final AbstractProvisioningTaskTO\n                 if (type == null) {\n                     LOG.debug(\"Invalid AnyType {} specified, ignoring...\", entry.getKey());\n                 } else {\n-                    AnyFilter filter = pushTask.getFilter(type);\n+                    PushTaskAnyFilter filter = pushTask.getFilter(type);\n                     if (filter == null) {\n-                        filter = entityFactory.newEntity(AnyFilter.class);\n+                        filter = entityFactory.newEntity(PushTaskAnyFilter.class);\n                         filter.setAnyType(anyTypeDAO.find(entry.getKey()));\n                         filter.setPushTask(pushTask);\n                         pushTask.add(filter);\n                     }\n-                    filter.set(entry.getValue());\n+                    filter.setFIQLCond(entry.getValue());\n                 }\n             }\n             // remove all filters not contained in the TO\n-            CollectionUtils.filter(pushTask.getFilters(), new Predicate<AnyFilter>() {\n+            CollectionUtils.filter(pushTask.getFilters(), new Predicate<PushTaskAnyFilter>() {\n \n                 @Override\n-                public boolean evaluate(final AnyFilter anyFilter) {\n+                public boolean evaluate(final PushTaskAnyFilter anyFilter) {\n                     return pushTaskTO.getFilters().containsKey(anyFilter.getAnyType().getKey());\n                 }\n             });\n@@ -349,8 +349,8 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n                 ((PushTaskTO) taskTO).setUnmatchingRule(((PushTask) task).getUnmatchingRule() == null\n                         ? UnmatchingRule.ASSIGN : ((PushTask) task).getUnmatchingRule());\n \n-                for (AnyFilter filter : ((PushTask) task).getFilters()) {\n-                    ((PushTaskTO) taskTO).getFilters().put(filter.getAnyType().getKey(), filter.get());\n+                for (PushTaskAnyFilter filter : ((PushTask) task).getFilters()) {\n+                    ((PushTaskTO) taskTO).getFilters().put(filter.getAnyType().getKey(), filter.getFIQLCond());\n                 }\n                 break;\n "},{"sha":"ba70634a7c1df5adbe0eaad58917cd703d8dcf14","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/PushJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobDelegate.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -174,7 +174,7 @@ protected String doExecuteProvisioning(\n \n                 String filter = pushTask.getFilter(provision.getAnyType()) == null\n                         ? null\n-                        : pushTask.getFilter(provision.getAnyType()).get();\n+                        : pushTask.getFilter(provision.getAnyType()).getFIQLCond();\n                 if (StringUtils.isBlank(filter)) {\n                     handle(anyDAO.findAll(), handler, pushTask.getResource());\n                 } else {"},{"sha":"5d3ba010d1cb6500ee15a64b3cb3e9a072fd5407","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/706cd3671d72b773358442e4a634f8a6c0e3cf6f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/706cd3671d72b773358442e4a634f8a6c0e3cf6f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=706cd3671d72b773358442e4a634f8a6c0e3cf6f","patch":"@@ -556,7 +556,7 @@ public void dynMembership() {\n \n         GroupPatch mod = new GroupPatch();\n         mod.setKey(group.getKey());\n-        mod.setUDynMembershipCond(new StringReplacePatchItem.Builder().value(\"cool==false\").build());\n+        mod.setUDynMembershipCond(\"cool==false\");\n         groupService.update(mod);\n \n         assertTrue(userService.read(4L).getDynGroups().isEmpty());"}]}