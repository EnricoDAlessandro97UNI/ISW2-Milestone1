{"sha":"5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU5MzRkNTRmOGQyOGRkNzNkOWVlMWNlZTIxZWMxNGU0MjA5YWY1YmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-09T09:39:34Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-09T09:39:34Z"},"message":"[SYNCOPE-704] syncope-ext-swagger-ui provided; CXF's Swagger2Feature and Swagger's SwaggerSerializer extended","tree":{"sha":"430aee1e74a75be4e1a778956a1916bc7886c409","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/430aee1e74a75be4e1a778956a1916bc7886c409"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4cd1c1ea653d3a3cc23f042825452dc7f735738e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cd1c1ea653d3a3cc23f042825452dc7f735738e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4cd1c1ea653d3a3cc23f042825452dc7f735738e"}],"stats":{"total":1037,"additions":941,"deletions":96},"files":[{"sha":"49899c29d8dc705f39d231fe1b0a13f029670df0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -110,8 +110,8 @@ AttrTO read(\n      * Creates a new any object.\n      *\n      * @param anyTO any object to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created any object as well as the any\n-     * object itself enriched with propagation status information - <tt>AnyTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring Location header of created any object as well as the any\n+     * object itself enriched with propagation status information - AnyTO as Entity\n      */\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -122,8 +122,8 @@ AttrTO read(\n      * Updates any object matching the provided key.\n      *\n      * @param anyPatch modification to be applied to any object matching the provided key\n-     * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n-     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated any object enriched with propagation status information\n+     * - AnyTO as Entity\n      */\n     @PATCH\n     @Path(\"{key}\")\n@@ -137,7 +137,7 @@ AttrTO read(\n      * @param key any object key\n      * @param schemaType schema type\n      * @param attrTO attribute\n-     * @return <tt>Response</tt> object featuring the updated any object attribute - <tt>AttrTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated any object attribute - as Entity\n      */\n     @PUT\n     @Path(\"{key}/{schemaType}/{schema}\")\n@@ -152,8 +152,8 @@ Response update(\n      * Updates any object matching the provided key.\n      *\n      * @param anyTO complete update\n-     * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n-     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated any object enriched with propagation status information\n+     * - AnyTO as Entity\n      */\n     @PUT\n     @Path(\"{key}\")\n@@ -181,8 +181,8 @@ void delete(\n      * Deletes any object matching provided key.\n      *\n      * @param key key of any object to be deleted\n-     * @return <tt>Response</tt> object featuring the deleted any object enriched with propagation status information\n-     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the deleted any object enriched with propagation status information\n+     * - AnyTO as Entity\n      */\n     @DELETE\n     @Path(\"{key}\")\n@@ -194,7 +194,7 @@ void delete(\n      * Executes resource-related operations on given any object.\n      *\n      * @param patch external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n+     * @return Response object featuring BulkActionResult as Entity\n      */\n     @POST\n     @Path(\"{key}/deassociate/{action}\")\n@@ -206,7 +206,7 @@ void delete(\n      * Executes resource-related operations on given any object.\n      *\n      * @param patch external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n+     * @return Response object featuring BulkActionResult as Entity\n      */\n     @POST\n     @Path(\"{key}/associate/{action}\")"},{"sha":"fff0eb5519149b411a4617ab1712bde68bf19068","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      * Creates a new anyTypeClass.\n      *\n      * @param anyTypeClassTO anyTypeClass to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyTypeClass\n+     * @return Response object featuring Location header of created anyTypeClass\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"818bea4fae2ec9653d03ecf5ab1194a5f949fe73","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface AnyTypeService extends JAXRSService {\n      * Creates a new anyType.\n      *\n      * @param anyTypeTO anyType to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyType\n+     * @return Response object featuring Location header of created anyType\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"686d37301fe77f333661f17a4f93cbd72e966b3f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -142,7 +142,7 @@ ConnInstanceTO readByResource(\n      * Creates a new connector instance.\n      *\n      * @param connInstanceTO connector instance to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\n+     * @return Response object featuring Location header of created connector instance\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -168,6 +168,8 @@ ConnInstanceTO readByResource(\n     void delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n+     * Checks whether the connection to resource could be established.\n+     *\n      * @param connInstanceTO connector instance to be used for connection check\n      */\n     @POST"},{"sha":"9471f7a9703a53cea7291744f9a153facb8b5cb6","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface DomainService extends JAXRSService {\n      * Creates a new domain.\n      *\n      * @param domainTO domain to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created domain\n+     * @return Response object featuring Location header of created domain\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"d1e556d1ee5106ae100f3a926a6d0f5d365dc48d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -33,7 +33,7 @@\n public interface GroupService extends AnyService<GroupTO, GroupPatch> {\n \n     /**\n-     * This method is similar to <tt>read()</tt>, but uses different authentication handling to ensure that a user\n+     * This method is similar to read() but uses different authentication handling to ensure that a user\n      * can read his own groups.\n      *\n      * @return own groups"},{"sha":"1bdfbf81c3468f3647a4d30c79509f064d2b070a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface NotificationService extends JAXRSService {\n      * Creates a new notification.\n      *\n      * @param notificationTO Creates a new notification.\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\n+     * @return Response object featuring Location header of created notification\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"c39f98a193b84f151752ffbcf93ea24fd7881e4a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -67,32 +67,29 @@ public interface PolicyService extends JAXRSService {\n      * Create a new policy.\n      *\n      * @param policyTO Policy to be created (needs to match type)\n-     * @param <T> response type (extending PolicyTO)\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\n+     * @return Response object featuring Location header of created policy\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractPolicyTO> Response create(@NotNull T policyTO);\n+    Response create(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n      * Updates policy matching the given key.\n      *\n      * @param policyTO Policy to replace existing policy\n-     * @param <T> response type (extending PolicyTO)\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractPolicyTO> void update(@NotNull T policyTO);\n+    void update(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n      * Delete policy matching the given key.\n      *\n      * @param key key of policy to be deleted\n-     * @param <T> response type (extending PolicyTO)\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    <T extends AbstractPolicyTO> void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n \n }"},{"sha":"fdd0b6bfa72feaf92b5e828fe4a2ac3c13a5c76c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -63,7 +63,7 @@ public interface RealmService extends JAXRSService {\n      *\n      * @param parentPath full path of the parent realm\n      * @param realmTO new realm.\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created realm\n+     * @return Response object featuring Location header of created realm\n      */\n     @POST\n     @Path(\"{parentPath:.*}\")"},{"sha":"abfc6b6844b954cfc474167e8ffb70702ac494e1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      * Creates a new relationshipType.\n      *\n      * @param relationshipTypeTO relationshipType to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created relationshipType\n+     * @return Response object featuring Location header of created relationshipType\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"1f8399fed8813074678246390161279faa247309","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -79,7 +79,7 @@ public interface ReportService extends JAXRSService {\n      * Creates a new report.\n      *\n      * @param reportTO report to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\n+     * @return Response object featuring Location header of created report\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"7a3550b7e4d4c5a5ed2ec91b4b16042b9facbc6b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -103,7 +103,7 @@ PagedConnObjectTOResult listConnObjects(\n      * Creates a new resource.\n      *\n      * @param resourceTO Resource to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created resource\n+     * @return Response object featuring Location header of created resource\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -147,7 +147,7 @@ PagedConnObjectTOResult listConnObjects(\n      * @param anyTypeKey any object kind\n      * @param type resource de-association action type\n      * @param keys any object keys against which the bulk action will be performed\n-     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n+     * @return Response object featuring BulkActionResult as Entity\n      */\n     @POST\n     @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{action}\")"},{"sha":"45628c731030fef290f59ae63a6c18242fb6c093","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface RoleService extends JAXRSService {\n      * Creates a new role.\n      *\n      * @param roleTO role to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role\n+     * @return Response object featuring Location header of created role\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"4555bd9fe66ec3b2cc2778ea17e4171a5ee09fb0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -67,26 +67,24 @@ <T extends AbstractSchemaTO> T read(\n     /**\n      * Creates a new schema.\n      *\n-     * @param <T> actual SchemaTO\n      * @param type type for schema to be created\n      * @param schemaTO schema to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\n+     * @return Response object featuring Location header of created schema\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);\n+    Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n      * Updates the schema matching the given type and key.\n      *\n-     * @param <T> actual SchemaTO\n      * @param type type for schemas to be updated\n      * @param schemaTO updated schema to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);\n+    void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n      * Deletes the schema matching the given type and key."},{"sha":"810467924b290a0a7ca4832c3a8d15e3df4b7c42","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -62,7 +62,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      * Creates a new security question.\n      *\n      * @param securityQuestionTO security question to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created security question\n+     * @return Response object featuring Location header of created security question\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"772c09e311296df555063e4fce909f0a581cd256","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -24,6 +24,9 @@\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n \n+/**\n+ * General info about this Apache Syncope deployment.\n+ */\n @Path(\"\")\n public interface SyncopeService extends JAXRSService {\n "},{"sha":"2029a533fe84b992c04cd7cb23ccae0eb481b1d0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -92,12 +92,11 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n      * Creates a new task.\n      *\n      * @param taskTO task to be created\n-     * @param <T> type of taskTO\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\n+     * @return Response object featuring Location header of created task\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends SchedTaskTO> Response create(@NotNull T taskTO);\n+    Response create(@NotNull SchedTaskTO taskTO);\n \n     /**\n      * Updates the task matching the provided key."},{"sha":"745129f9eaa3f9b25c599905e44e1b8a1d555a3a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -55,8 +55,8 @@ public interface UserSelfService extends JAXRSService {\n      *\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of self-registered user as well as the user\n-     * itself - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring Location header of self-registered user as well as the user\n+     * itself - UserTO as Entity\n      */\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -68,7 +68,7 @@ Response create(@NotNull UserTO userTO,\n      * Self-updates user.\n      *\n      * @param patch modification to be applied to self\n-     * @return <tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated user - UserTO as Entity\n      */\n     @PATCH\n     @Path(\"{key}\")\n@@ -80,7 +80,7 @@ Response create(@NotNull UserTO userTO,\n      * Self-updates user.\n      *\n      * @param user complete update\n-     * @return <tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated user - UserTO as Entity\n      */\n     @PUT\n     @Path(\"{key}\")\n@@ -91,7 +91,7 @@ Response create(@NotNull UserTO userTO,\n     /**\n      * Self-deletes user.\n      *\n-     * @return <tt>Response</tt> object featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the deleted user - UserTO as Entity\n      */\n     @DELETE\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -102,7 +102,7 @@ Response create(@NotNull UserTO userTO,\n      *\n      * @param password the password value to update\n      *\n-     * @return <tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated user - UserTO as Entity\n      */\n     @POST\n     @Path(\"changePassword\")\n@@ -111,7 +111,7 @@ Response create(@NotNull UserTO userTO,\n \n     /**\n      * Provides answer for the security question configured for user matching the given username, if any.\n-     * If provided anwser matches the one stored for that user, a password reset token is internally generated,\n+     * If provided answer matches the one stored for that user, a password reset token is internally generated,\n      * otherwise an error is returned.\n      *\n      * @param username username for which the security answer is provided"},{"sha":"0368ef18e1780fa6ec9fcdb1cd8a60a1c5707704","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -43,7 +43,7 @@ public interface UserService extends AnyService<UserTO, UserPatch> {\n      * Gives the username for the provided user key.\n      *\n      * @param key user key\n-     * @return <tt>Response</tt> object featuring HTTP header with username matching the given key\n+     * @return Response object featuring HTTP header with username matching the given key\n      */\n     @OPTIONS\n     @Path(\"{key}/username\")\n@@ -53,7 +53,7 @@ public interface UserService extends AnyService<UserTO, UserPatch> {\n      * Gives the user key for the provided username.\n      *\n      * @param username username\n-     * @return <tt>Response</tt> object featuring HTTP header with key matching the given username\n+     * @return Response object featuring HTTP header with key matching the given username\n      */\n     @OPTIONS\n     @Path(\"{username}/key\")\n@@ -64,8 +64,8 @@ public interface UserService extends AnyService<UserTO, UserPatch> {\n      *\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the user itself\n-     * enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring Location header of created user as well as the user itself\n+     * enriched with propagation status information - UserTO as Entity\n      */\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -78,8 +78,8 @@ Response create(\n      * Performs a status update on given.\n      *\n      * @param statusPatch status update details\n-     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n-     * - <tt>UserTO</tt> as <tt>Entity</tt>\n+     * @return Response object featuring the updated user enriched with propagation status information\n+     * - UserTO as Entity\n      */\n     @POST\n     @Path(\"{key}/status\")"},{"sha":"1a1370c6005b97acd73509f3b8203f7e9560b13b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n- * REST operations for workflow definition management.\n+ * REST operations for workflow definition.\n  */\n @Path(\"workflows/{anyTypeKind}\")\n public interface WorkflowService extends JAXRSService {"},{"sha":"808c7dd3d4fe108556d828d289d298de94f9eb9f","filename":"core/rest-cxf/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fpom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -106,6 +106,11 @@ under the License.\n       <classifier>javadoc</classifier>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>io.swagger</groupId>\n+      <artifactId>swagger-jaxrs</artifactId>\n+    </dependency>\n+        \n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n       <artifactId>syncope-core-logic</artifactId>"},{"sha":"8f29f604f0c8a542d639f2e159f36d594197fc03","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeSwagger2Feature.java","status":"added","additions":137,"deletions":0,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwagger2Feature.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwagger2Feature.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwagger2Feature.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import io.swagger.jaxrs.config.BeanConfig;\n+import io.swagger.jaxrs.config.DefaultReaderConfig;\n+import io.swagger.jaxrs.config.ReaderConfig;\n+import io.swagger.jaxrs.listing.ApiListingResource;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Set;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.core.Context;\n+import org.apache.cxf.BusFactory;\n+import org.apache.cxf.common.util.StringUtils;\n+import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.JAXRSServiceFactoryBean;\n+import org.apache.cxf.jaxrs.ext.MessageContext;\n+import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n+import org.apache.cxf.jaxrs.model.wadl.DocumentationProvider;\n+import org.apache.cxf.jaxrs.model.wadl.JavaDocProvider;\n+import org.apache.cxf.jaxrs.provider.ServerProviderFactory;\n+import org.apache.cxf.jaxrs.swagger.Swagger2Feature;\n+import org.apache.cxf.jaxrs.utils.InjectionUtils;\n+\n+public class SyncopeSwagger2Feature extends Swagger2Feature {\n+\n+    private boolean dynamicBasePath;\n+\n+    private boolean replaceTags;\n+\n+    private DocumentationProvider javadocProvider;\n+\n+    public void setDynamicBasePath(final boolean dynamicBasePath) {\n+        this.dynamicBasePath = dynamicBasePath;\n+    }\n+\n+    public void setReplaceTags(final boolean replaceTags) {\n+        this.replaceTags = replaceTags;\n+    }\n+\n+    public void setJavaDocPath(final String javaDocPath) throws Exception {\n+        this.javadocProvider = new JavaDocProvider(BusFactory.getDefaultBus(), javaDocPath);\n+    }\n+\n+    @Override\n+    protected void addSwaggerResource(final Server server) {\n+        List<ClassResourceInfo> cris = Collections.emptyList();\n+        if (!runAsFilter) {\n+            List<Object> serviceBeans = new ArrayList<>();\n+            ApiListingResource apiListingResource = new ApiListingResource();\n+            serviceBeans.add(apiListingResource);\n+            JAXRSServiceFactoryBean sfb =\n+                    (JAXRSServiceFactoryBean) server.getEndpoint().get(JAXRSServiceFactoryBean.class.getName());\n+            sfb.setResourceClassesFromBeans(serviceBeans);\n+            cris = sfb.getClassResourceInfo();\n+            for (ClassResourceInfo cri : cris) {\n+                if (ApiListingResource.class == cri.getResourceClass()) {\n+                    InjectionUtils.injectContextProxiesAndApplication(cri, apiListingResource, null);\n+                }\n+            }\n+        }\n+        List<Object> providers = new ArrayList<>();\n+        providers.add(new SyncopeSwaggerSerializers(dynamicBasePath, replaceTags, javadocProvider, cris));\n+        providers.add(new ReaderConfigFilter());\n+        ((ServerProviderFactory) server.getEndpoint().get(\n+                ServerProviderFactory.class.getName())).setUserProviders(providers);\n+\n+        BeanConfig beanConfig = new BeanConfig();\n+        beanConfig.setResourcePackage(getResourcePackage());\n+        beanConfig.setVersion(getVersion());\n+        beanConfig.setBasePath(getBasePath());\n+        beanConfig.setHost(getHost());\n+        beanConfig.setSchemes(getSchemes());\n+        beanConfig.setTitle(getTitle());\n+        beanConfig.setDescription(getDescription());\n+        beanConfig.setContact(getContact());\n+        beanConfig.setLicense(getLicense());\n+        beanConfig.setLicenseUrl(getLicenseUrl());\n+        beanConfig.setTermsOfServiceUrl(getTermsOfServiceUrl());\n+        beanConfig.setScan(isScan());\n+        beanConfig.setPrettyPrint(isPrettyPrint());\n+        beanConfig.setFilterClass(getFilterClass());\n+    }\n+\n+    private class ReaderConfigFilter implements ContainerRequestFilter {\n+\n+        @Context\n+        private MessageContext mc;\n+\n+        @Override\n+        public void filter(final ContainerRequestContext requestContext) throws IOException {\n+            if (mc.getServletContext().getAttribute(ReaderConfig.class.getName()) == null) {\n+                if (mc.getServletConfig() != null\n+                        && Boolean.valueOf(mc.getServletConfig().getInitParameter(\"scan.all.resources\"))) {\n+\n+                    addReaderConfig(mc.getServletConfig().getInitParameter(\"ignore.routes\"));\n+                } else if (isScanAllResources()) {\n+                    addReaderConfig(getIgnoreRoutes());\n+                }\n+            }\n+        }\n+\n+        private void addReaderConfig(final String ignoreRoutesParam) {\n+            DefaultReaderConfig rc = new DefaultReaderConfig();\n+            rc.setScanAllResources(true);\n+            if (ignoreRoutesParam != null) {\n+                Set<String> routes = new LinkedHashSet<>();\n+                for (String route : StringUtils.split(ignoreRoutesParam, \",\")) {\n+                    routes.add(route.trim());\n+                }\n+                rc.setIgnoredRoutes(routes);\n+            }\n+            mc.getServletContext().setAttribute(ReaderConfig.class.getName(), rc);\n+        }\n+    }\n+}"},{"sha":"5596c2a261721f2331ffd2bb9ca3deb7c3e7228e","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeSwaggerSerializers.java","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwaggerSerializers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwaggerSerializers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeSwaggerSerializers.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import io.swagger.jaxrs.listing.SwaggerSerializers;\n+import io.swagger.models.HttpMethod;\n+import io.swagger.models.Operation;\n+import io.swagger.models.Path;\n+import io.swagger.models.Swagger;\n+import io.swagger.models.Tag;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.jaxrs.ext.MessageContext;\n+import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n+import org.apache.cxf.jaxrs.model.OperationResourceInfo;\n+import org.apache.cxf.jaxrs.model.wadl.DocumentationProvider;\n+import org.apache.cxf.jaxrs.utils.JAXRSUtils;\n+\n+public class SyncopeSwaggerSerializers extends SwaggerSerializers {\n+\n+    private final boolean dynamicBasePath;\n+\n+    private final boolean replaceTags;\n+\n+    private final DocumentationProvider javadocProvider;\n+\n+    private final List<ClassResourceInfo> cris;\n+\n+    public SyncopeSwaggerSerializers(\n+            final boolean dynamicBasePath,\n+            final boolean replaceTags,\n+            final DocumentationProvider javadocProvider,\n+            final List<ClassResourceInfo> cris) {\n+\n+        super();\n+\n+        this.dynamicBasePath = dynamicBasePath;\n+        this.replaceTags = replaceTags;\n+        this.javadocProvider = javadocProvider;\n+        this.cris = cris;\n+    }\n+\n+    @Override\n+    public void writeTo(\n+            final Swagger data,\n+            final Class<?> type,\n+            final Type genericType,\n+            final Annotation[] annotations,\n+            final MediaType mediaType,\n+            final MultivaluedMap<String, Object> headers,\n+            final OutputStream out) throws IOException {\n+\n+        if (dynamicBasePath) {\n+            MessageContext ctx = JAXRSUtils.createContextValue(\n+                    JAXRSUtils.getCurrentMessage(), null, MessageContext.class);\n+            data.setBasePath(StringUtils.substringBeforeLast(ctx.getHttpServletRequest().getRequestURI(), \"/\"));\n+        }\n+\n+        if (replaceTags || javadocProvider != null) {\n+            Map<String, ClassResourceInfo> operations = new HashMap<>();\n+            Map<Pair<String, String>, OperationResourceInfo> methods = new HashMap<>();\n+            for (ClassResourceInfo cri : cris) {\n+                for (OperationResourceInfo ori : cri.getMethodDispatcher().getOperationResourceInfos()) {\n+                    StringBuilder fullPath = new StringBuilder().\n+                            append(cri.getURITemplate().getValue()).\n+                            append(ori.getURITemplate().getValue());\n+                    if (fullPath.charAt(fullPath.length() - 1) == '/') {\n+                        fullPath.setLength(fullPath.length() - 1);\n+                    }\n+                    // Adapt to Swagger's path expression\n+                    if (fullPath.toString().endsWith(\":.*}\")) {\n+                        fullPath.setLength(fullPath.length() - 4);\n+                        fullPath.append('}');\n+                    }\n+\n+                    operations.put(fullPath.toString(), cri);\n+                    methods.put(ImmutablePair.of(ori.getHttpMethod(), fullPath.toString()), ori);\n+                }\n+            }\n+\n+            if (replaceTags && data.getTags() != null) {\n+                data.getTags().clear();\n+            }\n+            for (final Map.Entry<String, Path> entry : data.getPaths().entrySet()) {\n+                Tag tag = null;\n+                if (replaceTags && operations.containsKey(entry.getKey())) {\n+                    ClassResourceInfo cri = operations.get(entry.getKey());\n+\n+                    tag = new Tag();\n+                    tag.setName(cri.getURITemplate().getValue());\n+                    if (javadocProvider != null) {\n+                        tag.setDescription(javadocProvider.getClassDoc(cri));\n+                    }\n+\n+                    data.addTag(tag);\n+                }\n+\n+                for (Map.Entry<HttpMethod, Operation> subentry : entry.getValue().getOperationMap().entrySet()) {\n+                    if (replaceTags && tag != null) {\n+                        subentry.getValue().setTags(Collections.singletonList(tag.getName()));\n+                    }\n+\n+                    Pair<String, String> key = ImmutablePair.of(subentry.getKey().name(), entry.getKey());\n+                    if (methods.containsKey(key) && javadocProvider != null) {\n+                        OperationResourceInfo ori = methods.get(key);\n+\n+                        subentry.getValue().setSummary(javadocProvider.getMethodDoc(ori));\n+                        for (int i = 0; i < subentry.getValue().getParameters().size(); i++) {\n+                            subentry.getValue().getParameters().get(i).\n+                                    setDescription(javadocProvider.getMethodParameterDoc(ori, i));\n+                        }\n+\n+                        if (subentry.getValue().getResponses() != null\n+                                && !subentry.getValue().getResponses().isEmpty()) {\n+\n+                            subentry.getValue().getResponses().entrySet().iterator().next().getValue().\n+                                    setDescription(javadocProvider.getMethodResponseDoc(ori));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        super.writeTo(data, type, genericType, annotations, mediaType, headers, out);\n+    }\n+}"},{"sha":"534ae9f10228598f8c849808c860e2393b145eb9","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"modified","additions":36,"deletions":14,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.core.rest.cxf;\n \n import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n import java.net.URL;\n import java.rmi.ServerException;\n import java.util.HashMap;\n@@ -29,19 +31,34 @@\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.MediaType;\n import org.apache.cocoon.pipeline.CachingPipeline;\n import org.apache.cocoon.pipeline.Pipeline;\n import org.apache.cocoon.sax.SAXPipelineComponent;\n import org.apache.cocoon.sax.component.XMLGenerator;\n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.apache.cocoon.sax.component.XSLTTransformer;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n \n public class WADLServlet extends HttpServlet {\n \n     private static final long serialVersionUID = -6737005675471095560L;\n \n     private static final Pattern SCHEMA_PATTERN = Pattern.compile(\"/schema_(.*)_(.*)\\\\.html\");\n \n+    protected void finish(final Pipeline<SAXPipelineComponent> pipeline, final HttpServletResponse response)\n+            throws ServletException, IOException {\n+\n+        pipeline.addComponent(XMLSerializer.createHTML4Serializer());\n+        pipeline.setup(response.getOutputStream());\n+        try {\n+            pipeline.execute();\n+        } catch (Exception e) {\n+            throw new ServletException(e);\n+        }\n+    }\n+\n     /**\n      * Handles the HTTP <code>GET</code> method.\n      *\n@@ -54,22 +71,22 @@ public class WADLServlet extends HttpServlet {\n     protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n             throws ServletException, IOException {\n \n-        String requestURI = request.getRequestURI().substring(\n-                request.getRequestURI().indexOf(request.getServletPath()) + request.getServletPath().length());\n-        Matcher schemaMatcher = SCHEMA_PATTERN.matcher(requestURI);\n+        Matcher schemaMatcher = SCHEMA_PATTERN.matcher(request.getServletPath());\n \n         Pipeline<SAXPipelineComponent> pipeline = new CachingPipeline<>();\n-        final String wadlURL = request.getRequestURL().\n-                substring(0, request.getRequestURL().indexOf(\"/doc\")) + \"/?_wadl\";\n+        String wadlURL = StringUtils.substringBeforeLast(request.getRequestURL().toString(), \"/\")\n+                + \"/rest/?_wadl\";\n         pipeline.addComponent(new XMLGenerator(new URL(wadlURL)));\n-        if (\"/\".equals(requestURI)) {\n+        if (\"/index.html\".equals(request.getServletPath())) {\n             XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/index.xsl\"));\n \n             Map<String, Object> parameters = new HashMap<>();\n             parameters.put(\"contextPath\", request.getContextPath());\n             xslt.setParameters(parameters);\n \n             pipeline.addComponent(xslt);\n+\n+            finish(pipeline, response);\n         } else if (schemaMatcher.matches()) {\n             XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/schema.xsl\"));\n \n@@ -80,17 +97,22 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n             xslt.setParameters(parameters);\n \n             pipeline.addComponent(xslt);\n+\n+            finish(pipeline, response);\n+        } else if (\"/syncope.wadl\".equals(request.getServletPath())) {\n+            response.setContentType(MediaType.APPLICATION_XML);\n+\n+            InputStream in = new URL(wadlURL).openStream();\n+            OutputStream out = response.getOutputStream();\n+            try {\n+                IOUtils.copy(in, out);\n+            } finally {\n+                IOUtils.closeQuietly(in);\n+                IOUtils.closeQuietly(out);\n+            }\n         } else {\n             throw new ServerException(\"URL not supported: \" + request.getRequestURI());\n         }\n-\n-        pipeline.addComponent(XMLSerializer.createHTML4Serializer());\n-        pipeline.setup(response.getOutputStream());\n-        try {\n-            pipeline.execute();\n-        } catch (Exception e) {\n-            throw new ServletException(e);\n-        }\n     }\n \n }"},{"sha":"5e819781b14f9d3efe7d069d9c8cb12ccdb7f908","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -39,8 +39,8 @@ public class PolicyServiceImpl extends AbstractServiceImpl implements PolicyServ\n     private PolicyLogic logic;\n \n     @Override\n-    public <T extends AbstractPolicyTO> Response create(final T policyTO) {\n-        T policy = logic.create(policyTO);\n+    public Response create(final AbstractPolicyTO policyTO) {\n+        AbstractPolicyTO policy = logic.create(policyTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(policy.getKey())).build();\n         return Response.created(location).\n                 header(RESTHeaders.RESOURCE_KEY, policy.getKey()).\n@@ -63,7 +63,7 @@ public <T extends AbstractPolicyTO> T read(final Long key) {\n     }\n \n     @Override\n-    public <T extends AbstractPolicyTO> void update(final T policyTO) {\n+    public void update(final AbstractPolicyTO policyTO) {\n         switch (policyTO.getType()) {\n             case ACCOUNT:\n                 logic.update((AccountPolicyTO) policyTO);"},{"sha":"d5380ab7441682cb8320cbcee2011a89c7f54827","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -36,8 +36,8 @@ public class SchemaServiceImpl extends AbstractServiceImpl implements SchemaServ\n     private SchemaLogic logic;\n \n     @Override\n-    public <T extends AbstractSchemaTO> Response create(final SchemaType schemaType, final T schemaTO) {\n-        T created = logic.create(schemaType, schemaTO);\n+    public Response create(final SchemaType schemaType, final AbstractSchemaTO schemaTO) {\n+        AbstractSchemaTO created = logic.create(schemaType, schemaTO);\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n         return Response.created(location).\n@@ -61,7 +61,7 @@ public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final St\n     }\n \n     @Override\n-    public <T extends AbstractSchemaTO> void update(final SchemaType schemaType, final T schemaTO) {\n+    public void update(final SchemaType schemaType, final AbstractSchemaTO schemaTO) {\n         logic.update(schemaType, schemaTO);\n     }\n }"},{"sha":"2f9de23276a9bf3960b1d82d7d79aeaedea8cd09","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -47,8 +47,8 @@ public class TaskServiceImpl extends AbstractServiceImpl implements TaskService\n     private TaskLogic logic;\n \n     @Override\n-    public <T extends SchedTaskTO> Response create(final T taskTO) {\n-        T createdTask;\n+    public Response create(final SchedTaskTO taskTO) {\n+        SchedTaskTO createdTask;\n         if (taskTO instanceof SyncTaskTO || taskTO instanceof PushTaskTO || taskTO instanceof SchedTaskTO) {\n             createdTask = logic.createSchedTask(taskTO);\n         } else {"},{"sha":"ee514880e5ccd54f95da678373ed94d6f0b71e28","filename":"core/rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -54,7 +54,9 @@ under the License.\n   </servlet>\n   <servlet-mapping>\n     <servlet-name>WADLServlet</servlet-name>\n-    <url-pattern>/rest/doc/*</url-pattern>\n+    <url-pattern>/index.html</url-pattern>\n+    <url-pattern>/schema_1_syncope1.html</url-pattern>\n+    <url-pattern>/syncope.wadl</url-pattern>\n   </servlet-mapping>\n \n   <filter>"},{"sha":"b12c9d495f206383a372f014b9e9c45f0f544eb1","filename":"core/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":18,"deletions":1,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -77,7 +77,7 @@ under the License.\n   </bean>   \n   \n   <bean id=\"searchContextProvider\" class=\"org.apache.cxf.jaxrs.ext.search.SearchContextProvider\"/>\n-  \n+    \n   <bean id=\"addDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.AddDomainFilter\"/>\n   <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.rest.cxf.AddETagFilter\"/>\n   \n@@ -92,6 +92,20 @@ under the License.\n     <property name=\"javaDocPath\" value=\"/WEB-INF/lib/syncope-common-rest-api-${syncope.version}-javadoc.jar\"/>\n   </bean>\n   \n+  <bean id=\"swagger2Feature\" class=\"org.apache.syncope.core.rest.cxf.SyncopeSwagger2Feature\">\n+    <property name=\"title\" value=\"Apache Syncope\"/>\n+    <property name=\"version\" value=\"${syncope.version}\"/>\n+    <property name=\"description\" value=\"Apache Syncope ${syncope.version}\"/>    \n+    <property name=\"contact\" value=\"dev@syncope.apache.org\"/>    \n+    \n+    <property name=\"resourcePackage\" value=\"org.apache.syncope.common.rest.api.service\"/>\n+    <property name=\"scanAllResources\" value=\"true\"/>\n+    \n+    <property name=\"dynamicBasePath\" value=\"true\"/>\n+    <property name=\"replaceTags\" value=\"true\"/>\n+    <property name=\"javaDocPath\" value=\"/WEB-INF/lib/syncope-common-rest-api-${syncope.version}-javadoc.jar\"/>\n+  </bean>\n+\n   <jaxrs:server id=\"restContainer\" address=\"/\"\n                 basePackages=\"org.apache.syncope.common.rest.api.service, org.apache.syncope.core.rest.cxf.service\" \n                 staticSubresourceResolution=\"true\">\n@@ -114,6 +128,9 @@ under the License.\n       <ref bean=\"addETagFilter\"/>\n       <ref bean=\"wadlGenerator\"/>\n     </jaxrs:providers>\n+    <jaxrs:features>\n+      <ref bean=\"swagger2Feature\"/>\n+    </jaxrs:features>\n     <jaxrs:extensionMappings>\n       <entry key=\"json\" value=\"application/json;charset=UTF-8\"/>\n       <entry key=\"xml\" value=\"application/xml;charset=UTF-8\"/>"},{"sha":"b0012f4570b5019f085ea3743e57c54ab6029f15","filename":"core/rest-cxf/src/main/resources/wadl2html/index.xsl","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -113,12 +113,12 @@\n               });\n             </xsl:text>\n             \n-            <xsl:variable name=\"parentResourcePath\" select=\"translate(@path, '/{}:.*', '______')\"/>\n+            <xsl:variable name=\"parentResourcePath\" select=\"translate(@path, '|/{}:.*', '_______')\"/>\n             <xsl:call-template name=\"dialog-init\">\n               <xsl:with-param name=\"resourcePath\" select=\"$parentResourcePath\"/>\n             </xsl:call-template>\n             <xsl:for-each select=\"wadl:resource\">\n-              <xsl:variable name=\"childResourcePath\" select=\"translate(@path, '/{}:.*', '______')\"/>\n+              <xsl:variable name=\"childResourcePath\" select=\"translate(@path, '|/{}:.*', '_______')\"/>\n               <xsl:call-template name=\"dialog-init\">\n                 <xsl:with-param name=\"resourcePath\" select=\"concat($parentResourcePath, $childResourcePath)\"/>\n               </xsl:call-template>\n@@ -253,7 +253,7 @@\n   <xsl:template name=\"methods\">\n     <xsl:param name=\"resourcePath\"/>\n \n-    <xsl:variable name=\"escapedPath\" select=\"translate($resourcePath, '/{}:.*', '______')\"/>\n+    <xsl:variable name=\"escapedPath\" select=\"translate($resourcePath, '|/{}:.*', '_______')\"/>\n     <div class=\"methods\">\n       <xsl:for-each select=\"wadl:method\">\n         <button id=\"opener{$escapedPath}_{position()}\">"},{"sha":"8c6e6a516d224c7c52fdd7d003df4ec226a5ff25","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRouteRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -41,7 +41,7 @@ public CamelRouteTO read(final String key) {\n     public void update(final String key, final String content) {\n         CamelRouteTO routeTO = read(key);\n         routeTO.setContent(content);\n-        getService(CamelRouteService.class).update(key, routeTO);\n+        getService(CamelRouteService.class).update(routeTO);\n     }\n \n     public boolean isCamelEnabledFor(final AnyTypeKind anyTypeKind) {"},{"sha":"620a656551c81edfadffed3feafd9cd0b10a3853","filename":"ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/to/CamelRouteTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -18,6 +18,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -39,6 +40,7 @@ public String getKey() {\n         return name;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final String key) {\n         this.name = key;\n     }"},{"sha":"6d7fd507cb17b9d54d36753fcc3fdb711f724320","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -32,23 +32,46 @@\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n+/**\n+ * REST operations for Camel routes.\n+ */\n @Path(\"camelRoutes\")\n public interface CamelRouteService extends JAXRSService {\n \n+    /**\n+     * List all routes for the given any type kind.\n+     *\n+     * @param anyTypeKind any type kind\n+     * @return all routes for the given any type kind\n+     */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<CamelRouteTO> list(@NotNull @MatrixParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n+    /**\n+     * Read the route with the given key.\n+     *\n+     * @param key route key\n+     * @return route with given key\n+     */\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     CamelRouteTO read(@NotNull @PathParam(\"key\") String key);\n \n+    /**\n+     * Update the given route.\n+     *\n+     * @param route to be updated\n+     */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") String key, @NotNull CamelRouteTO route);\n+    void update(@NotNull CamelRouteTO route);\n \n+    /**\n+     * Restart the underlying Apache Camel context.\n+     */\n     @POST\n     @Path(\"restartContext\")\n     void restartContext();"},{"sha":"2ca3f6ae8b9b1d761c081176ae383243b2a077c2","filename":"ext/camel/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/CamelRouteServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -43,8 +43,7 @@ public CamelRouteTO read(final String key) {\n     }\n \n     @Override\n-    public void update(final String key, final CamelRouteTO route) {\n-        route.setKey(key);\n+    public void update(final CamelRouteTO route) {\n         logic.update(route);\n     }\n "},{"sha":"963caf90a55c8d88442624a2b80a703b72d079c5","filename":"ext/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -58,6 +58,7 @@ under the License.\n   \n   <modules>\n     <module>camel</module>\n+    <module>swagger-ui</module>\n   </modules>\n \n </project>"},{"sha":"0b6299b3d76835d948843628f7307bd1fce23a86","filename":"ext/swagger-ui/pom.xml","status":"added","additions":107,"deletions":0,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fswagger-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fswagger-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fpom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -0,0 +1,107 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-ext</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Extensions: Swagger UI</name>\n+  <description>Apache Syncope Extensions: Swagger UI</description>\n+  <groupId>org.apache.syncope.ext</groupId>\n+  <artifactId>syncope-ext-swagger-ui</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <phase>generate-resources</phase>\n+            <goals>\n+              <goal>unpack</goal>\n+            </goals>\n+            <configuration>\n+              <artifactItems>\n+                <artifactItem>\n+                  <groupId>org.webjars</groupId>\n+                  <artifactId>swagger-ui</artifactId>\n+                  <version>${swagger-ui.version}</version>\n+                  <overWrite>true</overWrite>\n+                  <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>\n+                  <excludes>**/*.gz</excludes>\n+                </artifactItem>\n+              </artifactItems>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-resources-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>copy-resources</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy-resources</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.directory}/classes/META-INF/resources/swagger</outputDirectory>\n+              <resources>\n+                <resource>\n+                  <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>\n+                  <excludes>\n+                    <exclude>index.html</exclude>\n+                  </excludes>\n+                </resource>\n+              </resources>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"82e73bfb90cee20de7dccb14e45941ceb6051a6d","filename":"ext/swagger-ui/src/main/resources/META-INF/resources/swagger/index.html","status":"added","additions":163,"deletions":0,"changes":163,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -0,0 +1,163 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html>\n+  <head>\n+    <meta charset=\"UTF-8\">\n+    <!-- <ApacheSyncope -->\n+    <!--<title>Swagger UI</title>-->\n+    <title>Swagger UI - Apache Syncope ${syncope.version}</title>\n+    <!-- </ApacheSyncope -->\n+    <link rel=\"icon\" type=\"image/png\" href=\"images/favicon-32x32.png\" sizes=\"32x32\" />\n+    <link rel=\"icon\" type=\"image/png\" href=\"images/favicon-16x16.png\" sizes=\"16x16\" />\n+    <link href='css/typography.css' media='screen' rel='stylesheet' type='text/css'/>\n+    <link href='css/reset.css' media='screen' rel='stylesheet' type='text/css'/>\n+    <link href='css/screen.css' media='screen' rel='stylesheet' type='text/css'/>\n+    <link href='css/reset.css' media='print' rel='stylesheet' type='text/css'/>\n+    <link href='css/print.css' media='print' rel='stylesheet' type='text/css'/>\n+    <script src='lib/jquery-1.8.0.min.js' type='text/javascript'></script>\n+    <script src='lib/jquery.slideto.min.js' type='text/javascript'></script>\n+    <script src='lib/jquery.wiggle.min.js' type='text/javascript'></script>\n+    <script src='lib/jquery.ba-bbq.min.js' type='text/javascript'></script>\n+    <script src='lib/handlebars-2.0.0.js' type='text/javascript'></script>\n+    <script src='lib/underscore-min.js' type='text/javascript'></script>\n+    <script src='lib/backbone-min.js' type='text/javascript'></script>\n+    <script src='swagger-ui.js' type='text/javascript'></script>\n+    <script src='lib/highlight.7.3.pack.js' type='text/javascript'></script>\n+    <script src='lib/marked.js' type='text/javascript'></script>\n+    <script src='lib/swagger-oauth.js' type='text/javascript'></script>\n+\n+    <!-- Some basic translations -->\n+    <!-- <script src='lang/translator.js' type='text/javascript'></script> -->\n+    <!-- <script src='lang/ru.js' type='text/javascript'></script> -->\n+    <!-- <script src='lang/en.js' type='text/javascript'></script> -->\n+\n+    <script type=\"text/javascript\">\n+      $(function () {\n+        // <ApacheSyncope>\n+        /*var url = window.location.search.match(/url=([^&]+)/);\n+         if (url && url.length > 1) {\n+         url = decodeURIComponent(url[1]);\n+         } else {\n+         url = \"http://petstore.swagger.io/v2/swagger.json\";\n+         }*/\n+        var url = window.location.href.substring(0, window.location.href.lastIndexOf('/')) + \"/../rest/swagger.json\";\n+        // </ApacheSyncope>\n+\n+        // Pre load translate...\n+        if (window.SwaggerTranslator) {\n+          window.SwaggerTranslator.translate();\n+        }\n+        window.swaggerUi = new SwaggerUi({\n+          url: url,\n+          dom_id: \"swagger-ui-container\",\n+          supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],\n+          onComplete: function (swaggerApi, swaggerUi) {\n+            if (typeof initOAuth == \"function\") {\n+              initOAuth({\n+                clientId: \"your-client-id\",\n+                clientSecret: \"your-client-secret\",\n+                realm: \"your-realms\",\n+                appName: \"your-app-name\",\n+                scopeSeparator: \",\"\n+              });\n+            }\n+\n+            if (window.SwaggerTranslator) {\n+              window.SwaggerTranslator.translate();\n+            }\n+\n+            $('pre code').each(function (i, e) {\n+              hljs.highlightBlock(e)\n+            });\n+\n+            addApiKeyAuthorization();\n+          },\n+          onFailure: function (data) {\n+            log(\"Unable to Load SwaggerUI\");\n+          },\n+          docExpansion: \"none\",\n+          apisSorter: \"alpha\",\n+          showRequestHeaders: false\n+        });\n+\n+        function addApiKeyAuthorization() {\n+          // <ApacheSyncope>\n+          /*var key = encodeURIComponent($('#input_apiKey')[0].value);\n+           if (key && key.trim() != \"\") {\n+           var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization(\"api_key\", key, \"query\");\n+           window.swaggerUi.api.clientAuthorizations.add(\"api_key\", apiKeyAuth);\n+           log(\"added key \" + key);\n+           }*/\n+          var username = $('#input_username').val().trim();\n+          var password = $('#input_password').val().trim();\n+          if (username !== \"\" && password !== \"\") {\n+            window.swaggerUi.api.clientAuthorizations.add(\n+                    \"basicAuth\", new SwaggerClient.PasswordAuthorization(username, password));\n+          }\n+          // </ApacheSyncope>\n+        }\n+\n+        // <ApacheSyncope>\n+        //$('#input_apiKey').change(addApiKeyAuthorization);\n+        $(\"#input_username\").blur(function () {\n+          addApiKeyAuthorization();\n+        });\n+        $(\"#input_password\").blur(function () {\n+          addApiKeyAuthorization();\n+        });\n+        // </ApacheSyncope>\n+\n+        // if you have an apiKey you would like to pre-populate on the page for demonstration purposes...\n+        /*\n+         var apiKey = \"myApiKeyXXXX123456789\";\n+         $('#input_apiKey').val(apiKey);\n+         */\n+\n+        window.swaggerUi.load();\n+\n+        function log() {\n+          if ('console' in window) {\n+            console.log.apply(console, arguments);\n+          }\n+        }\n+      });\n+    </script>\n+  </head>\n+\n+  <body class=\"swagger-section\">\n+    <div id='header'>\n+      <div class=\"swagger-ui-wrap\">\n+        <a id=\"logo\" href=\"http://swagger.io\">swagger</a>\n+        <form id='api_selector'>\n+          <!-- <ApacheSyncope -->\n+          <!--<div class='input'><input placeholder=\"http://example.com/api\" id=\"input_baseUrl\" name=\"baseUrl\" type=\"text\"/></div>-->\n+          <!--<div class='input'><input placeholder=\"api_key\" id=\"input_apiKey\" name=\"apiKey\" type=\"text\"/></div>-->\n+          <!--<div class='input'><a id=\"explore\" href=\"#\" data-sw-translate>Explore</a></div>-->\n+          <div class='input'><input placeholder=\"username\" id=\"input_username\" name=\"username\" type=\"text\"/></div>\n+          <div class='input'><input placeholder=\"password\" id=\"input_password\" name=\"password\" type=\"password\"/></div>\n+          <!-- </ApacheSyncope -->\n+        </form>\n+      </div>\n+    </div>\n+\n+    <div id=\"message-bar\" class=\"swagger-ui-wrap\" data-sw-translate>&nbsp;</div>\n+    <div id=\"swagger-ui-container\" class=\"swagger-ui-wrap\"></div>\n+  </body>\n+</html>"},{"sha":"7227f04e841a9edd865e711518a7629f9d007891","filename":"fit/console-reference/pom.xml","status":"modified","additions":65,"deletions":8,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -435,10 +435,6 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n     <profile>\n       <id>jrebel</id>\n       \n-      <properties>\n-        <javaagent>-javaagent:${env.REBEL_HOME}/jrebel.jar</javaagent>\n-      </properties>\n-      \n       <build>\n         <defaultGoal>clean verify cargo:run</defaultGoal>\n \n@@ -451,7 +447,69 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n               <classpath>\n                 <fallback>default</fallback>\n                 <resources>\n-                  <resource/>\n+                  <resource>\n+                    <directory>${basedir}/../../common/lib/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../common/rest-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/logic/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/rest-cxf/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/misc/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/persistence-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/persistence-jpa/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/provisioning-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/provisioning-java/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-java/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-activiti/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../ext/camel/provisioning-camel/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n                   <resource>\n                     <directory>${basedir}/../../client/console/target/classes</directory>\n                   </resource>\n@@ -463,7 +521,6 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n               \n               <web>\n                 <resources>\n-                  <resource/>\n                   <resource>\n                     <target>/</target>\n                     <directory>${basedir}/../../client/console/target/classes/META-INF/resources/</directory>\n@@ -496,8 +553,8 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -noverify ${javaagent} -Drebel.spring_plugin=true \n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>\n+                    -noverify -javaagent:${env.REBEL_HOME}/jrebel.jar -Drebel.spring_plugin=true\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>"},{"sha":"90e4df91eab26ecc812cdca46ce3bb039e8ddfcb","filename":"fit/core-reference/pom.xml","status":"modified","additions":142,"deletions":1,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -729,6 +729,141 @@ under the License.\n       </build>\n     </profile>\n     \n+    <profile>\n+      <id>jrebel</id>\n+\n+      <properties>\n+        <skipTests>true</skipTests>\n+      </properties>\n+\n+      <build>\n+        <defaultGoal>clean verify cargo:run</defaultGoal>\n+\n+        <plugins>\n+          <plugin>\n+            <groupId>org.zeroturnaround</groupId>\n+            <artifactId>jrebel-maven-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <configuration>\n+              <classpath>\n+                <fallback>default</fallback>\n+                <resources>\n+                  <resource>\n+                    <directory>${basedir}/../../common/lib/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../common/rest-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/logic/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/rest-cxf/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/misc/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/persistence-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/persistence-jpa/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/provisioning-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/provisioning-java/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-api/target/classes</directory>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-java/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../core/workflow-activiti/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../ext/camel/provisioning-camel/target/classes</directory>\n+                    <excludes>\n+                      <exclude>*Context.xml</exclude>\n+                    </excludes>\n+                  </resource>\n+                </resources>\n+              </classpath>\n+    \n+              <web>\n+                <resources>\n+                  <resource>\n+                    <target>/</target>\n+                    <directory>${basedir}/../../ext/swagger-ui/target/classes/META-INF/resources</directory>\n+                  </resource>\n+                </resources>\n+              </web>\n+              \n+              <alwaysGenerate>true</alwaysGenerate>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>generate-rebel-xml</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>generate</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+\n+          <plugin>\n+            <groupId>org.codehaus.cargo</groupId>\n+            <artifactId>cargo-maven2-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <configuration>\n+              <configuration>\n+                <properties>\n+                  <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                    -noverify -javaagent:${env.REBEL_HOME}/jrebel.jar -Drebel.spring_plugin=true         \n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512m</cargo.jvmargs>\n+                </properties>\n+              </configuration>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>start-container</id>\n+                <phase>none</phase>\n+              </execution>\n+              <execution>\n+                <id>stop-container</id>\n+                <phase>none</phase>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n     <profile>\n       <id>skipTests</id>\n \n@@ -811,6 +946,12 @@ under the License.\n           <artifactId>syncope-ext-camel-provisioning</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n+        \n+        <dependency>\n+          <groupId>org.apache.syncope.ext</groupId>\n+          <artifactId>syncope-ext-swagger-ui</artifactId>\n+          <version>${project.version}</version>\n+        </dependency>\n       </dependencies>\n       \n       <build>\n@@ -846,7 +987,7 @@ under the License.\n                 </transformationSet>\n               </transformationSets>\n             </configuration>\n-          </plugin>\n+          </plugin>                    \n         </plugins>\n         \n         <resources>"},{"sha":"4ddcaa309d87cf46ab7c15b867030a2960fdf0cb","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/CamelRouteITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCamelRouteITCase.java?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -66,7 +66,7 @@ public void groupRoutes() {\n     private CamelRouteTO doUpdate(final String key, final String content) {\n         CamelRouteTO route = camelRouteService.read(key);\n         route.setContent(content);\n-        camelRouteService.update(route.getKey(), route);\n+        camelRouteService.update(route);\n         // getting new route definition\n         return camelRouteService.read(key);\n     }"},{"sha":"180259904976c513eb7c6667d3334f7591b18702","filename":"pom.xml","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5934d54f8d28dd73d9ee1cee21ec14e4209af5ba/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5934d54f8d28dd73d9ee1cee21ec14e4209af5ba","patch":"@@ -326,7 +326,7 @@ under the License.\n     <connid.ldap.version>1.5.0-SNAPSHOT</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.1.3</cxf.version>\n+    <cxf.version>3.1.4-SNAPSHOT</cxf.version>\n \n     <camel.version>2.15.3</camel.version>\t\n \n@@ -370,7 +370,8 @@ under the License.\n     <connid.location>file:${bundles.directory}/</connid.location>\n     <log.directory>${project.build.directory}/log</log.directory>\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n-    \n+\n+    <swagger-ui.version>2.1.2</swagger-ui.version>    \n     <jquery.version>2.1.4</jquery.version>\n     <jquery-ui.version>1.11.4</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n@@ -501,6 +502,17 @@ under the License.\n         <artifactId>cxf-rt-rs-client</artifactId>\n         <version>${cxf.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>io.swagger</groupId>\n+        <artifactId>swagger-jaxrs</artifactId>\n+        <version>1.5.3</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>javax.ws.rs</groupId>\n+            <artifactId>jsr311-api</artifactId>\n+          </exclusion>\n+        </exclusions>\n+      </dependency>\n       <!-- /CXF -->\n       \n       <!-- Camel -->\n@@ -927,6 +939,11 @@ under the License.\n         <version>${slf4j.version}</version>\n       </dependency>\n       \n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>swagger-ui</artifactId>\n+        <version>${swagger-ui.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>jquery</artifactId>"}]}