{"sha":"e79714f872be17953ab35f303958980514f6fdfe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3OTcxNGY4NzJiZTE3OTUzYWIzNWYzMDM5NTg5ODA1MTRmNmZkZmU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-07T08:40:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-07T08:40:23Z"},"message":"[SYNCOPE-531] Changes are fine - provided small optimizations\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1608365 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"381a29ee569205165090080c789864e5c9fb02d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/381a29ee569205165090080c789864e5c9fb02d1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e79714f872be17953ab35f303958980514f6fdfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e79714f872be17953ab35f303958980514f6fdfe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e79714f872be17953ab35f303958980514f6fdfe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e79714f872be17953ab35f303958980514f6fdfe/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a56e63ac3b44448c25eccc093ead8c94d2ef8966","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a56e63ac3b44448c25eccc093ead8c94d2ef8966","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a56e63ac3b44448c25eccc093ead8c94d2ef8966"}],"stats":{"total":51,"additions":23,"deletions":28},"files":[{"sha":"d9ca910f9534c1f4450d9fa82efbe26d374f6b96","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":23,"deletions":28,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e79714f872be17953ab35f303958980514f6fdfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e79714f872be17953ab35f303958980514f6fdfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=e79714f872be17953ab35f303958980514f6fdfe","patch":"@@ -120,13 +120,12 @@ public Authentication authenticate(final Authentication authentication)\n                         authentication.getCredentials().toString(),\n                         user.getCipherAlgorithm(),\n                         user.getPassword());\n+\n+                updateLoginAttributes(user, authenticated);\n             }\n         }\n \n-        updateLoginAttributes(user, authenticated);\n-        \n         UsernamePasswordAuthenticationToken token;\n-\n         if (authenticated) {\n             token = new UsernamePasswordAuthenticationToken(\n                     authentication.getPrincipal(),\n@@ -148,7 +147,6 @@ public Authentication authenticate(final Authentication authentication)\n \n             LOG.debug(\"User {} successfully authenticated, with roles {}\",\n                     authentication.getPrincipal(), token.getAuthorities());\n-\n         } else {\n             auditManager.audit(\n                     AuditElements.EventCategoryType.REST,\n@@ -168,31 +166,28 @@ public Authentication authenticate(final Authentication authentication)\n \n         return token;\n     }\n-    \n+\n     private void updateLoginAttributes(SyncopeUser user, boolean authenticated) {\n-    \t\n-    \tif (user != null) {\n-    \t\tboolean userModified = false;\n-    \t\t\n-    \t\tif (authenticated) {\n-    \t\t\tif (Boolean.valueOf(confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValue())) {\n-        \t\t\tuser.setLastLoginDate(new Date());\n-        \t\t\tuserModified = true;\n-        \t\t}\n-    \t\t\t\n-    \t\t\tif (user.getFailedLogins() != 0) {\n-    \t\t\t\tuser.setFailedLogins(0);\n-    \t\t\t\tuserModified = true;\n-    \t\t\t}\n-    \t\t} else {\n-    \t\t\tuser.setFailedLogins(user.getFailedLogins() + 1);\n-    \t\t\tuserModified = true;\n-    \t\t}\n-    \t\t\n-    \t\tif (userModified) {\n-    \t\t\tuserDAO.save(user);\n-    \t\t}\n-    \t}\n+        boolean userModified = false;\n+\n+        if (authenticated) {\n+            if (Boolean.valueOf(confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValue())) {\n+                user.setLastLoginDate(new Date());\n+                userModified = true;\n+            }\n+\n+            if (user.getFailedLogins() != 0) {\n+                user.setFailedLogins(0);\n+                userModified = true;\n+            }\n+        } else {\n+            user.setFailedLogins(user.getFailedLogins() + 1);\n+            userModified = true;\n+        }\n+\n+        if (userModified) {\n+            userDAO.save(user);\n+        }\n     }\n \n     protected boolean authenticate(final String password, final CipherAlgorithm cipherAlgorithm,"}]}