{"sha":"84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg0Y2I3ZmI0ZjQ0OWM0YmQ3NjU4MDI3M2VhYTZlY2EyZTNhZDcwZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-20T11:21:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-20T11:23:40Z"},"message":"[SYNCOPE-948] Improvement provided","tree":{"sha":"cca424851ef9f103360e74fb604ef817cc225930","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cca424851ef9f103360e74fb604ef817cc225930"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"228bf3ed54cfd1ebff45bf0433e08bd84e3197b5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/228bf3ed54cfd1ebff45bf0433e08bd84e3197b5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/228bf3ed54cfd1ebff45bf0433e08bd84e3197b5"}],"stats":{"total":239,"additions":154,"deletions":85},"files":[{"sha":"1e2c3e60f4e1e455c74658959d7b393f3a67a13a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectResultManager.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectResultManager.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -68,9 +68,6 @@ public void printAttribute(final AttrTO attribute) {\n                 .append(attribute.getSchema())\n                 .append(\": \")\n                 .append(attribute.getValues());\n-        if (attribute.isReadonly()) {\n-            attributeMessageBuilder.append(\" - is readonly\");\n-        }\n         System.out.println(attributeMessageBuilder.toString());\n     }\n "},{"sha":"da4c349656a46c481b2965b22d32a05987822636","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupResultManager.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -71,9 +71,6 @@ public void printAttribute(final AttrTO attribute) {\n                 .append(attribute.getSchema())\n                 .append(\": \")\n                 .append(attribute.getValues());\n-        if (attribute.isReadonly()) {\n-            attributeMessageBuilder.append(\" - is readonly\");\n-        }\n         System.out.println(attributeMessageBuilder.toString());\n         System.out.println(\"\");\n     }"},{"sha":"4a1111ac52b46e35958495a76d43a1cc2d990dda","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -88,9 +88,6 @@ private void printAttributes(final Set<AttrTO> derAttrTOs) {\n                     .append(attrTO.getSchema())\n                     .append(\": \")\n                     .append(attrTO.getValues());\n-            if (attrTO.isReadonly()) {\n-                attributeSentence.append(\" - is readonly.\");\n-            }\n             System.out.println(attributeSentence);\n         }\n     }"},{"sha":"96d92730b7fe62f48bd56a8320d3bb3e24a9fd05","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -106,7 +106,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n                         return new PlainSchemas(\n                                 panelId,\n                                 membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new ListModel<AttrTO>(getAttrsFromTO(membershipTO)));\n+                                new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -150,8 +150,8 @@ protected void setAttrs() {\n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n                 attrTO.getValues().add(\"\");\n \n-                // is important to set readonly only after values setting\n-                attrTO.setReadonly(schema.isReadonly());\n+                // is important to set the schema info only after values setting\n+                attrTO.setSchemaInfo(schema);\n             } else {\n                 attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n@@ -175,8 +175,8 @@ protected void setAttrs(final MembershipTO membershipTO) {\n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n                 attrTO.getValues().add(\"\");\n \n-                // is important to set readonly only after values setting\n-                attrTO.setReadonly(schema.isReadonly());\n+                // is important to set the schema info only after values setting\n+                attrTO.setSchemaInfo(schema);\n             } else {\n                 attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n@@ -232,7 +232,7 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 break;\n \n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n \n                 if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {"},{"sha":"b3432f8445081a25cc970cad8ca4d35257a1dfa4","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -175,19 +175,21 @@ public VirSchemas(final String id, final IModel<List<AttrTO>> attrTOs) {\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n \n-                    attrTO.setReadonly(attrTO.isReadonly());\n+                    AjaxTextFieldPanel panel =\n+                            new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n \n-                    final AjaxTextFieldPanel panel\n-                            = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n+                    boolean readonly = attrTO.getSchemaInfo() == null\n+                            ? false\n+                            : VirSchemaTO.class.cast(attrTO.getSchemaInfo()).isReadonly();\n \n                     if (mode == AjaxWizard.Mode.TEMPLATE) {\n-                        item.add(panel.enableJexlHelp().setEnabled(!attrTO.isReadonly()));\n+                        item.add(panel.enableJexlHelp().setEnabled(!readonly));\n                     } else {\n                         item.add(new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                 \"panel\",\n                                 attrTO.getSchema(),\n-                                panel).setEnabled(!attrTO.isReadonly()));\n+                                panel).setEnabled(!readonly));\n                     }\n                 }\n             });"},{"sha":"b4cc32953de4a286a93c927584621607be390e8d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -186,8 +186,11 @@ public void execute(final String schema) {\n                             attrTO(new AttrTO.Builder().schema(attrTO.getSchema()).build()).\n                             build());\n                 }\n-            } else {\n-                AttrPatch patch = new AttrPatch.Builder().operation(PatchOperation.ADD_REPLACE).attrTO(attrTO).build();\n+            } else if (!originalAttrs.containsKey(attrTO.getSchema())\n+                    || !originalAttrs.get(attrTO.getSchema()).getValues().equals(attrTO.getValues())) {\n+\n+                AttrPatch patch = new AttrPatch.Builder().operation(PatchOperation.ADD_REPLACE).attrTO(attrTO).\n+                        build();\n                 if (!patch.isEmpty()) {\n                     result.getPlainAttrs().add(patch);\n                 }"},{"sha":"7822a6b1322d73f8d78d63d7b2992873ec446749","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttrTO.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -45,8 +45,8 @@ public Builder schema(final String schema) {\n             return this;\n         }\n \n-        public Builder readonly(final boolean readonly) {\n-            instance.setReadonly(readonly);\n+        public Builder schemaInfo(final AbstractSchemaTO schemaInfo) {\n+            instance.schemaInfo = schemaInfo;\n             return this;\n         }\n \n@@ -70,6 +70,11 @@ public AttrTO build() {\n         }\n     }\n \n+    /**\n+     * (Optional) schema information for this attribute.\n+     */\n+    private AbstractSchemaTO schemaInfo;\n+\n     /**\n      * Name of the schema that this attribute is referring to.\n      */\n@@ -81,9 +86,15 @@ public AttrTO build() {\n     private final List<String> values = new ArrayList<>();\n \n     /**\n-     * Whether this attribute is read-only or not.\n+     * @return schema information for this attribute; may be {@code NULL}\n      */\n-    private boolean readonly = false;\n+    public AbstractSchemaTO getSchemaInfo() {\n+        return schemaInfo;\n+    }\n+\n+    public void setSchemaInfo(final AbstractSchemaTO schemaInfo) {\n+        this.schemaInfo = schemaInfo;\n+    }\n \n     /**\n      * @return the name of the schema that this attribute is referring to\n@@ -110,12 +121,4 @@ public void setSchema(final String schema) {\n     public List<String> getValues() {\n         return values;\n     }\n-\n-    public boolean isReadonly() {\n-        return readonly;\n-    }\n-\n-    public void setReadonly(final boolean readonly) {\n-        this.readonly = readonly;\n-    }\n }"},{"sha":"51b642398253e4dd05aed2a199317264ea5d5c34","filename":"common/lib/src/test/java/org/apache/syncope/common/lib/AnyOperationsTest.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperationsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperationsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperationsTest.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n+import org.apache.syncope.common.lib.patch.AttrPatch;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.types.PatchOperation;\n+import org.junit.Test;\n+\n+public class AnyOperationsTest {\n+\n+    @Test\n+    public void mindiff() {\n+        AnyObjectTO oldOne = new AnyObjectTO();\n+        oldOne.setName(\"name\");\n+        oldOne.getPlainAttrs().add(new AttrTO.Builder().schema(\"plain\").value(\"oldValue\").build());\n+        oldOne.getPlainAttrs().add(new AttrTO.Builder().schema(\"encrypted\").value(\"oldValue\").build());\n+\n+        AnyObjectTO newOne = new AnyObjectTO();\n+        newOne.setName(\"name\");\n+        newOne.getPlainAttrs().add(new AttrTO.Builder().schema(\"plain\").value(\"newValue\").build());\n+        newOne.getPlainAttrs().add(new AttrTO.Builder().schema(\"encrypted\").value(\"oldValue\").build());\n+\n+        AnyObjectPatch diff = AnyOperations.diff(newOne, oldOne, true);\n+        assertEquals(1, diff.getPlainAttrs().size());\n+\n+        AttrPatch patch = diff.getPlainAttrs().iterator().next();\n+        assertEquals(PatchOperation.ADD_REPLACE, patch.getOperation());\n+        assertEquals(\"plain\", patch.getAttrTO().getSchema());\n+    }\n+}"},{"sha":"200cc7ad3e52726885e46524a7055a0056a084a0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConfigurationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -103,7 +103,7 @@ public AttrTO get(final String schema) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONFIGURATION_SET + \"')\")\n     public void set(final AttrTO value) {\n-        confDAO.save(binder.getAttribute(value));\n+        confDAO.save(binder.getAttr(value));\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONFIGURATION_EXPORT + \"')\")"},{"sha":"3dd6d78e69052d62682de6f6efd919a55b6fe0e4","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/XSLTTransformer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FXSLTTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FXSLTTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FXSLTTransformer.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -132,7 +132,7 @@ public void setParameters(final Map<String, ? extends Object> parameters) {\n         if (parameters == null) {\n             this.parameters = null;\n         } else {\n-            this.parameters = new HashMap<>(parameters);\n+            this.parameters = new HashMap<String, Object>(parameters);\n         }\n     }\n "},{"sha":"40a2e6384c0eac4c537e9369a394cea5384a7c33","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -1055,7 +1055,7 @@ under the License.\n         pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"rightType\":\"GROUP\",\"rightKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"rightType\":\"GROUP\",\"rightKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"b3772d66-ec06-4133-bf38-b3273845ac5b\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n@@ -1071,7 +1071,7 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n@@ -1084,9 +1084,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"readonly\":true,\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplatePullTask id=\"fda22ff3-98f3-42e4-a2ae-cd9a28282d57\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"true\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n   <PullTask_actionsClassNames pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" actionClassName=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <Task DTYPE=\"PullTask\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n@@ -1150,7 +1150,7 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"readonly\":false,\"values\":[\"\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\""},{"sha":"0956d24c667a10126a425c9da89908e91c805ff7","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/ConfigurationDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConfigurationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConfigurationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConfigurationDataBinder.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -28,6 +28,6 @@ public interface ConfigurationDataBinder {\n \n     List<AttrTO> getConfTO();\n \n-    CPlainAttr getAttribute(AttrTO attributeTO);\n+    CPlainAttr getAttr(AttrTO attrTO);\n \n }"},{"sha":"0bb5e25253bc9a87396468ab6391312644435d16","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":31,"deletions":19,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -89,12 +89,16 @@\n import org.apache.syncope.core.persistence.api.entity.GroupableRelatable;\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n+import org.apache.syncope.core.provisioning.api.data.SchemaDataBinder;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n \n abstract class AbstractAnyDataBinder {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractAnyDataBinder.class);\n \n+    @Autowired\n+    protected SchemaDataBinder schemaDataBinder;\n+\n     @Autowired\n     protected RealmDAO realmDAO;\n \n@@ -198,8 +202,8 @@ private void fillAttr(\n         List<String> valuesProvided = schema.isMultivalue()\n                 ? values\n                 : (values.isEmpty()\n-                        ? Collections.<String>emptyList()\n-                        : Collections.singletonList(values.iterator().next()));\n+                ? Collections.<String>emptyList()\n+                : Collections.singletonList(values.iterator().next()));\n \n         for (String value : valuesProvided) {\n             if (StringUtils.isBlank(value)) {\n@@ -549,40 +553,48 @@ protected void fill(\n         }\n     }\n \n-    protected void fillTO(final AnyTO anyTO,\n+    protected void fillTO(\n+            final AnyTO anyTO,\n             final String realmFullPath,\n             final Collection<? extends AnyTypeClass> auxClasses,\n             final Collection<? extends PlainAttr<?>> plainAttrs,\n             final Map<DerSchema, String> derAttrs,\n             final Map<VirSchema, List<String>> virAttrs,\n-            final Collection<? extends ExternalResource> resources) {\n+            final Collection<? extends ExternalResource> resources,\n+            final boolean details) {\n \n         anyTO.setRealm(realmFullPath);\n \n         CollectionUtils.collect(auxClasses, EntityUtils.<AnyTypeClass>keyTransformer(), anyTO.getAuxClasses());\n \n         for (PlainAttr<?> plainAttr : plainAttrs) {\n-            anyTO.getPlainAttrs().add(new AttrTO.Builder().\n+            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n-                    values(plainAttr.getValuesAsStrings()).\n-                    readonly(plainAttr.getSchema().isReadonly()).\n-                    build());\n+                    values(plainAttr.getValuesAsStrings());\n+            if (details) {\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema()));\n+            }\n+            anyTO.getPlainAttrs().add(attrTOBuilder.build());\n         }\n \n         for (Map.Entry<DerSchema, String> entry : derAttrs.entrySet()) {\n-            anyTO.getDerAttrs().add(new AttrTO.Builder().\n+            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n                     schema(entry.getKey().getKey()).\n-                    value(entry.getValue()).\n-                    readonly(true).\n-                    build());\n+                    value(entry.getValue());\n+            if (details) {\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getDerSchemaTO(entry.getKey()));\n+            }\n+            anyTO.getDerAttrs().add(attrTOBuilder.build());\n         }\n \n         for (Map.Entry<VirSchema, List<String>> entry : virAttrs.entrySet()) {\n-            anyTO.getVirAttrs().add(new AttrTO.Builder().\n+            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n                     schema(entry.getKey().getKey()).\n-                    values(entry.getValue()).\n-                    readonly(entry.getKey().isReadonly()).\n-                    build());\n+                    values(entry.getValue());\n+            if (details) {\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getVirSchemaTO(entry.getKey()));\n+            }\n+            anyTO.getVirAttrs().add(attrTOBuilder.build());\n         }\n \n         for (ExternalResource resource : resources) {\n@@ -611,23 +623,23 @@ protected MembershipTO getMembershipTO(\n             membershipTO.getPlainAttrs().add(new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n                     values(plainAttr.getValuesAsStrings()).\n-                    readonly(plainAttr.getSchema().isReadonly()).\n+                    schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema())).\n                     build());\n         }\n \n         for (Map.Entry<DerSchema, String> entry : derAttrs.entrySet()) {\n             membershipTO.getDerAttrs().add(new AttrTO.Builder().\n                     schema(entry.getKey().getKey()).\n                     value(entry.getValue()).\n-                    readonly(true).\n+                    schemaInfo(schemaDataBinder.getDerSchemaTO(entry.getKey())).\n                     build());\n         }\n \n         for (Map.Entry<VirSchema, List<String>> entry : virAttrs.entrySet()) {\n             membershipTO.getVirAttrs().add(new AttrTO.Builder().\n                     schema(entry.getKey().getKey()).\n                     values(entry.getValue()).\n-                    readonly(entry.getKey().isReadonly()).\n+                    schemaInfo(schemaDataBinder.getVirSchemaTO(entry.getKey())).\n                     build());\n         }\n "},{"sha":"677bf81c90b6f0b3e8d0bed8c4ad46c0b8c4bbcf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -97,7 +97,8 @@ public AnyObjectTO getAnyObjectTO(final AnyObject anyObject, final boolean detai\n                 anyObject.getPlainAttrs(),\n                 derAttrHandler.getValues(anyObject),\n                 virAttrValues,\n-                anyObjectDAO.findAllResources(anyObject));\n+                anyObjectDAO.findAllResources(anyObject),\n+                details);\n \n         if (details) {\n             // relationships"},{"sha":"56b0b92d352906f4795b98d88f4c7199ea2db779","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConfigurationDataBinderImpl.java","status":"modified","additions":15,"deletions":20,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -48,37 +48,32 @@ public class ConfigurationDataBinderImpl extends AbstractAnyDataBinder implement\n \n     @Override\n     public List<AttrTO> getConfTO() {\n-        final List<AttrTO> attrTOs = new ArrayList<>();\n-        for (final CPlainAttr plainAttr : confDAO.get().getPlainAttrs()) {\n-            final AttrTO attrTO = new AttrTO();\n-            attrTO.setSchema(plainAttr.getSchema().getKey());\n-            attrTO.getValues().addAll(plainAttr.getValuesAsStrings());\n-            attrTO.setReadonly(plainAttr.getSchema().isReadonly());\n-            attrTOs.add(attrTO);\n+        List<AttrTO> attrTOs = new ArrayList<>();\n+        for (CPlainAttr attr : confDAO.get().getPlainAttrs()) {\n+            attrTOs.add(getAttrTO(attr));\n         }\n         return attrTOs;\n     }\n \n     @Override\n     public AttrTO getAttrTO(final CPlainAttr attr) {\n-        AttrTO attributeTO = new AttrTO();\n-        attributeTO.setSchema(attr.getSchema().getKey());\n-        attributeTO.getValues().addAll(attr.getValuesAsStrings());\n-        attributeTO.setReadonly(attr.getSchema().isReadonly());\n-\n-        return attributeTO;\n+        return new AttrTO.Builder().\n+                schemaInfo(schemaDataBinder.getPlainSchemaTO(attr.getSchema())).\n+                schema(attr.getSchema().getKey()).\n+                values(attr.getValuesAsStrings()).\n+                build();\n     }\n \n-    private void fillAttribute(final List<String> values,\n+    private void fillAttr(final List<String> values,\n             final PlainSchema schema, final CPlainAttr attr, final SyncopeClientException invalidValues) {\n \n         // if schema is multivalue, all values are considered for addition;\n         // otherwise only the fist one - if provided - is considered\n         List<String> valuesProvided = schema.isMultivalue()\n                 ? values\n                 : (values.isEmpty()\n-                        ? Collections.<String>emptyList()\n-                        : Collections.singletonList(values.iterator().next()));\n+                ? Collections.<String>emptyList()\n+                : Collections.singletonList(values.iterator().next()));\n \n         if (valuesProvided.isEmpty()) {\n             JexlContext jexlContext = new MapContext();\n@@ -120,16 +115,16 @@ private void fillAttribute(final List<String> values,\n     }\n \n     @Override\n-    public CPlainAttr getAttribute(final AttrTO attributeTO) {\n-        PlainSchema schema = getPlainSchema(attributeTO.getSchema());\n+    public CPlainAttr getAttr(final AttrTO attrTO) {\n+        PlainSchema schema = getPlainSchema(attrTO.getSchema());\n         if (schema == null) {\n-            throw new NotFoundException(\"Conf schema \" + attributeTO.getSchema());\n+            throw new NotFoundException(\"Conf schema \" + attrTO.getSchema());\n         } else {\n             SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n \n             CPlainAttr attr = entityFactory.newEntity(CPlainAttr.class);\n             attr.setSchema(schema);\n-            fillAttribute(attributeTO.getValues(), schema, attr, invalidValues);\n+            fillAttr(attrTO.getValues(), schema, attr, invalidValues);\n \n             if (!invalidValues.isEmpty()) {\n                 throw invalidValues;"},{"sha":"d0d751ab078aaf97770db811a7c360a4af648cf2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -332,8 +332,14 @@ public GroupTO getGroupTO(final Group group, final boolean details) {\n         Map<VirSchema, List<String>> virAttrValues = details\n                 ? virAttrHandler.getValues(group)\n                 : Collections.<VirSchema, List<String>>emptyMap();\n-        fillTO(groupTO, group.getRealm().getFullPath(), group.getAuxClasses(),\n-                group.getPlainAttrs(), derAttrValues, virAttrValues, group.getResources());\n+        fillTO(groupTO,\n+                group.getRealm().getFullPath(),\n+                group.getAuxClasses(),\n+                group.getPlainAttrs(),\n+                derAttrValues,\n+                virAttrValues,\n+                group.getResources(),\n+                details);\n \n         if (group.getUDynMembership() != null) {\n             groupTO.setUDynMembershipCond(group.getUDynMembership().getFIQLCond());"},{"sha":"4437713e59608b9eab7d69163ff834b5edb369a6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -570,7 +570,8 @@ public UserTO getUserTO(final User user, final boolean details) {\n                 user.getPlainAttrs(),\n                 derAttrHandler.getValues(user),\n                 virAttrValues,\n-                userDAO.findAllResources(user));\n+                userDAO.findAllResources(user),\n+                details);\n \n         if (details) {\n             // roles"},{"sha":"95325a928f92926f2a48df796dbabc521a55d2d7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -180,6 +180,8 @@ public void updateAttr() {\n         anyObjectService.update(anyObjectTO.getKey(), SchemaType.PLAIN, updated);\n \n         AttrTO location = anyObjectService.read(anyObjectTO.getKey(), SchemaType.PLAIN, \"location\");\n+        // need to remove schemaInfo which is included when reading the any object\n+        location.setSchemaInfo(null);\n         assertEquals(updated, location);\n     }\n "},{"sha":"d2d9b64b388830486bf44c6df31babfb91879c8e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConfigurationITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java?ref=84cb7fb4f449c4bd76580273eaa6eca2e3ad70f4","patch":"@@ -58,6 +58,7 @@ public void create() {\n         configurationService.set(conf);\n \n         AttrTO actual = configurationService.get(conf.getSchema());\n+        actual.setSchemaInfo(null);\n         assertEquals(actual, conf);\n     }\n \n@@ -81,6 +82,7 @@ public void createRequired() {\n         configurationService.set(conf);\n \n         AttrTO actual = configurationService.get(conf.getSchema());\n+        actual.setSchemaInfo(null);\n         assertEquals(actual, conf);\n     }\n "}]}