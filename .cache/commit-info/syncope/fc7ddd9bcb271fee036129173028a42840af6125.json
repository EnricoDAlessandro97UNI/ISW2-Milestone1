{"sha":"fc7ddd9bcb271fee036129173028a42840af6125","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZjN2RkZDliY2IyNzFmZWUwMzYxMjkxNzMwMjhhNDI4NDBhZjYxMjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-19T07:50:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-19T07:52:35Z"},"message":"[SYNCOPE-944] Clean up","tree":{"sha":"2b24a383835220aa1810f9e05126e673554c822c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2b24a383835220aa1810f9e05126e673554c822c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fc7ddd9bcb271fee036129173028a42840af6125","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc7ddd9bcb271fee036129173028a42840af6125","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fc7ddd9bcb271fee036129173028a42840af6125","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc7ddd9bcb271fee036129173028a42840af6125/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c1db2405b431e4782b15195dee83732754f64e8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c1db2405b431e4782b15195dee83732754f64e8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c1db2405b431e4782b15195dee83732754f64e8"}],"stats":{"total":18,"additions":4,"deletions":14},"files":[{"sha":"a998a669fd3949e50ea585ce70db638882107927","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc7ddd9bcb271fee036129173028a42840af6125/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc7ddd9bcb271fee036129173028a42840af6125/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=fc7ddd9bcb271fee036129173028a42840af6125","patch":"@@ -45,8 +45,6 @@\n import org.apache.syncope.core.spring.BeanUtils;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.AssignableCond;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -166,12 +164,9 @@ public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n \n         AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT);\n         if (anyObject.getRealm() != null) {\n-            AssignableCond assignableCond = new AssignableCond();\n-            assignableCond.setRealmFullPath(anyObject.getRealm().getFullPath());\n-\n             // relationships\n             Collection<String> assignableAnyObjects = CollectionUtils.collect(\n-                    searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.ANY_OBJECT),\n+                    searchDAO.searchAssignable(anyObject.getRealm().getFullPath(), AnyTypeKind.ANY_OBJECT),\n                     EntityUtils.keyTransformer());\n \n             for (RelationshipTO relationshipTO : anyObjectTO.getRelationships()) {\n@@ -213,7 +208,7 @@ public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n \n             // memberships\n             Collection<String> assignableGroups = CollectionUtils.collect(\n-                    searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.GROUP),\n+                    searchDAO.searchAssignable(anyObject.getRealm().getFullPath(), AnyTypeKind.GROUP),\n                     EntityUtils.keyTransformer());\n \n             for (MembershipTO membershipTO : anyObjectTO.getMemberships()) {"},{"sha":"581682014de860bdc322797f161628de7f1b2748","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc7ddd9bcb271fee036129173028a42840af6125/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc7ddd9bcb271fee036129173028a42840af6125/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=fc7ddd9bcb271fee036129173028a42840af6125","patch":"@@ -61,8 +61,6 @@\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.AssignableCond;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n@@ -192,12 +190,9 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n \n         AnyUtils anyUtils = anyUtilsFactory.getInstance(AnyTypeKind.USER);\n         if (user.getRealm() != null) {\n-            AssignableCond assignableCond = new AssignableCond();\n-            assignableCond.setRealmFullPath(user.getRealm().getFullPath());\n-\n             // relationships\n             Collection<String> assignableAnyObjects = CollectionUtils.collect(\n-                    searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.ANY_OBJECT),\n+                    searchDAO.searchAssignable(user.getRealm().getFullPath(), AnyTypeKind.ANY_OBJECT),\n                     EntityUtils.keyTransformer());\n \n             for (RelationshipTO relationshipTO : userTO.getRelationships()) {\n@@ -229,7 +224,7 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n \n             // memberships\n             Collection<String> assignableGroups = CollectionUtils.collect(\n-                    searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.GROUP),\n+                    searchDAO.searchAssignable(user.getRealm().getFullPath(), AnyTypeKind.GROUP),\n                     EntityUtils.keyTransformer());\n \n             for (MembershipTO membershipTO : userTO.getMemberships()) {"}]}