{"sha":"c679035d94013250ffa3a328be71b6885447cece","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2NzkwMzVkOTQwMTMyNTBmZmEzYTMyOGJlNzFiNjg4NTQ0N2NlY2U=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-13T12:04:38Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-16T07:44:01Z"},"message":"[SYNCOPE-1053] Handling previous object and new object during approval","tree":{"sha":"86f9c208cba9d70ccac9315af1179b47ae9ab43a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/86f9c208cba9d70ccac9315af1179b47ae9ab43a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c679035d94013250ffa3a328be71b6885447cece","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c679035d94013250ffa3a328be71b6885447cece","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c679035d94013250ffa3a328be71b6885447cece","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c679035d94013250ffa3a328be71b6885447cece/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"4e7c3640064a23af593dfbfa7f0ef5c0931c371a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e7c3640064a23af593dfbfa7f0ef5c0931c371a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4e7c3640064a23af593dfbfa7f0ef5c0931c371a"}],"stats":{"total":450,"additions":376,"deletions":74},"files":[{"sha":"c14dab9a9ddcf2a92f787731ebe19e0a44c276ae","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDetails.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -21,9 +21,10 @@\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n@@ -35,7 +36,20 @@ public class ApprovalDetails extends MultilevelPanel.SecondLevel {\n     public ApprovalDetails(final PageReference pageRef, final WorkflowFormTO formTO) {\n         super(MultilevelPanel.SECOND_LEVEL_ID);\n \n-        add(new UserWizardBuilder(new UserRestClient().read(formTO.getUsername()),\n+        final UserTO newUserTO;\n+        final UserTO previousUserTO;\n+        if (formTO.getUserPatch() == null) {\n+            newUserTO = formTO.getUserTO();\n+            previousUserTO = null;\n+        } else {\n+            formTO.getUserTO().setKey(formTO.getUserPatch().getKey());\n+            newUserTO = AnyOperations.patch(formTO.getUserTO(), formTO.getUserPatch());\n+            previousUserTO = formTO.getUserTO();\n+        }\n+\n+        add(new UserWizardBuilder(\n+                previousUserTO,\n+                newUserTO,\n                 new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses(),\n                 new UserFormLayoutInfo(),\n                 pageRef)."},{"sha":"58afe2cedec3f7083448566a964079878d810f6a","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/FormLayoutInfoUtils.java","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -31,6 +32,7 @@\n import org.apache.syncope.client.console.rest.RoleRestClient;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n \n@@ -127,13 +129,24 @@ public static <A extends AnyTO, F extends AnyForm<A>, FL extends AbstractAnyForm\n             final PageReference pageRef) {\n \n         try {\n-            return anyFormLayout.getFormClass().getConstructor(\n-                    anyTO.getClass(),\n-                    List.class,\n-                    anyFormLayout.getClass(),\n-                    pageRef.getClass()).\n-                    newInstance(anyTO, anyTypeClasses, anyFormLayout, pageRef);\n-        } catch (Exception e) {\n+            if (anyTO instanceof UserTO) {\n+                return anyFormLayout.getFormClass().getConstructor(\n+                        anyTO.getClass(), // previous\n+                        anyTO.getClass(), // actual\n+                        List.class,\n+                        anyFormLayout.getClass(),\n+                        pageRef.getClass()).\n+                        newInstance(null, anyTO, anyTypeClasses, anyFormLayout, pageRef);\n+            } else {\n+                return anyFormLayout.getFormClass().getConstructor(\n+                        anyTO.getClass(), // actual\n+                        List.class,\n+                        anyFormLayout.getClass(),\n+                        pageRef.getClass()).\n+                        newInstance(anyTO, anyTypeClasses, anyFormLayout, pageRef);\n+            }\n+        } catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException \n+                | IllegalArgumentException | InvocationTargetException e) {\n             throw new IllegalArgumentException(\"Could not instantiate \" + anyFormLayout.getFormClass().getName(), e);\n         }\n     }"},{"sha":"7857f0e32b47b6aa02e1d318fd6ca78522bbc236","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/LabelInfo.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.markup.html;\n+\n+import java.util.Collection;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.springframework.util.CollectionUtils;\n+\n+public class LabelInfo extends Label {\n+\n+    private static final long serialVersionUID = 4755868673082976208L;\n+\n+    private final String title;\n+\n+    public LabelInfo(final String id, final String title) {\n+        super(id, StringUtils.EMPTY);\n+        this.title = title == null ? StringUtils.EMPTY : StringUtils.abbreviate(title, 30);\n+    }\n+\n+    public LabelInfo(final String id, final Collection<String> title) {\n+        super(id, StringUtils.EMPTY);\n+        if (CollectionUtils.isEmpty(title)) {\n+            this.title = StringUtils.EMPTY;\n+        } else {\n+            StringBuilder titleBuilder = new StringBuilder();\n+            for (String el : title) {\n+                if (titleBuilder.length() > 0) {\n+                    titleBuilder.append(\"; \");\n+                }\n+                if (StringUtils.isNoneEmpty(el)) {\n+                    titleBuilder.append(el);\n+                }\n+            }\n+            this.title = StringUtils.abbreviate(titleBuilder.toString(), 50);\n+        }\n+    }\n+\n+    @Override\n+    protected void onComponentTag(final ComponentTag tag) {\n+        tag.put(\"class\", \"fa  fa-info-circle\");\n+        tag.put(\"style\", \"color:red\");\n+        tag.put(\"title\", title);\n+    }\n+}"},{"sha":"305a97b79b16457ef807c0ee56604e2e64081b9f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -21,7 +21,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -71,7 +70,7 @@ public AbstractFieldPanel<T> hideLabel() {\n         return this;\n     }\n \n-    public AbstractFieldPanel<T> showExternAction(final FormComponent<?> component) {\n+    public AbstractFieldPanel<T> showExternAction(final Component component) {\n         final Fragment fragment = new Fragment(\"externalAction\", \"externalActionFragment\", AbstractFieldPanel.this);\n         addOrReplace(fragment);\n         fragment.add(component.setRenderBodyOnly(false));"},{"sha":"ae8729a6ffc7357bc13764a7598a922c06b8a2ec","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -25,6 +25,8 @@\n import com.googlecode.wicket.jquery.ui.form.spinner.SpinnerBehavior;\n import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n@@ -33,7 +35,6 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.springframework.util.StringUtils;\n \n public final class AjaxSpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n \n@@ -97,7 +98,8 @@ public AjaxSpinnerFieldPanel<T> setNewModel(final List<Serializable> list) {\n             public T getObject() {\n                 T value = null;\n \n-                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                if (CollectionUtils.isNotEmpty(list)\n+                        && list.get(0) != null && StringUtils.isNotBlank(list.get(0).toString())) {\n                     value = reference.equals(Integer.class)\n                             ? reference.cast(NumberUtils.toInt(list.get(0).toString()))\n                             : reference.equals(Long.class)"},{"sha":"88a792cdb420042ea6e8567a393350bdfc3bcc90","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -74,15 +74,18 @@\n \n     private final List<String> anyTypeClasses;\n \n-    public AbstractAttrs(final AnyTO anyTO, final List<String> anyTypeClasses, final List<String> whichAttrs) {\n+    public AbstractAttrs(\n+            final AnyWrapper<?> modelObject,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichAttrs) {\n         super();\n         this.anyTypeClasses = anyTypeClasses;\n         this.attrTOs = new ListModel<>(Collections.<AttrTO>emptyList());\n         this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n \n         this.setOutputMarkupId(true);\n \n-        this.anyTO = anyTO;\n+        this.anyTO = modelObject.getInnerObject();\n         this.whichAttrs = whichAttrs;\n     }\n \n@@ -197,7 +200,7 @@ public void renderHead(final IHeaderResponse response) {\n                 && org.apache.cxf.common.util.CollectionUtils.isEmpty(membershipTOs.getObject())) {\n             response.render(OnDomReadyHeaderItem.forScript(\n                     String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\"); $('#attributes').hide();\",\n-                    getString(\"attribute.empty.list\"))));\n+                            getString(\"attribute.empty.list\"))));\n         }\n     }\n "},{"sha":"9b3bce6ffbf956bec60a8366c3f2cc62f5fc3d18","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -100,29 +100,29 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n         }\n \n         if (formLayoutInfo.isAuxClasses()) {\n-            wizardModel.add(new AuxClasses(modelObject.getInnerObject(), anyTypeClasses));\n+            wizardModel.add(new AuxClasses(modelObject, anyTypeClasses));\n         }\n \n         if (formLayoutInfo.isGroups()) {\n-            wizardModel.add(new Groups(modelObject.getInnerObject(), mode == AjaxWizard.Mode.TEMPLATE));\n+            wizardModel.add(new Groups(modelObject, mode == AjaxWizard.Mode.TEMPLATE));\n         }\n \n         // attributes panel steps\n         if (formLayoutInfo.isPlainAttrs()) {\n             wizardModel.add(new PlainAttrs(\n-                    modelObject.getInnerObject(),\n+                    modelObject,\n                     null,\n                     mode,\n                     anyTypeClasses,\n                     formLayoutInfo.getWhichPlainAttrs()));\n         }\n         if (formLayoutInfo.isDerAttrs() && mode != AjaxWizard.Mode.TEMPLATE) {\n             wizardModel.add(new DerAttrs(\n-                    modelObject.getInnerObject(), anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n+                    modelObject, anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n         }\n         if (formLayoutInfo.isVirAttrs()) {\n             wizardModel.add(new VirAttrs(\n-                    modelObject.getInnerObject(), mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+                    modelObject, mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n         }\n \n         // role panel step (just available for users)\n@@ -131,7 +131,7 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n                 && (formLayoutInfo instanceof UserFormLayoutInfo)\n                 && UserFormLayoutInfo.class.cast(formLayoutInfo).isRoles()) {\n \n-            wizardModel.add(new Roles(UserTO.class.cast(modelObject.getInnerObject())));\n+            wizardModel.add(new Roles(modelObject));\n         }\n \n         // relationship panel step (available for users and any objects)\n@@ -140,12 +140,12 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n                 || ((formLayoutInfo instanceof AnyObjectFormLayoutInfo)\n                 && AnyObjectFormLayoutInfo.class.cast(formLayoutInfo).isRelationships())) {\n \n-            wizardModel.add(new Relationships(modelObject.getInnerObject(), pageRef));\n+            wizardModel.add(new Relationships(modelObject, pageRef));\n         }\n \n         // resource panel step\n         if (formLayoutInfo.isResources()) {\n-            wizardModel.add(new Resources(modelObject.getInnerObject()));\n+            wizardModel.add(new Resources(modelObject));\n         }\n \n         return wizardModel;"},{"sha":"d0f8ac95029831edfbfe94256cf4de72c896ca3f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -21,19 +21,23 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n public class AuxClasses extends WizardStep {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    public <T extends AnyTO> AuxClasses(final T anyTO, final List<String> anyTypeClasses) {\n+    public <T extends AnyTO> AuxClasses(final AnyWrapper<T> modelObject, final List<String> anyTypeClasses) {\n         super();\n         setOutputMarkupId(true);\n \n@@ -47,7 +51,21 @@ public <T extends AnyTO> AuxClasses(final T anyTO, final List<String> anyTypeCla\n         }\n         Collections.sort(choices);\n         add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"auxClasses\",\n-                new PropertyModel<List<String>>(anyTO, \"auxClasses\"),\n+                new PropertyModel<List<String>>(modelObject.getInnerObject(), \"auxClasses\"),\n                 new ListModel<>(choices)).hideLabel().setOutputMarkupId(true));\n+\n+        // ------------------\n+        // insert changed label if needed\n+        // ------------------\n+        if (modelObject instanceof UserWrapper\n+                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n+                && !ListUtils.isEqualList(\n+                        modelObject.getInnerObject().getAuxClasses(),\n+                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getAuxClasses())) {\n+            add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n+        } else {\n+            add(new Label(\"changed\", StringUtils.EMPTY));\n+        }\n+        // ------------------\n     }\n }"},{"sha":"fe6444d869579260b5e677f11df4591ea19f7a11","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -49,11 +49,11 @@ public class DerAttrs extends AbstractAttrs<DerSchemaTO> {\n     private static final long serialVersionUID = -5387344116983102292L;\n \n     public <T extends AnyTO> DerAttrs(\n-            final T anyTO,\n+            final AnyWrapper<T> modelObject,\n             final List<String> anyTypeClasses,\n             final List<String> whichDerAttrs) {\n \n-        super(anyTO, anyTypeClasses, whichDerAttrs);\n+        super(modelObject, anyTypeClasses, whichDerAttrs);\n         setTitleModel(new ResourceModel(\"attributes.derived\"));\n \n         add(new Accordion(\"derSchemas\", Collections.<ITab>singletonList(new AbstractTab("},{"sha":"a348f949361ecb23f69f1462ed9fa2730ad8b98b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":54,"deletions":10,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -20,15 +20,18 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.EntityTOUtils;\n@@ -64,11 +67,11 @@ public class Groups extends WizardStep implements ICondition {\n \n     private final AnyTO anyTO;\n \n-    public <T extends AnyTO> Groups(final T anyTO, final boolean templateMode) {\n+    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n         super();\n-        this.anyTO = anyTO;\n \n-        final String realm = templateMode ? \"/\" : anyTO.getRealm();\n+        this.anyTO = modelObject.getInnerObject();\n+        final String realm = templateMode ? \"/\" : this.anyTO.getRealm();\n \n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n@@ -136,6 +139,33 @@ public boolean evaluate(final MembershipTO object) {\n             // ---------------------------------\n             // Retrieve group memberships\n             // ---------------------------------\n+            // this is to be sure to have group names (required to see membership details in approval page)\n+            GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n+\n+            List<CompleteCondition> conditions = new ArrayList<>();\n+            for (MembershipTO membershipTO : GroupableRelatableTO.class.cast(anyTO).getMemberships()) {\n+                conditions.add(searchConditionBuilder.is(\"key\").equalTo(membershipTO.getGroupKey()).wrap());\n+            }\n+\n+            List<GroupTO> groups = new ArrayList<>();\n+            if (!conditions.isEmpty()) {\n+                groups.addAll(groupRestClient.search(\n+                        \"/\",\n+                        searchConditionBuilder.or(conditions).query(),\n+                        -1,\n+                        -1,\n+                        new SortParam<>(\"name\", true),\n+                        null));\n+            }\n+\n+            // set group names in membership TOs\n+            Map<String, MembershipTO> membershipMap = GroupableRelatableTO.class.cast(anyTO).getMembershipMap();\n+            for (GroupTO group : groups) {\n+                if (membershipMap.containsKey(group.getKey())) {\n+                    membershipMap.get(group.getKey()).setGroupName(group.getName());\n+                }\n+            }\n+\n             groupsContainer.add(builder.setAllowOrder(true).withFilter().build(\"groups\",\n                     new ListModel<>(GroupableRelatableTO.class.cast(anyTO).getMemberships()),\n                     new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n@@ -150,7 +180,7 @@ public List<MembershipTO> execute(final String filter) {\n                             : groupRestClient.search(\n                                     realm,\n                                     SyncopeClient.getGroupSearchConditionBuilder().\n-                                            isAssignable().and().is(\"name\").equalTo(filter).query(),\n+                                    isAssignable().and().is(\"name\").equalTo(filter).query(),\n                                     1, MAX_GROUP_LIST_CARDINALITY,\n                                     new SortParam<>(\"name\", true),\n                                     null),\n@@ -170,16 +200,16 @@ public MembershipTO transform(final GroupTO input) {\n             // ---------------------------------\n             // Retrieve dyn group memberships\n             // ---------------------------------\n-            GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n+            searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n \n-            List<CompleteCondition> conditions = new ArrayList<>();\n+            conditions = new ArrayList<>();\n             for (String groupKey : GroupableRelatableTO.class.cast(anyTO).getDynGroups()) {\n                 conditions.add(searchConditionBuilder.is(\"key\").equalTo(groupKey).wrap());\n             }\n \n-            List<GroupTO> dynGroups = new ArrayList<>();\n+            groups = new ArrayList<>();\n             if (!conditions.isEmpty()) {\n-                dynGroups.addAll(groupRestClient.search(\n+                groups.addAll(groupRestClient.search(\n                         \"/\",\n                         searchConditionBuilder.or(conditions).query(),\n                         -1,\n@@ -189,7 +219,7 @@ public MembershipTO transform(final GroupTO input) {\n             }\n \n             dyngroupsContainer.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"dyngroups\",\n-                    new ListModel<>(CollectionUtils.collect(dynGroups, new Transformer<GroupTO, String>() {\n+                    new ListModel<>(CollectionUtils.collect(groups, new Transformer<GroupTO, String>() {\n \n                         @Override\n                         public String transform(final GroupTO input) {\n@@ -215,6 +245,20 @@ public String transform(final GroupTO input) {\n                                 EntityTOUtils.keyTransformer(),\n                                 new ArrayList<String>()))).\n                 hideLabel().setEnabled(false).setOutputMarkupId(true));\n+\n+        // ------------------\n+        // insert changed label if needed\n+        // ------------------\n+        if (modelObject instanceof UserWrapper\n+                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n+                && !ListUtils.isEqualList(\n+                        UserWrapper.class.cast(modelObject).getInnerObject().getMemberships(),\n+                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getMemberships())) {\n+            groupsContainer.add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n+        } else {\n+            groupsContainer.add(new Label(\"changed\", StringUtils.EMPTY));\n+        }\n+        // ------------------\n     }\n \n     @Override\n@@ -223,6 +267,6 @@ public boolean evaluate() {\n                 ? CollectionUtils.isNotEmpty(allDynRealms)\n                 : CollectionUtils.isNotEmpty(allDynRealms) || CollectionUtils.isNotEmpty(allGroups))\n                 && SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n-                        isActionAuthorized(this, RENDER);\n+                isActionAuthorized(this, RENDER);\n     }\n }"},{"sha":"75ca3c4d4d46c2fa1faab4247de3ec37d28e19ac","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":43,"deletions":7,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -23,9 +23,13 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n@@ -65,16 +69,24 @@ public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n \n     private final AjaxWizard.Mode mode;\n \n+    private final AnyTO previousObject;\n+\n     public <T extends AnyTO> PlainAttrs(\n-            final T anyTO,\n+            final AnyWrapper<T> modelObject,\n             final Form<?> form,\n             final AjaxWizard.Mode mode,\n             final List<String> anyTypeClasses,\n             final List<String> whichPlainAttrs) throws IllegalArgumentException {\n \n-        super(anyTO, anyTypeClasses, whichPlainAttrs);\n+        super(modelObject, anyTypeClasses, whichPlainAttrs);\n         this.mode = mode;\n \n+        if (modelObject instanceof UserWrapper) {\n+            previousObject = UserWrapper.class.cast(modelObject).getPreviousUserTO();\n+        } else {\n+            previousObject = null;\n+        }\n+\n         setTitleModel(new ResourceModel(\"attributes.plain\"));\n \n         add(new Accordion(\"plainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n@@ -337,17 +349,41 @@ public PlainSchemas(\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n \n-                    FieldPanel panel = getFieldPanel(availableSchemas.get(attrTO.getSchema()));\n+                    AbstractFieldPanel<?> panel = getFieldPanel(availableSchemas.get(attrTO.getSchema()));\n                     if (mode == AjaxWizard.Mode.TEMPLATE\n                             || !availableSchemas.get(attrTO.getSchema()).isMultivalue()) {\n-                        panel.setNewModel(attrTO.getValues());\n-                        item.add(panel);\n+                        FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n                     } else {\n-                        item.add(new MultiFieldPanel.Builder<>(\n+                        panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                 \"panel\",\n                                 attrTO.getSchema(),\n-                                panel));\n+                                FieldPanel.class.cast(panel));\n+                    }\n+                    item.add(panel);\n+\n+                    if (previousObject != null\n+                            && (previousObject.getPlainAttr(attrTO.getSchema()) == null\n+                            || !ListUtils.isEqualList(\n+                                    ListUtils.select(previousObject.getPlainAttr(attrTO.getSchema()).getValues(),\n+                                            new Predicate<String>() {\n+\n+                                        @Override\n+                                        public boolean evaluate(final String object) {\n+                                            return StringUtils.isNotEmpty(object);\n+                                        }\n+                                    }), ListUtils.select(attrTO.getValues(),\n+                                            new Predicate<String>() {\n+\n+                                        @Override\n+                                        public boolean evaluate(final String object) {\n+                                            return StringUtils.isNotEmpty(object);\n+                                        }\n+                                    })))) {\n+                        List<String> oldValues = previousObject.getPlainAttr(attrTO.getSchema()) == null\n+                                ? Collections.<String>emptyList()\n+                                : previousObject.getPlainAttr(attrTO.getSchema()).getValues();\n+                        panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n                     }\n                 }\n             });"},{"sha":"c4762514ad47449cc3d13c4da876fbeae2191a0a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":24,"deletions":3,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -28,6 +28,7 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SerializableTransformer;\n import org.apache.syncope.client.console.panels.AnyDirectoryPanel;\n@@ -43,6 +44,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.RelationshipTypeRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -59,16 +61,19 @@\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.extensions.wizard.IWizard;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -89,10 +94,21 @@ public class Relationships extends WizardStep {\n \n     private final AnyTO anyTO;\n \n-    public Relationships(final AnyTO anyTO, final PageReference pageRef) {\n+    public Relationships(final AnyWrapper<?> modelObject, final PageReference pageRef) {\n         super();\n-        setTitleModel(new ResourceModel(\"any.relationships\"));\n-        this.anyTO = anyTO;\n+        add(new Label(\"title\", new ResourceModel(\"any.relationships\")));\n+\n+        if (modelObject instanceof UserWrapper\n+                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n+                && !ListUtils.isEqualList(\n+                        UserWrapper.class.cast(modelObject).getInnerObject().getRelationships(),\n+                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getRelationships())) {\n+            add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n+        } else {\n+            add(new Label(\"changed\", StringUtils.EMPTY));\n+        }\n+\n+        this.anyTO = modelObject.getInnerObject();\n         this.pageRef = pageRef;\n \n         // ------------------------\n@@ -102,6 +118,11 @@ public Relationships(final AnyTO anyTO, final PageReference pageRef) {\n         // ------------------------ \n     }\n \n+    @Override\n+    public Component getHeader(final String id, final Component parent, final IWizard wizard) {\n+        return super.getHeader(id, parent, wizard).setVisible(false);\n+    }\n+\n     private Fragment getViewFragment() {\n         final Map<String, List<RelationshipTO>> relationships = new HashMap<>();\n         addRelationship(relationships, getCurrentRelationships().toArray(new RelationshipTO[] {}));"},{"sha":"2ace1c7dfdde480008c25c73da703c0246b92057","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -22,8 +22,11 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -33,6 +36,7 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n@@ -42,7 +46,19 @@ public class Resources extends WizardStep implements WizardModel.ICondition {\n \n     private final ListModel<String> available;\n \n-    public <T extends AnyTO> Resources(final T entityTO) {\n+    public <T extends AnyTO> Resources(final AnyWrapper<T> modelObject) {\n+        final T entityTO = modelObject.getInnerObject();\n+\n+        if (modelObject instanceof UserWrapper\n+                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n+                && !ListUtils.isEqualList(\n+                        modelObject.getInnerObject().getResources(),\n+                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getResources())) {\n+            add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n+        } else {\n+            add(new Label(\"changed\", StringUtils.EMPTY));\n+        }\n+\n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n         // -----------------------------------------------------------------"},{"sha":"07d8275f55f363c3459205ddd77c90b5f2f46b63","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -22,8 +22,11 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -34,6 +37,7 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n@@ -43,7 +47,22 @@ public class Roles extends WizardStep implements ICondition {\n \n     private final List<String> allRoles;\n \n-    public <T extends AnyTO> Roles(final UserTO entityTO) {\n+    public <T extends AnyTO> Roles(final AnyWrapper<?> modelObject) {\n+        if (!(modelObject.getInnerObject() instanceof UserTO)) {\n+            throw new IllegalStateException(\"Invalid instance \" + modelObject.getInnerObject());\n+        }\n+\n+        if (UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n+                && !ListUtils.isEqualList(\n+                        UserWrapper.class.cast(modelObject).getInnerObject().getRoles(),\n+                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getRoles())) {\n+            add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n+        } else {\n+            add(new Label(\"changed\", StringUtils.EMPTY));\n+        }\n+\n+        final UserTO entityTO = UserTO.class.cast(modelObject.getInnerObject());\n+\n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n         // -----------------------------------------------------------------"},{"sha":"844ff4bc20431d7f673ddf16a4ff49502177743f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.Collections;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -56,6 +58,11 @@ public UserDetails(\n         final AjaxTextFieldPanel username = new AjaxTextFieldPanel(\n                 \"username\", \"username\", new PropertyModel<String>(userTO, \"username\"), false);\n \n+        if (wrapper.getPreviousUserTO() != null && StringUtils.\n+                compare(wrapper.getPreviousUserTO().getUsername(), wrapper.getInnerObject().getUsername()) != 0) {\n+            username.showExternAction(new LabelInfo(\"externalAction\", wrapper.getPreviousUserTO().getUsername()));\n+        }\n+\n         if (templateMode) {\n             username.enableJexlHelp();\n         } else {"},{"sha":"8d0dc5ba89c479d0239c1cd3dd024ba568c72acd","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserTemplateWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -38,7 +38,7 @@ public UserTemplateWizardBuilder(\n             final List<String> anyTypeClasses,\n             final UserFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n-        super(null, anyTypeClasses, formLayoutInfo, pageRef);\n+        super(anyTypeClasses, formLayoutInfo, pageRef);\n         this.templatable = templatable;\n \n         if (templatable.getTemplates().containsKey(AnyTypeKind.USER.name())) {"},{"sha":"f56e24daa349db7ba8b237a51747f098d75c5036","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -38,13 +38,38 @@ public class UserWizardBuilder extends AnyWizardBuilder<UserTO> implements UserF\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n+    /**\n+     * Costructor to be used for templating only.\n+     *\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo form layout.\n+     * @param pageRef reference page.\n+     */\n+    public UserWizardBuilder(\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new UserWrapper(null), anyTypeClasses, formLayoutInfo, pageRef);\n+    }\n+\n+    /**\n+     * Constructor to be used for Approval details only.\n+     *\n+     * @param previousUserTO previous user status.\n+     * @param userTO new user status to be approved.\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo from layout.\n+     * @param pageRef reference page.\n+     */\n     public UserWizardBuilder(\n+            final UserTO previousUserTO,\n             final UserTO userTO,\n             final List<String> anyTypeClasses,\n             final UserFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(new UserWrapper(userTO), anyTypeClasses, formLayoutInfo, pageRef);\n+        super(new UserWrapper(previousUserTO, userTO), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     @Override"},{"sha":"2476c630850b5a5da194240cb399a20c87abf611","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWrapper.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWrapper.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -26,8 +26,15 @@ public class UserWrapper extends AnyWrapper<UserTO> {\n \n     private boolean storePasswordInSyncope = true;\n \n+    private UserTO previousUserTO;\n+\n     public UserWrapper(final UserTO userTO) {\n+        this(null, userTO);\n+    }\n+\n+    public UserWrapper(final UserTO previousUserTO, final UserTO userTO) {\n         super(userTO);\n+        this.previousUserTO = previousUserTO;\n     }\n \n     public boolean isStorePasswordInSyncope() {\n@@ -38,4 +45,7 @@ public void setStorePasswordInSyncope(final boolean storePasswordInSyncope) {\n         this.storePasswordInSyncope = storePasswordInSyncope;\n     }\n \n+    public UserTO getPreviousUserTO() {\n+        return previousUserTO;\n+    }\n }"},{"sha":"4ab5bee25a5947f7efbb3bb86659c55d5e7c4f65","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":24,"deletions":8,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -22,8 +22,11 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n@@ -51,14 +54,17 @@ public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n \n     private final AjaxWizard.Mode mode;\n \n+    private final AnyWrapper<?> modelObject;\n+\n     public <T extends AnyTO> VirAttrs(\n-            final T anyTO,\n+            final AnyWrapper<T> modelObject,\n             final AjaxWizard.Mode mode,\n             final List<String> anyTypeClasses,\n             final List<String> whichVirAttrs) {\n \n-        super(anyTO, anyTypeClasses, whichVirAttrs);\n+        super(modelObject, anyTypeClasses, whichVirAttrs);\n         this.mode = mode;\n+        this.modelObject = modelObject;\n \n         setTitleModel(new ResourceModel(\"attributes.virtual\"));\n \n@@ -174,24 +180,34 @@ public VirSchemas(final String id, final IModel<List<AttrTO>> attrTOs) {\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n \n-                    AjaxTextFieldPanel panel =\n-                            new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n+                    AbstractFieldPanel<?> panel\n+                            = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n \n                     boolean readonly = attrTO.getSchemaInfo() == null\n                             ? false\n                             : VirSchemaTO.class.cast(attrTO.getSchemaInfo()).isReadonly();\n \n                     if (mode == AjaxWizard.Mode.TEMPLATE) {\n-                        item.add(panel.enableJexlHelp().setEnabled(!readonly));\n+                        AjaxTextFieldPanel.class.cast(panel).enableJexlHelp().setEnabled(!readonly);\n                     } else {\n-                        item.add(new MultiFieldPanel.Builder<>(\n+                        panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                 \"panel\",\n                                 attrTO.getSchema(),\n-                                panel).setEnabled(!readonly));\n+                                AjaxTextFieldPanel.class.cast(panel));\n+                        panel.setEnabled(!readonly);\n+                    }\n+\n+                    item.add(panel);\n+\n+                    if (CollectionUtils.isNotEmpty(attrTO.getValues())\n+                            && VirAttrs.this.modelObject instanceof UserWrapper\n+                            && UserWrapper.class.cast(VirAttrs.this.modelObject).getPreviousUserTO() != null) {\n+                        panel.showExternAction(new LabelInfo(\"externalAction\", StringUtils.EMPTY));\n                     }\n                 }\n-            });\n+            }\n+            );\n         }\n     }\n }"},{"sha":"f70fdfe86bad82ed85c862554ee3451676a404eb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -24,6 +24,7 @@\n           <h3 class=\"box-title\">\n             <wicket:message key=\"auxClasses.palette\">AUX CLASSES</wicket:message>\n           </h3>\n+          <span wicket:id=\"changed\"></span>\n         </div>\n         <div class=\"box-body\">\n           <span wicket:id=\"auxClasses\">[AUX CLASSES]</span>"},{"sha":"10b6524410a92a02fcf9e5114959dab04e7c963c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Groups.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.html?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -24,6 +24,7 @@\n           <h3 class=\"box-title\">\n             <wicket:message key=\"groups.palette\">[GROUPS]</wicket:message>\n           </h3>\n+          <span wicket:id=\"changed\"></span>\n         </div>\n         <div class=\"box-body\">\n           <span wicket:id=\"groups\"/>"},{"sha":"bfa6f4545bf5077ef4019c78d1b078ba36a396e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Relationships.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -20,6 +20,10 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel>\n+      <div class=\"wizard-step-title\">\n+        <div><span wicket:id=\"title\">[RELATIONSHIPS]</span></div><span wicket:id=\"changed\"></span>\n+      </div>\n+\n       <div id=\"emptyPlaceholder\"/>\n       <span wicket:id=\"relationships\"/>\n "},{"sha":"54219d18b8ee3c180b14537a70f9cc23951b778f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Resources.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.html?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -26,6 +26,7 @@\n             <h3 class=\"box-title\">\n               <wicket:message key=\"resources.palette\">[ROLES]</wicket:message>\n             </h3>\n+            <span wicket:id=\"changed\"></span>\n           </div>\n           <div class=\"box-body\">\n             <span wicket:id=\"resources\">[RESOURCES]</span>"},{"sha":"f7eded7cc3814df570468dc898d5bebb420a13b2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Roles.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.html?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -26,13 +26,14 @@\n             <h3 class=\"box-title\">\n               <wicket:message key=\"roles.palette\">[ROLES]</wicket:message>\n             </h3>\n+            <span wicket:id=\"changed\"></span>\n           </div>\n           <div class=\"box-body\">\n             <span wicket:id=\"roles\">[ROLES]</span>\n           </div>\n         </div>\n       </div>\n-      \n+\n       <div class=\"col-xs-12\">\n         <div class=\"box\">\n           <div class=\"box-header\">"},{"sha":"00088427c0e26a60b4d9f3d000dc63a4c238bc59","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c679035d94013250ffa3a328be71b6885447cece/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c679035d94013250ffa3a328be71b6885447cece/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=c679035d94013250ffa3a328be71b6885447cece","patch":"@@ -438,17 +438,6 @@ private static Collection<AttrTO> patch(final Map<String, AttrTO> attrs, final S\n                 if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n                     rwattrs.put(patch.getAttrTO().getSchema(), patch.getAttrTO());\n                 }\n-                switch (patch.getOperation()) {\n-                    case ADD_REPLACE:\n-                        if (rwattrs.containsKey(patch.getAttrTO().getSchema())) {\n-                            rwattrs.remove(patch.getAttrTO().getSchema());\n-                        }\n-                        break;\n-\n-                    case DELETE:\n-                    default:\n-                        rwattrs.remove(patch.getAttrTO().getSchema());\n-                }\n             }\n         }\n \n@@ -472,12 +461,12 @@ private static <T extends AnyTO, K extends AnyPatch> void patch(final T to, fina\n         for (StringPatchItem auxClassPatch : patch.getAuxClasses()) {\n             switch (auxClassPatch.getOperation()) {\n                 case ADD_REPLACE:\n-                    to.getAuxClasses().add(auxClassPatch.getValue());\n+                    result.getAuxClasses().add(auxClassPatch.getValue());\n                     break;\n \n                 case DELETE:\n                 default:\n-                    to.getAuxClasses().remove(auxClassPatch.getValue());\n+                    result.getAuxClasses().remove(auxClassPatch.getValue());\n             }\n         }\n "}]}