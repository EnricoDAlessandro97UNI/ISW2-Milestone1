{"sha":"03cf4bf515c2b9a70ba833d600bd836cbcbff193","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzY2Y0YmY1MTVjMmI5YTcwYmE4MzNkNjAwYmQ4MzZjYmNiZmYxOTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-27T14:21:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-27T14:21:53Z"},"message":"Fixing some weirdness\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1546043 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"204fd466c4bd49bee1e5b6f51b1a5b7ad20f6dc9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/204fd466c4bd49bee1e5b6f51b1a5b7ad20f6dc9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03cf4bf515c2b9a70ba833d600bd836cbcbff193","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03cf4bf515c2b9a70ba833d600bd836cbcbff193","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03cf4bf515c2b9a70ba833d600bd836cbcbff193","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03cf4bf515c2b9a70ba833d600bd836cbcbff193/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a03aee1d61679bbf33fd3b80a2405a2e1fee386c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a03aee1d61679bbf33fd3b80a2405a2e1fee386c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a03aee1d61679bbf33fd3b80a2405a2e1fee386c"}],"stats":{"total":54,"additions":26,"deletions":28},"files":[{"sha":"82745015ba07f704d15deb4e43e91bc756e5658e","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":26,"deletions":28,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03cf4bf515c2b9a70ba833d600bd836cbcbff193/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03cf4bf515c2b9a70ba833d600bd836cbcbff193/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=03cf4bf515c2b9a70ba833d600bd836cbcbff193","patch":"@@ -473,46 +473,46 @@ public void dryRun() {\n \n     @Test\n     public void issueSYNCOPE81() {\n-        String sender = createNotificationTask();\n+        String sender = \"syncope81@syncope.apache.org\";\n+        createNotificationTask(sender);\n         NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n         assertNotNull(taskTO);\n \n-        int executions = taskTO.getExecutions().size();\n-\n-        if (executions == 0) {\n-            // generate an execution in order to verify the deletion of a notification task with one or more executions\n+        assertTrue(taskTO.getExecutions().isEmpty());\n \n-            TaskExecTO execution = taskService.execute(taskTO.getId(), false);\n-            assertEquals(\"NOT_SENT\", execution.getStatus());\n+        // generate an execution in order to verify the deletion of a notification task with one or more executions\n+        TaskExecTO execution = taskService.execute(taskTO.getId(), false);\n+        assertEquals(\"NOT_SENT\", execution.getStatus());\n \n-            int i = 0;\n-            int maxit = 50;\n+        int i = 0;\n+        int maxit = 50;\n+        int executions = 0;\n \n-            // wait for task exec completion (executions incremented)\n-            do {\n-                try {\n-                    Thread.sleep(1000);\n-                } catch (InterruptedException e) {\n-                }\n+        // wait for task exec completion (executions incremented)\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n \n-                taskTO = taskService.read(taskTO.getId());\n+            taskTO = taskService.read(taskTO.getId());\n \n-                assertNotNull(taskTO);\n-                assertNotNull(taskTO.getExecutions());\n+            assertNotNull(taskTO);\n+            assertNotNull(taskTO.getExecutions());\n \n-                i++;\n-            } while (executions == taskTO.getExecutions().size() && i < maxit);\n+            i++;\n+        } while (executions == taskTO.getExecutions().size() && i < maxit);\n \n-            assertFalse(taskTO.getExecutions().isEmpty());\n-        }\n+        assertFalse(taskTO.getExecutions().isEmpty());\n \n         taskService.delete(taskTO.getId());\n     }\n \n     @Test\n     public void issueSYNCOPE86() {\n         // 1. create notification task\n-        String sender = createNotificationTask();\n+        String sender = \"syncope86@syncope.apache.org\";\n+        createNotificationTask(sender);\n \n         // 2. get NotificationTaskTO for user just created\n         NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n@@ -547,7 +547,7 @@ private NotificationTaskTO findNotificationTaskBySender(final String sender) {\n         return taskTO;\n     }\n \n-    private String createNotificationTask() {\n+    private void createNotificationTask(final String sender) {\n         // 1. Create notification\n         NotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n@@ -565,9 +565,8 @@ private String createNotificationTask() {\n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserSchema);\n \n-        String sender = \"syncope86@syncope.apache.org\";\n         notification.setSender(sender);\n-        String subject = \"Test notification SYNCOPE-86\";\n+        String subject = \"Test notification\";\n         notification.setSubject(subject);\n         notification.setTemplate(\"optin\");\n \n@@ -576,14 +575,13 @@ private String createNotificationTask() {\n         assertNotNull(notification);\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope86@syncope.apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope@syncope.apache.org\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n-        return sender;\n     }\n \n     @Test"}]}