{"sha":"740bf422f107307a6dafbbf40bcb85055358cf8f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc0MGJmNDIyZjEwNzMwN2E2ZGFmYmJmNDBiY2I4NTA1NTM1OGNmOGY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-09-19T08:53:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-09-19T08:53:24Z"},"message":"[SYNCOPE-135] core features completed, now let's go to console\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_2_X@1626148 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"66e43601da4c8cec587c2269b371bd898da07998","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/66e43601da4c8cec587c2269b371bd898da07998"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/740bf422f107307a6dafbbf40bcb85055358cf8f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/740bf422f107307a6dafbbf40bcb85055358cf8f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/740bf422f107307a6dafbbf40bcb85055358cf8f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/740bf422f107307a6dafbbf40bcb85055358cf8f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6eb22f6af5e6bcf457db945c0b0069b19e5b28c4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6eb22f6af5e6bcf457db945c0b0069b19e5b28c4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6eb22f6af5e6bcf457db945c0b0069b19e5b28c4"}],"stats":{"total":2537,"additions":2048,"deletions":489},"files":[{"sha":"d4e39f26640b74428f7065dea673501c06679732","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -43,6 +43,10 @@ public class UserMod extends AbstractSubjectMod {\n \n     private StatusMod pwdPropRequest;\n \n+    private Long securityQuestion;\n+\n+    private String securityAnswer;\n+\n     public UserMod() {\n         super();\n \n@@ -88,6 +92,22 @@ public void setPwdPropRequest(final StatusMod pwdPropRequest) {\n         this.pwdPropRequest = pwdPropRequest;\n     }\n \n+    public Long getSecurityQuestion() {\n+        return securityQuestion;\n+    }\n+\n+    public void setSecurityQuestion(final Long securityQuestion) {\n+        this.securityQuestion = securityQuestion;\n+    }\n+\n+    public String getSecurityAnswer() {\n+        return securityAnswer;\n+    }\n+\n+    public void setSecurityAnswer(final String securityAnswer) {\n+        this.securityAnswer = securityAnswer;\n+    }\n+\n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n@@ -96,6 +116,8 @@ public boolean isEmpty() {\n                 && username == null\n                 && membershipsToAdd.isEmpty()\n                 && membershipsToRemove.isEmpty()\n-                && pwdPropRequest == null;\n+                && pwdPropRequest == null\n+                && securityQuestion == null\n+                && securityAnswer == null;\n     }\n }"},{"sha":"0e4ff9254540d58ace061ce22588e5e7f41cfff2","filename":"common/src/main/java/org/apache/syncope/common/services/ConnectorService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -155,12 +155,12 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(\n      * Updates the connector instance matching the provided id.\n      *\n      * @param connInstanceId connector instance id to be updated\n-     * @param connInstaceTO connector instance to be stored\n+     * @param connInstanceTO connector instance to be stored\n      */\n     @PUT\n     @Path(\"{connInstanceId}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"connInstanceId\") Long connInstanceId, @NotNull ConnInstanceTO connInstaceTO);\n+    void update(@NotNull @PathParam(\"connInstanceId\") Long connInstanceId, @NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Deletes the connector instance matching the provided id.\n@@ -172,14 +172,14 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(\n     void delete(@NotNull @PathParam(\"connInstanceId\") Long connInstanceId);\n \n     /**\n-     * @param connInstaceTO connector instance to be used for connection check\n+     * @param connInstanceTO connector instance to be used for connection check\n      * @return true if connection could be established\n      */\n     @POST\n     @Path(\"check\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    boolean check(@NotNull ConnInstanceTO connInstaceTO);\n+    boolean check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Reload all connector bundles and instances."},{"sha":"09958f26a8a757e6af0c587de1d0ca7a4f22ab37","filename":"common/src/main/java/org/apache/syncope/common/services/SecurityQuestionService.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSecurityQuestionService.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.services;\n+\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.model.wadl.Description;\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.to.SecurityQuestionTO;\n+\n+/**\n+ * REST operations for configuration.\n+ */\n+@Path(\"securityQuestions\")\n+public interface SecurityQuestionService extends JAXRSService {\n+\n+    /**\n+     * Returns a list of all security questions.\n+     *\n+     * @return list of all security questions\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    List<SecurityQuestionTO> list();\n+\n+    /**\n+     * Returns security question with matching id.\n+     *\n+     * @param securityQuestionId security question id to be read\n+     * @return security question with matching id\n+     */\n+    @GET\n+    @Path(\"{securityQuestionId}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    SecurityQuestionTO read(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId);\n+\n+    /**\n+     * Creates a new security question.\n+     *\n+     * @param securityQuestionTO security question to be created\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created security question\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring <tt>Location</tt> header of created security question\")\n+    })\n+    @POST\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(@NotNull SecurityQuestionTO securityQuestionTO);\n+\n+    /**\n+     * Updates the security question matching the provided id.\n+     *\n+     * @param securityQuestionId security question id to be updated\n+     * @param securityQuestionTO security question to be stored\n+     */\n+    @PUT\n+    @Path(\"{securityQuestionId}\")\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    void update(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId,\n+            @NotNull SecurityQuestionTO securityQuestionTO);\n+\n+    /**\n+     * Deletes the security question matching the provided id.\n+     *\n+     * @param securityQuestionId security question id to be deleted\n+     */\n+    @DELETE\n+    @Path(\"{securityQuestionId}\")\n+    void delete(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId);\n+\n+    /**\n+     * Ask for security question configured for the user matching the given username, if any.\n+     *\n+     * @param username username for which the security question is requested\n+     * @return security question, if configured for the user matching the given username\n+     */\n+    @GET\n+    @Path(\"byUser/{username}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    SecurityQuestionTO readByUser(@NotNull @PathParam(\"username\") String username);\n+}"},{"sha":"454509a56865287af9a1d848903edfc00100b80f","filename":"common/src/main/java/org/apache/syncope/common/services/UserSelfService.java","status":"modified","additions":29,"deletions":2,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -46,12 +46,15 @@ public interface UserSelfService extends JAXRSService {\n     /**\n      * Checks whether self-registration is allowed.\n      *\n-     * @return <tt>Response</tt> contains special Syncope HTTP header indicating if user self registration is allowed\n+     * @return <tt>Response</tt> contains special Syncope HTTP header indicating if user self registration and / or\n+     * password reset is allowed\n      * @see org.apache.syncope.common.types.RESTHeaders#SELFREGISTRATION_ALLOWED\n+     * @see org.apache.syncope.common.types.RESTHeaders#PASSWORDRESET_ALLOWED\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Contains special Syncope HTTP header indicating if user self registration is allowed\")\n+                value = \"Contains special Syncope HTTP header indicating if user self registration \"\n+                + \"and / or password reset is allowed\")\n     })\n     @OPTIONS\n     Response getOptions();\n@@ -114,4 +117,28 @@ Response create(@NotNull UserTO userTO,\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete();\n \n+    /**\n+     * Provides answer for the security question configured for user matching the given username, if any.\n+     * If provided anwser matches the one stored for that user, a password reset token is internally generated,\n+     * otherwise an error is returned.\n+     *\n+     * @param username username for which the security answer is provided\n+     * @param securityAnswer actual answer text\n+     */\n+    @POST\n+    @Path(\"requestPasswordReset\")\n+    void requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n+\n+    /**\n+     * Reset the password value for the user matching the provided token, if available and still valid.\n+     * If the token actually matches one of users, and if it is still valid at the time of submission, the matching\n+     * user's password value is set as provided. The new password value will need anyway to comply with all relevant\n+     * password policies.\n+     *\n+     * @param token password reset token\n+     * @param password new password to be set\n+     */\n+    @POST\n+    @Path(\"confirmPasswordReset\")\n+    void confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n }"},{"sha":"5660b54f3f9f70d90a592065d8f1e6a8026d5cb4","filename":"common/src/main/java/org/apache/syncope/common/to/ConnPoolConfTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnPoolConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnPoolConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnPoolConfTO.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -26,6 +26,8 @@\n @XmlType\n public class ConnPoolConfTO extends AbstractBaseBean {\n \n+    private static final long serialVersionUID = -214360178113476623L;\n+\n     private Integer maxObjects;\n \n     private Integer minIdle;"},{"sha":"a2098510ded26fa236c509b183b36eef4d7026bb","filename":"common/src/main/java/org/apache/syncope/common/to/SecurityQuestionTO.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSecurityQuestionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSecurityQuestionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSecurityQuestionTO.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"securityQuestion\")\n+@XmlType\n+public class SecurityQuestionTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 5969810939993556530L;\n+\n+    private long id;\n+\n+    private String content;\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setId(final long id) {\n+        this.id = id;\n+    }\n+\n+    public String getContent() {\n+        return content;\n+    }\n+\n+    public void setContent(final String content) {\n+        this.content = content;\n+    }\n+\n+}"},{"sha":"54b75f7d11b09836d3dbb36a845288565aae062f","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -58,6 +58,10 @@ public class UserTO extends AbstractSubjectTO {\n \n     private Integer failedLogins;\n \n+    private Long securityQuestion;\n+\n+    private String securityAnswer;\n+\n     public String getPassword() {\n         return password;\n     }\n@@ -150,6 +154,22 @@ public void setLastLoginDate(final Date lastLoginDate) {\n         this.lastLoginDate = lastLoginDate;\n     }\n \n+    public Long getSecurityQuestion() {\n+        return securityQuestion;\n+    }\n+\n+    public void setSecurityQuestion(final Long securityQuestion) {\n+        this.securityQuestion = securityQuestion;\n+    }\n+\n+    public String getSecurityAnswer() {\n+        return securityAnswer;\n+    }\n+\n+    public void setSecurityAnswer(final String securityAnswer) {\n+        this.securityAnswer = securityAnswer;\n+    }\n+\n     @Override\n     public String toString() {\n         return new ReflectionToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE) {"},{"sha":"a4545f3b02ed0663659a58a0139afc4b89205e4b","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -28,6 +28,7 @@ public enum ClientExceptionType {\n     DataIntegrityViolation(Response.Status.BAD_REQUEST),\n     EntityExists(Response.Status.CONFLICT),\n     GenericPersistence(Response.Status.BAD_REQUEST),\n+    InvalidSecurityAnswer(Response.Status.BAD_REQUEST),\n     InvalidLogger(Response.Status.BAD_REQUEST),\n     InvalidConnInstance(Response.Status.BAD_REQUEST),\n     InvalidConnIdConf(Response.Status.BAD_REQUEST),"},{"sha":"4bdc5ce84029278d9dbacdb69a6851042c496f38","filename":"common/src/main/java/org/apache/syncope/common/types/RESTHeaders.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -38,6 +38,11 @@ public final class RESTHeaders {\n      */\n     public static final String SELFREGISTRATION_ALLOWED = \"Syncope.SelfRegistration.Allowed\";\n \n+    /**\n+     * Option key stating if user request create is allowed or not.\n+     */\n+    public static final String PASSWORDRESET_ALLOWED = \"Syncope.PasswordReset.Allowed\";\n+\n     /**\n      * Option key stating if Activiti workflow adapter is in use for users.\n      */"},{"sha":"d78085cad23c8b5b068f345eb9c995c102823248","filename":"core/pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -180,7 +180,11 @@ under the License.\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-json-provider</artifactId>\n     </dependency>\n-\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.module</groupId>\n+      <artifactId>jackson-module-afterburner</artifactId>\n+    </dependency>\n+      \n     <dependency>\n       <groupId>org.apache.velocity</groupId>\n       <artifactId>velocity</artifactId>"},{"sha":"6a78407d7afebc5f279a956b4bfffdcccc2187c4","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationJob.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -89,12 +89,7 @@ enum Status {\n     private long maxRetries;\n \n     private void init() {\n-        try {\n-            maxRetries = confDAO.find(\"notification.maxRetries\", \"0\").getValues().get(0).getLongValue();\n-        } catch (NumberFormatException e) {\n-            LOG.error(\"Invalid maximum number of retries, retries disabled\", e);\n-            maxRetries = 0;\n-        }\n+        maxRetries = confDAO.find(\"notification.maxRetries\", \"0\").getValues().get(0).getLongValue();\n \n         if (mailSender instanceof JavaMailSenderImpl\n                 && StringUtils.isNotBlank(((JavaMailSenderImpl) mailSender).getUsername())) {"},{"sha":"60aba353e97f801a60f12f6a9b9e674b03f9b5fb","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SecurityQuestion.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSecurityQuestion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSecurityQuestion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSecurityQuestion.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class SecurityQuestion extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -7646140284033489392L;\n+\n+    @Id\n+    private Long id;\n+\n+    @Column(unique = true)\n+    private String content;\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public String getContent() {\n+        return content;\n+    }\n+\n+    public void setContent(final String content) {\n+        this.content = content;\n+    }\n+\n+}"},{"sha":"4af0682d9c51775925a8cdc5fe972d88ea2b0078","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":29,"deletions":4,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -39,6 +39,7 @@\n import javax.persistence.JoinTable;\n import javax.persistence.Lob;\n import javax.persistence.ManyToMany;\n+import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n@@ -53,6 +54,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.validation.entity.SyncopeUserCheck;\n@@ -154,7 +156,13 @@ public class SyncopeUser extends AbstractSubject {\n             @JoinColumn(name = \"resource_name\"))\n     @Valid\n     private Set<ExternalResource> resources;\n-    \n+\n+    @ManyToOne(fetch = FetchType.EAGER, optional = true)\n+    private SecurityQuestion securityQuestion;\n+\n+    @Column(nullable = true)\n+    private String securityAnswer;\n+\n     public SyncopeUser() {\n         super();\n \n@@ -267,7 +275,7 @@ public void setEncodedPassword(final String password, final CipherAlgorithm ciph\n         this.cipherAlgorithm = cipherAlgoritm;\n     }\n \n-    public void setPassword(final String password, final CipherAlgorithm cipherAlgoritm, final int historySize) {\n+    public void setPassword(final String password, final CipherAlgorithm cipherAlgoritm) {\n         // clear password\n         this.clearPassword = password;\n \n@@ -494,13 +502,30 @@ public boolean verifyPasswordHistory(final String password, final int size) {\n                 res = passwordHistory.subList(size >= passwordHistory.size()\n                         ? 0\n                         : passwordHistory.size() - size, passwordHistory.size()).contains(cipherAlgorithm == null\n-                                ? password\n-                                : Encryptor.getInstance().encode(password, cipherAlgorithm));\n+                                        ? password\n+                                        : Encryptor.getInstance().encode(password, cipherAlgorithm));\n             } catch (Exception e) {\n                 LOG.error(\"Error evaluating password history\", e);\n             }\n         }\n \n         return res;\n     }\n+\n+    public SecurityQuestion getSecurityQuestion() {\n+        return securityQuestion;\n+    }\n+\n+    public void setSecurityQuestion(final SecurityQuestion securityQuestion) {\n+        this.securityQuestion = securityQuestion;\n+    }\n+\n+    public String getSecurityAnswer() {\n+        return securityAnswer;\n+    }\n+\n+    public void setSecurityAnswer(final String securityAnswer) {\n+        this.securityAnswer = securityAnswer;\n+    }\n+\n }"},{"sha":"c6465b599a45612c86d8ee68cb8e21e7aa242ad4","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/SecurityQuestionDAO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionDAO.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+\n+public interface SecurityQuestionDAO extends DAO {\n+\n+    SecurityQuestion find(Long id);\n+\n+    List<SecurityQuestion> findAll();\n+\n+    SecurityQuestion save(SecurityQuestion securityQuestion) throws InvalidEntityException;\n+\n+    void delete(Long id);\n+\n+}"},{"sha":"b2b8be3895d3fc5195d2122bef6cfe2498d482bc","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -22,6 +22,7 @@\n import java.util.Set;\n \n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n@@ -35,6 +36,10 @@ public interface UserDAO extends SubjectDAO {\n \n     SyncopeUser findByWorkflowId(String workflowId);\n \n+    SyncopeUser findByToken(String token);\n+\n+    List<SyncopeUser> findBySecurityQuestion(SecurityQuestion securityQuestion);\n+\n     List<SyncopeUser> findByDerAttrValue(String schemaName, String value);\n \n     List<SyncopeUser> findByAttrValue(String schemaName, UAttrValue attrValue);\n@@ -54,4 +59,5 @@ public interface UserDAO extends SubjectDAO {\n     void delete(Long id);\n \n     void delete(SyncopeUser user);\n+\n }"},{"sha":"704d6f34b8f2fc18276ee631d4c16925197a49a0","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SecurityQuestionDAOImpl.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSecurityQuestionDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSecurityQuestionDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSecurityQuestionDAOImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao.impl;\n+\n+import java.util.List;\n+import javax.persistence.TypedQuery;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.SecurityQuestionDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class SecurityQuestionDAOImpl extends AbstractDAOImpl implements SecurityQuestionDAO {\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Override\n+    public SecurityQuestion find(final Long id) {\n+        return entityManager.find(SecurityQuestion.class, id);\n+    }\n+\n+    @Override\n+    public List<SecurityQuestion> findAll() {\n+        final TypedQuery<SecurityQuestion> query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SecurityQuestion.class.getSimpleName() + \" e \", SecurityQuestion.class);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public SecurityQuestion save(final SecurityQuestion securityQuestion) throws InvalidEntityException {\n+        return entityManager.merge(securityQuestion);\n+    }\n+\n+    @Override\n+    public void delete(final Long id) {\n+        SecurityQuestion securityQuestion = find(id);\n+        if (securityQuestion == null) {\n+            return;\n+        }\n+\n+        for (SyncopeUser user : userDAO.findBySecurityQuestion(securityQuestion)) {\n+            user.setSecurityQuestion(null);\n+            user.setSecurityAnswer(null);\n+            userDAO.save(user);\n+        }\n+\n+        entityManager.remove(securityQuestion);\n+    }\n+\n+}"},{"sha":"2f7162fcf7e2b1403d2230b219ce8ffab2002ebd","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n@@ -78,7 +79,7 @@ public SyncopeUser find(final Long id) {\n     @Override\n     public SyncopeUser find(final String username) {\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n-                + \" e \" + \"WHERE e.username = :username\", SyncopeUser.class);\n+                + \" e WHERE e.username = :username\", SyncopeUser.class);\n         query.setParameter(\"username\", username);\n \n         SyncopeUser result = null;\n@@ -94,7 +95,7 @@ public SyncopeUser find(final String username) {\n     @Override\n     public SyncopeUser findByWorkflowId(final String workflowId) {\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n-                + \" e \" + \"WHERE e.workflowId = :workflowId\", SyncopeUser.class);\n+                + \" e WHERE e.workflowId = :workflowId\", SyncopeUser.class);\n         query.setParameter(\"workflowId\", workflowId);\n \n         SyncopeUser result = null;\n@@ -107,6 +108,31 @@ public SyncopeUser findByWorkflowId(final String workflowId) {\n         return result;\n     }\n \n+    @Override\n+    public SyncopeUser findByToken(final String token) {\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n+                + \" e WHERE e.token = :token\", SyncopeUser.class);\n+        query.setParameter(\"token\", token);\n+\n+        SyncopeUser result = null;\n+        try {\n+            result = query.getSingleResult();\n+        } catch (NoResultException e) {\n+            LOG.debug(\"No user found with token {}\", token, e);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public List<SyncopeUser> findBySecurityQuestion(final SecurityQuestion securityQuestion) {\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n+                + \" e WHERE e.securityQuestion = :securityQuestion\", SyncopeUser.class);\n+        query.setParameter(\"securityQuestion\", securityQuestion);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     protected TypedQuery<AbstractAttrValue> findByAttrValueQuery(final String entityName) {\n         return entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\""},{"sha":"bbc1e835f280fd431c61e8c9536fd4cf1c7d2fcc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/NotificationController.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -66,7 +66,7 @@ public List<NotificationTO> list() {\n \n     @PreAuthorize(\"hasRole('NOTIFICATION_CREATE')\")\n     public NotificationTO create(final NotificationTO notificationTO) {\n-        return binder.getNotificationTO(notificationDAO.save(binder.createNotification(notificationTO)));\n+        return binder.getNotificationTO(notificationDAO.save(binder.create(notificationTO)));\n     }\n \n     @PreAuthorize(\"hasRole('NOTIFICATION_UPDATE')\")\n@@ -77,7 +77,7 @@ public NotificationTO update(final NotificationTO notificationTO) {\n             throw new NotFoundException(String.valueOf(notificationTO.getId()));\n         }\n \n-        binder.updateNotification(notification, notificationTO);\n+        binder.update(notification, notificationTO);\n         notification = notificationDAO.save(notification);\n \n         return binder.getNotificationTO(notification);\n@@ -87,19 +87,16 @@ public NotificationTO update(final NotificationTO notificationTO) {\n     public NotificationTO delete(final Long notificationId) {\n         Notification notification = notificationDAO.find(notificationId);\n         if (notification == null) {\n-            LOG.error(\"Could not find notificatin '\" + notificationId + \"'\");\n+            LOG.error(\"Could not find notification '\" + notificationId + \"'\");\n \n             throw new NotFoundException(String.valueOf(notificationId));\n         }\n \n-        NotificationTO notificationToDelete = binder.getNotificationTO(notification);\n+        NotificationTO deleted = binder.getNotificationTO(notification);\n         notificationDAO.delete(notificationId);\n-        return notificationToDelete;\n+        return deleted;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n     @Override\n     protected NotificationTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {"},{"sha":"dbfbb1e3bfd7fd4bfde27c252516b52f66d12351","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/SecurityQuestionController.java","status":"added","additions":150,"deletions":0,"changes":150,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSecurityQuestionController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSecurityQuestionController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSecurityQuestionController.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.controller;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.common.to.SecurityQuestionTO;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.SecurityQuestionDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.rest.data.SecurityQuestionDataBinder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SecurityQuestionController extends AbstractTransactionalController<SecurityQuestionTO> {\n+\n+    @Autowired\n+    private SecurityQuestionDAO securityQuestionDAO;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private SecurityQuestionDataBinder binder;\n+\n+    @PreAuthorize(\"hasRole('SECURITY_QUESTION_LIST')\")\n+    public List<SecurityQuestionTO> list() {\n+        List<SecurityQuestionTO> result = new ArrayList<SecurityQuestionTO>();\n+        for (SecurityQuestion securityQuestion : securityQuestionDAO.findAll()) {\n+            result.add(binder.getSecurityQuestionTO(securityQuestion));\n+        }\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('SECURITY_QUESTION_READ')\")\n+    public SecurityQuestionTO read(final Long securityQuestionId) {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(securityQuestionId);\n+        if (securityQuestion == null) {\n+            LOG.error(\"Could not find security question '\" + securityQuestionId + \"'\");\n+\n+            throw new NotFoundException(String.valueOf(securityQuestionId));\n+        }\n+\n+        return binder.getSecurityQuestionTO(securityQuestion);\n+    }\n+\n+    @PreAuthorize(\"hasRole('SECURITY_QUESTION_CREATE')\")\n+    public SecurityQuestionTO create(final SecurityQuestionTO securityQuestionTO) {\n+        return binder.getSecurityQuestionTO(securityQuestionDAO.save(binder.create(securityQuestionTO)));\n+    }\n+\n+    @PreAuthorize(\"hasRole('SECURITY_QUESTION_UPDATE')\")\n+    public SecurityQuestionTO update(final SecurityQuestionTO securityQuestionTO) {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(securityQuestionTO.getId());\n+        if (securityQuestion == null) {\n+            LOG.error(\"Could not find security question '\" + securityQuestionTO.getId() + \"'\");\n+\n+            throw new NotFoundException(String.valueOf(securityQuestionTO.getId()));\n+        }\n+\n+        binder.update(securityQuestion, securityQuestionTO);\n+        securityQuestion = securityQuestionDAO.save(securityQuestion);\n+\n+        return binder.getSecurityQuestionTO(securityQuestion);\n+    }\n+\n+    @PreAuthorize(\"hasRole('SECURITY_QUESTION_DELETE')\")\n+    public SecurityQuestionTO delete(final Long securityQuestionId) {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(securityQuestionId);\n+        if (securityQuestion == null) {\n+            LOG.error(\"Could not find security question '\" + securityQuestionId + \"'\");\n+\n+            throw new NotFoundException(String.valueOf(securityQuestionId));\n+        }\n+\n+        SecurityQuestionTO deleted = binder.getSecurityQuestionTO(securityQuestion);\n+        securityQuestionDAO.delete(securityQuestionId);\n+        return deleted;\n+    }\n+\n+    @PreAuthorize(\"isAnonymous() or hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n+    public SecurityQuestionTO read(final String username) {\n+        if (username == null) {\n+            throw new NotFoundException(\"Null username\");\n+        }\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        if (user.getSecurityQuestion() == null) {\n+            LOG.error(\"Could not find security question for user '\" + username + \"'\");\n+\n+            throw new NotFoundException(\"Security question for user \" + username);\n+        }\n+\n+        return binder.getSecurityQuestionTO(user.getSecurityQuestion());\n+    }\n+\n+    @Override\n+    protected SecurityQuestionTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        Long id = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; id == null && i < args.length; i++) {\n+                if (args[i] instanceof Long) {\n+                    id = (Long) args[i];\n+                } else if (args[i] instanceof SecurityQuestionTO) {\n+                    id = ((SecurityQuestionTO) args[i]).getId();\n+                }\n+            }\n+        }\n+\n+        if (id != null) {\n+            try {\n+                return binder.getSecurityQuestionTO(securityQuestionDAO.find(id));\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"c470a3d4d0145d3a1273305c66946c4c88df0925","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":47,"deletions":4,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -46,6 +46,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n@@ -107,6 +108,11 @@ public boolean isSelfRegistrationAllowed() {\n         return confDAO.find(\"selfRegistration.allowed\", \"false\").getValues().get(0).getBooleanValue();\n     }\n \n+    @Transactional(readOnly = true)\n+    public boolean isPasswordResetAllowed() {\n+        return confDAO.find(\"passwordReset.allowed\", \"false\").getValues().get(0).getBooleanValue();\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     public String getUsername(final Long userId) {\n         return binder.getUserTO(userId).getUsername();\n@@ -359,6 +365,46 @@ public UserTO status(final StatusMod statusMod) {\n         return savedTO;\n     }\n \n+    @PreAuthorize(\"isAnonymous() or hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n+    @Transactional\n+    public void requestPasswordReset(final String username, final String securityAnswer) {\n+        if (username == null) {\n+            throw new NotFoundException(\"Null username\");\n+        }\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        if (securityAnswer == null || !securityAnswer.equals(user.getSecurityAnswer())) {\n+            throw SyncopeClientException.build(ClientExceptionType.InvalidSecurityAnswer);\n+        }\n+\n+        uwfAdapter.requestPasswordReset(user.getId());\n+    }\n+\n+    @PreAuthorize(\"isAnonymous() or hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n+    @Transactional\n+    public void confirmPasswordReset(final String token, final String password) {\n+        SyncopeUser user = userDAO.findByToken(token);\n+        if (user == null) {\n+            throw new NotFoundException(\"User with token \" + token);\n+        }\n+\n+        uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n+        PropagationReporter propReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propReporter.onPrimaryResourceFailure(tasks);\n+        }\n+    }\n+\n     @PreAuthorize(\"isAuthenticated() \"\n             + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     public UserTO deleteSelf() {\n@@ -564,14 +610,11 @@ public UserTO provision(\n         return original;\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n     @Override\n     protected UserTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n         Object id = null;\n \n-        if (ArrayUtils.isNotEmpty(args)) {\n+        if (!\"confirmPasswordReset\".equals(method.getName()) && ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; id == null && i < args.length; i++) {\n                 if (args[i] instanceof Long) {\n                     id = (Long) args[i];"},{"sha":"4c60ef8cce094cdc87a7e04a23c8c5c8c20d8a4e","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -73,7 +73,6 @@\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.core.persistence.dao.AttrDAO;\n import org.apache.syncope.core.persistence.dao.AttrValueDAO;\n-import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.MembershipDAO;\n@@ -100,9 +99,6 @@ public abstract class AbstractAttributableDataBinder {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractAttributableDataBinder.class);\n \n-    @Autowired\n-    protected ConfDAO confDAO;\n-\n     @Autowired\n     protected RoleDAO roleDAO;\n \n@@ -215,8 +211,8 @@ protected void fillAttribute(final List<String> values, final AttributableUtil a\n         List<String> valuesProvided = schema.isMultivalue()\n                 ? values\n                 : (values.isEmpty()\n-                ? Collections.<String>emptyList()\n-                : Collections.singletonList(values.iterator().next()));\n+                        ? Collections.<String>emptyList()\n+                        : Collections.singletonList(values.iterator().next()));\n \n         for (String value : valuesProvided) {\n             if (value == null || value.isEmpty()) {"},{"sha":"02724cc46460dc7390474a2fd3f10bece645ed88","filename":"core/src/main/java/org/apache/syncope/core/rest/data/NotificationDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -41,13 +41,13 @@ public NotificationTO getNotificationTO(final Notification notification) {\n         return result;\n     }\n \n-    public Notification createNotification(final NotificationTO notificationTO) {\n+    public Notification create(final NotificationTO notificationTO) {\n         Notification result = new Notification();\n-        updateNotification(result, notificationTO);\n+        update(result, notificationTO);\n         return result;\n     }\n \n-    public void updateNotification(final Notification notification, final NotificationTO notificationTO) {\n+    public void update(final Notification notification, final NotificationTO notificationTO) {\n         BeanUtils.copyProperties(notificationTO, notification, IGNORE_PROPERTIES);\n \n         notification.setUserAbout(notificationTO.getUserAbout());"},{"sha":"1c1e5f45c6c1746db2633751690369cf3ee31b44","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SecurityQuestionDataBinder.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSecurityQuestionDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSecurityQuestionDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSecurityQuestionDataBinder.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.data;\n+\n+import org.apache.syncope.common.to.SecurityQuestionTO;\n+import org.apache.syncope.common.util.BeanUtils;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SecurityQuestionDataBinder {\n+\n+    public SecurityQuestionTO getSecurityQuestionTO(final SecurityQuestion securityQuestion) {\n+        SecurityQuestionTO securityQuestionTO = new SecurityQuestionTO();\n+\n+        BeanUtils.copyProperties(securityQuestion, securityQuestionTO);\n+\n+        return securityQuestionTO;\n+    }\n+\n+    public SecurityQuestion create(final SecurityQuestionTO securityQuestionTO) {\n+        SecurityQuestion result = new SecurityQuestion();\n+        update(result, securityQuestionTO);\n+        return result;\n+    }\n+\n+    public void update(final SecurityQuestion securityQuestion, final SecurityQuestionTO securityQuestionTO) {\n+        BeanUtils.copyProperties(securityQuestionTO, securityQuestion, \"id\");\n+    }\n+}"},{"sha":"39d4d75d622e78536ca386941d0490dfeea4fd63","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":67,"deletions":62,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -30,9 +30,7 @@\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.types.PasswordPolicySpec;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.BeanUtils;\n@@ -45,14 +43,15 @@\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n import org.apache.syncope.core.persistence.beans.membership.MAttr;\n import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n import org.apache.syncope.core.persistence.beans.membership.MVirAttr;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.SecurityQuestionDAO;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -68,12 +67,15 @@\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n     private static final String[] IGNORE_USER_PROPERTIES = {\n-        \"memberships\", \"attrs\", \"derAttrs\", \"virAttrs\", \"resources\"\n+        \"memberships\", \"attrs\", \"derAttrs\", \"virAttrs\", \"resources\", \"securityQuestion\"\n     };\n \n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n \n+    @Autowired\n+    private SecurityQuestionDAO securityQuestionDAO;\n+\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -82,6 +84,21 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n \n     private final Encryptor encryptor = Encryptor.getInstance();\n \n+    private void securityChecks(final SyncopeUser user) {\n+        // Allows anonymous (during self-registration) and self (during self-update) to read own SyncopeUser,\n+        // otherwise goes thorugh security checks to see if needed role entitlements are owned\n+        if (!EntitlementUtil.getAuthenticatedUsername().equals(anonymousUser)\n+                && !EntitlementUtil.getAuthenticatedUsername().equals(user.getUsername())) {\n+\n+            Set<Long> roleIds = user.getRoleIds();\n+            Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+            roleIds.removeAll(adminRoleIds);\n+            if (!roleIds.isEmpty()) {\n+                throw new UnauthorizedRoleException(roleIds);\n+            }\n+        }\n+    }\n+\n     @Transactional(readOnly = true)\n     public SyncopeUser getUserFromId(final Long userId) {\n         if (userId == null) {\n@@ -93,19 +110,24 @@ public SyncopeUser getUserFromId(final Long userId) {\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        // Allows anonymous (during self-registration) and self (during self-update) to read own SyncopeUser,\n-        // otherwise goes thorugh security checks to see if needed role entitlements are owned\n-        if (!EntitlementUtil.getAuthenticatedUsername().equals(anonymousUser)\n-                && !EntitlementUtil.getAuthenticatedUsername().equals(user.getUsername())) {\n+        securityChecks(user);\n \n-            Set<Long> roleIds = user.getRoleIds();\n-            Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-            roleIds.removeAll(adminRoleIds);\n-            if (!roleIds.isEmpty()) {\n-                throw new UnauthorizedRoleException(roleIds);\n-            }\n+        return user;\n+    }\n+\n+    @Transactional(readOnly = true)\n+    public SyncopeUser getUserFromUsername(final String username) {\n+        if (username == null) {\n+            throw new NotFoundException(\"Null username\");\n+        }\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n         }\n \n+        securityChecks(user);\n+\n         return user;\n     }\n \n@@ -159,55 +181,11 @@ public boolean verifyPassword(final SyncopeUser user, final String password) {\n         return encryptor.verify(password, user.getCipherAlgorithm(), user.getPassword());\n     }\n \n-    @Transactional(readOnly = true)\n-    public SyncopeUser getUserFromUsername(final String username) {\n-        if (username == null) {\n-            throw new NotFoundException(\"Null username\");\n-        }\n-\n-        SyncopeUser user = userDAO.find(username);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + username);\n-        }\n-\n-        Set<Long> roleIds = user.getRoleIds();\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n-        }\n-\n-        return user;\n-    }\n-\n-    /**\n-     * Get predefined password cipher algorithm from SyncopeConf.\n-     *\n-     * @return cipher algorithm.\n-     */\n-    private CipherAlgorithm getPredefinedCipherAlgoritm() {\n-        final String algorithm = confDAO.find(\n-                \"password.cipher.algorithm\", CipherAlgorithm.AES.name()).getValues().get(0).getStringValue();\n-\n-        try {\n-            return CipherAlgorithm.valueOf(algorithm);\n-        } catch (IllegalArgumentException e) {\n-            throw new NotFoundException(\"Cipher algorithm \" + algorithm);\n-        }\n-    }\n-\n     private void setPassword(final SyncopeUser user, final String password,\n             final SyncopeClientCompositeException scce) {\n \n-        int passwordHistorySize = 0;\n-        PasswordPolicy policy = policyDAO.getGlobalPasswordPolicy();\n-        if (policy != null && policy.getSpecification(PasswordPolicySpec.class) != null) {\n-            passwordHistorySize = policy.getSpecification(PasswordPolicySpec.class).getHistoryLength();\n-        }\n-\n         try {\n-            user.setPassword(password, getPredefinedCipherAlgoritm(), passwordHistorySize);\n+            user.setPassword(password, Encryptor.getPredefinedCipherAlgoritm());\n         } catch (NotFoundException e) {\n             final SyncopeClientException invalidCiperAlgorithm =\n                     SyncopeClientException.build(ClientExceptionType.NotFound);\n@@ -261,6 +239,15 @@ public void create(final SyncopeUser user, final UserTO userTO, final boolean st\n \n         // set username\n         user.setUsername(userTO.getUsername());\n+\n+        // security question / answer\n+        if (userTO.getSecurityQuestion() != null) {\n+            SecurityQuestion securityQuestion = securityQuestionDAO.find(userTO.getSecurityQuestion());\n+            if (securityQuestion != null) {\n+                user.setSecurityQuestion(securityQuestion);\n+            }\n+        }\n+        user.setSecurityAnswer(userTO.getSecurityAnswer());\n     }\n \n     /**\n@@ -304,6 +291,21 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n             }\n         }\n \n+        // security question / answer:\n+        // userMod.getSecurityQuestion() is null => remove user security question and answer\n+        // userMod.getSecurityQuestion() == 0 => don't change anything\n+        // userMod.getSecurityQuestion() > 0 => update user security question and answer\n+        if (userMod.getSecurityQuestion() == null) {\n+            user.setSecurityQuestion(null);\n+            user.setSecurityAnswer(null);\n+        } else if (userMod.getSecurityQuestion() > 0) {\n+            SecurityQuestion securityQuestion = securityQuestionDAO.find(userMod.getSecurityQuestion());\n+            if (securityQuestion != null) {\n+                user.setSecurityQuestion(securityQuestion);\n+                user.setSecurityAnswer(userMod.getSecurityAnswer());\n+            }\n+        }\n+\n         // attributes, derived attributes, virtual attributes and resources\n         propByRes.merge(fill(user, userMod, AttributableUtil.getInstance(AttributableType.USER), scce));\n \n@@ -413,8 +415,11 @@ public UserTO getUserTO(final SyncopeUser user) {\n \n         BeanUtils.copyProperties(user, userTO, IGNORE_USER_PROPERTIES);\n \n-        connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n+        if (user.getSecurityQuestion() != null) {\n+            userTO.setSecurityQuestion(user.getSecurityQuestion().getId());\n+        }\n \n+        connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n         fillTO(userTO, user.getAttrs(), user.getDerAttrs(), user.getVirAttrs(), user.getResources());\n \n         MembershipTO membershipTO;\n@@ -495,8 +500,8 @@ public PropagationByResource fillMembershipVirtual(\n                 ? fillVirtual(\n                         membership,\n                         membership.getVirAttrs() == null\n-                        ? Collections.<String>emptySet()\n-                        : getAttributeNames(membership.getVirAttrs()),\n+                                ? Collections.<String>emptySet()\n+                                : getAttributeNames(membership.getVirAttrs()),\n                         vAttrsToBeUpdated,\n                         AttributableUtil.getInstance(AttributableType.MEMBERSHIP))\n                 : fillVirtual("},{"sha":"461f36b48abe2a85e2d06a92439caab9bfa06d7e","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -38,10 +38,10 @@ public class NotificationServiceImpl extends AbstractServiceImpl implements Noti\n \n     @Override\n     public Response create(final NotificationTO notificationTO) {\n-        NotificationTO createdNotificationTO = controller.create(notificationTO);\n-        URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdNotificationTO.getId())).build();\n+        NotificationTO created = controller.create(notificationTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, createdNotificationTO.getId()).\n+                header(RESTHeaders.RESOURCE_ID, created.getId()).\n                 build();\n     }\n "},{"sha":"17b7414232e0ed133ce355da955d5ad0a526d1b4","filename":"core/src/main/java/org/apache/syncope/core/services/SchemaServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -42,11 +42,11 @@ public class SchemaServiceImpl extends AbstractServiceImpl implements SchemaServ\n     public <T extends AbstractSchemaTO> Response create(final AttributableType attrType, final SchemaType schemaType,\n             final T schemaTO) {\n \n-        T response = controller.create(attrType, schemaType, schemaTO);\n+        T created = controller.create(attrType, schemaType, schemaTO);\n \n-        URI location = uriInfo.getAbsolutePathBuilder().path(response.getName()).build();\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getName()).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, response.getName()).\n+                header(RESTHeaders.RESOURCE_ID, created.getName()).\n                 build();\n     }\n "},{"sha":"aa1dfed2881ce1d81bf9011bc79128d79d3e95ed","filename":"core/src/main/java/org/apache/syncope/core/services/SecurityQuestionServiceImpl.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSecurityQuestionServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSecurityQuestionServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSecurityQuestionServiceImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.services;\n+\n+import java.net.URI;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.services.SecurityQuestionService;\n+import org.apache.syncope.common.to.SecurityQuestionTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.core.rest.controller.SecurityQuestionController;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class SecurityQuestionServiceImpl extends AbstractServiceImpl implements SecurityQuestionService {\n+\n+    @Autowired\n+    private SecurityQuestionController controller;\n+\n+    @Override\n+    public List<SecurityQuestionTO> list() {\n+        return controller.list();\n+    }\n+\n+    @Override\n+    public SecurityQuestionTO read(final Long securityQuestionId) {\n+        return controller.read(securityQuestionId);\n+    }\n+\n+    @Override\n+    public Response create(final SecurityQuestionTO securityQuestionTO) {\n+        SecurityQuestionTO created = controller.create(securityQuestionTO);\n+\n+        URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_ID, String.valueOf(created.getId())).\n+                build();\n+    }\n+\n+    @Override\n+    public void update(final Long securityQuestionId, final SecurityQuestionTO securityQuestionTO) {\n+        securityQuestionTO.setId(securityQuestionId);\n+        controller.update(securityQuestionTO);\n+    }\n+\n+    @Override\n+    public void delete(final Long securityQuestionId) {\n+        controller.delete(securityQuestionId);\n+    }\n+\n+    @Override\n+    public SecurityQuestionTO readByUser(final String username) {\n+        return controller.read(username);\n+    }\n+\n+}"},{"sha":"dc0d59e8ef97b23a11d25cf9b099b26c6b1ee8c8","filename":"core/src/main/java/org/apache/syncope/core/services/UserSelfServiceImpl.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -40,14 +40,15 @@ public class UserSelfServiceImpl extends AbstractServiceImpl implements UserSelf\n     public Response getOptions() {\n         return Response.ok().header(HttpHeaders.ALLOW, OPTIONS_ALLOW).\n                 header(RESTHeaders.SELFREGISTRATION_ALLOWED, controller.isSelfRegistrationAllowed()).\n+                header(RESTHeaders.PASSWORDRESET_ALLOWED, controller.isSelfRegistrationAllowed()).\n                 build();\n     }\n \n     @Override\n     public Response create(final UserTO userTO, final boolean storePassword) {\n         if (!controller.isSelfRegistrationAllowed()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unauthorized);\n-            sce.getElements().add(\"SelfRegistration forbidden by configuration\");\n+            sce.getElements().add(\"Self registration forbidden by configuration\");\n             throw sce;\n         }\n \n@@ -73,4 +74,26 @@ public Response delete() {\n         return modificationResponse(deleted);\n     }\n \n+    @Override\n+    public void requestPasswordReset(final String username, final String securityAnswer) {\n+        if (!controller.isPasswordResetAllowed()) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unauthorized);\n+            sce.getElements().add(\"Password reset forbidden by configuration\");\n+            throw sce;\n+        }\n+\n+        controller.requestPasswordReset(username, securityAnswer);\n+    }\n+\n+    @Override\n+    public void confirmPasswordReset(final String token, final String password) {\n+        if (!controller.isPasswordResetAllowed()) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unauthorized);\n+            sce.getElements().add(\"Password reset forbidden by configuration\");\n+            throw sce;\n+        }\n+\n+        controller.confirmPasswordReset(token, password);\n+    }\n+\n }"},{"sha":"270f2f806dca4d29a14730ba83671a0821988396","filename":"core/src/main/java/org/apache/syncope/core/util/Encryptor.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEncryptor.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -35,6 +35,8 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.jasypt.commons.CommonUtils;\n import org.jasypt.digest.StandardStringDigester;\n import org.slf4j.Logger;\n@@ -132,6 +134,22 @@ public final class Encryptor {\n         }\n     }\n \n+    /**\n+     * Get predefined password cipher algorithm from SyncopeConf.\n+     *\n+     * @return cipher algorithm.\n+     */\n+    public static CipherAlgorithm getPredefinedCipherAlgoritm() {\n+        ConfDAO confDAO = ApplicationContextProvider.getApplicationContext().getBean(ConfDAO.class);\n+        final String algorithm = confDAO.find(\n+                \"password.cipher.algorithm\", CipherAlgorithm.AES.name()).getValues().get(0).getStringValue();\n+        try {\n+            return CipherAlgorithm.valueOf(algorithm);\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Cipher algorithm \" + algorithm);\n+        }\n+    }\n+\n     public static Encryptor getInstance() {\n         return getInstance(secretKey);\n     }"},{"sha":"94506d2f03fc8748da463272cece75d7cf748dd7","filename":"core/src/main/java/org/apache/syncope/core/util/POJOHelper.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.core.util;\n \n+import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.core.Version;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.module.SimpleModule;\n+import com.fasterxml.jackson.module.afterburner.AfterburnerModule;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncToken;\n@@ -46,6 +48,7 @@ public final class POJOHelper {\n \n         MAPPER = new ObjectMapper();\n         MAPPER.registerModule(pojoModule);\n+        MAPPER.registerModule(new AfterburnerModule());\n     }\n \n     public static String serialize(final Object object) {"},{"sha":"9425f1759125f5d1aca361ac0fd2daa8bbe4f75c","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/AbstractUserWorkflowAdapter.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -119,6 +119,23 @@ public WorkflowResult<Long> reactivate(final Long userId) throws UnauthorizedRol\n         return doReactivate(user);\n     }\n \n+    protected abstract void doRequestPasswordReset(SyncopeUser user) throws WorkflowException;\n+\n+    @Override\n+    public void requestPasswordReset(final Long userId) throws UnauthorizedRoleException, WorkflowException {\n+        doRequestPasswordReset(dataBinder.getUserFromId(userId));\n+    }\n+\n+    protected abstract void doConfirmPasswordReset(SyncopeUser user, String token, String password) \n+            throws WorkflowException;\n+\n+    @Override\n+    public void confirmPasswordReset(final Long userId, final String token, final String password)\n+            throws UnauthorizedRoleException, WorkflowException {\n+\n+        doConfirmPasswordReset(dataBinder.getUserFromId(userId), token, password);\n+    }\n+\n     protected abstract void doDelete(SyncopeUser user) throws WorkflowException;\n \n     @Override"},{"sha":"8dc260833459db481ff3fc00934c3b309cdef2f8","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":30,"deletions":8,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -30,12 +30,15 @@\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.workflow.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -44,7 +47,11 @@\n @Transactional(rollbackFor = { Throwable.class })\n public class NoOpUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n-    public static final String ENABLED = \"enabled\";\n+    @Autowired\n+    private PolicyDAO policyDAO;\n+\n+    @Autowired\n+    private ConfDAO confDAO;\n \n     @Override\n     public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, final boolean disablePwdPolicyCheck,\n@@ -124,29 +131,44 @@ protected WorkflowResult<Map.Entry<UserMod, Boolean>> doUpdate(final SyncopeUser\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doSuspend(final SyncopeUser user)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doSuspend(final SyncopeUser user) throws WorkflowException {\n         user.setStatus(\"suspended\");\n         SyncopeUser updated = userDAO.save(user);\n \n         return new WorkflowResult<Long>(updated.getId(), null, \"suspend\");\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doReactivate(final SyncopeUser user)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doReactivate(final SyncopeUser user) throws WorkflowException {\n         user.setStatus(\"active\");\n         SyncopeUser updated = userDAO.save(user);\n \n         return new WorkflowResult<Long>(updated.getId(), null, \"reactivate\");\n     }\n \n     @Override\n-    protected void doDelete(final SyncopeUser user)\n+    protected void doRequestPasswordReset(final SyncopeUser user) throws WorkflowException {\n+        user.generateToken(\n+                confDAO.find(\"token.length\", \"256\").getValues().get(0).getLongValue().intValue(),\n+                confDAO.find(\"token.expireTime\", \"60\").getValues().get(0).getLongValue().intValue());\n+        userDAO.save(user);\n+    }\n+\n+    @Override\n+    protected void doConfirmPasswordReset(final SyncopeUser user, final String token, final String password)\n             throws WorkflowException {\n \n+        if (!user.checkToken(token)) {\n+            throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n+        }\n+\n+        user.removeToken();\n+        user.setPassword(password, user.getCipherAlgorithm());\n+        userDAO.save(user);\n+    }\n+\n+    @Override\n+    protected void doDelete(final SyncopeUser user) throws WorkflowException {\n         userDAO.delete(user);\n     }\n "},{"sha":"c2844dbc10ce985a1a2f5efeb8af1ef7884fd2cd","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/UserWorkflowAdapter.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -134,6 +134,27 @@ WorkflowResult<Map.Entry<UserMod, Boolean>> update(UserMod userMod)\n      */\n     WorkflowResult<Long> reactivate(Long userId) throws UnauthorizedRoleException, WorkflowException;\n \n+    /**\n+     * Request password reset for an user.\n+     *\n+     * @param userId user requesting password reset\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    void requestPasswordReset(Long userId) throws UnauthorizedRoleException, WorkflowException;\n+\n+    /**\n+     * Confirm password reset for an user.\n+     *\n+     * @param userId user confirming password reset\n+     * @param token security token\n+     * @param password new password value\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    void confirmPasswordReset(Long userId, String token, String password) \n+            throws UnauthorizedRoleException, WorkflowException;\n+\n     /**\n      * Delete an user.\n      *"},{"sha":"ed053f69f2c6d7d46fc331f64f38b545c0faad38","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":33,"deletions":7,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -70,6 +70,7 @@\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.workflow.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.WorkflowException;\n@@ -115,6 +116,8 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     public static final String TOKEN = \"token\";\n \n+    public static final String PASSWORD = \"password\";\n+\n     public static final String PROP_BY_RESOURCE = \"propByResource\";\n \n     public static final String PROPAGATE_ENABLE = \"propagateEnable\";\n@@ -127,6 +130,8 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     public static final String STORE_PASSWORD = \"storePassword\";\n \n+    public static final String EVENT = \"event\";\n+\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -148,6 +153,9 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     @Autowired\n     private ActivitiImportUtils importUtils;\n \n+    @Autowired\n+    private UserDataBinder userDataBinder;\n+\n     @Override\n     public Class<? extends WorkflowInstanceLoader> getLoaderClass() {\n         return ActivitiWorkflowLoader.class;\n@@ -355,9 +363,7 @@ protected WorkflowResult<Map.Entry<UserMod, Boolean>> doUpdate(final SyncopeUser\n \n     @Override\n     @Transactional(rollbackFor = { Throwable.class })\n-    protected WorkflowResult<Long> doSuspend(final SyncopeUser user)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doSuspend(final SyncopeUser user) throws WorkflowException {\n         Set<String> performedTasks = doExecuteTask(user, \"suspend\", null);\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n@@ -366,9 +372,7 @@ protected WorkflowResult<Long> doSuspend(final SyncopeUser user)\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doReactivate(final SyncopeUser user)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doReactivate(final SyncopeUser user) throws WorkflowException {\n         Set<String> performedTasks = doExecuteTask(user, \"reactivate\", null);\n         updateStatus(user);\n \n@@ -378,9 +382,31 @@ protected WorkflowResult<Long> doReactivate(final SyncopeUser user)\n     }\n \n     @Override\n-    protected void doDelete(final SyncopeUser user)\n+    protected void doRequestPasswordReset(final SyncopeUser user) throws WorkflowException {\n+        Map<String, Object> variables = new HashMap<String, Object>(2);\n+        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(EVENT, \"requestPasswordReset\");\n+\n+        doExecuteTask(user, \"requestPasswordReset\", variables);\n+        userDAO.save(user);\n+    }\n+\n+    @Override\n+    protected void doConfirmPasswordReset(final SyncopeUser user, final String token, final String password)\n             throws WorkflowException {\n \n+        Map<String, Object> variables = new HashMap<String, Object>(4);\n+        variables.put(TOKEN, token);\n+        variables.put(PASSWORD, password);\n+        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(EVENT, \"confirmPasswordReset\");\n+\n+        doExecuteTask(user, \"confirmPasswordReset\", variables);\n+        userDAO.save(user);\n+    }\n+\n+    @Override\n+    protected void doDelete(final SyncopeUser user) throws WorkflowException {\n         doExecuteTask(user, \"delete\", null);\n \n         PropagationByResource propByRes = new PropagationByResource();"},{"sha":"d6a388a2674088f704e2deca1166a7ddf4321baa","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Notify.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FNotify.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FNotify.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FNotify.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.user.activiti.task;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AuditElements;\n+import org.apache.syncope.core.notification.NotificationManager;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * General-purpose notification task for usage within workflow.\n+ * It requires a pre-existing <tt>Notification</tt> with category <tt>CUSTOM</tt> and result <tt>SUCCESS</tt>.\n+ * An <tt>event</tt> workflow variable needs to be provided as well.\n+ */\n+@Component\n+public class Notify extends AbstractActivitiServiceTask {\n+\n+    @Autowired\n+    private NotificationManager notificationManager;\n+\n+    @Override\n+    protected void doExecute(final String executionId) {\n+        SyncopeUser user =\n+                (SyncopeUser) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+        UserTO userTO =\n+                (UserTO) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.USER_TO);\n+        String event =\n+                (String) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.EVENT);\n+\n+        if (StringUtils.isNotBlank(event)) {\n+            notificationManager.createTasks(\n+                    AuditElements.EventCategoryType.CUSTOM,\n+                    null,\n+                    null,\n+                    event,\n+                    AuditElements.Result.SUCCESS,\n+                    userTO,\n+                    null,\n+                    user.getToken());\n+        } else {\n+            LOG.debug(\"Not sending any notification since no event was found\");\n+        }\n+    }\n+\n+}"},{"sha":"4b34666de252ec1f0f7401f54d959d184fa68df0","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/PasswordReset.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FPasswordReset.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.user.activiti.task;\n+\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.workflow.WorkflowException;\n+import org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class PasswordReset extends AbstractActivitiServiceTask {\n+\n+    @Override\n+    protected void doExecute(final String executionId) {\n+        SyncopeUser user =\n+                (SyncopeUser) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+        String token =\n+                (String) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.TOKEN);\n+        String password =\n+                (String) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.PASSWORD);\n+\n+        if (!user.checkToken(token)) {\n+            throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n+        }\n+\n+        user.removeToken();\n+        user.setPassword(password, user.getCipherAlgorithm());\n+        runtimeService.setVariable(executionId, ActivitiUserWorkflowAdapter.SYNCOPE_USER, user);\n+    }\n+\n+}"},{"sha":"3dad2b5a26fa9b12af39461a89a7d21cda11fdb4","filename":"core/src/main/resources/META-INF/orm.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -344,4 +344,12 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.SecurityQuestion\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_SecurityQuestion\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_SecurityQuestion\" pk-column-value=\"SEQ_SecurityQuestion\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n </entity-mappings>"},{"sha":"e0bf118440c0f7ac83835f0080a77b34e42402cd","filename":"core/src/main/resources/META-INF/orm.xml.oracle","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -297,4 +297,12 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.SecurityQuestion\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_SecurityQuestion\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_SecurityQuestion\" pk-column-value=\"SEQ_SecurityQuestion\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>  \n </entity-mappings>"},{"sha":"08449639b6b1b2f32f52498460715b1c8e16ce09","filename":"core/src/main/resources/META-INF/orm.xml.sqlserver","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -333,4 +333,12 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.SecurityQuestion\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_SecurityQuestion\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_SecurityQuestion\" pk-column-value=\"SEQ_SecurityQuestion\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>  \n </entity-mappings>"},{"sha":"a642d5a412e4c7ae0e1e6f2f189e69b5916e0952","filename":"core/src/main/resources/content.xml","status":"modified","additions":29,"deletions":2,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -56,17 +56,39 @@ under the License.\n   <CAttr id=\"6\" owner_id=\"1\" schema_name=\"selfRegistration.allowed\"/>\n   <CAttrValue id=\"6\" attribute_id=\"6\" booleanValue=\"1\"/>\n \n+  <CSchema name=\"passwordReset.allowed\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"passwordReset.allowed\"/>\n+  <CAttrValue id=\"7\" attribute_id=\"7\" booleanValue=\"1\"/>\n+\n   <CSchema name=\"authentication.statuses\" type=\"String\"\n            mandatoryCondition=\"true\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n-  <CAttrValue id=\"7\" attribute_id=\"7\" stringValue=\"active\"/>\n+  <CAttr id=\"8\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n+  <CAttrValue id=\"8\" attribute_id=\"8\" stringValue=\"created\"/>\n+  <CAttrValue id=\"9\" attribute_id=\"8\" stringValue=\"active\"/>\n \n   <!-- Save user login date upon successful authentication -->\n   <CSchema name=\"log.lastlogindate\" type=\"Boolean\"\n            mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <CAttr id=\"10\" owner_id=\"1\" schema_name=\"log.lastlogindate\"/>\n   <CAttrValue id=\"10\" attribute_id=\"10\" booleanValue=\"1\"/>\n     \n+  <!-- User pre-defined schemas -->\n+  <USchema name=\"email\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n+           validatorClass=\"org.apache.syncope.core.persistence.validation.attrvalue.EmailAddressValidator\"/>  \n+  \n+  <!-- Password reset notifications -->\n+  <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" \n+                traceLevel=\"FAILURES\" userAbout=\"token!=$null\"/> \n+  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n+  \n+  <Notification id=\"2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template=\"confirmPasswordReset\" \n+                traceLevel=\"FAILURES\" userAbout=\"token!=$null\"/> \n+  <Notification_events Notification_id=\"2\" events=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>  \n+  \n   <!-- Authentication and authorization -->\n   <Entitlement name=\"SCHEMA_LIST\"/>\n   <Entitlement name=\"SCHEMA_CREATE\"/>\n@@ -136,5 +158,10 @@ under the License.\n   <Entitlement name=\"AUDIT_LIST\"/>\n   <Entitlement name=\"AUDIT_ENABLE\"/>\n   <Entitlement name=\"AUDIT_DISABLE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_LIST\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_READ\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_CREATE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_UPDATE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_DELETE\"/>\n \n </dataset>"},{"sha":"17bda2ebe01cc832e1f04338aed28ad073c44da5","filename":"core/src/main/resources/mail.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -16,9 +16,9 @@\n # under the License.\n smtpHost=none.syncope.apache.org\n smtpPort=25\n-smtpUser=syncope\n-smtpPassword=secret\n+smtpUser=\n+smtpPassword=\n smtpProtocol=smtp\n smtpEncoding=UTF-8\n smtpConnectionTimeout=3000\n-mailDebug=false\n+mailDebug=false\n\\ No newline at end of file"},{"sha":"90630ace5e9809713f69bea7d00dbf10c8d215e0","filename":"core/src/main/resources/mailTemplates/confirmPasswordReset.html.vm","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.vm?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html>\n+<body>\n+<p>Hi,</br>\n+we are happy to inform you that the password request was execute successfully for your account.</p>\n+\n+<p>Best regards.</p>\n+</body>\n+</html>\n\\ No newline at end of file"},{"sha":"33f75dccc61ebac46d683da6e4d317105711726d","filename":"core/src/main/resources/mailTemplates/confirmPasswordReset.txt.vm","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.vm?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+Hi,\n+we are happy to inform you that the password request was execute successfully for your account.\n+\n+Best regards.\n\\ No newline at end of file"},{"sha":"ffaf4d29beee29e8d68a0e1420713a9e01608c55","filename":"core/src/main/resources/mailTemplates/requestPasswordReset.html.vm","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.vm?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,31 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html>\n+<body>\n+<p>Hi,\n+a password reset was request for $user.getUsername().</p>\n+\n+<p>In order to complete this request, you need to provide the token<br/><br/>\n+$input.get(0)</p>\n+\n+<p>If you did not request this reset, just ignore the present e-mail.</p>\n+\n+<p>Best regards.</p>\n+</body>\n+</html>\n\\ No newline at end of file"},{"sha":"6c27bf34ddc147211f13ea643f892b173014580d","filename":"core/src/main/resources/mailTemplates/requestPasswordReset.txt.vm","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.vm?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+Hi,\n+a password reset was request for $user.getUsername().\n+\n+In order to complete this request, you need to provide the token \n+\n+$input.get(0)\n+\n+If you did not request this reset, just ignore the present e-mail.\n+\n+Best regards.\n\\ No newline at end of file"},{"sha":"613d7c0445017e0504be99bbc224118455337427","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":97,"deletions":45,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -31,6 +31,7 @@ under the License.\n     <startEvent id=\"theStart\"/>\n     <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"/>\n     <serviceTask id=\"create\" name=\"Create\" activiti:expression=\"#{create.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\" sourceRef=\"create\" targetRef=\"active\"/>\n     <userTask id=\"active\" name=\"Active\"/>\n     <sequenceFlow id=\"flow8\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n     <exclusiveGateway id=\"activeGw\"/>\n@@ -42,8 +43,15 @@ under the License.\n     </sequenceFlow>\n     <sequenceFlow id=\"active2Delete\" sourceRef=\"activeGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n+    </sequenceFlow>\n+    <sequenceFlow id=\"active2RequestPasswordReset\" sourceRef=\"activeGw\" targetRef=\"generateToken4PasswordReset\">\n+      <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'requestPasswordReset'}]]></conditionExpression>\n+    </sequenceFlow>\n+    <sequenceFlow id=\"active2ConfirmPasswordReset\" sourceRef=\"activeGw\" targetRef=\"checkToken4ConfirmPasswordReset\">\n+      <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'confirmPasswordReset'}]]></conditionExpression>\n     </sequenceFlow>    \n     <serviceTask id=\"update\" name=\"Update\" activiti:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\" sourceRef=\"update\" targetRef=\"active\"/>\n     <serviceTask id=\"suspend\" name=\"Suspend\" activiti:expression=\"#{suspend.execute(execution.processInstanceId)}\"/>\n     <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n     <userTask id=\"suspended\" name=\"Suspended\"/>\n@@ -57,11 +65,20 @@ under the License.\n     </sequenceFlow>\n     <serviceTask id=\"reactivate\" name=\"Reactivate\" activiti:expression=\"#{reactivate.execute(execution.processInstanceId)}\"/>\n     <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n+    \n+    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate Token\" activiti:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-7F78CE07-A7A1-467F-BB4B-40FB234AEFF7\" sourceRef=\"generateToken4PasswordReset\" targetRef=\"notify4RequestPasswordReset\"/>\n+    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" activiti:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-CF9ACA40-7750-47C3-A508-7250D24D4F1F\" sourceRef=\"notify4RequestPasswordReset\" targetRef=\"active\"/>\n+\n+    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" activiti:expression=\"#{passwordReset.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-3E9FE01D-CC60-4A95-B356-CA0DC000FAD6\" sourceRef=\"checkToken4ConfirmPasswordReset\" targetRef=\"notify4ConfirmPasswordReset\"/>\n+    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" activiti:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"sid-A37806A7-6B7B-48A2-BB37-DAE640231144\" sourceRef=\"notify4ConfirmPasswordReset\" targetRef=\"active\"/>    \n+    \n     <serviceTask id=\"delete\" name=\"Delete\" activiti:expression=\"#{delete.execute(execution.processInstanceId)}\"/>\n     <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n-    <endEvent id=\"theEnd\"/>\n-    <sequenceFlow id=\"sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\" sourceRef=\"create\" targetRef=\"active\"/>\n-    <sequenceFlow id=\"sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\" sourceRef=\"update\" targetRef=\"active\"/>\n+    <endEvent id=\"theEnd\"/>    \n   </process>\n   \n   <bpmndi:BPMNDiagram id=\"BPMNDiagram_userWorkflow\">\n@@ -79,16 +96,16 @@ under the License.\n         <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1400.0\" y=\"520.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"update\" id=\"BPMNShape_update\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1370.0\" y=\"740.7407688427132\"/>\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1370.0\" y=\"615.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"suspend\" id=\"BPMNShape_suspend\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"280.0\"/>\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"370.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"suspended\" id=\"BPMNShape_suspended\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1640.0\" y=\"300.0\"/>\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1640.0\" y=\"370.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"suspendedGw\" id=\"BPMNShape_suspendedGw\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1820.0\" y=\"360.0\"/>\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1820.0\" y=\"380.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"reactivate\" id=\"BPMNShape_reactivate\">\n         <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1940.0\" y=\"290.0\"/>\n@@ -99,71 +116,106 @@ under the License.\n       <bpmndi:BPMNShape bpmnElement=\"theEnd\" id=\"BPMNShape_theEnd\">\n         <omgdc:Bounds height=\"28.0\" width=\"28.0\" x=\"2080.0\" y=\"451.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNEdge bpmnElement=\"sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\" id=\"BPMNEdge_sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\">\n-        <omgdi:waypoint x=\"920.0\" y=\"540.2380952380952\"/>\n-        <omgdi:waypoint x=\"1030.0\" y=\"540.7619047619048\"/>\n-      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNShape bpmnElement=\"generateToken4PasswordReset\" id=\"BPMNShape_generateToken4PasswordReset\">\n+        <omgdc:Bounds height=\"81.0\" width=\"121.0\" x=\"1515.0\" y=\"604.5\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"notify4RequestPasswordReset\" id=\"BPMNShape_notify4RequestPasswordReset\">\n+        <omgdc:Bounds height=\"81.0\" width=\"121.0\" x=\"1515.0\" y=\"750.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"checkToken4ConfirmPasswordReset\" id=\"BPMNShape_checkToken4ConfirmPasswordReset\">\n+        <omgdc:Bounds height=\"81.0\" width=\"121.0\" x=\"1725.0\" y=\"664.5\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"notify4ConfirmPasswordReset\" id=\"BPMNShape_notify4ConfirmPasswordReset\">\n+        <omgdc:Bounds height=\"81.0\" width=\"121.0\" x=\"1725.0\" y=\"810.0\"/>\n+      </bpmndi:BPMNShape>\n       <bpmndi:BPMNEdge bpmnElement=\"flow12\" id=\"BPMNEdge_flow12\">\n-        <omgdi:waypoint x=\"1940.0\" y=\"312.6007228007171\"/>\n-        <omgdi:waypoint x=\"1470.3246893147616\" y=\"243.09556645232908\"/>\n-        <omgdi:waypoint x=\"1198.7197373159865\" y=\"359.6936452281102\"/>\n-        <omgdi:waypoint x=\"1099.6440556314785\" y=\"511.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"290.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"261.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"261.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"511.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow11\" id=\"BPMNEdge_flow11\">\n-        <omgdi:waypoint x=\"1740.0\" y=\"330.0\"/>\n-        <omgdi:waypoint x=\"1752.0\" y=\"330.0\"/>\n-        <omgdi:waypoint x=\"1752.0\" y=\"380.0\"/>\n-        <omgdi:waypoint x=\"1820.0\" y=\"380.0\"/>\n+        <omgdi:waypoint x=\"1740.0\" y=\"400.0\"/>\n+        <omgdi:waypoint x=\"1820.0\" y=\"400.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow10\" id=\"BPMNEdge_flow10\">\n-        <omgdi:waypoint x=\"1590.0\" y=\"310.0\"/>\n-        <omgdi:waypoint x=\"1602.0\" y=\"310.0\"/>\n-        <omgdi:waypoint x=\"1602.0\" y=\"330.0\"/>\n-        <omgdi:waypoint x=\"1640.0\" y=\"330.0\"/>\n+        <omgdi:waypoint x=\"1590.0\" y=\"400.0\"/>\n+        <omgdi:waypoint x=\"1640.0\" y=\"400.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"active2Update\" id=\"BPMNEdge_active2Update\">\n-        <omgdi:waypoint x=\"1420.4586490458448\" y=\"559.5413509541552\"/>\n-        <omgdi:waypoint x=\"1420.0651491917588\" y=\"740.7407688427132\"/>\n+      <bpmndi:BPMNEdge bpmnElement=\"active2RequestPasswordReset\" id=\"BPMNEdge_active2RequestPasswordReset\">\n+        <omgdi:waypoint x=\"1439.5\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1575.5\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1575.5\" y=\"604.5\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\" id=\"BPMNEdge_sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\">\n-        <omgdi:waypoint x=\"1370.0\" y=\"770.7407688427132\"/>\n-        <omgdi:waypoint x=\"1080.0\" y=\"770.7407688427132\"/>\n+      <bpmndi:BPMNEdge bpmnElement=\"active2Suspend\" id=\"BPMNEdge_active2Suspend\">\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1540.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1540.0\" y=\"430.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"suspended2Delete\" id=\"BPMNEdge_suspended2Delete\">\n+        <omgdi:waypoint x=\"1860.0\" y=\"400.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"400.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"438.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-A37806A7-6B7B-48A2-BB37-DAE640231144\" id=\"BPMNEdge_sid-A37806A7-6B7B-48A2-BB37-DAE640231144\">\n+        <omgdi:waypoint x=\"1725.0\" y=\"850.5\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"850.5\"/>\n         <omgdi:waypoint x=\"1080.0\" y=\"571.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2Delete\" id=\"BPMNEdge_active2Delete\">\n-        <omgdi:waypoint x=\"1439.5\" y=\"540.5\"/>\n-        <omgdi:waypoint x=\"1990.0\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"540.0\"/>\n         <omgdi:waypoint x=\"1990.0\" y=\"498.0\"/>\n       </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-3E9FE01D-CC60-4A95-B356-CA0DC000FAD6\" id=\"BPMNEdge_sid-3E9FE01D-CC60-4A95-B356-CA0DC000FAD6\">\n+        <omgdi:waypoint x=\"1785.5\" y=\"745.5\"/>\n+        <omgdi:waypoint x=\"1785.5\" y=\"810.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-7F78CE07-A7A1-467F-BB4B-40FB234AEFF7\" id=\"BPMNEdge_sid-7F78CE07-A7A1-467F-BB4B-40FB234AEFF7\">\n+        <omgdi:waypoint x=\"1575.5\" y=\"685.5\"/>\n+        <omgdi:waypoint x=\"1575.5\" y=\"750.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\" id=\"BPMNEdge_sid-EA94A12A-727F-414B-9D7E-AC576B0D6FA8\">\n+        <omgdi:waypoint x=\"920.0\" y=\"540.2380952380952\"/>\n+        <omgdi:waypoint x=\"1030.0\" y=\"540.7619047619048\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\" id=\"BPMNEdge_sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\">\n+        <omgdi:waypoint x=\"1370.0\" y=\"645.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"645.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"/>\n+      </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow1\" id=\"BPMNEdge_flow1\">\n         <omgdi:waypoint x=\"770.0\" y=\"540.0\"/>\n         <omgdi:waypoint x=\"820.0\" y=\"540.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"suspended2Delete\" id=\"BPMNEdge_suspended2Delete\">\n-        <omgdi:waypoint x=\"1860.0\" y=\"380.0\"/>\n-        <omgdi:waypoint x=\"1902.0\" y=\"380.0\"/>\n-        <omgdi:waypoint x=\"1980.0\" y=\"388.0\"/>\n-        <omgdi:waypoint x=\"1986.25\" y=\"438.0\"/>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-CF9ACA40-7750-47C3-A508-7250D24D4F1F\" id=\"BPMNEdge_sid-CF9ACA40-7750-47C3-A508-7250D24D4F1F\">\n+        <omgdi:waypoint x=\"1515.0\" y=\"790.5\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"790.5\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"suspended2Reactivate\" id=\"BPMNEdge_suspended2Reactivate\">\n-        <omgdi:waypoint x=\"1860.0\" y=\"380.0\"/>\n-        <omgdi:waypoint x=\"1902.0\" y=\"380.0\"/>\n+        <omgdi:waypoint x=\"1860.0\" y=\"400.0\"/>\n+        <omgdi:waypoint x=\"1902.0\" y=\"400.0\"/>\n         <omgdi:waypoint x=\"1902.0\" y=\"320.0\"/>\n         <omgdi:waypoint x=\"1940.0\" y=\"320.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"active2Suspend\" id=\"BPMNEdge_active2Suspend\">\n+      <bpmndi:BPMNEdge bpmnElement=\"active2ConfirmPasswordReset\" id=\"BPMNEdge_active2ConfirmPasswordReset\">\n         <omgdi:waypoint x=\"1439.5\" y=\"540.5\"/>\n-        <omgdi:waypoint x=\"1540.0\" y=\"540.5\"/>\n-        <omgdi:waypoint x=\"1540.0\" y=\"340.0\"/>\n-      </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow99\" id=\"BPMNEdge_flow99\">\n-        <omgdi:waypoint x=\"2040.0\" y=\"466.5576923076923\"/>\n-        <omgdi:waypoint x=\"2080.005821071606\" y=\"465.40367823831906\"/>\n+        <omgdi:waypoint x=\"1785.5\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1785.5\" y=\"664.5\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow8\" id=\"BPMNEdge_flow8\">\n         <omgdi:waypoint x=\"1130.0\" y=\"540.8529411764706\"/>\n         <omgdi:waypoint x=\"1400.058651026393\" y=\"540.0586510263929\"/>\n       </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"active2Update\" id=\"BPMNEdge_active2Update\">\n+        <omgdi:waypoint x=\"1420.0\" y=\"560.0\"/>\n+        <omgdi:waypoint x=\"1420.0\" y=\"615.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow99\" id=\"BPMNEdge_flow99\">\n+        <omgdi:waypoint x=\"2040.0\" y=\"466.5576923076923\"/>\n+        <omgdi:waypoint x=\"2080.005821071606\" y=\"465.40367823831906\"/>\n+      </bpmndi:BPMNEdge>\n     </bpmndi:BPMNPlane>\n   </bpmndi:BPMNDiagram>\n </definitions>\n\\ No newline at end of file"},{"sha":"419c59f53fb8e30877cbec0f396a3d6ecefb242f","filename":"core/src/test/java/org/apache/syncope/core/connid/PasswordGeneratorTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGeneratorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGeneratorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FPasswordGeneratorTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -55,7 +55,7 @@ public void issueSYNCOPE226() {\n         }\n         assertNotNull(password);\n \n-        user.setPassword(password, CipherAlgorithm.AES, 0);\n+        user.setPassword(password, CipherAlgorithm.AES);\n \n         SyncopeUser actual = userDAO.save(user);\n         assertNotNull(actual);\n@@ -73,7 +73,7 @@ public void testPasswordGenerator() {\n             fail(ex.getMessage());\n         }\n         assertNotNull(password);\n-        user.setPassword(password, CipherAlgorithm.SHA, 0);\n+        user.setPassword(password, CipherAlgorithm.SHA);\n         userDAO.save(user);\n     }\n "},{"sha":"ca8b638b4cba70db643033be5c2488ee45136422","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -41,7 +41,7 @@ public class EntitlementTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n-        assertEquals(\"did not get expected number of entitlements \", 84, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 89, list.size());\n     }\n \n     @Test"},{"sha":"d4340af2383f649f2bb00cbb5eb37f8a1561087f","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/NotificationTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -37,7 +37,7 @@ public class NotificationTest extends AbstractDAOTest {\n \n     @Test\n     public void find() {\n-        Notification notification = notificationDAO.find(1L);\n+        Notification notification = notificationDAO.find(10L);\n         assertNotNull(notification);\n         assertNotNull(notification.getEvents());\n         assertFalse(notification.getEvents().isEmpty());\n@@ -77,8 +77,8 @@ public void save() {\n \n     @Test\n     public void delete() {\n-        notificationDAO.delete(1L);\n-        assertNull(notificationDAO.find(1L));\n+        notificationDAO.delete(10L);\n+        assertNull(notificationDAO.find(10L));\n     }\n \n     @Test"},{"sha":"87bf75b3d69db9334dfa9cf006411e7277ec89f1","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SecurityQuestionTest.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional\n+public class SecurityQuestionTest extends AbstractDAOTest {\n+\n+    @Autowired\n+    private SecurityQuestionDAO securityQuestionDAO;\n+\n+    @Test\n+    public void find() {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(1L);\n+        assertNotNull(securityQuestion);\n+        assertNotNull(securityQuestion.getContent());\n+    }\n+\n+    @Test\n+    public void findAll() {\n+        List<SecurityQuestion> securityQuestions = securityQuestionDAO.findAll();\n+        assertNotNull(securityQuestions);\n+        assertFalse(securityQuestions.isEmpty());\n+    }\n+\n+    @Test\n+    public void save() {\n+        SecurityQuestion securityQuestion = new SecurityQuestion();\n+        securityQuestion.setContent(\"What is your favorite pet's name?\");\n+        \n+        SecurityQuestion actual = securityQuestionDAO.save(securityQuestion);\n+        assertNotNull(actual);\n+        assertNotNull(actual.getId());\n+    }\n+\n+    @Test\n+    public void delete() {\n+        securityQuestionDAO.delete(1L);\n+        assertNull(securityQuestionDAO.find(1L));\n+    }\n+}"},{"sha":"6b0881e782d21b7a98ef711cdd7064126545d8bc","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -138,7 +138,7 @@ public void save() {\n         user.setUsername(\"username\");\n         user.setCreationDate(new Date());\n \n-        user.setPassword(\"pass\", CipherAlgorithm.SHA256, 0);\n+        user.setPassword(\"pass\", CipherAlgorithm.SHA256);\n \n         Throwable t = null;\n         try {\n@@ -148,7 +148,7 @@ public void save() {\n         }\n         assertNotNull(t);\n \n-        user.setPassword(\"password\", CipherAlgorithm.SHA256, 1);\n+        user.setPassword(\"password\", CipherAlgorithm.SHA256);\n \n         user.setUsername(\"username!\");\n \n@@ -183,7 +183,7 @@ public void issue237() {\n         user.setUsername(\"username\");\n         user.setCreationDate(new Date());\n \n-        user.setPassword(\"password\", CipherAlgorithm.AES, 0);\n+        user.setPassword(\"password\", CipherAlgorithm.AES);\n \n         SyncopeUser actual = userDAO.save(user);\n         assertNotNull(actual);\n@@ -193,7 +193,7 @@ public void issue237() {\n     public void issueSYNCOPE391() {\n         SyncopeUser user = new SyncopeUser();\n         user.setUsername(\"username\");\n-        user.setPassword(null, CipherAlgorithm.AES, 0);\n+        user.setPassword(null, CipherAlgorithm.AES);\n \n         SyncopeUser actual = null;\n         Throwable t = null;"},{"sha":"7c05ea2c0b8cbdd58d2fdc1cd3cd3993def15b2c","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/SecurityQuestionTest.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSecurityQuestionTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.relationships;\n+\n+import static org.junit.Assert.assertNull;\n+\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AbstractDAOTest;\n+import org.apache.syncope.core.persistence.dao.SecurityQuestionDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional\n+public class SecurityQuestionTest extends AbstractDAOTest {\n+\n+    @Autowired\n+    private SecurityQuestionDAO securityQuestionDAO;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Test\n+    public void test() {\n+        SyncopeUser user = userDAO.find(4L);\n+\n+        user.setSecurityQuestion(securityQuestionDAO.find(1L));\n+        user.setSecurityAnswer(\"Rossi\");\n+        userDAO.save(user);\n+\n+        userDAO.flush();\n+\n+        securityQuestionDAO.delete(1L);\n+\n+        userDAO.flush();\n+\n+        user = userDAO.find(4L);\n+\n+        assertNull(user.getSecurityQuestion());\n+    }\n+}"},{"sha":"785734d8c1153b45f6320c0ebf54b0c5d8c2ab45","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -33,7 +33,6 @@\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n-\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.syncope.common.mod.AttributeMod;\n@@ -49,6 +48,7 @@\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.services.SchemaService;\n+import org.apache.syncope.common.services.SecurityQuestionService;\n import org.apache.syncope.common.services.TaskService;\n import org.apache.syncope.common.services.UserSelfService;\n import org.apache.syncope.common.services.UserService;\n@@ -172,9 +172,11 @@ public abstract class AbstractTest {\n \n     protected static PolicyService policyService;\n \n+    protected static SecurityQuestionService securityQuestionService;\n+\n     @Autowired\n     protected DataSource testDataSource;\n-    \n+\n     @BeforeClass\n     public static void securitySetup() {\n         InputStream propStream = null;\n@@ -220,6 +222,7 @@ public static void restSetup() {\n         workflowService = adminClient.getService(WorkflowService.class);\n         notificationService = adminClient.getService(NotificationService.class);\n         schemaService = adminClient.getService(SchemaService.class);\n+        securityQuestionService = adminClient.getService(SecurityQuestionService.class);\n     }\n \n     protected static String getUUIDString() {\n@@ -243,7 +246,7 @@ protected static AttributeMod attributeMod(final String schema, final String val\n     protected UserTO createUser(final UserTO userTO) {\n         return createUser(userTO, true);\n     }\n-    \n+\n     protected UserTO createUser(final UserTO userTO, final boolean storePassword) {\n         Response response = userService.create(userTO, storePassword);\n         if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {"},{"sha":"7d7a433c9e3d0aae71df7ba512499d2c6494087d","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -59,7 +59,7 @@ private NotificationTO buildNotificationTO() {\n \n     @Test\n     public void read() {\n-        NotificationTO notificationTO = notificationService.read(1L);\n+        NotificationTO notificationTO = notificationService.read(10L);\n         assertNotNull(notificationTO);\n     }\n \n@@ -90,7 +90,7 @@ public void create() {\n \n     @Test\n     public void update() {\n-        NotificationTO notificationTO = notificationService.read(1L);\n+        NotificationTO notificationTO = notificationService.read(10L);\n         notificationTO.setRecipients(SyncopeClient.getUserSearchConditionBuilder().hasRoles(7L).query());\n \n         notificationService.update(notificationTO.getId(), notificationTO);"},{"sha":"964ed3160ac7aa01ca6971aeaca75a9a9f359876","filename":"core/src/test/java/org/apache/syncope/core/rest/SecurityQuestionTestITCase.java","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSecurityQuestionTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSecurityQuestionTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSecurityQuestionTestITCase.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.services.SecurityQuestionService;\n+import org.apache.syncope.common.to.SecurityQuestionTO;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class SecurityQuestionTestITCase extends AbstractTest {\n+\n+    @Test\n+    public void read() {\n+        SecurityQuestionTO securityQuestionTO = securityQuestionService.read(1L);\n+        assertNotNull(securityQuestionTO);\n+    }\n+\n+    @Test\n+    public void list() {\n+        List<SecurityQuestionTO> securityQuestionTOs = securityQuestionService.list();\n+        assertNotNull(securityQuestionTOs);\n+        assertFalse(securityQuestionTOs.isEmpty());\n+        for (SecurityQuestionTO instance : securityQuestionTOs) {\n+            assertNotNull(instance);\n+        }\n+    }\n+\n+    @Test\n+    public void create() {\n+        SecurityQuestionTO securityQuestionTO = new SecurityQuestionTO();\n+        securityQuestionTO.setContent(\"What is your favorite pet's name?\");\n+\n+        Response response = securityQuestionService.create(securityQuestionTO);\n+        SecurityQuestionTO actual = getObject(response.getLocation(), SecurityQuestionService.class,\n+                SecurityQuestionTO.class);\n+\n+        assertNotNull(actual);\n+        assertNotNull(actual.getId());\n+        securityQuestionTO.setId(actual.getId());\n+        assertEquals(actual, securityQuestionTO);\n+    }\n+\n+    @Test\n+    public void update() {\n+        SecurityQuestionTO securityQuestionTO = securityQuestionService.read(1L);\n+        securityQuestionTO.setContent(\"What is your favorite color?\");\n+\n+        securityQuestionService.update(securityQuestionTO.getId(), securityQuestionTO);\n+        SecurityQuestionTO actual = securityQuestionService.read(securityQuestionTO.getId());\n+        assertNotNull(actual);\n+        assertEquals(actual, securityQuestionTO);\n+    }\n+\n+    @Test\n+    public void delete() {\n+        SecurityQuestionTO securityQuestion = new SecurityQuestionTO();\n+        securityQuestion.setContent(\"What is your first pet's name?\");\n+\n+        Response response = securityQuestionService.create(securityQuestion);\n+        securityQuestion = getObject(response.getLocation(), SecurityQuestionService.class, SecurityQuestionTO.class);\n+\n+        securityQuestionService.delete(securityQuestion.getId());\n+\n+        try {\n+            securityQuestionService.read(securityQuestion.getId());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+\n+}"},{"sha":"143a4548e3eee01453d69a9152ecbb705dc4df1f","filename":"core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -21,6 +21,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n@@ -248,4 +249,48 @@ public void noContent() throws IOException {\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n     }\n+\n+    @Test\n+    public void passwordReset() {\n+        // 1. create an user with security question and answer\n+        UserTO user = UserTestITCase.getUniqueSampleTO(\"pwdReset@syncope.apache.org\");\n+        user.setSecurityQuestion(1L);\n+        user.setSecurityAnswer(\"Rossi\");\n+        createUser(user);\n+\n+        // 2. verify that new user is able to authenticate\n+        SyncopeClient authClient = clientFactory.create(user.getUsername(), \"password123\");\n+        UserTO read = authClient.getService(UserSelfService.class).read();\n+        assertNotNull(read);\n+\n+        // 3. request password reset (as anonymous) providing the expected security answer\n+        SyncopeClient anonClient = clientFactory.createAnonymous();\n+        try {\n+            anonClient.getService(UserSelfService.class).requestPasswordReset(user.getUsername(), \"WRONG\");\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSecurityAnswer, e.getType());\n+        }\n+        anonClient.getService(UserSelfService.class).requestPasswordReset(user.getUsername(), \"Rossi\");\n+\n+        // 4. get token (normally sent via e-mail, now reading as admin)\n+        String token = userService.read(read.getId()).getToken();\n+        assertNotNull(token);\n+\n+        // 5. confirm password reset\n+        try {\n+            anonClient.getService(UserSelfService.class).confirmPasswordReset(\"WRONG TOKEN\", \"newPassword\");\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+            assertTrue(e.getMessage().contains(\"WRONG TOKEN\"));\n+        }\n+        anonClient.getService(UserSelfService.class).confirmPasswordReset(token, \"newPassword\");\n+\n+        // 6. verify that password was reset and token removed\n+        authClient = clientFactory.create(user.getUsername(), \"newPassword\");\n+        read = authClient.getService(UserSelfService.class).read();\n+        assertNotNull(read);\n+        assertNull(read.getToken());\n+    }\n }"},{"sha":"3a91aa0064bf2c0c41a16e88d1f793baf9a95760","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -705,7 +705,7 @@ public void update() {\n         assertTrue(userTO.getCreationDate().before(userTO.getLastChangeDate()));\n \n         SyncopeUser passwordTestUser = new SyncopeUser();\n-        passwordTestUser.setPassword(\"new2Password\", CipherAlgorithm.SHA, 0);\n+        passwordTestUser.setPassword(\"new2Password\", CipherAlgorithm.SHA);\n         assertEquals(passwordTestUser.getPassword(), userTO.getPassword());\n \n         assertEquals(1, userTO.getMemberships().size());"},{"sha":"317ce9d45edf97250ea1176468f911fe688b7951","filename":"core/src/test/resources/content.xml","status":"modified","additions":32,"deletions":9,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -54,11 +54,16 @@ under the License.\n   <CAttr id=\"6\" owner_id=\"1\" schema_name=\"selfRegistration.allowed\"/>\n   <CAttrValue id=\"6\" attribute_id=\"6\" booleanValue=\"1\"/>\n \n+  <CSchema name=\"passwordReset.allowed\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"passwordReset.allowed\"/>\n+  <CAttrValue id=\"7\" attribute_id=\"7\" booleanValue=\"1\"/>\n+\n   <CSchema name=\"authentication.statuses\" type=\"String\"\n            mandatoryCondition=\"true\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n-  <CAttrValue id=\"7\" attribute_id=\"7\" stringValue=\"created\"/>\n-  <CAttrValue id=\"8\" attribute_id=\"7\" stringValue=\"active\"/>\n+  <CAttr id=\"8\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n+  <CAttrValue id=\"8\" attribute_id=\"8\" stringValue=\"created\"/>\n+  <CAttrValue id=\"9\" attribute_id=\"8\" stringValue=\"active\"/>\n \n   <!-- Save user login date upon successful authentication -->\n   <CSchema name=\"log.lastlogindate\" type=\"Boolean\"\n@@ -68,7 +73,7 @@ under the License.\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"global sync policy\" type=\"GLOBAL_SYNC\" \n-          specification='{\"userJavaRule\":null,\"roleJavaRule\":null,\"conflictResolutionAction\":\"IGNORE\",\"userAltSearchSchemas\":[],\":q!AltSearchSchemas\":[]}'/>\n+          specification='{\"userJavaRule\":null,\"roleJavaRule\":null,\"conflictResolutionAction\":\"IGNORE\",\"userAltSearchSchemas\":[],\"AltSearchSchemas\":[]}'/>\n   <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" \n           specification='{\"historyLength\":1,\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[],\"allowNullPassword\":true}'/>\n   <Policy DTYPE=\"SyncPolicy\" id=\"3\" description=\"sync policy 2\" type=\"SYNC\" \n@@ -965,15 +970,26 @@ under the License.\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>\n \n-  <Notification id=\"1\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n+  <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" \n+                traceLevel=\"FAILURES\" userAbout=\"token!=$null\"/> \n+  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n+  \n+  <Notification id=\"2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserSchema\" selfAsRecipient=\"1\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template=\"confirmPasswordReset\" \n+                traceLevel=\"FAILURES\" userAbout=\"token!=$null\"/> \n+  <Notification_events Notification_id=\"2\" events=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+\n+  <Notification id=\"10\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" \n+                traceLevel=\"FAILURES\"\n                 userAbout=\"fullname==*o*;fullname==*i*\"\n                 recipients=\"$roles==7\"\n                 recipientAttrType=\"UserSchema\" recipientAttrName=\"email\" active=\"1\"/>\n-  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n-  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n+  <Notification_events Notification_id=\"10\" events=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n+  <Notification_events Notification_id=\"10\" events=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n     \n-  <NotificationTask_recipients notificationtask_id=\"8\" address=\"recipient@prova.org\"/>\n-\n+  <NotificationTask_recipients notificationtask_id=\"8\" address=\"recipient@prova.org\"/>  \n+  \n   <Report id=\"1\" name=\"test\"/>\n   <ReportletConfInstance id=\"1\" Report_id=\"1\" \n                          serializedInstance='{\"@class\":\"org.apache.syncope.common.report.UserReportletConf\",\"name\":\"testUserReportlet\",\"matchingCond\":null,\"attributes\":[\"fullname\",\"gender\"],\"derivedAttributes\":[\"cn\"],\"virtualAttributes\":[\"virtualdata\"],\"features\":[\"id\",\"username\",\"workflowId\",\"status\",\"creationDate\",\"lastLoginDate\",\"changePwdDate\",\"passwordHistorySize\",\"failedLoginCount\",\"memberships\",\"resources\"]}'/>\n@@ -1067,6 +1083,11 @@ under the License.\n   <Entitlement name=\"AUDIT_LIST\"/>\n   <Entitlement name=\"AUDIT_ENABLE\"/>\n   <Entitlement name=\"AUDIT_DISABLE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_LIST\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_READ\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_CREATE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_UPDATE\"/>\n+  <Entitlement name=\"SECURITY_QUESTION_DELETE\"/>\n   <Entitlement name=\"ROLE_1\"/>\n   <Entitlement name=\"ROLE_2\"/>\n   <Entitlement name=\"ROLE_3\"/>\n@@ -1098,4 +1119,6 @@ under the License.\n   <SyncopeRole_Entitlement entitlement_name=\"SCHEMA_READ\" role_id=\"8\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"ROLE_READ\" role_id=\"8\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"WORKFLOW_FORM_CLAIM\" role_id=\"8\"/>\n+  \n+  <SecurityQuestion id=\"1\" content=\"What's your mother's maiden name?\"/>\n </dataset>"},{"sha":"1877577ffc3f922007b8b7a1d4dd9c01813cbdc4","filename":"core/src/test/resources/mail.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -21,4 +21,4 @@ smtpPassword=\n smtpProtocol=smtp\n smtpEncoding=UTF-8\n smtpConnectionTimeout=3000\n-mailDebug=true\n+mailDebug=true\n\\ No newline at end of file"},{"sha":"93f3e7d9af929d3d706f498c5b290b0fc5f5b5f2","filename":"core/src/test/resources/userWorkflow.bpmn20.xml","status":"modified","additions":343,"deletions":288,"changes":631,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -28,11 +28,11 @@ under the License.\n              targetNamespace=\"http://activiti.org/bpmn20\">\n   \n   <process id=\"userWorkflow\" name=\"User Workflow\" isExecutable=\"true\">\n-    <startEvent id=\"theStart\"></startEvent>\n-    <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"></sequenceFlow>\n-    <serviceTask id=\"create\" name=\"Create\" activiti:expression=\"#{create.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"createGW\"></sequenceFlow>\n-    <exclusiveGateway id=\"createGW\"></exclusiveGateway>\n+    <startEvent id=\"theStart\"/>\n+    <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"/>\n+    <serviceTask id=\"create\" name=\"Create\" activiti:expression=\"#{create.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"createGW\"/>\n+    <exclusiveGateway id=\"createGW\"/>\n     <sequenceFlow id=\"createAsAnonymous2Approval\" sourceRef=\"createGW\" targetRef=\"createApproval\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${wfExecutor == 'anonymous' || syncopeUser.getRoleIds().contains(9)}]]></conditionExpression>\n     </sequenceFlow>\n@@ -41,20 +41,20 @@ under the License.\n     </sequenceFlow>\n     <userTask id=\"createApproval\" name=\"Create approval\" activiti:candidateGroups=\"7\" activiti:formKey=\"createApproval\">\n       <extensionElements>\n-        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"></activiti:formProperty>\n-        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"></activiti:formProperty>\n-        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"></activiti:formProperty>\n+        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"/>\n+        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"/>\n+        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"/>\n       </extensionElements>\n     </userTask>\n-    <sequenceFlow id=\"flow3\" sourceRef=\"createApproval\" targetRef=\"createApprovalGW\"></sequenceFlow>\n-    <exclusiveGateway id=\"createApprovalGW\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow3\" sourceRef=\"createApproval\" targetRef=\"createApprovalGW\"/>\n+    <exclusiveGateway id=\"createApprovalGW\"/>\n     <sequenceFlow id=\"createApprovalGW2EnableGW\" sourceRef=\"createApprovalGW\" targetRef=\"enableGW\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${approve}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"createApproval2Reject\" sourceRef=\"createApprovalGW\" targetRef=\"reject\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!approve}]]></conditionExpression>\n     </sequenceFlow>\n-    <exclusiveGateway id=\"enableGW\"></exclusiveGateway>\n+    <exclusiveGateway id=\"enableGW\"/>\n     <sequenceFlow id=\"createApprovalGW2OptIn\" sourceRef=\"enableGW\" targetRef=\"generateToken\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${syncopeUser.getRoleIds().contains(11)}]]></conditionExpression>\n     </sequenceFlow>\n@@ -63,32 +63,32 @@ under the License.\n     </sequenceFlow>\n     <sequenceFlow id=\"createApprovalGW2Active\" sourceRef=\"enableGW\" targetRef=\"active\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${enabled}]]></conditionExpression>\n-    </sequenceFlow>\n+    </sequenceFlow>    \n     <sequenceFlow id=\"createApprovalGW2Suspended\" sourceRef=\"enableGW\" targetRef=\"suspend\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!enabled}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"activate\" name=\"Activate\" activiti:expression=\"#{autoActivate.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"></sequenceFlow>\n-    <serviceTask id=\"generateToken\" name=\"Generate token\" activiti:expression=\"#{generateToken.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow5\" sourceRef=\"generateToken\" targetRef=\"created\"></sequenceFlow>\n-    <userTask id=\"created\" name=\"Created\"></userTask>\n-    <sequenceFlow id=\"flow6\" sourceRef=\"created\" targetRef=\"optinGW\"></sequenceFlow>\n-    <exclusiveGateway id=\"optinGW\"></exclusiveGateway>\n+    <serviceTask id=\"activate\" name=\"Activate\" activiti:expression=\"#{autoActivate.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"/>\n+    <serviceTask id=\"generateToken\" name=\"Generate token\" activiti:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow5\" sourceRef=\"generateToken\" targetRef=\"created\"/>\n+    <userTask id=\"created\" name=\"Created\"/>\n+    <sequenceFlow id=\"flow6\" sourceRef=\"created\" targetRef=\"optinGW\"/>\n+    <exclusiveGateway id=\"optinGW\"/>\n     <sequenceFlow id=\"created2Activate\" sourceRef=\"optinGW\" targetRef=\"removeToken\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${syncopeUser.checkToken(token)}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"created2Created\" sourceRef=\"optinGW\" targetRef=\"created\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!syncopeUser.checkToken(token)}]]></conditionExpression>\n     </sequenceFlow>\n-    <scriptTask id=\"removeToken\" name=\"Remove Token and Activate\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"true\">\n+    <scriptTask id=\"removeToken\" name=\"Remove Token and Activate\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"false\">\n       <script>\n         syncopeUser.removeToken()    \n       </script>\n     </scriptTask>\n-    <sequenceFlow id=\"flow7\" sourceRef=\"removeToken\" targetRef=\"active\"></sequenceFlow>\n-    <userTask id=\"active\" name=\"Active\"></userTask>\n-    <sequenceFlow id=\"flow8\" sourceRef=\"active\" targetRef=\"activeGw\"></sequenceFlow>\n-    <exclusiveGateway id=\"activeGw\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow7\" sourceRef=\"removeToken\" targetRef=\"active\"/>\n+    <userTask id=\"active\" name=\"Active\"/>\n+    <sequenceFlow id=\"flow8\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n+    <exclusiveGateway id=\"activeGw\"/>\n     <sequenceFlow id=\"active2UpdateApproval\" sourceRef=\"activeGw\" targetRef=\"updateApproval\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${wfExecutor == syncopeUser.getUsername() and task == 'update' \n         and (!userMod.getMembershipsToAdd().isEmpty() or !userMod.getMembershipsToRemove().isEmpty())}]]></conditionExpression>\n@@ -101,421 +101,476 @@ under the License.\n     </sequenceFlow>\n     <sequenceFlow id=\"active2Suspend\" sourceRef=\"activeGw\" targetRef=\"suspend\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'suspend'}]]></conditionExpression>\n-    </sequenceFlow>\n+    </sequenceFlow>    \n     <sequenceFlow id=\"active2Delete\" sourceRef=\"activeGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n+    </sequenceFlow>    \n+    <sequenceFlow id=\"active2RequestPasswordReset\" sourceRef=\"activeGw\" targetRef=\"generateToken4PasswordReset\">\n+      <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'requestPasswordReset'}]]></conditionExpression>\n     </sequenceFlow>\n+    <sequenceFlow id=\"active2ConfirmPasswordReset\" sourceRef=\"activeGw\" targetRef=\"checkToken4ConfirmPasswordReset\">\n+      <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'confirmPasswordReset'}]]></conditionExpression>\n+    </sequenceFlow>    \n     <userTask id=\"updateApproval\" name=\"Update approval\" activiti:candidateGroups=\"7\" activiti:formKey=\"updateApproval\">\n       <extensionElements>\n-        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"></activiti:formProperty>\n-        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"></activiti:formProperty>\n-        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"></activiti:formProperty>\n+        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"/>\n+        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"/>\n+        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"/>\n       </extensionElements>\n     </userTask>\n-    <sequenceFlow id=\"flow8bis\" sourceRef=\"updateApproval\" targetRef=\"updateApprovalGW\"></sequenceFlow>\n-    <exclusiveGateway id=\"updateApprovalGW\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow8bis\" sourceRef=\"updateApproval\" targetRef=\"updateApprovalGW\"/>\n+    <exclusiveGateway id=\"updateApprovalGW\"/>\n     <sequenceFlow id=\"updateApprovalGW2Update\" sourceRef=\"updateApprovalGW\" targetRef=\"update\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${approve}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"updateApprovalGW2Reject\" sourceRef=\"updateApprovalGW\" targetRef=\"rejectUpdate\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!approve}]]></conditionExpression>\n     </sequenceFlow>\n-    <scriptTask id=\"rejectUpdate\" name=\"Reject update\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"true\">\n+    <scriptTask id=\"rejectUpdate\" name=\"Reject update\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"false\">\n       <script>\n         execution.setVariable(\"propByResource\", null);\n       </script>\n     </scriptTask>\n-    <sequenceFlow id=\"flow8ter\" sourceRef=\"rejectUpdate\" targetRef=\"active\"></sequenceFlow>\n-    <serviceTask id=\"update\" name=\"Update\" activiti:expression=\"#{update.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow9\" sourceRef=\"update\" targetRef=\"active\"></sequenceFlow>\n-    <serviceTask id=\"suspend\" name=\"Suspend\" activiti:expression=\"#{suspend.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"></sequenceFlow>\n-    <userTask id=\"suspended\" name=\"Suspended\"></userTask>\n-    <sequenceFlow id=\"flow11\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"></sequenceFlow>\n-    <exclusiveGateway id=\"suspendedGw\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow8ter\" sourceRef=\"rejectUpdate\" targetRef=\"active\"/>\n+    <serviceTask id=\"update\" name=\"Update\" activiti:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow9\" sourceRef=\"update\" targetRef=\"active\"/>    \n+    <serviceTask id=\"suspend\" name=\"Suspend\" activiti:expression=\"#{suspend.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n+    <userTask id=\"suspended\" name=\"Suspended\"/>\n+    <sequenceFlow id=\"flow11\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n+    <exclusiveGateway id=\"suspendedGw\"/>\n     <sequenceFlow id=\"suspended2Reactivate\" sourceRef=\"suspendedGw\" targetRef=\"reactivate\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'reactivate'}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"suspended2Delete\" sourceRef=\"suspendedGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"reactivate\" name=\"Reactivate\" activiti:expression=\"#{reactivate.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"></sequenceFlow>\n-    <scriptTask id=\"reject\" name=\"Reject\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"true\">\n+    <serviceTask id=\"reactivate\" name=\"Reactivate\" activiti:expression=\"#{reactivate.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n+    <scriptTask id=\"reject\" name=\"Reject\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"false\">\n       <script>\n         def scriptVar = rejectReason\n         execution.setVariable(\"propByResource\", null);\n       </script>\n     </scriptTask>\n-    <sequenceFlow id=\"flow13\" sourceRef=\"reject\" targetRef=\"rejected\"></sequenceFlow>\n-    <userTask id=\"rejected\" name=\"Rejected\"></userTask>\n-    <sequenceFlow id=\"flow14\" sourceRef=\"rejected\" targetRef=\"rejectedGw\"></sequenceFlow>\n-    <exclusiveGateway id=\"rejectedGw\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow13\" sourceRef=\"reject\" targetRef=\"rejected\"/>\n+    <userTask id=\"rejected\" name=\"Rejected\"/>\n+    <sequenceFlow id=\"flow14\" sourceRef=\"rejected\" targetRef=\"rejectedGw\"/>\n+    <exclusiveGateway id=\"rejectedGw\"/>\n     <sequenceFlow id=\"rejected2Delete\" sourceRef=\"rejectedGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"rejected2Rejected\" sourceRef=\"rejectedGw\" targetRef=\"rejected\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${empty task}]]></conditionExpression>\n-    </sequenceFlow>\n+    </sequenceFlow>    \n     <userTask id=\"deleteApproval\" name=\"Delete approval\" activiti:candidateGroups=\"7\" activiti:formKey=\"deleteApproval\">\n       <extensionElements>\n-        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"></activiti:formProperty>\n-        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"></activiti:formProperty>\n-        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"></activiti:formProperty>\n+        <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${syncopeUser.username}\" writable=\"false\"/>\n+        <activiti:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"/>\n+        <activiti:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"/>\n       </extensionElements>\n     </userTask>\n-    <sequenceFlow id=\"flow14bis\" sourceRef=\"deleteApproval\" targetRef=\"deleteApprovalGW\"></sequenceFlow>\n-    <exclusiveGateway id=\"deleteApprovalGW\"></exclusiveGateway>\n+    <sequenceFlow id=\"flow14bis\" sourceRef=\"deleteApproval\" targetRef=\"deleteApprovalGW\"/>\n+    <exclusiveGateway id=\"deleteApprovalGW\"/>\n     <sequenceFlow id=\"deleteApprovalGW2Delete\" sourceRef=\"deleteApprovalGW\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${approve}]]></conditionExpression>\n     </sequenceFlow>\n     <sequenceFlow id=\"deleteApprovalGW2Reject\" sourceRef=\"deleteApprovalGW\" targetRef=\"rejectDelete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!approve}]]></conditionExpression>\n     </sequenceFlow>\n-    <scriptTask id=\"rejectDelete\" name=\"Reject delete\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"true\">\n+    <scriptTask id=\"rejectDelete\" name=\"Reject delete\" scriptFormat=\"groovy\" activiti:autoStoreVariables=\"false\">\n       <script>\n         execution.setVariable(\"propByResource\", null);\n       </script>\n     </scriptTask>\n-    <sequenceFlow id=\"flow14ter\" sourceRef=\"rejectDelete\" targetRef=\"active\"></sequenceFlow>\n-    <serviceTask id=\"delete\" name=\"Delete\" activiti:expression=\"#{delete.execute(execution.processInstanceId)}\"></serviceTask>\n-    <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"></sequenceFlow>\n-    <endEvent id=\"theEnd\"></endEvent>\n+    <sequenceFlow id=\"flow14ter\" sourceRef=\"rejectDelete\" targetRef=\"active\"/>            \n+\n+    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate token\" activiti:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow15\" sourceRef=\"generateToken4PasswordReset\" targetRef=\"notify4RequestPasswordReset\"/>\n+    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" activiti:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow16\" sourceRef=\"notify4RequestPasswordReset\" targetRef=\"active\"/>\n+    \n+    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" activiti:expression=\"#{passwordReset.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow17\" sourceRef=\"checkToken4ConfirmPasswordReset\" targetRef=\"notify4ConfirmPasswordReset\"/>\n+    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" activiti:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow18\" sourceRef=\"notify4ConfirmPasswordReset\" targetRef=\"active\"/>    \n+    \n+    <serviceTask id=\"delete\" name=\"Delete\" activiti:expression=\"#{delete.execute(execution.processInstanceId)}\"/>\n+    <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n+    <endEvent id=\"theEnd\"/>\n   </process>\n+  \n   <bpmndi:BPMNDiagram id=\"BPMNDiagram_userWorkflow\">\n     <bpmndi:BPMNPlane bpmnElement=\"userWorkflow\" id=\"BPMNPlane_userWorkflow\">\n-      <bpmndi:BPMNShape bpmnElement=\"update\" id=\"BPMNShape_update\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"580.0\"></omgdc:Bounds>\n-      </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"suspend\" id=\"BPMNShape_suspend\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"100.0\"></omgdc:Bounds>\n-      </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"reject\" id=\"BPMNShape_reject\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"560.0\" y=\"659.0\"></omgdc:Bounds>\n-      </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"rejectedGw\" id=\"BPMNShape_rejectedGw\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"890.0\" y=\"775.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"theStart\" id=\"BPMNShape_theStart\">\n+        <omgdc:Bounds height=\"30.0\" width=\"30.0\" x=\"0.0\" y=\"512.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"activeGw\" id=\"BPMNShape_activeGw\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1400.0\" y=\"520.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"create\" id=\"BPMNShape_create\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"80.0\" y=\"497.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"updateApprovalGW\" id=\"BPMNShape_updateApprovalGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1670.0\" y=\"620.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"createGW\" id=\"BPMNShape_createGW\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"230.0\" y=\"506.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"theStart\" id=\"BPMNShape_theStart\">\n-        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"0.0\" y=\"512.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"createApproval\" id=\"BPMNShape_createApproval\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"320.0\" y=\"560.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"createApprovalGW\" id=\"BPMNShape_createApprovalGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"470.0\" y=\"556.0\"></omgdc:Bounds>\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"470.0\" y=\"556.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"enableGW\" id=\"BPMNShape_enableGW\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"590.0\" y=\"429.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"activate\" id=\"BPMNShape_activate\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"710.0\" y=\"610.0\"></omgdc:Bounds>\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"710.0\" y=\"610.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"generateToken\" id=\"BPMNShape_generateToken\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"702.0\" y=\"188.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"created\" id=\"BPMNShape_created\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"852.0\" y=\"213.0\"></omgdc:Bounds>\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"852.0\" y=\"213.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"rejected\" id=\"BPMNShape_rejected\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"710.0\" y=\"770.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"optinGW\" id=\"BPMNShape_optinGW\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1002.0\" y=\"240.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"delete\" id=\"BPMNShape_delete\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1940.0\" y=\"438.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"removeToken\" id=\"BPMNShape_removeToken\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1092.0\" y=\"248.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"rejectDelete\" id=\"BPMNShape_rejectDelete\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"320.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"active\" id=\"BPMNShape_active\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1030.0\" y=\"511.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"createGW\" id=\"BPMNShape_createGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"230.0\" y=\"506.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"activeGw\" id=\"BPMNShape_activeGw\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1400.0\" y=\"520.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"deleteApproval\" id=\"BPMNShape_deleteApproval\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"360.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"updateApproval\" id=\"BPMNShape_updateApproval\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"740.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"createApproval\" id=\"BPMNShape_createApproval\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"320.0\" y=\"560.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"updateApprovalGW\" id=\"BPMNShape_updateApprovalGW\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1670.0\" y=\"740.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"deleteApprovalGW\" id=\"BPMNShape_deleteApprovalGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1670.0\" y=\"380.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"rejectUpdate\" id=\"BPMNShape_rejectUpdate\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"840.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"removeToken\" id=\"BPMNShape_removeToken\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1092.0\" y=\"248.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"update\" id=\"BPMNShape_update\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"700.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"updateApproval\" id=\"BPMNShape_updateApproval\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"620.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"suspend\" id=\"BPMNShape_suspend\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"100.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"enableGW\" id=\"BPMNShape_enableGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"590.0\" y=\"429.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"suspended\" id=\"BPMNShape_suspended\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1640.0\" y=\"120.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"generateToken\" id=\"BPMNShape_generateToken\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"702.0\" y=\"188.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"suspendedGw\" id=\"BPMNShape_suspendedGw\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1820.0\" y=\"180.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"rejectUpdate\" id=\"BPMNShape_rejectUpdate\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"840.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"reactivate\" id=\"BPMNShape_reactivate\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1940.0\" y=\"110.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"create\" id=\"BPMNShape_create\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"80.0\" y=\"497.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"reject\" id=\"BPMNShape_reject\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"560.0\" y=\"659.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"reactivate\" id=\"BPMNShape_reactivate\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1940.0\" y=\"110.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"rejected\" id=\"BPMNShape_rejected\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"710.0\" y=\"770.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"suspended\" id=\"BPMNShape_suspended\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1640.0\" y=\"120.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"rejectedGw\" id=\"BPMNShape_rejectedGw\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"890.0\" y=\"775.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"suspendedGw\" id=\"BPMNShape_suspendedGw\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1820.0\" y=\"180.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"deleteApproval\" id=\"BPMNShape_deleteApproval\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1490.0\" y=\"280.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"deleteApprovalGW\" id=\"BPMNShape_deleteApprovalGW\">\n+        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1670.0\" y=\"300.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"rejectDelete\" id=\"BPMNShape_rejectDelete\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1790.0\" y=\"240.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"delete\" id=\"BPMNShape_delete\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1940.0\" y=\"358.0\"/>\n       </bpmndi:BPMNShape>\n       <bpmndi:BPMNShape bpmnElement=\"theEnd\" id=\"BPMNShape_theEnd\">\n-        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"2080.0\" y=\"451.0\"></omgdc:Bounds>\n+        <omgdc:Bounds height=\"28.0\" width=\"28.0\" x=\"2078.1893792531678\" y=\"374.0\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"active\" id=\"BPMNShape_active\">\n-        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1030.0\" y=\"511.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"generateToken4PasswordReset\" id=\"BPMNShape_generateToken4PasswordReset\">\n+        <omgdc:Bounds height=\"59.99999999999994\" width=\"100.0\" x=\"1543.209935088986\" y=\"452.6749142927693\"/>\n       </bpmndi:BPMNShape>\n-      <bpmndi:BPMNShape bpmnElement=\"optinGW\" id=\"BPMNShape_optinGW\">\n-        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"1002.0\" y=\"240.0\"></omgdc:Bounds>\n+      <bpmndi:BPMNShape bpmnElement=\"notify4RequestPasswordReset\" id=\"BPMNShape_notify4RequestPasswordReset\">\n+        <omgdc:Bounds height=\"60.00000000000006\" width=\"100.0\" x=\"1748.9712597675173\" y=\"452.6749142927692\"/>\n       </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"checkToken4ConfirmPasswordReset\" id=\"BPMNShape_checkToken4ConfirmPasswordReset\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1558.797798366986\" y=\"561.167207412115\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"notify4ConfirmPasswordReset\" id=\"BPMNShape_notify4ConfirmPasswordReset\">\n+        <omgdc:Bounds height=\"60.0\" width=\"100.0\" x=\"1748.971259767517\" y=\"561.167207412115\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow17\" id=\"BPMNEdge_flow17\">\n+        <omgdi:waypoint x=\"1658.797798366986\" y=\"591.167207412115\"/>\n+        <omgdi:waypoint x=\"1748.971259767517\" y=\"591.167207412115\"/>\n+      </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow12\" id=\"BPMNEdge_flow12\">\n-        <omgdi:waypoint x=\"1940.0\" y=\"140.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1928.0\" y=\"127.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1378.0\" y=\"40.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"511.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1940.0\" y=\"129.51612903225805\"/>\n+        <omgdi:waypoint x=\"1928.0\" y=\"127.0\"/>\n+        <omgdi:waypoint x=\"1378.0\" y=\"40.0\"/>\n+        <omgdi:waypoint x=\"1097.8443113772455\" y=\"511.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow11\" id=\"BPMNEdge_flow11\">\n+        <omgdi:waypoint x=\"1740.0\" y=\"150.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"150.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"200.0\"/>\n+        <omgdi:waypoint x=\"1820.0\" y=\"200.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2DeleteApproval\" id=\"BPMNEdge_active2DeleteApproval\">\n-        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1454.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1454.0\" y=\"390.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1490.0\" y=\"390.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1454.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1454.0\" y=\"310.0\"/>\n+        <omgdi:waypoint x=\"1490.0\" y=\"310.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow11\" id=\"BPMNEdge_flow11\">\n-        <omgdi:waypoint x=\"1740.0\" y=\"150.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"150.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"200.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1820.0\" y=\"200.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow14bis\" id=\"BPMNEdge_flow14bis\">\n+        <omgdi:waypoint x=\"1590.0\" y=\"310.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"310.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"320.0\"/>\n+        <omgdi:waypoint x=\"1670.0\" y=\"320.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow10\" id=\"BPMNEdge_flow10\">\n-        <omgdi:waypoint x=\"1590.0\" y=\"130.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"130.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"150.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1640.0\" y=\"150.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1590.0\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"150.0\"/>\n+        <omgdi:waypoint x=\"1640.0\" y=\"150.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow14bis\" id=\"BPMNEdge_flow14bis\">\n-        <omgdi:waypoint x=\"1590.0\" y=\"390.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"390.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"400.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1670.0\" y=\"400.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"active2RequestPasswordReset\" id=\"BPMNEdge_active2RequestPasswordReset\">\n+        <omgdi:waypoint x=\"1439.5\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1593.209935088986\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1593.209935088986\" y=\"512.6749142927692\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"createApproval2Reject\" id=\"BPMNEdge_createApproval2Reject\">\n-        <omgdi:waypoint x=\"510.0\" y=\"576.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"522.0\" y=\"576.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"522.0\" y=\"689.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"560.0\" y=\"689.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"active2ConfirmPasswordReset\" id=\"BPMNEdge_active2ConfirmPasswordReset\">\n+        <omgdi:waypoint x=\"1439.5\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1608.797798366986\" y=\"540.5\"/>\n+        <omgdi:waypoint x=\"1608.797798366986\" y=\"561.167207412115\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"deleteApprovalGW2Delete\" id=\"BPMNEdge_deleteApprovalGW2Delete\">\n-        <omgdi:waypoint x=\"1710.0\" y=\"400.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"400.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"468.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1940.0\" y=\"468.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1710.0\" y=\"320.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"320.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"388.0\"/>\n+        <omgdi:waypoint x=\"1940.0\" y=\"388.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"createApproval2Reject\" id=\"BPMNEdge_createApproval2Reject\">\n+        <omgdi:waypoint x=\"510.0\" y=\"576.0\"/>\n+        <omgdi:waypoint x=\"522.0\" y=\"576.0\"/>\n+        <omgdi:waypoint x=\"522.0\" y=\"689.0\"/>\n+        <omgdi:waypoint x=\"560.0\" y=\"689.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2Delete\" id=\"BPMNEdge_active2Delete\">\n-        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1452.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1452.0\" y=\"610.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1990.0\" y=\"498.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1452.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1452.0\" y=\"680.6812757582483\"/>\n+        <omgdi:waypoint x=\"1955.9214707261015\" y=\"680.6812757582483\"/>\n+        <omgdi:waypoint x=\"1986.506931044467\" y=\"418.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"updateApprovalGW2Update\" id=\"BPMNEdge_updateApprovalGW2Update\">\n-        <omgdi:waypoint x=\"1710.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"610.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1790.0\" y=\"610.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1710.0\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"730.0\"/>\n+        <omgdi:waypoint x=\"1790.0\" y=\"730.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2UpdateApproval\" id=\"BPMNEdge_active2UpdateApproval\">\n-        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1454.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1454.0\" y=\"650.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1490.0\" y=\"650.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1454.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1454.0\" y=\"770.0\"/>\n+        <omgdi:waypoint x=\"1490.0\" y=\"770.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"rejected2Delete\" id=\"BPMNEdge_rejected2Delete\">\n-        <omgdi:waypoint x=\"930.0\" y=\"795.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"972.0\" y=\"795.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1470.0\" y=\"911.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1989.0\" y=\"911.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1990.0\" y=\"498.0\"></omgdi:waypoint>\n-      </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"updateApprovalGW2Reject\" id=\"BPMNEdge_updateApprovalGW2Reject\">\n-        <omgdi:waypoint x=\"1710.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"870.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1790.0\" y=\"870.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"930.0\" y=\"795.0\"/>\n+        <omgdi:waypoint x=\"972.0\" y=\"795.0\"/>\n+        <omgdi:waypoint x=\"1470.0\" y=\"911.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"911.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"418.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2Active\" id=\"BPMNEdge_createApprovalGW2Active\">\n-        <omgdi:waypoint x=\"630.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"674.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"674.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1030.0\" y=\"541.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"630.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"674.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"674.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1030.0\" y=\"540.8768472906404\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"updateApprovalGW2Reject\" id=\"BPMNEdge_updateApprovalGW2Reject\">\n+        <omgdi:waypoint x=\"1710.0\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"870.0\"/>\n+        <omgdi:waypoint x=\"1790.0\" y=\"870.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow8ter\" id=\"BPMNEdge_flow8ter\">\n-        <omgdi:waypoint x=\"1790.0\" y=\"870.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1778.0\" y=\"882.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1225.0\" y=\"787.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"726.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1790.0\" y=\"879.6774193548387\"/>\n+        <omgdi:waypoint x=\"1778.0\" y=\"882.0\"/>\n+        <omgdi:waypoint x=\"1225.0\" y=\"787.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"726.0\"/>\n+        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow15\" id=\"BPMNEdge_flow15\">\n+        <omgdi:waypoint x=\"1643.209935088986\" y=\"482.6749142927693\"/>\n+        <omgdi:waypoint x=\"1748.9712597675173\" y=\"482.67491429276924\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"suspended2Reactivate\" id=\"BPMNEdge_suspended2Reactivate\">\n-        <omgdi:waypoint x=\"1860.0\" y=\"200.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1902.0\" y=\"200.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1902.0\" y=\"140.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1940.0\" y=\"140.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1860.0\" y=\"200.0\"/>\n+        <omgdi:waypoint x=\"1902.0\" y=\"200.0\"/>\n+        <omgdi:waypoint x=\"1902.0\" y=\"140.0\"/>\n+        <omgdi:waypoint x=\"1940.0\" y=\"140.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow13\" id=\"BPMNEdge_flow13\">\n-        <omgdi:waypoint x=\"660.0\" y=\"689.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"689.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"800.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"710.0\" y=\"800.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"660.0\" y=\"689.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"689.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"800.0\"/>\n+        <omgdi:waypoint x=\"710.0\" y=\"800.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow14\" id=\"BPMNEdge_flow14\">\n-        <omgdi:waypoint x=\"810.0\" y=\"800.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"822.0\" y=\"787.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"822.0\" y=\"795.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"890.0\" y=\"795.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"760.0\" y=\"770.0\"/>\n+        <omgdi:waypoint x=\"760.0\" y=\"732.8074937730017\"/>\n+        <omgdi:waypoint x=\"910.0\" y=\"732.8074937730017\"/>\n+        <omgdi:waypoint x=\"910.0\" y=\"775.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2EnableGW\" id=\"BPMNEdge_createApprovalGW2EnableGW\">\n-        <omgdi:waypoint x=\"510.0\" y=\"576.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"522.0\" y=\"576.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"522.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"590.0\" y=\"449.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"510.0\" y=\"576.0\"/>\n+        <omgdi:waypoint x=\"522.0\" y=\"576.0\"/>\n+        <omgdi:waypoint x=\"522.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"590.0\" y=\"449.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2Update\" id=\"BPMNEdge_active2Update\">\n-        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1456.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1456.0\" y=\"610.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1790.0\" y=\"610.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1456.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1456.0\" y=\"730.0\"/>\n+        <omgdi:waypoint x=\"1790.0\" y=\"730.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"create2Activate\" id=\"BPMNEdge_create2Activate\">\n-        <omgdi:waypoint x=\"270.0\" y=\"526.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"282.0\" y=\"526.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"282.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"590.0\" y=\"449.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"270.0\" y=\"526.0\"/>\n+        <omgdi:waypoint x=\"282.0\" y=\"526.0\"/>\n+        <omgdi:waypoint x=\"282.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"590.0\" y=\"449.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"active2Suspend\" id=\"BPMNEdge_active2Suspend\">\n-        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1452.0\" y=\"540.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1452.0\" y=\"130.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1490.0\" y=\"130.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1440.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1452.0\" y=\"540.0\"/>\n+        <omgdi:waypoint x=\"1452.0\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"1490.0\" y=\"130.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"suspended2Delete\" id=\"BPMNEdge_suspended2Delete\">\n-        <omgdi:waypoint x=\"1860.0\" y=\"200.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1902.0\" y=\"200.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1980.0\" y=\"388.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1990.0\" y=\"438.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1860.0\" y=\"200.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"200.0\"/>\n+        <omgdi:waypoint x=\"1990.0\" y=\"358.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"created2Activate\" id=\"BPMNEdge_created2Activate\">\n-        <omgdi:waypoint x=\"1042.0\" y=\"260.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1054.0\" y=\"260.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1054.0\" y=\"278.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1092.0\" y=\"278.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1042.0\" y=\"260.0\"/>\n+        <omgdi:waypoint x=\"1054.0\" y=\"260.0\"/>\n+        <omgdi:waypoint x=\"1054.0\" y=\"278.0\"/>\n+        <omgdi:waypoint x=\"1092.0\" y=\"278.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"createAsAnonymous2Approval\" id=\"BPMNEdge_createAsAnonymous2Approval\">\n-        <omgdi:waypoint x=\"270.0\" y=\"526.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"282.0\" y=\"526.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"282.0\" y=\"590.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"320.0\" y=\"590.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"270.0\" y=\"526.0\"/>\n+        <omgdi:waypoint x=\"282.0\" y=\"526.0\"/>\n+        <omgdi:waypoint x=\"282.0\" y=\"590.0\"/>\n+        <omgdi:waypoint x=\"320.0\" y=\"590.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow3\" id=\"BPMNEdge_flow3\">\n-        <omgdi:waypoint x=\"420.0\" y=\"590.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"432.0\" y=\"590.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"432.0\" y=\"576.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"470.0\" y=\"576.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"420.0\" y=\"590.0\"/>\n+        <omgdi:waypoint x=\"432.0\" y=\"590.0\"/>\n+        <omgdi:waypoint x=\"432.0\" y=\"576.0\"/>\n+        <omgdi:waypoint x=\"470.0\" y=\"576.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow2\" id=\"BPMNEdge_flow2\">\n-        <omgdi:waypoint x=\"180.0\" y=\"527.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"192.0\" y=\"527.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"192.0\" y=\"526.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"230.0\" y=\"526.0\"></omgdi:waypoint>\n-      </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow5\" id=\"BPMNEdge_flow5\">\n-        <omgdi:waypoint x=\"802.0\" y=\"218.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"814.0\" y=\"218.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"814.0\" y=\"243.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"852.0\" y=\"243.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"180.0\" y=\"527.0\"/>\n+        <omgdi:waypoint x=\"192.0\" y=\"527.0\"/>\n+        <omgdi:waypoint x=\"192.0\" y=\"526.0\"/>\n+        <omgdi:waypoint x=\"230.0\" y=\"526.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"rejected2Rejected\" id=\"BPMNEdge_rejected2Rejected\">\n-        <omgdi:waypoint x=\"890.0\" y=\"795.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"848.0\" y=\"795.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"848.0\" y=\"800.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"810.0\" y=\"800.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"890.6451612903226\" y=\"795.6451612903226\"/>\n+        <omgdi:waypoint x=\"810.0\" y=\"798.3333333333334\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2Suspended\" id=\"BPMNEdge_createApprovalGW2Suspended\">\n-        <omgdi:waypoint x=\"630.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"130.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1490.0\" y=\"130.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow5\" id=\"BPMNEdge_flow5\">\n+        <omgdi:waypoint x=\"802.0\" y=\"218.0\"/>\n+        <omgdi:waypoint x=\"814.0\" y=\"218.0\"/>\n+        <omgdi:waypoint x=\"814.0\" y=\"243.0\"/>\n+        <omgdi:waypoint x=\"852.0\" y=\"243.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow4\" id=\"BPMNEdge_flow4\">\n-        <omgdi:waypoint x=\"810.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"822.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"959.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"810.0\" y=\"640.0\"/>\n+        <omgdi:waypoint x=\"822.0\" y=\"640.0\"/>\n+        <omgdi:waypoint x=\"959.0\" y=\"640.0\"/>\n+        <omgdi:waypoint x=\"1043.3333333333333\" y=\"571.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2OptIn\" id=\"BPMNEdge_createApprovalGW2OptIn\">\n-        <omgdi:waypoint x=\"630.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"674.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"700.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"752.0\" y=\"248.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2Suspended\" id=\"BPMNEdge_createApprovalGW2Suspended\">\n+        <omgdi:waypoint x=\"630.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"1490.0\" y=\"130.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow14ter\" id=\"BPMNEdge_flow14ter\">\n-        <omgdi:waypoint x=\"1790.0\" y=\"350.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1778.0\" y=\"337.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1362.0\" y=\"306.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"511.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1790.0\" y=\"260.7608891486752\"/>\n+        <omgdi:waypoint x=\"1424.117736926915\" y=\"193.1523534073587\"/>\n+        <omgdi:waypoint x=\"1109.678315230625\" y=\"511.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2OptIn\" id=\"BPMNEdge_createApprovalGW2OptIn\">\n+        <omgdi:waypoint x=\"630.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"674.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"700.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"745.2467532467532\" y=\"248.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow1\" id=\"BPMNEdge_flow1\">\n-        <omgdi:waypoint x=\"35.0\" y=\"529.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"80.0\" y=\"527.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"30.0\" y=\"527.0\"/>\n+        <omgdi:waypoint x=\"80.0\" y=\"527.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow16\" id=\"BPMNEdge_flow16\">\n+        <omgdi:waypoint x=\"1748.9712597675173\" y=\"459.5470829510475\"/>\n+        <omgdi:waypoint x=\"1592.4096593525787\" y=\"387.128477171313\"/>\n+        <omgdi:waypoint x=\"1130.0\" y=\"525.9854974413342\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"created2Created\" id=\"BPMNEdge_created2Created\">\n-        <omgdi:waypoint x=\"1002.0\" y=\"260.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"990.0\" y=\"260.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"990.0\" y=\"243.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"952.0\" y=\"243.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1002.0\" y=\"260.0\"/>\n+        <omgdi:waypoint x=\"990.0\" y=\"260.0\"/>\n+        <omgdi:waypoint x=\"990.0\" y=\"243.0\"/>\n+        <omgdi:waypoint x=\"952.0\" y=\"243.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow18\" id=\"BPMNEdge_flow18\">\n+        <omgdi:waypoint x=\"1748.971259767517\" y=\"619.7464352880323\"/>\n+        <omgdi:waypoint x=\"1673.525420205687\" y=\"662.8701121105813\"/>\n+        <omgdi:waypoint x=\"1130.0\" y=\"551.266629529393\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"createApprovalGW2Activate\" id=\"BPMNEdge_createApprovalGW2Activate\">\n-        <omgdi:waypoint x=\"630.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"449.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"672.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"710.0\" y=\"640.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"630.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"449.0\"/>\n+        <omgdi:waypoint x=\"672.0\" y=\"640.0\"/>\n+        <omgdi:waypoint x=\"710.0\" y=\"640.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow7\" id=\"BPMNEdge_flow7\">\n-        <omgdi:waypoint x=\"1142.0\" y=\"308.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"511.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1134.9277566539924\" y=\"308.0\"/>\n+        <omgdi:waypoint x=\"1087.0722433460076\" y=\"511.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow6\" id=\"BPMNEdge_flow6\">\n-        <omgdi:waypoint x=\"952.0\" y=\"243.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"964.0\" y=\"255.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"964.0\" y=\"260.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1002.0\" y=\"260.0\"></omgdi:waypoint>\n-      </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow8bis\" id=\"BPMNEdge_flow8bis\">\n-        <omgdi:waypoint x=\"1590.0\" y=\"650.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"650.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1602.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1670.0\" y=\"640.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"952.0\" y=\"252.67741935483872\"/>\n+        <omgdi:waypoint x=\"964.0\" y=\"255.0\"/>\n+        <omgdi:waypoint x=\"964.0\" y=\"260.0\"/>\n+        <omgdi:waypoint x=\"1002.0\" y=\"260.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow9\" id=\"BPMNEdge_flow9\">\n-        <omgdi:waypoint x=\"1840.0\" y=\"640.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1797.0\" y=\"775.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1465.0\" y=\"775.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1080.0\" y=\"571.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1828.6246202240113\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1811.88836468294\" y=\"804.1381014189917\"/>\n+        <omgdi:waypoint x=\"1474.4398193359375\" y=\"804.1381014189917\"/>\n+        <omgdi:waypoint x=\"1124.969521769241\" y=\"571.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"deleteApprovalGW2Reject\" id=\"BPMNEdge_deleteApprovalGW2Reject\">\n-        <omgdi:waypoint x=\"1710.0\" y=\"400.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"400.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1752.0\" y=\"350.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1790.0\" y=\"350.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"1710.0\" y=\"320.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"320.0\"/>\n+        <omgdi:waypoint x=\"1752.0\" y=\"270.0\"/>\n+        <omgdi:waypoint x=\"1790.0\" y=\"270.0\"/>\n       </bpmndi:BPMNEdge>\n-      <bpmndi:BPMNEdge bpmnElement=\"flow8\" id=\"BPMNEdge_flow8\">\n-        <omgdi:waypoint x=\"1130.0\" y=\"541.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"1400.0\" y=\"540.0\"></omgdi:waypoint>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow8bis\" id=\"BPMNEdge_flow8bis\">\n+        <omgdi:waypoint x=\"1590.0\" y=\"770.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"770.0\"/>\n+        <omgdi:waypoint x=\"1602.0\" y=\"760.0\"/>\n+        <omgdi:waypoint x=\"1670.0\" y=\"760.0\"/>\n       </bpmndi:BPMNEdge>\n       <bpmndi:BPMNEdge bpmnElement=\"flow99\" id=\"BPMNEdge_flow99\">\n-        <omgdi:waypoint x=\"2040.0\" y=\"468.0\"></omgdi:waypoint>\n-        <omgdi:waypoint x=\"2080.0\" y=\"468.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"2040.0\" y=\"388.0\"/>\n+        <omgdi:waypoint x=\"2078.1893792531678\" y=\"388.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow8\" id=\"BPMNEdge_flow8\">\n+        <omgdi:waypoint x=\"1130.0\" y=\"540.8529411764706\"/>\n+        <omgdi:waypoint x=\"1400.058651026393\" y=\"540.0586510263929\"/>\n       </bpmndi:BPMNEdge>\n     </bpmndi:BPMNPlane>\n   </bpmndi:BPMNDiagram>"},{"sha":"dcd59d6831932bb31354e916e88a29f94703f01f","filename":"pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/740bf422f107307a6dafbbf40bcb85055358cf8f/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/740bf422f107307a6dafbbf40bcb85055358cf8f/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=740bf422f107307a6dafbbf40bcb85055358cf8f","patch":"@@ -726,6 +726,11 @@ under the License.\n         <artifactId>jackson-jaxrs-json-provider</artifactId>\n         <version>${jackson.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.module</groupId>\n+        <artifactId>jackson-module-afterburner</artifactId>\n+        <version>${jackson.version}</version>\n+      </dependency>\n             \n       <dependency>\n         <groupId>org.quartz-scheduler</groupId>"}]}