{"sha":"f95ad4f11d6d9880d2dd44799c7880402bc50a36","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY5NWFkNGYxMWQ2ZDk4ODBkMmRkNDQ3OTljNzg4MDQwMmJjNTBhMzY=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-08-15T12:53:27Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-08-15T12:53:27Z"},"message":"[SYNCOPE-183] - 'Enforce mandatory constraints' not working\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1373381 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d567046ece1d00933bd53564654ca83a297a6967","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d567046ece1d00933bd53564654ca83a297a6967"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f95ad4f11d6d9880d2dd44799c7880402bc50a36","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f95ad4f11d6d9880d2dd44799c7880402bc50a36","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f95ad4f11d6d9880d2dd44799c7880402bc50a36","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f95ad4f11d6d9880d2dd44799c7880402bc50a36/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"7365b49c57bb54fa57bc52d751f9f9b506adafdb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7365b49c57bb54fa57bc52d751f9f9b506adafdb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7365b49c57bb54fa57bc52d751f9f9b506adafdb"}],"stats":{"total":41,"additions":35,"deletions":6},"files":[{"sha":"9bcba10b622d3c407e830b3c4ea983c574f8b224","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f95ad4f11d6d9880d2dd44799c7880402bc50a36/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f95ad4f11d6d9880d2dd44799c7880402bc50a36/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=f95ad4f11d6d9880d2dd44799c7880402bc50a36","patch":"@@ -263,7 +263,7 @@ private SyncopeClientException checkMandatory(final AttributableUtil attributabl\n                     attributableUtil))) {\n \n                 LOG.error(\"Mandatory schema \" + schema.getName() + \" not provided with values\");\n-\n+                \n                 requiredValuesMissing.addElement(schema.getName());\n             }\n         }\n@@ -661,11 +661,6 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n             compositeErrorException.addException(invalidValues);\n         }\n \n-        SyncopeClientException requiredValuesMissing = checkMandatory(attributableUtil, attributable);\n-        if (!requiredValuesMissing.isEmpty()) {\n-            compositeErrorException.addException(requiredValuesMissing);\n-        }\n-\n         // 2. derived attributes\n         AbstractDerSchema derivedSchema;\n         AbstractDerAttr derivedAttribute;\n@@ -707,6 +702,11 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n                 attributable.addResource(resource);\n             }\n         }\n+        \n+        SyncopeClientException requiredValuesMissing = checkMandatory(attributableUtil, attributable);\n+        if (!requiredValuesMissing.isEmpty()) {\n+            compositeErrorException.addException(requiredValuesMissing);\n+        }\n \n         // Throw composite exception if there is at least one element set\n         // in the composing exceptions"},{"sha":"3957c368d40adabf67a7cd9a06eeb6d158b15c2e","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f95ad4f11d6d9880d2dd44799c7880402bc50a36/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f95ad4f11d6d9880d2dd44799c7880402bc50a36/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=f95ad4f11d6d9880d2dd44799c7880402bc50a36","patch":"@@ -308,6 +308,35 @@ public void issue186() {\n         }\n         assertNull(sce);\n     }\n+    \n+    @Test\n+    public void testMandatoryContraintsUserCreation() {\n+        UserTO userTO = getSampleTO(\"issue183@apache.org\");\n+        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.setPassword(\"newPassword\");\n+        \n+        AttributeTO type = null;\n+        for (AttributeTO attr : userTO.getAttributes()) {\n+            if (\"type\".equals(attr.getSchema())) {\n+                type = attr;\n+            }\n+        }\n+        assertNotNull(type);\n+        userTO.removeAttribute(type);\n+\n+        SyncopeClientException sce = null;\n+        try {\n+            userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        } catch (SyncopeClientCompositeErrorException scce) {\n+            sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n+        }\n+        assertNotNull(sce);\n+        \n+        userTO.addAttribute(type);\n+        \n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        assertNotNull(userTO);\n+    }\n \n     @Test\n     public void issue147() {"}]}