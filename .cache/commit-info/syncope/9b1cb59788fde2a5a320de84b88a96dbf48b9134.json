{"sha":"9b1cb59788fde2a5a320de84b88a96dbf48b9134","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliMWNiNTk3ODhmZGUyYTVhMzIwZGU4NGI4OGE5NmRiZjQ4YjkxMzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-27T10:15:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-27T10:18:34Z"},"message":"Various cleanup and optimizations WRT dynamic memberships","tree":{"sha":"66e3714fa14cdfffb08448877036ae2f280b36c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/66e3714fa14cdfffb08448877036ae2f280b36c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9b1cb59788fde2a5a320de84b88a96dbf48b9134","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b1cb59788fde2a5a320de84b88a96dbf48b9134","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9b1cb59788fde2a5a320de84b88a96dbf48b9134","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b1cb59788fde2a5a320de84b88a96dbf48b9134/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"71f8cc89b749b235eb4e328231c71c99d6d6a8ba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71f8cc89b749b235eb4e328231c71c99d6d6a8ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/71f8cc89b749b235eb4e328231c71c99d6d6a8ba"}],"stats":{"total":129,"additions":45,"deletions":84},"files":[{"sha":"28af0933b6150e0d03b78802bc54bec6cede4626","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RoleLogic.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -64,7 +64,7 @@ public List<RoleTO> list() {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ROLE_CREATE + \"')\")\n     public RoleTO create(final RoleTO roleTO) {\n-        return binder.getRoleTO(roleDAO.save(binder.create(roleTO)));\n+        return binder.getRoleTO(binder.create(roleTO));\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ROLE_UPDATE + \"')\")\n@@ -75,7 +75,7 @@ public RoleTO update(final RoleTO roleTO) {\n             throw new NotFoundException(roleTO.getKey());\n         }\n \n-        return binder.getRoleTO(roleDAO.save(binder.update(role, roleTO)));\n+        return binder.getRoleTO(binder.update(role, roleTO));\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ROLE_DELETE + \"')\")\n@@ -151,5 +151,4 @@ protected RoleTO resolveReference(final Method method, final Object... args)\n \n         throw new UnresolvedReferenceException();\n     }\n-\n }"},{"sha":"cc2a7af2cc1762b5648959c6892c72ed8f5e7b47","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DynRealmDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDynRealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDynRealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDynRealmDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -30,6 +30,8 @@ public interface DynRealmDAO extends DAO<DynRealm> {\n \n     DynRealm save(DynRealm dynRealm);\n \n+    DynRealm saveAndRefreshDynMemberships(DynRealm dynRealm);\n+\n     void delete(String key);\n \n     void clearDynMembers(DynRealm dynRealm);"},{"sha":"ce2c1839fb91706bb1c421e7df718471fcfbefb5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/GroupDAO.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -97,4 +97,11 @@ public interface GroupDAO extends AnyDAO<Group> {\n      */\n     Set<String> removeDynMemberships(User user);\n \n+    /**\n+     * Saves the provided group and refreshes all User and AnyObject members.\n+     *\n+     * @param group group to save\n+     * @return merged group\n+     */\n+    Group saveAndRefreshDynMemberships(Group group);\n }"},{"sha":"2060e84cd26e5eb560f27488f90ba94dd1fe3042","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RoleDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -38,6 +38,8 @@ public interface RoleDAO extends DAO<Role> {\n \n     Role save(Role role);\n \n+    Role saveAndRefreshDynMemberships(Role role);\n+\n     void delete(Role role);\n \n     void delete(String key);"},{"sha":"7657112b97490314ad60da31e8284377f22dd213","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADynRealmDAO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -88,7 +88,12 @@ public List<DynRealm> findAll() {\n \n     @Override\n     public DynRealm save(final DynRealm dynRealm) {\n-        DynRealm merged = entityManager().merge(dynRealm);\n+        return entityManager().merge(dynRealm);\n+    }\n+\n+    @Override\n+    public DynRealm saveAndRefreshDynMemberships(final DynRealm dynRealm) {\n+        DynRealm merged = save(dynRealm);\n \n         // refresh dynamic memberships\n         clearDynMembers(merged);\n@@ -156,5 +161,4 @@ public void removeDynMemberships(final String key) {\n         delete.setParameter(1, key);\n         delete.executeUpdate();\n     }\n-\n }"},{"sha":"f565358f09c7fe7bd68012d6ae903deeecaffedd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -281,8 +281,8 @@ private SearchCond buildDynMembershipCond(final String baseCondFIQL, final Realm\n     }\n \n     @Override\n-    public Group save(final Group group) {\n-        Group merged = super.save(group);\n+    public Group saveAndRefreshDynMemberships(final Group group) {\n+        Group merged = save(group);\n         publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged, AuthContextUtils.getDomain()));\n \n         // refresh dynamic memberships\n@@ -417,7 +417,7 @@ public List<String> findADynMembers(final Group group) {\n     @Override\n     public int countAMembers(final Group group) {\n         Query query = entityManager().createNativeQuery(\n-            \"SELECT COUNT(anyObject_id) FROM \" + JPAAMembership.TABLE + \" WHERE group_id=?\");\n+                \"SELECT COUNT(anyObject_id) FROM \" + JPAAMembership.TABLE + \" WHERE group_id=?\");\n         query.setParameter(1, group.getKey());\n \n         return ((Number) query.getSingleResult()).intValue();\n@@ -426,7 +426,7 @@ public int countAMembers(final Group group) {\n     @Override\n     public int countUMembers(final Group group) {\n         Query query = entityManager().createNativeQuery(\n-            \"SELECT COUNT(user_id) FROM \" + JPAUMembership.TABLE + \" WHERE group_id=?\");\n+                \"SELECT COUNT(user_id) FROM \" + JPAUMembership.TABLE + \" WHERE group_id=?\");\n         query.setParameter(1, group.getKey());\n \n         return ((Number) query.getSingleResult()).intValue();\n@@ -435,7 +435,7 @@ public int countUMembers(final Group group) {\n     @Override\n     public int countADynMembers(final Group group) {\n         Query query = entityManager().createNativeQuery(\n-            \"SELECT COUNT(any_id) FROM \" + ADYNMEMB_TABLE + \" WHERE group_id=?\");\n+                \"SELECT COUNT(any_id) FROM \" + ADYNMEMB_TABLE + \" WHERE group_id=?\");\n         query.setParameter(1, group.getKey());\n \n         return ((Number) query.getSingleResult()).intValue();"},{"sha":"453fb55cc078c754cadc047a6e39412562ba0e4f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -98,7 +98,12 @@ public List<Role> findAll() {\n \n     @Override\n     public Role save(final Role role) {\n-        Role merged = entityManager().merge(role);\n+        return entityManager().merge(role);\n+    }\n+\n+    @Override\n+    public Role saveAndRefreshDynMemberships(final Role role) {\n+        Role merged = save(role);\n \n         // refresh dynamic memberships\n         clearDynMembers(merged);\n@@ -197,5 +202,4 @@ public void removeDynMemberships(final String key) {\n         delete.setParameter(1, key);\n         delete.executeUpdate();\n     }\n-\n }"},{"sha":"5d0d6a5ea69fc4bbf999bacc72c9d0294c09081a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnySearchTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -93,7 +93,7 @@ public void searchByDynMembership() {\n \n         role.setDynMembership(dynMembership);\n \n-        role = roleDAO.save(role);\n+        role = roleDAO.saveAndRefreshDynMemberships(role);\n         assertNotNull(role);\n \n         roleDAO.flush();"},{"sha":"e20587fe4b1b225a61ee1a351b1164bb9ad778de","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/DynRealmTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDynRealmTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDynRealmTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDynRealmTest.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -76,7 +76,7 @@ public void misc() {\n         }\n \n         dynRealm.setKey(\"name\");\n-        DynRealm actual = dynRealmDAO.save(dynRealm);\n+        DynRealm actual = dynRealmDAO.saveAndRefreshDynMemberships(dynRealm);\n         assertNotNull(actual);\n \n         dynRealmDAO.flush();\n@@ -92,5 +92,4 @@ public void misc() {\n \n         assertTrue(userDAO.findDynRealms(user.getKey()).contains(actual.getKey()));\n     }\n-\n }"},{"sha":"7f424fdc338c583d4cce88e350db8d1d0f883be9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -230,7 +230,7 @@ public void udynMembership() {\n \n         group.setUDynMembership(dynMembership);\n \n-        Group actual = groupDAO.save(group);\n+        Group actual = groupDAO.saveAndRefreshDynMemberships(group);\n         assertNotNull(actual);\n \n         groupDAO.flush();\n@@ -332,7 +332,7 @@ public void adynMembership() {\n \n         group.add(dynMembership);\n \n-        Group actual = groupDAO.save(group);\n+        Group actual = groupDAO.saveAndRefreshDynMemberships(group);\n         assertNotNull(actual);\n \n         groupDAO.flush();"},{"sha":"0150ff7a07157becfade1f914170f6d4f9dcef2b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -121,7 +121,7 @@ public void dynMembership() {\n \n         role.setDynMembership(dynMembership);\n \n-        Role actual = roleDAO.save(role);\n+        Role actual = roleDAO.saveAndRefreshDynMemberships(role);\n         assertNotNull(actual);\n \n         roleDAO.flush();"},{"sha":"438ee9f6aaaccd7f2c3206faf7997130881f9370","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DynRealmDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDynRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDynRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDynRealmDataBinderImpl.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -96,7 +96,7 @@ public DynRealm update(final DynRealm toBeUpdated, final DynRealmTO dynRealmTO)\n             }\n         });\n \n-        return dynRealmDAO.save(dynRealm);\n+        return dynRealmDAO.saveAndRefreshDynMemberships(dynRealm);\n     }\n \n     @Override"},{"sha":"e2ec7ee49a4a5720f6807ec0f5e0fc0d6288588d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -260,6 +260,8 @@ public PropagationByResource update(final Group toBeUpdated, final GroupPatch gr\n             }\n         }\n \n+        group = groupDAO.saveAndRefreshDynMemberships(group);\n+\n         // type extensions\n         for (TypeExtensionTO typeExtTO : groupPatch.getTypeExtensions()) {\n             AnyType anyType = anyTypeDAO.find(typeExtTO.getAnyType());"},{"sha":"85595f69de301ba2c9f2c9c72da5807b6f549d84","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RoleDataBinderImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -139,7 +139,7 @@ public Role update(final Role toBeUpdated, final RoleTO roleTO) {\n             }\n         }\n \n-        return role;\n+        return roleDAO.saveAndRefreshDynMemberships(role);\n     }\n \n     @Override\n@@ -164,5 +164,4 @@ public RoleTO getRoleTO(final Role role) {\n \n         return roleTO;\n     }\n-\n }"},{"sha":"9255cb1eb280c64d8fa90aec1a40560647c54aa4","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -343,16 +343,13 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doUpdate(final User user, fin\n \n         PropagationByResource propByRes = engine.getRuntimeService().getVariable(\n                 user.getWorkflowId(), PROP_BY_RESOURCE, PropagationByResource.class);\n-        UserPatch updatedPatch = engine.getRuntimeService().getVariable(\n-                user.getWorkflowId(), USER_PATCH, UserPatch.class);\n-\n         saveForFormSubmit(\n-                updated, updatedPatch.getPassword() == null ? null : updatedPatch.getPassword().getValue(), propByRes);\n+                updated, userPatch.getPassword() == null ? null : userPatch.getPassword().getValue(), propByRes);\n \n         Boolean propagateEnable = engine.getRuntimeService().getVariable(\n                 user.getWorkflowId(), PROPAGATE_ENABLE, Boolean.class);\n \n-        return new WorkflowResult<>(Pair.of(updatedPatch, propagateEnable), propByRes, tasks);\n+        return new WorkflowResult<>(Pair.of(userPatch, propagateEnable), propByRes, tasks);\n     }\n \n     @Override"},{"sha":"757d009bb1c7dfe7d8b5f1a67cfe79c79a24f141","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/task/Update.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FUpdate.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -18,12 +18,7 @@\n  */\n package org.apache.syncope.core.workflow.flowable.task;\n \n-import java.util.Set;\n-import org.apache.syncope.common.lib.AnyOperations;\n-import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -49,22 +44,11 @@ protected void doExecute(final String executionId) {\n                 getVariable(executionId, FlowableUserWorkflowAdapter.USER_PATCH, UserPatch.class);\n \n         user = userDAO.save(user);\n-        UserTO original = dataBinder.getUserTO(user, true);\n \n         PropagationByResource propByRes = dataBinder.update(user, userPatch);\n-        PasswordPatch password = userPatch.getPassword();\n-        Set<AttrTO> virAttrs = userPatch.getVirAttrs();\n-\n-        UserTO updated = dataBinder.getUserTO(user.getKey());\n-        userPatch = AnyOperations.diff(updated, original, false);\n-        userPatch.setPassword(password);\n-        userPatch.getVirAttrs().clear();\n-        userPatch.getVirAttrs().addAll(virAttrs);\n \n         // report updated user and propagation by resource as result\n         engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.USER, user);\n-        engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.USER_TO, updated);\n-        engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.USER_PATCH, userPatch);\n         engine.getRuntimeService().setVariable(executionId, FlowableUserWorkflowAdapter.PROP_BY_RESOURCE, propByRes);\n     }\n }"},{"sha":"7e984df0719d52441df28a4b4b1585612e0bf749","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultAnyObjectWorkflowAdapter.java","status":"modified","additions":1,"deletions":13,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -21,11 +21,8 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n-import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n@@ -55,17 +52,8 @@ protected WorkflowResult<String> doCreate(final AnyObjectTO anyObjectTO) {\n \n     @Override\n     protected WorkflowResult<AnyObjectPatch> doUpdate(final AnyObject anyObject, final AnyObjectPatch anyObjectPatch) {\n-        AnyObjectTO original = dataBinder.getAnyObjectTO(anyObject, true);\n-\n         PropagationByResource propByRes = dataBinder.update(anyObject, anyObjectPatch);\n-        Set<AttrTO> virAttrs = anyObjectPatch.getVirAttrs();\n-\n-        AnyObjectTO updated = dataBinder.getAnyObjectTO(anyObjectDAO.save(anyObject), true);\n-        AnyObjectPatch effectivePatch = AnyOperations.diff(updated, original, false);\n-        effectivePatch.getVirAttrs().clear();\n-        effectivePatch.getVirAttrs().addAll(virAttrs);\n-\n-        return new WorkflowResult<>(effectivePatch, propByRes, \"update\");\n+        return new WorkflowResult<>(anyObjectPatch, propByRes, \"update\");\n     }\n \n     @Override"},{"sha":"228561e6ab117f7d3ced1721db63cd3855773990","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -21,10 +21,7 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n-import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n-import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n@@ -45,7 +42,7 @@ public class DefaultGroupWorkflowAdapter extends AbstractGroupWorkflowAdapter {\n     protected WorkflowResult<String> doCreate(final GroupTO groupTO) {\n         Group group = entityFactory.newEntity(Group.class);\n         dataBinder.create(group, groupTO);\n-        group = groupDAO.save(group);\n+        group = groupDAO.saveAndRefreshDynMemberships(group);\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(ResourceOperation.CREATE, groupDAO.findAllResourceKeys(group.getKey()));\n@@ -55,17 +52,8 @@ protected WorkflowResult<String> doCreate(final GroupTO groupTO) {\n \n     @Override\n     protected WorkflowResult<GroupPatch> doUpdate(final Group group, final GroupPatch groupPatch) {\n-        GroupTO original = dataBinder.getGroupTO(group, true);\n-\n         PropagationByResource propByRes = dataBinder.update(group, groupPatch);\n-        Set<AttrTO> virAttrs = groupPatch.getVirAttrs();\n-\n-        GroupTO updated = dataBinder.getGroupTO(groupDAO.save(group), true);\n-        GroupPatch effectivePatch = AnyOperations.diff(updated, original, false);\n-        effectivePatch.getVirAttrs().clear();\n-        effectivePatch.getVirAttrs().addAll(virAttrs);\n-\n-        return new WorkflowResult<>(effectivePatch, propByRes, \"update\");\n+        return new WorkflowResult<>(groupPatch, propByRes, \"update\");\n     }\n \n     @Override"},{"sha":"ce9e77bd97a91c06ffe293b07b35140834005733","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b1cb59788fde2a5a320de84b88a96dbf48b9134/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=9b1cb59788fde2a5a320de84b88a96dbf48b9134","patch":"@@ -21,12 +21,9 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n@@ -100,19 +97,8 @@ protected WorkflowResult<String> doActivate(final User user, final String token)\n \n     @Override\n     protected WorkflowResult<Pair<UserPatch, Boolean>> doUpdate(final User user, final UserPatch userPatch) {\n-        UserTO original = dataBinder.getUserTO(user, true);\n-\n         PropagationByResource propByRes = dataBinder.update(user, userPatch);\n-        PasswordPatch password = userPatch.getPassword();\n-        Set<AttrTO> virAttrs = userPatch.getVirAttrs();\n-\n-        UserTO updated = dataBinder.getUserTO(userDAO.save(user), true);\n-        UserPatch effectivePatch = AnyOperations.diff(updated, original, false);\n-        effectivePatch.setPassword(password);\n-        effectivePatch.getVirAttrs().clear();\n-        effectivePatch.getVirAttrs().addAll(virAttrs);\n-\n-        return new WorkflowResult<>(Pair.of(effectivePatch, !user.isSuspended()), propByRes, \"update\");\n+        return new WorkflowResult<>(Pair.of(userPatch, !user.isSuspended()), propByRes, \"update\");\n     }\n \n     @Override"}]}