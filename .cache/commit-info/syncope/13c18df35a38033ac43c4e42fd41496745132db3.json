{"sha":"13c18df35a38033ac43c4e42fd41496745132db3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEzYzE4ZGYzNWEzODAzM2FjNDNjNGU0MmZkNDE0OTY3NDUxMzJkYjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-11-29T13:03:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-11-29T13:03:21Z"},"message":"Ubiquitous usage of ConnId's SecurityUtil#decrypt","tree":{"sha":"b5ae1800473dd8861da303c78998cf7773fda5d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b5ae1800473dd8861da303c78998cf7773fda5d6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/13c18df35a38033ac43c4e42fd41496745132db3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13c18df35a38033ac43c4e42fd41496745132db3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/13c18df35a38033ac43c4e42fd41496745132db3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13c18df35a38033ac43c4e42fd41496745132db3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5e98a4382634d0323458d51d0562b69e0615edc9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5e98a4382634d0323458d51d0562b69e0615edc9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5e98a4382634d0323458d51d0562b69e0615edc9"}],"stats":{"total":40,"additions":7,"deletions":33},"files":[{"sha":"caf633aa3bc06e67ed37c6a3598e3a44f4213474","filename":"core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java?ref=13c18df35a38033ac43c4e42fd41496745132db3","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.core.provisioning.java.job.SetUMembershipsJob;\n import org.apache.syncope.core.provisioning.java.pushpull.SchedulingPullActions;\n import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.common.security.SecurityUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n@@ -98,18 +99,9 @@ public void after(\n             GuardedString passwordValue = AttributeUtil.getPasswordValue(delta.getObject().getAttributes());\n \n             if (cipherAlgorithm != null && passwordValue != null) {\n-                final StringBuilder password = new StringBuilder();\n-                passwordValue.access(new GuardedString.Accessor() {\n-\n-                    @Override\n-                    public void access(final char[] clearChars) {\n-                        password.append(clearChars);\n-                    }\n-                });\n-\n                 User user = userDAO.find(entity.getKey());\n                 LOG.debug(\"Setting encoded password for {}\", user);\n-                user.setEncodedPassword(password.toString(), cipherAlgorithm);\n+                user.setEncodedPassword(SecurityUtil.decrypt(passwordValue), cipherAlgorithm);\n             }\n         } else if (entity instanceof GroupTO) {\n             // handles group membership"},{"sha":"e76416c1e8ef33abeb075f297cdb12503a57808e","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/serialization/GuardedStringSerializer.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fserialization%2FGuardedStringSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fserialization%2FGuardedStringSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fserialization%2FGuardedStringSerializer.java?ref=13c18df35a38033ac43c4e42fd41496745132db3","patch":"@@ -26,6 +26,7 @@\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.EncryptorFactory;\n import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.common.security.SecurityUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -59,16 +60,8 @@ public void serialize(final GuardedString source, final JsonGenerator jgen, fina\n         }\n         jgen.writeBooleanField(\"disposed\", disposed);\n \n-        final StringBuilder cleartext = new StringBuilder();\n-        source.access(new GuardedString.Accessor() {\n-\n-            @Override\n-            public void access(final char[] clearChars) {\n-                cleartext.append(clearChars);\n-            }\n-        });\n         byte[] encryptedBytes =\n-                EncryptorFactory.getInstance().getDefaultEncryptor().encrypt(cleartext.toString().getBytes());\n+                EncryptorFactory.getInstance().getDefaultEncryptor().encrypt(SecurityUtil.decrypt(source).getBytes());\n         jgen.writeStringField(\"encryptedBytes\", Base64.encode(encryptedBytes));\n \n         String base64SHA1Hash = null;"},{"sha":"786dbf39f08fb192f16056d8dc79473a87b31994","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":3,"deletions":14,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13c18df35a38033ac43c4e42fd41496745132db3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=13c18df35a38033ac43c4e42fd41496745132db3","patch":"@@ -48,6 +48,7 @@\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.common.security.SecurityUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.slf4j.Logger;\n@@ -91,21 +92,9 @@ public static String getPassword(final Object pwd) {\n         final StringBuilder result = new StringBuilder();\n \n         if (pwd instanceof GuardedString) {\n-            ((GuardedString) pwd).access(new GuardedString.Accessor() {\n-\n-                @Override\n-                public void access(final char[] clearChars) {\n-                    result.append(clearChars);\n-                }\n-            });\n+            result.append(SecurityUtil.decrypt((GuardedString) pwd));\n         } else if (pwd instanceof GuardedByteArray) {\n-            ((GuardedByteArray) pwd).access(new GuardedByteArray.Accessor() {\n-\n-                @Override\n-                public void access(final byte[] clearBytes) {\n-                    result.append(new String(clearBytes));\n-                }\n-            });\n+            result.append(SecurityUtil.decrypt((GuardedByteArray) pwd));\n         } else if (pwd instanceof String) {\n             result.append((String) pwd);\n         } else {"}]}