{"sha":"bba0a441745766d8790aa6948a61eea792a6934d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJiYTBhNDQxNzQ1NzY2ZDg3OTBhYTY5NDhhNjFlZWE3OTJhNjkzNGQ=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-29T15:12:11Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-29T15:12:11Z"},"message":"Fixes SYNCOPE-428\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1554031 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"111bcb1ee67d28e591b8c06aad68652e363646aa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/111bcb1ee67d28e591b8c06aad68652e363646aa"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bba0a441745766d8790aa6948a61eea792a6934d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bba0a441745766d8790aa6948a61eea792a6934d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bba0a441745766d8790aa6948a61eea792a6934d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bba0a441745766d8790aa6948a61eea792a6934d/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3da5c0fa8ee9af8c58f356f90cbf871fde23bf0b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3da5c0fa8ee9af8c58f356f90cbf871fde23bf0b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3da5c0fa8ee9af8c58f356f90cbf871fde23bf0b"}],"stats":{"total":1745,"additions":1514,"deletions":231},"files":[{"sha":"2bfeba55923cafb262b4e5ed1ba5bbdfb9604e7a","filename":"common/src/main/java/org/apache/syncope/common/mod/ResourceAssociationMod.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -0,0 +1,81 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.mod;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.wrap.ResourceName;\r\n+\r\n+/**\r\n+ * This class is used to specify the willing to create associations between user and external references.\r\n+ * Password can be provided if required by an assign or provisioning operation.\r\n+ *\r\n+ * @see org.apache.syncope.common.types.ResourceAssociationActionType\r\n+ */\r\n+@XmlRootElement(name = \"resourceAssociationMod\")\r\n+@XmlType\r\n+public class ResourceAssociationMod extends AbstractBaseBean {\r\n+\r\n+    private static final long serialVersionUID = -4188817853738067678L;\r\n+\r\n+    /**\r\n+     * Target external resources.\r\n+     */\r\n+    private List<ResourceName> targetResources;\r\n+\r\n+    /**\r\n+     * Indicate the willing to change password on target external resources.\r\n+     */\r\n+    private boolean changePwd;\r\n+\r\n+    /**\r\n+     * Indicate the new password to be provisioned on target external resources.\r\n+     */\r\n+    private String password;\r\n+\r\n+    public ResourceAssociationMod() {\r\n+        targetResources = new ArrayList<ResourceName>();\r\n+        changePwd = false;\r\n+        password = null;\r\n+    }\r\n+\r\n+    public List<ResourceName> getTargetResources() {\r\n+        return targetResources;\r\n+    }\r\n+\r\n+    public boolean isChangePwd() {\r\n+        return changePwd;\r\n+    }\r\n+\r\n+    public void setChangePwd(boolean changePwd) {\r\n+        this.changePwd = changePwd;\r\n+    }\r\n+\r\n+    public String getPassword() {\r\n+        return password;\r\n+    }\r\n+\r\n+    public void setPassword(String password) {\r\n+        this.password = password;\r\n+    }\r\n+}\r"},{"sha":"9c46312bb1ec2ea077bdde534bee58fa16dced6f","filename":"common/src/main/java/org/apache/syncope/common/reqres/BulkActionResult.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkActionResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkActionResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkActionResult.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -41,8 +41,13 @@ public class BulkActionResult extends AbstractBaseBean {\n     @XmlType(name = \"bulkActionStatus\")\n     public enum Status {\n \n+        // general bulk action result statuses\n         SUCCESS,\n-        FAILURE\n+        FAILURE,\n+        // specific propagation task execution statuses\n+        CREATED,\n+        SUBMITTED,\n+        UNSUBMITTED;\n \n     }\n \n@@ -62,6 +67,13 @@ public void add(final Object id, final Status status) {\n         }\n     }\n \n+    @JsonIgnore\n+    public void add(final Object id, final String status) {\n+        if (id != null) {\n+            results.add(new Result(id.toString(), Status.valueOf(status.toUpperCase())));\n+        }\n+    }\n+\n     @JsonIgnore\n     public Map<String, Status> getResultMap() {\n         final Map<String, Status> res = new HashMap<String, Status>();"},{"sha":"320c327208ec812c8b6686f1df211771c41daf00","filename":"common/src/main/java/org/apache/syncope/common/reqres/BulkAssociationAction.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -27,26 +27,26 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.AbstractBaseBean;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n \n @XmlRootElement(name = \"bulkAssociationAction\")\n @XmlType\n public class BulkAssociationAction extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 1395353278878758961L;\n \n-    private ResourceAssociationActionType operation;\n+    private ResourceDeAssociationActionType operation;\n \n     /**\n      * Serialized identifiers.\n      */\n     private final List<Long> targets = new ArrayList<Long>();\n \n-    public ResourceAssociationActionType getOperation() {\n+    public ResourceDeAssociationActionType getOperation() {\n         return operation;\n     }\n \n-    public void setOperation(final ResourceAssociationActionType operation) {\n+    public void setOperation(final ResourceDeAssociationActionType operation) {\n         this.operation = operation;\n     }\n "},{"sha":"28cd4c6ae4d32688555c6598f91631852bf23b28","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.to.RoleTO;\r\n import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\r\n import org.apache.syncope.common.wrap.ResourceName;\r\n \r\n @Path(\"roles\")\r\n@@ -186,11 +187,23 @@ PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n      * @param roleId role id.\r\n      * @param type resource association action type\r\n      * @param resourceNames external resources to be used for propagation-related operations\r\n-     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information,\r\n-     * as <tt>Entity</tt>\r\n+     * @return <tt>Response</tt> object featuring the bulk action result\r\n+     */\r\n+    @POST\r\n+    @Path(\"{roleId}/deassociate/{type}\")\r\n+    Response bulkDeassociation(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceDeAssociationActionType type,\r\n+            List<ResourceName> resourceNames);\r\n+    \r\n+    /**\r\n+     * Executes resource-related operations on given role.\r\n+     *\r\n+     * @param roleId role id.\r\n+     * @param type resource association action type\r\n+     * @param resourceNames external resources to be used for propagation-related operations\r\n+     * @return <tt>Response</tt> object featuring the bulk action result\r\n      */\r\n     @POST\r\n     @Path(\"{roleId}/associate/{type}\")\r\n-    Response associate(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceAssociationActionType type,\r\n+    Response bulkAssociation(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceAssociationActionType type,\r\n             List<ResourceName> resourceNames);\r\n }\r"},{"sha":"fa21d7f70a8163c9f7744247d18eb4484b3dd0cd","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":26,"deletions":10,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -34,6 +34,7 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.wrap.ResourceName;\n@@ -42,6 +43,7 @@\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n \n @Path(\"users\")\n @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -287,22 +289,37 @@ Response status(@Description(\"id of user to be subjected to status update\") @Pat\n      * Executes resource-related operations on given user.\n      *\n      * @param userId user id.\n-     * @param type resource association action type\n+     * @param type resource de-association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n-     * as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the bulk action result\n      */\n     @POST\n-    @Path(\"{userId}/associate/{type}\")\n+    @Path(\"{userId}/bulkDeassociation/{type}\")\n     @Descriptions({\n         @Description(target = DocTarget.METHOD, value = \"Executes resource-related operations on given user\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n-                + \"with propagation status information, as <tt>Entity</tt>\")\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the bulk action result\")\n     })\n-    Response associate(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n+    Response bulkDeassociation(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n+            @Description(\"resource de-association action type\") @PathParam(\"type\") ResourceDeAssociationActionType type,\n+            @Description(\"external resources to be used for propagation-related operations\") List<ResourceName> resourceNames);\n+\n+    /**\n+     * Executes resource-related operations on given user.\n+     *\n+     * @param userId user id.\n+     * @param type resource association action type\n+     * @param associationMod external resources to be used for propagation-related operations\n+     * @return <tt>Response</tt> object featuring the bulk action result\n+     */\n+    @POST\n+    @Path(\"{userId}/bulkAssociation/{type}\")\n+    @Descriptions({\n+        @Description(target = DocTarget.METHOD, value = \"Executes resource-related operations on given user\"),\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the bulk action result\")\n+    })\n+    Response bulkAssociation(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n             @Description(\"resource association action type\") @PathParam(\"type\") ResourceAssociationActionType type,\n-            @Description(\"external resources to be used for propagation-related operations\"\n-            ) List<ResourceName> resourceNames);\n+            @Description(\"external resources to be used for propagation-related operations\") ResourceAssociationMod associationMod);\n \n     /**\n      * Executes the provided bulk action.\n@@ -317,5 +334,4 @@ Response associate(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n         @Description(target = DocTarget.RETURN, value = \"Bulk action result\")\n     })\n     BulkActionResult bulk(@Description(\"list of &lt;username, action&gt; pairs\") BulkAction bulkAction);\n-\n }"},{"sha":"ce604c72e4fc3f0a447b3cac4a17f0e508d18c92","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceAssociationActionType.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -24,16 +24,16 @@\n public enum ResourceAssociationActionType {\n \n     /**\n-     * Remove association between user/role on Syncope and external resource(s).\n+     * Add association between user/role on Syncope and external resource(s) without any propagation.\n      */\n-    UNLINK,\n+    LINK,\n     /**\n-     * Remove user/role from external resource(s).\n+     * Add user/role into external resource(s).\n      */\n-    DEPROVISION,\n+    PROVISION,\n     /**\n-     * Unassign (unlink + deprovision) external resource(s) from user/role.\n+     * Assign (link + provision) external resource(s) with user/role.\n      */\n-    UNASSIGN\n+    ASSIGN\n \n }"},{"sha":"6afc82f0bc8eb3a4610141fd59e6615ad9147643","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceDeAssociationActionType.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeAssociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeAssociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeAssociationActionType.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum ResourceDeAssociationActionType {\n+\n+    /**\n+     * Remove association between user/role on Syncope and external resource(s) without any propagation.\n+     */\n+    UNLINK,\n+    /**\n+     * Remove user/role from external resource(s).\n+     */\n+    DEPROVISION,\n+    /**\n+     * Unassign (unlink + de-provision) external resource(s) from user/role.\n+     */\n+    UNASSIGN\n+\n+}"},{"sha":"67dc0f29cf6fd0e01f2c502a433763dd194eff7f","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusBean.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -39,6 +39,8 @@ public class StatusBean implements Serializable {\n \n     private Status status = Status.OBJECT_NOT_FOUND;\n \n+    private boolean linked = true;\n+\n     public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n         this.attributableId = attributable.getId();\n         this.attributableName = attributable instanceof UserTO\n@@ -74,6 +76,14 @@ public String getAttributableName() {\n         return attributableName;\n     }\n \n+    public boolean isLinked() {\n+        return linked;\n+    }\n+\n+    public void setLinked(boolean linked) {\n+        this.linked = linked;\n+    }\n+\n     @Override\n     public String toString() {\n         return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);"},{"sha":"fd7ce190bcdf867b144bcb7a4bcf3a236e029dee","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractStatusModalPage.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -18,8 +18,13 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import org.apache.wicket.markup.html.panel.Fragment;\n+\n public class AbstractStatusModalPage extends BaseModalPage {\n \n-    protected static final long serialVersionUID = 6633408683036028540L;\n+    private static final long serialVersionUID = 6633408683036028540L;\n \n+    public AbstractStatusModalPage() {\n+        add(new Fragment(\"pwdMgtFields\", \"emptyFragment\", this));\n+    }\n }"},{"sha":"2c6e89a43f7bf8045a9f09ee88c68f4855cfa3ef","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n import org.apache.syncope.console.commons.status.StatusBean;\n@@ -97,22 +97,22 @@ public ProvisioningModalPage(\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n-                    private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -3503023501954863131L;\n \n-                    @Override\n-                    public String getCssClass() {\n-                        return \"action\";\n-                    }\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n \n-                    @Override\n-                    public void populateItem(\n-                            final Item<ICellPopulator<StatusBean>> cellItem,\n-                            final String componentId,\n-                            final IModel<StatusBean> model) {\n-                                cellItem.\n-                                add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-                            }\n-                });\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+                cellItem.\n+                        add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+            }\n+        });\n \n         final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n@@ -130,7 +130,7 @@ public void populateItem(\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceAssociationActionType.UNLINK, table, columns);\n+                    bulkAssociationAction(target, ResourceDeAssociationActionType.UNLINK, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unlinkink resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -146,7 +146,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceAssociationActionType.DEPROVISION, table, columns);\n+                    bulkAssociationAction(target, ResourceDeAssociationActionType.DEPROVISION, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error de-provisioning user\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -162,7 +162,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceAssociationActionType.UNASSIGN, table, columns);\n+                    bulkAssociationAction(target, ResourceDeAssociationActionType.UNASSIGN, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unassigning resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -222,7 +222,7 @@ public List<StatusBean> getStatusBeans() {\n \n     private void bulkAssociationAction(\n             final AjaxRequestTarget target,\n-            final ResourceAssociationActionType type,\n+            final ResourceDeAssociationActionType type,\n             final ActionDataTablePanel<StatusBean, String> table,\n             final List<IColumn<StatusBean, String>> columns) {\n "},{"sha":"7ec5103cbec24a0c715b8cd0e217a5abaf7f1581","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":364,"deletions":46,"changes":410,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -18,43 +18,85 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import static org.apache.syncope.console.pages.AbstractBasePage.LOG;\n import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.syncope.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.console.commons.status.Status;\n import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n+import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class StatusModalPage<T extends AbstractAttributableTO> extends AbstractStatusModalPage {\n \n-    private static final long serialVersionUID = 4114026480146090961L;\n+    private static final long serialVersionUID = -9148734710505211261L;\n \n     private final AbstractAttributableTO attributableTO;\n \n-    private int rowsPerPage = 25;\n+    private int rowsPerPage = 10;\n \n     final StatusUtils statusUtils;\n \n     final boolean statusOnly;\n \n+    // --------------------------------\n+    // password management fields ..\n+    // --------------------------------\n+    final ClearIndicatingAjaxButton cancel;\n+\n+    final WebMarkupContainer pwdMgt;\n+\n+    final Form<?> pwdMgtForm;\n+\n+    final AjaxCheckBoxPanel changepwd;\n+\n+    final PasswordTextField password;\n+\n+    final PasswordTextField confirm;\n+    // --------------------------------\n+\n+    final PageReference pageRef;\n+\n+    final ModalWindow window;\n+\n+    final ActionDataTablePanel<StatusBean, String> table;\n+\n+    final List<IColumn<StatusBean, String>> columns;\n+\n     public StatusModalPage(\n             final PageReference pageRef,\n             final ModalWindow window,\n@@ -70,54 +112,144 @@ public StatusModalPage(\n \n         super();\n \n+        this.pageRef = pageRef;\n+        this.window = window;\n         this.statusOnly = statusOnly;\n         this.attributableTO = attributableTO;\n \n         statusUtils = new StatusUtils(attributableTO instanceof UserTO ? userRestClient : roleRestClient);\n \n-        final List<IColumn<StatusBean, String>> columns = new ArrayList<IColumn<StatusBean, String>>();\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\", \"resourceName\"));\n+        columns = new ArrayList<IColumn<StatusBean, String>>();\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\") {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                    private static final long serialVersionUID = 8432079838783825801L;\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        if (model.getObject().isLinked()) {\n+                            super.onComponentTag(tag);\n+                        } else {\n+                            tag.put(\"style\", \"color: #DDDDDD\");\n+                        }\n+                    }\n+                });\n+            }\n+        });\n+\n         columns.add(new PropertyColumn<StatusBean, String>(\n                 new StringResourceModel(\"accountLink\", this, null, \"Account link\"), \"accountLink\", \"accountLink\"));\n+\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n-                    private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -3503023501954863131L;\n \n-                    @Override\n-                    public String getCssClass() {\n-                        return \"action\";\n-                    }\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n \n-                    @Override\n-                    public void populateItem(\n-                            final Item<ICellPopulator<StatusBean>> cellItem,\n-                            final String componentId,\n-                            final IModel<StatusBean> model) {\n-\n-                                cellItem.\n-                                add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-                            }\n-                });\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n \n-        final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n+                if (model.getObject().isLinked()) {\n+                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+                } else {\n+                    cellItem.add(new Label(componentId, \"\"));\n+                }\n+            }\n+        });\n+\n+        table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n                 columns,\n                 (ISortableDataProvider<StatusBean, String>) new AttributableStatusProvider(),\n                 rowsPerPage,\n                 pageRef) {\n \n-                    private static final long serialVersionUID = 6510391461033818316L;\n+            private static final long serialVersionUID = 6510391461033818316L;\n \n-                    @Override\n-                    public boolean isElementEnabled(final StatusBean element) {\n-                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n-                    }\n-                };\n+            @Override\n+            public boolean isElementEnabled(final StatusBean element) {\n+                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+            }\n+        };\n+        table.setOutputMarkupId(true);\n \n         final String pageId = attributableTO instanceof RoleTO ? \"Roles\" : \"Users\";\n \n+        final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n+        addOrReplace(pwdMgtFragment);\n+\n+        pwdMgt = new WebMarkupContainer(\"pwdMgt\");\n+        pwdMgtFragment.add(pwdMgt.setOutputMarkupId(true));\n+\n+        pwdMgtForm = new Form(\"pwdMgtForm\");\n+        pwdMgtForm.setVisible(false).setEnabled(false);\n+        pwdMgt.add(pwdMgtForm);\n+\n+        password = new PasswordTextField(\"password\", new Model<String>());\n+        pwdMgtForm.add(password.setRequired(false).setEnabled(false));\n+\n+        confirm = new PasswordTextField(\"confirm\", new Model<String>());\n+        pwdMgtForm.add(confirm.setRequired(false).setEnabled(false));\n+\n+        changepwd = new AjaxCheckBoxPanel(\"changepwd\", \"changepwd\", new Model<Boolean>(false));\n+        pwdMgtForm.add(changepwd.setModelObject(false));\n+        pwdMgtForm.add(new Label(\"changePwdLabel\", new ResourceModel(\"changePwdLabel\", \"Password propagation\")));\n+\n+        changepwd.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                password.setEnabled(changepwd.getModelObject());\n+                confirm.setEnabled(changepwd.getModelObject());\n+                target.add(pwdMgt);\n+            }\n+        });\n+\n+        cancel = new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818026L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // ignore\n+                window.close(target);\n+            }\n+        }.feedbackPanelAutomaticReload(false);\n+\n+        pwdMgtForm.add(cancel);\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818027L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // none\n+            }\n+        };\n+\n+        pwdMgtForm.add(goon);\n+\n         if (statusOnly) {\n             table.addAction(new ActionLink() {\n \n@@ -179,10 +311,9 @@ public void onClick(final AjaxRequestTarget target) {\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n                         window.close(target);\n                     } catch (Exception e) {\n-                        LOG.error(\"Error unlinkink resources\", e);\n+                        LOG.error(\"Error unlinking resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n@@ -197,16 +328,41 @@ public void onClick(final AjaxRequestTarget target) {\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         if (attributableTO instanceof UserTO) {\n-                            userRestClient.deprovision(\n+                            userRestClient.link(\n                                     attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n-                            roleRestClient.deprovision(\n+                            roleRestClient.link(\n                                     attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n                         window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error linking resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        target.add(feedbackPanel);\n+                    }\n+                }\n+            }, ActionLink.ActionType.LINK, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        final BulkActionResult bulkActionResult;\n+                        if (attributableTO instanceof UserTO) {\n+                            bulkActionResult = userRestClient.deprovision(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        } else {\n+                            bulkActionResult = roleRestClient.deprovision(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n                     } catch (Exception e) {\n                         LOG.error(\"Error de-provisioning user\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -215,35 +371,85 @@ public void onClick(final AjaxRequestTarget target) {\n                 }\n             }, ActionLink.ActionType.DEPROVISION, pageId);\n \n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+\n+                    if (attributableTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationActionType.PROVISION, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = roleRestClient.provision(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning user\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            target.add(feedbackPanel);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(attributableTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n+\n             table.addAction(new ActionLink() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n+                        final BulkActionResult bulkActionResult;\n                         if (attributableTO instanceof UserTO) {\n-                            userRestClient.unassign(\n+                            bulkActionResult = userRestClient.unassign(\n                                     attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n-                            roleRestClient.unassign(\n+                            bulkActionResult = roleRestClient.unassign(\n                                     attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n-                        window.close(target);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n                     } catch (Exception e) {\n                         LOG.error(\"Error unassigning resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n             }, ActionLink.ActionType.UNASSIGN, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    if (attributableTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationActionType.ASSIGN, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = roleRestClient.assign(\n+                                    attributableTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error assigning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            target.add(feedbackPanel);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(attributableTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n         }\n \n         table.addCancelButton(window);\n-\n         add(table);\n     }\n \n@@ -252,16 +458,32 @@ private class AttributableStatusProvider extends AbstractStatusBeanProvider {\n         private static final long serialVersionUID = 4586969457669796621L;\n \n         public AttributableStatusProvider() {\n-            super(\"resourceName\");\n+            super(statusOnly ? \"resourceName\" : \"accountLink\");\n         }\n \n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public List<StatusBean> getStatusBeans() {\n+            final List<String> resources = new ArrayList<String>();\n+            for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+                resources.add(resourceTO.getName());\n+            }\n+\n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(attributableTO);\n \n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n \n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(\n+                        attributableTO,\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        attributableTO instanceof RoleTO);\n+\n+                statusBeans.add(statusBean);\n+                resources.remove(entry.getResourceName());\n+            }\n+\n             if (statusOnly) {\n                 final StatusBean syncope = new StatusBean(attributableTO, \"Syncope\");\n \n@@ -278,19 +500,115 @@ public List<StatusBean> getStatusBeans() {\n                 syncope.setStatus(syncopeStatus);\n \n                 statusBeans.add(syncope);\n+            } else {\n+                for (String resource : resources) {\n+                    final StatusBean statusBean = statusUtils.getStatusBean(\n+                            attributableTO,\n+                            resource,\n+                            null,\n+                            attributableTO instanceof RoleTO);\n+\n+                    statusBean.setLinked(false);\n+                    statusBeans.add(statusBean);\n+                }\n             }\n \n-            for (ConnObjectWrapper entry : connObjects) {\n-                final StatusBean statusBean = statusUtils.getStatusBean(\n-                        entry.getAttributable(),\n-                        entry.getResourceName(),\n-                        entry.getConnObjectTO(),\n-                        attributableTO instanceof RoleTO);\n+            return statusBeans;\n+        }\n+    }\n \n-                statusBeans.add(statusBean);\n+    private void passwordManagement(\n+            final AjaxRequestTarget target,\n+            final ResourceAssociationActionType type,\n+            final Collection<StatusBean> selection) {\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\"), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818027L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    if (StringUtils.isNotBlank(password.getModelObject())\n+                            && !password.getModelObject().equals(confirm.getModelObject())) {\n+                        throw new Exception(getString(\"passwordMismatch\"));\n+                    }\n+\n+                    final BulkActionResult bulkActionResult;\n+                    switch (type) {\n+                        case ASSIGN:\n+                            bulkActionResult = userRestClient.assign(\n+                                    attributableTO.getId(),\n+                                    new ArrayList<StatusBean>(selection),\n+                                    changepwd.getModelObject(),\n+                                    password.getModelObject());\n+                            break;\n+                        case PROVISION:\n+                            bulkActionResult = userRestClient.provision(\n+                                    attributableTO.getId(),\n+                                    new ArrayList<StatusBean>(selection),\n+                                    changepwd.getModelObject(),\n+                                    password.getModelObject());\n+                            break;\n+                        default:\n+                            bulkActionResult = null;\n+                        // ignore\n+                        }\n+\n+                    ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                    if (bulkActionResult != null) {\n+                        loadBulkActionResultPage(selection, bulkActionResult);\n+                    } else {\n+\n+                        target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                        window.close(target);\n+                    }\n+                } catch (Exception e) {\n+                    LOG.error(\"Error provisioning resources\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n+        }.feedbackPanelAutomaticReload(false);\n \n-            return statusBeans;\n+        pwdMgtForm.addOrReplace(goon);\n+\n+        table.setVisible(false);\n+        pwdMgtForm.setVisible(true).setEnabled(true);\n+\n+        target.add(table);\n+        target.add(pwdMgt);\n+    }\n+\n+    private void loadBulkActionResultPage(\n+            final Collection<StatusBean> selection, final BulkActionResult bulkActionResult) {\n+        final List<String> resources = new ArrayList<String>(selection.size());\n+        for (StatusBean statusBean : selection) {\n+            resources.add(statusBean.getResourceName());\n         }\n+\n+        final List<ConnObjectWrapper> connObjects =\n+                statusUtils.getConnectorObjects(Collections.singletonList(attributableTO), resources);\n+\n+        final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size());\n+\n+        for (ConnObjectWrapper entry : connObjects) {\n+            final StatusBean statusBean = statusUtils.getStatusBean(\n+                    attributableTO,\n+                    entry.getResourceName(),\n+                    entry.getConnObjectTO(),\n+                    attributableTO instanceof RoleTO);\n+\n+            statusBeans.add(statusBean);\n+        }\n+\n+        setResponsePage(new BulkActionResultModalPage<StatusBean, String>(\n+                window,\n+                statusBeans,\n+                columns,\n+                bulkActionResult,\n+                \"resourceName\"));\n     }\n }"},{"sha":"ab82b8a33dd7a61186ca9df97a124c952001bd71","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ActionDataTablePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FActionDataTablePanel.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -56,7 +56,7 @@\n \n     private final CheckGroup<T> group;\n \n-    private final Form bulkActionForm;\n+    private final Form<?> bulkActionForm;\n \n     private final ActionLinksPanel actionPanel;\n \n@@ -96,7 +96,7 @@ public boolean isCheckable(T element) {\n             private static final long serialVersionUID = -151291731388673682L;\n \n             @Override\n-            protected void onUpdate(AjaxRequestTarget target) {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 // ignore\n             }\n         });\n@@ -168,7 +168,7 @@ public void addCancelButton(final ModalWindow window) {\n             protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n                 window.close(target);\n             }\n-        };\n+        }.feedbackPanelAutomaticReload(false);\n \n         cancel.setDefaultFormProcessing(false);\n         bulkActionForm.addOrReplace(cancel);"},{"sha":"df470087e8dadbc967460a80169298cae4df941c","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":27,"deletions":9,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n@@ -98,22 +99,39 @@ public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(RoleRestClient.class).bulkAction(action);\n     }\n \n-    public RoleTO unlink(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.UNLINK,\n+    public BulkActionResult unlink(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.UNLINK,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(RoleTO.class);\n+                readEntity(BulkActionResult.class);\n     }\n \n-    public RoleTO deprovision(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.DEPROVISION,\n+    public BulkActionResult link(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.LINK,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(RoleTO.class);\n+                readEntity(BulkActionResult.class);\n     }\n \n-    public RoleTO unassign(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.UNASSIGN,\n+    public BulkActionResult deprovision(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(RoleTO.class);\n+                readEntity(BulkActionResult.class);\n     }\n \n+    public BulkActionResult provision(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.PROVISION,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n+                readEntity(BulkActionResult.class);\n+    }\n+\n+    public BulkActionResult unassign(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n+                readEntity(BulkActionResult.class);\n+    }\n+\n+    public BulkActionResult assign(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.ASSIGN,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n+                readEntity(BulkActionResult.class);\n+    }\n }"},{"sha":"d08346b7a4786f92b7f9b24e7b55dfe1ed14f177","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":47,"deletions":8,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -30,9 +30,11 @@\n import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.mod.ResourceAssociationMod;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -112,19 +114,56 @@ public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(UserService.class).bulk(action);\n     }\n \n-    public void unlink(final long userId, final List<StatusBean> statuses) {\n-        getService(UserService.class).associate(userId, ResourceAssociationActionType.UNLINK,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n+    public BulkActionResult unlink(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n+                .readEntity(BulkActionResult.class);\n     }\n \n-    public void deprovision(final long userId, final List<StatusBean> statuses) {\n-        getService(UserService.class).associate(userId, ResourceAssociationActionType.DEPROVISION,\n+    public BulkActionResult link(final long userId, final List<StatusBean> statuses) {\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n+\n+        return getService(UserService.class).bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod)\n+                .readEntity(BulkActionResult.class);\n+    }\n+\n+    public BulkActionResult deprovision(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n+                .readEntity(BulkActionResult.class);\n     }\n \n-    public void unassign(final long userId, final List<StatusBean> statuses) {\n-        getService(UserService.class).associate(userId, ResourceAssociationActionType.UNASSIGN,\n+    public BulkActionResult provision(\n+            final long userId, final List<StatusBean> statuses, final boolean changepwd, final String password) {\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n+        associationMod.setChangePwd(changepwd);\n+        associationMod.setPassword(password);\n+\n+        return getService(UserService.class)\n+                .bulkAssociation(userId, ResourceAssociationActionType.PROVISION, associationMod)\n+                .readEntity(BulkActionResult.class);\n+    }\n+\n+    public BulkActionResult unassign(final long userId, final List<StatusBean> statuses) {\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n+                .readEntity(BulkActionResult.class);\n     }\n \n+    public BulkActionResult assign(\n+            final long userId, final List<StatusBean> statuses, final boolean changepwd, final String password) {\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n+        associationMod.setChangePwd(changepwd);\n+        associationMod.setPassword(password);\n+\n+        return getService(UserService.class).bulkAssociation(userId, ResourceAssociationActionType.ASSIGN,\n+                associationMod)\n+                .readEntity(BulkActionResult.class);\n+    }\n }"},{"sha":"0533f74112b9480505a2cbd81029f07033da13fd","filename":"console/src/main/java/org/apache/syncope/console/wicket/ajax/markup/html/ClearIndicatingAjaxButton.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -32,6 +32,8 @@ public abstract class ClearIndicatingAjaxButton extends IndicatingAjaxButton {\n \n     private final PageReference pageRef;\n \n+    private boolean reloadFeebackPanel = true;\n+\n     public ClearIndicatingAjaxButton(final String id, final PageReference pageRef) {\n         super(id);\n         this.pageRef = pageRef;\n@@ -56,12 +58,17 @@ public ClearIndicatingAjaxButton(final String id, final IModel<String> model, fi\n \n     protected abstract void onSubmitInternal(AjaxRequestTarget target, Form<?> form);\n \n+    public ClearIndicatingAjaxButton feedbackPanelAutomaticReload(boolean reloadFeedbackPanel) {\n+        this.reloadFeebackPanel = reloadFeedbackPanel;\n+        return this;\n+    }\n+\n     @Override\n     protected final void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         super.onSubmit(target, form);\n \n         Page page = pageRef.getPage();\n-        if (page instanceof BasePage) {\n+        if (reloadFeebackPanel && page instanceof BasePage) {\n             target.add(((BasePage) page).getFeedbackPanel());\n         }\n         onSubmitInternal(target, form);"},{"sha":"5494ae583e7fd65774b93d10984c74aad07bb7eb","filename":"console/src/main/java/org/apache/syncope/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -31,6 +31,8 @@\n \n     private final PageReference pageRef;\n \n+    private boolean reloadFeedbackPanel = true;\n+\n     public ClearIndicatingAjaxLink(final String id, final PageReference pageRef) {\n         super(id);\n         this.pageRef = pageRef;\n@@ -41,12 +43,17 @@ public ClearIndicatingAjaxLink(final String id, final IModel<T> model, final Pag\n         this.pageRef = pageRef;\n     }\n \n+    public ClearIndicatingAjaxLink<T> feedbackPanelAutomaticReload(boolean reloadFeedbackPanel) {\n+        this.reloadFeedbackPanel = reloadFeedbackPanel;\n+        return this;\n+    }\n+\n     protected abstract void onClickInternal(AjaxRequestTarget target);\n \n     @Override\n     public final void onClick(final AjaxRequestTarget target) {\n         Page page = pageRef.getPage();\n-        if (page instanceof BasePage) {\n+        if (reloadFeedbackPanel && page instanceof BasePage) {\n             target.add(((BasePage) page).getFeedbackPanel());\n         }\n         onClickInternal(target);"},{"sha":"2ef064418edf0ea7a77c7b7364870212b10877d8","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -20,6 +20,7 @@\n \n import java.beans.PropertyDescriptor;\n import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.reqres.BulkActionResult.Status;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n@@ -67,7 +68,8 @@ public void populateItem(Item<ICellPopulator<T>> item, String componentId, IMode\n             final PropertyDescriptor propDesc =\n                     BeanUtils.getPropertyDescriptor(rowModel.getObject().getClass(), idFieldName);\n             final Object id = propDesc.getReadMethod().invoke(rowModel.getObject(), new Object[0]);\n-            item.add(new Label(componentId, results.getResultMap().get(id.toString()).toString()));\n+            final Status status = id == null ? null : results.getResultMap().get(id.toString());\n+            item.add(new Label(componentId, status == null ? Status.SUCCESS : status.toString()));\n         } catch (Exception e) {\n             LOG.error(\"Errore retrieving target id value\", e);\n         }"},{"sha":"8e9002a1960cb9506499c9ca5f5003a4c12fe985","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -25,6 +25,8 @@ public abstract class ActionLink implements Serializable {\n \n     private static final long serialVersionUID = 7031329706998320639L;\n \n+    private boolean reloadFeedbackPanel = true;\n+\n     public enum ActionType {\n \n         CREATE(\"create\"),\n@@ -44,8 +46,11 @@ public enum ActionType {\n         RELOAD(\"reload\"),\n         CHANGE_VIEW(\"changeView\"),\n         UNLINK(\"update\"),\n+        LINK(\"update\"),\n         UNASSIGN(\"update\"),\n+        ASSIGN(\"update\"),\n         DEPROVISION(\"update\"),\n+        PROVISION(\"update\"),\n         MANAGE_RESOURCES(\"update\"),\n         MANAGE_USERS(\"update\"),\n         MANAGE_ROLES(\"update\");\n@@ -65,4 +70,13 @@ public String getActionId() {\n \n     public void postClick() {\n     }\n+\n+    public boolean feedbackPanelAutomaticReload() {\n+        return reloadFeedbackPanel;\n+    }\n+\n+    public ActionLink feedbackPanelAutomaticReload(boolean reloadFeedbackPanel) {\n+        this.reloadFeedbackPanel = reloadFeedbackPanel;\n+        return this;\n+    }\n }"},{"sha":"7b11828960f6066157082ff4ed9c7d0713689e2e","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":94,"deletions":37,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -68,8 +68,11 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         super.add(new Fragment(\"panelReload\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelChangeView\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelLink\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelAssign\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n     }\n \n     public void add(\n@@ -114,7 +117,7 @@ public void addWithRoles(\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case MANAGE_RESOURCES:\n@@ -128,7 +131,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case MANAGE_USERS:\n@@ -142,7 +145,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case MANAGE_ROLES:\n@@ -156,7 +159,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case CREATE:\n@@ -170,7 +173,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case EDIT:\n@@ -184,7 +187,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case USER_TEMPLATE:\n@@ -198,7 +201,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case ROLE_TEMPLATE:\n@@ -212,7 +215,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case ENABLE:\n@@ -226,7 +229,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case SEARCH:\n@@ -240,7 +243,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case EXECUTE:\n@@ -254,7 +257,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case DRYRUN:\n@@ -268,7 +271,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case DELETE:\n@@ -282,7 +285,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n \n                 break;\n \n@@ -297,7 +300,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n \n                 break;\n \n@@ -312,7 +315,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case SUSPEND:\n@@ -326,7 +329,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case REACTIVATE:\n@@ -340,7 +343,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case RELOAD:\n@@ -354,7 +357,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case CHANGE_VIEW:\n@@ -368,7 +371,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n                         link.onClick(target);\n                     }\n-                });\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case UNLINK:\n@@ -377,13 +380,27 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", pageRef, \"confirmUnlink\") {\n \n-                            private static final long serialVersionUID = -6957616042924610293L;\n+                    private static final long serialVersionUID = -6957616042924610293L;\n \n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n-                            }\n-                        });\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case LINK:\n+                fragment = new Fragment(\"panelLink\", \"fragmentLink\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"linkLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610303L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case UNASSIGN:\n@@ -392,13 +409,27 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", pageRef, \"confirmUnassign\") {\n \n-                            private static final long serialVersionUID = -6957616042924610294L;\n+                    private static final long serialVersionUID = -6957616042924610294L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case ASSIGN:\n+                fragment = new Fragment(\"panelAssign\", \"fragmentAssign\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"assignLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610304L;\n \n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n-                            }\n-                        });\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n             case DEPROVISION:\n@@ -407,13 +438,27 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", pageRef, \"confirmDeprovision\") {\n \n-                            private static final long serialVersionUID = -6957616042924610295L;\n+                    private static final long serialVersionUID = -6957616042924610295L;\n \n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n-                            }\n-                        });\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case PROVISION:\n+                fragment = new Fragment(\"panelProvision\", \"fragmentProvision\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"provisionLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610305L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n             default:\n             // do nothink\n@@ -500,13 +545,25 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n                 break;\n \n+            case LINK:\n+                super.addOrReplace(new Fragment(\"panelLink\", \"emptyFragment\", this));\n+                break;\n+\n             case UNASSIGN:\n                 super.addOrReplace(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n                 break;\n \n+            case ASSIGN:\n+                super.addOrReplace(new Fragment(\"panelAssign\", \"emptyFragment\", this));\n+                break;\n+\n             case DEPROVISION:\n                 super.addOrReplace(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n                 break;\n+\n+            case PROVISION:\n+                super.addOrReplace(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n+                break;\n             default:\n             // do nothing\n         }"},{"sha":"76c0a14a48295fa9264729dc18d6e02276197b13","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -30,6 +30,7 @@ confirmDelete=Do you really want to delete the selected item(s)?\n confirmUnlink=Do you really want to remove the link between the selected item(s) and the resource?\n confirmUnassign=Do you really want to remove the assignment between the selected item(s) and the resource?\n confirmDeprovision=Do you really want to de-provision the selected item(s)?\n+confirmProvision=Do you really want to provision the selected item(s)?\n \n \n unauthorizedInstantiationException=Missing authorization."},{"sha":"396b765bd35eabda9816eb051013ddd5004c9ba7","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -30,6 +30,7 @@ confirmDelete=Vuoi davvero procedere con la cancellazione?\n confirmUnlink=Vuoi davvero procedere rimuovendo il link con la risorsa?\n confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento sulla risorsa?\n confirmDeprovision=Vuoi davvero procedere con il de-provisioning?\n+confirmProvision=Vuoi davvero procedere con il provisioning?\n \n unauthorizedInstantiationException=Autorizzazione mancante.\n accessControlException=Autorizzazione mancante durante la comunicazione con Syncope core."},{"sha":"2010277950c2668a3c271f619b0c939166d71eb6","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -30,6 +30,7 @@ confirmDelete=Voc\\u00ea realmente deseja apagar este item(s) selecionado?\n confirmUnlink=Voc\\u00ea realmente deseja apagar o v\\u00ednculo entre o item e de recursos?\n confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o item e de recursos?\n confirmDeprovision=Voc\\u00ea realmente de-provision item?\n+confirmProvision=Voc\\u00ea realmente provision item?\n \n unauthorizedInstantiationException=Falta de autoriza\\u00e7\\u00e3o para concluir.\n accessControlException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core."},{"sha":"ef013ce3045aa55ddc1891ca5193d75ea2891353","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage.html","status":"modified","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -31,11 +31,90 @@\n       #dataTableSpan table{\n         width: 100%;\n       }\n+\n+      form#pwdMgtForm {\n+        border: 1px solid #AAAAAA;\n+        margin:10px;\n+      }\n+\n+      div#changepwd {\n+        display: inline-row;\n+        margin-top: 5px;\n+      }\n+\n+      div#changepwd div{\n+        display: table-cell;\n+      }\n+\n+      div#changepwd div#label{\n+        padding-left: 5px;\n+        vertical-align: middle;\n+        font-family: Verdana,Arial,sans-serif;\n+      }\n+\n+      div#password {\n+        display: inline-row;\n+        margin: 5px;\n+      }\n+\n+      div#continue {\n+        display: inline-row;\n+        margin: 5px;\n+      }\n+\n+      div#continue div{\n+        display: table-cell;\n+      }\n+\n+      div#cancelBtmForm {\n+        padding-left: 5px;\n+      }\n     </style>\n   </wicket:head>\n   <wicket:extend>\n     <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n     <span wicket:id=\"resourceDatatable\" id=\"dataTableSpan\">[resources]</span>\n+\n+    <span wicket:id=\"pwdMgtFields\">[password management]</span>\n+\n+    <wicket:fragment wicket:id=\"pwdMgtFragment\">\n+      <div wicket:id=\"pwdMgt\">\n+        <form wicket:id=\"pwdMgtForm\" id=\"pwdMgtForm\">\n+          <div id=\"changepwd\">\n+            <div id=\"value\">\n+              <span wicket:id=\"changepwd\">[changepwd]</span>\n+            </div>\n+            <div id=\"label\">\n+              <label wicket:id=\"changePwdLabel\">[Change password]</label>\n+            </div>\n+          </div>\n+\n+          <div id=\"password\">\n+            <input type=\"password\" wicket:id=\"password\" id=\"password\" size=\"25\"  style=\"width: 180px\" title=\"password\"/>\n+          </div>\n+\n+          <div id=\"password\">\n+            <input type=\"password\" wicket:id=\"confirm\" id=\"confirm\" size=\"25\"  style=\"width: 180px\" title=\"confirm\"/>\n+          </div>\n+\n+          <div id=\"continue\">\n+            <div id=\"continueBtmForm\">\n+              <input type=\"button\" wicket:id=\"continue\" id=\"continue\"\n+                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n+            </div>\n+\n+            <div id=\"cancelBtmForm\">\n+              <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n+                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n+            </div>\n+          </div>\n+        </form>\n+      </div>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"emptyFragment\">\n+    </wicket:fragment>\n+\n     <wicket:child />\n   </wicket:extend>\n </html>"},{"sha":"0f1fcdcf7377c5bfbaff0aac5284c52a6e14aa1c","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -15,3 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Global Status\n+changePwdLabel=Password propagation\n+passwordMismatch=Password mismatch"},{"sha":"e5619e2e9cb70f6974f2aead258096f99a6e2dee","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -15,3 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Stato Globale\n+changePwdLabel=Propagazione password\n+passwordMismatch=Password non corrispondenti\n\\ No newline at end of file"},{"sha":"36d86e88500442c7caf6a86dc296a365b172b1f9","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -15,3 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Estatus Global\n+changePwdLabel=Password propagation\n+passwordMismatch=Password mismatch"},{"sha":"d8a1abd0a8d041f64bce99ad94a882e46653ccf5","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -46,8 +46,11 @@\n     <span wicket:id=\"panelReload\">[plus]</span>\n     <span wicket:id=\"panelChangeView\">[plus]</span>\n     <span wicket:id=\"panelUnlink\">[plus]</span>\n+    <span wicket:id=\"panelLink\">[plus]</span>\n     <span wicket:id=\"panelUnassign\">[plus]</span>\n+    <span wicket:id=\"panelAssign\">[plus]</span>\n     <span wicket:id=\"panelDeprovision\">[plus]</span>\n+    <span wicket:id=\"panelProvision\">[plus]</span>\n \n     <wicket:fragment wicket:id=\"fragmentClaim\">\n       <a href=\"#\" wicket:id=\"claimLink\"><img id=\"action\" src=\"img/actions/claim.png\" alt=\"claim icon\" title=\"Claim\"/></a>\n@@ -129,14 +132,26 @@\n       <a href=\"#\" wicket:id=\"unlinkLink\"><img id=\"action\" src=\"img/actions/unlink-icon.png\" alt=\"Unlink icon\"  title=\"Unlink\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentLink\">\n+      <a href=\"#\" wicket:id=\"linkLink\"><img id=\"action\" src=\"img/actions/link-icon.png\" alt=\"Link icon\"  title=\"Link\"/></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentUnassign\">\n       <a href=\"#\" wicket:id=\"unassignLink\"><img id=\"action\" src=\"img/actions/unassign-icon.png\" alt=\"Unassign icon\"  title=\"Unassign\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentAssign\">\n+      <a href=\"#\" wicket:id=\"assignLink\"><img id=\"action\" src=\"img/actions/assign-icon.png\" alt=\"Assign icon\"  title=\"Assign\"/></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentDeprovision\">\n       <a href=\"#\" wicket:id=\"deprovisionLink\"><img id=\"action\" src=\"img/actions/deprovision-icon.png\" alt=\"De-provision icon\"  title=\"De-provision\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentProvision\">\n+      <a href=\"#\" wicket:id=\"provisionLink\"><img id=\"action\" src=\"img/actions/provision-icon.png\" alt=\"Provision icon\"  title=\"Provision\"/></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"emptyFragment\">\n     </wicket:fragment>\n   </wicket:panel>"},{"sha":"97c36ecdc27d6adb598562d477705b8a3fc97071","filename":"console/src/main/webapp/img/actions/assign-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fassign-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fassign-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fassign-icon.png?ref=bba0a441745766d8790aa6948a61eea792a6934d"},{"sha":"8c166afc03ca8d351ef483622633c24aa0ebade8","filename":"console/src/main/webapp/img/actions/link-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Flink-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Flink-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Flink-icon.png?ref=bba0a441745766d8790aa6948a61eea792a6934d"},{"sha":"0ea124a744763ffe056b84a56b6100c45303068a","filename":"console/src/main/webapp/img/actions/provision-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fprovision-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fprovision-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fprovision-icon.png?ref=bba0a441745766d8790aa6948a61eea792a6934d"},{"sha":"24c0d740f3e07ac1f2b89e65206b51f08d59f5f4","filename":"console/src/main/webapp/img/actions/unassign-icon.png","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Funassign-icon.png?ref=bba0a441745766d8790aa6948a61eea792a6934d"},{"sha":"199f998f9cff0be3145f425fb0a84bac9f1d2181","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -97,4 +97,18 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n+\n+    @Test\n+    public void browsProvisioningFeatures() {\n+        selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+\n+        //Edit vivaldi\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[5]/div/span[2]/a\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='ws-target-resource-1']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='resource-testdb']\\\");\", \"30000\");\n+\n+        selenium.click(\"css=a.w_close\");\n+    }\n }"},{"sha":"6c51f73d5d92ced28b46396a63d57d63615cf693","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":44,"deletions":6,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -393,9 +393,25 @@ public List<PropagationTask> getUserDeleteTaskIds(final Long userId)\n      */\n     public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final String noPropResourceName)\n             throws NotFoundException, UnauthorizedRoleException {\n+        return getUserDeleteTaskIds(userId, Collections.<String>singleton(noPropResourceName));\n+    }\n+\n+    /**\n+     * Perform delete on each resource associated to the user. It is possible to ask for a mandatory provisioning for\n+     * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if\n+     * the creation fails onto a mandatory resource.\n+     *\n+     * @param userId to be deleted\n+     * @param noPropResourceNames name of external resources not to be considered for propagation\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if user is not found\n+     * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given user\n+     */\n+    public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Collection<String> noPropResourceNames)\n+            throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(userId);\n-        return getDeleteTaskIds(user, Collections.<String>singleton(noPropResourceName));\n+        return getDeleteTaskIds(user, user.getResourceNames(), noPropResourceNames);\n     }\n \n     /**\n@@ -409,11 +425,12 @@ public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Strin\n      * @throws NotFoundException if user is not found\n      * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given user\n      */\n-    public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Collection<String> noPropResourceNames)\n+    public List<PropagationTask> getUserDeleteTaskIds(\n+            final Long userId, final Set<String> resourceNames, final Collection<String> noPropResourceNames)\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(userId);\n-        return getDeleteTaskIds(user, noPropResourceNames);\n+        return getDeleteTaskIds(user, resourceNames, noPropResourceNames);\n     }\n \n     /**\n@@ -477,14 +494,35 @@ public List<PropagationTask> getRoleDeleteTaskIds(final Long roleId, final Colle\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeRole role = roleDataBinder.getRoleFromId(roleId);\n-        return getDeleteTaskIds(role, noPropResourceNames);\n+        return getDeleteTaskIds(role, role.getResourceNames(), noPropResourceNames);\n+    }\n+    \n+    /**\n+     * Perform delete on each resource associated to the user. It is possible to ask for a mandatory provisioning for\n+     * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if\n+     * the creation fails onto a mandatory resource.\n+     *\n+     * @param roleId to be deleted\n+     * @param noPropResourceNames name of external resources not to be considered for propagation\n+     * @return list of propagation tasks\n+     * @throws NotFoundException if role is not found\n+     * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given role\n+     */\n+    public List<PropagationTask> getRoleDeleteTaskIds(\n+            final Long roleId, final Set<String> resourceNames, final Collection<String> noPropResourceNames)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        SyncopeRole role = roleDataBinder.getRoleFromId(roleId);\n+        return getDeleteTaskIds(role, resourceNames, noPropResourceNames);\n     }\n \n-    protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attributable,\n+    protected List<PropagationTask> getDeleteTaskIds(\n+            final AbstractAttributable attributable,\n+            final Set<String> resourceNames,\n             final Collection<String> noPropResourceNames) {\n \n         final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.DELETE, attributable.getResourceNames());\n+        propByRes.set(ResourceOperation.DELETE, resourceNames);\n         if (noPropResourceNames != null && !noPropResourceNames.isEmpty()) {\n             propByRes.get(ResourceOperation.DELETE).removeAll(noPropResourceNames);\n         }"},{"sha":"69b941577aa6edd9e6b43f8f910ed2bd27b9d288","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/AbstractResourceAssociator.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -25,7 +25,13 @@\n \n     public abstract T unlink(Long id, Collection<String> resources);\n \n+    public abstract T link(Long id, Collection<String> resources);\n+\n     public abstract T unassign(Long id, Collection<String> resources);\n \n+    public abstract T assign(Long id, Collection<String> resources, boolean changepwd, String password);\n+\n     public abstract T deprovision(Long userId, Collection<String> resources);\n+\n+    public abstract T provision(Long userId, Collection<String> resources, boolean changepwd, String password);\n }"},{"sha":"1c3ad8c9f113f784f2ca61e0f936a4f955617e5d","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":41,"deletions":6,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -22,6 +22,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import javax.annotation.Resource;\n@@ -56,6 +57,7 @@\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.transaction.interceptor.TransactionInterceptor;\n \n /**\n  * Note that this controller does not extend AbstractTransactionalController, hence does not provide any\n@@ -343,12 +345,18 @@ public RoleTO delete(final Long roleId) {\n     public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n-\n         roleMod.getResourcesToRemove().addAll(resources);\n+        return binder.getRoleTO(rwfAdapter.update(roleMod).getResult());\n+    }\n \n-        final WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n-\n-        return binder.getRoleTO(updated.getResult());\n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public RoleTO link(final Long roleId, final Collection<String> resources) {\n+        final RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleId);\n+        roleMod.getResourcesToAdd().addAll(resources);\n+        return binder.getRoleTO(rwfAdapter.update(roleMod).getResult());\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n@@ -358,10 +366,20 @@ public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n         roleMod.getResourcesToRemove().addAll(resources);\n-\n         return update(roleMod);\n     }\n \n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public RoleTO assign(\n+            final Long roleId, final Collection<String> resources, final boolean changePwd, final String password) {\n+        final RoleMod userMod = new RoleMod();\n+        userMod.setId(roleId);\n+        userMod.getResourcesToAdd().addAll(resources);\n+        return update(userMod);\n+    }\n+\n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n@@ -371,7 +389,8 @@ public RoleTO deprovision(final Long roleId, final Collection<String> resources)\n         final Set<String> noPropResourceName = role.getResourceNames();\n         noPropResourceName.removeAll(resources);\n \n-        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, noPropResourceName);\n+        final List<PropagationTask> tasks =\n+                propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(resources), noPropResourceName);\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n                 PropagationReporter.class);\n         try {\n@@ -386,6 +405,22 @@ public RoleTO deprovision(final Long roleId, final Collection<String> resources)\n         return updatedTO;\n     }\n \n+    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public RoleTO provision(\n+            final Long roleId, final Collection<String> resources, final boolean changePwd, final String password) {\n+        final RoleTO original = binder.getRoleTO(roleId);\n+\n+        //trick: assign and retrieve propagation statuses ...\n+        original.getPropagationStatusTOs().addAll(\n+                assign(roleId, resources, changePwd, password).getPropagationStatusTOs());\n+\n+        // .... rollback.\n+        TransactionInterceptor.currentTransactionStatus().setRollbackOnly();\n+        return original;\n+    }\n+\n     /**\n      * {@inheritDoc}\n      */"},{"sha":"2d1475bb018130384d6e47bd9248ed87901ec554","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":57,"deletions":7,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -61,6 +61,7 @@\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.transaction.interceptor.TransactionInterceptor;\n \n /**\n  * Note that this controller does not extend AbstractTransactionalController, hence does not provide any\n@@ -433,12 +434,18 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n     public UserTO unlink(final Long userId, final Collection<String> resources) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n-\n         userMod.getResourcesToRemove().addAll(resources);\n+        return binder.getUserTO(uwfAdapter.update(userMod).getResult().getKey().getId());\n+    }\n \n-        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = uwfAdapter.update(userMod);\n-\n-        return binder.getUserTO(updated.getResult().getKey().getId());\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public UserTO link(final Long userId, final Collection<String> resources) {\n+        final UserMod userMod = new UserMod();\n+        userMod.setId(userId);\n+        userMod.getResourcesToAdd().addAll(resources);\n+        return binder.getUserTO(uwfAdapter.update(userMod).getResult().getKey().getId());\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -448,6 +455,28 @@ public UserTO unassign(final Long userId, final Collection<String> resources) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n         userMod.getResourcesToRemove().addAll(resources);\n+        return update(userMod);\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public UserTO assign(\n+            final Long userId,\n+            final Collection<String> resources,\n+            final boolean changepwd,\n+            final String password) {\n+        final UserMod userMod = new UserMod();\n+        userMod.setId(userId);\n+        userMod.getResourcesToAdd().addAll(resources);\n+\n+        if (changepwd) {\n+            StatusMod statusMod = new StatusMod();\n+            statusMod.setOnSyncope(false);\n+            statusMod.getResourceNames().addAll(resources);\n+            userMod.setPwdPropRequest(statusMod);\n+            userMod.setPassword(password);\n+        }\n \n         return update(userMod);\n     }\n@@ -461,9 +490,10 @@ public UserTO deprovision(final Long userId, final Collection<String> resources)\n         final Set<String> noPropResourceName = user.getResourceNames();\n         noPropResourceName.removeAll(resources);\n \n-        final List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId, noPropResourceName);\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                getBean(PropagationReporter.class);\n+        final List<PropagationTask> tasks =\n+                propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n+        final PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -476,6 +506,26 @@ public UserTO deprovision(final Long userId, final Collection<String> resources)\n         return updatedUserTO;\n     }\n \n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @Transactional(readOnly = true)\n+    @Override\n+    public UserTO provision(\n+            final Long userId,\n+            final Collection<String> resources,\n+            final boolean changePwd,\n+            final String password) {\n+\n+        final UserTO original = binder.getUserTO(userId);\n+\n+        //trick: assign and retrieve propagation statuses ...\n+        original.getPropagationStatusTOs().addAll(\n+                assign(userId, resources, changePwd, password).getPropagationStatusTOs());\n+\n+        // .... rollback.\n+        TransactionInterceptor.currentTransactionStatus().setRollbackOnly();\n+        return original;\n+    }\n+\n     /**\n      * {@inheritDoc}\n      */"},{"sha":"2089bde61dcb6343f475d658c41716147d34151d","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":67,"deletions":3,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -25,11 +25,14 @@\n import javax.ws.rs.core.Response.ResponseBuilder;\r\n \r\n import org.apache.syncope.common.mod.RoleMod;\r\n+import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.services.RoleService;\r\n import org.apache.syncope.common.reqres.PagedResult;\r\n+import org.apache.syncope.common.to.PropagationStatus;\r\n import org.apache.syncope.common.wrap.ResourceName;\r\n import org.apache.syncope.common.to.RoleTO;\r\n import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\r\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\r\n@@ -143,8 +146,8 @@ public Response update(final Long roleId, final RoleMod roleMod) {\n     }\r\n \r\n     @Override\r\n-    public Response associate(final Long roleId, final ResourceAssociationActionType type,\r\n-            final List<ResourceName> resourceNames) {\r\n+    public Response bulkDeassociation(\r\n+            final Long roleId, final ResourceDeAssociationActionType type, final List<ResourceName> resourceNames) {\r\n \r\n         RoleTO role = controller.read(roleId);\r\n \r\n@@ -169,7 +172,68 @@ public Response associate(final Long roleId, final ResourceAssociationActionType\n                     updated = controller.read(roleId);\r\n             }\r\n \r\n-            builder = modificationResponse(updated);\r\n+            final BulkActionResult res = new BulkActionResult();\r\n+\r\n+            if (type == ResourceDeAssociationActionType.UNLINK) {\r\n+                for (ResourceName resourceName : resourceNames) {\r\n+                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\r\n+                            ? BulkActionResult.Status.FAILURE\r\n+                            : BulkActionResult.Status.SUCCESS);\r\n+                }\r\n+            } else {\r\n+                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n+                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n+                }\r\n+            }\r\n+\r\n+            builder = modificationResponse(res);\r\n+        }\r\n+\r\n+        return builder.build();\r\n+    }\r\n+\r\n+    @Override\r\n+    public Response bulkAssociation(\r\n+            final Long roleId, final ResourceAssociationActionType type, final List<ResourceName> resourceNames) {\r\n+\r\n+        RoleTO role = controller.read(roleId);\r\n+\r\n+        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(role.getETagValue()));\r\n+        if (builder == null) {\r\n+            RoleTO updated;\r\n+\r\n+            switch (type) {\r\n+                case LINK:\r\n+                    updated = controller.link(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                    break;\r\n+\r\n+                case ASSIGN:\r\n+                    updated = controller.assign(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n+                    break;\r\n+\r\n+                case PROVISION:\r\n+                    updated = controller.provision(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n+                    break;\r\n+\r\n+                default:\r\n+                    updated = controller.read(roleId);\r\n+            }\r\n+\r\n+            final BulkActionResult res = new BulkActionResult();\r\n+\r\n+            if (type == ResourceAssociationActionType.LINK) {\r\n+                for (ResourceName resourceName : resourceNames) {\r\n+                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\r\n+                            ? BulkActionResult.Status.FAILURE\r\n+                            : BulkActionResult.Status.SUCCESS);\r\n+                }\r\n+            } else {\r\n+                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n+                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n+                }\r\n+            }\r\n+\r\n+            builder = modificationResponse(res);\r\n         }\r\n \r\n         return builder.build();\r"},{"sha":"7084446ebf05059bead7707d435a2776b1320210","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":85,"deletions":10,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -23,16 +23,19 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.ResponseBuilder;\n+import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n-import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.reqres.BulkAction;\n+import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.reqres.PagedResult;\n+import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n@@ -159,17 +162,13 @@ public Response status(final Long userId, final StatusMod statusMod) {\n     }\n \n     @Override\n-    public BulkActionResult bulk(final BulkAction bulkAction) {\n-        return controller.bulk(bulkAction);\n-    }\n+    public Response bulkDeassociation(\n+            final Long userId, final ResourceDeAssociationActionType type, final List<ResourceName> resourceNames) {\n \n-    @Override\n-    public Response associate(final Long userId, final ResourceAssociationActionType type,\n-            final List<ResourceName> resourceNames) {\n-\n-        UserTO user = controller.read(userId);\n+        final UserTO user = controller.read(userId);\n \n         ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n+\n         if (builder == null) {\n             UserTO updated;\n \n@@ -190,9 +189,85 @@ public Response associate(final Long userId, final ResourceAssociationActionType\n                     updated = controller.read(userId);\n             }\n \n-            builder = modificationResponse(updated);\n+            final BulkActionResult res = new BulkActionResult();\n+\n+            if (type == ResourceDeAssociationActionType.UNLINK) {\n+                for (ResourceName resourceName : resourceNames) {\n+                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\n+                            ? BulkActionResult.Status.FAILURE\n+                            : BulkActionResult.Status.SUCCESS);\n+                }\n+            } else {\n+                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n+                }\n+            }\n+\n+            builder = modificationResponse(res);\n+        }\n+\n+        return builder.build();\n+    }\n+\n+    @Override\n+    public Response bulkAssociation(\n+            final Long userId, final ResourceAssociationActionType type, final ResourceAssociationMod associationMod) {\n+\n+        final UserTO user = controller.read(userId);\n+\n+        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n+        if (builder == null) {\n+            UserTO updated;\n+\n+            switch (type) {\n+                case LINK:\n+                    updated = controller.link(\n+                            userId,\n+                            CollectionWrapper.unwrap(associationMod.getTargetResources()));\n+                    break;\n+\n+                case ASSIGN:\n+                    updated = controller.assign(\n+                            userId,\n+                            CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                            associationMod.isChangePwd(),\n+                            associationMod.getPassword());\n+                    break;\n+\n+                case PROVISION:\n+                    updated = controller.provision(\n+                            userId,\n+                            CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                            associationMod.isChangePwd(),\n+                            associationMod.getPassword());\n+                    break;\n+\n+                default:\n+                    updated = controller.read(userId);\n+            }\n+\n+            final BulkActionResult res = new BulkActionResult();\n+\n+            if (type == ResourceAssociationActionType.LINK) {\n+                for (ResourceName resourceName : associationMod.getTargetResources()) {\n+                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\n+                            ? BulkActionResult.Status.FAILURE\n+                            : BulkActionResult.Status.SUCCESS);\n+                }\n+            } else {\n+                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n+                }\n+            }\n+\n+            builder = modificationResponse(res);\n         }\n \n         return builder.build();\n     }\n+\n+    @Override\n+    public BulkActionResult bulk(final BulkAction bulkAction) {\n+        return controller.bulk(bulkAction);\n+    }\n }"},{"sha":"3430ead62c22e90499a3e4558a683c23f27cbb71","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":138,"deletions":19,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -45,10 +45,12 @@\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -402,34 +404,60 @@ public void unlink() {\n \n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n-        actual = roleService.associate(actual.getId(),\n-                ResourceAssociationActionType.UNLINK,\n-                CollectionWrapper.wrap(\"resource-ldap\", ResourceName.class)).\n-                readEntity(RoleTO.class);\n-        assertNotNull(actual);\n-        assertTrue(actual.getResources().isEmpty());\n+        assertNotNull(roleService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n \n         actual = roleService.read(actual.getId());\n         assertNotNull(actual);\n-\n         assertTrue(actual.getResources().isEmpty());\n \n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n     }\n \n+    @Test\n+    public void link() {\n+        RoleTO roleTO = buildRoleTO(\"link\");\n+        roleTO.getResources().clear();\n+\n+        RoleTO actual = createRole(roleTO);\n+        assertNotNull(actual);\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        assertNotNull(roleService.bulkAssociation(actual.getId(),\n+                ResourceAssociationActionType.LINK,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = roleService.read(actual.getId());\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n     @Test\n     public void unassign() {\n         RoleTO actual = createRole(buildRoleTO(\"unassign\"));\n         assertNotNull(actual);\n \n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n-        actual = roleService.associate(actual.getId(),\n-                ResourceAssociationActionType.UNASSIGN,\n-                CollectionWrapper.wrap(\"resource-ldap\", ResourceName.class)).\n-                readEntity(RoleTO.class);\n-        assertNotNull(actual);\n-        assertTrue(actual.getResources().isEmpty());\n+        assertNotNull(roleService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n \n         actual = roleService.read(actual.getId());\n         assertNotNull(actual);\n@@ -443,23 +471,114 @@ public void unassign() {\n         }\n     }\n \n+    @Test\n+    public void assign() {\n+        RoleTO roleTO = buildRoleTO(\"assign\");\n+        roleTO.getResources().clear();\n+\n+        RoleTO actual = createRole(roleTO);\n+        assertNotNull(actual);\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        assertNotNull(roleService.bulkAssociation(actual.getId(),\n+                ResourceAssociationActionType.ASSIGN,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = roleService.read(actual.getId());\n+        assertFalse(actual.getResources().isEmpty());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+    }\n+\n     @Test\n     public void deprovision() {\n         RoleTO actual = createRole(buildRoleTO(\"deprovision\"));\n         assertNotNull(actual);\n \n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n-        actual = roleService.associate(actual.getId(),\n-                ResourceAssociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(\"resource-ldap\", ResourceName.class)).\n-                readEntity(RoleTO.class);\n+        assertNotNull(roleService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = roleService.read(actual.getId());\n         assertNotNull(actual);\n         assertFalse(actual.getResources().isEmpty());\n \n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n+    @Test\n+    public void provision() {\n+        RoleTO roleTO = buildRoleTO(\"assign\");\n+        roleTO.getResources().clear();\n+\n+        RoleTO actual = createRole(roleTO);\n+        assertNotNull(actual);\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        assertNotNull(roleService.bulkAssociation(actual.getId(),\n+                ResourceAssociationActionType.PROVISION,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n         actual = roleService.read(actual.getId());\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+    }\n+\n+    @Test\n+    public void deprovisionUnlinked() {\n+        RoleTO roleTO = buildRoleTO(\"assign\");\n+        roleTO.getResources().clear();\n+\n+        RoleTO actual = createRole(roleTO);\n         assertNotNull(actual);\n-        assertFalse(actual.getResources().isEmpty());\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        assertNotNull(roleService.bulkAssociation(actual.getId(),\n+                ResourceAssociationActionType.PROVISION,\n+                CollectionWrapper.wrap(\"resource-ldap\", ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = roleService.read(actual.getId());\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n+\n+        assertNotNull(roleService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = roleService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n \n         try {\n             resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId());"},{"sha":"1c23af99c13727ed70c549974873b728daa295f7","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":171,"deletions":30,"changes":201,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bba0a441745766d8790aa6948a61eea792a6934d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=bba0a441745766d8790aa6948a61eea792a6934d","patch":"@@ -62,7 +62,6 @@\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.common.util.CollectionWrapper;\n@@ -79,10 +78,13 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.client.SyncopeClient;\n+import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.reqres.PagedResult;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n@@ -1848,26 +1850,56 @@ public void unlink() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n-        ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n-        assertNotNull(connObjectTO);\n-\n-        actual = userService.associate(actual.getId(),\n-                ResourceAssociationActionType.UNLINK,\n+        assertNotNull(userService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.UNLINK,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n-                readEntity(UserTO.class);\n-        assertNotNull(actual);\n-        assertTrue(actual.getResources().isEmpty());\n+                readEntity(BulkActionResult.class));\n \n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+    }\n+\n+    @Test\n+    public void link() {\n+        UserTO userTO = getUniqueSampleTO(\"link@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n-        connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n-        assertNotNull(connObjectTO);\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+\n+        assertNotNull(userService.bulkAssociation(\n+                actual.getId(), ResourceAssociationActionType.LINK, associationMod).readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n     }\n \n     @Test\n@@ -1882,19 +1914,35 @@ public void unassign() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n-        ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n-        assertNotNull(connObjectTO);\n-\n-        actual = userService.associate(actual.getId(),\n-                ResourceAssociationActionType.UNASSIGN,\n+        assertNotNull(userService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.UNASSIGN,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n-                readEntity(UserTO.class);\n+                readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n-        actual = userService.read(actual.getId());\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n+    @Test\n+    public void assign() {\n+        UserTO userTO = getUniqueSampleTO(\"assign@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n+\n+        UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n@@ -1904,6 +1952,19 @@ public void unassign() {\n         } catch (Exception e) {\n             assertNotNull(e);\n         }\n+\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.setChangePwd(true);\n+        associationMod.setPassword(\"password\");\n+\n+        assertNotNull(userService.bulkAssociation(actual.getId(), ResourceAssociationActionType.ASSIGN, associationMod)\n+                .readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertFalse(actual.getResources().isEmpty());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n     }\n \n     @Test\n@@ -1918,21 +1979,102 @@ public void deprovision() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n-        ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n-        assertNotNull(connObjectTO);\n-\n-        actual = userService.associate(actual.getId(),\n-                ResourceAssociationActionType.DEPROVISION,\n+        assertNotNull(userService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n-                readEntity(UserTO.class);\n+                readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n         assertNotNull(actual);\n         assertFalse(actual.getResources().isEmpty());\n \n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n+    @Test\n+    public void provision() {\n+        UserTO userTO = getUniqueSampleTO(\"provision@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n+\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.setChangePwd(true);\n+        associationMod.setPassword(\"password\");\n+\n+        assertNotNull(userService.bulkAssociation(actual.getId(), ResourceAssociationActionType.PROVISION,\n+                associationMod)\n+                .readEntity(BulkActionResult.class));\n+\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n-        assertFalse(actual.getResources().isEmpty());\n+        assertTrue(actual.getResources().isEmpty());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+    }\n+\n+    @Test\n+    public void deprovisionUnlinked() {\n+        UserTO userTO = getUniqueSampleTO(\"provision@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n+\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n+            fail();\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+\n+        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.setChangePwd(true);\n+        associationMod.setPassword(\"password\");\n+\n+        assertNotNull(userService.bulkAssociation(actual.getId(), ResourceAssociationActionType.PROVISION,\n+                associationMod)\n+                .readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n+\n+        assertNotNull(userService.bulkDeassociation(actual.getId(),\n+                ResourceDeAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertTrue(actual.getResources().isEmpty());\n \n         try {\n             resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n@@ -2062,5 +2204,4 @@ public void issueSYNCOPE454() throws NamingException {\n                 \"password123\",\n                 connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n     }\n-\n }"}]}