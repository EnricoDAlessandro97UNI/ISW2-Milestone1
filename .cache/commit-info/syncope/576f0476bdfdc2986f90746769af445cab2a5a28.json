{"sha":"576f0476bdfdc2986f90746769af445cab2a5a28","node_id":"C_kwDOJfYA1toAKDU3NmYwNDc2YmRmZGMyOTg2ZjkwNzQ2NzY5YWY0NDVjYWIyYTVhMjg","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-01T07:41:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-04T07:05:02Z"},"message":"Allow to customize the list of audit events to manage","tree":{"sha":"a8c67f77c6c85e00e39edf5744fdc15d0f1cf28c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a8c67f77c6c85e00e39edf5744fdc15d0f1cf28c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/576f0476bdfdc2986f90746769af445cab2a5a28","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/576f0476bdfdc2986f90746769af445cab2a5a28","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/576f0476bdfdc2986f90746769af445cab2a5a28","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/576f0476bdfdc2986f90746769af445cab2a5a28/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ea51a6a8b7206822edf3fd3b42db8b68d736439d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea51a6a8b7206822edf3fd3b42db8b68d736439d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ea51a6a8b7206822edf3fd3b42db8b68d736439d"}],"stats":{"total":75,"additions":40,"deletions":35},"files":[{"sha":"df041904a8fd36d05229789cdedb42744c4ac4f2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"modified","additions":37,"deletions":33,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=576f0476bdfdc2986f90746769af445cab2a5a28","patch":"@@ -68,31 +68,11 @@\n \n     private static final Logger LOG = LoggerFactory.getLogger(AuditHistoryDetails.class);\n \n-    private static final List<String> EVENTS = List.of(\"create\", \"update\", \"matchingrule_update\",\n-            \"unmatchingrule_assign\", \"unmatchingrule_provision\");\n+    public static final List<String> DEFAULT_EVENTS = List.of(\n+            \"create\", \"update\", \"matchingrule_update\", \"unmatchingrule_assign\", \"unmatchingrule_provision\");\n \n     private static final SortParam<String> REST_SORT = new SortParam<>(\"event_date\", false);\n \n-    private EntityTO currentEntity;\n-\n-    private AuditElements.EventCategoryType type;\n-\n-    private String category;\n-\n-    private Class<T> reference;\n-\n-    private List<AuditEntry> auditEntries = new ArrayList<>();\n-\n-    private AuditEntry latestAuditEntry;\n-\n-    private AuditEntry after;\n-\n-    private AjaxDropDownChoicePanel<AuditEntry> beforeVersionsPanel;\n-\n-    private AjaxDropDownChoicePanel<AuditEntry> afterVersionsPanel;\n-\n-    private final AjaxLink<Void> restore;\n-\n     private static class SortingNodeFactory extends JsonNodeFactory {\n \n         private static final long serialVersionUID = 1870252010670L;\n@@ -157,21 +137,46 @@ private static <T> Class<T> cast(final Class<?> aClass) {\n             registerModule(new SimpleModule().addSerializer(new SortedSetJsonSerializer(cast(Set.class)))).\n             registerModule(new JavaTimeModule());\n \n+    private EntityTO currentEntity;\n+\n+    private AuditElements.EventCategoryType type;\n+\n+    private String category;\n+\n+    private final List<String> events;\n+\n+    private Class<T> reference;\n+\n+    private final List<AuditEntry> auditEntries = new ArrayList<>();\n+\n+    private AuditEntry latestAuditEntry;\n+\n+    private AuditEntry after;\n+\n+    private AjaxDropDownChoicePanel<AuditEntry> beforeVersionsPanel;\n+\n+    private AjaxDropDownChoicePanel<AuditEntry> afterVersionsPanel;\n+\n+    private final AjaxLink<Void> restore;\n+\n     @SuppressWarnings(\"unchecked\")\n     public AuditHistoryDetails(\n             final String id,\n             final EntityTO currentEntity,\n             final AuditElements.EventCategoryType type,\n             final String category,\n+            final List<String> events,\n             final String auditRestoreEntitlement) {\n \n         super(id);\n \n-        this.setOutputMarkupId(true);\n-        this.reference = (Class<T>) currentEntity.getClass();\n         this.currentEntity = currentEntity;\n         this.type = type;\n         this.category = category;\n+        this.events = events;\n+        this.reference = (Class<T>) currentEntity.getClass();\n+\n+        setOutputMarkupId(true);\n \n         IChoiceRenderer<AuditEntry> choiceRenderer = new IChoiceRenderer<>() {\n \n@@ -212,8 +217,8 @@ protected void onEvent(final AjaxRequestTarget target) {\n                 AuditEntry afterEntry = afterVersionsPanel.getModelObject() == null\n                         ? after\n                         : buildAfterAuditEntry(beforeEntry);\n-                AuditHistoryDetails.this.addOrReplace(new JsonDiffPanel(toJSON(beforeEntry, reference),\n-                        toJSON(afterEntry, reference)));\n+                AuditHistoryDetails.this.addOrReplace(\n+                        new JsonDiffPanel(toJSON(beforeEntry, reference), toJSON(afterEntry, reference)));\n                 // change after audit entries in order to match only the ones newer than the current after one\n                 afterVersionsPanel.setChoices(auditEntries.stream().\n                         filter(ae -> ae.getDate().isAfter(beforeEntry.getDate())\n@@ -225,8 +230,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n             }\n         });\n         afterVersionsPanel =\n-                new AjaxDropDownChoicePanel<>(\"afterVersions\", getString(\"afterVersions\"), new Model<>(),\n-                        true);\n+                new AjaxDropDownChoicePanel<>(\"afterVersions\", getString(\"afterVersions\"), new Model<>(), true);\n         afterVersionsPanel.setChoiceRenderer(choiceRenderer);\n         afterVersionsPanel.add(new IndicatorAjaxEventBehavior(Constants.ON_CHANGE) {\n \n@@ -278,20 +282,20 @@ public void onClick(final AjaxRequestTarget target) {\n \n     protected void initDiff() {\n         // audit fetch size is fixed, for the moment... \n-        this.auditEntries.clear();\n-        this.auditEntries.addAll(new AuditRestClient().search(\n+        auditEntries.clear();\n+        auditEntries.addAll(AuditRestClient.search(\n                 currentEntity.getKey(),\n                 1,\n                 50,\n                 type,\n                 category,\n-                EVENTS,\n+                events,\n                 AuditElements.Result.SUCCESS,\n                 REST_SORT));\n \n         // the default selected is the newest one, if any\n-        this.latestAuditEntry = auditEntries.isEmpty() ? null : auditEntries.get(0);\n-        this.after = latestAuditEntry == null ? null : buildAfterAuditEntry(latestAuditEntry);\n+        latestAuditEntry = auditEntries.isEmpty() ? null : auditEntries.get(0);\n+        after = latestAuditEntry == null ? null : buildAfterAuditEntry(latestAuditEntry);\n         // add default diff panel\n         addOrReplace(new JsonDiffPanel(toJSON(latestAuditEntry, reference), toJSON(after, reference)));\n "},{"sha":"cf31ffa1f3a8e5f7968555666f9605f46aeb5233","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryModal.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java?ref=576f0476bdfdc2986f90746769af445cab2a5a28","patch":"@@ -42,6 +42,7 @@ public AuditHistoryModal(\n                 entity,\n                 type,\n                 category,\n+                AuditHistoryDetails.DEFAULT_EVENTS,\n                 auditRestoreEntitlement) {\n \n             private static final long serialVersionUID = -5311898419151367494L;"},{"sha":"5e02ffe1c7979fd5a339ad89c0c951048d928d7e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AuditRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/576f0476bdfdc2986f90746769af445cab2a5a28/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java?ref=576f0476bdfdc2986f90746769af445cab2a5a28","patch":"@@ -75,7 +75,7 @@ public static List<EventCategory> listEvents() {\n         }\n     }\n \n-    public List<AuditEntry> search(\n+    public static List<AuditEntry> search(\n             final String key,\n             final int page,\n             final int size,\n@@ -99,7 +99,7 @@ public List<AuditEntry> search(\n         return getService(AuditService.class).search(query).getResult();\n     }\n \n-    public int count(\n+    public static int count(\n             final String key,\n             final AuditElements.EventCategoryType type,\n             final String category,"}]}