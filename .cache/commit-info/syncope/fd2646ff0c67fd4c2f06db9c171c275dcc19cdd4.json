{"sha":"fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","node_id":"C_kwDOJfYA1toAKGZkMjY0NmZmMGM2N2ZkNGMyZjA2ZGI5YzE3MWMyNzVkY2MxOWNkZDQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-06-07T14:49:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-06-07T14:49:36Z"},"message":"Changes to simplify Console customizations","tree":{"sha":"63e9ac2979372aa726dbbfdaf00ace2053bab36e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/63e9ac2979372aa726dbbfdaf00ace2053bab36e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8cf8fe97981337a4902a043a848025f8e0b032de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cf8fe97981337a4902a043a848025f8e0b032de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8cf8fe97981337a4902a043a848025f8e0b032de"}],"stats":{"total":126,"additions":60,"deletions":66},"files":[{"sha":"ce8d6b03f84afa63cf4c1631683a24ee9495dde2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/layout/AbstractAnyFormBaseLayout.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormBaseLayout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormBaseLayout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormBaseLayout.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -26,7 +26,7 @@\n \n     private static final long serialVersionUID = -6061683026789976508L;\n \n-    private Class<F> formClass;\n+    private Class<? extends F> formClass;\n \n     private boolean auxClasses = true;\n \n@@ -46,7 +46,7 @@ public Class<? extends F> getFormClass() {\n         return formClass == null ? getDefaultFormClass() : formClass;\n     }\n \n-    public void setFormClass(final Class<F> formClass) {\n+    public void setFormClass(final Class<? extends F> formClass) {\n         this.formClass = formClass;\n     }\n "},{"sha":"1e27e6cad522e1ff2a5f3344e8431d0316d2ab4b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":17,"deletions":19,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -49,6 +49,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.util.string.Strings;\n+import org.danekja.java.util.function.serializable.SerializableFunction;\n \n public class AjaxPalettePanel<T extends Serializable> extends AbstractFieldPanel<List<T>> {\n \n@@ -130,7 +131,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n \n     protected Palette<T> buildPalette(final IModel<List<T>> model, final Builder<T> builder) {\n         return new NonI18nPalette<>(\n-            \"paletteField\", model, choicesModel, builder.renderer, 8, builder.allowOrder, builder.allowMoveAll) {\n+                \"paletteField\", model, choicesModel, builder.renderer, 8, builder.allowOrder, builder.allowMoveAll) {\n \n             private static final long serialVersionUID = -3074655279011678437L;\n \n@@ -173,7 +174,7 @@ public List<T> getSelectedList() {\n \n                         // reduce number of method calls by building a lookup table\n                         Map<T, String> idForChoice = choices.stream().collect(Collectors.toMap(\n-                            Function.identity(), choice -> renderer.getIdValue(choice, 0), (c1, c2) -> c1));\n+                                Function.identity(), choice -> renderer.getIdValue(choice, 0), (c1, c2) -> c1));\n \n                         List<T> selected = new ArrayList<>(choices.size());\n                         builder.idExtractor.apply(getValue()).forEach(id -> {\n@@ -205,8 +206,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             @Override\n             protected Map<String, String> getAdditionalAttributes(final Object choice) {\n                 return builder.additionalAttributes == null\n-                    ? super.getAdditionalAttributes(choice)\n-                    : builder.additionalAttributes.apply(choice);\n+                        ? super.getAdditionalAttributes(choice)\n+                        : builder.additionalAttributes.apply(choice);\n             }\n         };\n     }\n@@ -267,12 +268,12 @@ public AbstractFieldPanel<List<T>> setRequired(final boolean required) {\n \n         protected boolean warnIfEmptyFilter = true;\n \n-        protected Function<String, Stream<String>> idExtractor =\n-                (Function<String, Stream<String>> & Serializable) input -> Stream.of(Strings.split(input, ','));\n+        protected SerializableFunction<String, Stream<String>> idExtractor =\n+                input -> Stream.of(Strings.split(input, ','));\n \n-        protected Function<AjaxRequestTarget, Boolean> event;\n+        protected SerializableFunction<AjaxRequestTarget, Boolean> event;\n \n-        protected Function<Object, Map<String, String>> additionalAttributes;\n+        protected SerializableFunction<Object, Map<String, String>> additionalAttributes;\n \n         public Builder<T> setName(final String name) {\n             this.name = name;\n@@ -320,17 +321,19 @@ public Builder<T> warnIfEmptyFilter(final boolean warnIfEmptyFilter) {\n             return this;\n         }\n \n-        public Builder<T> idExtractor(final Function<String, Stream<String>> idExtractor) {\n+        public Builder<T> idExtractor(final SerializableFunction<String, Stream<String>> idExtractor) {\n             this.idExtractor = idExtractor;\n             return this;\n         }\n \n-        public Builder<T> event(final Function<AjaxRequestTarget, Boolean> event) {\n+        public Builder<T> event(final SerializableFunction<AjaxRequestTarget, Boolean> event) {\n             this.event = event;\n             return this;\n         }\n \n-        public Builder<T> additionalAttributes(final Function<Object, Map<String, String>> additionalAttributes) {\n+        public Builder<T> additionalAttributes(\n+                final SerializableFunction<Object, Map<String, String>> additionalAttributes) {\n+\n             this.additionalAttributes = additionalAttributes;\n             return this;\n         }\n@@ -404,14 +407,9 @@ protected List<T> getFilteredList(final Collection<T> choices, final String filt\n \n             Pattern pattern = Pattern.compile(filter, Pattern.CASE_INSENSITIVE);\n \n-            List<T> filtered = new ArrayList<>(choices.size());\n-            choices.forEach(choice -> {\n-                if (pattern.matcher(idForChoice.get(choice)).matches()) {\n-                    filtered.add(choice);\n-                }\n-            });\n-\n-            return filtered;\n+            return choices.stream().\n+                    filter(choice -> pattern.matcher(idForChoice.get(choice)).matches()).\n+                    collect(Collectors.toList());\n         }\n     }\n "},{"sha":"e5de64e73505202516861eaa039a07ac1d713033","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectDetails.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -29,6 +29,8 @@ public class AnyObjectDetails extends Details<AnyObjectTO> {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n+    protected final AjaxTextFieldPanel name;\n+\n     public AnyObjectDetails(\n             final AnyWrapper<AnyObjectTO> wrapper,\n             final boolean templateMode,\n@@ -37,14 +39,14 @@ public AnyObjectDetails(\n \n         super(wrapper, templateMode, includeStatusPanel, pageRef);\n \n-        AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n+        name = new AjaxTextFieldPanel(\n                 Constants.NAME_FIELD_NAME, Constants.NAME_FIELD_NAME,\n                 new PropertyModel<>(wrapper.getInnerObject(), Constants.NAME_FIELD_NAME), false);\n         if (templateMode) {\n             name.enableJexlHelp();\n         } else {\n             name.addRequiredLabel();\n         }\n-        this.add(name);\n+        add(name);\n     }\n }"},{"sha":"30830f955630b19847b06ddef5c52a21ab21bb46","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -46,8 +46,8 @@ public AnyObjectWizardBuilder(\n             final AnyObjectFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(Optional.ofNullable(anyObjectTO).map(AnyObjectWrapper::new)\n-                .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+        super(Optional.ofNullable(anyObjectTO).map(AnyObjectWrapper::new).\n+                orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**\n@@ -100,6 +100,7 @@ protected Optional<Details<AnyObjectTO>> addOptionalDetailsPanel(final AnyWrappe\n         return Optional.of(new AnyObjectDetails(\n                 modelObject,\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef));\n+                modelObject.getInnerObject().getKey() != null,\n+                pageRef));\n     }\n }"},{"sha":"52b5166677a421a9b3a9d9fb532b65c2e69fe957","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -28,6 +28,8 @@ public class GroupDetails extends Details<GroupTO> {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n+    protected final AjaxTextFieldPanel name;\n+\n     public GroupDetails(\n             final GroupWrapper wrapper,\n             final boolean templateMode,\n@@ -36,14 +38,14 @@ public GroupDetails(\n \n         super(wrapper, templateMode, includeStatusPanel, pageRef);\n \n-        AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n+        name = new AjaxTextFieldPanel(\n                 Constants.NAME_FIELD_NAME, Constants.NAME_FIELD_NAME,\n                 new PropertyModel<>(wrapper.getInnerObject(), Constants.NAME_FIELD_NAME), false);\n         if (templateMode) {\n             name.enableJexlHelp();\n         } else {\n             name.addRequiredLabel();\n         }\n-        this.add(name);\n+        add(name);\n     }\n }"},{"sha":"2b87ac8de349ba1a61c4c3cd72666d54e41414e3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -49,8 +49,8 @@ public GroupWizardBuilder(\n             final GroupFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(Optional.ofNullable(groupTO).map(GroupWrapper::new)\n-                .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+        super(Optional.ofNullable(groupTO).map(GroupWrapper::new).\n+                orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**\n@@ -131,6 +131,7 @@ protected Optional<Details<GroupTO>> addOptionalDetailsPanel(final AnyWrapper<Gr\n         return Optional.of(new GroupDetails(\n                 GroupWrapper.class.cast(modelObject),\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef));\n+                modelObject.getInnerObject().getKey() != null,\n+                pageRef));\n     }\n }"},{"sha":"852d606265e74f05115c77be248a268391614980","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":20,"deletions":19,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -68,6 +68,8 @@ public class Groups extends AbstractGroups {\n \n     protected final ConsoleGroupsModel groupsModel;\n \n+    protected AjaxPalettePanel.Builder<MembershipTO> groups;\n+\n     public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n         super(modelObject);\n         this.templateMode = templateMode;\n@@ -110,31 +112,30 @@ protected void addGroupsPanel() {\n             dyngroupsContainer.add(new Label(\"dyngroups\").setVisible(false));\n             dyngroupsContainer.setVisible(false);\n         } else {\n-            AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n-                    setRenderer(new IChoiceRenderer<>() {\n+            groups = new AjaxPalettePanel.Builder<MembershipTO>().setRenderer(new IChoiceRenderer<>() {\n \n-                        private static final long serialVersionUID = -3086661086073628855L;\n+                private static final long serialVersionUID = -3086661086073628855L;\n \n-                        @Override\n-                        public Object getDisplayValue(final MembershipTO object) {\n-                            return object.getGroupName();\n-                        }\n+                @Override\n+                public Object getDisplayValue(final MembershipTO object) {\n+                    return object.getGroupName();\n+                }\n \n-                        @Override\n-                        public String getIdValue(final MembershipTO object, final int index) {\n-                            return object.getGroupName();\n-                        }\n+                @Override\n+                public String getIdValue(final MembershipTO object, final int index) {\n+                    return object.getGroupName();\n+                }\n \n-                        @Override\n-                        public MembershipTO getObject(\n-                                final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n+                @Override\n+                public MembershipTO getObject(\n+                        final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n \n-                            return choices.getObject().stream().\n-                                    filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n-                        }\n-                    });\n+                    return choices.getObject().stream().\n+                            filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n+                }\n+            });\n \n-            groupsContainer.add(builder.setAllowOrder(true).withFilter(\"*\").build(\"groups\", new ListModel<>() {\n+            groupsContainer.add(groups.setAllowOrder(true).withFilter(\"*\").build(\"groups\", new ListModel<>() {\n \n                 private static final long serialVersionUID = -2583290457773357445L;\n "},{"sha":"3c8fbca2de88d47fca4ca77208358949dc36f9b9","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/Groups.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -29,9 +29,7 @@\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n-import java.io.Serializable;\n import java.util.List;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n@@ -43,14 +41,15 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.danekja.java.util.function.serializable.SerializableFunction;\n \n public class Groups extends Panel {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n     protected static final int MAX_GROUP_LIST_CARDINALITY = 30;\n \n-    private final EnduserGroupsModel groupsModel;\n+    protected final EnduserGroupsModel groupsModel;\n \n     protected final AnyTO anyTO;\n \n@@ -94,8 +93,8 @@ public <T extends AnyTO> Groups(final String id, final AnyWrapper<T> modelObject\n         addDynamicRealmsContainer();\n     }\n \n-    private Function<AjaxRequestTarget, Boolean> getEventFunction() {\n-        return (Function<AjaxRequestTarget, Boolean> & Serializable) (target) -> {\n+    protected SerializableFunction<AjaxRequestTarget, Boolean> getEventFunction() {\n+        return target -> {\n             send(Groups.this.getPage(), Broadcast.BREADTH,\n                     new AjaxPalettePanel.UpdateActionEvent((UserTO) anyTO, target));\n             return true;\n@@ -231,7 +230,4 @@ protected void reload() {\n             }\n         }\n     }\n-\n-    public interface SerializableFunction extends Function<AjaxRequestTarget, Boolean>, Serializable {\n-    }\n }"},{"sha":"7aaea2eccab2910f42d0d7caadd854a9aa3049d8","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=fd2646ff0c67fd4c2f06db9c171c275dcc19cdd4","patch":"@@ -130,14 +130,7 @@ public Pair<Integer, List<GroupTO>> searchAssignableGroups(\n         if (StringUtils.isNotBlank(term)) {\n             AnyCond termCond = new AnyCond(AttrCond.Type.ILIKE);\n             termCond.setSchema(\"name\");\n-\n-            String termSearchableValue = (term.startsWith(\"*\") && !term.endsWith(\"*\"))\n-                    ? term + '%'\n-                    : (!term.startsWith(\"*\") && term.endsWith(\"*\"))\n-                    ? '%' + term\n-                    : (term.startsWith(\"*\") && term.endsWith(\"*\")\n-                    ? term : '%' + term + '%');\n-            termCond.setExpression(termSearchableValue);\n+            termCond.setExpression(term.replace(\"*\", \"%\"));\n \n             searchCond = SearchCond.getAnd(\n                     SearchCond.getLeaf(assignableCond),"}]}