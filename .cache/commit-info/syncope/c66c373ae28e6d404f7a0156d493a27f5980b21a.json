{"sha":"c66c373ae28e6d404f7a0156d493a27f5980b21a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2NmMzNzNhZTI4ZTZkNDA0ZjdhMDE1NmQ0OTNhMjdmNTk4MGIyMWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-06T09:43:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-06T11:00:47Z"},"message":"Adjusting to latest validation requirements from Swagger UI","tree":{"sha":"eca1e80f86e154586f5b74aefad6693e4f85472c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/eca1e80f86e154586f5b74aefad6693e4f85472c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c66c373ae28e6d404f7a0156d493a27f5980b21a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c66c373ae28e6d404f7a0156d493a27f5980b21a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c66c373ae28e6d404f7a0156d493a27f5980b21a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c66c373ae28e6d404f7a0156d493a27f5980b21a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0418b4578388227f92d2e86a9c50b4a267d53465","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0418b4578388227f92d2e86a9c50b4a267d53465","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0418b4578388227f92d2e86a9c50b4a267d53465"}],"stats":{"total":179,"additions":160,"deletions":19},"files":[{"sha":"74248c8b70ef1e497e831497612a229c5da36292","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/DeassociationPatch.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -98,6 +98,7 @@ public ResourceDeassociationAction getAction() {\n         return action;\n     }\n \n+    @PathParam(\"action\")\n     public void setAction(final ResourceDeassociationAction action) {\n         this.action = action;\n     }"},{"sha":"e8169b1776aefbef36f11e17693895f1b9c7f393","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -129,6 +129,8 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Any Object's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Any object successfully updated enriched with propagation status information, as Entity\",\n@@ -170,6 +172,8 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Any Object's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Any object successfully updated enriched with propagation status information, as Entity\","},{"sha":"73cd69fc185151e0b1ebbda45813f2d31026daf1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -48,6 +48,8 @@\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n@@ -117,6 +119,8 @@ AttrTO read(\n      * @param attrTO attribute\n      * @return Response object featuring the updated any object attribute - as Entity\n      */\n+    @Parameter(name = \"schema\", description = \"Attribute schema's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @PUT\n     @Path(\"{key}/{schemaType}/{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n@@ -184,7 +188,7 @@ void delete(\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n-     * Executes resource-related operations on given any object.\n+     * Executes resource-related operations on given entity.\n      *\n      * @param patch external resources to be used for propagation-related operations\n      * @return Response object featuring BulkActionResult as Entity\n@@ -203,6 +207,10 @@ void delete(\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Entity's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n+    @Parameter(name = \"action\", description = \"Deassociation action\", in = ParameterIn.PATH, schema =\n+            @Schema(implementation = ResourceDeassociationAction.class))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Bulk action result\", content =\n@@ -224,7 +232,7 @@ void delete(\n     Response deassociate(@NotNull DeassociationPatch patch);\n \n     /**\n-     * Executes resource-related operations on given any object.\n+     * Executes resource-related operations on given entity.\n      *\n      * @param patch external resources to be used for propagation-related operations\n      * @return Response object featuring BulkActionResult as Entity\n@@ -243,6 +251,10 @@ void delete(\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Entity's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n+    @Parameter(name = \"action\", description = \"Association action\", in = ParameterIn.PATH, schema =\n+            @Schema(implementation = ResourceAssociationAction.class))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Bulk action result\", content ="},{"sha":"7752defb0151df95181c53aea772025bbe43cd3c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -97,6 +99,8 @@ public interface AnyTypeClassService extends JAXRSService {\n      *\n      * @param anyTypeClassTO anyTypeClass to be stored\n      */\n+    @Parameter(name = \"key\", description = \"AnyTypeClass's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"53b8b8725c2c2f6d9a9757b1134c82f5e1c69673","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -96,6 +98,8 @@ public interface AnyTypeService extends JAXRSService {\n      *\n      * @param anyTypeTO anyType to be stored\n      */\n+    @Parameter(name = \"key\", description = \"AnyType's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"cec793811623ff0cfa029b451ba4b0072588c620","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ApplicationService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FApplicationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FApplicationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FApplicationService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -109,6 +111,8 @@ public interface ApplicationService extends JAXRSService {\n      *\n      * @param applicationTO application to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Application's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"e2193aa93ed580d738b21c864c9266c71367aeca","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n@@ -81,6 +84,8 @@ public interface ConfigurationService extends JAXRSService {\n      *\n      * @param value parameter value\n      */\n+    @Parameter(name = \"schema\", description = \"Configuration schema\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"cb98215b46ddcd11c9f053d71802a8bfc4fe12b9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -77,6 +79,8 @@ public interface ConnectorService extends JAXRSService {\n      * @return supported object classes info for the connector bundle matching the given connector instance key, with\n      * the provided configuration\n      */\n+    @Parameter(name = \"key\", description = \"Connector instance's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @POST\n     @Path(\"{key}/supportedObjectClasses\")\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n@@ -148,6 +152,8 @@ ConnInstanceTO readByResource(\n      *\n      * @param connInstanceTO connector instance to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Connector instance's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"d879e89a7d682aef88fce71db2fec1f3b75a0f06","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -97,6 +99,8 @@ public interface DomainService extends JAXRSService {\n      *\n      * @param domainTO domain to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Domain's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"7ebe9354e6e2ba5b7d50941332fcc7f6263ac12a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DynRealmService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -97,6 +99,8 @@ public interface DynRealmService extends JAXRSService {\n      *\n      * @param dynDynRealmTO dynamic realm to be stored\n      */\n+    @Parameter(name = \"key\", description = \"DynRealm's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"197d5f3b99c5a29be46c5ff5122be04be48fa6fe","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -133,6 +133,8 @@ public interface GroupService extends AnyService<GroupTO> {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Group's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Group successfully updated enriched with propagation status information, as Entity\",\n@@ -174,6 +176,8 @@ public interface GroupService extends AnyService<GroupTO> {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Group's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Group successfully updated enriched with propagation status information, as Entity\","},{"sha":"42bdd4866b2b845ba13507d8547722111f84fd89","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ImplementationService.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -76,6 +79,10 @@ public interface ImplementationService extends JAXRSService {\n      * @param implementationTO implementation.\n      * @return Response object featuring Location header of created implementation\n      */\n+    @Parameter(name = \"type\", description = \"Implementation's type\", in = ParameterIn.PATH, schema =\n+            @Schema(implementation = ImplementationType.class))\n+    @Parameter(name = \"key\", description = \"Implementation's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @POST\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n@@ -88,6 +95,10 @@ public interface ImplementationService extends JAXRSService {\n      * @param implementationTO implementation.\n      * @return an empty response if operation was successful\n      */\n+    @Parameter(name = \"type\", description = \"Implementation's type\", in = ParameterIn.PATH, schema =\n+            @Schema(implementation = ImplementationType.class))\n+    @Parameter(name = \"key\", description = \"Implementation's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })"},{"sha":"e3fa626fee3f95f058adb07be9ecfd8c51a88ff9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n@@ -110,6 +113,8 @@ public interface LoggerService extends JAXRSService {\n      * @param type LoggerType to be selected\n      * @param logger Logger to be created or updated\n      */\n+    @Parameter(name = \"key\", description = \"Logger's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"d7d94f2c4caf48057b3190ca7f1f973b96db02ec","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -100,6 +102,8 @@ public interface NotificationService extends JAXRSService {\n      *\n      * @param notificationTO notification to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Notification's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"374c9fc1e473b3f2152b7839d5c2f8475890f6f2","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -106,6 +108,8 @@ public interface PolicyService extends JAXRSService {\n      * @param type policy type\n      * @param policyTO Policy to replace existing policy\n      */\n+    @Parameter(name = \"key\", description = \"Policy's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"ddc6242205798453116a25b05a1ebdd86a866bcf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -131,6 +131,8 @@ public interface RealmService extends JAXRSService {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"fullPath\", description = \"Realm's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Realm successfully updated enriched with propagation status information, as Entity\","},{"sha":"bc43a0bf181d846995bcd3ac15e48119d8ae22fe","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -97,6 +99,8 @@ public interface RelationshipTypeService extends JAXRSService {\n      *\n      * @param relationshipTypeTO relationshipType to be stored\n      */\n+    @Parameter(name = \"key\", description = \"RelationshipType's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"0b4a7049271da0c7eae00230e8b83b7112a37b4f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RemediationService.java","status":"modified","additions":15,"deletions":9,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -92,7 +92,7 @@ public interface RemediationService extends JAXRSService {\n     /**\n      * Perform remediation by creating the provided user, group or any object.\n      *\n-     * @param key key for remediation to act on\n+     * @param remediationKey key for remediation to act on\n      * @param anyTO user, group or any object to create\n      * @return Response object featuring Location header of created object as well as the object itself\n      * enriched with propagation status information\n@@ -106,6 +106,8 @@ public interface RemediationService extends JAXRSService {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Entity's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"Object successfully created enriched with propagation status information, as Entity,\"\n@@ -124,15 +126,15 @@ public interface RemediationService extends JAXRSService {\n                         description = \"Allows the server to inform the \"\n                         + \"client about the fact that a specified preference was applied\") }))\n     @POST\n-    @Path(\"{key}\")\n+    @Path(\"{remediationKey}\")\n     @Consumes({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Response remedy(@NotNull @PathParam(\"key\") String key, @NotNull AnyTO anyTO);\n+    Response remedy(@NotNull @PathParam(\"remediationKey\") String remediationKey, @NotNull AnyTO anyTO);\n \n     /**\n      * Perform remediation by updating the provided user, group or any object.\n      *\n-     * @param key key for remediation to act on\n+     * @param remediationKey key for remediation to act on\n      * @param anyPatch user, group or any object to update\n      * @return Response object featuring the updated object enriched with propagation status information\n      */\n@@ -150,6 +152,8 @@ public interface RemediationService extends JAXRSService {\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"Entity's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Object successfully updated enriched with propagation status information, as Entity\",\n@@ -166,15 +170,15 @@ public interface RemediationService extends JAXRSService {\n                 description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n                 + \" date of the entity\") })\n     @PATCH\n-    @Path(\"{key}\")\n+    @Path(\"{remediationKey}\")\n     @Consumes({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Response remedy(@NotNull @PathParam(\"key\") String key, @NotNull AnyPatch anyPatch);\n+    Response remedy(@NotNull @PathParam(\"remediationKey\") String remediationKey, @NotNull AnyPatch anyPatch);\n \n     /**\n      * Perform remediation by deleting the provided user, group or any object.\n      *\n-     * @param key key for remediation to act on\n+     * @param remediationKey key for remediation to act on\n      * @param anyKey user's, group's or any object's key to delete\n      * @return Response object featuring the deleted object enriched with propagation status information\n      */\n@@ -208,7 +212,9 @@ public interface RemediationService extends JAXRSService {\n                 description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n                 + \" date of the entity\") })\n     @DELETE\n-    @Path(\"{key}/{anyKey}\")\n+    @Path(\"{remediationKey}/{anyKey}\")\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Response remedy(@NotNull @PathParam(\"key\") String key, @NotNull String anyKey);\n+    Response remedy(\n+            @NotNull @PathParam(\"remediationKey\") String remediationKey,\n+            @NotNull @PathParam(\"anyKey\") String anyKey);\n }"},{"sha":"ae0b7fe2fd14949b9d3640c9a4a58dbc6d66771b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -99,6 +101,8 @@ public interface ReportService extends ExecutableService {\n      *\n      * @param reportTO report to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Report's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"a72ba13b6cae2d7d39ce3b7a891e221b7aa6ade0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -45,6 +47,7 @@\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PagedConnObjectTOResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.ConnObjectTOListQuery;\n \n@@ -136,6 +139,8 @@ PagedConnObjectTOResult listConnObjects(\n      *\n      * @param resourceTO resource to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Resource's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n@@ -207,6 +212,12 @@ void removeSyncToken(\n      * @param patch any objects to be used for propagation-related operations\n      * @return Bulk action result\n      */\n+    @Parameter(name = \"key\", description = \"Resource's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n+    @Parameter(name = \"anyTypeKey\", description = \"AnyType's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n+    @Parameter(name = \"action\", description = \"Deassociation action\", in = ParameterIn.PATH, schema =\n+            @Schema(implementation = ResourceDeassociationAction.class))\n     @POST\n     @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{action}\")\n     @Produces({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })"},{"sha":"1ce31016caeeb8102fae96bec4a32d6cb4743573","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -98,6 +100,8 @@ public interface RoleService extends JAXRSService {\n      *\n      * @param roleTO role to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Role's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"14e28bfb265aa17f5d4173b16cfa84105a431e67","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -110,6 +112,8 @@ <T extends SchemaTO> T read(\n      * @param type type for schemas to be updated\n      * @param schemaTO updated schema to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Schema's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"b9df752dd7b95869e3a7aab32545f0cabeae6fc1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -97,6 +99,8 @@ public interface SecurityQuestionService extends JAXRSService {\n      *\n      * @param securityQuestionTO security question to be stored\n      */\n+    @Parameter(name = \"key\", description = \"SecurityQuestion's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"b74ede1c606a0bfa2e4a63790a941a3e1af968a8","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n@@ -117,6 +119,8 @@ <T extends TaskTO> T read(\n      * @param type task type\n      * @param taskTO updated task to be stored\n      */\n+    @Parameter(name = \"key\", description = \"Task's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"656e912794a48b34968e24a44bbc6b7afa4b1318","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -128,6 +128,8 @@ Response create(@NotNull UserTO userTO,\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -159,6 +161,8 @@ Response create(@NotNull UserTO userTO,\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -190,6 +194,8 @@ Response create(@NotNull UserTO userTO,\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\","},{"sha":"af331575d139bc322b582f319a4d1ace49f5e58d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -134,6 +134,8 @@ Response create(\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -176,6 +178,8 @@ Response create(\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -218,6 +222,8 @@ Response create(\n             + \" with External Resources with no priority set\",\n             allowEmptyValue = true, schema =\n             @Schema(type = \"boolean\", defaultValue = \"false\"))\n+    @Parameter(name = \"key\", description = \"User's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\","},{"sha":"d7f6b6e0c8675fa1f2b6dd8275eee1df6b96d852","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RemediationServiceImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -67,8 +67,8 @@ public Response delete(final String key) {\n     }\n \n     @Override\n-    public Response remedy(final String key, final AnyTO anyTO) {\n-        ProvisioningResult<?> created = logic.remedy(key, anyTO, isNullPriorityAsync());\n+    public Response remedy(final String remediationKey, final AnyTO anyTO) {\n+        ProvisioningResult<?> created = logic.remedy(remediationKey, anyTO, isNullPriorityAsync());\n         return createResponse(created);\n     }\n \n@@ -97,18 +97,18 @@ private void check(final String key, final String anyKey) {\n     }\n \n     @Override\n-    public Response remedy(final String key, final AnyPatch anyPatch) {\n-        check(key, anyPatch.getKey());\n+    public Response remedy(final String remediationKey, final AnyPatch anyPatch) {\n+        check(remediationKey, anyPatch.getKey());\n \n-        ProvisioningResult<?> updated = logic.remedy(key, anyPatch, isNullPriorityAsync());\n+        ProvisioningResult<?> updated = logic.remedy(remediationKey, anyPatch, isNullPriorityAsync());\n         return modificationResponse(updated);\n     }\n \n     @Override\n-    public Response remedy(final String key, final String anyKey) {\n-        check(key, anyKey);\n+    public Response remedy(final String remediationKey, final String anyKey) {\n+        check(remediationKey, anyKey);\n \n-        ProvisioningResult<?> deleted = logic.remedy(key, anyKey, isNullPriorityAsync());\n+        ProvisioningResult<?> deleted = logic.remedy(remediationKey, anyKey, isNullPriorityAsync());\n         return modificationResponse(deleted);\n     }\n "},{"sha":"07605670750961674120dc173232012782e653af","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n@@ -79,6 +82,8 @@ CamelRouteTO read(\n      * @param anyTypeKind any type kind\n      * @param route to be updated\n      */\n+    @Parameter(name = \"key\", description = \"Camel route's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"},{"sha":"b04cc2717e5ddfc0c0fed3a9290c2aa531191af6","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2IdPService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c66c373ae28e6d404f7a0156d493a27f5980b21a/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c66c373ae28e6d404f7a0156d493a27f5980b21a/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java?ref=c66c373ae28e6d404f7a0156d493a27f5980b21a","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n@@ -96,6 +99,8 @@ public interface SAML2IdPService extends JAXRSService {\n      *\n      * @param saml2IdpTO idp configuration to be stored\n      */\n+    @Parameter(name = \"key\", description = \"IdP's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT"}]}