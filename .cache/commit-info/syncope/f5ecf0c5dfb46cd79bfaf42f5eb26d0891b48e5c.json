{"sha":"f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1ZWNmMGM1ZGZiNDZjZDc5YmZhZjQyZjVlYjI2ZDA4OTFiNDhlNWM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-10T16:11:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-10T16:11:04Z"},"message":"(Fixes issue #82)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246777 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1777540e2973f0abe9657a2e8d0b057e2a68aedf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1777540e2973f0abe9657a2e8d0b057e2a68aedf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/comments","author":null,"committer":null,"parents":[{"sha":"cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69"}],"stats":{"total":1259,"additions":438,"deletions":821},"files":[{"sha":"5925aad3cc83da3eafdd8e67b186d2a65fc489f1","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -16,9 +16,13 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n \n+@JsonIgnoreProperties({\"displayName\", \"empty\"})\n public class RoleTO extends AbstractAttributableTO {\n \n+    static private final String EMPTY = \"\";\n+\n     private String name;\n \n     private long parent;\n@@ -85,4 +89,12 @@ public void setEntitlements(List<String> entitlements) {\n             this.entitlements.addAll(entitlements);\n         }\n     }\n+\n+    public String getDisplayName() {\n+        return getId() + \" \" + getName();\n+    }\n+\n+    public String getEmpty() {\n+        return EMPTY;\n+    }\n }"},{"sha":"329a96f1088d789ac8b0ae7fd16290157ca766ba","filename":"console/src/main/java/org/syncope/console/commons/RoleTreeBuilder.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -0,0 +1,93 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreeModel;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.syncope.client.to.RoleTO;\n+import org.syncope.console.rest.RoleRestClient;\n+\n+public class RoleTreeBuilder {\n+\n+    @Autowired\n+    private RoleRestClient restClient;\n+\n+    private RoleTOComparator comparator = new RoleTOComparator();\n+\n+    private List<RoleTO> getChildRoles(final long parentRoleId,\n+            final List<RoleTO> roles) {\n+\n+        List<RoleTO> result = new ArrayList<RoleTO>();\n+        for (RoleTO role : roles) {\n+            if (role.getParent() == parentRoleId) {\n+                result.add(role);\n+            }\n+        }\n+\n+        Collections.sort(result, comparator);\n+        return result;\n+    }\n+\n+    private void populateSubtree(final DefaultMutableTreeNode subRoot,\n+            final List<RoleTO> roles) {\n+\n+        RoleTO role = (RoleTO) subRoot.getUserObject();\n+\n+        DefaultMutableTreeNode child;\n+        for (RoleTO subRoleTO : getChildRoles(role.getId(), roles)) {\n+            child = new DefaultMutableTreeNode(subRoleTO);\n+            subRoot.add(child);\n+            populateSubtree(child, roles);\n+        }\n+    }\n+\n+    public TreeModel build() {\n+        return build(restClient.getAllRoles());\n+    }\n+\n+    public TreeModel build(final List<RoleTO> roles) {\n+        RoleTO fakerootTO = new RoleTO();\n+        fakerootTO.setId(0);\n+        fakerootTO.setName(\"\");\n+        fakerootTO.setParent(-1);\n+        DefaultMutableTreeNode fakeroot =\n+                new DefaultMutableTreeNode(fakerootTO);\n+\n+        populateSubtree(fakeroot, roles);\n+\n+        return new DefaultTreeModel(fakeroot);\n+    }\n+\n+    private class RoleTOComparator implements Comparator<RoleTO> {\n+\n+        @Override\n+        public int compare(final RoleTO r1, final RoleTO r2) {\n+            if (r1.getId() < r2.getId()) {\n+                return -1;\n+            }\n+            if (r1.getId() == r2.getId()) {\n+                return 0;\n+            }\n+\n+            return 1;\n+        }\n+    }\n+}"},{"sha":"69ef33aaec6f1aa9576e3f7b5b7be2b33c1b7de7","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":17,"deletions":25,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -351,34 +351,24 @@ protected void onSubmit(final AjaxRequestTarget target,\n \n                     if (createFlag) {\n                         roleRestClient.createRole(roleTO);\n-\n-                        Roles callerPage = (Roles) basePage;\n-                        callerPage.setOperationResult(true);\n-\n-                        window.close(target);\n                     } else {\n                         setupRoleMod(roleTO);\n-                        //Update role just if it is changed\n                         if (roleMod != null) {\n-                            LOG.debug(\"Rolemod is {}\", roleMod);\n-                            res = roleRestClient.updateRole(roleMod);\n-                            if (!res) {\n-                                error(getString(\"error\"));\n-                            } else {\n-                                Roles callerPage = (Roles) basePage;\n-                                callerPage.setOperationResult(true);\n-                            }\n+                            roleRestClient.updateRole(roleMod);\n                         }\n-                        window.close(target);\n                     }\n+                    ((Roles) basePage).setOperationResult(true);\n \n+                    window.close(target);\n                 } catch (Exception e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());\n                 }\n             }\n \n             @Override\n-            protected void onError(AjaxRequestTarget target, Form form) {\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n                 target.addComponent(feedbackPanel);\n             }\n         };\n@@ -523,8 +513,9 @@ public void cloneOldRoleTO(RoleTO roleTO) {\n \n         List<String> entList = new ArrayList<String>();\n \n-        for(String entitlement : roleTO.getEntitlements())\n+        for (String entitlement : roleTO.getEntitlements()) {\n             entList.add(entitlement);\n+        }\n \n         oldRole.setEntitlements(entList);\n     }\n@@ -551,22 +542,23 @@ public void setupRoleMod(final RoleTO roleTO) {\n         }\n \n         //4.Check if entitlements' list has been changed\n-        if(!oldRole.getEntitlements().equals(roleTO.getEntitlements()))\n-           roleMod.setEntitlements(roleTO.getEntitlements());\n+        if (!oldRole.getEntitlements().equals(roleTO.getEntitlements())) {\n+            roleMod.setEntitlements(roleTO.getEntitlements());\n+        }\n \n         if (roleMod != null) {\n             roleMod.setId(oldRole.getId());\n \n-            if(!oldRole.getEntitlements().equals(roleTO.getEntitlements())){\n+            if (!oldRole.getEntitlements().equals(roleTO.getEntitlements())) {\n \n-               LOG.debug(\"OLD ROLE ENT LIST: {}\", oldRole.getEntitlements());\n+                LOG.debug(\"OLD ROLE ENT LIST: {}\", oldRole.getEntitlements());\n \n-               LOG.debug(\"ROLE ENT LIST: {}\", roleTO.getEntitlements());\n+                LOG.debug(\"ROLE ENT LIST: {}\", roleTO.getEntitlements());\n \n-               roleMod.setEntitlements(roleTO.getEntitlements());\n-            }\n-            else\n+                roleMod.setEntitlements(roleTO.getEntitlements());\n+            } else {\n                 roleMod.setEntitlements(oldRole.getEntitlements());\n+            }\n         }\n     }\n "},{"sha":"0771646fe088f21df3f9e82141d1a4d9cd3f0161","filename":"console/src/main/java/org/syncope/console/pages/Roles.java","status":"modified","additions":20,"deletions":32,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -28,16 +28,15 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.tree.AbstractTree;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.console.rest.RoleRestClient;\n-import org.syncope.console.wicket.markup.html.tree.SyncopeRoleTree;\n+import org.syncope.console.commons.RoleTreeBuilder;\n \n /**\n  * Roles WebPage.\n  */\n public class Roles extends BasePage {\n \n     @SpringBean\n-    private RoleRestClient restClient;\n+    private RoleTreeBuilder roleTreeBuilder;\n \n     private TreeTable tree;\n \n@@ -49,12 +48,12 @@ public class Roles extends BasePage {\n \n     private WebMarkupContainer container;\n \n-    /*\n-    Response flag set by the Modal Window after the operation is completed\n+    /**\n+     * Response flag set by the Modal Window after the operation is completed.\n      */\n     private boolean operationResult = false;\n \n-    public Roles(PageParameters parameters) {\n+    public Roles(final PageParameters parameters) {\n         super(parameters);\n \n         add(createRoleWin = new ModalWindow(\"createRoleWin\"));\n@@ -67,20 +66,22 @@ public Roles(PageParameters parameters) {\n \n         container = new WebMarkupContainer(\"container\");\n \n-        IColumn columns[] = new IColumn[]{\n-            new PropertyTreeColumn(new ColumnLocation(Alignment.LEFT, 30,\n-            Unit.EM), getString(\"column1\"), \"userObject.treeNode.displayName\"),\n-            new PropertyEditableColumn(new ColumnLocation(Alignment.LEFT, 20,\n-            Unit.EM), getString(\"column2\"), \"userObject.title\", createRoleWin,\n-            Roles.this),};\n+        IColumn[] columns = new IColumn[]{\n+            new PropertyTreeColumn(\n+            new ColumnLocation(Alignment.LEFT, 30, Unit.EM),\n+            getString(\"column1\"),\n+            \"userObject.displayName\"),\n+            new PropertyEditableColumn(\n+            new ColumnLocation(Alignment.LEFT, 20, Unit.EM),\n+            getString(\"column2\"),\n+            \"userObject.empty\",\n+            createRoleWin,\n+            Roles.this)};\n \n         Form form = new Form(\"form\");\n         add(form);\n \n-        SyncopeRoleTree roleTree = new SyncopeRoleTree(restClient);\n-\n-        tree = new TreeTable(\"treeTable\", roleTree.createTreeModel(),\n-                columns);\n+        tree = new TreeTable(\"treeTable\", roleTreeBuilder.build(), columns);\n \n         form.add(tree);\n         tree.getTreeState().expandAll();\n@@ -91,21 +92,11 @@ public Roles(PageParameters parameters) {\n \n         form.add(container);\n \n-        setWindowClosedCallback(createRoleWin, container);\n-    }\n-\n-    /**\n-     * Set a WindowClosedCallback for a ModalWindow instance.\n-     * @param window\n-     * @param container\n-     */\n-    public void setWindowClosedCallback(ModalWindow window,\n-            final WebMarkupContainer container) {\n-\n-        window.setWindowClosedCallback(\n+        createRoleWin.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n-                    public void onClose(AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n                         target.addComponent(container);\n \n                         if (operationResult) {\n@@ -117,9 +108,6 @@ public void onClose(AjaxRequestTarget target) {\n                 });\n     }\n \n-    /**\n-     * @see BaseTreePage#getTree()\n-     */\n     protected AbstractTree getTree() {\n         return tree;\n     }"},{"sha":"e847c1d5c1c7e1d1d1c37b2a17a3f42107c909af","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":66,"deletions":121,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -24,10 +24,9 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n-import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n import javax.swing.tree.DefaultMutableTreeNode;\n import org.apache.wicket.Component;\n@@ -71,6 +70,7 @@\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.commons.RoleTreeBuilder;\n import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n@@ -79,8 +79,6 @@\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n-import org.syncope.console.wicket.markup.html.tree.SyncopeRoleTree;\n-import org.syncope.console.wicket.markup.html.tree.TreeModelBean;\n import org.syncope.types.SchemaType;\n \n /**\n@@ -106,6 +104,9 @@ public class UserModalPage extends BaseModalPage {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n+    @SpringBean\n+    private RoleTreeBuilder roleTreeBuilder;\n+\n     private WebMarkupContainer container;\n \n     private WebMarkupContainer membershipsContainer;\n@@ -122,8 +123,6 @@ public class UserModalPage extends BaseModalPage {\n \n     private UserMod userMod;\n \n-    private Map rolesMap;\n-\n     /**\n      *\n      * @param basePage base\n@@ -138,8 +137,6 @@ public UserModalPage(final BasePage basePage, final ModalWindow window,\n             cloneOldUserTO(userTO);\n         }\n \n-        setupRolesMap();\n-\n         createUserWin = new ModalWindow(\"membershipWin\");\n         createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createUserWin.setPageMapName(\"create-membership-modal\");\n@@ -421,51 +418,37 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         userForm.add(submit);\n \n-//Roles Tab\n-        SyncopeRoleTree roleTree = new SyncopeRoleTree(roleRestClient);\n-\n-        BaseTree tree;\n-\n-        tree = new LinkTree(\"treeTable\", roleTree.createTreeModel()) {\n+        // Roles Tab\n+        final List<RoleTO> roles = roleRestClient.getAllRoles();\n+        BaseTree tree = new LinkTree(\"treeTable\",\n+                roleTreeBuilder.build(roles)) {\n \n             @Override\n-            protected IModel<Object> getNodeTextModel(IModel<Object> model) {\n-                return new PropertyModel(model,\n-                        \"userObject.treeNode.displayName\");\n+            protected IModel getNodeTextModel(final IModel model) {\n+                return new PropertyModel(model, \"userObject.displayName\");\n             }\n \n             @Override\n             protected void onNodeLinkClicked(final Object node,\n                     final BaseTree tree, final AjaxRequestTarget target) {\n \n-                DefaultMutableTreeNode syncopeTreeNode =\n-                        (DefaultMutableTreeNode) node;\n-                final TreeModelBean treeModel = (TreeModelBean) syncopeTreeNode.\n+                final RoleTO roleTO = (RoleTO) ((DefaultMutableTreeNode) node).\n                         getUserObject();\n \n-                if (treeModel.getTreeNode() != null) {\n-\n-                    createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n+                createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                        private MembershipTO membershipTO;\n+                    private MembershipTO membershipTO;\n \n-                        @Override\n-                        public Page createPage() {\n-\n-                            membershipTO = new MembershipTO();\n-                            membershipTO.setRoleId(\n-                                    treeModel.getTreeNode().getId());\n-                            String title = treeModel.getTreeNode().getName();\n-\n-                            MembershipModalPage form =\n-                                    new MembershipModalPage(getPage(),\n-                                    createUserWin, membershipTO, true);\n+                    @Override\n+                    public Page createPage() {\n+                        membershipTO = new MembershipTO();\n+                        membershipTO.setRoleId(roleTO.getId());\n \n-                            return form;\n-                        }\n-                    });\n-                    createUserWin.show(target);\n-                }\n+                        return new MembershipModalPage(getPage(),\n+                                createUserWin, membershipTO, true);\n+                    }\n+                });\n+                createUserWin.show(target);\n             }\n         };\n \n@@ -482,12 +465,10 @@ protected void populateItem(final ListItem item) {\n                 final MembershipTO membershipTO =\n                         (MembershipTO) item.getDefaultModelObject();\n \n-                item.add(\n-                        new Label(\"roleId\", new Model(\n+                item.add(new Label(\"roleId\", new Model(\n                         membershipTO.getRoleId())));\n-                item.add(new Label(\"roleName\",\n-                        new Model((String) rolesMap.get(\n-                        membershipTO.getRoleId()))));\n+                item.add(new Label(\"roleName\", new Model(\n+                        getRoleName(membershipTO.getRoleId(), roles))));\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n@@ -537,12 +518,23 @@ public void onClick(AjaxRequestTarget target) {\n         add(userForm);\n     }\n \n-    /**\n-     * Originals : user's resources\n-     * @param userTO\n-     * @return\n-     */\n-    public List<ResourceTO> getSelectedResources(UserTO userTO) {\n+    private String getRoleName(long roleId, List<RoleTO> roles) {\n+        boolean found = false;\n+        RoleTO roleTO;\n+        String result = null;\n+        for (Iterator<RoleTO> itor = roles.iterator();\n+                itor.hasNext() && !found;) {\n+\n+            roleTO = itor.next();\n+            if (roleTO.getId() == roleId) {\n+                result = roleTO.getName();\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    private List<ResourceTO> getSelectedResources(final UserTO userTO) {\n         List<ResourceTO> resources = new ArrayList<ResourceTO>();\n         ResourceTO clusterableResourceTO;\n \n@@ -554,13 +546,7 @@ public List<ResourceTO> getSelectedResources(UserTO userTO) {\n         return resources;\n     }\n \n-    /**\n-     * Destinations : available resources\n-     * @param userTO\n-     * @return\n-     */\n-    public List<ResourceTO> getAvailableResources(UserTO userTO) {\n-\n+    private List<ResourceTO> getAvailableResources(final UserTO userTO) {\n         List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n         List<ResourceTO> resourcesTos = resourceRestClient.getAllResources();\n@@ -574,10 +560,9 @@ public List<ResourceTO> getAvailableResources(UserTO userTO) {\n \n     /**\n      * Create a copy of old userTO object.\n-     * @param userTO\n+     * @param userTO the original TO\n      */\n-    public void cloneOldUserTO(UserTO userTO) {\n-\n+    private void cloneOldUserTO(final UserTO userTO) {\n         oldUser = new UserTO();\n \n         oldUser.setId(userTO.getId());\n@@ -611,44 +596,19 @@ public void cloneOldUserTO(UserTO userTO) {\n         }\n     }\n \n-    /**\n-     * Populate a roles hashmap of type (roleId,roleName)\n-     */\n-    public void setupRolesMap() {\n-\n-        rolesMap = new HashMap();\n-\n-        List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n-\n-        for (RoleTO roleTO : roleTOs) {\n-            rolesMap.put(roleTO.getId(), roleTO.getName());\n-        }\n-    }\n-\n-    /**\n-     * Set a WindowClosedCallback for a ModalWindow instance.\n-     * @param window\n-     * @param container\n-     */\n-    public void setWindowClosedCallback(ModalWindow window,\n+    private void setWindowClosedCallback(final ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n-                    public void onClose(AjaxRequestTarget target) {\n+                    public void onClose(final AjaxRequestTarget target) {\n                         target.addComponent(container);\n                     }\n                 });\n     }\n \n-    /**\n-     * Initialize the SchemaWrapper collection\n-     * @param create\n-     * @param userTO\n-     */\n-    public void setupSchemaWrappers(boolean create, UserTO userTO) {\n-\n+    private void setupSchemaWrappers(boolean create, final UserTO userTO) {\n         schemaWrappers = new ArrayList<SchemaWrapper>();\n         SchemaWrapper schemaWrapper;\n \n@@ -683,13 +643,7 @@ public void setupSchemaWrappers(boolean create, UserTO userTO) {\n         }\n     }\n \n-    /**\n-     * Initialize the membershipTOs\n-     * @param creation flag: true if a new User is being created, false otherwise\n-     * @param userTO object\n-     */\n-    public void setupMemberships(boolean create, UserTO userTO) {\n-\n+    private void setupMemberships(final boolean create, final UserTO userTO) {\n         membershipTOs = new ArrayList<MembershipTO>();\n \n         if (!create) {\n@@ -701,19 +655,12 @@ public void setupMemberships(boolean create, UserTO userTO) {\n         }\n     }\n \n-    /**\n-     * Initialize the user's attributes\n-     * @param creation flag: true if a new User is being created, false otherwise\n-     * @param userTO object\n-     */\n-    public List<AttributeTO> getUserAttributesList() {\n-\n+    private List<AttributeTO> getUserAttributesList() {\n         List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n         AttributeTO attribute;\n \n         for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-\n             attribute = new AttributeTO();\n             attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n             attribute.setValues(new ArrayList<String>());\n@@ -733,8 +680,7 @@ public List<AttributeTO> getUserAttributesList() {\n      * Convert a memberships ArrayList in a memberships HashSet list.\n      * @return Set<MembershipTO> selected for a new user.\n      */\n-    public List<MembershipTO> getMembershipsSet() {\n-\n+    private List<MembershipTO> getMembershipsSet() {\n         List<MembershipTO> memberships = new ArrayList<MembershipTO>();\n \n         for (MembershipTO membership : membershipTOs) {\n@@ -748,7 +694,7 @@ public List<MembershipTO> getMembershipsSet() {\n      * Covert a resources List<String> to Set<String>.\n      * @return Set<String>\n      */\n-    public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n+    private Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n         Set<String> resourcesSet = new HashSet<String>();\n \n         for (ResourceTO resourceTO : resourcesList) {\n@@ -762,17 +708,15 @@ public List<MembershipTO> getMembershipTOs() {\n         return membershipTOs;\n     }\n \n-    public void setMembershipTOs(List<MembershipTO> membershipTOs) {\n+    private void setMembershipTOs(List<MembershipTO> membershipTOs) {\n         this.membershipTOs = membershipTOs;\n     }\n \n     /**\n      * Updates the modified user object.\n-     * @param updated userTO\n-     * @return\n+     * @param userTO\n      */\n-    public void setupUserMod(UserTO userTO) {\n-\n+    private void setupUserMod(final UserTO userTO) {\n         //1.Check if the password has been changed and update it\n         if (!oldUser.getPassword().equals(userTO.getPassword())) {\n             userMod = new UserMod();\n@@ -808,7 +752,7 @@ public void setupUserMod(UserTO userTO) {\n         }\n     }\n \n-    public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n+    private void searchAndUpdateAttribute(AttributeTO attributeTO) {\n         boolean found = false;\n         boolean changed = false;\n \n@@ -863,13 +807,13 @@ public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n     /**\n      * Search for a resource and add that one to the UserMod object if\n      * it doesn't exist.\n-     * @param resource, new resource added\n+     * @param resource new resource added\n      */\n-    public void searchAndAddResource(String resource) {\n+    private void searchAndAddResource(final String resource) {\n         boolean found = false;\n \n-        /* Check if the current resource was existent before the update and in this\n-        case just ignore it */\n+        /* Check if the current resource was existent before the update\n+        and in this        case just ignore it */\n         for (String oldResource : oldUser.getResources()) {\n             if (resource.equals(oldResource)) {\n                 found = true;\n@@ -891,7 +835,7 @@ public void searchAndAddResource(String resource) {\n      * @param resource\n      * @param userTO\n      */\n-    public void searchAndDropResource(String resource, UserTO userTO) {\n+    private void searchAndDropResource(String resource, UserTO userTO) {\n         boolean found = false;\n \n         /*Check if the current resource was existent before the update and in this\n@@ -914,7 +858,7 @@ public void searchAndDropResource(String resource, UserTO userTO) {\n      * Update the Membership.\n      * @param new membershipTO\n      */\n-    public void searchAndUpdateMembership(MembershipTO newMembership) {\n+    private void searchAndUpdateMembership(MembershipTO newMembership) {\n         boolean found = false;\n         boolean attrFound = false;\n \n@@ -994,8 +938,9 @@ public void searchAndUpdateMembership(MembershipTO newMembership) {\n      * @param membershipTO\n      * @param userTO\n      */\n-    public void searchAndDropMembership(MembershipTO oldMembership,\n-            UserTO userTO) {\n+    private void searchAndDropMembership(final MembershipTO oldMembership,\n+            final UserTO userTO) {\n+\n         boolean found = false;\n \n         /*Check if the current resource was existent before the update and"},{"sha":"2f63d11f668883b6c2f6666bf02052e820103606","filename":"console/src/main/java/org/syncope/console/rest/RoleRestClient.java","status":"modified","additions":8,"deletions":25,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -51,12 +51,8 @@ public List<RoleTO> getAllRoles()\n      * @param roleTO\n      */\n     public void createRole(RoleTO roleTO) {\n-        try {\n-            restTemplate.postForObject(\n-                    baseURL + \"role/create\", roleTO, RoleTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a role\", e);\n-        }\n+        restTemplate.postForObject(\n+                baseURL + \"role/create\", roleTO, RoleTO.class);\n     }\n \n     /**\n@@ -82,19 +78,10 @@ public RoleTO readRole(Long id) {\n      * @param roleTO updated\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n-    public boolean updateRole(RoleMod roleMod) {\n-        RoleTO newRoleTO = null;\n-\n-        try {\n-            newRoleTO = restTemplate.postForObject(\n-                    baseURL + \"role/update\", roleMod,\n-                    RoleTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a role\", e);\n-            return false;\n-        }\n-\n-        return true;\n+    public void updateRole(RoleMod roleMod) {\n+        restTemplate.postForObject(\n+                baseURL + \"role/update\", roleMod,\n+                RoleTO.class);\n     }\n \n     /**\n@@ -103,11 +90,7 @@ public boolean updateRole(RoleMod roleMod) {\n      * @return schemaTO\n      */\n     public void deleteRole(Long id) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"role/delete/{roleId}.json\", id);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a role\", e);\n-        }\n+        restTemplate.delete(baseURL\n+                + \"role/delete/{roleId}.json\", id);\n     }\n }"},{"sha":"31f4f6afa935e5e78f9ad89e7694c16ef320294c","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":18,"deletions":32,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,38 +18,24 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-/**\n- * AjaxCheckBoxPanel\n- */\n public class AjaxCheckBoxPanel extends Panel {\n-    /**\n-     * Build a AjaxCheckBoxPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     */\n-    public AjaxCheckBoxPanel(String id, String name, IModel<Boolean> model,\n-                             boolean required) {\n-        super(id,model);\n-\n-        add(new UpdatingCheckBox(\"checkboxField\", model)\n-                .setLabel(new Model(name)));\n+\n+    public AjaxCheckBoxPanel(final String id, final String name,\n+            final IModel<Boolean> model, boolean required) {\n+\n+        super(id, model);\n+\n+        add(new UpdatingCheckBox(\"checkboxField\", model).setLabel(\n+                new Model(name)));\n     }\n \n-    /**\n-     * Build a AjaxCheckBoxPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     * @param readonly flag\n-     */\n-    public AjaxCheckBoxPanel(String id, String name, IModel<Boolean> model,\n-                             boolean required,boolean readonly) {\n-        super(id,model);\n-\n-        add(new UpdatingCheckBox(\"checkboxField\", model)\n-                .setLabel(new Model(name)).setEnabled(!readonly));\n+    public AjaxCheckBoxPanel(final String id, final String name,\n+            final IModel<Boolean> model,\n+            final boolean required, final boolean readonly) {\n+\n+        super(id, model);\n+\n+        add(new UpdatingCheckBox(\"checkboxField\", model).setLabel(\n+                new Model(name)).setEnabled(!readonly));\n     }\n }"},{"sha":"bb1ce4a57bee2d31ecd46358e41d954b2147de1c","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":29,"deletions":39,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,47 +21,37 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-\n public class AjaxDropDownChoicePanel extends Panel {\n-   /**\n-     * Build AjaxTextFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     */\n-    public AjaxDropDownChoicePanel(String id,String name,IModel model,List choices,\n-            IChoiceRenderer renderer,boolean required) {\n-        super(id,model);\n \n-        if(required)\n-            add(new Label(\"required\",\"*\"));\n-        else\n-            add(new Label(\"required\",\"\"));\n-        \n-        add(new UpdatingDropDownChoice(\"dropDownChoiceField\",model,choices,renderer)\n-                .setRequired(required).setLabel(new Model(name)));\n+    public AjaxDropDownChoicePanel(final String id, final String name,\n+            final IModel model, final List choices,\n+            final IChoiceRenderer renderer, final boolean required) {\n+\n+        super(id, model);\n+\n+        if (required) {\n+            add(new Label(\"required\", \"*\"));\n+        } else {\n+            add(new Label(\"required\", \"\"));\n+        }\n+\n+        add(new UpdatingDropDownChoice(\"dropDownChoiceField\", model, choices,\n+                renderer).setRequired(required).setLabel(new Model(name)));\n     }\n \n-    /**\n-     * Build AjaxTextFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     * @param readonly flag\n-     */\n-    public AjaxDropDownChoicePanel(String id,String name,IModel model,\n-                              boolean required,boolean readonly) {\n-        super(id,model);\n+    public AjaxDropDownChoicePanel(final String id, final String name,\n+            final IModel model,\n+            final boolean required, final boolean readonly) {\n+\n+        super(id, model);\n \n-        if(required)\n-            add(new Label(\"required\",\"*\"));\n-        else\n-            add(new Label(\"required\",\"\"));\n+        if (required) {\n+            add(new Label(\"required\", \"*\"));\n+        } else {\n+            add(new Label(\"required\", \"\"));\n+        }\n \n-        add(new UpdatingTextField(\"dropDownChoiceField\", model)\n-                .setRequired(required).setLabel(new Model(name))\n-                .setEnabled(!readonly));\n+        add(new UpdatingTextField(\"dropDownChoiceField\", model).setRequired(\n+                required).setLabel(new Model(name)).setEnabled(!readonly));\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"178d4ee94febecebaf86ba6b9711d929357580b6","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":28,"deletions":39,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -19,47 +19,36 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-\n public class AjaxTextFieldPanel extends Panel {\n-   /**\n-     * Build AjaxTextFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     */\n-    public AjaxTextFieldPanel(String id,String name,IModel model,\n-                              boolean required) {\n-        super(id,model);\n \n-        if(required)\n-            add(new Label(\"required\",\"*\"));\n-        else\n-            add(new Label(\"required\",\"\"));\n-        \n-        add(new UpdatingTextField(\"textField\", model).setRequired(required)\n-                                 .setLabel(new Model(name)));\n+    public AjaxTextFieldPanel(final String id, final String name,\n+            final IModel model, final boolean required) {\n+\n+        super(id, model);\n+\n+        if (required) {\n+            add(new Label(\"required\", \"*\"));\n+        } else {\n+            add(new Label(\"required\", \"\"));\n+        }\n+\n+        add(new UpdatingTextField(\"textField\", model).setRequired(required).\n+                setLabel(new Model(name)));\n     }\n \n-    /**\n-     * Build AjaxTextFieldPanel.\n-     * @param component id\n-     * @param label name\n-     * @param IModel<?> object\n-     * @param required flag\n-     * @param readonly flag\n-     */\n-    public AjaxTextFieldPanel(String id,String name,IModel model,\n-                              boolean required,boolean readonly) {\n-        super(id,model);\n+    public AjaxTextFieldPanel(final String id, final String name,\n+            final IModel model,\n+            final boolean required, final boolean readonly) {\n+\n+        super(id, model);\n \n-        if(required)\n-            add(new Label(\"required\",\"*\"));\n-        else\n-            add(new Label(\"required\",\"\"));\n+        if (required) {\n+            add(new Label(\"required\", \"*\"));\n+        } else {\n+            add(new Label(\"required\", \"\"));\n+        }\n \n-        add(new UpdatingTextField(\"textField\", model).setRequired(required)\n-                                 .setLabel(new Model(name))\n-                                 .setEnabled(!readonly));\n+        add(new UpdatingTextField(\"textField\", model).setRequired(required).\n+                setLabel(new Model(name)).setEnabled(!readonly));\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"83127debb7c5c74a4a09c85654f27ea65652b788","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":38,"deletions":46,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -1,10 +1,10 @@\n-/* \n+/*\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -31,24 +31,14 @@\n import org.apache.wicket.validation.IValidationError;\n import org.apache.wicket.validation.ValidationError;\n import org.apache.wicket.datetime.markup.html.form.DateTextField;\n-//import org.apache.wicket.extensions.markup.html.form.DateTextField;\n-/**\n- * DateFieldPanel\n- */\n+\n public class DateFieldPanel extends Panel {\n-    /**\n-     *\n-     * @param id wicket id\n-     * @param name component name\n-     * @param model model object\n-     * @param datePattern schema attribute date pattern defined for it\n-     * @param required TRUE if it is required, FALSE otherwise\n-     * @param readonly TRUE if it can't be valued, FALSE otherwise\n-     * @param form form where it will be included\n-     */\n-    public DateFieldPanel(String id, String name ,final IModel<Date> model,\n-            final String datePattern, boolean required,boolean readonly,\n-            Form form) {\n+\n+    public DateFieldPanel(final String id, final String name,\n+            final IModel<Date> model, final String datePattern,\n+            final boolean required, final boolean readonly,\n+            final Form form) {\n+\n         super(id, model);\n \n         if (required) {\n@@ -59,42 +49,43 @@ public DateFieldPanel(String id, String name ,final IModel<Date> model,\n \n         Fragment datePanel = null;\n \n-        if(!datePattern.contains(\"H\")) {\n-            datePanel = new Fragment(\"datePanel\",\"dateField\",this);\n+        if (!datePattern.contains(\"H\")) {\n+            datePanel = new Fragment(\"datePanel\", \"dateField\", this);\n \n-           DateTextField field = DateTextField.forDatePattern(\"field\", model,\n-                   datePattern);\n+            DateTextField field = DateTextField.forDatePattern(\"field\", model,\n+                    datePattern);\n \n             field.add(getDatePicker());\n \n             field.setEnabled(!readonly);\n             field.setLabel(new Model(name));\n \n-            field.add( new AjaxFormComponentUpdatingBehavior( \"onblur\" ) {\n-            protected void onUpdate( AjaxRequestTarget target ) {\n-            }\n-            } );\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-            datePanel.add(field);\n-        }\n+                protected void onUpdate(AjaxRequestTarget target) {\n+                }\n+            });\n \n-        else {\n-            datePanel = new Fragment(\"datePanel\",\"dateTimeField\",this);\n+            datePanel.add(field);\n+        } else {\n+            datePanel = new Fragment(\"datePanel\", \"dateTimeField\", this);\n \n             DateTimeField field = new DateTimeField(\"field\", model);\n \n             field.setEnabled(!readonly);\n             field.setLabel(new Model(name));\n \n-            field.add( new AjaxFormComponentUpdatingBehavior( \"onblur\" ) {\n-            protected void onUpdate( AjaxRequestTarget target )  {\n-            }\n-            } );\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+                protected void onUpdate(AjaxRequestTarget target) {\n+                }\n+            });\n \n             datePanel.add(field);\n \n-            if(required)\n+            if (required) {\n                 form.add(new DateTimeFormValidator(field));\n+            }\n         }\n \n         add(datePanel);\n@@ -103,9 +94,8 @@ protected void onUpdate( AjaxRequestTarget target )  {\n     /**\n      * Setup a DatePicker component.\n      */\n-    public DatePicker getDatePicker(){\n-\n-        DatePicker picker = new DatePicker(){\n+    public DatePicker getDatePicker() {\n+        final DatePicker picker = new DatePicker() {\n \n             @Override\n             protected boolean enableMonthYearSelection() {\n@@ -123,17 +113,19 @@ protected boolean enableMonthYearSelection() {\n      * components that are in it.\n      */\n     public class DateTimeFormValidator extends AbstractFormValidator {\n+\n         private FormComponent[] dateTimeComponents;\n \n         public DateTimeFormValidator(DateTimeField dateTimeComponent) {\n-            if(dateTimeComponent == null)\n+            if (dateTimeComponent == null) {\n                 throw new IllegalArgumentException(\n-\t\t\t\t\t\"argument dateTimeComponent cannot \" +\n-                                        \"be null\");\n+                        \"argument dateTimeComponent cannot \"\n+                        + \"be null\");\n+            }\n \n-            dateTimeComponents = new FormComponent[] {dateTimeComponent};\n+            dateTimeComponents = new FormComponent[]{dateTimeComponent};\n         }\n-        \n+\n         @Override\n         public FormComponent[] getDependentFormComponents() {\n             return dateTimeComponents;\n@@ -177,4 +169,4 @@ public void validate(Form form) {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"5559572331a837a5e7de5fc8a2dfbbb05505f5dd","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DeleteLinkPanel.java","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -1,10 +1,10 @@\n-/* \n+/*\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -17,16 +17,9 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n \n-/**\n- * EditLinkPanel\n- */\n public class DeleteLinkPanel extends Panel {\n \n-    /**\n-     * @param component id\n-     * @param model for configuration\n-     */\n-    public DeleteLinkPanel(String componentId, IModel<?> model) {\n+    public DeleteLinkPanel(final String componentId, final IModel<?> model) {\n         super(componentId, model);\n     }\n }"},{"sha":"fb0b9913ea3611c39537903855b45f719f3ea4cb","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/EditLinkPanel.java","status":"modified","additions":3,"deletions":12,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -1,12 +1,10 @@\n /*\n- *  Copyright 2010 luis.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -19,16 +17,9 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n \n-/**\n- * EditLinkPanel\n- */\n public class EditLinkPanel extends Panel {\n \n-    /**\n-     * @param component id\n-     * @param model for configuration\n-     */\n-    public EditLinkPanel(String componentId, IModel<?> model) {\n+    public EditLinkPanel(final String componentId, final IModel<?> model) {\n         super(componentId, model);\n     }\n }"},{"sha":"65f6e13f7399fd640858344004390dbd82e514db","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/LinkPanel.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,16 +16,9 @@\n \n import org.apache.wicket.markup.html.panel.Panel;\n \n-/**\n- * Generic LinkPanel (it's purposed for Edit, Delete, View, Execute actions)\n- */\n public class LinkPanel extends Panel {\n \n-    /**\n-     * @param markup id\n-     * @param link's title\n-     */\n-    public LinkPanel(String id) {\n+    public LinkPanel(final String id) {\n         super(id);\n     }\n }"},{"sha":"14d5004c672c3c5c900656ee6ff0bb17a77f7948","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingAutoCompleteTextField.java","status":"modified","additions":10,"deletions":14,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,40 +2,36 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.wicket.markup.html.form;\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.extensions.ajax.markup.html.autocomplete\n-        .AutoCompleteTextField;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.model.IModel;\n \n /**\n  * Extension class of AutoCompleteTextField. It's purposed for storing values in\n  * the corresponding property model after pressing 'Add' button.\n  */\n public abstract class UpdatingAutoCompleteTextField\n-                                                extends AutoCompleteTextField {\n+        extends AutoCompleteTextField {\n+\n+    public UpdatingAutoCompleteTextField(final String id, final IModel model) {\n+        super(id, model);\n+        add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-    public UpdatingAutoCompleteTextField(String id,IModel model) {\n-        super(id,model);\n-        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n-        {\n-            protected void onUpdate( AjaxRequestTarget target )\n-            {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n             }\n-        } );\n+        });\n     }\n-\n }"},{"sha":"a46c3ad4c2c59232ee272f69adca77060bbc91b1","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingCheckBox.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingCheckBox.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingCheckBox.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingCheckBox.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,17 +2,16 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.wicket.markup.html.form;\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -23,14 +22,13 @@\n  * Extension class of CheckBox. It's purposed for storing values in the\n  * corresponding property model after pressing 'Add' button.\n  */\n- public class UpdatingCheckBox extends AjaxCheckBox\n- {\n-    public UpdatingCheckBox(String id, IModel<Boolean> model) {\n+public class UpdatingCheckBox extends AjaxCheckBox {\n+\n+    public UpdatingCheckBox(final String id, final IModel<Boolean> model) {\n         super(id, model);\n     }\n \n     @Override\n-    protected void onUpdate(AjaxRequestTarget target) {\n-\n+    protected void onUpdate(final AjaxRequestTarget target) {\n     }\n- }\n+}"},{"sha":"7d3c3466ce41b2a819c798024582551c2360e810","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingDropDownChoice.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingDropDownChoice.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingDropDownChoice.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingDropDownChoice.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,17 +2,16 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.wicket.markup.html.form;\n \n import java.util.List;\n@@ -27,26 +26,27 @@\n  * Extension class of DropDownChoice. It's purposed for storing values in the\n  * corresponding property model after pressing 'Add' button.\n  */\n- public class UpdatingDropDownChoice extends DropDownChoice\n- {\n-    public UpdatingDropDownChoice(String id, PropertyModel model, IModel imodel) {\n+public class UpdatingDropDownChoice extends DropDownChoice {\n+\n+    public UpdatingDropDownChoice(final String id, final PropertyModel model,\n+            final IModel imodel) {\n+\n         super(id, model, imodel);\n-        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n-        {\n-            protected void onUpdate( AjaxRequestTarget target )\n-            {\n+        add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            protected void onUpdate(final AjaxRequestTarget target) {\n             }\n-        } );\n+        });\n     }\n \n-     public UpdatingDropDownChoice(String id, IModel model,\n-             List choices, IChoiceRenderer renderer) {\n-        super(id, model, choices,renderer);\n-        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n-        {\n-            protected void onUpdate( AjaxRequestTarget target )\n-            {\n+    public UpdatingDropDownChoice(final String id, final IModel model,\n+            final List choices, final IChoiceRenderer renderer) {\n+\n+        super(id, model, choices, renderer);\n+        add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            protected void onUpdate(final AjaxRequestTarget target) {\n             }\n-        } );\n+        });\n     }\n- }\n\\ No newline at end of file\n+}"},{"sha":"aa16707b6d896c5c72d01f820d14fab76336fb90","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingTextField.java","status":"modified","additions":16,"deletions":20,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,17 +2,16 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.wicket.markup.html.form;\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -24,28 +23,25 @@\n  * Extension class of TextField. It's purposed for storing values in the\n  * corresponding property model after pressing 'Add' button.\n  */\n-public class UpdatingTextField extends TextField\n-{\n+public class UpdatingTextField extends TextField {\n+\n+    public UpdatingTextField(final String id, final IModel model,\n+            final Class type) {\n \n-    public UpdatingTextField(String id, IModel model, Class type) {\n         super(id, model, type);\n-        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n-        {\n-            protected void onUpdate( AjaxRequestTarget target )\n-            {\n+        add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            protected void onUpdate(final AjaxRequestTarget target) {\n             }\n-        } );\n+        });\n     }\n \n+    public UpdatingTextField(final String id, final IModel model) {\n+        super(id, model);\n+        add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-    public UpdatingTextField( String id, IModel model )\n-    {\n-        super( id, model );\n-        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n-        {\n-            protected void onUpdate( AjaxRequestTarget target )\n-            {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n             }\n-        } );\n+        });\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"bbd32fbbb09c706be2ba85a17f1390e3289db7be","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/NodeEditablePanel.java","status":"modified","additions":20,"deletions":22,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 sara.\n- *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n@@ -21,15 +19,17 @@\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-                                            .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.syncope.client.to.RoleTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.BasePage;\n import org.syncope.console.pages.RoleModalPage;\n@@ -41,6 +41,12 @@\n  */\n public class NodeEditablePanel extends Panel {\n \n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            NodeEditablePanel.class);\n+\n     @SpringBean\n     private RoleRestClient restClient;\n \n@@ -49,20 +55,9 @@ public class NodeEditablePanel extends Panel {\n \n     private Fragment fragment;\n \n-    /**\n-     * Panel constructor.\n-     *\n-     * @param id\n-     *            Markup id\n-     * @param parentId\n-     *            Role id\n-     * @param inputModel\n-     *            Model of the text field\n-     * @param window\n-     *            Modal window to open\n-     */\n     public NodeEditablePanel(String id, final Long idRole, IModel inputModel,\n             final ModalWindow window, final BasePage basePage) {\n+\n         super(id);\n \n         if (idRole == -1) {\n@@ -73,9 +68,10 @@ public NodeEditablePanel(String id, final Long idRole, IModel inputModel,\n             AjaxLink createRoleLink = new IndicatingAjaxLink(\"createRoleLink\") {\n \n                 @Override\n-                public void onClick(AjaxRequestTarget target) {\n+                public void onClick(final AjaxRequestTarget target) {\n                     window.setPageCreator(new ModalWindow.PageCreator() {\n \n+                        @Override\n                         public Page createPage() {\n                             RoleTO roleTO = new RoleTO();\n                             roleTO.setParent(idRole);\n@@ -126,9 +122,13 @@ public Page createPage() {\n \n                 @Override\n                 public void onClick(AjaxRequestTarget target) {\n-                    restClient.deleteRole(idRole);\n-\n-                    getSession().info(getString(\"operation_succeded\"));\n+                    try {\n+                        restClient.deleteRole(idRole);\n+                        getSession().info(getString(\"operation_succeded\"));\n+                    } catch (SyncopeClientCompositeErrorException e) {\n+                        LOG.error(\"While deleting role \" + idRole, e);\n+                        getSession().error(getString(\"operation_error\"));\n+                    }\n \n                     setResponsePage(new Roles(null));\n                 }\n@@ -138,8 +138,6 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n                     return new AjaxPreprocessingCallDecorator(super.\n                             getAjaxCallDecorator()) {\n \n-                        private static final long serialVersionUID = 1L;\n-\n                         @Override\n                         public CharSequence preDecorateScript(\n                                 CharSequence script) {"},{"sha":"79360262ade94dee549d37bb77e01f090a188061","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/PropertyEditableColumn.java","status":"modified","additions":24,"deletions":45,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FPropertyEditableColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FPropertyEditableColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FPropertyEditableColumn.java?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,68 +21,47 @@\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation;\n-import org.apache.wicket.extensions.markup.html.tree.table.IColumn;\n import org.apache.wicket.extensions.markup.html.tree.table.IRenderable;\n import org.apache.wicket.extensions.markup.html.tree.table.PropertyRenderableColumn;\n import org.apache.wicket.model.PropertyModel;\n+import org.syncope.client.to.RoleTO;\n import org.syncope.console.pages.BasePage;\n \n public class PropertyEditableColumn extends PropertyRenderableColumn {\n-ModalWindow window = null;\n-BasePage callerPage;\n-    /**\n-     * Column constructor.\n-     *\n-     * @param location\n-     * @param header\n-     * @param propertyExpression\n-     */\n-    public PropertyEditableColumn(ColumnLocation location, String header,\n-                                  String propertyExpression,ModalWindow window,\n-                                  BasePage callerPage)\n-    {\n+\n+    private ModalWindow window = null;\n+\n+    private BasePage callerPage;\n+\n+    public PropertyEditableColumn(final ColumnLocation location,\n+            final String header, final String propertyExpression,\n+            final ModalWindow window, final BasePage callerPage) {\n+\n         super(location, header, propertyExpression);\n+\n         this.callerPage = callerPage;\n         this.window = window;\n     }\n \n-    /**\n-     * @see IColumn#newCell(MarkupContainer, String, TreeNode, int)\n-     */\n     @Override\n-    public Component newCell(MarkupContainer parent, String id, \n-            TreeNode node, int level) {\n-        DefaultMutableTreeNode syncopeTreeNode = (DefaultMutableTreeNode) node;\n-        TreeModelBean treeModel = (TreeModelBean) syncopeTreeNode.getUserObject();\n+    public Component newCell(final MarkupContainer parent, final String id,\n+            final TreeNode node, final int level) {\n \n-        NodeEditablePanel editablePanel = null;\n-        long nodeId;\n-\n-        if(treeModel.getTreeNode() != null)\n-            nodeId = treeModel.getTreeNode().getId();\n-        else\n-            nodeId = -1;\n-\n-        editablePanel = new NodeEditablePanel(id, nodeId ,\n-                    new PropertyModel(node, getPropertyExpression()),window,callerPage);\n+        DefaultMutableTreeNode syncopeTreeNode = (DefaultMutableTreeNode) node;\n+        RoleTO roleTO = (RoleTO) syncopeTreeNode.getUserObject();\n \n+        NodeEditablePanel editablePanel = new NodeEditablePanel(id,\n+                roleTO.getId(),\n+                new PropertyModel(node, getPropertyExpression()),\n+                window,\n+                callerPage);\n \n         return editablePanel;\n     }\n \n-    /**\n-     * @see IColumn#newCell(TreeNode, int)\n-     */\n     @Override\n     public IRenderable newCell(TreeNode node, int level) {\n-        if (getTreeTable().getTreeState().isNodeSelected(node)) {\n-            //getTreeTable().setVisibilityAllowed(true);\n-            return null;\n-\n-        } else {\n-            //getTreeTable().setVisibilityAllowed(false);\n-\n-            return super.newCell(node, level);\n-        }\n+        return getTreeTable().getTreeState().isNodeSelected(node)\n+                ? null : super.newCell(node, level);\n     }\n }"},{"sha":"31216d054b53a644d82dde8d9d72c2366c0e8724","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeRoleTree.java","status":"removed","additions":0,"deletions":174,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java?ref=cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69","patch":"@@ -1,174 +0,0 @@\n-/*\n- *  Copyright 2010 luis.\n- * \n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.wicket.markup.html.tree;\n-\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.swing.tree.DefaultMutableTreeNode;\n-import javax.swing.tree.DefaultTreeModel;\n-import javax.swing.tree.TreeModel;\n-import org.springframework.web.client.RestClientException;\n-import org.syncope.client.to.RoleTO;\n-import org.syncope.console.rest.RoleRestClient;\n-\n-/**\n- *\n- */\n-public class SyncopeRoleTree {\n-    List<Long> parentsId;\n-    RoleRestClient restClient;\n-\n-    public SyncopeRoleTree(RoleRestClient restClient) {\n-        this.restClient = restClient;\n-    }\n-\n-\n-    /**\n-     * Creates the model that feeds the tree.\n-     *\n-     * @return New instance of tree model.\n-     */\n-    public TreeModel createTreeModel() throws RestClientException {\n-\n-        List<RoleTO> roles = restClient.getAllRoles();\n-\n-        List<SyncopeTreeNode> roleTree = new ArrayList<SyncopeTreeNode>();\n-        List<SyncopeTreeNode> parentNodes = new ArrayList<SyncopeTreeNode>();\n-        List<SyncopeTreeNode> childNodes = new ArrayList<SyncopeTreeNode>();\n-\n-        parentsId = new ArrayList<Long>();\n-\n-        //populate id list of parents\n-        for (RoleTO role : roles) {\n-            if (!parentExists(role.getParent(), parentsId)) {\n-                parentsId.add(role.getParent());\n-            }\n-        }\n-\n-        //populate parents nodes list (parent = SyncopeTreeNode)\n-        SyncopeTreeNode parentNode;\n-        for (RoleTO role : roles) {\n-            for (Long parentId : parentsId) {\n-                if (role.getId() == parentId) {\n-                    parentNode = new SyncopeTreeNode();\n-                    parentNode.setId(role.getId());\n-                    parentNode.setParentId(role.getParent());\n-                    parentNode.setName(role.getName());\n-                    parentNodes.add(parentNode);\n-                }\n-            }\n-        }\n-\n-        //populate children nodes list (parent = SyncopeTreeNode)\n-        SyncopeTreeNode childNode;\n-        for (RoleTO role : roles) {\n-            if (!parentExists(role.getId(), parentsId)) {\n-                childNode = new SyncopeTreeNode();\n-                childNode.setId(role.getId());\n-                childNode.setName(role.getName());\n-                childNode.setParentId(role.getParent());\n-                childNodes.add(childNode);\n-            }\n-        }\n-\n-        //add leaf-nodes into child nodes list\n-        for (SyncopeTreeNode node : childNodes) {\n-            addChildToParent(parentNodes, node);\n-        }\n-\n-        //nest parents each-others\n-        for (SyncopeTreeNode node : parentNodes) {\n-            addChildToParent(roleTree, node);\n-        }\n-\n-        return convertToTreeModel(roleTree);\n-    }\n-\n-    /**\n-     * Check if a parent has already been inserted in the parents id list\n-     * @param parentId\n-     * @param list\n-     * @return true if a parent id is already in the list, false otherwise\n-     */\n-    public boolean parentExists(Long parentId, List<Long> list) {\n-        boolean found = false;\n-\n-        for (Long id : list) {\n-            if (!found && id.longValue() == parentId.longValue()) {\n-                found = true;\n-            }\n-        }\n-        return found;\n-    }\n-\n-    /**\n-     * Add a node child to the specific parent\n-     * @param nodes list populate\n-     * @param child to be added to list\n-     * @return List<SyncopeTreeNode>\n-     */\n-    public List<SyncopeTreeNode> addChildToParent(List<SyncopeTreeNode> nodes,\n-            SyncopeTreeNode child) {\n-        if (nodes.size() == 0) {\n-            nodes.add(child);\n-            return nodes;\n-        }\n-        //if child is the root it won't be a child, so just ignore it\n-        if (child.getParentId().longValue() == child.getId().longValue()) {\n-            return nodes;\n-        } else {\n-            for (SyncopeTreeNode item : nodes) {\n-                if (item.getId().longValue() == child.getParentId()\n-                        .longValue()) {\n-                    item.getChildren().add(child);\n-                    break;\n-                } else if (item.getId().longValue() != child.getParentId()\n-                        .longValue() && item.getChildren().size() > 0) {\n-                    addChildToParent(item.getChildren(), child);\n-                }\n-            }\n-        }\n-\n-        return nodes;\n-    }\n-\n-    public TreeModel convertToTreeModel(List<SyncopeTreeNode> list) {\n-        TreeModel model = null;\n-        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(\n-                new TreeModelBean(\"Root\"));\n-        add(rootNode, list);\n-        model = new DefaultTreeModel(rootNode);\n-        return model;\n-    }\n-\n-    public void add(DefaultMutableTreeNode parent, List<SyncopeTreeNode> sub) {\n-        for (Iterator<SyncopeTreeNode> i = sub.iterator(); i.hasNext();) {\n-            SyncopeTreeNode node = i.next();\n-            if (node.getChildren().size() > 0) {\n-                DefaultMutableTreeNode child = new DefaultMutableTreeNode(\n-                        new TreeModelBean(node));\n-                parent.add(child);\n-                add(child, node.getChildren());\n-            } else {\n-                DefaultMutableTreeNode child = new DefaultMutableTreeNode(\n-                        new TreeModelBean(node));\n-                parent.add(child);\n-            }\n-        }\n-    }\n-}\n\\ No newline at end of file"},{"sha":"544b18e79e3647f60fd0ef5bcc3a6a36fb898b18","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeTreeNode.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeTreeNode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeTreeNode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeTreeNode.java?ref=cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69","patch":"@@ -1,66 +0,0 @@\n-/* \n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.wicket.markup.html.tree;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-/**\n- * SyncopeTreeNode wrapper class for RoleTO object.\n- */\n-public class SyncopeTreeNode implements Serializable {\n-\n-    Long id;\n-    Long parentId;\n-    String name;\n-    List<SyncopeTreeNode> children = new ArrayList<SyncopeTreeNode>();\n-\n-    public List<SyncopeTreeNode> getChildren() {\n-        return children;\n-    }\n-\n-    public void setChildren(List<SyncopeTreeNode> children) {\n-        this.children = children;\n-    }\n-\n-    public Long getId() {\n-        return id;\n-    }\n-\n-    public Long getParentId() {\n-        return parentId;\n-    }\n-\n-    public void setParentId(Long parentId) {\n-        this.parentId = parentId;\n-    }\n-\n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    public String displayName(){\n-    return getId()+\"-\"+getName();\n-    }\n-}\n\\ No newline at end of file"},{"sha":"eae1a20ddf6489047ad39fd134d28755b512f32c","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/TreeModelBean.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeModelBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeModelBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeModelBean.java?ref=cccf6ca4bfdced2d09ad3d20d5f0e0b00e8e9e69","patch":"@@ -1,59 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-\n-package org.syncope.console.wicket.markup.html.tree;\n-\n-import java.io.Serializable;\n-\n-public class TreeModelBean implements Serializable\n-{\n-    private SyncopeTreeNode treeNode;\n-    private String title;\n-\n-    public TreeModelBean(String title) {\n-        this.title = title;\n-    }\n-    \n-    public TreeModelBean(SyncopeTreeNode tree)\n-    {\n-        this.treeNode = tree;\n-    }\n-\n-    public String getTitle() {\n-        return title;\n-    }\n-\n-    public void setTitle(String title) {\n-        this.title = title;\n-    }\n-    \n-    public SyncopeTreeNode getTreeNode() {\n-        return treeNode;\n-    }\n-\n-    public void setTreeNode(SyncopeTreeNode treeNode) {\n-        this.treeNode = treeNode;\n-    }\n-    \n-    /**\n-     * @see java.lang.Object#toString()\n-     */\n-    @Override\n-    public String toString()\n-    {\n-        //return treeNode.getName();\n-        return \"\";\n-    }\n-}\n\\ No newline at end of file"},{"sha":"a8ea8d13228b6eeebec04f75250664a26b283b78","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=f5ecf0c5dfb46cd79bfaf42f5eb26d0891b48e5c","patch":"@@ -75,4 +75,6 @@\n \n     <bean id=\"xmlRolesReader\" class=\"org.syncope.console.commons.XMLRolesReader\"/>\n \n+    <bean id=\"roleTreeBuilder\" class=\"org.syncope.console.commons.RoleTreeBuilder\"/>\n+\n </beans>"}]}