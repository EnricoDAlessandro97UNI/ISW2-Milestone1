{"sha":"2a53b46e56df3010c68334846bb8323a7d5d4e94","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhNTNiNDZlNTZkZjMwMTBjNjgzMzQ4NDZiYjgzMjNhN2Q1ZDRlOTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-04T15:52:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-04T15:52:51Z"},"message":"[SYNCOPE-332] Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1452352 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69bac9c2cef963ff41b314b94e4623fd355cddfd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/69bac9c2cef963ff41b314b94e4623fd355cddfd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a53b46e56df3010c68334846bb8323a7d5d4e94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a53b46e56df3010c68334846bb8323a7d5d4e94","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a53b46e56df3010c68334846bb8323a7d5d4e94","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a53b46e56df3010c68334846bb8323a7d5d4e94/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d0cbbc57dfd6bd5b18003c08da1546ca1574da1d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0cbbc57dfd6bd5b18003c08da1546ca1574da1d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d0cbbc57dfd6bd5b18003c08da1546ca1574da1d"}],"stats":{"total":225,"additions":127,"deletions":98},"files":[{"sha":"014ea99eeaf0d7f7af35df20444bdd859366f452","filename":"common/src/main/java/org/apache/syncope/common/types/SchemaType.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSchemaType.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -21,36 +21,29 @@\n import javax.xml.bind.annotation.XmlEnum;\r\n \r\n @XmlEnum\r\n-public\r\n-enum SchemaType {\r\n+public enum SchemaType {\r\n \r\n     /**\r\n      * Derived schema calculated based on other attributes.\r\n      */\r\n     DERIVED(\"derivedSchema\"),\r\n-\r\n     /**\r\n      * Standard schema for normal attributes to be stored within syncope.\r\n      */\r\n     NORMAL(\"schema\"),\r\n-\r\n     /**\r\n      * Virtual schema for attributes fetched from remote resources only.\r\n      */\r\n     VIRTUAL(\"virtualSchema\");\r\n \r\n-    public static SchemaType fromString(String value) {\r\n-        return SchemaType.valueOf(value.toUpperCase());\r\n-    }\r\n-\r\n     // TODO remove name once CXF migration is complete\r\n     private final String name;\r\n \r\n-    private SchemaType(String name) {\r\n+    private SchemaType(final String name) {\r\n         this.name = name;\r\n     }\r\n \r\n     public String toSpringURL() {\r\n         return name;\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r"},{"sha":"80db975a59cee9167ed10fdc877a1de540c48183","filename":"console/src/main/java/org/apache/syncope/console/commons/AttributableDataProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -56,10 +56,10 @@ public AttributableDataProvider(final AbstractAttributableRestClient restClient,\n         this.filtered = filtered;\n         this.paginatorRows = paginatorRows;\n \n-        //Default sorting\n+        // default sorting\n         setSort(\"id\", SortOrder.ASCENDING);\n \n-        comparator = new SortableAttributableProviderComparator(this);\n+        this.comparator = new SortableAttributableProviderComparator(this);\n     }\n \n     public void setSearchCond(final NodeCond searchCond) {"},{"sha":"65a51e6b36ba2d36f70006c07444f9bbc1d449d1","filename":"console/src/main/java/org/apache/syncope/console/commons/SchemaModalPageFactory.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console.commons;\n \n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.console.pages.AbstractSchemaModalPage;\n import org.apache.syncope.console.pages.BaseModalPage;\n import org.apache.syncope.console.pages.DerivedSchemaModalPage;\n@@ -37,14 +38,6 @@ abstract public class SchemaModalPageFactory extends BaseModalPage {\n     @SpringBean\n     protected SchemaRestClient restClient;\n \n-    public enum SchemaType {\n-\n-        NORMAL,\n-        DERIVED,\n-        VIRTUAL\n-\n-    };\n-\n     public static AbstractSchemaModalPage getSchemaModalPage(AttributableType entity, SchemaType schemaType) {\n \n         AbstractSchemaModalPage page;\n@@ -53,9 +46,11 @@ public static AbstractSchemaModalPage getSchemaModalPage(AttributableType entity\n             case DERIVED:\n                 page = new DerivedSchemaModalPage(entity);\n                 break;\n+\n             case VIRTUAL:\n                 page = new VirtualSchemaModalPage(entity);\n                 break;\n+\n             default:\n                 page = new SchemaModalPage(entity);\n                 break;"},{"sha":"0e2ac370851c0480dee0b3ca27bc9e9a82aa7e08","filename":"console/src/main/java/org/apache/syncope/console/commons/SortableAttributableProviderComparator.java","status":"modified","additions":60,"deletions":18,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -18,59 +18,101 @@\n  */\n package org.apache.syncope.console.commons;\n \n+import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n \n public class SortableAttributableProviderComparator extends SortableDataProviderComparator<AbstractAttributableTO> {\n \n     private static final long serialVersionUID = 1775967163571699258L;\n \n-    private static final Set<String> inlineProps;\n-\n-    static {\n-        inlineProps = new HashSet<String>();\n-        inlineProps.add(\"id\");\n-        inlineProps.add(\"status\");\n-        inlineProps.add(\"token\");\n-        inlineProps.add(\"username\");\n-    }\n+    private static final Set<String> INLINE_PROPS = new HashSet<String>(Arrays.asList(\n+            new String[]{\"id\", \"status\", \"token\", \"username\"}));\n \n     public SortableAttributableProviderComparator(final SortableDataProvider<AbstractAttributableTO, String> provider) {\n         super(provider);\n     }\n \n     @Override\n-    public int compare(final AbstractAttributableTO o1, final AbstractAttributableTO o2) {\n-        if (inlineProps.contains(provider.getSort().getProperty())) {\n-            return super.compare(o1, o2);\n+    public int compare(final AbstractAttributableTO attributable1, AbstractAttributableTO attributable2) {\n+        if (INLINE_PROPS.contains(provider.getSort().getProperty())) {\n+            return super.compare(attributable1, attributable2);\n         }\n \n-        return super.compare(new AttrModel(o1.getAttributeMap()), new AttrModel(o2.getAttributeMap()));\n+        return super.compare(new AttrModel(attributable1), new AttrModel(attributable2));\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n \n-        private static final long serialVersionUID = 7201800923472498270L;\n+        private static final long serialVersionUID = -7856686374020091808L;\n+\n+        private final Map<String, AttributeTO> attrs;\n \n-        private final Map<String, AttributeTO> attrMap;\n+        private final Map<String, AttributeTO> derAttrs;\n \n-        public AttrModel(final Map<String, AttributeTO> attrMap) {\n+        private final Map<String, AttributeTO> virAttrs;\n+\n+        public AttrModel(final AbstractAttributableTO attributableTO) {\n             super();\n \n-            this.attrMap = attrMap;\n+            this.attrs = attributableTO.getAttributeMap();\n+            this.derAttrs = attributableTO.getDerivedAttributeMap();\n+            this.virAttrs = attributableTO.getVirtualAttributeMap();\n         }\n \n+        /**\n+         * @see UserAttrColumn constructor\n+         */\n         @Override\n         public Comparable getObject() {\n+            int hashPos = provider.getSort().getProperty().indexOf('#');\n+\n+            SchemaType schemaType = null;\n+            final String schema;\n+            if (hashPos == -1) {\n+                schema = provider.getSort().getProperty();\n+            } else {\n+                String[] splitted = provider.getSort().getProperty().split(\"#\");\n+                try {\n+                    schemaType = SchemaType.valueOf(splitted[0]);\n+                } catch (IllegalArgumentException e) {\n+                    // this should never happen\n+                }\n+                schema = provider.getSort().getProperty().substring(hashPos + 1);\n+            }\n+\n+\n+            final AttributeTO attr;\n+            if (schemaType == null) {\n+                attr = this.attrs.get(schema);\n+            } else {\n+                switch (schemaType) {\n+                    case NORMAL:\n+                    default:\n+                        attr = this.attrs.get(schema);\n+                        break;\n+\n+                    case DERIVED:\n+                        attr = this.derAttrs.get(schema);\n+                        break;\n+\n+                    case VIRTUAL:\n+                        attr = this.virAttrs.get(schema);\n+                        break;\n+                }\n+            }\n+\n             Comparable result = null;\n \n-            List<String> values = attrMap.get(provider.getSort().getProperty()).getValues();\n+            List<String> values = attr == null ? null : attr.getValues();\n             if (values != null && !values.isEmpty()) {\n                 result = values.iterator().next();\n             }"},{"sha":"b773afb83bff3d7f2e3c469be311ba093cef8a84","filename":"console/src/main/java/org/apache/syncope/console/commons/SortableDataProviderComparator.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -24,19 +24,18 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n \n-public class SortableDataProviderComparator<T> implements Comparator<T>, Serializable {\n+public class SortableDataProviderComparator<T extends Object> implements Comparator<T>, Serializable {\n \n     private static final long serialVersionUID = -8897687699977460543L;\n \n     protected final SortableDataProvider<T, String> provider;\n \n     public SortableDataProviderComparator(final SortableDataProvider<T, String> provider) {\n-\n         this.provider = provider;\n     }\n \n-    protected int compare(final IModel<Comparable> model1, IModel<Comparable> model2) {\n-\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    protected int compare(final IModel<Comparable> model1, final IModel<Comparable> model2) {\n         int result;\n \n         if (model1.getObject() == null && model2.getObject() == null) {\n@@ -56,10 +55,11 @@ protected int compare(final IModel<Comparable> model1, IModel<Comparable> model2\n         return result;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     @Override\n-    public int compare(final T o1, final T o2) {\n-        IModel<Comparable> model1 = new PropertyModel<Comparable>(o1, provider.getSort().getProperty());\n-        IModel<Comparable> model2 = new PropertyModel<Comparable>(o2, provider.getSort().getProperty());\n+    public int compare(final T object1, final T object2) {\n+        IModel<Comparable> model1 = new PropertyModel<Comparable>(object1, provider.getSort().getProperty());\n+        IModel<Comparable> model2 = new PropertyModel<Comparable>(object2, provider.getSort().getProperty());\n \n         return compare(model1, model2);\n     }"},{"sha":"b89794edd2178bf35a0eb294834ee591a0f05fd4","filename":"console/src/main/java/org/apache/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -30,10 +30,10 @@\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.rest.SchemaRestClient;\n-import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Check;\n@@ -266,12 +266,12 @@ protected void populateItem(ListItem<String> item) {\n             selectedDerSchemas.clear();\n         }\n \n-        final AjaxButton submit = new ClearIndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\"), pageRef) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size()\n                         + selectedDerSchemas.size() > MAX_SELECTIONS) {\n \n@@ -297,19 +297,19 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n             }\n \n             @Override\n-            protected void onError(AjaxRequestTarget target, Form<?> form) {\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(feedbackPanel);\n             }\n         };\n \n         form.add(submit);\n \n-        final AjaxButton cancel = new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), pageRef) {\n+        final AjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 window.close(target);\n             }\n         };"},{"sha":"61ff01a3a98edcb8bfe629bdb5346fbfd58c6735","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -95,7 +95,8 @@ public RoleModalPage(final PageReference pageRef, final ModalWindow window, fina\n         this.rolePanel = new RolePanel(\"rolePanel\", form, roleTO, mode);\n         form.add(rolePanel);\n \n-        final AjaxButton submit = new ClearIndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\"), pageRef) {\n+        final AjaxButton submit = new ClearIndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\"),\n+                getPageReference()) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n@@ -140,7 +141,7 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n \n         form.add(submit);\n         form.setDefaultButton(submit);\n-        \n+\n         form.add(cancel);\n \n         add(form);"},{"sha":"b682152087903a3f3327bc2c2288cd7661c2de7b","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":30,"deletions":29,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.VirtualSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SchemaModalPageFactory;\n@@ -68,7 +69,7 @@ public class Schema extends BasePage {\n \n     private static final long serialVersionUID = 8091922398776299403L;\n \n-    private enum SchemaType {\n+    private enum PlainSchemaType {\n \n         RoleSchema,\n         UserSchema,\n@@ -254,17 +255,17 @@ public Schema(PageParameters parameters) {\n         final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"delete\");\n \n         List<IColumn> rolesColumns = getColumnsForSchema(roleSchemasContainer, editRoleSchemaWin,\n-                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n+                AttributableType.ROLE, SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n                 allowedReadRoles, allowedCreateRoles);\n \n         final AjaxFallbackDefaultDataTable tableRoles = new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n-                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n+                new SchemaProvider(PlainSchemaType.RoleSchema), rolePageRows);\n \n         add(getPaginatorForm(roleSchemasContainer, tableRoles, \"RolesPaginatorForm\", \"rolePageRows\",\n                 Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsRolesDer = getColumnsForSchema(roleDerivedSchemasContainer, editRoleDerivedSchemaWin,\n-                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n+                AttributableType.ROLE, SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n                 allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableRolesDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -274,7 +275,7 @@ public Schema(PageParameters parameters) {\n                 Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsRolesVir = getColumnsForSchema(roleVirtualSchemasContainer, editRoleVirtualSchemaWin,\n-                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n+                AttributableType.ROLE, SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n                 allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableRolesVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -284,18 +285,18 @@ public Schema(PageParameters parameters) {\n                 Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> userColumns = getColumnsForSchema(userSchemasContainer, editUserSchemaWin, AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS, allowedReadRoles, allowedCreateRoles);\n+                SchemaType.NORMAL, Constants.SCHEMA_FIELDS, allowedReadRoles, allowedCreateRoles);\n \n         final AjaxFallbackDefaultDataTable tableUsers = new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n-                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n+                new SchemaProvider(PlainSchemaType.UserSchema), userSchemaPageRows);\n \n         tableUsers.setMarkupId(\"tableUsers\");\n \n         add(getPaginatorForm(userSchemasContainer, tableUsers, \"UsersPaginatorForm\", \"userSchemaPageRows\",\n                 Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsUsersDer = getColumnsForSchema(userDerivedSchemasContainer, editUserDerivedSchemaWin,\n-                AttributableType.USER, SchemaModalPageFactory.SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n+                AttributableType.USER, SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n                 allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableUsersDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -305,7 +306,7 @@ public Schema(PageParameters parameters) {\n                 \"userDerSchemaPageRows\", Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsUsersVir = getColumnsForSchema(userVirtualSchemasContainer, editUserVirtualSchemaWin,\n-                AttributableType.USER, SchemaModalPageFactory.SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n+                AttributableType.USER, SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n                 allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableUsersVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -315,17 +316,17 @@ public Schema(PageParameters parameters) {\n                 \"userVirSchemaPageRows\", Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> membershipsColumns = getColumnsForSchema(membershipSchemaContainer, editMembershipSchemaWin,\n-                AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n+                AttributableType.MEMBERSHIP, SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n                 allowedReadRoles, allowedCreateRoles);\n \n         final AjaxFallbackDefaultDataTable tableMemberships = new AjaxFallbackDefaultDataTable(\"datatable\",\n-                membershipsColumns, new SchemaProvider(SchemaType.MembershipSchema), membershipPageRows);\n+                membershipsColumns, new SchemaProvider(PlainSchemaType.MembershipSchema), membershipPageRows);\n \n         add(getPaginatorForm(membershipSchemaContainer, tableMemberships, \"MembershipPaginatorForm\",\n                 \"membershipPageRows\", Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsMembershipsDer = getColumnsForSchema(membershipDerivedSchemaContainer,\n-                editMembershipDerivedSchemaWin, AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.DERIVED,\n+                editMembershipDerivedSchemaWin, AttributableType.MEMBERSHIP, SchemaType.DERIVED,\n                 Constants.DERIVED_SCHEMA_FIELDS, allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableMembershipsDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -336,7 +337,7 @@ columnsMembershipsDer, new DerivedSchemaProvider(SchemaDerivedType.MembershipDer\n                 \"membershipDerPageRows\", Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS));\n \n         List<IColumn> columnsMembershipsVir = getColumnsForSchema(membershipVirtualSchemaContainer,\n-                editMembershipVirtualSchemaWin, AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                editMembershipVirtualSchemaWin, AttributableType.MEMBERSHIP, SchemaType.VIRTUAL,\n                 Constants.VIRTUAL_SCHEMA_FIELDS, allowedReadRoles, allowedDeleteRoles);\n \n         final AjaxFallbackDefaultDataTable tableMembershipsVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n@@ -506,38 +507,38 @@ columnsMembershipsVir, new VirtualSchemaProvider(SchemaVirtualType.MembershipVir\n \n         setWindowClosedCallback(editMembershipVirtualSchemaWin, membershipVirtualSchemaContainer);\n \n-        add(getCreateSchemaWindow(createRoleSchemaWin, AttributableType.ROLE, SchemaModalPageFactory.SchemaType.NORMAL,\n+        add(getCreateSchemaWindow(createRoleSchemaWin, AttributableType.ROLE, SchemaType.NORMAL,\n                 \"createRoleSchemaWinLink\", \"createRoleSchemaWin\", allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createRoleDerivedSchemaWin, AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.DERIVED, \"createRoleDerivedSchemaWinLink\",\n+                SchemaType.DERIVED, \"createRoleDerivedSchemaWinLink\",\n                 \"createRoleDerivedSchemaWin\", allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createRoleVirtualSchemaWin, AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createRoleVirtualSchemaWinLink\",\n+                SchemaType.VIRTUAL, \"createRoleVirtualSchemaWinLink\",\n                 \"createRoleVirtualSchemaWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(createUserSchemaWin, AttributableType.USER, SchemaModalPageFactory.SchemaType.NORMAL,\n+        add(getCreateSchemaWindow(createUserSchemaWin, AttributableType.USER, SchemaType.NORMAL,\n                 \"createUserSchemaWinLink\", \"createUserSchemaModalWin\", allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createUserDerivedSchemaWin, AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.DERIVED, \"createUserDerSchemaWinLink\", \"createUserDerSchemaModalWin\",\n+                SchemaType.DERIVED, \"createUserDerSchemaWinLink\", \"createUserDerSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createUserVirtualSchemaWin, AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createUserVirSchemaWinLink\", \"createUserVirSchemaModalWin\",\n+                SchemaType.VIRTUAL, \"createUserVirSchemaWinLink\", \"createUserVirSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createMembershipSchemaWin, AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.NORMAL, \"createMembershipSchemaWinLink\",\n+                SchemaType.NORMAL, \"createMembershipSchemaWinLink\",\n                 \"createMembershipSchemaModalWin\", allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createMembershipDerivedSchemaWin, AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.DERIVED, \"createMembershipDerSchemaWinLink\",\n+                SchemaType.DERIVED, \"createMembershipDerSchemaWinLink\",\n                 \"createMembershipDerivedSchemaWin\", allowedCreateRoles));\n \n         add(getCreateSchemaWindow(createMembershipVirtualSchemaWin, AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createMembershipVirSchemaWinLink\",\n+                SchemaType.VIRTUAL, \"createMembershipVirSchemaWinLink\",\n                 \"createMembershipVirtualSchemaWin\", allowedCreateRoles));\n     }\n \n@@ -547,9 +548,9 @@ private class SchemaProvider extends SortableDataProvider<SchemaTO, String> {\n \n         private final SortableDataProviderComparator<SchemaTO> comparator;\n \n-        private final SchemaType schemaType;\n+        private final PlainSchemaType schemaType;\n \n-        public SchemaProvider(final SchemaType schemaType) {\n+        public SchemaProvider(final PlainSchemaType schemaType) {\n             super();\n             this.schemaType = schemaType;\n \n@@ -565,7 +566,7 @@ public Iterator<SchemaTO> iterator(final long first, final long count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList((int)first, (int)first + (int)count).iterator();\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n@@ -624,7 +625,7 @@ public Iterator<DerivedSchemaTO> iterator(final long first, final long count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList((int)first, (int)first + (int)count).iterator();\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n@@ -676,7 +677,7 @@ public Iterator<VirtualSchemaTO> iterator(final long first, final long count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList((int)first, (int)first + (int)count).iterator();\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n@@ -707,7 +708,7 @@ private List<VirtualSchemaTO> getVirtualSchemaDB() {\n \n     private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n             final WebMarkupContainer webContainer, final ModalWindow modalWindow,\n-            final AttributableType attributableType, final SchemaModalPageFactory.SchemaType schemaType,\n+            final AttributableType attributableType, final SchemaType schemaType,\n             final String[] fields, final String readPermissions, final String deletePermissions) {\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n@@ -820,7 +821,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private <T extends AbstractSchemaModalPage> AjaxLink getCreateSchemaWindow(final ModalWindow createSchemaWin,\n-            final AttributableType attributableType, final SchemaModalPageFactory.SchemaType schemaType,\n+            final AttributableType attributableType, final SchemaType schemaType,\n             final String winLinkName, final String winName, final String createPermissions) {\n \n         AjaxLink createSchemaWinLink = new ClearIndicatingAjaxLink(winLinkName, getPageReference()) {"},{"sha":"75ee47a67ac8cb9b9ba99ec0f6e9855a43817191","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.DisplayAttributesModalPage;\n@@ -81,15 +82,15 @@ protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, AttrColumn.SchemaType.schema));\n+            columns.add(new AttrColumn(name, SchemaType.NORMAL));\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, AttrColumn.SchemaType.derivedSchema));\n+            columns.add(new AttrColumn(name, SchemaType.DERIVED));\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, AttrColumn.SchemaType.virtualSchema));\n+            columns.add(new AttrColumn(name, SchemaType.VIRTUAL));\n         }\n \n         // Add defaults in case of no selection\n@@ -105,6 +106,8 @@ protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n \n         columns.add(new AbstractColumn<AbstractAttributableTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n             @Override\n             public String getCssClass() {\n                 return \"action\";"},{"sha":"09011b23892a4ab35808cedf02cf619489b07921","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a53b46e56df3010c68334846bb8323a7d5d4e94/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=2a53b46e56df3010c68334846bb8323a7d5d4e94","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n \n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -32,21 +33,14 @@ public class AttrColumn extends AbstractColumn<AbstractAttributableTO, String> {\n \n     private static final long serialVersionUID = 2624734332447371372L;\n \n-    public enum SchemaType {\n-\n-        schema,\n-        virtualSchema,\n-        derivedSchema;\n-\n-    };\n-\n     private final String name;\n \n     private final SchemaType schemaType;\n \n     public AttrColumn(final String name, final SchemaType schemaType) {\n-\n-        super(new ResourceModel(name, name), name);\n+        // set sortProperty to schematype#name (e.g. derivedSchema#cn, \n+        // for use with SortableUserProviderComparator.AttrModel#getObject)\n+        super(new ResourceModel(name, name), schemaType.name() + \"#\" + name);\n         this.name = name;\n         this.schemaType = schemaType;\n     }\n@@ -58,20 +52,20 @@ public void populateItem(final Item<ICellPopulator<AbstractAttributableTO>> cell\n         List<String> values = null;\n \n         switch (schemaType) {\n-            case schema:\n+            case NORMAL:\n                 if (rowModel.getObject().getAttributeMap().containsKey(name)) {\n                     values = rowModel.getObject().getAttributeMap().get(name).getValues();\n                 }\n                 break;\n \n-            case virtualSchema:\n+            case VIRTUAL:\n                 if (rowModel.getObject().getVirtualAttributeMap().containsKey(name)) {\n \n                     values = rowModel.getObject().getVirtualAttributeMap().get(name).getValues();\n                 }\n                 break;\n \n-            case derivedSchema:\n+            case DERIVED:\n                 if (rowModel.getObject().getDerivedAttributeMap().containsKey(name)) {\n \n                     values = rowModel.getObject().getDerivedAttributeMap().get(name).getValues();"}]}