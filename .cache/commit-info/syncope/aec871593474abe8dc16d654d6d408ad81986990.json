{"sha":"aec871593474abe8dc16d654d6d408ad81986990","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFlYzg3MTU5MzQ3NGFiZThkYzE2ZDY1NGQ2ZDQwOGFkODE5ODY5OTA=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-05-14T11:54:58Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-05-14T11:54:58Z"},"message":"[SYNCOPE-445] Provide a text field to specify whatever notification recipient\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1594549 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ee4efeb5af1b55d41aa451d654ca3ea3dc1e46b7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ee4efeb5af1b55d41aa451d654ca3ea3dc1e46b7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/aec871593474abe8dc16d654d6d408ad81986990","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aec871593474abe8dc16d654d6d408ad81986990","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aec871593474abe8dc16d654d6d408ad81986990","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aec871593474abe8dc16d654d6d408ad81986990/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"7cd4b43de678e9545fd191d6f6b102eddd674141","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cd4b43de678e9545fd191d6f6b102eddd674141","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cd4b43de678e9545fd191d6f6b102eddd674141"}],"stats":{"total":215,"additions":200,"deletions":15},"files":[{"sha":"e0756bd94fec64237409177428cfcb4ba5e308e5","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -18,6 +18,8 @@\n  */\r\n package org.apache.syncope.common;\r\n \r\n+import java.util.regex.Pattern;\r\n+\r\n public class SyncopeConstants {\r\n \r\n     public static final String NAMESPACE = \"http://syncope.apache.org/1.2\";\r\n@@ -42,4 +44,9 @@ public class SyncopeConstants {\n \r\n     public static final String ROOT_LOGGER = \"ROOT\";\r\n \r\n+    public static final Pattern EMAIL_PATTERN = Pattern.compile(\r\n+            \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*\"\r\n+            + \"@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\",\r\n+            Pattern.CASE_INSENSITIVE);\r\n+\r\n }\r"},{"sha":"4dae44c96fb9a87beb92c4eeffe9bda1631ef5cb","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -45,6 +45,8 @@ public class NotificationTO extends AbstractBaseBean {\n \r\n     private String recipients;\r\n \r\n+    private List<String> staticRecipients = new ArrayList<String>();\r\n+\r\n     private IntMappingType recipientAttrType;\r\n \r\n     private String recipientAttrName;\r\n@@ -74,6 +76,13 @@ public List<String> getEvents() {\n         return events;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"staticRecipients\")\r\n+    @XmlElement(name = \"staticRecipient\")\r\n+    @JsonProperty(\"staticRecipients\")\r\n+    public List<String> getStaticRecipients() {\r\n+        return staticRecipients;\r\n+    }\r\n+\r\n     public Long getId() {\r\n         return id;\r\n     }\r"},{"sha":"945677457a80389c84714f834c2aa4012ae80272","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -171,6 +172,19 @@ protected String[] getChangeRoles() {\n \n         form.add(recipientsContainer);\n \n+        final AjaxTextFieldPanel staticRecipientsFieldPanel\n+                = new AjaxTextFieldPanel(\"panel\", \"staticRecipients\", new Model<String>(null));\n+        staticRecipientsFieldPanel.addValidator(EmailAddressValidator.getInstance());\n+\n+        if (notificationTO.getStaticRecipients().isEmpty()) {\n+            notificationTO.getStaticRecipients().add(null);\n+        }\n+        \n+        final MultiFieldPanel staticRecipients = new MultiFieldPanel(\"staticRecipients\",\n+                new PropertyModel<List<String>>(notificationTO, \"staticRecipients\"), staticRecipientsFieldPanel);\n+\n+        form.add(staticRecipients);\n+\n         final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\",\n                 getString(\"selfAsRecipient\"), new PropertyModel<Boolean>(notificationTO, \"selfAsRecipient\"));\n         form.add(selfAsRecipient);\n@@ -229,7 +243,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 notificationTO.setAbout(checkAbout.getModelObject() ? null : about.buildFIQL());\n                 notificationTO.setRecipients(checkRecipients.getModelObject() ? recipients.buildFIQL() : null);\n-\n+                notificationTO.getStaticRecipients().removeAll(Collections.singleton(null));\n+                \n                 try {\n                     if (createFlag) {\n                         restClient.createNotification(notificationTO);"},{"sha":"ef19a7163bea020bc5884b90c7c3c631fe2e38ab","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage.html","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -145,6 +145,14 @@\n           </div>\n \n           <div id=\"recipients\">\n+            <div class=\"tablerow alt\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"recipients\"><wicket:message key=\"recipients\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"staticRecipients\">[staticRecipients]</span>\n+              </div>\n+            </div>\n            \t<div class=\"tablerow\" style=\"width: auto; display: block;\">\n            \t  <div class=\"tablecolumn_field\" style=\"width: auto; padding-right: 5px;\">\n                 <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>"},{"sha":"ced448b913453fcf1b2a3b7eaf8d59fbbd3c4319","filename":"console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -173,6 +173,9 @@ public void createNotification() {\n \n         selenium.click(\"//div[2]/form/div[3]/ul/li[4]/a/span\");\n \n+        selenium.type(\n+                \"name=staticRecipients:multiValueContainer:view:0:panel:textField\", \"syncope445@syncope.apache.org\");\n+\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//div[2]/form/div[3]/div[4]/div/div[2]/label\\\");\", \"30000\");\n "},{"sha":"f705cb62d93d34473b76ff6887ff0ea52ac5f582","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -184,6 +184,10 @@ private NotificationTask getNotificationTask(\n             }\n         }\n \n+        if (notification.getStaticRecipients() != null) {\n+            recipientEmails.addAll(notification.getStaticRecipients());\n+        }\n+\n         model.put(\"recipients\", recipientTOs);\n         model.put(\"syncopeConf\", this.findAllSyncopeConfs());\n         model.put(\"events\", notification.getEvents());"},{"sha":"c5ee82cdd5da4b6971a02198f88213ac0e1e1f79","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Notification.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -54,6 +54,10 @@ public class Notification extends AbstractBaseBean {\n \n     private String recipients;\n \n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"staticRecipients\")\n+    private List<String> staticRecipients;\n+\n     @NotNull\n     @Enumerated(EnumType.STRING)\n     private IntMappingType recipientAttrType;\n@@ -82,6 +86,7 @@ public class Notification extends AbstractBaseBean {\n \n     public Notification() {\n         events = new ArrayList<String>();\n+        staticRecipients = new ArrayList<String>();\n         selfAsRecipient = getBooleanAsInteger(false);\n         traceLevel = TraceLevel.ALL;\n     }\n@@ -141,6 +146,25 @@ public void setEvents(List<String> events) {\n         }\n     }\n \n+    public List<String> getStaticRecipients() {\n+        return staticRecipients;\n+    }\n+\n+    public boolean addStaticRecipient(String staticRecipient) {\n+        return staticRecipient != null && !staticRecipients.contains(staticRecipient) && staticRecipients.add(staticRecipient);\n+    }\n+\n+    public boolean removeStaticRecipient(String staticRecipient) {\n+        return staticRecipient != null && staticRecipients.remove(staticRecipient);\n+    }\n+\n+    public void setStaticRecipients(List<String> staticRecipients) {\n+        this.staticRecipients.clear();\n+        if (staticRecipients != null) {\n+            this.staticRecipients.addAll(staticRecipients);\n+        }\n+    }\n+\n     public boolean isSelfAsRecipient() {\n         return isBooleanAsInteger(selfAsRecipient);\n     }"},{"sha":"0b091872743e0b38d17e2ee8ec97ad1059e66259","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/EmailAddressValidator.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -19,27 +19,21 @@\n package org.apache.syncope.core.persistence.validation.attrvalue;\n \n import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n public class EmailAddressValidator extends AbstractValidator {\n \n     private static final long serialVersionUID = 792457177290331518L;\n \n-    private static final Pattern EMAIL_PATTERN = Pattern.compile(\n-            \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*\"\n-            + \"@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\",\n-            Pattern.CASE_INSENSITIVE);\n-\n     public EmailAddressValidator(final AbstractNormalSchema schema) {\n         super(schema);\n     }\n \n     @Override\n     protected void doValidate(final AbstractAttrValue attributeValue) throws InvalidAttrValueException {\n-        Matcher matcher = EMAIL_PATTERN.matcher(attributeValue.<CharSequence>getValue());\n+        Matcher matcher = SyncopeConstants.EMAIL_PATTERN.matcher(attributeValue.<CharSequence>getValue());\n         if (!matcher.matches()) {\n             throw new InvalidAttrValueException(\"\\\"\" + attributeValue.getValue() + \"\\\" is not a valid email address\");\n         }"},{"sha":"c66f8bed42e6aa9a347b4bd4afe074e8a3814151","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/NotificationValidator.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -18,8 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.validation.entity;\n \n+import java.util.regex.Matcher;\n import javax.validation.ConstraintValidatorContext;\n-\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.Notification;\n \n@@ -39,6 +40,20 @@ public boolean isValid(final Notification value, final ConstraintValidatorContex\n                     addNode(\"events\").addConstraintViolation();\n         }\n \n+        if (!value.getStaticRecipients().isEmpty()) {\n+            for (String mail : value.getStaticRecipients()) {\n+                Matcher matcher = SyncopeConstants.EMAIL_PATTERN.matcher(mail);\n+                if (!matcher.matches()) {\n+                    LOG.error(\"Invalid mail address: {}\", mail);\n+                    isValid = false;\n+\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidNotification, \"Invalid mail address: \" + mail)).\n+                            addNode(\"staticRecipients\").addConstraintViolation();\n+                }\n+            }\n+        }\n+\n         return isValid;\n     }\n }"},{"sha":"f64ee6b588d96a55840bce43ba6ce861ae9a3dfb","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":63,"deletions":4,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -28,14 +28,14 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Random;\n+import java.util.Set;\n \n import javax.annotation.Resource;\n import javax.mail.Flags.Flag;\n import javax.mail.Folder;\n import javax.mail.Message;\n import javax.mail.Session;\n import javax.mail.Store;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.common.SyncopeConstants;\n@@ -252,10 +252,10 @@ public void notifyByMail() throws Exception {\n         assertNotNull(taskId);\n         assertNotNull(textBody);\n         assertTrue(\"Notification mail text doesn't contain expected content.\",\n-\t\t   textBody.contains(\"Your email address is notificationtest@syncope.apache.org.\"));\n+                textBody.contains(\"Your email address is notificationtest@syncope.apache.org.\"));\n         assertTrue(\"Notification mail text doesn't contain expected content.\",\n-\t\t   textBody.contains(\"Your email address inside a link: \" \n-\t\t\t\t     + \"http://localhost/?email=notificationtest%40syncope.apache.org .\"));\n+                textBody.contains(\"Your email address inside a link: \"\n+                        + \"http://localhost/?email=notificationtest%40syncope.apache.org .\"));\n \n         // 5. execute Notification task and verify e-mail\n         taskController.execute(taskId, false);\n@@ -429,4 +429,63 @@ public void notifyByMailWithRetry() throws Exception {\n         confDAO.save(retryConf);\n         confDAO.flush();\n     }\n+\n+    @Test\n+    public void issueSYNCOPE445() throws Exception {\n+        // 1. create suitable notification for subsequent tests\n+        Notification notification = new Notification();\n+        notification.addEvent(\"[REST]:[UserController]:[]:[create]:[SUCCESS]\");\n+        notification.setAbout(SyncopeClient.getUserSearchConditionBuilder().hasRoles(7L).query());\n+        notification.setRecipients(SyncopeClient.getUserSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setSelfAsRecipient(true);\n+\n+        notification.setRecipientAttrName(\"email\");\n+        notification.setRecipientAttrType(IntMappingType.UserSchema);\n+        \n+        notification.getStaticRecipients().add(\"syncope445@syncope.apache.org\");\n+\n+        Random random = new Random(System.currentTimeMillis());\n+        String sender = \"syncopetest-\" + random.nextLong() + \"@syncope.apache.org\";\n+        notification.setSender(sender);\n+        String subject = \"Test notification \" + random.nextLong();\n+        notification.setSubject(subject);\n+        notification.setTemplate(\"optin\");\n+\n+        Notification actual = notificationDAO.save(notification);\n+        assertNotNull(actual);\n+\n+        notificationDAO.flush();\n+\n+        // 2. create user\n+        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(7);\n+        userTO.getMemberships().add(membershipTO);\n+\n+        userController.create(userTO);\n+\n+        // 3. force Quartz job execution and verify e-mail\n+        notificationJob.execute(null);\n+        assertTrue(verifyMail(sender, subject));\n+\n+        // 4. get NotificationTask id and text body\n+        Long taskId = null;\n+        String textBody = null;\n+        Set<String> recipients = null;\n+        for (NotificationTask task : taskDAO.findAll(NotificationTask.class)) {\n+            if (sender.equals(task.getSender())) {\n+                taskId = task.getId();\n+                textBody = task.getTextBody();\n+                recipients = task.getRecipients();\n+            }\n+        }\n+        \n+        assertNotNull(taskId);\n+        assertNotNull(textBody);\n+        assertTrue(recipients.contains(\"syncope445@syncope.apache.org\"));\n+        \n+        // 5. execute Notification task and verify e-mail\n+        taskController.execute(taskId, false);\n+        assertTrue(verifyMail(sender, subject));\n+    }\n }"},{"sha":"261262c0b86db8f62d9c237fefd8e97a8404a8c5","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/NotificationTest.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n+import java.util.ArrayList;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n@@ -45,6 +46,7 @@ public void find() {\n         assertFalse(notification.getEvents().isEmpty());\n         assertNotNull(notification.getAbout());\n         assertNotNull(notification.getRecipients());\n+\n     }\n \n     @Test\n@@ -81,4 +83,31 @@ public void delete() {\n         notificationDAO.delete(1L);\n         assertNull(notificationDAO.find(1L));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE445() {\n+        Notification notification = new Notification();\n+        notification.addEvent(\"save\");\n+\n+        notification.setAbout(SyncopeClient.getUserSearchConditionBuilder().\n+                is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query());\n+\n+        notification.setRecipients(SyncopeClient.getUserSearchConditionBuilder().hasRoles(7L).query());\n+\n+        notification.setRecipientAttrName(\"email\");\n+        notification.setRecipientAttrType(IntMappingType.UserSchema);\n+       \n+        notification.addStaticRecipient(\"syncope445@syncope.apache.org\");\n+        \n+        notification.setSender(\"syncope@syncope.apache.org\");\n+        notification.setSubject(\"Test notification\");\n+        notification.setTemplate(\"test\");\n+\n+        Notification actual = notificationDAO.save(notification);\n+        assertNotNull(actual);\n+        assertNotNull(actual.getId());\n+        assertNotNull(actual.getStaticRecipients());\n+        assertFalse(actual.getStaticRecipients().isEmpty());\n+    }\n+\n }"},{"sha":"dfea01fec7b2c9f968fbbf42be5c3048d2891fb1","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":19,"deletions":1,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aec871593474abe8dc16d654d6d408ad81986990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=aec871593474abe8dc16d654d6d408ad81986990","patch":"@@ -50,7 +50,7 @@ private NotificationTO buildNotificationTO() {\n \n         notificationTO.setRecipientAttrName(\"email\");\n         notificationTO.setRecipientAttrType(IntMappingType.UserSchema);\n-\n+        \n         notificationTO.setSender(\"syncope@syncope.apache.org\");\n         notificationTO.setSubject(\"Test notification\");\n         notificationTO.setTemplate(\"test\");\n@@ -134,4 +134,22 @@ public void issueSYNCOPE83() {\n         assertEquals(actual, notificationTO);\n     }\n \n+    @Test\n+    public void issueSYNCOPE445() {\n+        NotificationTO notificationTO = buildNotificationTO();\n+        notificationTO.getStaticRecipients().add(\"syncope445@syncope.apache.org\");\n+\n+        NotificationTO actual = null;\n+        try {\n+            Response response = notificationService.create(notificationTO);\n+            actual = getObject(response.getLocation(), NotificationService.class, NotificationTO.class);\n+        } catch (SyncopeClientException e) {\n+            assertNotNull(e);\n+        }\n+        assertNotNull(actual);\n+        assertNotNull(actual.getId());\n+        notificationTO.setId(actual.getId());\n+        assertEquals(actual, notificationTO);\n+    }\n+\n }"}]}