{"sha":"77c2999b339ca2c3ef510578780a17a5d0c79f3e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc3YzI5OTliMzM5Y2EyYzNlZjUxMDU3ODc4MGExN2E1ZDBjNzlmM2U=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-15T10:26:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-15T10:26:24Z"},"message":"Small enhancement in ExternalResource entity validation","tree":{"sha":"e025d40e3d07131ae5400f48c61c451797ff0650","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e025d40e3d07131ae5400f48c61c451797ff0650"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/77c2999b339ca2c3ef510578780a17a5d0c79f3e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/77c2999b339ca2c3ef510578780a17a5d0c79f3e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/77c2999b339ca2c3ef510578780a17a5d0c79f3e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/77c2999b339ca2c3ef510578780a17a5d0c79f3e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c1bd770a0b1b8738ea59e90de40238290f181698","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1bd770a0b1b8738ea59e90de40238290f181698","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1bd770a0b1b8738ea59e90de40238290f181698"}],"stats":{"total":32,"additions":20,"deletions":12},"files":[{"sha":"fb5a0a92f5ccb9b4a46fddd3bfa6d7211c886445","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ExternalResourceValidator.java","status":"modified","additions":20,"deletions":12,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/77c2999b339ca2c3ef510578780a17a5d0c79f3e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/77c2999b339ca2c3ef510578780a17a5d0c79f3e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=77c2999b339ca2c3ef510578780a17a5d0c79f3e","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n \n public class ExternalResourceValidator extends AbstractValidator<ExternalResourceCheck, ExternalResource> {\n \n@@ -162,22 +163,29 @@ public boolean isValid(final ExternalResource resource, final ConstraintValidato\n             }\n         }\n \n+        final Set<AnyType> anyTypes = new HashSet<>();\n         final Set<String> objectClasses = new HashSet<>();\n-        boolean validMappings = CollectionUtils.matchesAll(resource.getProvisions(),\n-                new Predicate<Provision>() {\n-\n-                    @Override\n-                    public boolean evaluate(final Provision provision) {\n-                        if (provision.getObjectClass() != null) {\n-                            objectClasses.add(provision.getObjectClass().getObjectClassValue());\n-                        }\n-                        return isValid(provision.getAnyType(), provision.getMapping(), context);\n-                    }\n-                });\n+        boolean validMappings = CollectionUtils.matchesAll(resource.getProvisions(), new Predicate<Provision>() {\n \n+            @Override\n+            public boolean evaluate(final Provision provision) {\n+                anyTypes.add(provision.getAnyType());\n+                if (provision.getObjectClass() != null) {\n+                    objectClasses.add(provision.getObjectClass().getObjectClassValue());\n+                }\n+                return isValid(provision.getAnyType(), provision.getMapping(), context);\n+            }\n+        });\n+\n+        if (anyTypes.size() < resource.getProvisions().size()) {\n+            context.buildConstraintViolationWithTemplate(getTemplate(EntityViolationType.InvalidResource,\n+                    \"Each provision requires a different \" + AnyType.class.getSimpleName())).\n+                    addPropertyNode(\"provisions\").addConstraintViolation();\n+            return false;\n+        }\n         if (objectClasses.size() < resource.getProvisions().size()) {\n             context.buildConstraintViolationWithTemplate(getTemplate(EntityViolationType.InvalidResource,\n-                    \"Each provision requires a different ObjectClass\")).\n+                    \"Each provision requires a different\" + ObjectClass.class.getSimpleName())).\n                     addPropertyNode(\"provisions\").addConstraintViolation();\n             return false;\n         }"}]}