{"sha":"6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZlZGMxZTY3NTU0ZDkwZGQzZDFmYzYyZmYwNjRkYzFiOGEwYzQ5Nzg=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-21T15:32:21Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-21T16:37:41Z"},"message":"Adding a \"None\" signature test-case","tree":{"sha":"f21b713a6a9c81b8208738b9b09eb4f8b0d7f090","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f21b713a6a9c81b8208738b9b09eb4f8b0d7f090"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"7d20e44d1b675f210870b381ad555ef4667c51e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7d20e44d1b675f210870b381ad555ef4667c51e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7d20e44d1b675f210870b381ad555ef4667c51e6"}],"stats":{"total":41,"additions":41,"deletions":0},"files":[{"sha":"703a706dc51dff96a437b275eb82434a332ad0bd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/JWTITCase.java","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java?ref=6edc1e67554d90dd3d1fc62ff064dc1b8a0c4978","patch":"@@ -38,6 +38,7 @@\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactProducer;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureProvider;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n+import org.apache.cxf.rs.security.jose.jws.NoneJwsSignatureProvider;\n import org.apache.cxf.rs.security.jose.jwt.JwtClaims;\n import org.apache.cxf.rs.security.jose.jwt.JwtToken;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -298,4 +299,44 @@ public void testNotBefore() throws ParseException {\n             // expected\n         }\n     }\n+\n+    @Test\n+    public void testNoneSignature() throws ParseException {\n+        // Get an initial token\n+        SyncopeClient adminClient = clientFactory.create(ADMIN_UNAME, ADMIN_PWD);\n+        AccessTokenService accessTokenService = adminClient.getService(AccessTokenService.class);\n+\n+        Response response = accessTokenService.login();\n+        String token = response.getHeaderString(RESTHeaders.TOKEN);\n+        assertNotNull(token);\n+        JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(token);\n+        String tokenId = consumer.getJwtClaims().getTokenId();\n+\n+        // Create a new token using the Id of the first token\n+\n+        JwtClaims jwtClaims = new JwtClaims();\n+        jwtClaims.setTokenId(tokenId);\n+        jwtClaims.setSubject(consumer.getJwtClaims().getSubject());\n+        jwtClaims.setIssuedAt(consumer.getJwtClaims().getIssuedAt());\n+        jwtClaims.setIssuer(consumer.getJwtClaims().getIssuer());\n+        jwtClaims.setExpiryTime(consumer.getJwtClaims().getExpiryTime());\n+        jwtClaims.setNotBefore(consumer.getJwtClaims().getNotBefore());\n+\n+        JwsHeaders jwsHeaders = new JwsHeaders(JoseType.JWT, SignatureAlgorithm.NONE);\n+        JwtToken jwtToken = new JwtToken(jwsHeaders, jwtClaims);\n+        JwsJwtCompactProducer producer = new JwsJwtCompactProducer(jwtToken);\n+\n+        JwsSignatureProvider jwsSignatureProvider = new NoneJwsSignatureProvider();\n+        String signed = producer.signWith(jwsSignatureProvider);\n+\n+        SyncopeClient jwtClient = clientFactory.create(signed);\n+        UserSelfService jwtUserSelfService = jwtClient.getService(UserSelfService.class);\n+        try {\n+            jwtUserSelfService.read();\n+            fail(\"Failure expected on no signature\");\n+        } catch (AccessControlException ex) {\n+            // expected\n+        }\n+    }\n+\n }"}]}