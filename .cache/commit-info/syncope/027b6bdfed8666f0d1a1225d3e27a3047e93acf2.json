{"sha":"027b6bdfed8666f0d1a1225d3e27a3047e93acf2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAyN2I2YmRmZWQ4NjY2ZjBkMWExMjI1ZDNlMjdhMzA0N2U5M2FjZjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-05T07:57:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-05T10:43:01Z"},"message":"[SYNCOPE-1024] New 'upgrade' module ready with tests, old 'migration' removed","tree":{"sha":"3956b3d3cb6e77767d9649d08327bce256fc24b5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3956b3d3cb6e77767d9649d08327bce256fc24b5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/027b6bdfed8666f0d1a1225d3e27a3047e93acf2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/027b6bdfed8666f0d1a1225d3e27a3047e93acf2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/027b6bdfed8666f0d1a1225d3e27a3047e93acf2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dd3d4a3db18d95bb9b796cb2d486289141c3dee1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd3d4a3db18d95bb9b796cb2d486289141c3dee1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd3d4a3db18d95bb9b796cb2d486289141c3dee1"}],"stats":{"total":9113,"additions":5519,"deletions":3594},"files":[{"sha":"cd9830f7b8b10ccfbc480ebe12203a7c94164896","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateCommand.java","status":"removed","additions":0,"deletions":95,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateCommand.java?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,95 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.migrate;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.AbstractCommand;\n-\n-@Command(name = \"migrate\")\n-public class MigrateCommand extends AbstractCommand {\n-\n-    private final MigrateResultManager migrateResultManager = new MigrateResultManager();\n-\n-    @Override\n-    public void execute(final Input input) {\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        switch (Options.fromName(input.getOption())) {\n-            case CONF:\n-                new MigrateConf(input).migrate();\n-                break;\n-\n-            case HELP:\n-                System.out.println(getHelpMessage());\n-                break;\n-\n-            default:\n-                migrateResultManager.defaultOptionMessage(input.getOption(), getHelpMessage());\n-        }\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return migrateResultManager.commandHelpMessage(getClass());\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        CONF(\"--conf\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"8b4884d138f1ce1365cd3ab046f9e3b75b930abe","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateConf.java","status":"removed","additions":0,"deletions":953,"changes":953,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,953 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.migrate;\n-\n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n-import java.io.FileWriter;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.TreeSet;\n-import java.util.UUID;\n-import javax.xml.stream.XMLInputFactory;\n-import javax.xml.stream.XMLOutputFactory;\n-import javax.xml.stream.XMLStreamException;\n-import javax.xml.stream.XMLStreamReader;\n-import javax.xml.stream.XMLStreamWriter;\n-import javax.xml.transform.TransformerException;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter;\n-import org.apache.syncope.client.cli.Input;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class MigrateConf {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(MigrateConf.class);\n-\n-    private static final String HELP_MESSAGE = \"migrate --conf {SRC} {DST}\";\n-\n-    private static final XMLInputFactory INPUT_FACTORY = XMLInputFactory.newInstance();\n-\n-    private static final XMLOutputFactory OUTPUT_FACTORY = XMLOutputFactory.newInstance();\n-\n-    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n-\n-    private final MigrateResultManager migrateResultManager = new MigrateResultManager();\n-\n-    private final Input input;\n-\n-    private static void copyAttrs(\n-            final XMLStreamReader streamReader, final XMLStreamWriter streamWriter, final String... but)\n-            throws XMLStreamException {\n-\n-        Set<String> exceptions = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n-        exceptions.addAll(Arrays.asList(but));\n-        exceptions.add(\"id\");\n-        exceptions.add(\"name\");\n-\n-        for (int i = 0; i < streamReader.getAttributeCount(); i++) {\n-            String name = streamReader.getAttributeLocalName(i);\n-            if (!exceptions.contains(name)) {\n-                streamWriter.writeAttribute(name, streamReader.getAttributeValue(i));\n-            }\n-        }\n-    }\n-\n-    private static String getAttributeValue(final XMLStreamReader streamReader, final String key) {\n-        String value = null;\n-\n-        for (int i = 0; i < streamReader.getAttributeCount(); i++) {\n-            String attrName = streamReader.getAttributeLocalName(i);\n-            if (attrName.equalsIgnoreCase(key)) {\n-                value = streamReader.getAttributeValue(i);\n-            }\n-        }\n-\n-        return value;\n-    }\n-\n-    private static void writeIntAttrName(\n-            final String intMappingType,\n-            final String intAttrNameKey,\n-            final String intAttrNameValue,\n-            final XMLStreamWriter writer)\n-            throws XMLStreamException {\n-\n-        switch (intMappingType) {\n-            case \"UserId\":\n-            case \"RoleId\":\n-                writer.writeAttribute(intAttrNameKey, \"key\");\n-                break;\n-\n-            case \"Username\":\n-                writer.writeAttribute(intAttrNameKey, \"username\");\n-                break;\n-\n-            case \"Password\":\n-                writer.writeAttribute(intAttrNameKey, \"password\");\n-                break;\n-\n-            case \"RoleName\":\n-                writer.writeAttribute(intAttrNameKey, \"name\");\n-                break;\n-\n-            case \"RoleOwnerSchema\":\n-                writer.writeAttribute(intAttrNameKey, \"userOwner\");\n-                break;\n-\n-            default:\n-                if (StringUtils.isNotBlank(intAttrNameValue)) {\n-                    writer.writeAttribute(intAttrNameKey, intAttrNameValue);\n-                }\n-        }\n-    }\n-\n-    private static void exec(final String src, final String dst)\n-            throws XMLStreamException, IOException, TransformerException {\n-\n-        XMLStreamWriter writer = new PrettyPrintXMLStreamWriter(\n-                OUTPUT_FACTORY.createXMLStreamWriter(new FileWriter(dst)), 2);\n-        writer.writeStartDocument(\"UTF-8\", \"1.0\");\n-        writer.writeStartElement(\"dataset\");\n-\n-        StringWriter reporterSW = new StringWriter();\n-        XMLStreamWriter reporter = new PrettyPrintXMLStreamWriter(\n-                OUTPUT_FACTORY.createXMLStreamWriter(reporterSW), 2);\n-        reporter.writeStartDocument(\"UTF-8\", \"1.0\");\n-        reporter.writeStartElement(\"dataset\");\n-\n-        InputStream inputStream = Files.newInputStream(Paths.get(src));\n-        XMLStreamReader reader = INPUT_FACTORY.createXMLStreamReader(inputStream);\n-        reader.nextTag(); // root\n-        reader.nextTag(); // dataset\n-\n-        String realmUUID = UUID.randomUUID().toString();\n-\n-        writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"id\", \"USER\");\n-        writer.writeAttribute(\"kind\", \"USER\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"id\", \"BaseUser\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_id\", \"USER\");\n-        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"id\", \"GROUP\");\n-        writer.writeAttribute(\"kind\", \"GROUP\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"id\", \"BaseGroup\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_id\", \"GROUP\");\n-        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n-        writer.writeEndElement();\n-\n-        writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"id\", \"BaseUMembership\");\n-        writer.writeEndElement();\n-\n-        Set<String> connInstanceCapabilities = new HashSet<>();\n-\n-        String lastUUID;\n-        String syncopeConf = \"cd64d66f-6fff-4008-b966-a06b1cc1436d\";\n-        Map<String, String> cPlainAttrs = new HashMap<>();\n-        Map<String, String> policies = new HashMap<>();\n-        Map<String, String> connInstances = new HashMap<>();\n-        Map<String, String> provisions = new HashMap<>();\n-        Map<String, String> mappings = new HashMap<>();\n-        Map<String, String> tasks = new HashMap<>();\n-        Map<String, String> notifications = new HashMap<>();\n-        Map<String, String> reports = new HashMap<>();\n-\n-        String globalAccountPolicy = null;\n-        String globalPasswordPolicy = null;\n-        while (reader.hasNext()) {\n-            if (reader.isStartElement()) {\n-                switch (reader.getLocalName().toLowerCase()) {\n-                    case \"syncopeconf\":\n-                        writer.writeStartElement(\"SyncopeConf\");\n-                        writer.writeAttribute(\"id\", syncopeConf);\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"cschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"PlainSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"cattr\":\n-                        writer.writeStartElement(\"CPlainAttr\");\n-                        copyAttrs(reader, writer, \"owner_id\", \"schema_name\");\n-                        lastUUID = UUID.randomUUID().toString();\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"owner_id\", syncopeConf);\n-                        writer.writeAttribute(\"schema_id\", getAttributeValue(reader, \"schema_name\"));\n-                        writer.writeEndElement();\n-                        cPlainAttrs.put(getAttributeValue(reader, \"id\"), lastUUID);\n-                        break;\n-\n-                    case \"cattrvalue\":\n-                        writer.writeStartElement(\"CPlainAttrValue\");\n-                        copyAttrs(reader, writer, \"attribute_id\");\n-                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\n-                                \"attribute_id\", cPlainAttrs.get(getAttributeValue(reader, \"attribute_id\")));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"uschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"PlainSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"uderschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"DerSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUser\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"uvirschema\":\n-                        reporter.writeStartElement(\"VirSchema\");\n-                        copyAttrs(reader, reporter);\n-                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        reporter.writeEndElement();\n-                        break;\n-\n-                    case \"rschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"PlainSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"rderschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"DerSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseGroup\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"rvirschema\":\n-                        reporter.writeStartElement(\"VirSchema\");\n-                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        copyAttrs(reader, reporter);\n-                        reporter.writeEndElement();\n-                        break;\n-\n-                    case \"mschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"PlainSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUMembership\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"mderschema\":\n-                        writer.writeStartElement(\"SyncopeSchema\");\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeEndElement();\n-\n-                        writer.writeStartElement(\"DerSchema\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\"anyTypeClass_id\", \"BaseUMembership\");\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"mvirschema\":\n-                        reporter.writeStartElement(\"VirSchema\");\n-                        copyAttrs(reader, reporter);\n-                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n-                        reporter.writeEndElement();\n-                        break;\n-\n-                    case \"policy\":\n-                        String policyId = getAttributeValue(reader, \"id\");\n-                        lastUUID = UUID.randomUUID().toString();\n-                        policies.put(policyId, lastUUID);\n-\n-                        ObjectNode specification = (ObjectNode) OBJECT_MAPPER.readTree(\n-                                getAttributeValue(reader, \"specification\"));\n-\n-                        switch (getAttributeValue(reader, \"DTYPE\")) {\n-                            case \"SyncPolicy\":\n-                                writer.writeStartElement(\"PullPolicy\");\n-                                writer.writeAttribute(\"id\", lastUUID);\n-                                writer.writeAttribute(\n-                                        \"description\", getAttributeValue(reader, \"description\"));\n-                                String specificationAttr = getAttributeValue(reader, \"specification\");\n-                                if (StringUtils.isNotBlank(specificationAttr)) {\n-                                    ObjectNode templateRead = (ObjectNode) OBJECT_MAPPER.readTree(specificationAttr);\n-                                    JsonNode conflictResolutionAction = templateRead.get(\"conflictResolutionAction\");\n-                                    ObjectNode templateWrite = OBJECT_MAPPER.createObjectNode();\n-                                    templateWrite.set(\"conflictResolutionAction\", conflictResolutionAction);\n-                                    writer.writeAttribute(\n-                                            \"specification\", OBJECT_MAPPER.writeValueAsString(templateWrite));\n-                                }\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            case \"PasswordPolicy\":\n-                                writer.writeStartElement(\"PasswordPolicy\");\n-                                writer.writeAttribute(\"id\", lastUUID);\n-                                writer.writeAttribute(\n-                                        \"description\", getAttributeValue(reader, \"description\"));\n-\n-                                if (\"GLOBAL_PASSWORD\".equalsIgnoreCase(getAttributeValue(reader, \"type\"))) {\n-                                    globalPasswordPolicy = lastUUID;\n-                                }\n-\n-                                JsonNode allowNullPassword = specification.get(\"allowNullPassword\");\n-                                if (allowNullPassword != null) {\n-                                    writer.writeAttribute(\n-                                            \"allowNullPassword\", allowNullPassword.asBoolean() ? \"1\" : \"0\");\n-                                    specification.remove(\"allowNullPassword\");\n-                                }\n-                                JsonNode historyLength = specification.get(\"historyLength\");\n-                                if (historyLength != null) {\n-                                    writer.writeAttribute(\"historyLength\", historyLength.asText());\n-                                    specification.remove(\"historyLength\");\n-                                }\n-                                specification.put(\n-                                        \"@class\", \"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\");\n-                                writer.writeEndElement();\n-\n-                                writer.writeStartElement(\"PasswordRuleConfInstance\");\n-                                writer.writeAttribute(\"id\", lastUUID);\n-                                writer.writeAttribute(\"passwordPolicy_id\", lastUUID);\n-                                writer.writeAttribute(\"serializedInstance\", specification.toString());\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            case \"AccountPolicy\":\n-                                writer.writeStartElement(\"AccountPolicy\");\n-                                writer.writeAttribute(\"id\", lastUUID);\n-                                writer.writeAttribute(\n-                                        \"description\", getAttributeValue(reader, \"description\"));\n-\n-                                if (\"GLOBAL_ACCOUNT\".equalsIgnoreCase(getAttributeValue(reader, \"type\"))) {\n-                                    globalAccountPolicy = lastUUID;\n-                                }\n-\n-                                JsonNode propagateSuspension = specification.get(\"propagateSuspension\");\n-                                if (propagateSuspension != null) {\n-                                    writer.writeAttribute(\n-                                            \"propagateSuspension\", propagateSuspension.asBoolean() ? \"1\" : \"0\");\n-                                    specification.remove(\"propagateSuspension\");\n-                                }\n-                                JsonNode permittedLoginRetries = specification.get(\"permittedLoginRetries\");\n-                                if (permittedLoginRetries != null) {\n-                                    writer.writeAttribute(\n-                                            \"maxAuthenticationAttempts\", permittedLoginRetries.asText());\n-                                    specification.remove(\"permittedLoginRetries\");\n-                                }\n-                                specification.put(\n-                                        \"@class\", \"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\");\n-                                writer.writeEndElement();\n-\n-                                writer.writeStartElement(\"AccountRuleConfInstance\");\n-                                writer.writeAttribute(\"id\", lastUUID);\n-                                writer.writeAttribute(\"accountPolicy_id\", lastUUID);\n-                                writer.writeAttribute(\"serializedInstance\", specification.toString());\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            default:\n-                        }\n-                        break;\n-\n-                    case \"conninstance\":\n-                        lastUUID = UUID.randomUUID().toString();\n-                        connInstances.put(getAttributeValue(reader, \"id\"), lastUUID);\n-\n-                        writer.writeStartElement(\"ConnInstance\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"conninstance_capabilities\":\n-                        String connInstanceId = getAttributeValue(reader, \"connInstance_id\");\n-                        String connInstanceKey = connInstances.get(connInstanceId);\n-\n-                        String capabilities = getAttributeValue(reader, \"capabilities\");\n-                        if (capabilities.startsWith(\"ONE_PHASE_\")) {\n-                            capabilities = capabilities.substring(10);\n-                        } else if (capabilities.startsWith(\"TWO_PHASES_\")) {\n-                            capabilities = capabilities.substring(11);\n-                        }\n-                        if (!connInstanceCapabilities.contains(connInstanceId + capabilities)) {\n-                            writer.writeStartElement(\"ConnInstance_capabilities\");\n-                            writer.writeAttribute(\"connInstance_id\", connInstanceKey);\n-                            writer.writeAttribute(\"capability\", capabilities);\n-                            writer.writeEndElement();\n-\n-                            connInstanceCapabilities.add(connInstanceId + capabilities);\n-                        }\n-                        break;\n-\n-                    case \"externalresource\":\n-                        writer.writeStartElement(\"ExternalResource\");\n-                        copyAttrs(reader, writer,\n-                                \"syncTraceLevel\", \"userializedSyncToken\", \"rserializedSyncToken\",\n-                                \"propagationMode\", \"propagationPrimary\", \"connector_id\", \"syncPolicy_id\",\n-                                \"passwordPolicy_id\",\n-                                \"creator\", \"lastModifier\", \"creationDate\", \"lastChangeDate\");\n-\n-                        writer.writeAttribute(\"id\", getAttributeValue(reader, \"name\"));\n-                        writer.writeAttribute(\n-                                \"connector_id\", connInstances.get(getAttributeValue(reader, \"connector_id\")));\n-\n-                        writer.writeAttribute(\"provisioningTraceLevel\", getAttributeValue(reader, \"syncTraceLevel\"));\n-\n-                        String syncPolicyKey = policies.get(getAttributeValue(reader, \"syncPolicy_id\"));\n-                        if (StringUtils.isNotBlank(syncPolicyKey)) {\n-                            writer.writeAttribute(\"pullPolicy_id\", syncPolicyKey);\n-                        }\n-\n-                        String passwordPolicyKey = policies.get(getAttributeValue(reader, \"passwordPolicy_id\"));\n-                        if (StringUtils.isNotBlank(passwordPolicyKey)) {\n-                            writer.writeAttribute(\"passwordPolicy_id\", passwordPolicyKey);\n-                        }\n-\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"externalresource_propactions\":\n-                        writer.writeStartElement(\"ExternalResource_PropActions\");\n-\n-                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"externalResource_name\"));\n-\n-                        String propActionClassName = getAttributeValue(reader, \"element\");\n-                        switch (propActionClassName) {\n-                            case \"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\":\n-                                propActionClassName = \"org.apache.syncope.core.provisioning.java.propagation.\"\n-                                        + \"LDAPMembershipPropagationActions\";\n-                                break;\n-\n-                            case \"org.apache.syncope.core.propagation.impl.LDAPPasswordPropagationActions\":\n-                                propActionClassName = \"org.apache.syncope.core.provisioning.java.propagation.\"\n-                                        + \"LDAPPasswordPropagationActions\";\n-                                break;\n-\n-                            case \"org.apache.syncope.core.propagation.impl.DBPasswordPropagationActions\":\n-                                propActionClassName = \"org.apache.syncope.core.provisioning.java.propagation.\"\n-                                        + \"DBPasswordPropagationActions\";\n-                                break;\n-\n-                            default:\n-                        }\n-                        writer.writeAttribute(\"actionClassName\", propActionClassName);\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"policy_externalresource\":\n-                        writer.writeStartElement(\"AccountPolicy_ExternalResource\");\n-                        writer.writeAttribute(\n-                                \"accountPolicy_id\", policies.get(getAttributeValue(reader, \"account_policy_id\")));\n-                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"umapping\":\n-                        String umappingId = getAttributeValue(reader, \"id\");\n-                        lastUUID = UUID.randomUUID().toString();\n-                        provisions.put(umappingId, lastUUID);\n-\n-                        writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_id\", \"USER\");\n-                        writer.writeAttribute(\"objectClass\", \"__ACCOUNT__\");\n-                        writer.writeEndElement();\n-\n-                        lastUUID = UUID.randomUUID().toString();\n-                        mappings.put(umappingId, lastUUID);\n-\n-                        writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"provision_id\", provisions.get(umappingId));\n-\n-                        String uaccountLink = getAttributeValue(reader, \"accountlink\");\n-                        if (StringUtils.isNotBlank(uaccountLink)) {\n-                            writer.writeAttribute(\"connObjectLink\", uaccountLink);\n-                        }\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"umappingitem\":\n-                        String uIntMappingType = getAttributeValue(reader, \"intMappingType\");\n-                        if (uIntMappingType.endsWith(\"VirtualSchema\")) {\n-                            reporter.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, reporter, \"accountid\", \"intMappingType\");\n-                            reporter.writeEndElement();\n-                        } else {\n-                            writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer, \"purpose\",\n-                                    \"accountid\", \"intMappingType\", \"mapping_id\", \"intMappingType\", \"intAttrName\");\n-                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"mapping_id\", mappings.\n-                                    get(getAttributeValue(reader, \"mapping_id\")));\n-                            writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n-\n-                            writeIntAttrName(\n-                                    uIntMappingType,\n-                                    \"intAttrName\",\n-                                    getAttributeValue(reader, \"intAttrName\"),\n-                                    writer);\n-\n-                            String purposeValue = getAttributeValue(reader, \"purpose\");\n-                            writer.writeAttribute(\"purpose\",\n-                                    \"SYNCHRONIZATION\".equals(purposeValue) ? \"PULL\" : purposeValue);\n-\n-                            writer.writeEndElement();\n-                        }\n-                        break;\n-\n-                    case \"rmapping\":\n-                        String rmappingId = \"10\" + getAttributeValue(reader, \"id\");\n-                        lastUUID = UUID.randomUUID().toString();\n-                        provisions.put(rmappingId, lastUUID);\n-\n-                        writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"resource_id\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_id\", \"GROUP\");\n-                        writer.writeAttribute(\"objectClass\", \"__GROUP__\");\n-                        writer.writeEndElement();\n-\n-                        lastUUID = UUID.randomUUID().toString();\n-                        mappings.put(rmappingId, lastUUID);\n-\n-                        writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"provision_id\", provisions.get(rmappingId));\n-\n-                        String raccountLink = getAttributeValue(reader, \"accountlink\");\n-                        if (StringUtils.isNotBlank(raccountLink)) {\n-                            writer.writeAttribute(\"connObjectLink\", raccountLink);\n-                        }\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"rmappingitem\":\n-                        String rIntMappingType = getAttributeValue(reader, \"intMappingType\");\n-                        if (rIntMappingType.endsWith(\"VirtualSchema\")) {\n-                            reporter.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, reporter, \"accountid\", \"intMappingType\");\n-                            reporter.writeEndElement();\n-                        } else {\n-                            writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer,\n-                                    \"accountid\", \"intMappingType\", \"mapping_id\", \"intAttrName\");\n-                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\n-                                    \"mapping_id\", mappings.get(\"10\" + getAttributeValue(reader, \"mapping_id\")));\n-                            writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n-\n-                            writeIntAttrName(\n-                                    rIntMappingType,\n-                                    \"intAttrName\",\n-                                    mappings.get(getAttributeValue(reader, \"intAttrName\")),\n-                                    writer);\n-\n-                            writer.writeEndElement();\n-                        }\n-                        break;\n-\n-                    case \"task\":\n-                        writer.writeStartElement(\"Task\");\n-                        copyAttrs(reader, writer,\n-                                \"DTYPE\", \"propagationMode\", \"subjectType\", \"subjectId\", \"xmlAttributes\",\n-                                \"jobClassName\", \"userTemplate\", \"roleTemplate\", \"userFilter\", \"roleFilter\",\n-                                \"propagationOperation\", \"syncStatus\", \"fullReconciliation\", \"resource_name\");\n-\n-                        lastUUID = UUID.randomUUID().toString();\n-                        tasks.put(getAttributeValue(reader, \"id\"), lastUUID);\n-\n-                        writer.writeAttribute(\"id\", lastUUID);\n-\n-                        String resourceName = getAttributeValue(reader, \"resource_name\");\n-                        if (StringUtils.isNotBlank(resourceName)) {\n-                            writer.writeAttribute(\"resource_id\", resourceName);\n-                        }\n-\n-                        String name = getAttributeValue(reader, \"name\");\n-                        if (StringUtils.isNotBlank(name)) {\n-                            writer.writeAttribute(\"name\", name);\n-                        }\n-\n-                        switch (getAttributeValue(reader, \"DTYPE\")) {\n-                            case \"PropagationTask\":\n-                                writer.writeAttribute(\"DTYPE\", \"PropagationTask\");\n-                                writer.writeAttribute(\n-                                        \"anyTypeKind\", getAttributeValue(reader, \"subjectType\"));\n-                                writer.writeAttribute(\n-                                        \"anyKey\", getAttributeValue(reader, \"subjectId\"));\n-                                writer.writeAttribute(\n-                                        \"attributes\", getAttributeValue(reader, \"xmlAttributes\"));\n-                                writer.writeAttribute(\n-                                        \"operation\", getAttributeValue(reader, \"propagationOperation\"));\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            case \"SyncTask\":\n-                                writer.writeAttribute(\"DTYPE\", \"PullTask\");\n-                                writer.writeAttribute(\"syncStatus\", getAttributeValue(reader, \"syncStatus\"));\n-                                writer.writeAttribute(\"destinationRealm_id\", realmUUID);\n-\n-                                String fullReconciliation = getAttributeValue(reader, \"fullReconciliation\");\n-                                if (\"1\".equals(fullReconciliation)) {\n-                                    writer.writeAttribute(\"pullMode\", \"FULL_RECONCILIATION\");\n-                                } else if (\"0\".equals(fullReconciliation)) {\n-                                    writer.writeAttribute(\"pullMode\", \"INCREMENTAL\");\n-                                }\n-\n-                                writer.writeEndElement();\n-\n-                                String userTemplate = getAttributeValue(reader, \"userTemplate\");\n-                                if (StringUtils.isNotBlank(userTemplate)) {\n-                                    ObjectNode template = (ObjectNode) OBJECT_MAPPER.readTree(userTemplate);\n-                                    JsonNode plainAttrs = template.remove(\"attributes\");\n-                                    template.set(\"plainAttrs\", plainAttrs);\n-                                    template.remove(\"id\");\n-                                    template.set(\"key\", null);\n-                                    template.remove(\"readonly\");\n-                                    JsonNode derAttrs = template.remove(\"derivedAttributes\");\n-                                    template.set(\"derAttrs\", derAttrs);\n-                                    JsonNode virAttrs = template.remove(\"virtualAttributes\");\n-                                    template.set(\"virAttrs\", virAttrs);\n-                                    template.remove(\"propagationStatuses\");\n-\n-                                    writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pullTask_id\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_id\", \"USER\");\n-                                    writer.writeAttribute(\"template\", template.toString());\n-                                    writer.writeEndElement();\n-                                }\n-                                String roleTemplate = getAttributeValue(reader, \"roleTemplate\");\n-                                if (StringUtils.isNotBlank(roleTemplate)) {\n-                                    ObjectNode template = (ObjectNode) OBJECT_MAPPER.readTree(roleTemplate);\n-                                    JsonNode plainAttrs = template.remove(\"attributes\");\n-                                    template.set(\"plainAttrs\", plainAttrs);\n-                                    template.remove(\"id\");\n-                                    template.set(\"key\", null);\n-                                    template.remove(\"readonly\");\n-                                    JsonNode derAttrs = template.remove(\"derivedAttributes\");\n-                                    template.set(\"derAttrs\", derAttrs);\n-                                    JsonNode virAttrs = template.remove(\"virtualAttributes\");\n-                                    template.set(\"virAttrs\", virAttrs);\n-                                    template.remove(\"propagationStatuses\");\n-\n-                                    writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pullTask_id\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_id\", \"GROUP\");\n-                                    writer.writeAttribute(\"template\", template.toString());\n-                                    writer.writeEndElement();\n-                                }\n-\n-                                break;\n-\n-                            case \"SchedTask\":\n-                                writer.writeAttribute(\"DTYPE\", \"SchedTask\");\n-                                writer.writeAttribute(\n-                                        \"jobDelegateClassName\", getAttributeValue(reader, \"jobClassName\"));\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            case \"NotificationTask\":\n-                                writer.writeAttribute(\"DTYPE\", \"NotificationTask\");\n-                                writer.writeEndElement();\n-                                break;\n-\n-                            case \"PushTask\":\n-                                writer.writeAttribute(\"DTYPE\", \"PushTask\");\n-                                writer.writeEndElement();\n-\n-                                String userFilter = getAttributeValue(reader, \"userFilter\");\n-                                if (StringUtils.isNotBlank(userFilter)) {\n-                                    writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pushTask_id\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_id\", \"USER\");\n-                                    writer.writeAttribute(\"fiql\", userFilter);\n-                                    writer.writeEndElement();\n-                                }\n-                                String roleFilter = getAttributeValue(reader, \"roleFilter\");\n-                                if (StringUtils.isNotBlank(roleFilter)) {\n-                                    writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                                    writer.writeAttribute(\"pushTask_id\", lastUUID);\n-                                    writer.writeAttribute(\"anyType_id\", \"GROUP\");\n-                                    writer.writeAttribute(\"fiql\", roleFilter);\n-                                    writer.writeEndElement();\n-                                }\n-                                break;\n-\n-                            default:\n-                        }\n-                        break;\n-\n-                    case \"taskexec\":\n-                        writer.writeStartElement(\"TaskExec\");\n-                        copyAttrs(reader, writer, \"task_id\");\n-                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"task_id\", tasks.get(getAttributeValue(reader, \"task_id\")));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"synctask_actionsclassnames\":\n-                        writer.writeStartElement(\"PullTask_actionsClassNames\");\n-                        writer.writeAttribute(\n-                                \"pullTask_id\", tasks.get(getAttributeValue(reader, \"syncTask_id\")));\n-\n-                        String syncActionClassName = getAttributeValue(reader, \"element\");\n-                        switch (syncActionClassName) {\n-                            case \"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\":\n-                                syncActionClassName = \"org.apache.syncope.core.provisioning.\"\n-                                        + \"java.pushpull.LDAPMembershipPullActions\";\n-                                break;\n-\n-                            case \"org.apache.syncope.core.sync.impl.LDAPPasswordSyncActions\":\n-                                syncActionClassName =\n-                                        \"org.apache.syncope.core.provisioning.java.pushpull.LDAPPasswordPullActions\";\n-                                break;\n-\n-                            case \"org.apache.syncope.core.sync.impl.DBPasswordSyncActions\":\n-                                syncActionClassName =\n-                                        \"org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions\";\n-                                break;\n-\n-                            default:\n-                        }\n-                        writer.writeAttribute(\"actionClassName\", syncActionClassName);\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"notification\":\n-                        writer.writeStartElement(\"Notification\");\n-\n-                        lastUUID = UUID.randomUUID().toString();\n-                        notifications.put(getAttributeValue(reader, \"id\"), lastUUID);\n-\n-                        writer.writeAttribute(\"id\", lastUUID);\n-\n-                        copyAttrs(reader, writer,\n-                                \"recipientAttrType\", \"template\", \"userAbout\", \"roleAbout\", \"recipients\",\n-                                \"recipientAttrName\");\n-\n-                        String recipientAttrType = getAttributeValue(reader, \"recipientAttrType\");\n-                        writeIntAttrName(\n-                                recipientAttrType,\n-                                \"recipientAttrName\",\n-                                mappings.get(getAttributeValue(reader, \"recipientAttrName\")),\n-                                writer);\n-\n-                        String recipients = getAttributeValue(reader, \"recipients\");\n-                        if (StringUtils.isNotBlank(recipients)) {\n-                            writer.writeAttribute(\"recipientsFIQL\", getAttributeValue(reader, \"recipients\"));\n-                        }\n-                        writer.writeAttribute(\"template_id\", getAttributeValue(reader, \"template\"));\n-                        writer.writeEndElement();\n-\n-                        String userAbout = getAttributeValue(reader, \"userAbout\");\n-                        if (StringUtils.isNotBlank(userAbout)) {\n-                            writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"notification_id\", lastUUID);\n-                            writer.writeAttribute(\"anyType_id\", \"USER\");\n-                            writer.writeAttribute(\"filter\", userAbout);\n-                            writer.writeEndElement();\n-                        }\n-                        String roleAbout = getAttributeValue(reader, \"roleAbout\");\n-                        if (StringUtils.isNotBlank(roleAbout)) {\n-                            writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                            writer.writeAttribute(\"notification_id\", lastUUID);\n-                            writer.writeAttribute(\"anyType_id\", \"GROUP\");\n-                            writer.writeAttribute(\"filter\", roleAbout);\n-                            writer.writeEndElement();\n-                        }\n-                        break;\n-\n-                    case \"notification_events\":\n-                        writer.writeStartElement(\"Notification_events\");\n-                        copyAttrs(reader, writer, \"notification_id\", \"events\");\n-                        writer.writeAttribute(\n-                                \"notification_id\", notifications.get(getAttributeValue(reader, \"notification_id\")));\n-                        writer.writeAttribute(\n-                                \"event\", getAttributeValue(reader, \"events\").\n-                                        replaceAll(\"Controller\", \"Logic\"));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"notificationtask_recipients\":\n-                        writer.writeStartElement(\"NotificationTask_recipients\");\n-                        copyAttrs(reader, writer, \"notificationTask_id\");\n-                        writer.writeAttribute(\n-                                \"notificationTask_id\",\n-                                tasks.get(getAttributeValue(reader, \"notificationTask_id\")));\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"report\":\n-                        writer.writeStartElement(\"Report\");\n-                        copyAttrs(reader, writer);\n-\n-                        lastUUID = UUID.randomUUID().toString();\n-                        reports.put(getAttributeValue(reader, \"id\"), lastUUID);\n-\n-                        writer.writeAttribute(\"id\", lastUUID);\n-                        writer.writeAttribute(\"name\", getAttributeValue(reader, \"name\"));\n-\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"reportletconfinstance\":\n-                        writer.writeStartElement(\"ReportletConfInstance\");\n-                        copyAttrs(reader, writer, \"report_id\");\n-\n-                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"report_id\", reports.get(getAttributeValue(reader, \"report_id\")));\n-\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"reportexec\":\n-                        writer.writeStartElement(\"ReportExec\");\n-                        copyAttrs(reader, writer, \"report_id\");\n-\n-                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                        writer.writeAttribute(\"report_id\", reports.get(getAttributeValue(reader, \"report_id\")));\n-\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    case \"securityquestion\":\n-                        writer.writeStartElement(\"SecurityQuestion\");\n-                        copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"id\", UUID.randomUUID().toString());\n-                        writer.writeEndElement();\n-                        break;\n-\n-                    default:\n-                }\n-            }\n-\n-            reader.next();\n-        }\n-\n-        writer.writeStartElement(\"Realm\");\n-        writer.writeAttribute(\"id\", realmUUID);\n-        writer.writeAttribute(\"name\", \"/\");\n-        if (globalAccountPolicy != null) {\n-            writer.writeAttribute(\"accountPolicy_id\", globalAccountPolicy);\n-        }\n-        if (globalPasswordPolicy != null) {\n-            writer.writeAttribute(\"passwordPolicy_id\", globalPasswordPolicy);\n-        }\n-        writer.writeEndElement();\n-\n-        writer.writeEndElement();\n-        writer.writeEndDocument();\n-        writer.close();\n-\n-        reporter.writeEndElement();\n-        reporter.writeEndDocument();\n-        reporter.close();\n-        System.out.println(\"\\nVirtual items, require manual intervention:\\n\" + reporterSW.toString());\n-    }\n-\n-    public MigrateConf(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void migrate() {\n-        if (input.parameterNumber() == 2) {\n-            try {\n-                exec(input.firstParameter(), input.secondParameter());\n-                migrateResultManager.genericMessage(\n-                        \"Migration completed; file successfully created under \" + input.secondParameter());\n-            } catch (Exception e) {\n-                LOG.error(\"Error migrating configuration from {}\", input.firstParameter(), e);\n-                StringWriter errors = new StringWriter();\n-                e.printStackTrace(new PrintWriter(errors));\n-                migrateResultManager.genericError(\"Error performing configuration migration: \"\n-                        + errors.toString());\n-            }\n-        } else {\n-            migrateResultManager.commandOptionError(HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"4c6632b752c5f79c2fbf3c7b6494e80fa5e5ef84","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateResultManager.java","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateResultManager.java?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,24 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.migrate;\n-\n-import org.apache.syncope.client.cli.commands.CommonsResultManager;\n-\n-public class MigrateResultManager extends CommonsResultManager {\n-}"},{"sha":"0b1c749228b848b732af984e13528934b197a8ae","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java","status":"removed","additions":0,"deletions":83,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,83 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands;\n-\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.Properties;\n-import javax.sql.DataSource;\n-import javax.xml.parsers.SAXParser;\n-import javax.xml.parsers.SAXParserFactory;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.migrate.MigrateCommand;\n-import org.apache.syncope.core.persistence.jpa.content.ContentLoaderHandler;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.core.io.ClassPathResource;\n-import org.springframework.jdbc.datasource.DriverManagerDataSource;\n-import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n-\n-public class MigrateTest {\n-\n-    private static final String ROOT_ELEMENT = \"dataset\";\n-\n-    private static String BASE_PATH;\n-\n-    @BeforeAll\n-    public static void before() {\n-        Properties props = new Properties();\n-        try (InputStream propStream = MigrateTest.class.getResourceAsStream(\"/test.properties\")) {\n-            props.load(propStream);\n-\n-            BASE_PATH = props.getProperty(\"testClasses\");\n-        } catch (IOException e) {\n-            fail(e.getMessage());\n-        }\n-        assertNotNull(BASE_PATH);\n-    }\n-\n-    @Test\n-    public void conf() throws Exception {\n-        // 1. migrate\n-        String[] args = new String[4];\n-        args[0] = \"migrate\";\n-        args[1] = \"--conf\";\n-        args[2] = BASE_PATH + File.separator + \"content12.xml\";\n-        args[3] = BASE_PATH + File.separator + \"MasterContent.xml\";\n-\n-        new MigrateCommand().execute(new Input(args));\n-\n-        // 2. initialize db as persistence-jpa does\n-        DataSource dataSource = new DriverManagerDataSource(\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\", \"sa\", null);\n-\n-        new ResourceDatabasePopulator(new ClassPathResource(\"/schema20.sql\")).execute(dataSource);\n-\n-        // 3. attempt to set initial content from the migrated MasterContent.xml\n-        SAXParserFactory factory = SAXParserFactory.newInstance();\n-        try (InputStream in = new FileInputStream(args[3])) {\n-            SAXParser parser = factory.newSAXParser();\n-            parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT, false));\n-        }\n-    }\n-}"},{"sha":"2b3c2ae9e3fbe404c2e2057a72414cc86f575b05","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/CommandUtilsTest.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -22,7 +22,6 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n-import java.lang.reflect.InvocationTargetException;\n import java.util.List;\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n@@ -31,9 +30,7 @@\n public class CommandUtilsTest {\n \n     @Test\n-    public void fromArgs() throws InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n-\n+    public void fromArgs() throws Exception {\n         String commandName = \"logger\";\n         AbstractCommand command = CommandUtils.fromArgs(commandName);\n         assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n@@ -49,11 +46,9 @@ public void fromArgs() throws InstantiationException, IllegalAccessException,\n     }\n \n     @Test\n-    public void commands() throws InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n-\n+    public void commands() throws Exception {\n         List<AbstractCommand> commands = CommandUtils.commands();\n         assertFalse(commands.isEmpty());\n-        assertEquals(22, commands.size());\n+        assertEquals(21, commands.size());\n     }\n }"},{"sha":"7512c6307db1cf399a98d19475a5e64f3d301e03","filename":"client/cli/src/test/resources/content12.xml","status":"removed","additions":0,"deletions":1154,"changes":1154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1"},{"sha":"4cdad60e276066be11bfe9b91f48ccc0d983466b","filename":"client/cli/src/test/resources/schema20.sql","status":"removed","additions":0,"deletions":229,"changes":229,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,229 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-CREATE TABLE AccountPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (id));\n-CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_id VARCHAR(36), resource_id VARCHAR(255));\n-CREATE TABLE AccountRuleConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE ADynGroupMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_id VARCHAR(36), anyObject_id VARCHAR(36));\n-CREATE TABLE AMembership (id VARCHAR(36) NOT NULL, anyObject_id VARCHAR(36), group_id VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE AnyAbout (id VARCHAR(36) NOT NULL, filter CLOB, ANYTYPE_ID VARCHAR(255), NOTIFICATION_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_NYABOUT_NOTIFICATION_ID UNIQUE (NOTIFICATION_ID, ANYTYPE_ID));\n-CREATE TABLE AnyObject (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_ID VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYOBJCT_NAME UNIQUE (name));\n-CREATE TABLE AnyObject_AnyTypeClass (anyObject_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE AnyObject_ExternalResource (anyObject_id VARCHAR(36), resource_id VARCHAR(255));\n-CREATE TABLE AnyTemplatePullTask (id VARCHAR(36) NOT NULL, template CLOB, PULLTASK_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMTSK_PULLTASK_ID UNIQUE (PULLTASK_ID, ANYTYPE_ID));\n-CREATE TABLE AnyTemplateRealm (id VARCHAR(36) NOT NULL, template CLOB, REALM_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMRLM_REALM_ID UNIQUE (REALM_ID, ANYTYPE_ID));\n-CREATE TABLE AnyType (id VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (id));\n-CREATE TABLE AnyTypeClass (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n-CREATE TABLE AnyType_AnyTypeClass (anyType_id VARCHAR(255), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE APlainAttr (id VARCHAR(36) NOT NULL, OWNER_ID VARCHAR(36), schema_id VARCHAR(255), MEMBERSHIP_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE APlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_id));\n-CREATE TABLE APlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE ARelationship (id VARCHAR(36) NOT NULL, left_anyObject_id VARCHAR(36), right_anyObject_id VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_ID UNIQUE (TYPE_ID, left_anyObject_id, right_anyObject_id));\n-CREATE TABLE ConnInstance (id VARCHAR(36) NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (id), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n-CREATE TABLE ConnInstance_capabilities (connInstance_id VARCHAR(36), capability VARCHAR(20));\n-CREATE TABLE CPlainAttr (id VARCHAR(36) NOT NULL, schema_id VARCHAR(255), OWNER_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE CPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_id));\n-CREATE TABLE CPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE DerSchema (id VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE DynRoleMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), ROLE_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE DynRoleMembership_User (dynRoleMembership_id VARCHAR(36), user_id VARCHAR(36));\n-CREATE TABLE ExternalResource (id VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, provisioningTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_ID VARCHAR(36), CONNECTOR_ID VARCHAR(36), PASSWORDPOLICY_ID VARCHAR(36), PULLPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE ExternalResource_capOverride (resource_id VARCHAR(255), capabilityOverride VARCHAR(20));\n-CREATE TABLE ExternalResource_PropActions (resource_id VARCHAR(255), actionClassName VARCHAR(255));\n-CREATE TABLE GPlainAttr (id VARCHAR(36) NOT NULL, OWNER_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE GPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_id), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_id), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_id), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_id), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_id));\n-CREATE TABLE GPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE MailTemplate (id VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (id));\n-CREATE TABLE Mapping (id VARCHAR(36) NOT NULL, connObjectLink VARCHAR(255), PROVISION_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE MappingItem (id VARCHAR(36) NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), mandatoryCondition VARCHAR(255), password INTEGER, propJEXL VARCHAR(255), pullJEXL VARCHAR(255), purpose VARCHAR(20), MAPPING_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE MappingItem_Transformer (mappingItem_id VARCHAR(36), transformerClassName VARCHAR(255));\n-CREATE TABLE Notification (id VARCHAR(36) NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_id VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE NotificationTask_recipients (notificationTask_id VARCHAR(36), address VARCHAR(255));\n-CREATE TABLE Notification_events (notification_id VARCHAR(36), event VARCHAR(255));\n-CREATE TABLE Notification_staticRecipients (notification_id VARCHAR(36), staticRecipients VARCHAR(255));\n-CREATE TABLE OrgUnit (id VARCHAR(36) NOT NULL, connObjectLink VARCHAR(255), extAttrName VARCHAR(255), objectClass VARCHAR(255), serializedSyncToken CLOB, RESOURCE_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE PasswordPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (id));\n-CREATE TABLE PasswordRuleConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE PlainSchema (id VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_ID VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE Provision (id VARCHAR(36) NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, ANYTYPE_ID VARCHAR(255), RESOURCE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PROVSON_RESOURCE_ID UNIQUE (RESOURCE_ID, ANYTYPE_ID));\n-CREATE TABLE Provision_AnyTypeClass (provision_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE PullPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n-CREATE TABLE PullTask_actionsClassNames (pullTask_id VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE PushPolicy (id VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n-CREATE TABLE PushTaskAnyFilter (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), PUSHTASK_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PSHTLTR_PUSHTASK_ID UNIQUE (PUSHTASK_ID, ANYTYPE_ID));\n-CREATE TABLE PushTask_actionsClassNames (pushTask_id VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE Realm (id VARCHAR(36) NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_ID VARCHAR(36), PARENT_ID VARCHAR(36), PASSWORDPOLICY_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_REALM_ID UNIQUE (id, PARENT_ID));\n-CREATE TABLE Realm_actionsClassNames (realm_id VARCHAR(36), actionClassName VARCHAR(255));\n-CREATE TABLE Realm_ExternalResource (realm_id VARCHAR(36), resource_id VARCHAR(255));\n-CREATE TABLE RelationshipType (id VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE Report (id VARCHAR(36) NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n-CREATE TABLE ReportExec (id VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE ReportletConfInstance (id VARCHAR(36) NOT NULL, serializedInstance CLOB, REPORT_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE ReportTemplate (id VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (id));\n-CREATE TABLE SecurityQuestion (id VARCHAR(36) NOT NULL, content VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n-CREATE TABLE SyncopeConf (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n-CREATE TABLE SyncopeDomain (id VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE SyncopeGroup (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_ID VARCHAR(36), GROUPOWNER_ID VARCHAR(36), USEROWNER_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n-CREATE TABLE SyncopeGroup_AnyTypeClass (group_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE SyncopeGroup_ExternalResource (group_id VARCHAR(36), resource_id VARCHAR(255));\n-CREATE TABLE SyncopeLogger (logName VARCHAR(255) NOT NULL, logLevel VARCHAR(20) NOT NULL, logType VARCHAR(20) NOT NULL, PRIMARY KEY (logName));\n-CREATE TABLE SyncopeRole (id VARCHAR(255) NOT NULL, consoleLayoutInfo CLOB, PRIMARY KEY (id));\n-CREATE TABLE SyncopeRole_entitlements (role_id VARCHAR(255), entitlement VARCHAR(255));\n-CREATE TABLE SyncopeRole_Realm (role_id VARCHAR(255), realm_id VARCHAR(36));\n-CREATE TABLE SyncopeSchema (id VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n-CREATE TABLE SyncopeUser (id VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_ID VARCHAR(36), SECURITYQUESTION_ID VARCHAR(36), PRIMARY KEY (id), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n-CREATE TABLE SyncopeUser_AnyTypeClass (user_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE SyncopeUser_ExternalResource (user_id VARCHAR(36), resource_id VARCHAR(255));\n-CREATE TABLE SyncopeUser_passwordHistory (user_id VARCHAR(36), passwordHistoryValue VARCHAR(255));\n-CREATE TABLE SyncopeUser_SyncopeRole (user_id VARCHAR(36), role_id VARCHAR(255));\n-CREATE TABLE Task (id VARCHAR(36) NOT NULL, DTYPE VARCHAR(31), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, syncStatus INTEGER, unmatchingRule VARCHAR(20), RESOURCE_ID VARCHAR(255), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), DESTINATIONREALM_ID VARCHAR(36), anyKey VARCHAR(255), anyTypeKind VARCHAR(20), executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), NOTIFICATION_ID VARCHAR(36), anyType VARCHAR(255), attributes CLOB, connObjectKey VARCHAR(255), entityKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), PRIMARY KEY (id));\n-CREATE TABLE TaskExec (id VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE TypeExtension (id VARCHAR(36) NOT NULL, GROUP_ID VARCHAR(36), ANYTYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_TYPXNSN_GROUP_ID UNIQUE (GROUP_ID, ANYTYPE_ID));\n-CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_id VARCHAR(36), anyTypeClass_id VARCHAR(255));\n-CREATE TABLE UDynGroupMembership (id VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_id VARCHAR(36), user_id VARCHAR(36));\n-CREATE TABLE UMembership (id VARCHAR(36) NOT NULL, user_id VARCHAR(36), group_id VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE UPlainAttr (id VARCHAR(36) NOT NULL, OWNER_ID VARCHAR(36), schema_id VARCHAR(255), MEMBERSHIP_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE UPlainAttrUniqueValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), schema_id VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_id), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_id), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_id), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_id), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_id));\n-CREATE TABLE UPlainAttrValue (id VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE TABLE URelationship (id VARCHAR(36) NOT NULL, user_id VARCHAR(36), anyObject_id VARCHAR(36), TYPE_ID VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_ID1 UNIQUE (TYPE_ID, user_id, anyObject_id));\n-CREATE TABLE VirSchema (id VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_ID VARCHAR(255), PROVISION_ID VARCHAR(36), PRIMARY KEY (id));\n-CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_ID ON AccountPolicy_ExternalResource (accountPolicy_id);\n-CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_id);\n-CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_ID);\n-CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_ID);\n-CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_ID ON ADynGroupMembership_AnyObject (aDynGroupMembership_id);\n-CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_id);\n-CREATE INDEX I_MMBRSHP_LEFTEND ON AMembership (anyObject_id);\n-CREATE INDEX I_MMBRSHP_RIGHTEND ON AMembership (group_id);\n-CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_ID);\n-CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_ID);\n-CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_ID);\n-CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_ID);\n-CREATE INDEX I_NYBJLSS_ANYOBJECT_ID ON AnyObject_AnyTypeClass (anyObject_id);\n-CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_NYBJSRC_ANYOBJECT_ID ON AnyObject_ExternalResource (anyObject_id);\n-CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_id);\n-CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_ID);\n-CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_ID);\n-CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_ID);\n-CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_ID);\n-CREATE INDEX I_NYTYLSS_ANYTYPE_ID ON AnyType_AnyTypeClass (anyType_id);\n-CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_PLINTTR_MEMBERSHIP ON APlainAttr (MEMBERSHIP_ID);\n-CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_ID);\n-CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_id);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE ON APlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_PLNTQVL_SCHEMA ON APlainAttrUniqueValue (schema_id);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE ON APlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_RLTNSHP_LEFTEND ON ARelationship (left_anyObject_id);\n-CREATE INDEX I_RLTNSHP_RIGHTEND ON ARelationship (right_anyObject_id);\n-CREATE INDEX I_RLTNSHP_TYPE ON ARelationship (TYPE_ID);\n-CREATE INDEX I_CNNNLTS_CONNINSTANCE_ID ON ConnInstance_capabilities (connInstance_id);\n-CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_ID);\n-CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_id);\n-CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_id);\n-CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_ID);\n-CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_ID);\n-CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_ID ON DynRoleMembership_User (dynRoleMembership_id);\n-CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_id);\n-CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_ID);\n-CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_ID);\n-CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_ID);\n-CREATE INDEX I_XTRNRRD_RESOURCE_ID ON ExternalResource_capOverride (resource_id);\n-CREATE INDEX I_XTRNTNS_RESOURCE_ID ON ExternalResource_PropActions (resource_id);\n-CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_ID);\n-CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_id);\n-CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_id);\n-CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_ID);\n-CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_ID);\n-CREATE INDEX I_MPPNRMR_MAPPINGITEM_ID ON MappingItem_Transformer (mappingItem_id);\n-CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_id);\n-CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_ID ON NotificationTask_recipients (notificationTask_id);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_ID ON Notification_events (notification_id);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_ID1 ON Notification_staticRecipients (notification_id);\n-CREATE INDEX I_ORGUNIT_RESOURCE ON OrgUnit (RESOURCE_ID);\n-CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_ID);\n-CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_ID);\n-CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_ID);\n-CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_ID);\n-CREATE INDEX I_PRVSLSS_ELEMENT ON Provision_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_PRVSLSS_PROVISION_ID ON Provision_AnyTypeClass (provision_id);\n-CREATE INDEX I_PLLTNMS_PULLTASK_ID ON PullTask_actionsClassNames (pullTask_id);\n-CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_ID);\n-CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_ID);\n-CREATE INDEX I_PSHTNMS_PUSHTASK_ID ON PushTask_actionsClassNames (pushTask_id);\n-CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_REALM_PARENT ON Realm (PARENT_ID);\n-CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_ID);\n-CREATE INDEX I_RLM_NMS_REALM_ID ON Realm_actionsClassNames (realm_id);\n-CREATE INDEX I_RLM_SRC_ELEMENT ON Realm_ExternalResource (resource_id);\n-CREATE INDEX I_RLM_SRC_REALM_ID ON Realm_ExternalResource (realm_id);\n-CREATE INDEX I_REPORT_TEMPLATE ON Report (template_id);\n-CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_ID);\n-CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_ID);\n-CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_ID);\n-CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_ID);\n-CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_ID);\n-CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_SYNCLSS_GROUP_ID ON SyncopeGroup_AnyTypeClass (group_id);\n-CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_id);\n-CREATE INDEX I_SYNCSRC_GROUP_ID ON SyncopeGroup_ExternalResource (group_id);\n-CREATE INDEX I_SYNCNTS_ROLE_ID ON SyncopeRole_entitlements (role_id);\n-CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_id);\n-CREATE INDEX I_SYNCRLM_ROLE_ID ON SyncopeRole_Realm (role_id);\n-CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_ID);\n-CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_ID);\n-CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_SYNCLSS_USER_ID ON SyncopeUser_AnyTypeClass (user_id);\n-CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_id);\n-CREATE INDEX I_SYNCSRC_USER_ID ON SyncopeUser_ExternalResource (user_id);\n-CREATE INDEX I_SYNCTRY_USER_ID ON SyncopeUser_passwordHistory (user_id);\n-CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_id);\n-CREATE INDEX I_SYNCPRL_USER_ID ON SyncopeUser_SyncopeRole (user_id);\n-CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_ID);\n-CREATE INDEX I_TASK_DTYPE ON Task (DTYPE);\n-CREATE INDEX I_TASK_NOTIFICATION ON Task (NOTIFICATION_ID);\n-CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_ID);\n-CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_ID);\n-CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_ID);\n-CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_ID);\n-CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_id);\n-CREATE INDEX I_TYPXLSS_TYPEEXTENSION_ID ON TypeExtension_AnyTypeClass (typeExtension_id);\n-CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_ID);\n-CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_id);\n-CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_ID ON UDynGroupMembership_User (uDynGroupMembership_id);\n-CREATE INDEX I_MMBRSHP_LEFTEND1 ON UMembership (user_id);\n-CREATE INDEX I_MMBRSHP_RIGHTEND1 ON UMembership (group_id);\n-CREATE INDEX I_UPLNTTR_MEMBERSHIP ON UPlainAttr (MEMBERSHIP_ID);\n-CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_ID);\n-CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_id);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON UPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_PLNTQVL_SCHEMA1 ON UPlainAttrUniqueValue (schema_id);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON UPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_RLTNSHP_LEFTEND1 ON URelationship (user_id);\n-CREATE INDEX I_RLTNSHP_RIGHTEND1 ON URelationship (anyObject_id);\n-CREATE INDEX I_RLTNSHP_TYPE1 ON URelationship (TYPE_ID);\n-CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_ID);\n-CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_ID);"},{"sha":"dcca9d3c98cade4a691ac6be2c745089173fce18","filename":"core/migration/pom.xml","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fpom.xml?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,63 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope</groupId>\n-    <artifactId>syncope-core</artifactId>\n-    <version>2.1.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Core Migration</name>\n-  <description>Apache Syncope Core Migration</description>\n-  <groupId>org.apache.syncope.core</groupId>\n-  <artifactId>syncope-core-migration</artifactId>\n-  <packaging>jar</packaging>\n-  \n-  <properties>\n-    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-provisioning-java</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-  </dependencies>\n-\n-  <build>\n-    <resources>\n-      <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n-        <filtering>true</filtering>\n-      </resource>\n-    </resources>\n-        \n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-  </build>\n-</project>"},{"sha":"00cf2e9294acd73a95e287854fb158c9a720d861","filename":"core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java","status":"removed","additions":0,"deletions":137,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,137 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.migration;\n-\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.CipherAlgorithm;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.java.job.SetUMembershipsJob;\n-import org.apache.syncope.core.provisioning.java.pushpull.SchedulingPullActions;\n-import org.identityconnectors.common.security.GuardedString;\n-import org.identityconnectors.common.security.SecurityUtil;\n-import org.identityconnectors.framework.common.objects.Attribute;\n-import org.identityconnectors.framework.common.objects.AttributeUtil;\n-import org.identityconnectors.framework.common.objects.SyncDelta;\n-import org.quartz.JobExecutionException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-public class MigrationPullActions extends SchedulingPullActions {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(MigrationPullActions.class);\n-\n-    private static final String CIPHER_ALGORITHM_ATTR = \"cipherAlgorithm\";\n-\n-    private static final String RESOURCES_ATTR = \"__RESOURCES__\";\n-\n-    private static final String MEMBERSHIPS_ATTR = \"__MEMBERSHIPS__\";\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    private final Map<String, Set<String>> memberships = new HashMap<>();\n-\n-    @Override\n-    public void beforeProvision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final EntityTO entity) throws JobExecutionException {\n-\n-        // handles resource assignment, for users and groups\n-        Attribute resourcesAttr = delta.getObject().getAttributeByName(RESOURCES_ATTR);\n-        if (entity instanceof AnyTO && resourcesAttr != null\n-                && resourcesAttr.getValue() != null && !resourcesAttr.getValue().isEmpty()) {\n-\n-            ((AnyTO) entity).getResources().addAll(\n-                    resourcesAttr.getValue().stream().map(Object::toString).collect(Collectors.toList()));\n-        }\n-    }\n-\n-    @Transactional\n-    @Override\n-    public void after(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity,\n-            final ProvisioningReport result)\n-            throws JobExecutionException {\n-\n-        if (entity instanceof UserTO) {\n-            // handles ciphered password import\n-            CipherAlgorithm cipherAlgorithm = null;\n-            Attribute cipherAlgorithmAttr = delta.getObject().getAttributeByName(CIPHER_ALGORITHM_ATTR);\n-            if (cipherAlgorithmAttr != null\n-                    && cipherAlgorithmAttr.getValue() != null && !cipherAlgorithmAttr.getValue().isEmpty()) {\n-\n-                cipherAlgorithm = CipherAlgorithm.valueOf(cipherAlgorithmAttr.getValue().get(0).toString());\n-            }\n-\n-            GuardedString passwordValue = AttributeUtil.getPasswordValue(delta.getObject().getAttributes());\n-\n-            if (cipherAlgorithm != null && passwordValue != null) {\n-                User user = userDAO.find(entity.getKey());\n-                LOG.debug(\"Setting encoded password for {}\", user);\n-                user.setEncodedPassword(SecurityUtil.decrypt(passwordValue), cipherAlgorithm);\n-            }\n-        } else if (entity instanceof GroupTO) {\n-            // handles group membership\n-            Attribute membershipsAttr = delta.getObject().getAttributeByName(MEMBERSHIPS_ATTR);\n-            if (membershipsAttr != null\n-                    && membershipsAttr.getValue() != null && !membershipsAttr.getValue().isEmpty()) {\n-\n-                LOG.debug(\"Found {} for group {}\", MEMBERSHIPS_ATTR, entity.getKey());\n-\n-                for (Object membership : membershipsAttr.getValue()) {\n-                    User member = userDAO.findByUsername(membership.toString());\n-                    if (member == null) {\n-                        LOG.warn(\"Could not find member {} for group {}\", membership, entity.getKey());\n-                    } else {\n-                        Set<String> memb = memberships.get(member.getKey());\n-                        if (memb == null) {\n-                            memb = new HashSet<>();\n-                            memberships.put(member.getKey(), memb);\n-                        }\n-                        memb.add(entity.getKey());\n-                    }\n-                }\n-            }\n-        } else {\n-            super.after(profile, delta, entity, result);\n-        }\n-    }\n-\n-    @Override\n-    public void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n-        Map<String, Object> jobMap = new HashMap<>();\n-        jobMap.put(SetUMembershipsJob.MEMBERSHIPS_KEY, memberships);\n-        schedule(SetUMembershipsJob.class, jobMap);\n-    }\n-\n-}"},{"sha":"8a009a226af3c649e457186accaf8b8b07eb5123","filename":"core/migration/src/main/resources/scripted/SchemaScript.groovy","status":"removed","additions":0,"deletions":108,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,108 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-import groovy.sql.Sql;\n-import org.identityconnectors.common.security.GuardedString;\n-import org.identityconnectors.framework.common.objects.AttributeInfo;\n-import org.identityconnectors.framework.common.objects.AttributeInfo.Flags;\n-import org.identityconnectors.framework.common.objects.AttributeInfoBuilder;\n-import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n-import org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder;\n-\n-// Parameters:\n-// The connector sends the following:\n-// connection: handler to the SQL connection\n-// action: a string describing the action (\"SCHEMA\" here)\n-// log: a handler to the Log facility\n-// builder: SchemaBuilder instance for the connector\n-//\n-// The connector will make the final call to builder.build()\n-// so the scipt just need to declare the different object types.\n-\n-def getAIB(it) {\n-  aib = new AttributeInfoBuilder(it.NAME);\n-    \n-  switch(it.TYPE) {\n-  case \"String\":\n-  case \"Date\":\n-  case \"Enum\":\n-    aib.setType(String.class);\n-    break;\n-      \n-  case \"Long\":\n-    aib.setType(Long.class);\n-    break;\n-        \n-  case \"Double\":\n-    aib.setType(Double.class);\n-    break;\n-\n-  case \"Boolean\":\n-    aib.setType(Boolean.class);\n-    break;\n-  \n-  case \"Encrypted\":\n-    aib.setType(GuardedString.class);\n-    \n-  case \"Binary\":\n-    aib.setType(byte[].class);\n-  }\n-    \n-  if (it.MULTIVALUE == 1) {\n-    aib.setMultiValued(true);\n-  }\n-    \n-  if (it.MANDATORYCONDITION == \"true\") {\n-    aib.setRequired(true);\n-  }\n-\n-  return aib;\n-}\n-\n-log.ok(\"Entering \" + action + \" script\");\n-\n-// User\n-idAIB = new AttributeInfoBuilder(\"USERNAME\", String.class);\n-idAIB.setRequired(true);\n-\n-userAI = new HashSet<AttributeInfo>();\n-userAI.add(idAIB.build());\n-\n-def sql = new Sql(connection);\n-sql.eachRow(\"SELECT NAME, TYPE, MULTIVALUE, MANDATORYCONDITION FROM USCHEMA\", {    \n-    userAI.add(getAIB(it).build());\n-  });\n-\n-ObjectClassInfo userCI = new ObjectClassInfoBuilder().setType(\"__ACCOUNT__\").addAllAttributeInfo(userAI).build();\n-builder.defineObjectClass(userCI);\n-\n-// Group\n-idAIB = new AttributeInfoBuilder(\"NAME\", String.class);\n-idAIB.setRequired(true);\n-\n-roleAI = new HashSet<AttributeInfo>();\n-roleAI.add(idAIB.build());\n-\n-sql.eachRow(\"SELECT NAME, TYPE, MULTIVALUE, MANDATORYCONDITION FROM RSCHEMA\", {    \n-    roleAI.add(getAIB(it).build());\n-  });\n-\n-ObjectClassInfo roleCI = new ObjectClassInfoBuilder().setType(\"__GROUP__\").addAllAttributeInfo(roleAI).build();\n-builder.defineObjectClass(roleCI);\n-\n-log.ok(action + \" script done\");"},{"sha":"298dc93c0f7d8d54028254fd0e075fb8f2a0d924","filename":"core/migration/src/main/resources/scripted/SearchScript.groovy","status":"removed","additions":0,"deletions":191,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,191 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-import groovy.sql.Sql;\n-import org.identityconnectors.framework.common.objects.OperationOptions;\n-import org.identityconnectors.common.security.GuardedString;\n-\n-// Parameters:\n-// The connector sends the following:\n-// connection: handler to the SQL connection\n-// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n-// action: a string describing the action (\"SEARCH\" here)\n-// log: a handler to the Log facility\n-// options: a handler to the OperationOptions Map\n-// query: a handler to the Query Map\n-//\n-// The Query map describes the filter used.\n-//\n-// query = [ operation: \"CONTAINS\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"ENDSWITH\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"STARTSWITH\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"EQUALS\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"GREATERTHAN\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"GREATERTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"LESSTHAN\", left: attribute, right: \"value\", not: true/false ]\n-// query = [ operation: \"LESSTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n-// query = null : then we assume we fetch everything\n-//\n-// AND and OR filter just embed a left/right couple of queries.\n-// query = [ operation: \"AND\", left: query1, right: query2 ]\n-// query = [ operation: \"OR\", left: query1, right: query2 ]\n-//\n-// Returns: A list of Maps. Each map describing one row.\n-// !!!! Each Map must contain a '__UID__' and '__NAME__' attribute.\n-// This is required to build a ConnectorObject.\n-\n-def addAttributes(it, withValues) {\n-  value = it.stringValue;\n-  if (value == null) {\n-    value = it.longValue;\n-  }\n-  if (value == null) {\n-    value = it.doubleValue;\n-  }\n-  if (value == null) {\n-    if (it.dateValue instanceof java.sql.Timestamp) {\n-      value = new Date(it.dateValue.getTime()).format(\"yyyy-MM-dd HH:mm:ss\");\n-    }\n-  }\n-  if (value == null) {\n-    value = it.booleanValue;\n-  }\n-          \n-  if (options[OperationOptions.OP_ATTRIBUTES_TO_GET].contains(it.schema_name)) {\n-    item.put(it.schema_name, value);\n-    withValues.add(it.schema_name);\n-  }\n-}\n-\n-log.ok(\"Entering \" + action + \" script\");\n-\n-def sql = new Sql(connection);\n-def result = []\n-\n-def queryAppend = \"\";\n-def pageSize = options[OperationOptions.OP_PAGE_SIZE];\n-if (pageSize) {\n-  queryAppend += \" LIMIT \" + pageSize;\n-}\n-def pagedResultsCookie = options[OperationOptions.OP_PAGED_RESULTS_COOKIE];\n-if (pagedResultsCookie) {\n-  queryAppend += \" OFFSET \" + pagedResultsCookie;\n-}\n-\n-switch ( objectClass ) {\n-case \"__ACCOUNT__\":\n-  sql.eachRow(\"SELECT * FROM USER_SEARCH\" + queryAppend, {\n-      item = [\n-        __UID__: it.username, \n-        __NAME__: it.username, \n-        username: it.username,\n-        __PASSWORD__: new GuardedString(it.password.toCharArray()),\n-        cipherAlgorithm: it.cipherAlgorithm,\n-        __ENABLE__: it.suspended == 0\n-      ];\n-      \n-      withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n-      \n-      sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it, withValues);\n-        });\n-      sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it, withValues);\n-        });\n-      \n-      for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n-        if (!withValues.contains(attr)) {\n-          item.put(attr, null);          \n-        }\n-      }\n-      \n-      resources = [];\n-      sql.eachRow(\"SELECT DISTINCT * FROM USER_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n-          resources.add(it.resource_name);\n-        });      \n-      item.put('__RESOURCES__', resources);\n-      \n-      result.add(item)\n-    });\n-\n-  if (result.size() == pageSize) {\n-    if (pagedResultsCookie == \"\") {\n-      pagedResultsCookie = pagedResultsCookie + result.size();\n-    } else {\n-      pagedResultsCookie = Integer.toString(pagedResultsCookie.toInteger() + result.size());\n-    }\n-  }\n-  break\n-\n-case \"__GROUP__\":\n-  sql.eachRow(\"SELECT * FROM ROLE_SEARCH\" + queryAppend, {\n-      name = it.id + ' ' + it.name;\n-      item = [\n-        __UID__: name, \n-        __NAME__: name, \n-        __ENABLE__: true, \n-        name: name\n-      ];\n-      \n-      withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n-      \n-      sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it, withValues);\n-        });\n-      sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-          addAttributes(it, withValues);\n-        });\n-      \n-      for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n-        if (!withValues.contains(attr)) {\n-          item.put(attr, null);          \n-        }\n-      }\n-\n-      resources = [];\n-      sql.eachRow(\"SELECT DISTINCT * FROM ROLE_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n-          resources.add(it.resource_name);\n-        });      \n-      item.put('__RESOURCES__', resources);\n-\n-      memberships = [];\n-      sql.eachRow(\"SELECT u.username as username FROM USER_SEARCH_MEMBERSHIP usm, USER_SEARCH u \"\n-        +\"WHERE u.subject_id=usm.subject_id AND usm.role_id =\" + it.id, {\n-          memberships.add(it.username);\n-        });      \n-      item.put('__MEMBERSHIPS__', memberships);\n-\n-      result.add(item)\n-    });\n-  break\n-  \n-default:\n-  result;\n-}\n-\n-log.ok(action + \" script done\");\n-\n-// ----------------\n-// Add paged result cookie\n-// ----------------\n-def pagedResultCookieLine = [:]\n-pagedResultCookieLine.put(OperationOptions.OP_PAGED_RESULTS_COOKIE, pagedResultsCookie);\n-result.add(pagedResultCookieLine);\n-// ----------------\n-\n-return result;"},{"sha":"8bca31365423d43e542bc11ce1297023ca9d114a","filename":"core/migration/src/main/resources/scripted/SyncScript.groovy","status":"removed","additions":0,"deletions":202,"changes":202,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,202 +0,0 @@\n-\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-import groovy.sql.Sql;\n-import org.identityconnectors.common.security.GuardedString\n-\n-// Parameters:\n-// The connector sends the following:\n-// connection: handler to the SQL connection\n-// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n-// action: a string describing the action (\"SYNC\" or \"GET_LATEST_SYNC_TOKEN\" here)\n-// log: a handler to the Log facility\n-// options: a handler to the OperationOptions Map (null if action = \"GET_LATEST_SYNC_TOKEN\")\n-// token: a handler to an Object representing the sync token (null if action = \"GET_LATEST_SYNC_TOKEN\")\n-//\n-//\n-// Returns:\n-// if action = \"GET_LATEST_SYNC_TOKEN\", it must return an object representing the last known\n-// sync token for the corresponding ObjectClass\n-// \n-// if action = \"SYNC\":\n-// A list of Maps . Each map describing one update:\n-// Map should look like the following:\n-//\n-// [\n-// \"token\": <Object> token object (could be Integer, Date, String) , [!! could be null]\n-// \"operation\":<String> (\"CREATE_OR_UPDATE\"|\"DELETE\")  will always default to CREATE_OR_DELETE ,\n-// \"uid\":<String> uid  (uid of the entry) ,\n-// \"previousUid\":<String> prevuid (This is for rename ops) ,\n-// \"password\":<String> password (optional... allows to pass clear text password if needed),\n-// \"attributes\":Map<String,List> of attributes name/values\n-// ]\n-\n-def addAttributes(it, withValues) {\n-  value = it.stringValue;\n-  if (value == null) {\n-    value = it.longValue;\n-  }\n-  if (value == null) {\n-    value = it.doubleValue;\n-  }\n-  if (value == null) {\n-    if (it.dateValue instanceof java.sql.Timestamp) {\n-      value = new Date(it.dateValue.getTime()).format(\"yyyy-MM-dd HH:mm:ss\");\n-    }\n-  }\n-  if (value == null) {\n-    value = it.booleanValue;\n-  }\n-          \n-  if (options[OperationOptions.OP_ATTRIBUTES_TO_GET].contains(it.schema_name)) {\n-    attributes.put(it.schema_name, value);\n-    withValues.add(it.schema_name);\n-  }\n-}\n-\n-log.ok(\"Entering \" + action + \" script\");\n-\n-def sql = new Sql(connection);\n-\n-if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n-  switch (objectClass) {\n-  case \"__ACCOUNT__\":    \n-    row = sql.firstRow(\"SELECT lastChangeDate FROM USER_SEARCH ORDER BY lastChangeDate DESC\");\n-    log.ok(\"Get Latest Sync Token script: last token is: \" + row[\"lastChangeDate\"])\n-    break;\n-    \n-  case \"__GROUP__\":    \n-    row = sql.firstRow(\"SELECT lastChangeDate FROM ROLE_SEARCH ORDER BY lastChangeDate DESC\");\n-    log.ok(\"Get Latest Sync Token script: last token is: \" + row[\"lastChangeDate\"])\n-    break;\n-\n-  default:\n-    row = null;\n-  }\n-\n-  return row == null ? null : row[\"lastChangeDate\"].getTime();\n-} else if (action.equalsIgnoreCase(\"SYNC\")) {\n-  def result = [];\n-  def lastChangeDate = null;\n-  if (token == null) {\n-    lastChangeDate = new Date(0);\n-  } else {\n-    lastChangeDate = new Date(token);\n-  }\n-\n-  switch (objectClass) {\n-  case \"__ACCOUNT__\":    \n-    sql.eachRow(\"SELECT * FROM USER_SEARCH WHERE lastChangeDate > ${lastChangeDate}\",\n-      {\n-        attributes = [\n-          __UID__: it.username, \n-          __NAME__: it.username, \n-          username: it.username,\n-          __PASSWORD__: new GuardedString(it.password.toCharArray()),\n-          cipherAlgorithm: it.cipherAlgorithm,\n-          __ENABLE__: it.suspended == 0\n-        ];\n-\n-        withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n-      \n-        sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it, withValues);\n-          });\n-        sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it, withValues);\n-          });\n-      \n-        for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n-          if (!withValues.contains(attr)) {\n-            attributes.put(attr, null);          \n-          }\n-        }\n-      \n-        resources = [];\n-        sql.eachRow(\"SELECT DISTINCT * FROM USER_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n-            resources.add(it.resource_name);\n-          });      \n-        attributes.put('__RESOURCES__', resources);\n-\n-        result.add([\n-            operation:\"CREATE_OR_UPDATE\", \n-            uid: it.username, \n-            token: it.lastChangeDate.getTime(), \n-            attributes: attributes\n-          ]);\n-      }\n-    )\n-    break;\n-  \n-  case \"__GROUP__\":    \n-    sql.eachRow(\"SELECT * FROM ROLE_SEARCH WHERE lastChangeDate > ${lastChangeDate}\",\n-      {\n-        name = it.id + ' ' + it.name;\n-        attributes = [\n-          __UID__: name, \n-          __NAME__: name, \n-          __ENABLE__: true, \n-          name: name\n-        ];\n-      \n-        withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n-      \n-        sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it, withValues);\n-          });\n-        sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n-            addAttributes(it, withValues);\n-          });\n-      \n-        for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n-          if (!withValues.contains(attr)) {\n-            attributes.put(attr, null);          \n-          }\n-        }\n-\n-        resources = [];\n-        sql.eachRow(\"SELECT DISTINCT * FROM ROLE_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n-            resources.add(it.resource_name);\n-          });      \n-        attributes.put('__RESOURCES__', resources);\n-\n-        memberships = [];\n-        sql.eachRow(\"SELECT u.username as username FROM USER_SEARCH_MEMBERSHIP usm, USER_SEARCH u \"\n-          +\"WHERE u.subject_id=usm.subject_id AND usm.role_id =\" + it.id, {\n-            memberships.add(it.username);\n-          });      \n-        item.put('__MEMBERSHIPS__', memberships);\n-\n-        result.add([\n-            operation:\"CREATE_OR_UPDATE\", \n-            uid: name, \n-            token: it.lastChangeDate.getTime(), \n-            attributes: attributes\n-          ]);\n-      }\n-    )\n-    break;\n-  }\n-  \n-  log.ok(\"Sync script: found \" + result.size() + \" events to sync\");\n-  return result;\n-} else {\n-  log.error(\"Sync script: action '\" + action + \"' is not implemented in this script\");\n-  return null;\n-}"},{"sha":"3bd25bd73e10c22f0a2282fef57e1351e35e622c","filename":"core/migration/src/main/resources/scripted/TestScript.groovy","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-import groovy.sql.Sql;\n-\n-// Parameters:\n-// The connector sends the following:\n-// connection: handler to the SQL connection\n-// action: a string describing the action (\"TEST\" here)\n-// log: a handler to the Log facility\n-\n-log.ok(\"Entering \" + action + \" script\");\n-\n-def sql = new Sql(connection);\n-sql.eachRow(\"SELECT COUNT(*) AS TEST FROM USER_SEARCH\", { println it.TEST});\n-\n-log.ok(action + \" script done\");"},{"sha":"57210468da65d64af533f49c6961ce3f306b445b","filename":"core/persistence-jpa/pom.xml","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fpom.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -226,7 +226,35 @@ under the License.\n           </plugin>          \n         </plugins>\n       </build>\n+    </profile>\n+    \n+    <profile>\n+      <id>schemagen</id>\n+      \n+      <properties>\n+        <skipTests>true</skipTests>\n+      </properties>\n+      \n+      <build>\n+        <defaultGoal>clean verify</defaultGoal>\n         \n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-maven-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <executions>\n+              <execution>\n+                <id>schemagen</id>\n+                <phase>process-classes</phase>\n+                <goals>\n+                  <goal>schema</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>          \n+        </plugins>\n+      </build>\n     </profile>\n   </profiles>\n "},{"sha":"3ed119398426ba5234afafa3f145b3e378abc832","filename":"core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -87,7 +87,7 @@ under the License.\n     <module>workflow-flowable</module>\n     <module>logic</module>\n     <module>rest-cxf</module>\n-    <module>migration</module>\n+    <module>upgrade</module>\n   </modules>\n \n </project>"},{"sha":"b62ff33383f95d7e1c29b8d95581ff0ce114340b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SetUMembershipsJob.java","status":"modified","additions":24,"deletions":26,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -48,40 +48,38 @@ public class SetUMembershipsJob extends AbstractInterruptableJob {\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n-            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n-                    () -> {\n-                        @SuppressWarnings(\"unchecked\")\n-                        Map<String, Set<String>> memberships =\n+            AuthContextUtils.execWithAuthContext(\n+                    context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n+\n+                @SuppressWarnings(\"unchecked\")\n+                Map<String, Set<String>> memberships =\n                         (Map<String, Set<String>>) context.getMergedJobDataMap().get(MEMBERSHIPS_KEY);\n \n-                        LOG.debug(\"About to set memberships (User -> Groups) {}\", memberships);\n+                LOG.debug(\"About to set memberships (User -> Groups) {}\", memberships);\n \n-                        memberships.entrySet().stream().map(membership -> {\n-                            UserPatch userPatch = new UserPatch();\n-                            userPatch.setKey(membership.getKey());\n-                            membership.getValue().forEach(groupKey -> {\n-                                userPatch.getMemberships().add(\n-                                        new MembershipPatch.Builder().\n-                                                operation(PatchOperation.ADD_REPLACE).\n-                                                group(groupKey).\n-                                                build());\n-                            });\n-                            return userPatch;\n-                        }).filter(userPatch -> (!userPatch.isEmpty())).\n-                                map((userPatch) -> {\n-                                    LOG.debug(\"About to update User {}\", userPatch.getKey());\n-                                    return userPatch;\n-                                }).\n-                                forEachOrdered((userPatch) -> {\n-                                    userProvisioningManager.update(userPatch, true);\n-                                });\n+                memberships.forEach((user, groups) -> {\n+                    UserPatch userPatch = new UserPatch();\n+                    userPatch.setKey(user);\n \n-                        return null;\n+                    groups.forEach(group -> {\n+                        userPatch.getMemberships().add(\n+                                new MembershipPatch.Builder().\n+                                        operation(PatchOperation.ADD_REPLACE).\n+                                        group(group).\n+                                        build());\n                     });\n+\n+                    if (!userPatch.isEmpty()) {\n+                        LOG.debug(\"About to update User {}\", userPatch.getKey());\n+                        userProvisioningManager.update(userPatch, true);\n+                    }\n+                });\n+\n+                return null;\n+            });\n         } catch (RuntimeException e) {\n             LOG.error(\"While setting memberships\", e);\n             throw new JobExecutionException(\"While executing memberships\", e);\n         }\n     }\n-\n }"},{"sha":"7ca3dd8795079698437c6b3a6e3fa4982ee05151","filename":"core/upgrade/LICENSE","status":"added","additions":237,"deletions":0,"changes":237,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2FLICENSE?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,237 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+==\n+\n+For Jackson (http://wiki.fasterxml.com/JacksonHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For SERP (http://serp.sourceforge.net/):\n+This is licensed under the BSD license:\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this \n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice, \n+this list of conditions and the following disclaimer in the documentation \n+and/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holder nor the names of its contributors \n+may be used to endorse or promote products derived from this software without \n+specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},{"sha":"bc96f0738653f651cd6d49de86e7af5e948b0a58","filename":"core/upgrade/NOTICE","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2FNOTICE?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,18 @@\n+Apache Syncope\n+Copyright 2012-2018 The Apache Software Foundation\n+\n+This product includes software developed by:\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+The following copyright notice(s) were affixed to portions of this code\n+with which this file is now or was at one time distributed.\n+\n+==\n+\n+This product includes software developed by the Jackson project.\n+\n+==\n+\n+This product includes software developed by the SERP Project.\n+Copyright (c) 2002-2007, A. Abram White http://serp.sourceforge.net/\n+All rights reserved."},{"sha":"954e8bab61178304a784916aa720dbf82ca8acb5","filename":"core/upgrade/pom.xml","status":"added","additions":152,"deletions":0,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fpom.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,152 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-core</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Core Upgrade</name>\n+  <description>Apache Syncope Core Upgrade</description>\n+  <groupId>org.apache.syncope.core</groupId>\n+  <artifactId>syncope-core-upgrade</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.openjpa</groupId>\n+      <artifactId>openjpa-jdbc</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-databind</artifactId>\n+    </dependency>\n+      \n+    <!-- TEST -->\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-context-support</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-jdbc</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-test</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter-engine</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>${basedir}/src/main/resources</directory>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}</directory>\n+        <targetPath>META-INF</targetPath>\n+        <includes>\n+          <include>LICENSE</include>\n+          <include>NOTICE</include>\n+        </includes>\n+      </resource>      \n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>${basedir}/src/test/resources</directory>        \n+      </testResource>      \n+    </testResources>\n+        \n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <configuration>\n+          <appendAssemblyId>false</appendAssemblyId>\n+          <descriptors>\n+            <descriptor>src/assemble/upgrade-zip.xml</descriptor>\n+          </descriptors>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>make-cli-zip</id>\n+            <phase>verify</phase>\n+            <goals>\n+              <goal>single</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-deploy-plugin</artifactId>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skipSource>true</skipSource>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>"},{"sha":"d39fb6c3194d25d1c3654991037c1345e5a5d18b","filename":"core/upgrade/src/assemble/upgrade-zip.xml","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"\n+          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+          xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 \n+                              http://maven.apache.org/xsd/assembly-1.1.2.xsd\">\n+\n+  <id>cli</id>\n+  \n+  <formats>\n+    <format>zip</format>\n+  </formats>\n+  \n+  <includeBaseDirectory>false</includeBaseDirectory>\n+  \n+  <fileSets>\n+    <fileSet>\n+      <directory>${basedir}</directory>\n+      <includes>\n+        <include>LICENSE</include>\n+        <include>NOTICE</include>\n+      </includes>\n+      <outputDirectory>${project.build.finalName}</outputDirectory>\n+    </fileSet>\n+    <fileSet>\n+      <directory>${project.build.directory}/classes</directory>\n+      <includes>\n+        <include>syncopeupgrade.sh</include>\n+        <include>syncopeupgrade.bat</include>\n+      </includes>\n+      <outputDirectory>${project.build.finalName}</outputDirectory>\n+      <fileMode>0755</fileMode>\n+    </fileSet>\n+  </fileSets>\n+\n+  <dependencySets>\n+    <dependencySet>\n+      <outputDirectory>${project.build.finalName}/lib</outputDirectory>\n+      <useProjectArtifact>true</useProjectArtifact>\n+      <unpack>false</unpack>\n+      <scope>runtime</scope>\n+    </dependencySet>\n+  </dependencySets>\n+  \n+</assembly>"},{"sha":"f4a863d1795be3dbb3eb023bbfd85d27740d69e9","filename":"core/upgrade/src/main/java/org/apache/syncope/core/upgrade/GenerateUpgradeSQL.java","status":"added","additions":387,"deletions":0,"changes":387,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,387 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.upgrade;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Writer;\n+import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.Statement;\n+import java.util.Arrays;\n+import java.util.UUID;\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl;\n+import org.apache.openjpa.jdbc.schema.FileSchemaFactory;\n+import org.apache.openjpa.jdbc.schema.SchemaTool;\n+import org.apache.openjpa.jdbc.schema.SimpleDriverDataSource;\n+\n+public final class GenerateUpgradeSQL {\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private static Writer OUT = new PrintWriter(System.out);\n+\n+    public static void setWriter(final Writer out) {\n+        GenerateUpgradeSQL.OUT = out;\n+    }\n+\n+    public static void main(final String[] args) throws Exception {\n+        // parse args\n+        if (args.length < 5 || args.length > 6) {\n+            System.err.println(\"Unexpected arguments: \" + Arrays.asList(args));\n+            System.out.println(\"Usage: <driverClassName> <jdbcURL> <username> <password>\"\n+                    + \"<h2|mariadb|mysql|oracle|postgres|sqlserver> [filename]\");\n+            System.exit(1);\n+        }\n+\n+        String driverClassName = args[0];\n+        String jdbcURL = args[1];\n+        String username = args[2];\n+        String password = args[3];\n+        String dbDictionary = args[4];\n+        if (args.length == 6) {\n+            setWriter(new FileWriter(args[5]));\n+        }\n+\n+        // setup DataSource\n+        SimpleDriverDataSource dataSource = new SimpleDriverDataSource();\n+        dataSource.setConnectionDriverName(driverClassName);\n+        dataSource.setConnectionURL(jdbcURL);\n+        dataSource.setConnectionUserName(username);\n+        dataSource.setConnectionPassword(password);\n+\n+        // setup OpenJPA\n+        JDBCConfiguration jdbcConf = new JDBCConfigurationImpl();\n+        jdbcConf.setConnection2DriverName(driverClassName);\n+        jdbcConf.setConnection2UserName(username);\n+        jdbcConf.setConnection2Password(password);\n+        jdbcConf.setDBDictionary(dbDictionary);\n+        jdbcConf.setConnectionFactory2(dataSource);\n+\n+        FileSchemaFactory schemaFactory = new FileSchemaFactory();\n+        schemaFactory.setConfiguration(jdbcConf);\n+        schemaFactory.setFile(\"schema.xml\");\n+        jdbcConf.setSchemaFactory(schemaFactory);\n+\n+        WiserSchemaTool schemaTool = new WiserSchemaTool(jdbcConf, SchemaTool.ACTION_ADD);\n+        schemaTool.setSchemaGroup(schemaFactory.readSchema());\n+        schemaTool.setWriter(OUT);\n+        try {\n+            // run OpenJPA's SchemaTool to get the update statements\n+            schemaTool.run();\n+\n+            // now proceed with manual update statements...\n+            // OrgUnit\n+            OUT.write(\"UPDATE OrgUnit SET ignoreCaseMatch=0;\\n\");\n+\n+            Connection conn = jdbcConf.getDataSource2(null).getConnection();\n+\n+            // PlainSchema\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT validatorClass FROM PlainSchema WHERE validatorClass IS NOT NULL\")) {\n+\n+                while (rs.next()) {\n+                    String validatorClass = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + validatorClass + \"',\"\n+                            + \"'VALIDATOR',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + validatorClass + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"UPDATE PlainSchema SET validator_id=validatorClass;\\n\");\n+            OUT.write(\"ALTER TABLE PlainSchema DROP COLUMN validatorClass;\\n\");\n+\n+            // Provision\n+            OUT.write(\"UPDATE Provision SET ignoreCaseMatch=0;\\n\");\n+\n+            // PullPolicy\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT id,specification FROM PullPolicy WHERE specification IS NOT NULL\")) {\n+\n+                while (rs.next()) {\n+                    String id = rs.getString(1);\n+                    ObjectNode specification = (ObjectNode) MAPPER.readTree(rs.getString(2));\n+\n+                    if (specification.has(\"conflictResolutionAction\")) {\n+                        OUT.write(\"UPDATE PullPolicy SET \"\n+                                + \"conflictResolutionAction='\"\n+                                + specification.get(\"conflictResolutionAction\").asText() + \"' \"\n+                                + \"WHERE id='\" + id + \"';\\n\");\n+                    }\n+                    if (specification.has(\"correlationRules\")) {\n+                        specification.get(\"correlationRules\").fields().forEachRemaining(entry -> {\n+                            ObjectNode body = MAPPER.createObjectNode();\n+                            body.put(\"@class\", \"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\");\n+                            body.put(\"name\", \"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\");\n+                            body.set(\"schemas\", entry.getValue());\n+\n+                            try {\n+                                String implementationId = \"PullCorrelationRule_\" + entry.getKey() + \"_\" + id;\n+                                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                                        + \"'\" + implementationId + \"',\"\n+                                        + \"'PULL_CORRELATION_RULE',\"\n+                                        + \"'JAVA',\"\n+                                        + \"'\" + MAPPER.writeValueAsString(body) + \"');\\n\");\n+\n+                                OUT.write(\"INSERT INTO PullCorrelationRuleEntity\"\n+                                        + \"(id,pullPolicy_id,anyType_id,implementation_id) VALUES(\"\n+                                        + \"'\" + UUID.randomUUID().toString() + \"',\"\n+                                        + \"'\" + id + \"',\"\n+                                        + \"'\" + entry.getKey() + \"',\"\n+                                        + \"'\" + implementationId + \"');\\n\");\n+                            } catch (IOException e) {\n+                                System.err.println(\"Unexpected error: \" + e.getMessage());\n+                                System.exit(2);\n+                            }\n+                        });\n+                    }\n+                }\n+                OUT.write(\"ALTER TABLE PullPolicy DROP COLUMN specification;\\n\");\n+            }\n+\n+            // AccountPolicy\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT id,accountPolicy_id,serializedInstance FROM AccountRuleConfInstance\")) {\n+\n+                while (rs.next()) {\n+                    String id = rs.getString(1);\n+                    String accountPolicyId = rs.getString(2);\n+                    String serializedInstance = rs.getString(3);\n+\n+                    String implementationId = \"AccountRule_\" + accountPolicyId + \"_\" + id;\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + implementationId + \"',\"\n+                            + \"'ACCOUNT_RULE',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + serializedInstance + \"');\\n\");\n+                    OUT.write(\"INSERT INTO AccountPolicyRule(policy_id,implementation_id) VALUES(\"\n+                            + \"'\" + accountPolicyId + \"',\"\n+                            + \"'\" + implementationId + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE AccountRuleConfInstance;\\n\");\n+\n+            // PasswordPolicy\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT id,passwordPolicy_id,serializedInstance FROM PasswordRuleConfInstance\")) {\n+\n+                while (rs.next()) {\n+                    String id = rs.getString(1);\n+                    String passwordPolicyId = rs.getString(2);\n+                    String serializedInstance = rs.getString(3);\n+\n+                    String implementationId = \"PasswordRule_\" + passwordPolicyId + \"_\" + id;\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + implementationId + \"',\"\n+                            + \"'ACCOUNT_RULE',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + serializedInstance + \"');\\n\");\n+                    OUT.write(\"INSERT INTO PasswordPolicyRule(policy_id,implementation_id) VALUES(\"\n+                            + \"'\" + passwordPolicyId + \"',\"\n+                            + \"'\" + implementationId + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE PasswordRuleConfInstance;\\n\");\n+\n+            // Task\n+            OUT.write(\"UPDATE Task SET remediation=0;\\n\");\n+\n+            OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                    + \"'PullJobDelegate',\"\n+                    + \"'TASKJOB_DELEGATE',\"\n+                    + \"'JAVA',\"\n+                    + \"'org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate');\\n\");\n+            OUT.write(\"UPDATE Task SET jobDelegate_id='PullJobDelegate' WHERE DTYPE='PullTask';\\n\");\n+\n+            OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                    + \"'PushJobDelegate',\"\n+                    + \"'TASKJOB_DELEGATE',\"\n+                    + \"'JAVA',\"\n+                    + \"'org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate');\\n\");\n+            OUT.write(\"UPDATE Task SET jobDelegate_id='PushJobDelegate' WHERE DTYPE='PushTask';\\n\");\n+\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT jobDelegateClassName FROM Task WHERE jobDelegateClassName IS NOT NULL\")) {\n+\n+                while (rs.next()) {\n+                    String jobDelegateClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + jobDelegateClassName + \"',\"\n+                            + \"'TASKJOB_DELEGATE',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + jobDelegateClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"UPDATE Task SET jobDelegate_id=jobDelegateClassName;\\n\");\n+            OUT.write(\"ALTER TABLE Task DROP COLUMN jobDelegateClassName;\\n\");\n+\n+            // PullActions\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT actionClassName FROM PullTask_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String actionClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + actionClassName + \"',\"\n+                            + \"'PULL_ACTIONS',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT pullTask_id,actionClassName FROM PullTask_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String pullTaskId = rs.getString(1);\n+                    String actionClassName = rs.getString(2);\n+                    OUT.write(\"INSERT INTO PullTaskAction(task_id,implementation_id) VALUES(\"\n+                            + \"'\" + pullTaskId + \"',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE PullTask_actionsClassNames;\\n\");\n+\n+            // PushActions\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT actionClassName FROM PushTask_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String actionClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + actionClassName + \"',\"\n+                            + \"'PULL_ACTIONS',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT pushTask_id,actionClassName FROM PushTask_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String pushTaskId = rs.getString(1);\n+                    String actionClassName = rs.getString(2);\n+                    OUT.write(\"INSERT INTO PushTaskAction(task_id,implementation_id) VALUES(\"\n+                            + \"'\" + pushTaskId + \"',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE PushTask_actionsClassNames;\\n\");\n+\n+            // PropagationActions\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT actionClassName FROM ExternalResource_PropActions\")) {\n+\n+                while (rs.next()) {\n+                    String actionClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + actionClassName + \"',\"\n+                            + \"'PROPAGATION_ACTIONS',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT resource_id,actionClassName FROM ExternalResource_PropActions\")) {\n+\n+                while (rs.next()) {\n+                    String resourceId = rs.getString(1);\n+                    String actionClassName = rs.getString(2);\n+                    OUT.write(\"INSERT INTO ExternalResourcePropagationAction(resource_id,implementation_id) VALUES(\"\n+                            + \"'\" + resourceId + \"',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE ExternalResource_PropActions;\\n\");\n+\n+            // LogicActions\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT actionClassName FROM Realm_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String actionClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + actionClassName + \"',\"\n+                            + \"'PULL_ACTIONS',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT realm_id,actionClassName FROM Realm_actionsClassNames\")) {\n+\n+                while (rs.next()) {\n+                    String realmId = rs.getString(1);\n+                    String actionClassName = rs.getString(2);\n+                    OUT.write(\"INSERT INTO RealmAction(task_id,implementation_id) VALUES(\"\n+                            + \"'\" + realmId + \"',\"\n+                            + \"'\" + actionClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE Realm_actionsClassNames;\\n\");\n+\n+            // Reportlet\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT id,report_id,serializedInstance FROM ReportletConfInstance\")) {\n+\n+                while (rs.next()) {\n+                    String id = rs.getString(1);\n+                    String reportId = rs.getString(2);\n+                    String serializedInstance = rs.getString(3);\n+\n+                    String implementationId = \"Reportlet_\" + reportId + \"_\" + id;\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + implementationId + \"',\"\n+                            + \"'REPORTLET',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + serializedInstance + \"');\\n\");\n+                    OUT.write(\"INSERT INTO ReportReportlet(report_id,implementation_id) VALUES(\"\n+                            + \"'\" + reportId + \"',\"\n+                            + \"'\" + implementationId + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE ReportletConfInstance;\\n\");\n+        } finally {\n+            OUT.flush();\n+            OUT.close();\n+        }\n+    }\n+    \n+    private GenerateUpgradeSQL() {\n+        // private constructor\n+    }\n+}"},{"sha":"f2804b5f9fdd835abddf3eab58282eeb8bca63b2","filename":"core/upgrade/src/main/java/org/apache/syncope/core/upgrade/WiserSchemaTool.java","status":"added","additions":233,"deletions":0,"changes":233,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,233 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.upgrade;\n+\n+import java.sql.SQLException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n+import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.jdbc.schema.ForeignKey;\n+import org.apache.openjpa.jdbc.schema.Index;\n+import org.apache.openjpa.jdbc.schema.PrimaryKey;\n+import org.apache.openjpa.jdbc.schema.Schema;\n+import org.apache.openjpa.jdbc.schema.SchemaGroup;\n+import org.apache.openjpa.jdbc.schema.SchemaTool;\n+import org.apache.openjpa.jdbc.schema.Sequence;\n+import org.apache.openjpa.jdbc.schema.Table;\n+import org.apache.openjpa.jdbc.schema.Unique;\n+\n+/**\n+ * Compared to the original {@link SchemaTool}, this class' methods keep consistent behavior when either {@code _writer}\n+ * is null or not.\n+ */\n+public class WiserSchemaTool extends SchemaTool {\n+\n+    public WiserSchemaTool(final JDBCConfiguration conf) {\n+        super(conf);\n+    }\n+\n+    public WiserSchemaTool(final JDBCConfiguration conf, final String action) {\n+        super(conf, action);\n+    }\n+\n+    @Override\n+    protected void buildSchema(\n+            final SchemaGroup db,\n+            final SchemaGroup repos,\n+            final boolean considerDatabaseState) throws SQLException {\n+\n+        // add sequences\n+        if (getSequences()) {\n+            for (Schema schema : repos.getSchemas()) {\n+                for (Sequence seq : schema.getSequences()) {\n+                    if (considerDatabaseState && db.findSequence(schema, seq.getQualifiedPath()) != null) {\n+                        continue;\n+                    }\n+\n+                    if (createSequence(seq)) {\n+                        Schema dbSchema = db.getSchema(seq.getSchemaIdentifier());\n+                        if (dbSchema == null) {\n+                            dbSchema = db.addSchema(seq.getSchemaIdentifier());\n+                        }\n+                        dbSchema.importSequence(seq);\n+                    } else {\n+                        _log.warn(_loc.get(\"add-seq\", seq));\n+                    }\n+                }\n+            }\n+        }\n+\n+        // order is important in this method; start with columns\n+        DBIdentifier defaultSchemaName = DBIdentifier.newSchema(_dict.getDefaultSchemaName());\n+        for (Schema schema : repos.getSchemas()) {\n+            for (Table tab : schema.getTables()) {\n+                Table dbTable = null;\n+                if (considerDatabaseState) {\n+                    dbTable = db.findTable(schema, tab.getQualifiedPath(), defaultSchemaName);\n+                }\n+                for (Column col : tab.getColumns()) {\n+                    if (dbTable != null) {\n+                        Column dbCol = dbTable.getColumn(col.getIdentifier());\n+                        if (dbCol == null) {\n+                            if (addColumn(col)) {\n+                                dbTable.importColumn(col);\n+                            } else {\n+                                _log.warn(_loc.get(\"add-col\", col, tab));\n+                            }\n+                        } else if (!col.equalsColumn(_dict, dbCol)) {\n+                            _log.warn(_loc.get(\"bad-col\",\n+                                    new Object[] { dbCol, dbTable, dbCol.getDescription(), col.getDescription() }));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        // primary keys\n+        if (getPrimaryKeys()) {\n+            for (Schema schema : repos.getSchemas()) {\n+                for (Table tab : schema.getTables()) {\n+                    PrimaryKey pk = tab.getPrimaryKey();\n+                    Table dbTable = null;\n+                    if (considerDatabaseState) {\n+                        dbTable = db.findTable(schema, tab.getQualifiedPath());\n+                    }\n+                    if (pk != null && !pk.isLogical() && dbTable != null) {\n+                        if (dbTable.getPrimaryKey() == null && addPrimaryKey(pk)) {\n+                            dbTable.importPrimaryKey(pk);\n+                        } else if (dbTable.getPrimaryKey() == null) {\n+                            _log.warn(_loc.get(\"add-pk\", pk, tab));\n+                        } else if (!pk.equalsPrimaryKey(dbTable.getPrimaryKey())) {\n+                            _log.warn(_loc.get(\"bad-pk\",\n+                                    dbTable.getPrimaryKey(), dbTable));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        // tables\n+        Set<Table> newTables = new HashSet<>();\n+        for (Schema schema : repos.getSchemas()) {\n+            for (Table tab : schema.getTables()) {\n+                if (considerDatabaseState && db.findTable(schema, tab.getQualifiedPath()) != null) {\n+                    continue;\n+                }\n+\n+                if (createTable(tab)) {\n+                    newTables.add(tab);\n+                    Schema dbSchema = db.getSchema(tab.getSchemaIdentifier());\n+                    if (dbSchema == null) {\n+                        dbSchema = db.addSchema(tab.getSchemaIdentifier());\n+                    }\n+                    dbSchema.importTable(tab);\n+                } else {\n+                    _log.warn(_loc.get(\"add-table\", tab));\n+                }\n+            }\n+        }\n+\n+        // indexes\n+        for (Schema schema : repos.getSchemas()) {\n+            Table[] tabs = schema.getTables();\n+            for (Table tab : tabs) {\n+                // create indexes on new tables even if indexes have been turned off\n+                if (!getIndexes() && !newTables.contains(tab)) {\n+                    continue;\n+                }\n+\n+                Table dbTable = null;\n+                if (considerDatabaseState) {\n+                    dbTable = db.findTable(schema, tab.getQualifiedPath());\n+                }\n+                if (dbTable != null) {\n+                    for (Index idx : tab.getIndexes()) {\n+                        Index dbIdx = findIndex(dbTable, idx);\n+                        if (dbIdx == null) {\n+                            if (createIndex(idx, dbTable, tab.getUniques())) {\n+                                dbTable.importIndex(idx);\n+                            } else {\n+                                _log.warn(_loc.get(\"add-index\", idx, tab));\n+                            }\n+                        } else if (!idx.equalsIndex(dbIdx)) {\n+                            _log.warn(_loc.get(\"bad-index\", dbIdx, dbTable));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        // Unique Constraints on group of columns\n+        for (Schema schema : repos.getSchemas()) {\n+            for (Table tab : schema.getTables()) {\n+                // create unique constraints only on new tables\n+                if (!newTables.contains(tab)) {\n+                    continue;\n+                }\n+                Unique[] uniques = tab.getUniques();\n+                if (uniques == null || uniques.length == 0) {\n+                    continue;\n+                }\n+                Table dbTable = null;\n+                if (considerDatabaseState) {\n+                    dbTable = db.findTable(tab);\n+                }\n+                if (dbTable == null) {\n+                    continue;\n+                }\n+                for (Unique unique : uniques) {\n+                    dbTable.importUnique(unique);\n+                }\n+            }\n+        }\n+\n+        // foreign keys\n+        for (Schema schema : repos.getSchemas()) {\n+            for (Table tab : schema.getTables()) {\n+                // create foreign keys on new tables even if fks have been turned off\n+                if (!getForeignKeys() && !newTables.contains(tab)) {\n+                    continue;\n+                }\n+\n+                Table dbTable = null;\n+                if (considerDatabaseState) {\n+                    dbTable = db.findTable(schema, tab.getQualifiedPath());\n+                }\n+                if (dbTable != null) {\n+                    for (ForeignKey fk : tab.getForeignKeys()) {\n+                        if (!fk.isLogical()) {\n+                            ForeignKey dbFk = findForeignKey(dbTable, fk);\n+                            if (dbFk == null) {\n+                                if (addForeignKey(fk)) {\n+                                    dbTable.importForeignKey(fk);\n+                                } else {\n+                                    _log.warn(_loc.get(\"add-fk\", fk, tab));\n+                                }\n+                            } else if (!fk.equalsForeignKey(dbFk)) {\n+                                _log.warn(_loc.get(\"bad-fk\", dbFk, dbTable));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"},{"sha":"9d73d866c1f81c0297018ad6ce6d41a3452dfcbe","filename":"core/upgrade/src/main/resources/schema.xml","status":"added","additions":1217,"deletions":0,"changes":1217,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,1217 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<schemas>\n+  <schema>\n+    <table name=\"ADynGroupMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_DYNGSHP_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_DYNGSHP_GROUP\" column=\"GROUP_ID\"/>\n+    </table>\n+    <table name=\"AMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n+      <index name=\"I_MMBRSHP_LEFTEND\" column=\"anyObject_id\"/>\n+      <index name=\"I_MMBRSHP_RIGHTEND\" column=\"group_id\"/>\n+    </table>\n+    <table name=\"APlainAttr\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"MEMBERSHIP_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AnyObject\" column=\"OWNER_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <fk to-table=\"AMembership\" column=\"MEMBERSHIP_ID\"/>\n+      <index name=\"I_PLINTTR_MEMBERSHIP\" column=\"MEMBERSHIP_ID\"/>\n+      <index name=\"I_PLINTTR_OWNER\" column=\"OWNER_ID\"/>\n+      <index name=\"I_PLINTTR_SCHEMA\" column=\"schema_id\"/>\n+    </table>\n+    <table name=\"APlainAttrUniqueValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"APlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <index name=\"I_PLNTQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_PLNTQVL_SCHEMA\" column=\"schema_id\"/>\n+      <unique name=\"U_PLNTQVL_BOOLEANVALUE\">\n+        <on column=\"booleanValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_DATEVALUE\">\n+        <on column=\"dateValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_STRINGVALUE\">\n+        <on column=\"stringValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_DOUBLEVALUE\">\n+        <on column=\"doubleValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_LONGVALUE\">\n+        <on column=\"longValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"APlainAttrValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"APlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_PLNTRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+    </table>\n+    <table name=\"ARelationship\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"left_anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"right_anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AnyObject\" column=\"left_anyObject_id\"/>\n+      <fk to-table=\"AnyObject\" column=\"right_anyObject_id\"/>\n+      <fk to-table=\"RelationshipType\" column=\"TYPE_ID\"/>\n+      <index name=\"I_RLTNSHP_LEFTEND\" column=\"left_anyObject_id\"/>\n+      <index name=\"I_RLTNSHP_RIGHTEND\" column=\"right_anyObject_id\"/>\n+      <index name=\"I_RLTNSHP_TYPE\" column=\"TYPE_ID\"/>\n+      <unique name=\"U_RLTNSHP_TYPE_ID\">\n+        <on column=\"TYPE_ID\"/>\n+        <on column=\"left_anyObject_id\"/>\n+        <on column=\"right_anyObject_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"AccessToken\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"authorities\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"body\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"expiryTime\" type=\"timestamp\"/>\n+      <column name=\"owner\" type=\"varchar\" size=\"255\"/>\n+      <unique name=\"U_CCSSTKN_OWNER\" column=\"owner\"/>\n+    </table>\n+    <table name=\"AccountPolicy\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"maxAuthenticationAttempts\" type=\"integer\"/>\n+      <column name=\"propagateSuspension\" type=\"integer\"/>\n+    </table>\n+    <table name=\"AccountPolicyRule\">\n+      <column name=\"policy_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AccountPolicy\" column=\"policy_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_CCNTYRL_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_CCNTYRL_POLICY_ID\" column=\"policy_id\"/>\n+    </table>\n+    <table name=\"AccountPolicy_ExternalResource\">\n+      <column name=\"accountPolicy_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AccountPolicy\" column=\"accountPolicy_id\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_CCNTSRC_ACCOUNTPOLICY_ID\" column=\"accountPolicy_id\"/>\n+      <index name=\"I_CCNTSRC_ELEMENT\" column=\"resource_id\"/>\n+    </table>\n+    <table name=\"AnyAbout\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"filter\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"NOTIFICATION_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Notification\" column=\"NOTIFICATION_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_NYABOUT_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_NYABOUT_NOTIFICATION\" column=\"NOTIFICATION_ID\"/>\n+      <unique name=\"U_NYABOUT_NOTIFICATION_ID\">\n+        <on column=\"NOTIFICATION_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"AnyObject\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"creationDate\" type=\"timestamp\"/>\n+      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n+      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"workflowId\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"TYPE_ID\"/>\n+      <index name=\"I_NYOBJCT_REALM\" column=\"REALM_ID\"/>\n+      <index name=\"I_NYOBJCT_TYPE\" column=\"TYPE_ID\"/>\n+      <unique name=\"U_NYOBJCT_NAME\" column=\"name\"/>\n+    </table>\n+    <table name=\"AnyObject_AnyTypeClass\">\n+      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_NYBJLSS_ANYOBJECT_ID\" column=\"anyObject_id\"/>\n+      <index name=\"I_NYBJLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n+    </table>\n+    <table name=\"AnyObject_ExternalResource\">\n+      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_NYBJSRC_ANYOBJECT_ID\" column=\"anyObject_id\"/>\n+      <index name=\"I_NYBJSRC_ELEMENT\" column=\"resource_id\"/>\n+    </table>\n+    <table name=\"AnyTemplatePullTask\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"template\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"PULLTASK_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"Task\" column=\"PULLTASK_ID\"/>\n+      <index name=\"I_NYTMTSK_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_NYTMTSK_PULLTASK\" column=\"PULLTASK_ID\"/>\n+      <unique name=\"U_NYTMTSK_PULLTASK_ID\">\n+        <on column=\"PULLTASK_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"AnyTemplateRealm\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"template\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_NYTMRLM_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_NYTMRLM_REALM\" column=\"REALM_ID\"/>\n+      <unique name=\"U_NYTMRLM_REALM_ID\">\n+        <on column=\"REALM_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"AnyType\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"kind\" type=\"varchar\" size=\"20\"/>\n+    </table>\n+    <table name=\"AnyTypeClass\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+    </table>\n+    <table name=\"AnyType_AnyTypeClass\">\n+      <column name=\"anyType_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"AnyType\" column=\"anyType_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_NYTYLSS_ANYTYPE_ID\" column=\"anyType_id\"/>\n+      <index name=\"I_NYTYLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n+    </table>\n+    <table name=\"Application\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+    </table>\n+    <table name=\"CPlainAttr\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"OWNER_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <fk to-table=\"SyncopeConf\" column=\"OWNER_ID\"/>\n+      <index name=\"I_CPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n+      <index name=\"I_CPLNTTR_SCHEMA\" column=\"schema_id\"/>\n+    </table>\n+    <table name=\"CPlainAttrUniqueValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"CPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <index name=\"I_CPLNQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_CPLNQVL_SCHEMA\" column=\"schema_id\"/>\n+      <unique name=\"U_CPLNQVL_BOOLEANVALUE\">\n+        <on column=\"booleanValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_CPLNQVL_DATEVALUE\">\n+        <on column=\"dateValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_CPLNQVL_STRINGVALUE\">\n+        <on column=\"stringValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_CPLNQVL_DOUBLEVALUE\">\n+        <on column=\"doubleValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_CPLNQVL_LONGVALUE\">\n+        <on column=\"longValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"CPlainAttrValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"CPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_CPLNRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+    </table>\n+    <table name=\"ConnInstance\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"bundleName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"connRequestTimeout\" type=\"integer\"/>\n+      <column name=\"connectorName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"displayName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"jsonConf\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"location\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"version\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ADMINREALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"maxIdle\" type=\"integer\"/>\n+      <column name=\"maxObjects\" type=\"integer\"/>\n+      <column name=\"maxWait\" type=\"bigint\"/>\n+      <column name=\"minEvictableIdleTimeMillis\" type=\"bigint\"/>\n+      <column name=\"minIdle\" type=\"integer\"/>\n+      <fk to-table=\"Realm\" column=\"ADMINREALM_ID\"/>\n+      <index name=\"I_CNNNTNC_ADMINREALM\" column=\"ADMINREALM_ID\"/>\n+      <unique name=\"U_CNNNTNC_DISPLAYNAME\" column=\"displayName\"/>\n+    </table>\n+    <table name=\"ConnInstanceHistoryConf\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"conf\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"creation\" type=\"timestamp\"/>\n+      <column name=\"creator\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"ENTITY_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"ConnInstance\" column=\"ENTITY_ID\"/>\n+      <index name=\"I_CNNNCNF_ENTITY\" column=\"ENTITY_ID\"/>\n+    </table>\n+    <table name=\"ConnInstance_capabilities\">\n+      <column name=\"connInstance_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"capability\" type=\"varchar\" size=\"20\"/>\n+      <fk to-table=\"ConnInstance\" column=\"connInstance_id\"/>\n+      <index name=\"I_CNNNLTS_CONNINSTANCE_ID\" column=\"connInstance_id\"/>\n+    </table>\n+    <table name=\"DerSchema\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"expression\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n+      <index name=\"I_DRSCHEM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n+    </table>\n+    <table name=\"DynRealm\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+    </table>\n+    <table name=\"DynRealmMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"DYNREALM_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"DynRealm\" column=\"DYNREALM_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_DYNRSHP_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_DYNRSHP_DYNREALM\" column=\"DYNREALM_ID\"/>\n+    </table>\n+    <table name=\"DynRoleMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ROLE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"ROLE_ID\"/>\n+      <index name=\"I_DYNRSHP_ROLE\" column=\"ROLE_ID\"/>\n+    </table>\n+    <table name=\"ExternalResource\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"createTraceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"deleteTraceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"enforceMandatoryCondition\" type=\"integer\"/>\n+      <column name=\"jsonConf\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"overrideCapabilities\" type=\"integer\"/>\n+      <column name=\"propagationPriority\" type=\"integer\"/>\n+      <column name=\"provisioningTraceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"randomPwdIfNotProvided\" type=\"integer\"/>\n+      <column name=\"updateTraceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"ACCOUNTPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"CONNECTOR_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"PASSWORDPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"PULLPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"PUSHPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AccountPolicy\" column=\"ACCOUNTPOLICY_ID\"/>\n+      <fk to-table=\"ConnInstance\" column=\"CONNECTOR_ID\"/>\n+      <fk to-table=\"PasswordPolicy\" column=\"PASSWORDPOLICY_ID\"/>\n+      <fk to-table=\"PullPolicy\" column=\"PULLPOLICY_ID\"/>\n+      <fk to-table=\"PushPolicy\" column=\"PUSHPOLICY_ID\"/>\n+      <index name=\"I_XTRNSRC_ACCOUNTPOLICY\" column=\"ACCOUNTPOLICY_ID\"/>\n+      <index name=\"I_XTRNSRC_CONNECTOR\" column=\"CONNECTOR_ID\"/>\n+      <index name=\"I_XTRNSRC_PASSWORDPOLICY\" column=\"PASSWORDPOLICY_ID\"/>\n+      <index name=\"I_XTRNSRC_PULLPOLICY\" column=\"PULLPOLICY_ID\"/>\n+      <index name=\"I_XTRNSRC_PUSHPOLICY\" column=\"PUSHPOLICY_ID\"/>\n+    </table>\n+    <table name=\"ExternalResourceHistoryConf\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"conf\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"creation\" type=\"timestamp\"/>\n+      <column name=\"creator\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"ENTITY_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"ExternalResource\" column=\"ENTITY_ID\"/>\n+      <index name=\"I_XTRNCNF_ENTITY\" column=\"ENTITY_ID\"/>\n+    </table>\n+    <table name=\"ExternalResourcePropagationAction\">\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_XTRNCTN_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_XTRNCTN_RESOURCE_ID\" column=\"resource_id\"/>\n+    </table>\n+    <table name=\"ExternalResource_capOverride\">\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"capabilityOverride\" type=\"varchar\" size=\"20\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_XTRNRRD_RESOURCE_ID\" column=\"resource_id\"/>\n+    </table>\n+    <table name=\"GPlainAttr\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"OWNER_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <index name=\"I_GPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n+      <index name=\"I_GPLNTTR_SCHEMA\" column=\"schema_id\"/>\n+    </table>\n+    <table name=\"GPlainAttrUniqueValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"GPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <index name=\"I_GPLNQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_GPLNQVL_SCHEMA\" column=\"schema_id\"/>\n+      <unique name=\"U_GPLNQVL_BOOLEANVALUE\">\n+        <on column=\"booleanValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_GPLNQVL_DATEVALUE\">\n+        <on column=\"dateValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_GPLNQVL_STRINGVALUE\">\n+        <on column=\"stringValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_GPLNQVL_DOUBLEVALUE\">\n+        <on column=\"doubleValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_GPLNQVL_LONGVALUE\">\n+        <on column=\"longValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"GPlainAttrValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"GPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_GPLNRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n+    </table>\n+    <table name=\"Implementation\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"body\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"engine\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n+      <column name=\"type\" type=\"varchar\" not-null=\"true\" size=\"21\"/>\n+    </table>\n+    <table name=\"MailTemplate\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"htmlTemplate\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"textTemplate\" type=\"clob\" size=\"-1\"/>\n+    </table>\n+    <table name=\"Mapping\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"connObjectLink\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"PROVISION_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Provision\" column=\"PROVISION_ID\"/>\n+      <index name=\"I_MAPPING_PROVISION\" column=\"PROVISION_ID\"/>\n+    </table>\n+    <table name=\"MappingItem\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"connObjectKey\" type=\"integer\"/>\n+      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"intAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"password\" type=\"integer\"/>\n+      <column name=\"propJEXL\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"pullJEXL\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"purpose\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"MAPPING_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Mapping\" column=\"MAPPING_ID\"/>\n+      <index name=\"I_MPPNGTM_MAPPING\" column=\"MAPPING_ID\"/>\n+    </table>\n+    <table name=\"MappingItemTransformer\">\n+      <column name=\"item_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"MappingItem\" column=\"item_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_MPPNRMR_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_MPPNRMR_ITEM_ID\" column=\"item_id\"/>\n+    </table>\n+    <table name=\"Notification\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"active\" type=\"integer\"/>\n+      <column name=\"recipientAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"recipientsFIQL\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"selfAsRecipient\" type=\"integer\"/>\n+      <column name=\"sender\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"subject\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"traceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"RECIPIENTSPROVIDER_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"template_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Implementation\" column=\"RECIPIENTSPROVIDER_ID\"/>\n+      <fk to-table=\"MailTemplate\" column=\"template_id\"/>\n+      <index name=\"I_NTFCTON_RECIPIENTSPROVIDER\" column=\"RECIPIENTSPROVIDER_ID\"/>\n+      <index name=\"I_NTFCTON_TEMPLATE\" column=\"template_id\"/>\n+    </table>\n+    <table name=\"NotificationTask_recipients\">\n+      <column name=\"notificationTask_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"address\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Task\" column=\"notificationTask_id\"/>\n+      <index name=\"I_NTFCNTS_NOTIFICATIONTASK_ID\" column=\"notificationTask_id\"/>\n+    </table>\n+    <table name=\"Notification_events\">\n+      <column name=\"notification_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"event\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Notification\" column=\"notification_id\"/>\n+      <index name=\"I_NTFCNTS_NOTIFICATION_ID\" column=\"notification_id\"/>\n+    </table>\n+    <table name=\"Notification_staticRecipients\">\n+      <column name=\"notification_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"staticRecipients\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Notification\" column=\"notification_id\"/>\n+      <index name=\"I_NTFCNTS_NOTIFICATION_ID1\" column=\"notification_id\"/>\n+    </table>\n+    <table name=\"OrgUnit\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"connObjectLink\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ignoreCaseMatch\" type=\"integer\"/>\n+      <column name=\"objectClass\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"serializedSyncToken\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n+      <index name=\"I_ORGUNIT_RESOURCE\" column=\"RESOURCE_ID\"/>\n+    </table>\n+    <table name=\"OrgUnitItem\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"connObjectKey\" type=\"integer\"/>\n+      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"intAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"password\" type=\"integer\"/>\n+      <column name=\"propJEXL\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"pullJEXL\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"purpose\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"ORGUNIT_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"OrgUnit\" column=\"ORGUNIT_ID\"/>\n+      <index name=\"I_RGUNTTM_ORGUNIT\" column=\"ORGUNIT_ID\"/>\n+    </table>\n+    <table name=\"OrgUnitItemTransformer\">\n+      <column name=\"item_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"OrgUnitItem\" column=\"item_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_RGNTRMR_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_RGNTRMR_ITEM_ID\" column=\"item_id\"/>\n+    </table>\n+    <table name=\"PasswordPolicy\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"allowNullPassword\" type=\"integer\"/>\n+      <column name=\"historyLength\" type=\"integer\"/>\n+    </table>\n+    <table name=\"PasswordPolicyRule\">\n+      <column name=\"policy_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"PasswordPolicy\" column=\"policy_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_PSSWYRL_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_PSSWYRL_POLICY_ID\" column=\"policy_id\"/>\n+    </table>\n+    <table name=\"PlainSchema\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"cipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"conversionPattern\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"enumerationKeys\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"enumerationValues\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"mimeType\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"multivalue\" type=\"integer\"/>\n+      <column name=\"readonly\" type=\"integer\"/>\n+      <column name=\"secretKey\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"type\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"uniqueConstraint\" type=\"integer\"/>\n+      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"VALIDATOR_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n+      <fk to-table=\"Implementation\" column=\"VALIDATOR_ID\"/>\n+      <index name=\"I_PLNSCHM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n+      <index name=\"I_PLNSCHM_VALIDATOR\" column=\"VALIDATOR_ID\"/>\n+    </table>\n+    <table name=\"Privilege\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"spec\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"APPLICATION_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Application\" column=\"APPLICATION_ID\"/>\n+      <index name=\"I_PRIVILG_APPLICATION\" column=\"APPLICATION_ID\"/>\n+    </table>\n+    <table name=\"Provision\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"ignoreCaseMatch\" type=\"integer\"/>\n+      <column name=\"objectClass\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"serializedSyncToken\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"UIDONCREATE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"UIDONCREATE_ID\"/>\n+      <index name=\"I_PROVSON_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_PROVSON_RESOURCE\" column=\"RESOURCE_ID\"/>\n+      <index name=\"I_PROVSON_UIDONCREATE\" column=\"UIDONCREATE_ID\"/>\n+      <unique name=\"U_PROVSON_RESOURCE_ID\">\n+        <on column=\"RESOURCE_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"Provision_AnyTypeClass\">\n+      <column name=\"provision_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Provision\" column=\"provision_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_PRVSLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_PRVSLSS_PROVISION_ID\" column=\"provision_id\"/>\n+    </table>\n+    <table name=\"PullCorrelationRuleEntity\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"PULLPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"IMPLEMENTATION_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"PullPolicy\" column=\"PULLPOLICY_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"Implementation\" column=\"IMPLEMENTATION_ID\"/>\n+      <index name=\"I_PLLCTTY_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_PLLCTTY_IMPLEMENTATION\" column=\"IMPLEMENTATION_ID\"/>\n+      <index name=\"I_PLLCTTY_PULLPOLICY\" column=\"PULLPOLICY_ID\"/>\n+      <unique name=\"U_PLLCTTY_PULLPOLICY_ID\">\n+        <on column=\"PULLPOLICY_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"PullPolicy\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"conflictResolutionAction\" type=\"varchar\" size=\"20\"/>\n+    </table>\n+    <table name=\"PullTaskAction\">\n+      <column name=\"task_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Task\" column=\"task_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_PLLTCTN_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_PLLTCTN_TASK_ID\" column=\"task_id\"/>\n+    </table>\n+    <table name=\"PushCorrelationRuleEntity\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"PUSHPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"IMPLEMENTATION_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"PushPolicy\" column=\"PUSHPOLICY_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"Implementation\" column=\"IMPLEMENTATION_ID\"/>\n+      <index name=\"I_PSHCTTY_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_PSHCTTY_IMPLEMENTATION\" column=\"IMPLEMENTATION_ID\"/>\n+      <index name=\"I_PSHCTTY_PUSHPOLICY\" column=\"PUSHPOLICY_ID\"/>\n+      <unique name=\"U_PSHCTTY_PUSHPOLICY_ID\">\n+        <on column=\"PUSHPOLICY_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"PushPolicy\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"conflictResolutionAction\" type=\"varchar\" size=\"20\"/>\n+    </table>\n+    <table name=\"PushTaskAction\">\n+      <column name=\"task_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Task\" column=\"task_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_PSHTCTN_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_PSHTCTN_TASK_ID\" column=\"task_id\"/>\n+    </table>\n+    <table name=\"PushTaskAnyFilter\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"PUSHTASK_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"Task\" column=\"PUSHTASK_ID\"/>\n+      <index name=\"I_PSHTLTR_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_PSHTLTR_PUSHTASK\" column=\"PUSHTASK_ID\"/>\n+      <unique name=\"U_PSHTLTR_PUSHTASK_ID\">\n+        <on column=\"PUSHTASK_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"Realm\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ACCOUNTPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"PARENT_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"PASSWORDPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AccountPolicy\" column=\"ACCOUNTPOLICY_ID\"/>\n+      <fk to-table=\"Realm\" column=\"PARENT_ID\"/>\n+      <fk to-table=\"PasswordPolicy\" column=\"PASSWORDPOLICY_ID\"/>\n+      <index name=\"I_REALM_ACCOUNTPOLICY\" column=\"ACCOUNTPOLICY_ID\"/>\n+      <index name=\"I_REALM_PARENT\" column=\"PARENT_ID\"/>\n+      <index name=\"I_REALM_PASSWORDPOLICY\" column=\"PASSWORDPOLICY_ID\"/>\n+      <unique name=\"U_REALM_NAME\">\n+        <on column=\"name\"/>\n+        <on column=\"PARENT_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"RealmAction\">\n+      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Realm\" column=\"realm_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_RLMCTON_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_RLMCTON_REALM_ID\" column=\"realm_id\"/>\n+    </table>\n+    <table name=\"Realm_ExternalResource\">\n+      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Realm\" column=\"realm_id\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_RLM_SRC_ELEMENT\" column=\"resource_id\"/>\n+      <index name=\"I_RLM_SRC_REALM_ID\" column=\"realm_id\"/>\n+    </table>\n+    <table name=\"RelationshipType\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+    </table>\n+    <table name=\"Remediation\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"error\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"instant\" type=\"timestamp\"/>\n+      <column name=\"operation\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"payload\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"remoteName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"PULLTASK_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <fk to-table=\"Task\" column=\"PULLTASK_ID\"/>\n+      <index name=\"I_RMDTION_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_RMDTION_PULLTASK\" column=\"PULLTASK_ID\"/>\n+    </table>\n+    <table name=\"Report\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"active\" type=\"integer\"/>\n+      <column name=\"cronExpression\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"name\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"template_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"ReportTemplate\" column=\"template_id\"/>\n+      <index name=\"I_REPORT_TEMPLATE\" column=\"template_id\"/>\n+      <unique name=\"U_REPORT_NAME\" column=\"name\"/>\n+    </table>\n+    <table name=\"ReportExec\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"endDate\" type=\"timestamp\"/>\n+      <column name=\"message\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"startDate\" type=\"timestamp\"/>\n+      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"execResult\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"REPORT_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Report\" column=\"REPORT_ID\"/>\n+      <index name=\"I_RPORTXC_REPORT\" column=\"REPORT_ID\"/>\n+    </table>\n+    <table name=\"ReportReportlet\">\n+      <column name=\"report_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"Report\" column=\"report_id\"/>\n+      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n+      <index name=\"I_RPRTTLT_ELEMENT\" column=\"implementation_id\"/>\n+      <index name=\"I_RPRTTLT_REPORT_ID\" column=\"report_id\"/>\n+    </table>\n+    <table name=\"ReportTemplate\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"csvTemplate\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"foTemplate\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"htmlTemplate\" type=\"clob\" size=\"-1\"/>\n+    </table>\n+    <table name=\"SchemaLabel\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"display\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"locale\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"SCHEMA_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeSchema\" column=\"SCHEMA_ID\"/>\n+      <index name=\"I_SCHMLBL_SCHEMA\" column=\"SCHEMA_ID\"/>\n+      <unique name=\"U_SCHMLBL_SCHEMA_ID\">\n+        <on column=\"SCHEMA_ID\"/>\n+        <on column=\"locale\"/>\n+      </unique>\n+    </table>\n+    <table name=\"SecurityQuestion\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"content\" type=\"varchar\" size=\"255\"/>\n+      <unique name=\"U_SCRTSTN_CONTENT\" column=\"content\"/>\n+    </table>\n+    <table name=\"SyncopeConf\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+    </table>\n+    <table name=\"SyncopeDomain\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"adminCipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"adminPwd\" type=\"varchar\" size=\"255\"/>\n+    </table>\n+    <table name=\"SyncopeGroup\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"creationDate\" type=\"timestamp\"/>\n+      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n+      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"workflowId\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"GROUPOWNER_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"USEROWNER_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"GROUPOWNER_ID\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"USEROWNER_ID\"/>\n+      <index name=\"I_SYNCGRP_GROUPOWNER\" column=\"GROUPOWNER_ID\"/>\n+      <index name=\"I_SYNCGRP_REALM\" column=\"REALM_ID\"/>\n+      <index name=\"I_SYNCGRP_USEROWNER\" column=\"USEROWNER_ID\"/>\n+      <unique name=\"U_SYNCGRP_NAME\" column=\"name\"/>\n+    </table>\n+    <table name=\"SyncopeGroup_AnyTypeClass\">\n+      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_SYNCLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_SYNCLSS_GROUP_ID\" column=\"group_id\"/>\n+    </table>\n+    <table name=\"SyncopeGroup_ExternalResource\">\n+      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_SYNCSRC_ELEMENT\" column=\"resource_id\"/>\n+      <index name=\"I_SYNCSRC_GROUP_ID\" column=\"group_id\"/>\n+    </table>\n+    <table name=\"SyncopeLogger\">\n+      <pk column=\"logName\"/>\n+      <column name=\"logName\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"logLevel\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n+      <column name=\"logType\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n+    </table>\n+    <table name=\"SyncopeRole\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"consoleLayoutInfo\" type=\"clob\" size=\"-1\"/>\n+    </table>\n+    <table name=\"SyncopeRole_DynRealm\">\n+      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"dynamicRealm_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n+      <fk to-table=\"DynRealm\" column=\"dynamicRealm_id\"/>\n+      <index name=\"I_SYNCRLM_ELEMENT\" column=\"dynamicRealm_id\"/>\n+      <index name=\"I_SYNCRLM_ROLE_ID\" column=\"role_id\"/>\n+    </table>\n+    <table name=\"SyncopeRole_Privilege\">\n+      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"privilege_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n+      <fk to-table=\"Privilege\" column=\"privilege_id\"/>\n+      <index name=\"I_SYNCVLG_ELEMENT\" column=\"privilege_id\"/>\n+      <index name=\"I_SYNCVLG_ROLE_ID\" column=\"role_id\"/>\n+    </table>\n+    <table name=\"SyncopeRole_Realm\">\n+      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n+      <fk to-table=\"Realm\" column=\"realm_id\"/>\n+      <index name=\"I_SYNCRLM_ELEMENT1\" column=\"realm_id\"/>\n+      <index name=\"I_SYNCRLM_ROLE_ID1\" column=\"role_id\"/>\n+    </table>\n+    <table name=\"SyncopeRole_entitlements\">\n+      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"entitlement\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n+      <index name=\"I_SYNCNTS_ROLE_ID\" column=\"role_id\"/>\n+    </table>\n+    <table name=\"SyncopeSchema\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+    </table>\n+    <table name=\"SyncopeUser\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"creationDate\" type=\"timestamp\"/>\n+      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n+      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"workflowId\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"changePwdDate\" type=\"timestamp\"/>\n+      <column name=\"cipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"failedLogins\" type=\"integer\"/>\n+      <column name=\"lastLoginDate\" type=\"timestamp\"/>\n+      <column name=\"lastRecertification\" type=\"timestamp\"/>\n+      <column name=\"lastRecertificator\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"mustChangePassword\" type=\"integer\"/>\n+      <column name=\"password\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"securityAnswer\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"suspended\" type=\"integer\"/>\n+      <column name=\"token\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"tokenExpireTime\" type=\"timestamp\"/>\n+      <column name=\"username\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"SECURITYQUESTION_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n+      <fk to-table=\"SecurityQuestion\" column=\"SECURITYQUESTION_ID\"/>\n+      <index name=\"I_SYNCPSR_REALM\" column=\"REALM_ID\"/>\n+      <index name=\"I_SYNCPSR_SECURITYQUESTION\" column=\"SECURITYQUESTION_ID\"/>\n+      <unique name=\"U_SYNCPSR_USERNAME\" column=\"username\"/>\n+    </table>\n+    <table name=\"SyncopeUser_AnyTypeClass\">\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_SYNCLSS_ELEMENT1\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_SYNCLSS_USER_ID\" column=\"user_id\"/>\n+    </table>\n+    <table name=\"SyncopeUser_ExternalResource\">\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n+      <index name=\"I_SYNCSRC_ELEMENT1\" column=\"resource_id\"/>\n+      <index name=\"I_SYNCSRC_USER_ID\" column=\"user_id\"/>\n+    </table>\n+    <table name=\"SyncopeUser_SyncopeRole\">\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n+      <index name=\"I_SYNCPRL_ELEMENT\" column=\"role_id\"/>\n+      <index name=\"I_SYNCPRL_USER_ID\" column=\"user_id\"/>\n+    </table>\n+    <table name=\"SyncopeUser_passwordHistory\">\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"passwordHistoryValue\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <index name=\"I_SYNCTRY_USER_ID\" column=\"user_id\"/>\n+    </table>\n+    <table name=\"Task\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"DTYPE\" type=\"varchar\" size=\"31\"/>\n+      <column name=\"active\" type=\"integer\"/>\n+      <column name=\"cronExpression\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"startAt\" type=\"timestamp\"/>\n+      <column name=\"matchingRule\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"performCreate\" type=\"integer\"/>\n+      <column name=\"performDelete\" type=\"integer\"/>\n+      <column name=\"performUpdate\" type=\"integer\"/>\n+      <column name=\"syncStatus\" type=\"integer\"/>\n+      <column name=\"unmatchingRule\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"pullMode\" type=\"varchar\" size=\"23\"/>\n+      <column name=\"remediation\" type=\"integer\"/>\n+      <column name=\"JOBDELEGATE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"DESTINATIONREALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"RECONFILTERBUILDER_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"anyType\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"anyTypeKind\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"attributes\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"connObjectKey\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"entityKey\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"objectClassName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"oldConnObjectKey\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"operation\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"SOURCEREALM_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"executed\" type=\"integer\"/>\n+      <column name=\"htmlBody\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"sender\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"subject\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"textBody\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"traceLevel\" type=\"varchar\" size=\"20\"/>\n+      <column name=\"NOTIFICATION_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Implementation\" column=\"JOBDELEGATE_ID\"/>\n+      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n+      <fk to-table=\"Realm\" column=\"DESTINATIONREALM_ID\"/>\n+      <fk to-table=\"Implementation\" column=\"RECONFILTERBUILDER_ID\"/>\n+      <fk to-table=\"Realm\" column=\"SOURCEREALM_ID\"/>\n+      <fk to-table=\"Notification\" column=\"NOTIFICATION_ID\"/>\n+      <index name=\"I_TASK_DESTINATIONREALM\" column=\"DESTINATIONREALM_ID\"/>\n+      <index name=\"I_TASK_DTYPE\" column=\"DTYPE\"/>\n+      <index name=\"I_TASK_JOBDELEGATE\" column=\"JOBDELEGATE_ID\"/>\n+      <index name=\"I_TASK_NOTIFICATION\" column=\"NOTIFICATION_ID\"/>\n+      <index name=\"I_TASK_RECONFILTERBUILDER\" column=\"RECONFILTERBUILDER_ID\"/>\n+      <index name=\"I_TASK_RESOURCE\" column=\"RESOURCE_ID\"/>\n+      <index name=\"I_TASK_SOURCEREALM\" column=\"SOURCEREALM_ID\"/>\n+    </table>\n+    <table name=\"TaskExec\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"endDate\" type=\"timestamp\"/>\n+      <column name=\"message\" type=\"clob\" size=\"-1\"/>\n+      <column name=\"startDate\" type=\"timestamp\"/>\n+      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"TASK_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"Task\" column=\"TASK_ID\"/>\n+      <index name=\"I_TSKEXEC_TASK\" column=\"TASK_ID\"/>\n+    </table>\n+    <table name=\"TypeExtension\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n+      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_TYPXNSN_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n+      <index name=\"I_TYPXNSN_GROUP\" column=\"GROUP_ID\"/>\n+      <unique name=\"U_TYPXNSN_GROUP_ID\">\n+        <on column=\"GROUP_ID\"/>\n+        <on column=\"ANYTYPE_ID\"/>\n+      </unique>\n+    </table>\n+    <table name=\"TypeExtension_AnyTypeClass\">\n+      <column name=\"typeExtension_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"TypeExtension\" column=\"typeExtension_id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_TYPXLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n+      <index name=\"I_TYPXLSS_TYPEEXTENSION_ID\" column=\"typeExtension_id\"/>\n+    </table>\n+    <table name=\"UDynGroupMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n+      <index name=\"I_DYNGSHP_GROUP1\" column=\"GROUP_ID\"/>\n+    </table>\n+    <table name=\"UMembership\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n+      <index name=\"I_MMBRSHP_LEFTEND1\" column=\"user_id\"/>\n+      <index name=\"I_MMBRSHP_RIGHTEND1\" column=\"group_id\"/>\n+    </table>\n+    <table name=\"UPlainAttr\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"MEMBERSHIP_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"OWNER_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <fk to-table=\"UMembership\" column=\"MEMBERSHIP_ID\"/>\n+      <index name=\"I_UPLNTTR_MEMBERSHIP\" column=\"MEMBERSHIP_ID\"/>\n+      <index name=\"I_UPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n+      <index name=\"I_UPLNTTR_SCHEMA\" column=\"schema_id\"/>\n+    </table>\n+    <table name=\"UPlainAttrUniqueValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"UPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n+      <index name=\"I_PLNTQVL_ATTRIBUTE1\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_PLNTQVL_SCHEMA1\" column=\"schema_id\"/>\n+      <unique name=\"U_PLNTQVL_BOOLEANVALUE1\">\n+        <on column=\"booleanValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_DATEVALUE1\">\n+        <on column=\"dateValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_STRINGVALUE1\">\n+        <on column=\"stringValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_DOUBLEVALUE1\">\n+        <on column=\"doubleValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+      <unique name=\"U_PLNTQVL_LONGVALUE1\">\n+        <on column=\"longValue\"/>\n+        <on column=\"schema_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"UPlainAttrValue\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n+      <column name=\"booleanValue\" type=\"integer\"/>\n+      <column name=\"dateValue\" type=\"timestamp\"/>\n+      <column name=\"doubleValue\" type=\"double\"/>\n+      <column name=\"longValue\" type=\"bigint\"/>\n+      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"UPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n+      <index name=\"I_PLNTRVL_ATTRIBUTE1\" column=\"ATTRIBUTE_ID\"/>\n+    </table>\n+    <table name=\"URelationship\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n+      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n+      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n+      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n+      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n+      <fk to-table=\"RelationshipType\" column=\"TYPE_ID\"/>\n+      <index name=\"I_RLTNSHP_LEFTEND1\" column=\"user_id\"/>\n+      <index name=\"I_RLTNSHP_RIGHTEND1\" column=\"anyObject_id\"/>\n+      <index name=\"I_RLTNSHP_TYPE1\" column=\"TYPE_ID\"/>\n+      <unique name=\"U_RLTNSHP_TYPE_ID1\">\n+        <on column=\"TYPE_ID\"/>\n+        <on column=\"user_id\"/>\n+        <on column=\"anyObject_id\"/>\n+      </unique>\n+    </table>\n+    <table name=\"VirSchema\">\n+      <pk column=\"id\"/>\n+      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n+      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"readonly\" type=\"integer\"/>\n+      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n+      <column name=\"PROVISION_ID\" type=\"varchar\" size=\"36\"/>\n+      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n+      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n+      <fk to-table=\"Provision\" column=\"PROVISION_ID\"/>\n+      <index name=\"I_VIRSCHM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n+      <index name=\"I_VIRSCHM_PROVISION\" column=\"PROVISION_ID\"/>\n+    </table>\n+  </schema>\n+</schemas>\n\\ No newline at end of file"},{"sha":"a1a7a7c5778c22aef03d4256cba15cbc42fb6973","filename":"core/upgrade/src/main/resources/syncopeupgrade.bat","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,27 @@\n+@ECHO OFF\n+\n+rem Licensed to the Apache Software Foundation (ASF) under one\n+rem or more contributor license agreements.  See the NOTICE file\n+rem distributed with this work for additional information\n+rem regarding copyright ownership.  The ASF licenses this file\n+rem to you under the Apache License, Version 2.0 (the\n+rem \"License\"); you may not use this file except in compliance\n+rem with the License.  You may obtain a copy of the License at\n+rem\n+rem   http://www.apache.org/licenses/LICENSE-2.0\n+rem\n+rem Unless required by applicable law or agreed to in writing,\n+rem software distributed under the License is distributed on an\n+rem \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+rem KIND, either express or implied.  See the License for the\n+rem specific language governing permissions and limitations\n+rem under the License.\n+\n+setLocal EnableDelayedExpansion\n+set CLASSPATH=\"\n+for /R ./lib %%a in (*.jar) do (\n+  set CLASSPATH=!CLASSPATH!;%%a\n+)\n+set CLASSPATH=!CLASSPATH!\"\n+\n+java -Xms256m -Xmx512m -classpath !CLASSPATH! org.apache.syncope.core.upgrade.GenerateUpgradeSQL %*\n\\ No newline at end of file"},{"sha":"466e986edbc91784a17f02240b01e49fbc0ad9fa","filename":"core/upgrade/src/main/resources/syncopeupgrade.sh","status":"renamed","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -1,3 +1,5 @@\n+#!/bin/sh\n+\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -14,4 +16,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-testClasses=${project.build.directory}/test-classes\n+\n+LIB=`ls lib`\n+CLASSPATH=lib/`echo $LIB | sed \"s/jar /jar:lib\\//g\"`\n+\n+java -Xms256m -Xmx512m -classpath \"$CLASSPATH\" org.apache.syncope.core.upgrade.GenerateUpgradeSQL \"$@\"\n\\ No newline at end of file","previous_filename":"client/cli/src/test/resources/test.properties"},{"sha":"3d44e374132ec4cf7d097ca3a689b78052dc6213","filename":"core/upgrade/src/test/java/org/apache/syncope/core/upgrade/GeneratedUpgradeSQLTest.java","status":"added","additions":120,"deletions":0,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.upgrade;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.AssertionsKt.fail;\n+\n+import java.io.StringWriter;\n+import java.nio.charset.StandardCharsets;\n+import javax.annotation.Resource;\n+import javax.sql.DataSource;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.ByteArrayResource;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.datasource.init.DataSourceInitializer;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n+\n+@SpringJUnitConfig(locations = {\n+    \"classpath:testJDBCEnv.xml\"\n+})\n+public class GeneratedUpgradeSQLTest {\n+\n+    @Resource(name = \"driverClassName\")\n+    private String driverClassName;\n+\n+    @Resource(name = \"jdbcURL\")\n+    private String jdbcURL;\n+\n+    @Resource(name = \"username\")\n+    private String username;\n+\n+    @Resource(name = \"password\")\n+    private String password;\n+\n+    @Autowired\n+    private DataSource syncope20DataSource;\n+\n+    @Test\n+    public void upgradefrom20() throws Exception {\n+        StringWriter out = new StringWriter();\n+        GenerateUpgradeSQL.setWriter(out);\n+\n+        String[] args = new String[] { driverClassName, jdbcURL, username, password, \"h2\" };\n+        GenerateUpgradeSQL.main(args);\n+\n+        String upgradeSQL = out.toString();\n+\n+        try {\n+            DataSourceInitializer adminUsersInit = new DataSourceInitializer();\n+            adminUsersInit.setDataSource(syncope20DataSource);\n+            adminUsersInit.setDatabasePopulator(\n+                    new ResourceDatabasePopulator(new ByteArrayResource(upgradeSQL.getBytes(StandardCharsets.UTF_8))));\n+            adminUsersInit.afterPropertiesSet();\n+        } catch (Exception e) {\n+            fail(\"Unexpected error while upgrading\", e);\n+        }\n+\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(syncope20DataSource);\n+\n+        Integer implementations = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM Implementation\", Integer.class);\n+        assertNotNull(implementations);\n+        assertEquals(16, implementations.intValue());\n+\n+        Integer pullTaskActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM PullTaskAction\", Integer.class);\n+        assertNotNull(pullTaskActions);\n+        assertEquals(1, pullTaskActions.intValue());\n+\n+        Integer pushTaskActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM PushTaskAction\", Integer.class);\n+        assertNotNull(pushTaskActions);\n+        assertEquals(0, pushTaskActions.intValue());\n+\n+        Integer propagationTaskActions = jdbcTemplate.queryForObject(\n+                \"SELECT COUNT(*) FROM ExternalResourcePropagationAction\", Integer.class);\n+        assertNotNull(propagationTaskActions);\n+        assertEquals(1, propagationTaskActions.intValue());\n+\n+        Integer realmActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM RealmAction\", Integer.class);\n+        assertNotNull(realmActions);\n+        assertEquals(0, realmActions.intValue());\n+\n+        Integer accountPolicyRules = jdbcTemplate.queryForObject(\n+                \"SELECT COUNT(*) FROM AccountPolicyRule\", Integer.class);\n+        assertNotNull(accountPolicyRules);\n+        assertEquals(2, accountPolicyRules.intValue());\n+\n+        Integer passwordPolicyRules = jdbcTemplate.queryForObject(\n+                \"SELECT COUNT(*) FROM PasswordPolicyRule\", Integer.class);\n+        assertNotNull(passwordPolicyRules);\n+        assertEquals(3, passwordPolicyRules.intValue());\n+\n+        Integer pullCorrelationRuleEntities = jdbcTemplate.queryForObject(\n+                \"SELECT COUNT(*) FROM PullCorrelationRuleEntity\", Integer.class);\n+        assertNotNull(pullCorrelationRuleEntities);\n+        assertEquals(1, pullCorrelationRuleEntities.intValue());\n+\n+        Integer pushCorrelationRuleEntities = jdbcTemplate.queryForObject(\n+                \"SELECT COUNT(*) FROM PushCorrelationRuleEntity\", Integer.class);\n+        assertNotNull(pushCorrelationRuleEntities);\n+        assertEquals(0, pushCorrelationRuleEntities.intValue());\n+    }\n+}"},{"sha":"314669b83217f08df7fad34631be6af797441fbb","filename":"core/upgrade/src/test/resources/syncopedb20.sql","status":"added","additions":2867,"deletions":0,"changes":2867,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2"},{"sha":"daa2597e50aa238607002d2e53d283fe69585819","filename":"core/upgrade/src/test/resources/testJDBCEnv.xml","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n+\n+  <bean id=\"driverClassName\" class=\"java.lang.String\">\n+    <constructor-arg value=\"org.h2.Driver\"/>\n+  </bean>\n+  <bean id=\"jdbcURL\" class=\"java.lang.String\">\n+    <constructor-arg value=\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\"/>\n+  </bean>\n+  <bean id=\"username\" class=\"java.lang.String\">\n+    <constructor-arg value=\"sa\"/>\n+  </bean>\n+  <bean id=\"password\" class=\"java.lang.String\">\n+    <constructor-arg value=\"sa\"/>\n+  </bean>\n+  \n+  <bean id=\"syncope20DataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n+    <property name=\"driverClassName\" ref=\"driverClassName\"/>\n+    <property name=\"url\" ref=\"jdbcURL\"/>\n+    <property name=\"username\" ref=\"username\"/>\n+    <property name=\"password\" ref=\"password\"/>\n+  </bean>\n+  \n+  <bean id=\"syncope20DataSourceInit\" class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n+    <property name=\"dataSource\" ref=\"syncope20DataSource\"/>\n+    <property name=\"databasePopulator\">\n+      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n+        <property name=\"continueOnError\" value=\"true\"/>\n+        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n+        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n+        <property name=\"scripts\">\n+          <array>\n+            <value type=\"org.springframework.core.io.Resource\">\n+              classpath:/syncopedb20.sql\n+            </value>\n+          </array>\n+        </property>\n+      </bean>\n+    </property>\n+  </bean>\n+\n+</beans>"},{"sha":"3c7df2d6798f63203d3fe9eefd53fc8e5afea31f","filename":"src/main/asciidoc/getting-started/obtain.adoc","status":"modified","additions":17,"deletions":25,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -33,7 +33,7 @@ First approach, especially with administration console and end-user; does not re\n \n Getting ready in a few easy steps:\n \n-. http://syncope.apache.org/downloads.html[download^] the standalone distribution\n+. https://syncope.apache.org/downloads[download^] the standalone distribution\n . unzip the distribution archive\n . go into the created Apache Tomcat directory\n . start Apache Tomcat\n@@ -96,31 +96,23 @@ Getting up and running quickly on Debian / Ubuntu. +\n *Difficult to extend beyond pre-sets.*\n \n Download::\n-http://syncope.apache.org/downloads.html[Download^] the latest .deb packages\n+https://syncope.apache.org/downloads[Download^] the latest .deb packages\n \n Prepare::\n . Install Apache Tomcat 8\n +\n [source,bash]\n-sudo apt-get install tomcat8\n-+\n-[WARNING]\n-*Ubuntu LTS 14.04 LTS* does not provide the tomcat8 package by default: you will need instead to download and manually\n-install the following packages (from Ubuntu 15.04):\n-http://packages.ubuntu.com/wily/all/libecj-java/download[libecj-java]\n-http://packages.ubuntu.com/wily/all/libtomcat8-java/download[libtomcat8-java]\n-http://packages.ubuntu.com/wily/all/tomcat8-common/download[tomcat8-common]\n-http://packages.ubuntu.com/wily/all/tomcat8/download[tomcat8]\n+$ sudo apt-get install tomcat8\n +\n . Install PostgreSQL\n +\n [source,bash]\n-sudo apt-get install libpostgresql-jdbc-java postgresql postgresql-client\n+$ sudo apt-get install libpostgresql-jdbc-java postgresql postgresql-client\n +\n . Use the PostgreSQL JDBC driver with Tomcat\n +\n [source,bash]\n-sudo ln -s /usr/share/java/postgresql-jdbc4.jar /usr/share/tomcat8/lib/\n+$ sudo ln -s /usr/share/java/postgresql-jdbc4.jar /usr/share/tomcat8/lib/\n +\n . Replace `JAVA_OPTS` in `/etc/default/tomcat8` with the following:\n +\n@@ -135,22 +127,22 @@ Install::\n . Stop Tomcat\n +\n [source,bash]\n-sudo service tomcat8 stop\n+$ sudo service tomcat8 stop\n +\n . Install Apache Syncope core, console and enduser via the downloaded packages\n +\n [source,bash]\n-sudo dpkg -i apache-syncope-*.deb\n+$ sudo dpkg -i apache-syncope-*.deb\n +\n . Create a database for use with Apache Syncope\n +\n [source,bash]\n-sudo SYNCOPE_USER=\"syncope\" SYNCOPE_PASS=\"syncope\" sh /usr/share/apache-syncope/dbinit-postgresql.sh\n+$ sudo SYNCOPE_USER=\"syncope\" SYNCOPE_PASS=\"syncope\" sh /usr/share/apache-syncope/dbinit-postgresql.sh\n +\n . Start Tomcat\n +\n [source,bash]\n-sudo service tomcat8 start\n+$ sudo service tomcat8 start\n \n [[deb-components]]\n ==== Components\n@@ -232,7 +224,7 @@ of `$CATALINA_HOME/conf/tomcat-users.xml` looks like:\n \n ==== Usage\n \n-Once http://syncope.apache.org/downloads.html[downloaded^], double-click the JAR file or execute via the command-line:\n+Once https://syncope.apache.org/downloads[downloaded^], double-click the JAR file or execute via the command-line:\n \n [source,bash]\n java -jar syncope-installer-*-uber.jar\n@@ -455,7 +447,7 @@ ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n \n [subs=\"verbatim,attributes\"]\n ----\n-mvn archetype:generate \\\n+$ mvn archetype:generate \\\n     -DarchetypeGroupId=org.apache.syncope \\\n     -DarchetypeArtifactId=syncope-archetype \\\n     -DarchetypeRepository=http://repo1.maven.org/maven2 \\\n@@ -468,7 +460,7 @@ ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n \n [subs=\"verbatim,attributes\"]\n ----\n-mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate \\\n+$ mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate \\\n     -DarchetypeGroupId=org.apache.syncope \\\n     -DarchetypeArtifactId=syncope-archetype \\\n     -DarchetypeRepository=http://repository.apache.org/content/repositories/snapshots \\\n@@ -522,7 +514,7 @@ specified above) containing four modules: `common`, `core`, `console` and `endus\n You are now able to perform the first build via\n \n [source,bash]\n-mvn clean install\n+$ mvn clean install\n \n After downloading all of the needed dependencies, three WAR files will be produced:\n \n@@ -558,7 +550,7 @@ made are lost.\n From the top-level directory of your project, execute:\n \n [source,bash]\n-mvn -P all clean install\n+$ mvn -P all clean install\n \n [WARNING]\n ====\n@@ -578,7 +570,7 @@ endif::[]\n then, from the `enduser` subdirectory, execute:\n \n [source,bash]\n-mvn -P embedded,all\n+$ mvn -P embedded,all\n \n ===== Paths and Components\n \n@@ -817,7 +809,7 @@ The Eclipse IDE plugin allows remote management of notification e-mail and repor\n [[eclipseplugin-installation]]\n ==== Installation\n \n-After http://syncope.apache.org/downloads.html[download^], start the most recent Eclipse IDE distribution then go to \n+After https://syncope.apache.org/downloads[download^], start the most recent Eclipse IDE distribution then go to \n `Help > Install New Software`:\n \n image::eclipse01.png[eclipse01]\n@@ -881,7 +873,7 @@ The Netbeans IDE plugin allows remote management of notification e-mail and repo\n [[netbeansplugin-installation]]\n ==== Installation\n \n-After http://syncope.apache.org/downloads.html[download^], start the most recent Netbeans IDE then go to \n+After https://syncope.apache.org/downloads[download^], start the most recent Netbeans IDE then go to \n `Tools > Plugins`:\n \n image::netbeans01.png[netbeans01]"},{"sha":"e0088b54166ef82a50bb30498f6787b9cc45c780","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/customization.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -163,7 +163,7 @@ straightforward: just add the `<profile>` below to `enduser/pom.xml`:\n Now, from the `enduser` subdirectory, execute:\n \n [source,bash]\n-mvn -P embedded,debug\n+$ mvn -P embedded,debug\n \n At this point your favourite IDE can be attached to the port `8000`.\n ===="},{"sha":"c2241d29d29f4cedc3636e55c1b413a94cc538d9","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/migration.adoc","status":"removed","additions":0,"deletions":259,"changes":259,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fmigration.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd3d4a3db18d95bb9b796cb2d486289141c3dee1/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fmigration.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fmigration.adoc?ref=dd3d4a3db18d95bb9b796cb2d486289141c3dee1","patch":"@@ -1,259 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-=== Migration from Apache Syncope 1.2\n-\n-Apache Syncope 2.0 brings\n-https://cwiki.apache.org/confluence/display/SYNCOPE/Jazz[several enhancements and new features^], compared to the 1.2 release.\n-\n-For this reason, it is not possible to _update_ an existing 1.2 deployment, rather it is necessary to _migrate_ the\n-whole configuration, users and roles to a brand new 2.0 deployment.\n-\n-==== Preparation\n-\n-With reference to the\n-ifeval::[\"{backend}\" == \"html5\"]\n-http://syncope.apache.org/docs/getting-started.html[Apache Syncope Getting Started Guide,]\n-endif::[]\n-ifeval::[\"{backend}\" == \"pdf\"]\n-http://syncope.apache.org/docs/getting-started.pdf[Apache Syncope Getting Started Guide,]\n-endif::[]\n-perform the following steps:\n-\n-. Install the CLI application\n-. Create a new Maven project for Apache Syncope 2.0 and then add the following dependency to `core/pom.xml`\n-\n-[source,xml,subs=\"verbatim,attributes\"]\n-----\n-<dependency>\n-  <groupId>org.apache.syncope.core</groupId>\n-  <artifactId>syncope-core-migration</artifactId>\n-  <version>{docVersion}</version>\n-</dependency>\n-----\n-\n-==== Migrate configuration\n-\n-[discrete]\n-===== Export configuration from 1.2\n-\n-First, export the configuration from the 1.2 deployment via\n-\n-....\n-curl -X GET -u username:password -o content.xml protocol://host:port/syncope/rest/configurations/stream\n-....\n-\n-where `username`, `password`, `protocol`, `host` and `port` reflect the Java EE container installation for the 1.2\n-deployment. +\n-The configuration of the 1.2 deployment is now in the `content.xml` file.\n-\n-[discrete]\n-===== Obtain configuration file for 2.0\n-\n-Now process the exported configuration of the 1.2 deployment to obtain a basic 2.0 configuration, by invoking the CLI as\n-follows:\n-\n-.On GNU / Linux - Mac OS X\n-....\n-./syncopeadm.sh migrate --conf /path/to/content.xml /dest/path/to/MasterContent.xml\n-....\n-\n-.On Windows\n-....\n-syncopeadm.bat migrate --conf \\path\\to\\content.xml \\dest\\path\\to\\MasterContent.xml\n-....\n-\n-The result of this invocation is the generated `MasterContent.xml` file and possibly an output message such as the following:\n-\n-....\n-You are running: migrate --conf /path/to/content.xml /dest/path/to/MasterContent.xml\n-\n-Virtual items, require manual intervention:\n-<?xml version='1.0' encoding='UTF-8'?><dataset>\n-  <VirSchema key=\"virtualdata\"/>\n-  <VirSchema key=\"virtualPropagation\"/>\n-  <VirSchema key=\"rvirtualdata\"/>\n-  <VirSchema key=\"mvirtualdata\"/>\n-  <VirSchema READONLY=\"1\" key=\"virtualReadOnly\"/>\n-  <MappingItem extAttrName=\"name\" mapping_id=\"1\" intAttrName=\"virtualdata\"\n-               mandatoryCondition=\"type == 'F'\" password=\"0\" purpose=\"BOTH\"/>\n-  <MappingItem password=\"0\" mapping_id=\"11\" extAttrName=\"givenname\"\n-               intAttrName=\"virtualReadOnly\" mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n-  <MappingItem password=\"0\" mapping_id=\"11\" extAttrName=\"givenname\"\n-               intAttrName=\"virtualPropagation\" mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n-  <MappingItem extAttrName=\"businessCategory\" mapping_id=\"1\"\n-               intAttrName=\"rvirtualdata\" mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n-  <MappingItem mapping_id=\"17\" password=\"0\" extAttrName=\"USERNAME\"\n-               intAttrName=\"virtualdata\" mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n-  <MappingItem mapping_id=\"17\" password=\"0\" extAttrName=\"SURNAME\"\n-               intAttrName=\"virtualPropagation\" mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n-</dataset>\n-\n-\n- - Migration completed; file successfully created under /dest/path/to/MasterContent.xml\n-....\n-\n-<<virtual,Virtual schemas>> and associated <<mapping,mapping>> cannot be automatically migrated: take note of the\n-message above for further operations.\n-\n-[discrete]\n-===== Finalize configuration for 2.0\n-\n-After putting the generated `MasterContent.xml` file under the `core/src/test/resources/domains` folder in the new 2.0\n-Maven project, build and start in embedded mode, while always watching the log files under:\n-\n-* `core/target/log/`\n-* `console/target/log/`\n-* `enduser/target/log/`\n-\n-If errors are found, make appropriate corrections into `core/src/test/resources/domains/MasterContent.xml` - this might\n-involve migrating custom classes originally developed for 1.2 into their respective\n-<<customization-core,2.0 counterparts>>.\n-\n-When no exceptions are reported in the logs, log into the admin console and check if all configuration items\n-(schema definitions, external resources, notifications, ...) were correctly migrated. If anything is missing, take care\n-to re-add them manually.\n-\n-If using delegated administration under 1.2, reconstruct <<roles,roles>> and <<entitlements,entitlements>> under the\n-new security model.\n-\n-Now, define the virtual schema and mapping items according to the output message obtained above when invoking the\n-CLI.\n-\n-[WARNING]\n-If making modifications via the admin console, do not forget to <<deal-with-internal-storage-export-import,export>>\n-the updated configuration before shutting down the embedded mode, then use the downloaded file to update\n-`core/src/test/resources/domains/MasterContent.xml`.\n-\n-Finally, verify that all operations (create, update, delete, propagate, sync / push) about users and roles used in the\n-1.2 deployment are working fine (create, update, delete, propagate, pull / push) with users and groups in the 2.0\n-Maven project.\n-\n-When everything works as expected, <<deal-with-internal-storage-export-import,export>>\n-the updated configuration before shutting down the embedded mode and use the downloaded file to update both\n-`core/src/main/resources/domains/MasterContent.xml` and `core/src/test/resources/domains/MasterContent.xml`.\n-\n-==== Migrate users and roles\n-\n-After deploying the 2.0 Maven project into one of supported <<javaee-container,Java EE containers>>, with internal\n-storage set to one of supported <<dbms,DBMSes>>, ensure that the 1.2 deployment's internal storage DBMS is reachable.\n-\n-The steps below are to be performed on the 2.0 deployment.\n-\n-[discrete]\n-===== Define migration <<anytypeclass>>\n-\n-Create the following <<plain,plain schemas>>:\n-\n-. `migrationCipherAlgorithm` - string, read-only\n-. `migrationResources` - string, multi-value, read-only\n-. `migrationMemberships` - string, multi-value, read-only\n-\n-Then, define the `migration` AnyTypeClass and assign the three plain schemas above.\n-\n-[discrete]\n-===== Create migration <<connector-instance-details,Connector>>\n-\n-Create an instance of the https://connid.atlassian.net/wiki/display/BASE/Scripted+SQL[Scripted SQL^] bundle:\n-\n-. set connection details to the 1.2 deployment's internal storage DBMS\n-. download the Groovy\n-ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/tree/syncope-{docVersion}/core/migration/src/main/resources/scripted[scripts^]\n-endif::[]\n-ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/tree/master/core/migration/src/main/resources/scripted[scripts^]\n-endif::[]\n-and configure accordingly\n-. assign the `SEARCH` and `SYNC` capabilities\n-\n-[discrete]\n-===== Create migration <<external-resource-details,External Resource>> and <<mapping>>\n-\n-Create an External Resource for the Connector created above, and set the <<provision,provisioning>> rules for:\n-\n-* `USER` as `\\\\__ACCOUNT__`, with at least the following mapping:\n-|===\n-| Internal Attribute | External Attribute | Other\n-\n-| `username`\n-| `username`\n-| flagged as remote key, mandatory, purpose: `PULL`\n-\n-| `password`\n-|\n-| flagged as password, mandatory, purpose: `PULL`\n-\n-| `migrationCipherAlgorithm`\n-| `cipherAlgorithm`\n-| mandatory, purpose: `PULL`\n-\n-| `migrationResources`\n-| `\\\\__RESOURCES__`\n-| purpose: `PULL`\n-\n-|===\n-* `GROUP` as `\\\\__GROUP__`,  with at least the following mapping:\n-|===\n-| Internal Attribute | External Attribute | Other\n-\n-| `name`\n-| `name`\n-| flagged as remote key, mandatory, purpose: `PULL`\n-\n-| `migrationResources`\n-| `\\\\__RESOURCES__`\n-| purpose: `PULL`\n-\n-| `migrationMemberships`\n-| `\\\\__MEMBERSHIPS__`\n-| mandatory, purpose: `PULL`\n-\n-|===\n-\n-[WARNING]\n-More attributes should be added to the mapping information in order to pull values from the 1.2 deployments.\n-\n-[discrete]\n-===== Setup migration <<tasks-pull,Pull Task>>\n-\n-Setup a pull task for the External Resource created above, set it for `FULL_RECONCILIATION` <<pull-mode,mode>> and\n-configure the \n-ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java[MigrationPullActions^]\n-endif::[]\n-ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java[MigrationPullActions^]\n-endif::[]\n-class among <<pullactions>>.\n-\n-[discrete]\n-===== Migrate\n-\n-Before actual migration, use the admin console features to explore the External Resource and check that all expected\n-information is reported.\n-\n-Another check to perform is to run the pull task set up above with the <<dryrun,DryRun>> option and watch the execution\n-results.\n-\n-Finally, execute the pull task and check the execution results.\n-\n-[TIP]\n-If the number of users and roles to import from the 1.2 deployment is high, it is suggested to change the pull mode to\n-`FILTERED_RECONCILIATION` for a relevant subset of entities to migrate, check the results and eventually switch back\n-to `FULL_RECONCILIATION`."},{"sha":"6cf0e6802f693ce2b05c24bacfeef2f9a9b0ff67","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/flowablemodeler.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fflowablemodeler.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fflowablemodeler.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fflowablemodeler.adoc?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -38,7 +38,7 @@ endif::[]\n then build via\n \n ....\n-mvn -P all clean install\n+$ mvn -P all clean install\n ....\n \n At this point, copy the `console/target/flowable-modeler/` directory in the desired location of the host where the"},{"sha":"f38daed563980f332decaab89d016c8b6bb683e9","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/upgrade.adoc","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fupgrade.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fupgrade.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fupgrade.adoc?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -0,0 +1,53 @@\n+﻿//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+=== Upgrade from Apache Syncope 2.0\n+\n+Upgrading an existing Apache Syncope 2.0 deployment involves at least the following steps:\n+\n+. upgrade Core, Console and Enduser according to the latest\n+https://cwiki.apache.org/confluence/display/SYNCOPE/Fusion[release notes^] available\n+\n+. full backup of existing DBMS used as <<persistence,internal storage>> for Apache Syncope 2.0 Core\n+\n+. https://syncope.apache.org/downloads[download^] and run the upgrade tool, which will generate the full set of SQL\n+statements required to upgrade the internal storage to 2.1\n+ .. once uncompressed, you will find a `lib` directory and two scripts: `syncopeupgrade.sh` and `syncopeupgrade.bat`,\n+which will be used depending on the operating system\n+ .. copy the JDBC driver JAR file compatible with the internal storage into the `lib` directory\n+ .. run the tool as follows:\n++\n+[source,bash]\n+$ ./syncopeupgrade.sh org.postgresql.Driver \\\n+ jdbc:postgresql://localhost:5432/syncope syncope syncope postgres \\\n+ upgrade.sql\n++\n+assuming that:\n+ * `org.postgresql.Driver` is the JDBC driver class name\n+ * you have a PostgreSQL instance running on localhost, listening on its default port 5432 with a database\n+`syncope` fully accessible by user `syncope` with password `syncope`\n+ * SQL statements are generated onto the `upgrade.sql` file\n+\n+. shutdown the Java EE container running Apache Syncope 2.0 Core\n+\n+. execute the SQL statements as generated above against the internal storage: in case of errors, apply manual\n+corrections until everything runs clear; consider to restore from the backup taken above if needed, before executing\n+the updated SQL statements again\n+\n+. after deploying Apache Syncope 2.1, start the Java EE container of Apache Syncope 2.1 Core and watch the log files\n+to check for any error "},{"sha":"d106fa117582e827e22d1a88f079598cfae69de7","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/workingwithapachesyncope.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/027b6bdfed8666f0d1a1225d3e27a3047e93acf2/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fworkingwithapachesyncope.adoc?ref=027b6bdfed8666f0d1a1225d3e27a3047e93acf2","patch":"@@ -40,4 +40,4 @@ include::customization.adoc[]\n \n include::systemadministration/systemadministration.adoc[]\n \n-include::migration.adoc[]\n+include::upgrade.adoc[]"}]}