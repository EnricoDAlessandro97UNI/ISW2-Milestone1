{"sha":"bfd63a487505a56ac842935068f9990331526cc0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJmZDYzYTQ4NzUwNWE1NmFjODQyOTM1MDY4Zjk5OTAzMzE1MjZjYzA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-01-12T12:17:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-01-12T12:17:17Z"},"message":"[SYNCOPE-1609] Restoring custom support","tree":{"sha":"e77198ea912b614a9ac56a268b24a7a22885d8d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e77198ea912b614a9ac56a268b24a7a22885d8d6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bfd63a487505a56ac842935068f9990331526cc0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfd63a487505a56ac842935068f9990331526cc0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfd63a487505a56ac842935068f9990331526cc0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfd63a487505a56ac842935068f9990331526cc0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fca4bdbd08746b926bdb1d78f653a476ca1d9dbb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fca4bdbd08746b926bdb1d78f653a476ca1d9dbb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fca4bdbd08746b926bdb1d78f653a476ca1d9dbb"}],"stats":{"total":69,"additions":40,"deletions":29},"files":[{"sha":"3fc86ccf4b6ec690f0c14cd7e8499cea62f3c1b4","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":40,"deletions":15,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfd63a487505a56ac842935068f9990331526cc0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfd63a487505a56ac842935068f9990331526cc0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=bfd63a487505a56ac842935068f9990331526cc0","patch":"@@ -616,10 +616,10 @@ protected String buildAdminRealmsFilter(\n             final SearchSupport svs,\n             final List<Object> parameters) {\n \n-        List<String> realmKeyArgs = realmKeys.stream().\n+        String realmKeysArg = realmKeys.stream().\n                 map(realmKey -> \"?\" + setParameter(parameters, realmKey)).\n-                collect(Collectors.toList());\n-        return \"realm_id IN (\" + StringUtils.join(realmKeyArgs, \", \") + \")\";\n+                collect(Collectors.joining(\",\"));\n+        return \"realm_id IN (\" + realmKeysArg + \")\";\n     }\n \n     @Override\n@@ -638,7 +638,7 @@ protected int doCount(final Set<String> adminRealms, final SearchCond cond, fina\n \n         buildFrom(queryString, queryInfo, svs, null);\n \n-        buildWhere(queryString, queryInfo, filter);\n+        buildWhere(queryString, queryInfo, filter, svs, null);\n \n         Query countQuery = entityManager().createNativeQuery(queryString.toString());\n         fillWithParameters(countQuery, parameters);\n@@ -672,13 +672,11 @@ protected <T extends Any<?>> List<T> doSearch(\n             OrderBySupport obs = parseOrderBy(svs, orderBy);\n \n             StringBuilder queryString = new StringBuilder(\"SELECT \").append(svs.table().alias).append(\".id\");\n-            obs.items.forEach(item -> {\n-                queryString.append(\",\").append(item.select);\n-            });\n+            obs.items.forEach(item -> queryString.append(\",\").append(item.select));\n \n             buildFrom(queryString, queryInfo, svs, obs);\n \n-            buildWhere(queryString, queryInfo, filter);\n+            buildWhere(queryString, queryInfo, filter, svs, obs);\n \n             LOG.debug(\"Query: {}, parameters: {}\", queryString, parameters);\n \n@@ -835,7 +833,6 @@ protected void fillAttrQuery(\n \n         // This first branch is required for handling with not conditions given on multivalue fields (SYNCOPE-1419)\n         if (not && !(cond instanceof AnyCond)) {\n-\n             query.append(\"NOT (\");\n             fillAttrQuery(query, attrValue, schema, cond, false, parameters, svs);\n             query.append(\")\");\n@@ -1056,6 +1053,11 @@ protected void buildFrom(\n         Set<String> schemas = queryInfo.getRight();\n \n         if (obs != null) {\n+            obs.views.stream().\n+                    filter(view -> !svs.field().name.equals(view.name) && !svs.table().name.equals(view.name)).\n+                    map(view -> view.name + \" \" + view.alias).\n+                    forEach(view -> query.append(',').append(view));\n+\n             Pattern pattern = Pattern.compile(\"(.*) -> 0 AS .*\");\n             obs.items.forEach(item -> {\n                 Matcher matcher = pattern.matcher(item.select);\n@@ -1084,17 +1086,40 @@ protected void buildFrom(\n     protected void buildWhere(\n             final StringBuilder query,\n             final Pair<StringBuilder, Set<String>> queryInfo,\n-            final Pair<String, Set<String>> realms) {\n+            final Pair<String, Set<String>> realms,\n+            final SearchSupport svs,\n+            final OrderBySupport obs) {\n+\n+        StringBuilder where = new StringBuilder();\n+\n         if (queryInfo.getLeft().length() > 0) {\n-            query.append(\" WHERE \").append(queryInfo.getLeft());\n+            where.append(\" WHERE \").append(queryInfo.getLeft());\n         }\n \n-        if (realms.getLeft().length() > 0) {\n-            if (queryInfo.getLeft().length() > 0) {\n-                query.append(\" AND \").append(realms.getLeft());\n+        if (!realms.getLeft().isEmpty()) {\n+            if (queryInfo.getLeft().length() == 0) {\n+                where.append(\" WHERE \");\n             } else {\n-                query.append(\" WHERE \").append(realms.getLeft());\n+                where.append(\" AND \");\n             }\n+            where.append(realms.getLeft());\n         }\n+\n+        if (obs != null) {\n+            String obsWhere = obs.views.stream().\n+                    filter(view -> !svs.field().name.equals(view.name) && !svs.table().name.equals(view.name)).\n+                    map(view -> \"t.id=\" + view.alias + \".any_id\").\n+                    collect(Collectors.joining(\" AND \"));\n+            if (!obsWhere.isEmpty()) {\n+                if (where.length() == 0) {\n+                    where.append(\" WHERE \");\n+                } else {\n+                    where.append(\" AND \");\n+                }\n+                where.append(obsWhere);\n+            }\n+        }\n+\n+        query.append(where);\n     }\n }"},{"sha":"e360813225e342c24c189644d80cda79d7015417","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/views.xml","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfd63a487505a56ac842935068f9990331526cc0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfd63a487505a56ac842935068f9990331526cc0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml?ref=bfd63a487505a56ac842935068f9990331526cc0","patch":"@@ -95,13 +95,6 @@ under the License.\n   </entry>\n \n   <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n-\n-    SELECT a.id as any_id, a.*,attrs,attrValues\n-    FROM AnyObject a, jsonb_array_elements(COALESCE(a.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n   <entry key=\"anyObject_search_arelationship\">\n     CREATE VIEW anyObject_search_arelationship AS\n \n@@ -130,13 +123,6 @@ under the License.\n   </entry>\n \n   <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n-\n-    SELECT g.id as any_id, g.*,attrs,attrValues\n-    FROM SyncopeGroup g, jsonb_array_elements(COALESCE(g.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n   <entry key=\"group_search_resource\">\n     CREATE VIEW group_search_resource AS\n "}]}