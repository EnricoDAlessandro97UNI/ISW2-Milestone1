{"sha":"bc424fa38bbad819ebf881f5450f7ddfeb0091da","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJjNDI0ZmEzOGJiYWQ4MTllYmY4ODFmNTQ1MGY3ZGRmZWIwMDkxZGE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-05T09:43:51Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-05T09:43:51Z"},"message":"Merge from branch 0_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246561 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a7307e40eff05a57d0078d411dcf05da2c2444cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a7307e40eff05a57d0078d411dcf05da2c2444cb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bc424fa38bbad819ebf881f5450f7ddfeb0091da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc424fa38bbad819ebf881f5450f7ddfeb0091da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc424fa38bbad819ebf881f5450f7ddfeb0091da","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc424fa38bbad819ebf881f5450f7ddfeb0091da/comments","author":null,"committer":null,"parents":[{"sha":"df35381a8f49d76e05484f4dfc897849c42e3db9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df35381a8f49d76e05484f4dfc897849c42e3db9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df35381a8f49d76e05484f4dfc897849c42e3db9"}],"stats":{"total":1080,"additions":618,"deletions":462},"files":[{"sha":"4ac4b8c98a552fdd252b106a2314d768793e1226","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -0,0 +1,24 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.commons;\n+\n+public final class Constants {\n+\n+    public static final String CONF_USERS_ATTRIBUTES_VIEW =\n+            \"users.attributes.view\";\n+\n+    private Constants() {\n+    }\n+}"},{"sha":"c786191a2c9436bfdacc218216f1edfdd05542d8","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -22,21 +22,20 @@\n /**\n  * Syncope Wicket base-page.\n  */\n-public class BasePage extends CustomizableBasePage\n-{\n+public class BasePage extends CustomizableBasePage {\n \n     private static final long serialVersionUID = 1L;\n \n     /**\n-     * Constructor that is invoked when page is invoked without a sessadd(new BookmarkablePageLink(\"roles\", Roles.class));ion.\n+     * Constructor that is invoked when page is invoked without a\n+     * sessadd(new BookmarkablePageLink(\"roles\", Roles.class));ion.\n      *\n      * @param PageParameters parameters\n      *            \n      */\n-    public BasePage( final PageParameters parameters )\n-    {\n+    public BasePage(final PageParameters parameters) {\n         super(parameters);\n-        \n+\n         add(new BookmarkablePageLink(\"schema\", Schema.class));\n \n         add(new BookmarkablePageLink(\"users\", Users.class));\n@@ -54,16 +53,18 @@ public BasePage( final PageParameters parameters )\n         add(new BookmarkablePageLink(\"logout\", Logout.class));\n     }\n \n-    /** Returns the current SyncopeSession */\n-    public SyncopeSession getSyncopeSession()\n-    {\n-        return ( SyncopeSession ) getSession();\n+    /**\n+     * @return the current SyncopeSession\n+     */\n+    public SyncopeSession getSyncopeSession() {\n+        return (SyncopeSession) getSession();\n     }\n \n-    /** Returns the current SyncopeUser logged-in from the session */\n-    public SyncopeUser getSyncopeUser()\n-    {\n-        return ( SyncopeUser ) getSyncopeSession().getUser();\n+    /**\n+     * @return the current SyncopeUser logged-in from the session\n+     */\n+    public SyncopeUser getSyncopeUser() {\n+        return (SyncopeUser) getSyncopeSession().getUser();\n \n     }\n }"},{"sha":"6db355bddcb3ed72e6604374edb50696c1aac9a2","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":38,"deletions":59,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -34,6 +34,7 @@\n import org.syncope.client.to.ConfigurationTO;\n \n import org.syncope.console.SyncopeApplication;\n+import org.syncope.console.commons.Constants;\n import org.syncope.console.rest.ConfigurationsRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n \n@@ -43,112 +44,90 @@\n public class DisplayAttributesModalPage extends SyncopeModalPage {\n \n     @SpringBean(name = \"configurationsRestClient\")\n-    ConfigurationsRestClient restClient;\n-    \n-    List<String> selections;\n-    ConfigurationTO configuration;\n-\n+    private ConfigurationsRestClient restClient;\n+    private List<String> selections;\n+    private ConfigurationTO configuration;\n     public AjaxButton submit;\n-    \n-    public DisplayAttributesModalPage(final BasePage basePage, final ModalWindow window,\n-            final boolean createFlag) {\n \n-        Form userAttributesForm = new Form(\"UserAttributesForm\");\n+    public DisplayAttributesModalPage(final BasePage basePage,\n+            final ModalWindow window, final boolean createFlag) {\n \n+        Form userAttributesForm = new Form(\"UserAttributesForm\");\n         userAttributesForm.setModel(new CompoundPropertyModel(this));\n-\n         setupSelections();\n \n-\n         final IModel attributes = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n-                SchemaRestClient schemaRestClient = (SchemaRestClient)\n-                        ((SyncopeApplication)Application.get()).getApplicationContext().\n+                SyncopeApplication app = (SyncopeApplication) Application.get();\n+                SchemaRestClient schemaRestClient =\n+                        (SchemaRestClient) app.getApplicationContext().\n                         getBean(\"schemaRestClient\");\n \n                 return schemaRestClient.getAllUserSchemasNames();\n             }\n         };\n \n-\n         userAttributesForm.add(new CheckBoxMultipleChoice(\"usersSchemasList\",\n-                               new PropertyModel(this,\"selections\"), attributes));\n+                new PropertyModel(this, \"selections\"), attributes));\n \n         submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                \n-                boolean res = saveConfiguration();\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n \n-                if(res)\n+                if (saveConfiguration()) {\n                     window.close(target);\n-\n-                else\n+                } else {\n                     error(getString(\"generic_error\"));\n-                \n+                }\n+\n             }\n         };\n         userAttributesForm.add(submit);\n-\n         add(userAttributesForm);\n     }\n-    \n+\n     /**\n      * Setup user selections.\n      * @return selections' names.\n      */\n-    public void setupSelections(){\n+    public final void setupSelections() {\n+        selections = new ArrayList<String>();\n \n-        configuration = restClient.readConfiguration(\"users.attributes.view\");\n+        configuration = restClient.readConfiguration(\n+                Constants.CONF_USERS_ATTRIBUTES_VIEW);\n \n-        if(configuration != null) {\n+        if (configuration != null && configuration.getConfValue() != null) {\n             String conf = configuration.getConfValue();\n-            StringTokenizer st = new StringTokenizer(conf,\";\");\n+            StringTokenizer st = new StringTokenizer(conf, \";\");\n \n-            selections = new ArrayList<String>();\n-            \n-            while(st.hasMoreTokens()) {\n-                  this.selections.add(st.nextToken());\n-             }\n+            while (st.hasMoreTokens()) {\n+                this.selections.add(st.nextToken());\n+            }\n         }\n-        else \n-            selections = new ArrayList<String>();\n-\n     }\n-    \n-     /**\n+\n+    /**\n      * Store the selected selections into db.\n      */\n     public boolean saveConfiguration() {\n-\n         boolean create = (configuration == null) ? true : false;\n \n         configuration = new ConfigurationTO();\n \n-        String value = \"\";\n-\n-        for (String name : selections) \n-            value += name + \";\";\n-        \n-\n-        configuration.setConfKey(\"users.attributes.view\");\n-        configuration.setConfValue(value);\n-\n-        if (create) {\n-\n-            if (!restClient.createConfiguration(configuration))\n-                return false;\n+        StringBuilder value = new StringBuilder();\n+        for (String name : selections) {\n+            value.append(name).append(';');\n         }\n \n-        else  if (!create) {\n-\n-            if (!restClient.updateConfiguration(configuration))\n-                return false;\n-        }\n+        configuration.setConfKey(Constants.CONF_USERS_ATTRIBUTES_VIEW);\n+        configuration.setConfValue(value.toString());\n \n-        return true;\n+        return create\n+                ? restClient.createConfiguration(configuration)\n+                : restClient.updateConfiguration(configuration);\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"f1f4664f41f181b0ff0d493729f6d8e9a589d78a","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -216,6 +216,19 @@ public void setObject(Serializable object) {\n                                             item.setModelObject(val);\n                                         }\n                                     }, schemaTO.isMandatory(),schemaTO.isReadonly());\n+                        } else {\n+                            panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    item.setModelObject((String) object);\n+                                }\n+                            }, schemaTO.isMandatory(),schemaTO.isReadonly());\n                         }\n \n                         item.add(panel);\n@@ -819,7 +832,7 @@ public void searchAndUpdateMembership(MembershipTO newMembership) {\n \n                     }\n                 }\n-                \n+                //TO BE FIXED CORE-SIDE\n                 userMod.addMembershipToBeRemoved(oldMembership.getId());\n                 userMod.addMembershipToBeAdded(membershipMod);\n                 "},{"sha":"c542bf490527d7f750df6cd08cfb0eadf3dbf259","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":103,"deletions":103,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -36,12 +36,10 @@\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.UserTO;\n-\n+import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.SearchConditionWrapper;\n import org.syncope.console.rest.SchemaRestClient;\n-\n import org.syncope.console.rest.ConfigurationsRestClient;\n-\n import org.syncope.console.rest.UsersRestClient;\n \n /**\n@@ -50,36 +48,28 @@\n public class Users extends BasePage {\n \n     @SpringBean(name = \"usersRestClient\")\n-    UsersRestClient usersRestClient;\n-\n+    private UsersRestClient usersRestClient;\n     @SpringBean(name = \"schemaRestClient\")\n-    SchemaRestClient schemaRestClient;\n-\n+    private SchemaRestClient schemaRestClient;\n     @SpringBean(name = \"configurationsRestClient\")\n-    ConfigurationsRestClient configurationsRestClient;\n-\n-    final ModalWindow createUserWin;\n-    final ModalWindow editUserWin;\n-    final ModalWindow changeAttribsViewWin;\n-\n-    final int WIN_ATTRIBUTES_HEIGHT = 515;\n-    final int WIN_ATTRIBUTES_WIDTH = 775;\n-\n-    final int WIN_USER_HEIGHT = 680;\n-    final int WIN_USER_WIDTH = 1133;\n-\n-    WebMarkupContainer usersContainer;\n-\n-    List<String> columnsList;\n-\n-    /** Response flag set by the Modal Window after the operation is completed*/\n-    boolean operationResult = false;\n-\n-    FeedbackPanel feedbackPanel;\n+    private ConfigurationsRestClient configurationsRestClient;\n+    private final ModalWindow createUserWin;\n+    private final ModalWindow editUserWin;\n+    private final ModalWindow changeAttribsViewWin;\n+    private static final int WIN_ATTRIBUTES_HEIGHT = 515;\n+    private static final int WIN_ATTRIBUTES_WIDTH = 775;\n+    private static final int WIN_USER_HEIGHT = 680;\n+    private static final int WIN_USER_WIDTH = 1133;\n+    private WebMarkupContainer usersContainer;\n+    private List<String> columnsList;\n+    /** \n+     * Response flag set by the Modal Window after the operation is completed\n+     */\n+    private boolean operationResult = false;\n+    private FeedbackPanel feedbackPanel;\n+    private final ModalWindow searchUsersWin;\n+    private List<SearchConditionWrapper> searchConditionsList;\n \n-    final ModalWindow searchUsersWin;\n-    List<SearchConditionWrapper> searchConditionsList;\n-    \n     public Users(PageParameters parameters) {\n         super(parameters);\n \n@@ -91,20 +81,24 @@ public Users(PageParameters parameters) {\n         add(searchUsersWin = new ModalWindow(\"searchUsersWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n+        feedbackPanel.setOutputMarkupId(true);\n \n         add(feedbackPanel);\n-        \n+\n         //table's columnsList = attributes to view\n         final IModel columns = new LoadableDetachableModel() {\n \n+            @Override\n             protected Object load() {\n-\n-                ConfigurationTO configuration = configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+                ConfigurationTO configuration =\n+                        configurationsRestClient.readConfiguration(\n+                        Constants.CONF_USERS_ATTRIBUTES_VIEW);\n \n                 columnsList = new ArrayList<String>();\n \n-                if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n+                if (configuration != null\n+                        && configuration.getConfValue() != null) {\n+\n                     String conf = configuration.getConfValue();\n                     StringTokenizer st = new StringTokenizer(conf, \";\");\n \n@@ -118,13 +112,13 @@ protected Object load() {\n             }\n         };\n \n-        ListView columnsView = new ListView(\"usersSchema\",columns) {\n+        ListView columnsView = new ListView(\"usersSchema\", columns) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n                 final String name =\n                         (String) item.getDefaultModelObject();\n-                \n+\n                 item.add(new Label(\"attribute\", name));\n             }\n         };\n@@ -136,42 +130,41 @@ protected Object load() {\n             }\n         };\n \n-        ListView usersView = new ListView(\"users\",users) {\n+        ListView usersView = new ListView(\"users\", users) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n                 final UserTO userTO =\n                         (UserTO) item.getDefaultModelObject();\n \n-                item.add(new Label(\"id\",userTO.getId()+\"\"));\n+                item.add(new Label(\"id\", userTO.getId() + \"\"));\n+\n+                item.add(new Label(\"status\", userTO.getStatus()));\n \n-                item.add(new Label(\"status\",userTO.getStatus()));\n+                if (userTO.getToken() != null\n+                        && !\"\".equals(userTO.getToken())) {\n \n-                if(userTO.getToken() != null && !userTO.getToken().equals(\"\"))\n-                    item.add(new Label(\"token\",getString(\"tokenValued\")));\n-                else\n-                    item.add(new Label(\"token\",getString(\"tokenNotValued\")));\n+                    item.add(new Label(\"token\", getString(\"tokenValued\")));\n+                } else {\n+                    item.add(new Label(\"token\", getString(\"tokenNotValued\")));\n+                }\n \n-                item.add(new ListView(\"selectedAttributes\", attributesToDisplay(userTO)) {\n+                item.add(new ListView(\"selectedAttributes\",\n+                        attributesToDisplay(userTO)) {\n \n                     @Override\n                     protected void populateItem(ListItem item) {\n                         AttributeWrapper attribute =\n                                 (AttributeWrapper) item.getDefaultModelObject();\n \n-                        for(String name : columnsList){\n-\n-                             if( name.equalsIgnoreCase(attribute.getKey())) {\n-                                 item.add(new Label(\"name\",attribute.getValue()));\n-                             }\n-                             else if(!name.equalsIgnoreCase(attribute.getKey())) {\n-\n-                             }\n-                                   \n+                        for (String name : columnsList) {\n+                            if (name.equalsIgnoreCase(attribute.getKey())) {\n+                                item.add(new Label(\"name\",\n+                                        attribute.getValue()));\n+                            }\n                         }\n \n                     }\n-\n                 });\n \n                 AjaxLink editLink = new AjaxLink(\"editLink\") {\n@@ -181,14 +174,15 @@ public void onClick(AjaxRequestTarget target) {\n                         final UserTO userTO =\n                                 (UserTO) item.getDefaultModelObject();\n \n-                        editUserWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editUserWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                            public Page createPage() {\n-                                UserModalPage form = new UserModalPage\n-                                        (Users.this, editUserWin, userTO, false);\n-                                return form;\n-                            }\n-                        });\n+                                    public Page createPage() {\n+                                        UserModalPage form = new UserModalPage(\n+                                                Users.this, editUserWin, userTO, false);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editUserWin.show(target);\n                     }\n@@ -200,7 +194,7 @@ public Page createPage() {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        usersRestClient.deleteUser(userTO.getId()+\"\");\n+                        usersRestClient.deleteUser(userTO.getId() + \"\");\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n@@ -275,37 +269,42 @@ public Page createPage() {\n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                changeAttribsViewWin.setPageCreator(new ModalWindow.PageCreator() {\n+                changeAttribsViewWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n \n-                    public Page createPage() {\n-                        DisplayAttributesModalPage form = new DisplayAttributesModalPage(Users.this, changeAttribsViewWin, true);\n-                        return form;\n-                    }\n-                });\n+                            public Page createPage() {\n+                                DisplayAttributesModalPage form =\n+                                        new DisplayAttributesModalPage(Users.this,\n+                                        changeAttribsViewWin, true);\n+                                return form;\n+                            }\n+                        });\n \n                 changeAttribsViewWin.show(target);\n             }\n         });\n-        \n-       //TAB 2 - Search section start \n+\n+        //TAB 2 - Search section start\n        /* PLACE SEARCH CODE HERE */\n-        \n+\n     }\n \n     /**\n      * Return the user's attributes columnsList to display, ordered\n      * @param userTO instance\n      * @return attributes columnsList to view depending the selection\n      */\n-      public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n+    public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n         Set<AttributeTO> attributes = user.getAttributes();\n-        List<AttributeWrapper> attributesList = new ArrayList<AttributeWrapper>();\n-\n+        List<AttributeWrapper> attributesList =\n+                new ArrayList<AttributeWrapper>();\n \n-        ConfigurationTO configuration = configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+        ConfigurationTO configuration =\n+                configurationsRestClient.readConfiguration(\n+                Constants.CONF_USERS_ATTRIBUTES_VIEW);\n \n         columnsList = new ArrayList<String>();\n-        \n+\n         if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n             String conf = configuration.getConfValue();\n             StringTokenizer st = new StringTokenizer(conf, \";\");\n@@ -314,34 +313,34 @@ public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n                 columnsList.add(st.nextToken());\n             }\n         }\n-        \n+\n         Collections.sort(columnsList);\n \n         AttributeWrapper attributeWrapper = null;\n \n-            boolean found = false;\n-            for (String name : columnsList) {\n-               for (AttributeTO attribute : attributes) {\n+        boolean found = false;\n+        for (String name : columnsList) {\n+            for (AttributeTO attribute : attributes) {\n                 if (name.equals(attribute.getSchema()) && !found) {\n                     attributeWrapper = new AttributeWrapper();\n                     attributeWrapper.setKey(attribute.getSchema());\n-                        for(String value : attribute.getValues()){\n-                            attributeWrapper.setValue(value);\n-                            found=true;\n-                        }\n+                    for (String value : attribute.getValues()) {\n+                        attributeWrapper.setValue(value);\n+                        found = true;\n+                    }\n                     attributesList.add(attributeWrapper);\n                 }\n             }\n-               //case the attribute's value is blank\n-               if(!found){\n-               attributeWrapper = new AttributeWrapper();\n-               attributeWrapper.setKey(name);\n-               attributeWrapper.setValue(\"\");\n-               \n-               attributesList.add(attributeWrapper);\n-               }\n-               else\n-               found = false;\n+            //case the attribute's value is blank\n+            if (!found) {\n+                attributeWrapper = new AttributeWrapper();\n+                attributeWrapper.setKey(name);\n+                attributeWrapper.setValue(\"\");\n+\n+                attributesList.add(attributeWrapper);\n+            } else {\n+                found = false;\n+            }\n         }\n \n \n@@ -362,11 +361,11 @@ public void setWindowClosedCallback(ModalWindow window,\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        if(operationResult){\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n-                    }\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n                 });\n     }\n@@ -392,8 +391,9 @@ private void setupSearchConditions() {\n      * Wrapper class for displaying attribute\n      */\n     public class AttributeWrapper {\n-        String key;\n-        String value;\n+\n+        private String key;\n+        private String value;\n \n         public String getKey() {\n             return key;\n@@ -411,4 +411,4 @@ public void setValue(String value) {\n             this.value = value;\n         }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"2e63912f8ca5a190fa0dc92645d6abb6914cae00","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":89,"deletions":62,"changes":151,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -32,32 +32,33 @@\n  */\n public class SchemaRestClient {\n \n-    RestClient restClient;\n-    protected static final Logger log =\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(SchemaRestClient.class);\n+    protected RestClient restClient;\n \n     /**\n      * Get all user's schemas.\n      * @return SchemaTOs\n      */\n     public SchemaTOs getAllUserSchemas() {\n-\n         SchemaTOs userSchemas = null;\n \n         try {\n-            userSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            userSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/user/list.json\", SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-\n             for (SyncopeClientExceptionType exceptionType :\n                     SyncopeClientExceptionType.values()) {\n                 if (e.hasException(exceptionType)) {\n-                    log.error(exceptionType.toString());\n-                    log.error(e.getException(exceptionType).getElements().toString());\n+                    LOG.error(exceptionType.toString());\n+                    LOG.error(e.getException(exceptionType).\n+                            getElements().toString());\n                 }\n             }\n-\n         } catch (RestClientException e) {\n             e.printStackTrace();\n         }\n@@ -75,7 +76,8 @@ public List<String> getAllUserSchemasNames() {\n         List<String> schemasNames = new ArrayList<String>();\n         try {\n             userSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/user/list.json\", SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -98,7 +100,8 @@ public DerivedSchemaTOs getAllUserDerivedSchemas() {\n \n         DerivedSchemaTOs userDerivedSchemas = null;\n         try {\n-            userDerivedSchemas = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            userDerivedSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"derivedSchema/user/list.json\", DerivedSchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -115,8 +118,8 @@ public List<String> getAllUserDerivedSchemasNames() {\n         DerivedSchemaTOs userDerivedSchemas = null;\n         List<String> userDerivedSchemasNames = new ArrayList<String>();\n         try {\n-            userDerivedSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL() \n+            userDerivedSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"derivedSchema/user/list.json\", DerivedSchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -137,8 +140,8 @@ public List<String> getAllUserDerivedSchemasNames() {\n      */\n     public void createUserSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"schema/user/create\", schemaTO, SchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"schema/user/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -153,7 +156,8 @@ public SchemaTO readUserSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            schema = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/user/read/\" + name + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -181,8 +185,8 @@ public void updateUserSchema(SchemaTO schemaTO) {\n      */\n     public void deleteUserSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                    \"schema/user/delete/\" + name + \".json\");\n+            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+                    + \"schema/user/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -194,8 +198,9 @@ public void deleteUserSchema(String name) {\n      */\n     public void createUserDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/user/create\", schemaTO, DerivedSchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"derivedSchema/user/create\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -209,8 +214,10 @@ public void createUserDerivedSchema(DerivedSchemaTO schemaTO) {\n     public DerivedSchemaTO readUserDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/user/read/\" + name + \".json\", DerivedSchemaTO.class);\n+            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"derivedSchema/user/read/\" + name + \".json\",\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -223,8 +230,9 @@ public DerivedSchemaTO readUserDerivedSchema(String name) {\n      */\n     public void updateUserDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/user/update\", schemaTO, DerivedSchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"derivedSchema/user/update\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -238,8 +246,8 @@ public void updateUserDerivedSchema(DerivedSchemaTO schemaTO) {\n      */\n     public void deleteUserDerivedSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                    \"derivedSchema/user/delete/\" + name + \".json\");\n+            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+                    + \"derivedSchema/user/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -262,9 +270,9 @@ public SchemaTOs getAllRoleSchemas() {\n         SchemaTOs roleSchemas = null;\n \n         try {\n-            roleSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                    + \"schema/role/list.json\", SchemaTOs.class);\n+            roleSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"schema/role/list.json\",\n+                    SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n             e.printStackTrace();\n@@ -283,8 +291,8 @@ public List<String> getAllRoleSchemasNames() {\n         List<String> roleSchemasNames = new ArrayList<String>();\n \n         try {\n-            roleSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            roleSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/role/list.json\", SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n@@ -308,8 +316,8 @@ public List<String> getAllMembershipSchemasNames() {\n         List<String> membershipSchemasNames = new ArrayList<String>();\n \n         try {\n-            membershipSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            membershipSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/membership/list.json\", SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n@@ -329,8 +337,8 @@ public List<String> getAllMembershipSchemasNames() {\n      */\n     public void createRoleSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"schema/role/create\", schemaTO, SchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"schema/role/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -345,7 +353,8 @@ public SchemaTO readRoleSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            schema = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/role/read/\" + name + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -359,7 +368,8 @@ public SchemaTO readRoleSchema(String name) {\n      */\n     public void updateRoleSchema(SchemaTO schemaTO) {\n         try {\n-            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/role/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -373,8 +383,8 @@ public void updateRoleSchema(SchemaTO schemaTO) {\n      */\n     public void deleteRoleSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                    \"schema/role/delete/\" + name + \".json\");\n+            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+                    + \"schema/role/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -388,7 +398,8 @@ public DerivedSchemaTOs getAllRoleDerivedSchemas() {\n         DerivedSchemaTOs roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+            roleDerivedSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"derivedSchema/role/list.json\", DerivedSchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         }\n@@ -401,8 +412,9 @@ public DerivedSchemaTOs getAllRoleDerivedSchemas() {\n      */\n     public void createRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/role/create\", schemaTO, DerivedSchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"derivedSchema/role/create\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -417,8 +429,10 @@ public DerivedSchemaTO readRoleDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n \n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                    + \"derivedSchema/role/read/\" + name + \".json\", DerivedSchemaTO.class);\n+            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"derivedSchema/role/read/\" + name + \".json\",\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -433,7 +447,8 @@ public void updateRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n \n         try {\n             restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n-                    + \"derivedSchema/role/update\", schemaTO, DerivedSchemaTO.class);\n+                    + \"derivedSchema/role/update\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -463,7 +478,8 @@ public SchemaTOs getAllMemberhipSchemas() {\n \n         try {\n             memberhipSchemas =\n-                    restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/membership/list.json\", SchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n@@ -479,8 +495,8 @@ public SchemaTOs getAllMemberhipSchemas() {\n      */\n     public void createMemberhipSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"schema/membership/create\", schemaTO, SchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"schema/membership/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -495,8 +511,10 @@ public SchemaTO readMemberhipSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                    + \"schema/membership/read/\" + name + \".json\", SchemaTO.class);\n+            schema = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"schema/membership/read/\" + name + \".json\",\n+                    SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -509,7 +527,8 @@ public SchemaTO readMemberhipSchema(String name) {\n      */\n     public void updateMemberhipSchema(SchemaTO schemaTO) {\n         try {\n-            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL()\n                     + \"schema/membership/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n@@ -523,8 +542,8 @@ public void updateMemberhipSchema(SchemaTO schemaTO) {\n      */\n     public void deleteMemberhipSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                    \"schema/membership/delete/\" + name + \".json\");\n+            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+                    + \"schema/membership/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -538,12 +557,14 @@ public Set<String> getAllValidatorClasses() {\n \n         try {\n             validators = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"configuration/validators.json\", Set.class);\n+                    restClient.getBaseURL() + \"configuration/validators.json\",\n+                    Set.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n         return validators;\n     }\n+\n     /**\n      * Get all membership's derived schemas.\n      * @return DerivedSchemaTOs\n@@ -552,8 +573,10 @@ public DerivedSchemaTOs getAllMembershipDerivedSchemas() {\n         DerivedSchemaTOs roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                    + \"derivedSchema/membership/list.json\", DerivedSchemaTOs.class);\n+            roleDerivedSchemas = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"derivedSchema/membership/list.json\",\n+                    DerivedSchemaTOs.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n         }\n         return roleDerivedSchemas;\n@@ -565,8 +588,9 @@ public DerivedSchemaTOs getAllMembershipDerivedSchemas() {\n      */\n     public void createMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/membership/create\", schemaTO, DerivedSchemaTO.class);\n+            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+                    + \"derivedSchema/membership/create\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -581,8 +605,10 @@ public DerivedSchemaTO readMembershipDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n \n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                    + \"derivedSchema/membership/read/\" + name + \".json\", DerivedSchemaTO.class);\n+            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"derivedSchema/membership/read/\" + name + \".json\",\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -597,7 +623,8 @@ public void updateMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n \n         try {\n             restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n-                    + \"derivedSchema/membership/update\", schemaTO, DerivedSchemaTO.class);\n+                    + \"derivedSchema/membership/update\", schemaTO,\n+                    DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -616,4 +643,4 @@ public void deleteMembershipDerivedSchema(String name) {\n             e.printStackTrace();\n         }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"94e31e7008b16ad3f580512d6b814890e7d2f4a9","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":57,"deletions":62,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -13,61 +13,52 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.rest;\n \n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.to.UserTOs;\n-import org.syncope.client.to.WorkflowActionsTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.commons.Constants;\n \n /**\n  * Console client for invoking rest users services.\n  */\n-public class UsersRestClient\n-\n-{    \n-     RestClient restClient;\n-\n-     public UserTOs getAllUsers() {\n-       UserTOs users = null;\n-       try {\n-        users = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                + \"user/list.json\", UserTOs.class);\n-       }\n-       catch (SyncopeClientCompositeErrorException e) {\n+public class UsersRestClient {\n+\n+    protected RestClient restClient;\n+\n+    public UserTOs getAllUsers() {\n+        UserTOs users = null;\n+        try {\n+            users = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"user/list.json\", UserTOs.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n         return users;\n     }\n+\n     /**\n      * Create a new user and start off the workflow.\n      * @param userTO instance\n      */\n     public void createUser(UserTO userTO) {\n         UserTO newUserTO;\n-        \n+\n         try {\n-        // 1. create user\n-        newUserTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n-                + \"user/create\", userTO, UserTO.class);\n-        \n-        userTO.setId(newUserTO.getId());\n-        //userTO.setToken(newUserTO.getToken());\n-        //userTO.setTokenExpireTime(newUserTO.getTokenExpireTime());\n-        \n-        WorkflowActionsTO workflowActions = restClient.getRestTemplate().getForObject(\n-        restClient.getBaseURL() + \"user/actions/{userId}\", WorkflowActionsTO.class,\n-        newUserTO.getId());\n-\n-        // 2. activate user\n-        newUserTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL() \n-                + \"user/activate\", newUserTO, UserTO.class);\n-        \n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n+            // 1. create user\n+            userTO = restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL()\n+                    + \"user/create\", userTO, UserTO.class);\n+\n+            // 2. activate user\n+            userTO = restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL()\n+                    + \"user/activate\", userTO, UserTO.class);\n+\n+        } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n             throw e;\n         }\n@@ -78,40 +69,38 @@ public void createUser(UserTO userTO) {\n      * @param userTO\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n-    public boolean updateUser(UserMod userModTO) {\n+    public boolean updateUser(final UserMod userModTO) {\n         UserTO newUserTO = null;\n \n         try {\n-        newUserTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n-                + \"user/update\", userModTO, UserTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n+            newUserTO = restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL()\n+                    + \"user/update\", userModTO, UserTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n             throw e;\n         }\n \n-        return (userModTO.getId() == newUserTO.getId())?true:false;\n+        return userModTO.getId() == newUserTO.getId();\n     }\n \n-\n     public void deleteUser(String id) {\n         try {\n-        restClient.getRestTemplate().delete(restClient.getBaseURL()\n-                + \"user/delete/{userId}\", new Integer(id));\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n+            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+                    + \"user/delete/{userId}\", new Integer(id));\n+        } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n     }\n \n     public UserTO getUser(String id) {\n         UserTO userTO = null;\n         try {\n-        userTO = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                + \"user/read/{userId}.json\",\n-                UserTO.class, id);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n+            userTO = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL()\n+                    + \"user/read/{userId}.json\",\n+                    UserTO.class, id);\n+        } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n         return userTO;\n@@ -122,40 +111,46 @@ public UserTO getUser(String id) {\n      * @param configurationTO\n      * @return true if the operation ends succesfully, false otherwise\n      */\n-    public boolean createConfigurationAttributes(ConfigurationTO configurationTO) {\n+    public boolean createConfigurationAttributes(\n+            ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n+        ConfigurationTO newConfigurationTO =\n+                restClient.getRestTemplate().postForObject(\n                 restClient.getBaseURL() + \"configuration/create\",\n                 configurationTO, ConfigurationTO.class);\n \n-        return (configurationTO.equals(newConfigurationTO))?true:false;\n+        return configurationTO.equals(newConfigurationTO);\n     }\n \n     /**\n      * Update an existent configuration.\n      * @param configurationTO\n      * @return true if the operation ends succesfully, false otherwise\n      */\n-    public boolean updateConfigurationAttributes(ConfigurationTO configurationTO) {\n+    public boolean updateConfigurationAttributes(\n+            ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n-                 restClient.getBaseURL() + \"configuration/update\",\n-                 configurationTO, ConfigurationTO.class);\n+        ConfigurationTO newConfigurationTO =\n+                restClient.getRestTemplate().postForObject(\n+                restClient.getBaseURL() + \"configuration/update\",\n+                configurationTO, ConfigurationTO.class);\n \n-        return (configurationTO.equals(newConfigurationTO))?true:false;\n+        return configurationTO.equals(newConfigurationTO);\n     }\n \n     /**\n      * Load an existent configuration.\n-     * @return ConfigurationTO object if the configuration exists, null otherwise\n+     * @return ConfigurationTO object if the configuration exists,\n+     * null otherwise\n      */\n     public ConfigurationTO readConfigurationDisplayAttributes() {\n-        \n+\n         ConfigurationTO configurationTO;\n         try {\n             configurationTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"configuration/read/{confKey}.json\",\n-                    ConfigurationTO.class, \"users.attributes.view\");\n+                    restClient.getBaseURL() + \"configuration/read/{confKey}\",\n+                    ConfigurationTO.class,\n+                    Constants.CONF_USERS_ATTRIBUTES_VIEW);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n             return null;\n@@ -184,5 +179,5 @@ public RestClient getRestClient() {\n \n     public void setRestClient(RestClient restClient) {\n         this.restClient = restClient;\n-    }    \n+    }\n }"},{"sha":"1ec9c1f09df3adf662bca46693db8b3cc187d6ac","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttribute.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttribute.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -42,10 +42,10 @@ public <T extends AbstractAttributeValue> T addValue(String value,\n         actualValue.setAttribute(this);\n \n         if (!getSchema().isMultivalue()) {\n-            getAttributeValues().clear();\n+            getValues().clear();\n         }\n \n-        addAttributeValue(actualValue);\n+        addValue(actualValue);\n \n         return actualValue;\n     }\n@@ -58,14 +58,14 @@ public <T extends AbstractAttributeValue> T addValue(String value,\n \n     public abstract <T extends AbstractSchema> void setSchema(T schema);\n \n-    public abstract <T extends AbstractAttributeValue> boolean addAttributeValue(\n+    public abstract <T extends AbstractAttributeValue> boolean addValue(\n             T attributeValue);\n \n-    public abstract <T extends AbstractAttributeValue> boolean removeAttributeValue(\n+    public abstract <T extends AbstractAttributeValue> boolean removeValue(\n             T attributeValue);\n \n-    public <T extends AbstractAttributeValue> List<String> getAttributeValuesAsStrings() {\n-        List<T> values = getAttributeValues();\n+    public <T extends AbstractAttributeValue> List<String> getValuesAsStrings() {\n+        List<T> values = getValues();\n \n         List<String> result = new ArrayList<String>(values.size());\n         for (T attributeValue : values) {\n@@ -75,8 +75,8 @@ public <T extends AbstractAttributeValue> List<String> getAttributeValuesAsStrin\n         return result;\n     }\n \n-    public abstract <T extends AbstractAttributeValue> List<T> getAttributeValues();\n+    public abstract <T extends AbstractAttributeValue> List<T> getValues();\n \n-    public abstract <T extends AbstractAttributeValue> void setAttributeValues(\n+    public abstract <T extends AbstractAttributeValue> void setValues(\n             List<T> attributeValues);\n }"},{"sha":"8253fd4548b7ba888f51e94dca4c470260611145","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributeValue.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -93,11 +93,11 @@ public void setStringValue(String stringValue) {\n     }\n \n     public <T> T getValue() {\n-        return (T) (booleanValue != null\n-                ? getBooleanValue() : (dateValue != null\n-                ? getDateValue() : (doubleValue != null\n-                ? getDoubleValue() : (longValue != null\n-                ? getLongValue() : stringValue))));\n+        return (T) (booleanValue != null ? getBooleanValue()\n+                : (dateValue != null ? getDateValue()\n+                : (doubleValue != null ? getDoubleValue()\n+                : (longValue != null ? getLongValue()\n+                : stringValue))));\n     }\n \n     public String getValueAsString() {\n@@ -106,26 +106,28 @@ public String getValueAsString() {\n         switch (getAttribute().getSchema().getType()) {\n \n             case String:\n-                result = stringValue;\n+                result = getStringValue();\n                 break;\n \n             case Boolean:\n-                result = booleanValue.toString();\n+                result = getBooleanValue().toString();\n                 break;\n \n             case Long:\n                 result = getAttribute().getSchema().getFormatter(\n-                        DecimalFormat.class).format(longValue);\n+                        DecimalFormat.class).format(getLongValue());\n                 break;\n \n             case Double:\n                 result = getAttribute().getSchema().getFormatter(\n-                        DecimalFormat.class).format(doubleValue);\n+                        DecimalFormat.class).format(getDoubleValue());\n                 break;\n \n             case Date:\n                 result = getAttribute().getSchema().getFormatter(\n-                        SimpleDateFormat.class).format(dateValue);\n+                        SimpleDateFormat.class).format(getDateValue());\n+\n+            default:\n         }\n \n         return result;"},{"sha":"075de5cb3582d0e472c11e8afa659a266a6482d7","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -28,6 +28,9 @@\n \n public abstract class AbstractBaseBean implements Serializable {\n \n+    /**\n+     * Logger.\n+     */\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractBaseBean.class);\n \n@@ -40,7 +43,6 @@ protected final boolean isBooleanAsCharacter(final Character property) {\n     }\n \n     /**\n-     *\n      * @param value the boolean value to be represented as character\n      * @return the character corresponding to the property param\n      */"},{"sha":"fe06c295a2c7d3b0053302dcba0d30971eb40a8b","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractDerivedAttribute.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerivedAttribute.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -64,7 +64,7 @@ public String getValue(Collection<? extends AbstractAttribute> attributes) {\n                 attributes.iterator(); itor.hasNext();) {\n \n             attribute = itor.next();\n-            attributeValues = attribute.getAttributeValues();\n+            attributeValues = attribute.getValues();\n             if (attributeValues.isEmpty()\n                     || !getDerivedSchema().getSchemas().contains(\n                     attribute.getSchema())) {"},{"sha":"47f9dcdfcda384817c224460f4f996dc531f36aa","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -145,4 +145,11 @@ public Set<TargetResource> getTargetResources() {\n     @Override\n     public void setResources(Set<TargetResource> resources) {\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"Membership[\" + \"id=\" + id\n+                + \", \" + syncopeUser\n+                + \", \" + syncopeRole + ']';\n+    }\n }"},{"sha":"6c09dd61f58a355e20150fa70c73a9ade55e6213","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MembershipAttribute.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipAttribute.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -63,26 +63,26 @@ public <T extends AbstractSchema> void setSchema(T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean addAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean addValue(\n             T attributeValue) {\n \n         return attributeValues.add((MembershipAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean removeAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean removeValue(\n             T attributeValue) {\n \n         return attributeValues.remove((MembershipAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> List<T> getAttributeValues() {\n+    public <T extends AbstractAttributeValue> List<T> getValues() {\n         return (List<T>) attributeValues;\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> void setAttributeValues(\n+    public <T extends AbstractAttributeValue> void setValues(\n             List<T> attributeValues) {\n \n         this.attributeValues = (List<MembershipAttributeValue>) attributeValues;"},{"sha":"45674915640c789915c961c6453f3aa40b5e7652","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RoleAttribute.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleAttribute.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -63,26 +63,26 @@ public <T extends AbstractSchema> void setSchema(T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean addAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean addValue(\n             T attributeValue) {\n \n         return attributeValues.add((RoleAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean removeAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean removeValue(\n             T attributeValue) {\n \n         return attributeValues.remove((RoleAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> List<T> getAttributeValues() {\n+    public <T extends AbstractAttributeValue> List<T> getValues() {\n         return (List<T>) attributeValues;\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> void setAttributeValues(\n+    public <T extends AbstractAttributeValue> void setValues(\n             List<T> attributeValues) {\n \n         this.attributeValues = (List<RoleAttributeValue>) attributeValues;"},{"sha":"b0b7e7e6fdaf30ee36e4bae7465081c4b2ab4c70","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UserAttribute.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserAttribute.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -65,26 +65,26 @@ public <T extends AbstractSchema> void setSchema(T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean addAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean addValue(\n             T attributeValue) {\n \n         return attributeValues.add((UserAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> boolean removeAttributeValue(\n+    public <T extends AbstractAttributeValue> boolean removeValue(\n             T attributeValue) {\n \n         return attributeValues.remove((UserAttributeValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> List<T> getAttributeValues() {\n+    public <T extends AbstractAttributeValue> List<T> getValues() {\n         return (List<T>) attributeValues;\n     }\n \n     @Override\n-    public <T extends AbstractAttributeValue> void setAttributeValues(\n+    public <T extends AbstractAttributeValue> void setValues(\n             List<T> attributeValues) {\n \n         this.attributeValues = (List<UserAttributeValue>) attributeValues;"},{"sha":"c2c7b1c0cbc3db3096b2a5202496c5adfc7a7ac9","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeValueDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -100,7 +100,7 @@ public <T extends AbstractAttributeValue> void delete(Long id,\n     @Override\n     public <T extends AbstractAttributeValue> void delete(T attributeValue) {\n         if (attributeValue.getAttribute() != null) {\n-            attributeValue.getAttribute().removeAttributeValue(attributeValue);\n+            attributeValue.getAttribute().removeValue(attributeValue);\n         }\n \n         entityManager.remove(attributeValue);"},{"sha":"8066c38d60264a0036623abc692201ee37f0cc74","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -45,7 +45,18 @@ public List<TargetResource> findAll() {\n     }\n \n     @Override\n-    public TargetResource save(TargetResource resource) {\n+    public TargetResource save(final TargetResource resource) {\n+        int accountIds = 0;\n+        for (SchemaMapping mapping : resource.getMappings()) {\n+            if (mapping.isAccountid()) {\n+                accountIds++;\n+            }\n+        }\n+        if (accountIds > 1) {\n+            throw new IllegalArgumentException(\"Found '\" + accountIds\n+                    + \"' mappings for account id\");\n+        }\n+\n         return entityManager.merge(resource);\n     }\n "},{"sha":"be04f20baca4004a0cb8d9a97a45bc8d6067eced","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeConfigurationDAOImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -44,12 +44,15 @@ public SyncopeConfiguration find(String name)\n     @Override\n     @Transactional(readOnly = true)\n     public List<SyncopeConfiguration> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e FROM SyncopeConfiguration e\");\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM SyncopeConfiguration e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public SyncopeConfiguration save(SyncopeConfiguration syncopeConfiguration) {\n+    public SyncopeConfiguration save(\n+            final SyncopeConfiguration syncopeConfiguration) {\n+\n         return entityManager.merge(syncopeConfiguration);\n     }\n \n@@ -58,7 +61,7 @@ public void delete(String name) {\n         try {\n             entityManager.remove(find(name));\n         } catch (MissingConfKeyException e) {\n-            LOG.error(\"Could not find \" + name, e);\n+            LOG.error(\"Could not find configuration key '\" + name + \"'\");\n         }\n     }\n }"},{"sha":"62d5135de43ca2f63e053793f7e609873b0bf2d6","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -168,17 +168,17 @@ private Set<String> provision(\n \n         // Resource to be provisioned synchronously\n         final ResourceOperations syncOperations = new ResourceOperations();\n+        syncOperations.setOldAccountId(resourceOperations.getOldAccountId());\n \n         // Resource to be provisioned asynchronously\n         final ResourceOperations asyncOperations = new ResourceOperations();\n-\n-        if (syncResourceNames == null) {\n-            syncResourceNames = Collections.EMPTY_SET;\n-        }\n+        asyncOperations.setOldAccountId(resourceOperations.getOldAccountId());\n \n         for (ResourceOperations.Type type : ResourceOperations.Type.values()) {\n             for (TargetResource resource : resourceOperations.get(type)) {\n-                if (syncResourceNames.contains(resource.getName())) {\n+                if (syncResourceNames != null\n+                        && syncResourceNames.contains(resource.getName())) {\n+\n                     syncOperations.add(type, resource);\n                 } else {\n                     asyncOperations.add(type, resource);\n@@ -204,7 +204,8 @@ private Set<String> provision(\n                             manipulateSyncAttributes(\n                             preparedAttributes.values().iterator().next());\n                     propagate(resource, resOpeType, PropagationMode.SYNC,\n-                            accountId, attributes);\n+                            accountId, syncOperations.getOldAccountId(),\n+                            attributes);\n \n                     provisioned.add(resource.getName());\n                 } catch (Throwable t) {\n@@ -235,7 +236,8 @@ private Set<String> provision(\n                             manipulateAsyncAttributes(\n                             preparedAttributes.values().iterator().next());\n                     propagate(resource, type, PropagationMode.ASYNC,\n-                            accountId, attributes);\n+                            accountId, asyncOperations.getOldAccountId(),\n+                            attributes);\n \n                     provisioned.add(resource.getName());\n                 } catch (Throwable t) {\n@@ -335,7 +337,7 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                     userAttribute = user.getAttribute(schemaName);\n \n                     values = userAttribute != null\n-                            ? userAttribute.getAttributeValues()\n+                            ? userAttribute.getValues()\n                             : Collections.EMPTY_LIST;\n \n                     if (LOG.isDebugEnabled()) {\n@@ -449,7 +451,7 @@ protected Set<Attribute> manipulateAsyncAttributes(\n     private void propagate(TargetResource resource,\n             ResourceOperations.Type resourceOperationType,\n             PropagationMode operationMode,\n-            String accountId, Set<Attribute> attrs)\n+            String accountId, String oldAccountId, Set<Attribute> attrs)\n             throws NoSuchBeanDefinitionException, IllegalStateException {\n \n         ConnectorInstance connectorInstance = resource.getConnector();\n@@ -470,9 +472,8 @@ private void propagate(TargetResource resource,\n             case UPDATE:\n                 Uid userUid = null;\n                 try {\n-                    userUid = connector.resolveUsername(\n-                            ObjectClass.ACCOUNT,\n-                            accountId,\n+                    userUid = connector.resolveUsername(ObjectClass.ACCOUNT,\n+                            oldAccountId == null ? accountId : oldAccountId,\n                             null);\n                 } catch (RuntimeException ignore) {\n                     if (LOG.isDebugEnabled()) {"},{"sha":"f953dc82ada68cdc5ab3829fee635e6bd4e552c9","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":28,"deletions":1,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -28,6 +28,7 @@ public enum Type {\n     private Set<TargetResource> toBeCreated;\n     private Set<TargetResource> toBeUpdated;\n     private Set<TargetResource> toBeDeleted;\n+    private String oldAccountId;\n \n     public ResourceOperations() {\n         toBeCreated = new HashSet<TargetResource>();\n@@ -59,12 +60,15 @@ public final boolean add(final Type type,\n             case CREATE:\n                 result = toBeCreated.add(resource);\n                 break;\n+\n             case UPDATE:\n                 result = toBeUpdated.add(resource);\n                 break;\n+\n             case DELETE:\n                 result = toBeDeleted.add(resource);\n                 break;\n+\n             default:\n         }\n \n@@ -78,12 +82,16 @@ public boolean addAll(Type type, Set<TargetResource> resource) {\n             case CREATE:\n                 result = toBeCreated.addAll(resource);\n                 break;\n+\n             case UPDATE:\n                 result = toBeUpdated.addAll(resource);\n                 break;\n+\n             case DELETE:\n                 result = toBeDeleted.addAll(resource);\n                 break;\n+\n+            default:\n         }\n \n         return result;\n@@ -98,12 +106,15 @@ public final boolean remove(final Type type,\n             case CREATE:\n                 result = toBeCreated.remove(resource);\n                 break;\n+\n             case UPDATE:\n                 result = toBeUpdated.remove(resource);\n                 break;\n+\n             case DELETE:\n                 result = toBeDeleted.remove(resource);\n                 break;\n+\n             default:\n         }\n \n@@ -117,12 +128,15 @@ public final Set<TargetResource> get(final Type type) {\n             case CREATE:\n                 result = toBeCreated;\n                 break;\n+\n             case UPDATE:\n                 result = toBeUpdated;\n                 break;\n+\n             case DELETE:\n                 result = toBeDeleted;\n                 break;\n+\n             default:\n         }\n \n@@ -133,18 +147,22 @@ public final void set(final Type type,\n             final Set<TargetResource> resources) {\n \n         switch (type) {\n+\n             case CREATE:\n                 toBeCreated.clear();\n                 toBeCreated.addAll(resources);\n                 break;\n+\n             case UPDATE:\n                 toBeUpdated.clear();\n                 toBeUpdated.addAll(resources);\n                 break;\n+\n             case DELETE:\n                 toBeDeleted.clear();\n                 toBeDeleted.addAll(resources);\n                 break;\n+\n             default:\n         }\n     }\n@@ -161,10 +179,19 @@ public final boolean isEmpty() {\n                 && toBeUpdated.isEmpty();\n     }\n \n+    public String getOldAccountId() {\n+        return oldAccountId;\n+    }\n+\n+    public void setOldAccountId(final String oldAccountId) {\n+        this.oldAccountId = oldAccountId;\n+    }\n+\n     @Override\n     public String toString() {\n         return \"To Be Created: \" + toBeCreated + \";\"\n                 + \"To Be Updated: \" + toBeUpdated + \";\"\n-                + \"To Be Deleted: \" + toBeDeleted;\n+                + \"To Be Deleted: \" + toBeDeleted + \";\"\n+                + \"Old account Id: \" + oldAccountId;\n     }\n }"},{"sha":"34b6228eca90119c32e94e0ae94fc016a380bef4","filename":"core/src/main/java/org/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -103,10 +103,21 @@ public ConfigurationTO read(HttpServletResponse response,\n             @PathVariable(\"confKey\") String confKey)\n             throws MissingConfKeyException {\n \n-        SyncopeConfiguration syncopeConfiguration =\n-                syncopeConfigurationDAO.find(confKey);\n+        ConfigurationTO result = null;\n+        try {\n+            SyncopeConfiguration syncopeConfiguration =\n+                    syncopeConfigurationDAO.find(confKey);\n+            result = configurationDataBinder.getConfigurationTO(\n+                    syncopeConfiguration);\n+        } catch (MissingConfKeyException e) {\n+            LOG.error(\"Could not find configuration key '\" + confKey\n+                    + \"', returning null\");\n+\n+            result = new ConfigurationTO();\n+            result.setConfKey(confKey);\n+        }\n \n-        return configurationDataBinder.getConfigurationTO(syncopeConfiguration);\n+        return result;\n     }\n \n     @RequestMapping(method = RequestMethod.POST,"},{"sha":"c7aa987a308a9f1a3810da7e584cbd11296077b1","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":29,"deletions":18,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -242,28 +242,37 @@ protected ResourceOperations fill(\n                     attributeToBeRemoved, attributableUtil.getSchemaClass());\n \n             if (schema != null) {\n+                attribute = attributable.getAttribute(schema.getName());\n+                if (attribute == null) {\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"No attribute found for schema \" + schema);\n+                    }\n+                } else {\n+                    attributable.removeAttribute(attribute);\n+\n+                    attributeDAO.delete(attribute.getId(),\n+                            attributableUtil.getAttributeClass());\n+                }\n+\n                 for (SchemaMapping mapping : resourceDAO.getMappings(\n                         schema.getName(),\n                         SchemaType.byClass(\n                         attributableUtil.getSchemaClass()))) {\n \n                     if (mapping.getResource() != null\n                             && resources.contains(mapping.getResource())) {\n+\n                         resourceOperations.add(Type.UPDATE,\n                                 mapping.getResource());\n-                    }\n-                }\n \n-                attribute = attributable.getAttribute(schema.getName());\n-                if (attribute == null) {\n-                    if (LOG.isDebugEnabled()) {\n-                        LOG.debug(\"No attribute found for schema \" + schema);\n-                    }\n-                } else {\n-                    attributable.removeAttribute(attribute);\n+                        if (mapping.isAccountid() && attribute != null\n+                                && !attribute.getValuesAsStrings().isEmpty()) {\n \n-                    attributeDAO.delete(attribute.getId(),\n-                            attributableUtil.getAttributeClass());\n+                            resourceOperations.setOldAccountId(\n+                                    attribute.getValuesAsStrings().\n+                                    iterator().next());\n+                        }\n+                    }\n                 }\n             }\n         }\n@@ -290,6 +299,7 @@ protected ResourceOperations fill(\n \n                     if (mapping.getResource() != null\n                             && resources.contains(mapping.getResource())) {\n+\n                         resourceOperations.add(Type.UPDATE,\n                                 mapping.getResource());\n                     }\n@@ -308,8 +318,9 @@ protected ResourceOperations fill(\n                 valuesToBeRemoved = new HashSet<Long>();\n                 for (String valueToBeRemoved :\n                         attributeMod.getValuesToBeRemoved()) {\n-                    for (AbstractAttributeValue mav :\n-                            attribute.getAttributeValues()) {\n+\n+                    for (AbstractAttributeValue mav : attribute.getValues()) {\n+\n                         if (valueToBeRemoved.equals(mav.getValueAsString())) {\n                             valuesToBeRemoved.add(mav.getId());\n                         }\n@@ -326,7 +337,7 @@ protected ResourceOperations fill(\n                         attributeValue, invalidValues);\n \n                 // if no values are in, the attribute can be safely removed\n-                if (attribute.getAttributeValues().isEmpty()) {\n+                if (attribute.getValues().isEmpty()) {\n                     attributeDAO.delete(attribute);\n                 }\n             }\n@@ -496,7 +507,7 @@ protected AbstractAttributable fill(AbstractAttributable attributable,\n                             attributableUtil, schema, attribute,\n                             attributeValue, invalidValues);\n \n-                    if (!attribute.getAttributeValues().isEmpty()) {\n+                    if (!attribute.getValues().isEmpty()) {\n                         attributable.addAttribute(attribute);\n                         attribute.setOwner(attributable);\n                     }\n@@ -567,8 +578,7 @@ protected AbstractAttributableTO fillTO(\n \n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(attribute.getSchema().getName());\n-            attributeTO.setValues(new HashSet(\n-                    attribute.getAttributeValuesAsStrings()));\n+            attributeTO.setValues(new HashSet(attribute.getValuesAsStrings()));\n             attributeTO.setReadonly(attribute.getSchema().isReadonly());\n \n             abstractAttributableTO.addAttribute(attributeTO);\n@@ -600,7 +610,8 @@ public void checkUniqueness(AbstractAttributable attributable)\n \n         for (AbstractAttribute attribute : attributable.getAttributes()) {\n             for (AbstractAttributeValue attributeValue :\n-                    attribute.getAttributeValues()) {\n+                    attribute.getValues()) {\n+\n                 if (attribute.getSchema().isUniquevalue()\n                         && attributeValueDAO.nonUniqueAttributeValue(\n                         attributeValue)) {"},{"sha":"655c3911b3dcb517cd4d074a3d78dde1f0d731da","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -98,7 +98,7 @@ public <T extends AbstractSchema, K extends AbstractDerivedSchema> T updateSchem\n \n                 attribute = attributeItor.next();\n                 for (Iterator<? extends AbstractAttributeValue> attributeValueItor =\n-                        attribute.getAttributeValues().iterator();\n+                        attribute.getValues().iterator();\n                         attributeValueItor.hasNext()\n                         && !validationExceptionFound;) {\n "},{"sha":"d644fcb49867237748853d611603a6e130521b8f","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":41,"deletions":5,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -29,8 +29,12 @@\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.beans.AbstractAttribute;\n+import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n+import org.syncope.core.persistence.beans.membership.MembershipAttribute;\n+import org.syncope.core.persistence.beans.membership.MembershipDerivedAttribute;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n@@ -132,6 +136,14 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n         ResourceOperations resourceOperations =\n                 fill(user, userMod, AttributableUtil.USER, scce);\n \n+        // store the role ids of membership required to be added\n+        Set<Long> membershipToBeAddedRoleIds = new HashSet<Long>();\n+        for (MembershipMod membershipToBeAdded :\n+                userMod.getMembershipsToBeAdded()) {\n+\n+            membershipToBeAddedRoleIds.add(membershipToBeAdded.getRole());\n+        }\n+\n         // memberships to be removed\n         Membership membership = null;\n         for (Long membershipToBeRemovedId :\n@@ -153,8 +165,12 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                 for (TargetResource resource :\n                         membership.getSyncopeRole().getTargetResources()) {\n \n-                    resourceOperations.add(ResourceOperations.Type.DELETE,\n-                            resource);\n+                    if (!membershipToBeAddedRoleIds.contains(\n+                            membership.getSyncopeRole().getId())) {\n+\n+                        resourceOperations.add(ResourceOperations.Type.DELETE,\n+                                resource);\n+                    }\n                 }\n \n                 // In order to make the removeMembership() below to work,\n@@ -163,9 +179,29 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                 // some modifications compared to the one stored in the DB\n                 membership = user.getMembership(\n                         membership.getSyncopeRole().getId());\n-                user.removeMembership(membership);\n+                if (membershipToBeAddedRoleIds.contains(\n+                        membership.getSyncopeRole().getId())) {\n+\n+                    for (AbstractAttribute attribute :\n+                            membership.getAttributes()) {\n \n-                membershipDAO.delete(membershipToBeRemovedId);\n+                        attributeDAO.delete(attribute.getId(),\n+                                MembershipAttribute.class);\n+                    }\n+                    membership.getAttributes().clear();\n+\n+                    for (AbstractDerivedAttribute derivedAttribute :\n+                            membership.getDerivedAttributes()) {\n+\n+                        derivedAttributeDAO.delete(derivedAttribute.getId(),\n+                                MembershipDerivedAttribute.class);\n+                    }\n+                    membership.getDerivedAttributes().clear();\n+                } else {\n+                    user.removeMembership(membership);\n+\n+                    membershipDAO.delete(membershipToBeRemovedId);\n+                }\n             }\n         }\n \n@@ -186,7 +222,7 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                             + membershipMod.getRole());\n                 }\n             } else {\n-                membership = membershipDAO.find(user, role);\n+                membership = user.getMembership(role.getId());\n                 if (membership == null) {\n                     membership = new Membership();\n                     membership.setSyncopeRole(role);"},{"sha":"ce54898fa7bf4b7b25604ed90926aeb7b934b2cc","filename":"core/src/main/java/org/syncope/core/workflow/StoreDate.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreDate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreDate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreDate.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -33,8 +33,8 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         date.setDateValue(new Date());\n         date.setAttribute(attribute);\n         if (!attribute.getSchema().isMultivalue()) {\n-            attribute.getAttributeValues().clear();\n+            attribute.getValues().clear();\n         }\n-        attribute.addAttributeValue(date);\n+        attribute.addValue(date);\n     }\n }"},{"sha":"36656bdb4b6dfa4b3d55b958bdbb4a387abf93fb","filename":"core/src/main/java/org/syncope/core/workflow/StoreText.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreText.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreText.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FStoreText.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -38,8 +38,8 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         textAttributeValue.setStringValue(text);\n         textAttributeValue.setAttribute(attribute);\n         if (!attribute.getSchema().isMultivalue()) {\n-            attribute.getAttributeValues().clear();\n+            attribute.getValues().clear();\n         }\n-        attribute.addAttributeValue(textAttributeValue);\n+        attribute.addValue(textAttributeValue);\n     }\n }"},{"sha":"b637efc950df203f07df42cd635d00fd1aceb319","filename":"core/src/test/java/org/syncope/core/test/persistence/DerivedAttributeDAOTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FDerivedAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FDerivedAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FDerivedAttributeDAOTest.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -76,10 +76,10 @@ public final void save() throws ClassNotFoundException {\n \n         UserAttributeValue firstnameAttribute =\n                 (UserAttributeValue) owner.getAttribute(\n-                \"firstname\").getAttributeValues().iterator().next();\n+                \"firstname\").getValues().iterator().next();\n         UserAttributeValue surnameAttribute =\n                 (UserAttributeValue) owner.getAttribute(\n-                \"surname\").getAttributeValues().iterator().next();\n+                \"surname\").getValues().iterator().next();\n         \n         assertEquals(surnameAttribute.getValue() + \", \"\n                 + firstnameAttribute.getValue(),"},{"sha":"23a808004e2f5168338405ec2c91ff1c599cf012","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/AttributeTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FAttributeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FAttributeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FAttributeTest.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -48,7 +48,7 @@ public final void deleteAttributeValue() {\n         UserAttributeValue value =\n                 attributeValueDAO.find(20L, UserAttributeValue.class);\n         int attributeValueNumber =\n-                value.getAttribute().getAttributeValues().size();\n+                value.getAttribute().getValues().size();\n \n         attributeValueDAO.delete(20L, UserAttributeValue.class);\n \n@@ -57,7 +57,7 @@ public final void deleteAttributeValue() {\n         assertNull(attributeValueDAO.find(20L, UserAttributeValue.class));\n \n         UserAttribute attribute = attributeDAO.find(200L, UserAttribute.class);\n-        assertEquals(attribute.getAttributeValues().size(),\n+        assertEquals(attribute.getValues().size(),\n                 attributeValueNumber - 1);\n     }\n }"},{"sha":"8b2fd9903dc14a441e18aac0cf2315907ba19d98","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -291,8 +291,13 @@ public final void search() {\n     @Test\n     public final void update() {\n         UserTO userTO = getSampleTO(\"g.h@t.com\");\n+\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n+        AttributeTO membershipAttr = new AttributeTO();\n+        membershipAttr.setSchema(\"subscriptionDate\");\n+        membershipAttr.addValue(\"2009-08-18T16:33:12.203+0200\");\n+        membershipTO.addAttribute(membershipAttr);\n         userTO.addMembership(membershipTO);\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n@@ -301,14 +306,14 @@ public final void update() {\n                 userTO, UserTO.class);\n \n         assertTrue(userTO.getDerivedAttributes().isEmpty());\n-        assertTrue(userTO.getMemberships().size() == 1);\n+        assertEquals(1, userTO.getMemberships().size());\n \n         AttributeMod attributeMod = new AttributeMod();\n         attributeMod.setSchema(\"subscriptionDate\");\n         attributeMod.addValueToBeAdded(\"2010-08-18T16:33:12.203+0200\");\n \n         MembershipMod membershipMod = new MembershipMod();\n-        membershipMod.setRole(7L);\n+        membershipMod.setRole(8L);\n         membershipMod.addAttributeToBeUpdated(attributeMod);\n \n         attributeMod = new AttributeMod();\n@@ -329,10 +334,10 @@ public final void update() {\n                 userMod, UserTO.class);\n \n         assertEquals(\"newPassword\", userTO.getPassword());\n-        assertTrue(userTO.getMemberships().size() == 1);\n+        assertEquals(1, userTO.getMemberships().size());\n         assertEquals(1, userTO.getMemberships().iterator().next().\n                 getAttributes().size());\n-        assertTrue(userTO.getDerivedAttributes().size() == 1);\n+        assertEquals(1, userTO.getDerivedAttributes().size());\n         boolean attributeFound = false;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n             if (\"userId\".equals(attributeTO.getSchema())) {"},{"sha":"4c7d709dce82d330784d51911dc26bd04a950b30","filename":"identityconnectors/bundles/staticws/staticwebservice/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/WebServiceConnector.java","status":"modified","additions":73,"deletions":72,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc424fa38bbad819ebf881f5450f7ddfeb0091da/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc424fa38bbad819ebf881f5450f7ddfeb0091da/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java?ref=bc424fa38bbad819ebf881f5450f7ddfeb0091da","patch":"@@ -72,25 +72,21 @@ public class WebServiceConnector implements\n     /**\n      * Setup logging for the {@link WebServiceConnector}.\n      */\n-    private static final Logger log =\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(WebServiceConnector.class);\n-\n     /**\n      * Place holder for the Connection created in the init method.\n      */\n     private WebServiceConnection connection;\n-\n     /**\n      * Place holder for the {@link Configuration} passed into the init() method\n      * {@link WebServiceConnector#init}.\n      */\n     private WebServiceConfiguration config;\n-\n     /**\n      * Schema.\n      */\n     private Schema schema = null;\n-\n     /**\n      * Web Service Attributes.\n      */\n@@ -112,8 +108,8 @@ public Configuration getConfiguration() {\n     @Override\n     public void init(Configuration cfg) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Connector initialization\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Connector initialization\");\n         }\n \n         this.config = (WebServiceConfiguration) cfg;\n@@ -128,8 +124,8 @@ public void init(Configuration cfg) {\n     @Override\n     public void dispose() {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Dispose connector resources\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Dispose connector resources\");\n         }\n \n         config = null;\n@@ -149,8 +145,8 @@ public void dispose() {\n     @Override\n     public void checkAlive() {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Connection test\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Connection test\");\n         }\n \n         connection.test();\n@@ -166,8 +162,8 @@ public Uid authenticate(\n             final GuardedString password,\n             final OperationOptions options) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"User uthentication\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"User uthentication\");\n         }\n \n         // check objectclass\n@@ -194,8 +190,8 @@ public Uid authenticate(\n                     provisioning.authenticate(username, password.toString());\n \n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Authentication failed\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Authentication failed\", e);\n             }\n \n             throw new InvalidCredentialException(\"Authentication failed\");\n@@ -213,8 +209,8 @@ public Uid create(\n             final Set<Attribute> attrs,\n             final OperationOptions options) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Account creation\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Account creation\");\n         }\n \n         // check objectclass\n@@ -240,15 +236,15 @@ public Uid create(\n         }\n         final String accountName = name.getNameValue();\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Account to be created: \" + accountName);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Account to be created: \" + accountName);\n         }\n \n         // check schema\n         if (schema == null || wsAttributes == null) {\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Reload schema\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Reload schema\");\n             }\n \n             schema();\n@@ -275,8 +271,8 @@ public Uid create(\n         for (Attribute attr : attrs) {\n             attribute = attr.getName();\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Attribute name: \" + attribute);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Attribute name: \" + attribute);\n             }\n \n             wsAttributeValue =\n@@ -290,7 +286,8 @@ public Uid create(\n                         \"Missing required parameter \" + attr.getName());\n             }\n \n-            if (value instanceof GuardedString || value instanceof GuardedByteArray) {\n+            if (value instanceof GuardedString\n+                    || value instanceof GuardedByteArray) {\n \n                 wsAttributeValue.setValue(value.toString());\n             } else {\n@@ -310,9 +307,10 @@ public Uid create(\n                     \"Missing required parameters: \" + mandatoryAttributes);\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\n-                    \"\\nUser \" + accountName + \"\\n\\tattributes: \" + attributes.size());\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\n+                    \"\\nUser \" + accountName\n+                    + \"\\n\\tattributes: \" + attributes.size());\n         }\n \n         try {\n@@ -321,8 +319,8 @@ public Uid create(\n             provisioning.create(attributes);\n \n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Creation failed\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Creation failed\", e);\n             }\n         }\n \n@@ -339,8 +337,8 @@ public void delete(\n             final Uid uid,\n             final OperationOptions options) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Account deletion\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Account deletion\");\n         }\n \n         // check objectclass\n@@ -359,8 +357,8 @@ public void delete(\n         try {\n             provisioning.delete(accountName);\n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Deletion failed\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Deletion failed\", e);\n             }\n         }\n     }\n@@ -371,8 +369,8 @@ public void delete(\n     @Override\n     public Schema schema() {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Schema retrieving\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Schema retrieving\");\n         }\n \n         Provisioning provisioning = connection.getProvisioning();\n@@ -395,9 +393,13 @@ public Schema schema() {\n \n             wsAttributes.put(getAttributeName(attribute), attribute);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\n-                        \"\\nAttribute: \" + \"\\n\\tName: \" + attribute.getName() + \"\\n\\tType: \" + attribute.getType() + \"\\n\\tIsKey: \" + attribute.isKey() + \"\\n\\tIsPassword: \" + attribute.isPassword() + \"\\n\\tIsNullable: \" + attribute.isNullable());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\n+                        \"\\nAttribute: \" + \"\\n\\tName: \" + attribute.getName()\n+                        + \"\\n\\tType: \" + attribute.getType()\n+                        + \"\\n\\tIsKey: \" + attribute.isKey()\n+                        + \"\\n\\tIsPassword: \" + attribute.isPassword()\n+                        + \"\\n\\tIsNullable: \" + attribute.isNullable());\n             }\n \n             try {\n@@ -406,8 +408,8 @@ public Schema schema() {\n \n             } catch (IllegalArgumentException ila) {\n \n-                if (log.isErrorEnabled()) {\n-                    log.error(\"Invalid attribute \" + attribute.getName(), ila);\n+                if (LOG.isErrorEnabled()) {\n+                    LOG.error(\"Invalid attribute \" + attribute.getName(), ila);\n                 }\n             }\n \n@@ -434,8 +436,8 @@ public Schema schema() {\n          */\n         if (!provisioning.isAuthenticationSupported()) {\n \n-            if (log.isDebugEnabled()) {\n-                log.info(\"Authentication is not supported.\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.info(\"Authentication is not supported.\");\n             }\n \n             schemaBld.removeSupportedObjectClass(\n@@ -444,8 +446,8 @@ public Schema schema() {\n \n         if (!provisioning.isSyncSupported()) {\n \n-            if (log.isDebugEnabled()) {\n-                log.info(\"Synchronization is not supported.\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.info(\"Synchronization is not supported.\");\n             }\n \n             schemaBld.removeSupportedObjectClass(\n@@ -482,8 +484,8 @@ public void executeQuery(\n             ResultsHandler handler,\n             OperationOptions options) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Execute query\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Execute query\");\n         }\n \n         // check objectclass\n@@ -506,7 +508,9 @@ public void executeQuery(\n \n             List<WSUser> resultSet = provisioning.query(query);\n \n-            if (resultSet == null) return;\n+            if (resultSet == null) {\n+                return;\n+            }\n \n             Iterator i = resultSet.iterator();\n \n@@ -516,15 +520,15 @@ public void executeQuery(\n             while (i.hasNext() && handle) {\n                 user = (WSUser) i.next();\n \n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Found user: \" + user.getAccountid());\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Found user: \" + user.getAccountid());\n                 }\n \n                 handle = handler.handle(\n                         buildConnectorObject(user.getAttributes()).build());\n \n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Handle:\" + handle);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Handle:\" + handle);\n                 }\n             }\n \n@@ -573,8 +577,8 @@ public Uid update(ObjectClass objclass,\n         // check schema\n         if (schema == null || wsAttributes == null) {\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Reload schema\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Reload schema\");\n             }\n \n             schema();\n@@ -592,8 +596,8 @@ public Uid update(ObjectClass objclass,\n         for (Attribute attr : replaceAttributes) {\n             attribute = attr.getName();\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Attribute name: \" + attribute);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Attribute name: \" + attribute);\n             }\n \n             wsAttributeValue =\n@@ -607,7 +611,8 @@ public Uid update(ObjectClass objclass,\n                         \"Missing required parameter\");\n             }\n \n-            if (value instanceof GuardedString || value instanceof GuardedByteArray) {\n+            if (value instanceof GuardedString\n+                    || value instanceof GuardedByteArray) {\n \n                 wsAttributeValue.setValue(value.toString());\n             } else {\n@@ -625,8 +630,8 @@ public Uid update(ObjectClass objclass,\n             uuid = new Uid(provisioning.update(uid.getUidValue(), attributes));\n \n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Creation failed\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Creation failed\", e);\n             }\n         }\n \n@@ -676,8 +681,8 @@ public void sync(\n             }\n \n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Synchronization failed\");\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Synchronization failed\");\n             }\n \n             throw new IllegalStateException(e);\n@@ -708,8 +713,8 @@ public SyncToken getLatestSyncToken(ObjectClass objectClass) {\n             token = new SyncToken(provisioning.getLatestChangeNumber());\n \n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Resolve username failed\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Resolve username failed\", e);\n             }\n         }\n \n@@ -737,20 +742,16 @@ public Uid resolveUsername(ObjectClass objectClass, String username,\n         }\n \n         Uid uuid = null;\n-\n         try {\n-\n             String uid = provisioning.resolve(username);\n             uuid = new Uid(uid);\n-\n         } catch (ProvisioningException e) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Resolve username failed\", e);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Resolve username failed\", e);\n             }\n         }\n \n         return uuid;\n-\n     }\n \n     private AttributeInfo buildAttribute(WSAttribute attribute) {\n@@ -780,16 +781,16 @@ private AttributeInfo buildAttribute(WSAttribute attribute) {\n \n         } catch (ClassNotFoundException e) {\n \n-            if (log.isErrorEnabled()) {\n-                log.error(\"Invalid data type\", e);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Invalid data type\", e);\n             }\n \n             throw new IllegalArgumentException(e);\n \n         } catch (Throwable t) {\n \n-            if (log.isErrorEnabled()) {\n-                log.error(\"Unexpected exception\", t);\n+            if (LOG.isErrorEnabled()) {\n+                LOG.error(\"Unexpected exception\", t);\n             }\n \n             throw new IllegalArgumentException(t);"}]}