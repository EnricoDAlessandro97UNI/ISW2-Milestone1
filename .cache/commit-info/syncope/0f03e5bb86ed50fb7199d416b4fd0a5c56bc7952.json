{"sha":"0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmMDNlNWJiODZlZDUwZmI3MTk5ZDQxNmI0ZmQwYTVjNTZiYzc5NTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-05T17:00:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-05T17:00:36Z"},"message":"[SYNCOPE-331] Refactored ResourceController#getConnectorObject for resolving - rather than requiring - the account id value\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1452895 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6f27cce46a0c256ef0f303a1ee56edcb05315b42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6f27cce46a0c256ef0f303a1ee56edcb05315b42"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"621b948de0f62a2f55b7d8275ebf967931146d6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/621b948de0f62a2f55b7d8275ebf967931146d6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/621b948de0f62a2f55b7d8275ebf967931146d6a"}],"stats":{"total":305,"additions":118,"deletions":187},"files":[{"sha":"f67231ca1c9975a971840c28f10cd692e124023e","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ResourceServiceProxy.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -54,9 +54,9 @@ public Response create(final ResourceTO resourceTO) {\n                     + \"resource/read/\"\r\n                     + URLEncoder.encode(resource.getName(), SyncopeConstants.DEFAULT_ENCODING)\r\n                     + \".json\");\r\n-            return Response.created(location)\r\n-                    .header(SyncopeConstants.REST_HEADER_ID, resource.getName())\r\n-                    .build();\r\n+            return Response.created(location).\r\n+                    header(SyncopeConstants.REST_HEADER_ID, resource.getName()).\r\n+                    build();\r\n         } catch (UnsupportedEncodingException e) {\r\n             throw new InternalServerErrorException(e);\r\n         }\r\n@@ -93,23 +93,21 @@ public List<ResourceTO> list() {\n \r\n     @Override\r\n     public List<ResourceTO> list(final Long connInstanceId) {\r\n-        if (connInstanceId == null) {\r\n-            return list();\r\n-        }\r\n-\r\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"resource/list.json?connInstanceId={connId}\",\r\n+        return connInstanceId == null\r\n+                ? list()\r\n+                : Arrays.asList(getRestTemplate().getForObject(baseUrl + \"resource/list.json?connInstanceId={connId}\",\r\n                 ResourceTO[].class, connInstanceId));\r\n     }\r\n \r\n     @Override\r\n-    public ConnObjectTO getConnector(final String resourceName, final AttributableType type, final String objectId) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"resource/{resourceName}/read/{type}/{objectId}.json\",\r\n-                ConnObjectTO.class, resourceName, type.name(), objectId);\r\n+    public ConnObjectTO getConnectorObject(final String resourceName, final AttributableType type, final Long id) {\r\n+        return getRestTemplate().getForObject(baseUrl + \"resource/{resourceName}/read/{type}/{id}.json\",\r\n+                ConnObjectTO.class, resourceName, type.name(), id);\r\n     }\r\n \r\n     @Override\r\n     public boolean check(final ResourceTO resourceTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"resource/check.json\", resourceTO, Boolean.class)\r\n-                .booleanValue();\r\n+        return getRestTemplate().postForObject(baseUrl + \"resource/check.json\", resourceTO, Boolean.class).\r\n+                booleanValue();\r\n     }\r\n }\r"},{"sha":"ca52d3588eaa09abc1d1abcfa564d72a718fb7ab","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -60,15 +60,15 @@ public interface ResourceService {\n     void delete(@PathParam(\"resourceName\") String resourceName);\r\n \r\n     /**\r\n-     * @param resourceName Name of resource to get connector from\r\n-     * @param type\r\n-     * @param objectId\r\n-     * @return Returns connector for matching parameters\r\n+     * @param resourceName Name of resource to read connector object from\r\n+     * @param type user / role\r\n+     * @param id user id / role id\r\n+     * @return connector object from the external resource, for the given type and id\r\n      */\r\n     @GET\r\n-    @Path(\"{resourceName}/{type}/{objectId}\")\r\n-    ConnObjectTO getConnector(@PathParam(\"resourceName\") String resourceName,\r\n-            @PathParam(\"type\") AttributableType type, @PathParam(\"objectId\") String objectId);\r\n+    @Path(\"{resourceName}/{type}/{id}\")\r\n+    ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\r\n+            @PathParam(\"type\") AttributableType type, @PathParam(\"id\") Long id);\r\n \r\n     /**\r\n      * @return Returns PropagationActionsClasses\r"},{"sha":"312ddcd9748813fa4d5fc8f6cad1c04fed333e7e","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":3,"deletions":93,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.commons;\n \n import java.io.Serializable;\n-import java.util.AbstractMap;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -29,16 +28,9 @@\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.to.MappingItemTO;\n-import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n-import org.apache.syncope.common.to.ResourceTO;\n-import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.console.pages.panels.StatusPanel;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n-import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -66,79 +58,21 @@ public boolean isActive() {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(StatusUtils.class);\n \n-    private final ResourceRestClient resourceRestClient;\n-\n     private final AbstractAttributableRestClient restClient;\n \n-    public StatusUtils(final ResourceRestClient resourceRestClient, final AbstractAttributableRestClient restClient) {\n-        this.resourceRestClient = resourceRestClient;\n+    public StatusUtils(final AbstractAttributableRestClient restClient) {\n         this.restClient = restClient;\n     }\n \n     public List<StatusBean> getRemoteStatuses(final AbstractAttributableTO attributable) {\n         final List<StatusBean> statuses = new ArrayList<StatusBean>();\n \n         for (String resouceName : attributable.getResources()) {\n-            final ResourceTO resource = resourceRestClient.read(resouceName);\n-\n-            String objectId = null;\n-\n-            final Map.Entry<IntMappingType, String> accountId = getAccountId(resource, attributable);\n-            switch (accountId.getKey()) {\n-\n-                case UserId:\n-                case RoleId:\n-                    objectId = String.valueOf(attributable.getId());\n-                    break;\n-\n-                case Username:\n-                    if (attributable instanceof UserTO) {\n-                        objectId = ((UserTO) attributable).getUsername();\n-                    }\n-                    break;\n-\n-                case RoleName:\n-                    if (attributable instanceof RoleTO) {\n-                        objectId = ((RoleTO) attributable).getName();\n-                    }\n-                    break;\n-\n-                case UserSchema:\n-                case RoleSchema:\n-                    AttributeTO attributeTO = attributable.getAttributeMap().get(accountId.getValue());\n-                    objectId = attributeTO != null && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0)\n-                            : null;\n-                    break;\n-\n-                case UserDerivedSchema:\n-                case RoleDerivedSchema:\n-                    attributeTO = attributable.getDerivedAttributeMap().get(accountId.getValue());\n-                    objectId = attributeTO != null && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0)\n-                            : null;\n-                    break;\n-\n-                case UserVirtualSchema:\n-                case RoleVirtualSchema:\n-                    attributeTO = attributable.getVirtualAttributeMap().get(accountId.getValue());\n-                    objectId = attributeTO != null && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0)\n-                            : null;\n-                    break;\n-\n-                default:\n-            }\n-\n             ConnObjectTO objectTO = null;\n-\n             try {\n-                objectTO = restClient.getRemoteObject(resouceName, objectId);\n+                objectTO = restClient.getConnectorObject(resouceName, attributable.getId());\n             } catch (Exception e) {\n-                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", objectId, resouceName);\n+                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributable.getId(), resouceName);\n             }\n \n             final StatusBean statusBean = getRemoteStatus(objectTO);\n@@ -150,7 +84,6 @@ public List<StatusBean> getRemoteStatuses(final AbstractAttributableTO attributa\n     }\n \n     public StatusBean getRemoteStatus(final ConnObjectTO objectTO) {\n-\n         final StatusBean statusBean = new StatusBean();\n \n         if (objectTO != null) {\n@@ -197,29 +130,6 @@ private String getAccountLink(final ConnObjectTO objectTO) {\n                 : null;\n     }\n \n-    private Map.Entry<IntMappingType, String> getAccountId(final ResourceTO resource,\n-            final AbstractAttributableTO attributable) {\n-\n-        Map.Entry<IntMappingType, String> accountId = null;\n-\n-        MappingTO mapping = attributable instanceof UserTO ? resource.getUmapping() : resource.getRmapping();\n-        IntMappingType idType = attributable instanceof UserTO ? IntMappingType.UserId : IntMappingType.RoleId;\n-\n-        if (mapping != null) {\n-            for (MappingItemTO item : mapping.getItems()) {\n-                if (item.isAccountid()) {\n-                    accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(\n-                            item.getIntMappingType(), item.getIntAttrName());\n-                }\n-            }\n-        }\n-        if (accountId == null) {\n-            accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(idType, null);\n-        }\n-\n-        return accountId;\n-    }\n-\n     public static PropagationRequestTO buildPropagationRequestTO(final Collection<StatusBean> statuses) {\n         return buildPropagationRequestTO(statuses, null);\n     }"},{"sha":"a2b0edcd11be71fa3e776c873d78965aae213d62","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.console.commons.StatusUtils;\n-import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -60,9 +59,6 @@ public class ResultStatusModalPage extends BaseModalPage {\n      */\n     private static final long serialVersionUID = 2646115294319713723L;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n     @SpringBean\n     private UserRestClient userRestClient;\n \n@@ -87,7 +83,7 @@ public ResultStatusModalPage(final ModalWindow window, final UserModalPage.Mode\n \n         super();\n         this.attributable = attributable;\n-        statusUtils = new StatusUtils(resourceRestClient, userRestClient);\n+        statusUtils = new StatusUtils(this.userRestClient);\n \n         final BaseModalPage page = this;\n "},{"sha":"7c7637a6db38e68be5d88855f13984751fef7539","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.console.commons.StatusUtils;\n import org.apache.syncope.console.commons.StatusUtils.Status;\n import org.apache.syncope.console.markup.html.list.AltListView;\n-import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.Component;\n@@ -60,9 +59,6 @@ public class StatusPanel extends Panel {\n \n     private static final long serialVersionUID = -4064294905566247728L;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n     @SpringBean\n     private UserRestClient userRestClient;\n \n@@ -81,8 +77,7 @@ public <T extends AbstractAttributableTO> StatusPanel(final String id, final Abs\n             final List<StatusBean> selectedResources) {\n \n         super(id);\n-        statusUtils = new StatusUtils(resourceRestClient,\n-                (attributable instanceof UserTO ? userRestClient : roleRestClient));\n+        statusUtils = new StatusUtils((attributable instanceof UserTO ? userRestClient : roleRestClient));\n \n         final List<StatusBean> statusBeans = new ArrayList<StatusBean>();\n "},{"sha":"51ea2008ea6149c1494a59b1784e5100c6cc2a20","filename":"console/src/main/java/org/apache/syncope/console/rest/AbstractAttributableRestClient.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -34,9 +34,10 @@ public abstract class AbstractAttributableRestClient extends BaseRestClient {\n \n     public abstract Integer searchCount(NodeCond searchCond) throws InvalidSearchConditionException;\n \n-    public abstract List<? extends AbstractAttributableTO> search(NodeCond searchCond, int page, int size) throws InvalidSearchConditionException;\n+    public abstract List<? extends AbstractAttributableTO> search(NodeCond searchCond, int page, int size)\n+            throws InvalidSearchConditionException;\n \n-    public abstract ConnObjectTO getRemoteObject(String resourceName, String objectId);\n+    public abstract ConnObjectTO getConnectorObject(String resourceName, Long id);\n \n     public abstract AbstractAttributableTO delete(Long id);\n }"},{"sha":"e6c7ba4f009a40ce65b249591c73cfcb36657206","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -60,13 +60,15 @@ public Integer searchCount(final NodeCond searchCond) throws InvalidSearchCondit\n     }\n \n     @Override\n-    public List<RoleTO> search(final NodeCond searchCond, final int page, final int size) throws InvalidSearchConditionException {\n+    public List<RoleTO> search(final NodeCond searchCond, final int page, final int size)\n+            throws InvalidSearchConditionException {\n+\n         return getService(RoleService.class).search(searchCond, page, size);\n     }\n \n     @Override\n-    public ConnObjectTO getRemoteObject(final String resourceName, final String objectId) {\n-        return getService(ResourceService.class).getConnector(resourceName, AttributableType.ROLE, objectId);\n+    public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n+        return getService(ResourceService.class).getConnectorObject(resourceName, AttributableType.ROLE, id);\n     }\n \n     public RoleTO create(final RoleTO roleTO) {"},{"sha":"c07fa615a3f801de5485e8b6dfb03de2c71257ab","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -102,13 +102,15 @@ public Integer searchCount(final NodeCond searchCond) throws InvalidSearchCondit\n     }\n \n     @Override\n-    public List<UserTO> search(final NodeCond searchCond, final int page, final int size) throws InvalidSearchConditionException {\n+    public List<UserTO> search(final NodeCond searchCond, final int page, final int size)\n+            throws InvalidSearchConditionException {\n+\n         return getService(UserService.class).search(searchCond, page, size);\n     }\n \n     @Override\n-    public ConnObjectTO getRemoteObject(final String resourceName, final String objectId) {\n-        return getService(ResourceService.class).getConnector(resourceName, AttributableType.USER, objectId);\n+    public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n+        return getService(ResourceService.class).getConnectorObject(resourceName, AttributableType.USER, id);\n     }\n \n     public UserTO suspend(final long userId, final List<StatusBean> statuses) {"},{"sha":"07ea9e14b84d3cb95a27312a2a0400edfa1ea14a","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -97,6 +97,10 @@ under the License.\n     <action id=\"delete\">\n       <entitlement>RESOURCE_DELETE</entitlement>\n     </action>\n+\n+    <action id=\"getConnectorObject\">\n+      <entitlement>RESOURCE_GETCONNECTOROBJECT</entitlement>\n+    </action>\n   </page>\n \n   <page id=\"Reports\">"},{"sha":"9bb47156e484a5b158cf27cdb178adbdb976dad1","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":42,"deletions":12,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -37,15 +37,19 @@\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.Connector;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.core.util.MappingUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -77,6 +81,12 @@ public class ResourceController extends AbstractController {\n     @Autowired\n     private ConnInstanceDAO connInstanceDAO;\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Autowired\n     private ResourceDataBinder binder;\n \n@@ -205,29 +215,48 @@ public List<ResourceTO> list(@RequestParam(required = false, value = \"connInstan\n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('RESOURCE_GETOBJECT')\")\n+    @PreAuthorize(\"hasRole('RESOURCE_GETCONNECTOROBJECT')\")\n     @Transactional(readOnly = true)\n-    @RequestMapping(method = RequestMethod.GET, value = \"/{resourceName}/read/{type}/{objectId}\")\n-    public ConnObjectTO getObject(@PathVariable(\"resourceName\") final String resourceName,\n-            @PathVariable(\"type\") final AttributableType type, @PathVariable(\"objectId\") final String objectId) {\n+    @RequestMapping(method = RequestMethod.GET, value = \"/{resourceName}/read/{type}/{id}\")\n+    public ConnObjectTO getConnectorObject(@PathVariable(\"resourceName\") final String resourceName,\n+            @PathVariable(\"type\") final AttributableType type, @PathVariable(\"id\") final Long id) {\n \n         ExternalResource resource = resourceDAO.find(resourceName);\n         if (resource == null) {\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n         }\n \n-        if (AttributableType.MEMBERSHIP == type) {\n-            throw new IllegalArgumentException(\"getObject() not supported for MEMBERSHIP\");\n+        AbstractAttributable attributable = null;\n+        switch (type) {\n+            case USER:\n+                attributable = userDAO.find(id);\n+                break;\n+\n+            case ROLE:\n+                attributable = roleDAO.find(id);\n+                break;\n+\n+            case MEMBERSHIP:\n+            default:\n+                throw new IllegalArgumentException(\"Not supported for MEMBERSHIP\");\n+        }\n+        if (attributable == null) {\n+            throw new NotFoundException(type + \" '\" + id + \"'\");\n         }\n-        AttributableUtil attrUtil = AttributableUtil.getInstance(type);\n-        ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n \n-        final Connector connector = connFactory.getConnector(resource);\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(type);\n+\n+        final String accountIdValue =\n+                MappingUtil.getAccountIdValue(attributable, resource, attrUtil.getAccountIdItem(resource));\n \n-        final ConnectorObject connectorObject = connector.getObject(objectClass, new Uid(objectId),\n+        final ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n+\n+        final Connector connector = connFactory.getConnector(resource);\n+        final ConnectorObject connectorObject = connector.getObject(objectClass, new Uid(accountIdValue),\n                 connector.getOperationOptions(attrUtil.getMappingItems(resource, MappingPurpose.BOTH)));\n         if (connectorObject == null) {\n-            throw new NotFoundException(\"Object \" + objectId + \" not found on resource \" + resourceName);\n+            throw new NotFoundException(\"Object \" + accountIdValue + \" with class \" + objectClass\n+                    + \"not found on resource \" + resourceName);\n         }\n \n         final Set<Attribute> attributes = connectorObject.getAttributes();\n@@ -239,7 +268,8 @@ public ConnObjectTO getObject(@PathVariable(\"resourceName\") final String resourc\n         }\n \n         auditManager.audit(Category.resource, ResourceSubCategory.getObject, Result.success,\n-                \"Successfully read object \" + objectId + \" from resource \" + resourceName);\n+                \"Successfully read object \" + accountIdValue + \" with class \" + objectClass\n+                + \" from resource \" + resourceName);\n \n         return connObjectUtil.getConnObjectTO(connectorObject);\n     }"},{"sha":"9e416289d539db2c634034f0e0348f1230a6d847","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -87,8 +87,8 @@ public List<ResourceTO> list(final Long connInstanceId) {\n     }\r\n \r\n     @Override\r\n-    public ConnObjectTO getConnector(final String resourceName, final AttributableType type, final String objectId) {\r\n-        return resourceController.getObject(resourceName, type, objectId);\r\n+    public ConnObjectTO getConnectorObject(final String resourceName, final AttributableType type, final Long id) {\r\n+        return resourceController.getConnectorObject(resourceName, type, id);\r\n     }\r\n \r\n     @Override\r"},{"sha":"1a2f6ed72a036f34340eb1c418319587df4ae91f","filename":"core/src/main/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -49,7 +49,7 @@ under the License.\n   <Entitlement name=\"RESOURCE_READ\"/>\n   <Entitlement name=\"RESOURCE_UPDATE\"/>\n   <Entitlement name=\"RESOURCE_DELETE\"/>\n-  <Entitlement name=\"RESOURCE_GETOBJECT\"/>\n+  <Entitlement name=\"RESOURCE_GETCONNECTOROBJECT\"/>\n   <Entitlement name=\"CONNECTOR_LIST\"/>\n   <Entitlement name=\"CONNECTOR_CREATE\"/>\n   <Entitlement name=\"CONNECTOR_READ\"/>"},{"sha":"22335297c89fdfa05a392a745877e724fed61f01","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -74,6 +74,10 @@ private RoleTO buildRoleTO(final String name) {\n         return roleTO;\n     }\n \n+    private ConnObjectTO readConnectorObject(final String resourceName, final Long roleId) {\n+        return resourceService.getConnectorObject(resourceName, AttributableType.ROLE, roleId);\n+    }\n+\n     @Test\n     public void createWithException() {\n         RoleTO newRoleTO = new RoleTO();\n@@ -109,8 +113,7 @@ public void create() {\n \n         assertTrue(roleTO.getResources().contains(\"resource-ldap\"));\n \n-        ConnObjectTO connObjectTO = resourceService.getConnector(\"resource-ldap\", AttributableType.ROLE,\n-                roleTO.getName());\n+        ConnObjectTO connObjectTO = readConnectorObject(\"resource-ldap\", roleTO.getId());\n         assertNotNull(connObjectTO);\n         assertNotNull(connObjectTO.getAttributeMap().get(\"owner\"));\n     }"},{"sha":"da7fdbfd77700ff7678e39197270f8ba86351eb7","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":27,"deletions":37,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -85,8 +85,8 @@ public class UserTestITCase extends AbstractTest {\n \n     private static final String RESOURCE_NAME_TESTDB = \"resource-testdb\";\n \n-    private ConnObjectTO readUserConnObj(final String resourceName, final String userId) {\n-        return resourceService.getConnector(resourceName, AttributableType.USER, userId);\n+    private ConnObjectTO readConnectorObject(final String resourceName, final Long userId) {\n+        return resourceService.getConnectorObject(resourceName, AttributableType.USER, userId);\n     }\n \n     public static UserTO getUniqueSampleTO(final String email) {\n@@ -1148,7 +1148,6 @@ public void suspendReactivateOnResource() {\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n                 ? \"active\"\n                 : \"created\", userTO.getStatus());\n-        String userName = userTO.getUsername();\n         long userId = userTO.getId();\n \n         // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources\n@@ -1160,10 +1159,10 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        ConnObjectTO connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n-        connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userName);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, userId);\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n@@ -1175,7 +1174,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n@@ -1187,7 +1186,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n         assertTrue(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n     }\n \n@@ -1387,12 +1386,10 @@ public void roleAttrPropagation() {\n         userTO.addResource(\"resource-csv\");\n \n         UserTO actual = createUser(userTO);\n-\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1416,12 +1413,10 @@ public void membershipAttrPropagation() {\n         userTO.addResource(\"resource-csv\");\n \n         UserTO actual = createUser(userTO);\n-\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n@@ -1480,13 +1475,11 @@ public void issueSYNCOPE108() {\n         userTO.addResource(\"resource-csv\");\n \n         UserTO actual = createUser(userTO);\n-\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n         assertEquals(1, actual.getResources().size());\n \n-        String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1501,7 +1494,7 @@ public void issueSYNCOPE108() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1518,7 +1511,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n \n-        connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1536,7 +1529,7 @@ public void issueSYNCOPE108() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            readUserConnObj(\"resource-csv\", userId);\n+            readConnectorObject(\"resource-csv\", actual.getId());\n             fail(\"Read should not succeeed\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n@@ -1567,7 +1560,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n \n-        ConnObjectTO connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n         assertNotNull(connObjectTO);\n \n         AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1596,7 +1589,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1628,7 +1621,7 @@ public void issueSYNCOPE185() {\n \n         // 3. try (and fail) to find this user on the external LDAP resource\n         try {\n-            readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n+            readConnectorObject(RESOURCE_NAME_LDAP, userTO.getId());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             SyncopeClientException sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n@@ -1680,7 +1673,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        ConnObjectTO connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1704,7 +1697,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1715,15 +1708,15 @@ public void issueSYNCOPE260() {\n         userTO = userService.suspend(userTO.getId());\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n \n         userTO = userService.reactivate(userTO.getId());\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n@@ -1748,7 +1741,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n \n@@ -1771,7 +1764,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n \n         // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n@@ -1795,7 +1788,7 @@ public void issueSYNCOPE267() {\n         assertEquals(\"resource-db-virattr\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO = readUserConnObj(\"resource-db-virattr\", String.valueOf(userTO.getId()));\n+        ConnObjectTO connObjectTO = readConnectorObject(\"resource-db-virattr\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1856,15 +1849,15 @@ public void issueSYNCOPE122() {\n         final String pwdOnSyncope = userTO.getPassword();\n \n         ConnObjectTO userOnDb =\n-                resourceService.getConnector(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getUsername());\n+                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDbAttr = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 =\n-                resourceService.getConnector(\"resource-testdb2\", AttributableType.USER, userTO.getUsername());\n+                resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n@@ -1890,15 +1883,15 @@ public void issueSYNCOPE122() {\n         assertEquals(pwdOnSyncope, userTO.getPassword());\n \n         // 3c. verify that password *has* changed on testdb\n-        userOnDb = resourceService.getConnector(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getUsername());\n+        userOnDb = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n-        userOnDb2 = resourceService.getConnector(\"resource-testdb2\", AttributableType.USER, userTO.getUsername());\n+        userOnDb2 = resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n@@ -2055,10 +2048,7 @@ public void mappingPurpose() {\n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n \n-        final ConnObjectTO connObjectTO = resourceService.getConnector(\n-                \"resource-csv\",\n-                AttributableType.USER, actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n+        final ConnObjectTO connObjectTO = readConnectorObject(\"resource-csv\", actual.getId());\n         assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n     }\n "},{"sha":"a23261c75dbe14cea7c85901876aec71b64274cb","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=0f03e5bb86ed50fb7199d416b4fd0a5c56bc7952","patch":"@@ -727,7 +727,7 @@ under the License.\n   <Entitlement name=\"RESOURCE_READ\"/>\n   <Entitlement name=\"RESOURCE_UPDATE\"/>\n   <Entitlement name=\"RESOURCE_DELETE\"/>\n-  <Entitlement name=\"RESOURCE_GETOBJECT\"/>\n+  <Entitlement name=\"RESOURCE_GETCONNECTOROBJECT\"/>\n   <Entitlement name=\"CONNECTOR_LIST\"/>\n   <Entitlement name=\"CONNECTOR_CREATE\"/>\n   <Entitlement name=\"CONNECTOR_READ\"/>"}]}