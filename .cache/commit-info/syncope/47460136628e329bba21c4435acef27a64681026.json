{"sha":"47460136628e329bba21c4435acef27a64681026","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3NDYwMTM2NjI4ZTMyOWJiYTIxYzQ0MzVhY2VmMjdhNjQ2ODEwMjY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-14T15:34:33Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-14T15:34:33Z"},"message":"SYNCOPE-95 #comment without any role users are considered to be all in the same role\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1350297 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3c11d1c75a35bbba429447cec8ad6dc51cfe5da6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3c11d1c75a35bbba429447cec8ad6dc51cfe5da6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/47460136628e329bba21c4435acef27a64681026","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/47460136628e329bba21c4435acef27a64681026","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/47460136628e329bba21c4435acef27a64681026","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/47460136628e329bba21c4435acef27a64681026/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fcdf9425cb7167bd17b41833a2883c723779d6f8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fcdf9425cb7167bd17b41833a2883c723779d6f8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fcdf9425cb7167bd17b41833a2883c723779d6f8"}],"stats":{"total":87,"additions":86,"deletions":1},"files":[{"sha":"a3863d59893985f8fc2a472be32ba1dda20040dd","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47460136628e329bba21c4435acef27a64681026/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47460136628e329bba21c4435acef27a64681026/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=47460136628e329bba21c4435acef27a64681026","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n import org.apache.syncope.core.persistence.beans.user.USchema;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n@@ -51,6 +52,9 @@ public class UserSearchDAOImpl extends AbstractDAOImpl implements UserSearchDAO\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n@@ -125,7 +129,7 @@ public List<SyncopeUser> search(\n \n         List<SyncopeUser> result = Collections.EMPTY_LIST;\n \n-        if (adminRoles != null && !adminRoles.isEmpty()) {\n+        if (adminRoles != null && (!adminRoles.isEmpty() || roleDAO.findAll().isEmpty())) {\n             LOG.debug(\"Search condition:\\n{}\", searchCondition);\n \n             if (!searchCondition.checkValidity()) {"},{"sha":"687360aeebaea074e3616e1077cc8ca31e8b1314","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/UserSearchTest.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/47460136628e329bba21c4435acef27a64681026/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/47460136628e329bba21c4435acef27a64681026/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FUserSearchTest.java?ref=47460136628e329bba21c4435acef27a64681026","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.relationships;\n+\n+import org.apache.syncope.core.persistence.dao.*;\n+import static org.junit.Assert.*;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.client.search.AttributeCond;\n+import org.apache.syncope.client.search.NodeCond;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.util.EntitlementUtil;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = {\"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n+    \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\"})\n+@Transactional\n+public class UserSearchTest {\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n+    @Autowired\n+    private UserSearchDAO searchDAO;\n+\n+    @Autowired\n+    private EntitlementDAO entitlementDAO;\n+\n+    @Test\n+    public void issueSYNCOPE95() {\n+\n+        Set<SyncopeRole> roles = new HashSet<SyncopeRole>(roleDAO.findAll());\n+\n+        for (SyncopeRole role : roles) {\n+            roleDAO.delete(role.getId());\n+        }\n+\n+        roleDAO.flush();\n+\n+        final AttributeCond coolLeafCond = new AttributeCond(AttributeCond.Type.EQ);\n+        coolLeafCond.setSchema(\"cool\");\n+        coolLeafCond.setExpression(\"true\");\n+\n+        final NodeCond cond = NodeCond.getLeafCond(coolLeafCond);\n+        assertTrue(cond.checkValidity());\n+\n+        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond);\n+        assertNotNull(users);\n+        assertEquals(1, users.size());\n+\n+        assertEquals(Long.valueOf(4L), users.get(0).getId());\n+    }\n+}"}]}