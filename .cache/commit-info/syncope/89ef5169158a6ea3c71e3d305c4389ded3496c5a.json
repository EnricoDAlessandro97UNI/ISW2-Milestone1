{"sha":"89ef5169158a6ea3c71e3d305c4389ded3496c5a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5ZWY1MTY5MTU4YTZlYTNjNzFlM2QzMDVjNDM4OWRlZDM0OTZjNWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-23T07:36:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-23T07:36:39Z"},"message":"Remove AutoDetach conf for OpenJPA (stick to JPA defaults) + remove SerializationUtils#clone for JPA entities, in attempt to eliminate the 'Multiple concurrent threads attempted to access a single broker' error, popping up sometimes","tree":{"sha":"73c949a928407a5c7e8ecb648c6538c7dcdd40d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/73c949a928407a5c7e8ecb648c6538c7dcdd40d1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/89ef5169158a6ea3c71e3d305c4389ded3496c5a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89ef5169158a6ea3c71e3d305c4389ded3496c5a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/89ef5169158a6ea3c71e3d305c4389ded3496c5a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89ef5169158a6ea3c71e3d305c4389ded3496c5a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7f4fe859e4f9dfff28f50fe4f83e09814a213f24","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7f4fe859e4f9dfff28f50fe4f83e09814a213f24","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7f4fe859e4f9dfff28f50fe4f83e09814a213f24"}],"stats":{"total":66,"additions":47,"deletions":19},"files":[{"sha":"65d02d3b7152af2c6623ad36641289a8269d2dd0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -248,7 +248,9 @@ public ConnInstanceTO readByResource(final String resourceName, final String lan\n         if (resource == null) {\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n         }\n-        return binder.getConnInstanceTO(connFactory.getConnector(resource).getConnInstance());\n+        ConnInstanceTO connInstance = binder.getConnInstanceTO(connFactory.getConnector(resource).getConnInstance());\n+        connInstance.setKey(resource.getConnector().getKey());\n+        return connInstance;\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_RELOAD + \"')\")"},{"sha":"09079da3d0d85dced1b71596a6411457910c54ed","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyUtils.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyUtils.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -44,6 +44,8 @@ public interface AnyUtils {\n \n     <T extends PlainAttrValue> T newPlainAttrUniqueValue();\n \n+    <T extends PlainAttrValue> T clonePlainAttrValue(T src);\n+    \n     <T extends AnyTO> T newAnyTO();\n \n     Set<ExternalResource> getAllResources(Any<?> any);"},{"sha":"b687aa1405e2342b64b913896c3b9e30d8581260","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyUtils.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n@@ -294,6 +295,25 @@ public <T extends PlainAttrValue> T newPlainAttrUniqueValue() {\n         return result;\n     }\n \n+    @Override\n+    public <T extends PlainAttrValue> T clonePlainAttrValue(final T src) {\n+        T dst;\n+        if (src instanceof PlainAttrUniqueValue) {\n+            dst = newPlainAttrUniqueValue();\n+        } else {\n+            dst = newPlainAttrValue();\n+        }\n+\n+        dst.setBinaryValue(src.getBinaryValue());\n+        dst.setBooleanValue(src.getBooleanValue());\n+        dst.setDateValue(src.getDateValue());\n+        dst.setDoubleValue(src.getDoubleValue());\n+        dst.setLongValue(src.getLongValue());\n+        dst.setStringValue(src.getStringValue());\n+\n+        return dst;\n+    }\n+\n     @Override\n     public <T extends AnyTO> T newAnyTO() {\n         T result = null;"},{"sha":"c793d831083a52f8c79ee55a395ba95236178a40","filename":"core/persistence-jpa/src/main/resources/domains.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -42,7 +42,6 @@ under the License.\n         value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n                                 \n         <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n-        <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n \n         <!-- Removed: see https://s.apache.org/openjpaSchemaFactory for more information\n         <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>-->"},{"sha":"e63eb2cedc6c501002b56721fdd3926eb15ae8a4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorManager.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -23,14 +23,14 @@\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n@@ -55,6 +55,8 @@ public class ConnectorManager implements ConnectorRegistry, ConnectorFactory, Sy\n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n \n+    private EntityFactory entityFactory;\n+\n     @Override\n     public Integer getPriority() {\n         return 100;\n@@ -81,7 +83,21 @@ public ConnInstance buildConnInstanceOverride(\n             final Set<ConnConfProperty> confOverride,\n             final Set<ConnectorCapability> capabilitiesOverride) {\n \n-        ConnInstance override = SerializationUtils.clone(connInstance);\n+        synchronized (this) {\n+            if (entityFactory == null) {\n+                entityFactory = ApplicationContextProvider.getApplicationContext().getBean(EntityFactory.class);\n+            }\n+        }\n+\n+        ConnInstance override = entityFactory.newEntity(ConnInstance.class);\n+        override.setConnectorName(connInstance.getConnectorName());\n+        override.setDisplayName(connInstance.getDisplayName());\n+        override.setBundleName(connInstance.getBundleName());\n+        override.setVersion(connInstance.getVersion());\n+        override.setLocation(connInstance.getLocation());\n+        override.setConf(connInstance.getConf());\n+        override.getCapabilities().addAll(connInstance.getCapabilities());\n+        override.setConnRequestTimeout(connInstance.getConnRequestTimeout());\n \n         Map<String, ConnConfProperty> overridable = new HashMap<>();\n         Set<ConnConfProperty> conf = new HashSet<>();"},{"sha":"85392c4771c49119b7a8a6fd9661cc68ac0bd2f2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -24,7 +24,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.collections4.ListUtils;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.reflect.FieldUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n@@ -60,7 +59,6 @@\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.GroupableRelatable;\n import org.apache.syncope.core.persistence.api.entity.Membership;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n@@ -352,8 +350,8 @@ public List<PlainAttrValue> getIntValues(\n         List<PlainAttrValue> values = new ArrayList<>();\n         boolean transform = true;\n \n+        AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n         if (intAttrName.getField() != null) {\n-            AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n             PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n \n             switch (intAttrName.getField()) {\n@@ -434,14 +432,10 @@ public List<PlainAttrValue> getIntValues(\n                     }\n                     if (attr != null) {\n                         if (attr.getUniqueValue() != null) {\n-                            PlainAttrUniqueValue value = SerializationUtils.clone(attr.getUniqueValue());\n-                            value.setAttr(null);\n-                            values.add(value);\n+                            values.add(anyUtils.clonePlainAttrValue(attr.getUniqueValue()));\n                         } else if (attr.getValues() != null) {\n                             for (PlainAttrValue value : attr.getValues()) {\n-                                PlainAttrValue shadow = SerializationUtils.clone(value);\n-                                shadow.setAttr(null);\n-                                values.add(shadow);\n+                                values.add(anyUtils.clonePlainAttrValue(value));\n                             }\n                         }\n                     }\n@@ -454,7 +448,6 @@ public List<PlainAttrValue> getIntValues(\n                                 ? derAttrHandler.getValue(reference, derSchema)\n                                 : derAttrHandler.getValue(reference, membership, derSchema);\n                         if (value != null) {\n-                            AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n                             PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n                             attrValue.setStringValue(value);\n                             values.add(attrValue);\n@@ -472,7 +465,6 @@ public List<PlainAttrValue> getIntValues(\n                         virAttrCache.expire(\n                                 reference.getType().getKey(), reference.getKey(), intAttrName.getSchemaName());\n \n-                        AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n                         List<String> virValues = membership == null\n                                 ? virAttrHandler.getValues(reference, virSchema)\n                                 : virAttrHandler.getValues(reference, membership, virSchema);"},{"sha":"8e730b7fd510bd0c7ccaad920930a58d5f6a99c8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89ef5169158a6ea3c71e3d305c4389ded3496c5a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=89ef5169158a6ea3c71e3d305c4389ded3496c5a","patch":"@@ -22,7 +22,6 @@\n import java.util.Iterator;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IteratorUtils;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -193,7 +192,6 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n                     populateMapping(\n                             provisionTO.getMapping(),\n                             mapping,\n-                            entityFactory.newEntity(MappingItem.class),\n                             allowedSchemas);\n                 }\n \n@@ -292,7 +290,6 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n     private void populateMapping(\n             final MappingTO mappingTO,\n             final Mapping mapping,\n-            final MappingItem prototype,\n             final AnyTypeClassTO allowedSchemas) {\n \n         mapping.setConnObjectLink(mappingTO.getConnObjectLink());\n@@ -350,7 +347,7 @@ private void populateMapping(\n                             scce.addException(invalidMandatoryCondition);\n                         }\n \n-                        MappingItem item = SerializationUtils.clone(prototype);\n+                        MappingItem item = entityFactory.newEntity(MappingItem.class);\n                         BeanUtils.copyProperties(itemTO, item, MAPPINGITEM_IGNORE_PROPERTIES);\n                         item.setMapping(mapping);\n                         if (item.isConnObjectKey()) {"}]}