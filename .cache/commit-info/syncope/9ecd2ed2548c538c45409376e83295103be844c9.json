{"sha":"9ecd2ed2548c538c45409376e83295103be844c9","node_id":"C_kwDOJfYA1toAKDllY2QyZWQyNTQ4YzUzOGM0NTQwOTM3NmU4MzI5NTEwM2JlODQ0Yzk","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2022-06-03T14:20:47Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-03T14:20:47Z"},"message":"SYNCOPE-1681: Support LDAP backends for Google Authenticator MFA (#349)\n\n* switch cas to use 6.5 rc2\r\n\r\n* resume with boot 2.6 upgrade\r\n\r\n* update spring cloud gateway\r\n\r\n* upgrade to boot 2.6\r\n\r\n* Fix test cases; make sure exceptions are caught in SAML2 metadata generation process\r\n\r\n* assign a name to the syncope authn handler matching master-content and auth-module\r\n\r\n* upgrade to spring boot 2.6; fixes build issues\r\n\r\n* Support LDAP backend for Google Authenticator\r\n\r\n* remove unused imports\r\n\r\n* remove unused imports\r\n\r\n* Update CAS version","tree":{"sha":"d099d579f1fa46d4e8944b909995645adae8dcb3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d099d579f1fa46d4e8944b909995645adae8dcb3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ecd2ed2548c538c45409376e83295103be844c9","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimhi/CRBK7hj4Ov3rIwAAhKoIAJrkpH6l8ZRh6EAfqkSLzHYH\nP8c/8nNv9tdflt2iLrDhgwT0BBbkSqHi1qEhb8zjtUq0myblGXuinQKqMI7k3br+\n8NDUrtsM7shoi6z3bkI50YZorFvvKApxZwzgbfZfd3QL43U+f42kqV/FVOq3pk0T\nolhsGgj+dkBH+k0Xvk5dS+ka0fEtMgAwnmA5LR1RC9qxuaEK1nVckEEWJRsUnMif\ngg0a3tdtj8Ek1iGzDumcbf8L7BOU8RansNeQ1ZpBeNQThTu4iBXxdeWiue0wfpEg\ntmOQMqCAIGr5pbs/6usuHrJizjMNYI2COGnWxjsmWt0Iygos8/2BrpbRG7b4lTQ=\n=/8uw\n-----END PGP SIGNATURE-----\n","payload":"tree d099d579f1fa46d4e8944b909995645adae8dcb3\nparent 7e2ce58829f18e9536d44a4fceef124762c36a18\nauthor Misagh Moayyed <mm1844@gmail.com> 1654266047 +0400\ncommitter GitHub <noreply@github.com> 1654266047 +0400\n\nSYNCOPE-1681: Support LDAP backends for Google Authenticator MFA (#349)\n\n* switch cas to use 6.5 rc2\r\n\r\n* resume with boot 2.6 upgrade\r\n\r\n* update spring cloud gateway\r\n\r\n* upgrade to boot 2.6\r\n\r\n* Fix test cases; make sure exceptions are caught in SAML2 metadata generation process\r\n\r\n* assign a name to the syncope authn handler matching master-content and auth-module\r\n\r\n* upgrade to spring boot 2.6; fixes build issues\r\n\r\n* Support LDAP backend for Google Authenticator\r\n\r\n* remove unused imports\r\n\r\n* remove unused imports\r\n\r\n* Update CAS version"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ecd2ed2548c538c45409376e83295103be844c9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ecd2ed2548c538c45409376e83295103be844c9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ecd2ed2548c538c45409376e83295103be844c9/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"7e2ce58829f18e9536d44a4fceef124762c36a18","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7e2ce58829f18e9536d44a4fceef124762c36a18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7e2ce58829f18e9536d44a4fceef124762c36a18"}],"stats":{"total":190,"additions":177,"deletions":13},"files":[{"sha":"f104575e352171f21d209c03c45ff49c2bd3b2cb","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/GoogleMfaAuthModuleConf.java","status":"modified","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -52,6 +52,99 @@ public class GoogleMfaAuthModuleConf implements AuthModuleConf {\n      */\n     private int windowSize = 3;\n \n+    /**\n+     * Name of LDAP attribute that holds GAuth account/credential as JSON.\n+     */\n+    private String ldapAccountAttributeName = \"casGAuthRecord\";\n+\n+    /**\n+     * Base DN to use. There may be scenarios where different parts of a single LDAP tree\n+     * could be considered as base-dns. Each entry can be specified\n+     * and joined together using a special delimiter character.\n+     */\n+    private String ldapBaseDn;\n+\n+    /**\n+     * The bind credential to use when connecting to LDAP.\n+     */\n+    private String ldapBindCredential;\n+\n+    /**\n+     * The bind DN to use when connecting to LDAP.\n+     */\n+    private String ldapBindDn;\n+\n+    /**\n+     * The LDAP url to the server. More than one may be specified, separated by space and/or comma.\n+     */\n+    private String ldapUrl;\n+\n+    /**\n+     * User filter to use for searching. Syntax is i.e.  cn={user} or cn={0}.\n+     */\n+    private String ldapSearchFilter;\n+\n+    /**\n+     * Whether subtree searching is allowed.\n+     */\n+    private boolean ldapSubtreeSearch = true;\n+\n+    public String getLdapAccountAttributeName() {\n+        return ldapAccountAttributeName;\n+    }\n+\n+    public void setLdapAccountAttributeName(final String ldapAccountAttributeName) {\n+        this.ldapAccountAttributeName = ldapAccountAttributeName;\n+    }\n+\n+    public String getLdapBaseDn() {\n+        return ldapBaseDn;\n+    }\n+\n+    public void setLdapBaseDn(final String ldapBaseDn) {\n+        this.ldapBaseDn = ldapBaseDn;\n+    }\n+\n+    public String getLdapBindCredential() {\n+        return ldapBindCredential;\n+    }\n+\n+    public void setLdapBindCredential(final String ldapBindCredential) {\n+        this.ldapBindCredential = ldapBindCredential;\n+    }\n+\n+    public String getLdapBindDn() {\n+        return ldapBindDn;\n+    }\n+\n+    public void setLdapBindDn(final String ldapBindDn) {\n+        this.ldapBindDn = ldapBindDn;\n+    }\n+\n+    public String getLdapUrl() {\n+        return ldapUrl;\n+    }\n+\n+    public void setLdapUrl(final String ldapUrl) {\n+        this.ldapUrl = ldapUrl;\n+    }\n+\n+    public String getLdapSearchFilter() {\n+        return ldapSearchFilter;\n+    }\n+\n+    public void setLdapSearchFilter(final String ldapSearchFilter) {\n+        this.ldapSearchFilter = ldapSearchFilter;\n+    }\n+\n+    public boolean isLdapSubtreeSearch() {\n+        return ldapSubtreeSearch;\n+    }\n+\n+    public void setLdapSubtreeSearch(final boolean ldapSubtreeSearch) {\n+        this.ldapSubtreeSearch = ldapSubtreeSearch;\n+    }\n+\n     public String getIssuer() {\n         return issuer;\n     }"},{"sha":"ab1b522c232d7006e614e345cdcb2c683e8283b1","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/WAConfigLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -97,13 +97,14 @@ public void delete(final String key) {\n     public void pushToWA() {\n         try {\n             NetworkService wa = serviceOps.get(NetworkService.Type.WA);\n-            HttpClient.newBuilder().build().send(\n+            HttpResponse response = HttpClient.newBuilder().build().send(\n                     HttpRequest.newBuilder(URI.create(\n                             StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/refresh\")).\n                             header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n                                     securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n                             POST(HttpRequest.BodyPublishers.noBody()).build(),\n                     HttpResponse.BodyHandlers.discarding());\n+            LOG.info(\"Pushed changes to WA with status: {}\", response.statusCode());\n         } catch (KeymasterException e) {\n             throw new NotFoundException(\"Could not find any WA instance\", e);\n         } catch (IOException | InterruptedException e) {"},{"sha":"4ee8d0e0b461499055c7e9e88dc705235bf28171","filename":"core/idrepo/rest-cxf/src/test/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -78,7 +78,6 @@\n import org.apache.syncope.common.lib.jackson.SyncopeJsonMapper;\n import org.apache.syncope.common.lib.jackson.SyncopeXmlMapper;\n import org.apache.syncope.common.lib.jackson.SyncopeYAMLMapper;\n-import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;"},{"sha":"f2ddbe7bc19423f4fc4e119f8d0f653971be9474","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -31,7 +31,6 @@\n import java.security.AccessControlException;\n import java.time.OffsetDateTime;\n import java.time.format.DateTimeFormatter;\n-import java.time.temporal.ChronoUnit;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;"},{"sha":"8d916f908f1f7b6a4a9f856eaed4717c76ccc079","filename":"fit/wa-reference/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/fit%2Fwa-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/fit%2Fwa-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fpom.xml?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -70,6 +70,12 @@ under the License.\n       <artifactId>syncope-sra</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>spring-cloud-starter</artifactId>\n+          <groupId>org.springframework.cloud</groupId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.fit</groupId>"},{"sha":"55a6d10a0ae462cfac8eaee71fc2fa45ef275d28","filename":"pom.xml","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -448,7 +448,7 @@ under the License.\n \n     <pac4j.version>5.3.1</pac4j.version>\n \n-    <cas.version>6.5.4</cas.version>\n+    <cas.version>6.5.5</cas.version>\n     <cas-client.version>3.6.4</cas-client.version>\n \n     <h2.version>2.1.212</h2.version>\n@@ -1550,6 +1550,16 @@ under the License.\n         <artifactId>cas-server-support-gauth</artifactId>\n         <version>${cas.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-ldap-core</artifactId>\n+        <version>${cas.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-gauth-ldap</artifactId>\n+        <version>${cas.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.apereo.cas</groupId>\n         <artifactId>cas-server-support-duo</artifactId>"},{"sha":"c7d514c79900cd11b772c8e6b5abe318889937eb","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/SyncopeWAPropertySourceLocator.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -53,6 +53,7 @@\n import org.apereo.cas.configuration.model.support.mfa.DuoSecurityMultifactorAuthenticationProperties;\n import org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProperties;\n import org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties;\n+import org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties;\n import org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties;\n import org.apereo.cas.configuration.model.support.mfa.u2f.U2FMultifactorAuthenticationProperties;\n import org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProperties;\n@@ -248,17 +249,26 @@ private static Map<String, Object> mapAuthModule(\n         final String authModule,\n         final GoogleMfaAuthModuleConf conf) {\n \n-        GoogleAuthenticatorMultifactorProperties props =\n+        GoogleAuthenticatorMultifactorProperties gauthProps =\n             new GoogleAuthenticatorMultifactorProperties();\n-        props.setName(authModule);\n-        props.getCore().setIssuer(conf.getIssuer());\n-        props.getCore().setCodeDigits(conf.getCodeDigits());\n-        props.getCore().setLabel(conf.getLabel());\n-        props.getCore().setTimeStepSize(conf.getTimeStepSize());\n-        props.getCore().setWindowSize(conf.getWindowSize());\n+        gauthProps.setName(authModule);\n+        gauthProps.getCore().setIssuer(conf.getIssuer());\n+        gauthProps.getCore().setCodeDigits(conf.getCodeDigits());\n+        gauthProps.getCore().setLabel(conf.getLabel());\n+        gauthProps.getCore().setTimeStepSize(conf.getTimeStepSize());\n+        gauthProps.getCore().setWindowSize(conf.getWindowSize());\n+\n+        LdapGoogleAuthenticatorMultifactorProperties ldapProps = new LdapGoogleAuthenticatorMultifactorProperties();\n+        ldapProps.setAccountAttributeName(conf.getLdapAccountAttributeName());\n+        ldapProps.setBaseDn(conf.getLdapBaseDn());\n+        ldapProps.setBindCredential(conf.getLdapBindCredential());\n+        ldapProps.setBindDn(conf.getLdapBindDn());\n+        ldapProps.setSearchFilter(conf.getLdapSearchFilter());\n+        ldapProps.setLdapUrl(conf.getLdapUrl());\n+        gauthProps.setLdap(ldapProps);\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        casProperties.getAuthn().getMfa().setGauth(props);\n+        casProperties.getAuthn().getMfa().setGauth(gauthProps);\n \n         SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.addFilter("},{"sha":"61d2c2b2df112a91ad82f6dfb43349d1baa8a800","filename":"wa/starter/pom.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fpom.xml?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -239,6 +239,14 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-gauth</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apereo.cas</groupId>\n+      <artifactId>cas-server-support-gauth-ldap</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apereo.cas</groupId>\n+      <artifactId>cas-server-support-ldap-core</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-duo</artifactId>"},{"sha":"7fbf21233de202bd25be7608b9db5dd10e9cad9c","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/SyncopeWAApplication.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -24,6 +24,8 @@\n import java.util.Date;\n import java.util.Map;\n import org.apache.syncope.wa.starter.config.SyncopeWARefreshContextJob;\n+\n+import org.apereo.cas.config.GoogleAuthenticatorLdapConfiguration;\n import org.apereo.cas.configuration.CasConfigurationProperties;\n import org.apereo.cas.configuration.CasConfigurationPropertiesValidator;\n import org.quartz.JobBuilder;\n@@ -59,6 +61,18 @@\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n \n @SpringBootApplication(exclude = {\n+    /*\n+    List of CAS-specific classes that we want to\n+    exclude from auto-configuration. This is required when there is a\n+    competing option/implementation available in Syncope that needs to be\n+    conditionally activated.\n+     */\n+    GoogleAuthenticatorLdapConfiguration.class,\n+\n+    /*\n+    List of Spring Boot classes that we want to disable\n+    and remove from auto-configuration.\n+     */\n     HibernateJpaAutoConfiguration.class,\n     JerseyAutoConfiguration.class,\n     GroovyTemplateAutoConfiguration.class,"},{"sha":"bc70fc2508b6efcb3daab07c2f9817af82fcc49f","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/config/SyncopeWAConfiguration.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWAConfiguration.java?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -71,7 +71,9 @@\n import org.apereo.cas.audit.AuditTrailExecutionPlanConfigurer;\n import org.apereo.cas.authentication.surrogate.SurrogateAuthenticationService;\n import org.apereo.cas.configuration.CasConfigurationProperties;\n+import org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties;\n import org.apereo.cas.configuration.model.support.mfa.u2f.U2FCoreMultifactorAuthenticationProperties;\n+import org.apereo.cas.gauth.credential.LdapGoogleAuthenticatorTokenCredentialRepository;\n import org.apereo.cas.oidc.jwks.generator.OidcJsonWebKeystoreGeneratorService;\n import org.apereo.cas.otp.repository.credentials.OneTimeTokenCredentialRepository;\n import org.apereo.cas.otp.repository.token.OneTimeTokenRepository;\n@@ -84,15 +86,20 @@\n import org.apereo.cas.support.saml.idp.metadata.generator.SamlIdPMetadataGeneratorConfigurationContext;\n import org.apereo.cas.support.saml.idp.metadata.locator.SamlIdPMetadataLocator;\n import org.apereo.cas.util.DateTimeUtils;\n+import org.apereo.cas.util.LdapUtils;\n import org.apereo.cas.util.crypto.CipherExecutor;\n import org.apereo.cas.webauthn.storage.WebAuthnCredentialRepository;\n+\n+import org.ldaptive.ConnectionFactory;\n import org.pac4j.core.client.Client;\n import org.springframework.beans.factory.ObjectProvider;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.cloud.context.config.annotation.RefreshScope;\n import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ScopedProxyMode;\n \n @Configuration(proxyBeanMethods = false)\n public class SyncopeWAConfiguration {\n@@ -258,10 +265,27 @@ public OneTimeTokenRepository oneTimeTokenAuthenticatorTokenRepository(\n                 restClient, casProperties.getAuthn().getMfa().getGauth().getCore().getTimeStepSize());\n     }\n \n+    @RefreshScope(proxyMode = ScopedProxyMode.DEFAULT)\n     @Bean\n     public OneTimeTokenCredentialRepository googleAuthenticatorAccountRegistry(\n+            final CasConfigurationProperties casProperties,\n+            @Qualifier(\"googleAuthenticatorAccountCipherExecutor\") final CipherExecutor cipherExecutor,\n             final IGoogleAuthenticator googleAuthenticatorInstance, final WARestClient restClient) {\n \n+        /*\n+        Declaring the LDAP-based repository as a Spring bean that would be conditionally activated\n+        via properties using annotations is not possible; conditionally-created spring beans cannot be\n+        refreshed, which means the settings ever change and the context is refreshed, the repository\n+        option can not be re-created. This could be revisited later in CAS 6.6.x using the {@code BeanSupplier}\n+        API construct to recreate the same bean in a more conventional way.\n+         */\n+        LdapGoogleAuthenticatorMultifactorProperties ldap = casProperties.getAuthn().getMfa().getGauth().getLdap();\n+        if (StringUtils.isNotBlank(ldap.getBaseDn()) && StringUtils.isNotBlank(ldap.getLdapUrl())\n+            && StringUtils.isNotBlank(ldap.getSearchFilter())) {\n+            ConnectionFactory connectionFactory = LdapUtils.newLdaptiveConnectionFactory(ldap);\n+            return new LdapGoogleAuthenticatorTokenCredentialRepository(cipherExecutor,\n+                googleAuthenticatorInstance, connectionFactory, ldap);\n+        }\n         return new SyncopeWAGoogleMfaAuthCredentialRepository(restClient, googleAuthenticatorInstance);\n     }\n "},{"sha":"e2c4c30811c992e21eae0401bf9454bf9876576c","filename":"wa/starter/src/main/resources/wa.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ecd2ed2548c538c45409376e83295103be844c9/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=9ecd2ed2548c538c45409376e83295103be844c9","patch":"@@ -37,7 +37,7 @@ spring.web.resources.static-locations=classpath:/thymeleaf/static,classpath:/syn\n \n cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n management.endpoints.enabled-by-default=true\n-management.endpoints.web.exposure.include=info,health,loggers,ssoSessions,registeredServices\n+management.endpoints.web.exposure.include=info,health,loggers,ssoSessions,registeredServices,refresh\n management.endpoint.health.show-details=ALWAYS\n spring.cloud.discovery.client.health-indicator.enabled=false\n "}]}