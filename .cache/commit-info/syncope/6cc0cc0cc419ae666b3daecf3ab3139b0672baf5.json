{"sha":"6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZjYzBjYzBjYzQxOWFlNjY2YjNkYWVjZjNhYjMxMzliMDY3MmJhZjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2020-08-26T06:35:36Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-08-26T06:35:36Z"},"message":"[SYNCOPE-1585] Streamline OIDCC4UI ext (#212)","tree":{"sha":"e0ea37dd1118a3d694953e8ba23dfcf9d7941e97","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e0ea37dd1118a3d694953e8ba23dfcf9d7941e97"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRgK4CRBK7hj4Ov3rIwAAdHIIAJO1nAZ6e5ao7lv4YEpw+WEf\n8tipMizRr7vaOPiWMZIsHulGwdAdRvMKpNUKJqqrAE9G8t/il6VBRWfX4P48r+PW\nMUIwsE2XwhtdCnpnq5mtV+tjNhl/fG1MM6E/Vs8/OhGuTz8GQXQKXm6bwSVje2nE\nqYUMZU/wGQLa0VLwfqNB+gVqIlrTcHZAxrQWpt/f/NqRW1yMpNngUYt0J1y/3pxZ\nBeZJm0VXcoA0p/GWVlJZCoTfKGLjTKahAc1e2qcdCZkCqF6zfr+GibE+ocicHf8n\nlEWDrYzsqwU6yJu8afOeOeaBijfE2TQfrVS2c+7BqT8fzBtTw6WsQB1zb4ghnpc=\n=xJDQ\n-----END PGP SIGNATURE-----\n","payload":"tree e0ea37dd1118a3d694953e8ba23dfcf9d7941e97\nparent ca3e1ebac58651568a73dfb3289ffcad2d80fdc4\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1598423736 +0200\ncommitter GitHub <noreply@github.com> 1598423736 +0200\n\n[SYNCOPE-1585] Streamline OIDCC4UI ext (#212)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4"}],"stats":{"total":4703,"additions":1949,"deletions":2754},"files":[{"sha":"d9281868b340e304b324014bebad61ceeffdf735","filename":".travis.yml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/.travis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/.travis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.travis.yml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -74,8 +74,6 @@ jobs:\n     - stage: test\n       name: \"Persistence Unit Tests via JDK 11: PostgreSQL (JSONB)\"\n       script: mvn -f core/persistence-jpa-json/pom.xml -P postgres -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Dsass.skip=true\n-      after_failure:\n-       - cat core/persistence-jpa-json/target/failsafe-reports/org.apache.syncope.core.persistence.jpa.inner.AnySearchTest*\n     - stage: test\n       name: \"Persistence Unit Tests via JDK 11: MySQL (JSON)\"\n       script: mvn -f core/persistence-jpa-json/pom.xml -P mysql -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Dsass.skip=true\n@@ -119,7 +117,4 @@ jobs:\n     - stage: fit\n       name: \"Integration Tests: SRA and WA\"\n       script: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n-      after_failure:\n-       - cat fit/wa-reference/target/log/*\n-       - cat fit/core-reference/target/log/*\n     #####################################################"},{"sha":"081d7acef5fb090b0c45accc3b45b69936d6cd99","filename":"archetype/pom.xml","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -243,13 +243,6 @@ under the License.\n           <include>console.properties</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../ext/oidcclient/agent/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources/all</targetPath>\n-        <includes>\n-          <include>oidcclient-agent.properties</include>\n-        </includes>\n-      </resource>\n       <resource>\n         <directory>../ext/self-keymaster/client/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n@@ -271,7 +264,6 @@ under the License.\n         <includes>\n           <include>console.properties</include>\n           <include>keymaster.properties</include>\n-          <include>oidcclient-agent.properties</include>\n         </includes>\n       </resource>\n       <resource>\n@@ -296,13 +288,6 @@ under the License.\n           <include>keymaster.properties</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../ext/oidcclient/agent/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources/all</targetPath>\n-        <includes>\n-          <include>oidcclient-agent.properties</include>\n-        </includes>\n-      </resource>\n       <resource>\n         <directory>../fit/enduser-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n@@ -319,7 +304,6 @@ under the License.\n           <include>customFormAttributes.json</include>\n           <include>customTemplate.json</include>\n           <include>keymaster.properties</include>\n-          <include>oidcclient-agent.properties</include>\n         </includes>\n       </resource>\n       <resource>"},{"sha":"9a5b879fb92e34aa6d67244ee6118ede9265b89d","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -96,8 +96,8 @@ under the License.\n         </dependency>\n         \n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n         "},{"sha":"b7fe116acd919e3f538ab2890b1686d02e9a3c16","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -150,13 +150,13 @@ under the License.\n         </dependency>\n \n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-persistence-jpa</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n "},{"sha":"ac8a7287af95cb295bbc1db354a7575d92dca59d","filename":"archetype/src/main/resources/archetype-resources/enduser/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -104,8 +104,8 @@ under the License.\n         </dependency>\n \n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n         "},{"sha":"9ae8cfbcc76cec3deb37cdb1a4684aa4d728873b","filename":"client/idrepo/console/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -260,7 +260,7 @@ under the License.\n             <configuration>\n               <jvmArguments>\n                 -Dwicket.core.settings.general.configuration-type=development\n-                -Xdebug -Xrunjdwp:transport=dt_socket,address=8001,server=y,suspend=n\n+                -Xdebug -Xrunjdwp:transport=dt_socket,address=8003,server=y,suspend=n\n               </jvmArguments>\n               <profiles>\n                 <profile>debug</profile>\n@@ -327,8 +327,8 @@ under the License.\n           <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n       </dependencies>"},{"sha":"1ac160dda421bafe346f5cd01ce50648b64da5ca","filename":"client/idrepo/console/src/test/resources/application-debug.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -17,3 +17,6 @@\n keymaster.address=http://localhost:9080/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n+\n+server.port=9090\n+service.discovery.address=http://localhost:9090/syncope-console/"},{"sha":"d34a91ff1f074458509d4943c70bce6d37e5d3ab","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -240,7 +240,7 @@ under the License.\n             <configuration>\n               <jvmArguments>\n                 -Dwicket.core.settings.general.configuration-type=development\n-                -Xdebug -Xrunjdwp:transport=dt_socket,address=8001,server=y,suspend=n\n+                -Xdebug -Xrunjdwp:transport=dt_socket,address=8004,server=y,suspend=n\n               </jvmArguments>\n               <profiles>\n                 <profile>debug</profile>\n@@ -285,8 +285,8 @@ under the License.\n         </dependency>\n \n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n       </dependencies>"},{"sha":"fc1b6e4808c8f188aa6c62783baa502d1bee7053","filename":"client/idrepo/enduser/src/test/resources/application-debug.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fapplication-debug.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -17,3 +17,6 @@\n keymaster.address=http://localhost:9080/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n+\n+server.port=9091\n+service.discovery.address=http://localhost:9091/syncope-enduser/"},{"sha":"dee84f441c86fea1d24840d09a303a8977b84534","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/JPAOIDCRP.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAOIDCRP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAOIDCRP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAOIDCRP.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -42,6 +42,7 @@ public class JPAOIDCRP extends AbstractClientApp implements OIDCRP {\n \n     public static final String TABLE = \"OIDCRP\";\n \n+    @Column(unique = true, nullable = false)\n     private String clientId;\n \n     private String clientSecret;"},{"sha":"40d8da8ee27ee216bdfb045dc9a222d2847f5ac1","filename":"docker/console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -84,8 +84,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n "},{"sha":"7de23c5b0dfcd1041d4ccc45ba8f7bc63c971e71","filename":"docker/core/pom.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -126,13 +126,13 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-persistence-jpa</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n "},{"sha":"ba537c35bb30560fb1de257cc2d137fd4b1a0b2b","filename":"docker/enduser/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/docker%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -73,8 +73,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>"},{"sha":"dfb13d620bfdb5b14ac4b0e8b3eb7e216f76d766","filename":"ext/oidcc4ui/client-common-ui/pom.xml","status":"renamed","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Common UI Lib</name>\n-  <description>Apache Syncope Ext: OIDC Client Common UI Lib</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-client-common-ui</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Common UI</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Common UI</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-client-common-ui</artifactId>\n   <packaging>jar</packaging>\n    \n   <properties>\n@@ -39,8 +39,14 @@ under the License.\n \n   <dependencies>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-api</artifactId>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n ","previous_filename":"ext/oidcclient/client-common-ui/pom.xml"},{"sha":"b8b69743b3b335184033b8a978fdb71b8abdfbb0","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/AbstractOIDCSSOLoginFormPanel.java","status":"renamed","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -16,17 +16,15 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.common.ui.panels;\n+package org.apache.syncope.client.ui.commons.panels;\n \n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n import org.apache.syncope.client.ui.commons.BaseSession;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n@@ -37,6 +35,7 @@\n import org.apache.wicket.request.http.handler.RedirectRequestHandler;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n public abstract class AbstractOIDCSSOLoginFormPanel extends BaseSSOLoginFormPanel {\n \n@@ -47,29 +46,29 @@ public abstract class AbstractOIDCSSOLoginFormPanel extends BaseSSOLoginFormPane\n     public AbstractOIDCSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id);\n \n-        List<OIDCProviderTO> available = session.getAnonymousService(OIDCProviderService.class).list();\n+        List<OIDCC4UIProviderTO> available = session.getAnonymousService(OIDCC4UIProviderService.class).list();\n \n-        final Model<OIDCProviderTO> model = new Model<>();\n-        AjaxDropDownChoicePanel<OIDCProviderTO> ops =\n+        final Model<OIDCC4UIProviderTO> model = new Model<>();\n+        AjaxDropDownChoicePanel<OIDCC4UIProviderTO> ops =\n                 new AjaxDropDownChoicePanel<>(\"ops\", \"OpenID Connect\", model, false);\n         ops.setChoices(available);\n-        ops.setChoiceRenderer(new IChoiceRenderer<OIDCProviderTO>() {\n+        ops.setChoiceRenderer(new IChoiceRenderer<OIDCC4UIProviderTO>() {\n \n             private static final long serialVersionUID = 1814750973898916102L;\n \n             @Override\n-            public Object getDisplayValue(final OIDCProviderTO object) {\n+            public Object getDisplayValue(final OIDCC4UIProviderTO object) {\n                 return object.getName();\n             }\n \n             @Override\n-            public String getIdValue(final OIDCProviderTO object, final int index) {\n+            public String getIdValue(final OIDCC4UIProviderTO object, final int index) {\n                 return object.getName();\n             }\n \n             @Override\n-            public OIDCProviderTO getObject(final String id,\n-                    final IModel<? extends List<? extends OIDCProviderTO>> choices) {\n+            public OIDCC4UIProviderTO getObject(final String id,\n+                    final IModel<? extends List<? extends OIDCC4UIProviderTO>> choices) {\n \n                 return choices.getObject().stream().\n                         filter(object -> object.getName().equals(id)).findFirst().orElse(null);\n@@ -85,7 +84,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 if (model.getObject() != null) {\n                     try {\n                         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n-                                UrlUtils.rewriteToContextRelative(\"oidcclient/login?op=\"\n+                                UrlUtils.rewriteToContextRelative(OIDCC4UIConstants.URL_CONTEXT + \"/login?op=\"\n                                         + URLEncoder.encode(model.getObject().getName(), StandardCharsets.UTF_8),\n                                         RequestCycle.get())));\n                     } catch (Exception e) {","previous_filename":"ext/oidcclient/client-common-ui/src/main/java/org/apache/syncope/client/common/ui/panels/AbstractOIDCSSOLoginFormPanel.java"},{"sha":"aeb8bff9ae6153ae532c4d83f7e0d936b1e8f5e3","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/OIDCC4UIConstants.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -16,21 +16,21 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib.to;\n+package org.apache.syncope.client.ui.commons.panels;\n \n-import java.io.Serializable;\n+public final class OIDCC4UIConstants {\n \n-public class OIDCLogoutRequestTO implements Serializable {\n+    public static final String URL_CONTEXT = \"oidcc4ui\";\n \n-    private static final long serialVersionUID = -4708360216757961537L;\n+    public static final String PARAM_OP = \"op\";\n \n-    private String endSessionEndpoint;\n+    public static final String OIDCC4UI_JWT = \"oidcc4ui.jwt\";\n \n-    public String getEndSessionEndpoint() {\n-        return endSessionEndpoint;\n-    }\n+    public static final String OIDCC4UI_NEW_USER = \"oidcc4ui.newUser\";\n+\n+    public static final String OIDCC4UI_SLO_SUPPORTED = \"oidcc4ui.sloSupported\";\n \n-    public void setEndSessionEndpoint(final String endSessionEndpoint) {\n-        this.endSessionEndpoint = endSessionEndpoint;\n+    private OIDCC4UIConstants() {\n+        // private constructor for static utility class\n     }\n }","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLogoutRequestTO.java"},{"sha":"010d9f45fbcd7cf0c9df39a865dbeeeff8b9d166","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/oidcc4ui/BeforeLogoutResource.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FBeforeLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FBeforeLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FBeforeLogoutResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.resources.oidcc4ui;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.BaseSession;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCRequest;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIService;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.request.resource.AbstractResource;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".beforeLogout\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/before-logout\")\n+public class BeforeLogoutResource extends AbstractResource {\n+\n+    private static final long serialVersionUID = 273797583932923564L;\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+        String postLogoutRedirectURI = StringUtils.substringBefore(\n+                request.getRequestURL().toString(), \"/before-logout\") + \"/logout\";\n+\n+        OIDCC4UIService service = BaseSession.class.cast(Session.get()).getService(OIDCC4UIService.class);\n+        OIDCRequest logoutRequest = service.createLogoutRequest(postLogoutRedirectURI);\n+\n+        ResourceResponse response = new ResourceResponse();\n+        response.setStatusCode(Response.Status.FOUND.getStatusCode());\n+        response.getHeaders().addHeader(HttpHeaders.CACHE_CONTROL, \"no-cache, no-store\");\n+        response.getHeaders().addHeader(\"Pragma\", \"no-cache\");\n+        response.getHeaders().addHeader(HttpHeaders.LOCATION, logoutRequest.getLocation());\n+\n+        Session.get().invalidate();\n+\n+        return response;\n+    }\n+}"},{"sha":"b76a2d0801d8c20caf0b136b24f30cbeedf4707c","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/oidcc4ui/CodeConsumerResource.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.resources.oidcc4ui;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.syncope.client.ui.commons.BaseSession;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIService;\n+import org.apache.wicket.RestartResponseException;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class CodeConsumerResource extends AbstractResource {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(CodeConsumerResource.class);\n+\n+    private static final ObjectMapper MAPPER =\n+            new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n+\n+    private static final long serialVersionUID = -692581789294259519L;\n+\n+    protected abstract Class<? extends WebPage> getLoginPageClass();\n+\n+    protected abstract Class<? extends WebPage> getSelfRegPageClass();\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        String authorizationCode = attributes.getRequest().getQueryParameters().\n+                getParameterValue(OIDCConstants.CODE).toOptionalString();\n+\n+        HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+\n+        OIDCC4UIService service = BaseSession.class.cast(Session.get()).getAnonymousService(OIDCC4UIService.class);\n+        OIDCLoginResponse oidcResponse = service.login(\n+                request.getRequestURL().toString(),\n+                authorizationCode,\n+                Session.get().getAttribute(OIDCConstants.OP).toString());\n+\n+        if (oidcResponse.isSelfReg()) {\n+            UserTO newUser = new UserTO();\n+            newUser.setUsername(oidcResponse.getUsername());\n+            newUser.getPlainAttrs().addAll(oidcResponse.getAttrs());\n+\n+            try {\n+                throw new RestartResponseException(\n+                        getSelfRegPageClass(),\n+                        new PageParameters().\n+                                set(OIDCC4UIConstants.OIDCC4UI_NEW_USER, MAPPER.writeValueAsString(newUser)));\n+            } catch (JsonProcessingException e) {\n+                LOG.error(\"Could not serialize new user {}\", newUser, e);\n+                throw new WicketRuntimeException(e);\n+            }\n+        } else {\n+            throw new RestartResponseException(\n+                    getLoginPageClass(),\n+                    new PageParameters().\n+                            set(OIDCC4UIConstants.OIDCC4UI_JWT, oidcResponse.getAccessToken()).\n+                            set(OIDCC4UIConstants.OIDCC4UI_SLO_SUPPORTED, oidcResponse.isLogoutSupported()));\n+        }\n+    }\n+}"},{"sha":"3ebe48cb3b7b71c514f6245b8f14d716994a3033","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/oidcc4ui/LoginResource.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLoginResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.resources.oidcc4ui;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.BaseSession;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCRequest;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIService;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.request.resource.AbstractResource;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".login\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/login\")\n+public class LoginResource extends AbstractResource {\n+\n+    private static final long serialVersionUID = -3076690953674174306L;\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        String op = attributes.getRequest().getQueryParameters().\n+                getParameterValue(OIDCC4UIConstants.PARAM_OP).toString();\n+\n+        HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+        String redirectURI = StringUtils.substringBefore(\n+                request.getRequestURL().toString(), \"/login\") + \"/code-consumer\";\n+\n+        OIDCC4UIService service = BaseSession.class.cast(Session.get()).getAnonymousService(OIDCC4UIService.class);\n+        OIDCRequest loginRequest = service.createLoginRequest(redirectURI, op);\n+\n+        Session.get().setAttribute(OIDCConstants.OP, op);\n+\n+        ResourceResponse response = new ResourceResponse();\n+        response.setStatusCode(Response.Status.FOUND.getStatusCode());\n+        response.getHeaders().addHeader(HttpHeaders.CACHE_CONTROL, \"no-cache, no-store\");\n+        response.getHeaders().addHeader(\"Pragma\", \"no-cache\");\n+        response.getHeaders().addHeader(HttpHeaders.LOCATION, loginRequest.getLocation());\n+\n+        return response;\n+    }\n+}"},{"sha":"2a602b716996d589c7e3ab4ddec67814b7b1366a","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/oidcc4ui/LogoutResource.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FLogoutResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.resources.oidcc4ui;\n+\n+import org.apache.wicket.RestartResponseException;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.request.resource.AbstractResource;\n+\n+public abstract class LogoutResource extends AbstractResource {\n+\n+    private static final long serialVersionUID = 273797583932923564L;\n+\n+    protected abstract Class<? extends WebPage> getLogoutPageClass();\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        throw new RestartResponseException(getLogoutPageClass(), new PageParameters());\n+    }\n+}"},{"sha":"b545c62835f3293c84ea710958444d152cd50b7a","filename":"ext/oidcc4ui/client-common-ui/src/main/resources/org/apache/syncope/client/ui/commons/panels/AbstractOIDCSSOLoginFormPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-common-ui/src/main/resources/org/apache/syncope/client/common/ui/panels/AbstractOIDCSSOLoginFormPanel.html"},{"sha":"160f24755398b84b2d64078763b7f6bc8dc51fcc","filename":"ext/oidcc4ui/client-console/pom.xml","status":"renamed","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Console</name>\n-  <description>Apache Syncope Ext: OIDC Client Console</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Console</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Console</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -43,20 +43,15 @@ under the License.\n       <artifactId>javax.servlet-api</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-agent</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-common-ui</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-common-ui</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/client-console/pom.xml"},{"sha":"364a0f84eaff0dc7f5dc9c0f430d6fafaab232b2","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCC4UI.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -24,21 +24,21 @@\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.panels.OIDCProvidersDirectoryPanel;\n import org.apache.syncope.client.ui.commons.annotations.ExtPage;\n-import org.apache.syncope.common.lib.types.OIDCClientEntitlement;\n+import org.apache.syncope.common.lib.types.OIDC4UIEntitlement;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n-@ExtPage(label = \"OpenID Connect 1.0 Client\", icon = \"fab fa-openid\", \n-        listEntitlement = OIDCClientEntitlement.OP_READ, priority = 300)\n-public class OIDCClient extends BaseExtPage {\n+@ExtPage(label = \"OpenID Connect 1.0 C4UI\", icon = \"fab fa-openid\", \n+        listEntitlement = OIDC4UIEntitlement.OP_READ, priority = 300)\n+public class OIDCC4UI extends BaseExtPage {\n \n     private static final long serialVersionUID = -599601954212606001L;\n \n-    public OIDCClient(final PageParameters parameters) {\n+    public OIDCC4UI(final PageParameters parameters) {\n         super(parameters);\n \n         body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClient.java"},{"sha":"ed03d8dc35e691b0294be885c96e03e809fd8401","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientBeforeLogout.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientBeforeLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientBeforeLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientBeforeLogout.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.UrlUtils;\n import org.apache.wicket.request.cycle.RequestCycle;\n@@ -31,6 +32,7 @@ public OIDCClientBeforeLogout() {\n         super();\n \n         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n-                UrlUtils.rewriteToContextRelative(\"oidcclient/beforelogout\", RequestCycle.get())));\n+                UrlUtils.rewriteToContextRelative(OIDCC4UIConstants.URL_CONTEXT + \"/before-logout\",\n+                        RequestCycle.get())));\n     }\n }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientBeforeLogout.java"},{"sha":"5e277f8c3b2be12ca2b58da8d440dc81e66f355d","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientLogin.java","status":"renamed","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogin.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,9 +21,9 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.wicket.authentication.IAuthenticationStrategy;\n import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -39,8 +39,7 @@ public class OIDCClientLogin extends WebPage {\n     public OIDCClientLogin(final PageParameters parameters) {\n         super(parameters);\n \n-        String token = (String) ((ServletWebRequest) getRequest()).getContainerRequest().\n-                getSession().getAttribute(org.apache.syncope.ext.oidcclient.agent.Constants.OIDCCLIENTJWT);\n+        String token = parameters.get(OIDCC4UIConstants.OIDCC4UI_JWT).toOptionalString();\n         if (StringUtils.isBlank(token)) {\n             LOG.error(\"No JWT found, redirecting to default greeter\");\n \n@@ -52,7 +51,7 @@ public OIDCClientLogin(final PageParameters parameters) {\n         IAuthenticationStrategy strategy = getApplication().getSecuritySettings().getAuthenticationStrategy();\n \n         if (SyncopeConsoleSession.get().authenticate(token)) {\n-            if (parameters.get(\"logoutSupported\").toBoolean(false)) {\n+            if (parameters.get(OIDCC4UIConstants.OIDCC4UI_SLO_SUPPORTED).toBoolean(false)) {\n                 SyncopeConsoleSession.get().setAttribute(Constants.BEFORE_LOGOUT_PAGE, OIDCClientBeforeLogout.class);\n             }\n \n@@ -67,5 +66,4 @@ public OIDCClientLogin(final PageParameters parameters) {\n         }\n         strategy.remove();\n     }\n-\n }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientLogin.java"},{"sha":"0141e0e8c4c3c2198e59e5b61dfa0b616edb33ad","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientLogout.java","status":"renamed","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientLogout.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,21 +18,16 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class OIDCClientLogout extends WebPage {\n \n     private static final long serialVersionUID = -4862264444058746154L;\n \n-    public OIDCClientLogout() {\n-        super();\n-\n-        SyncopeConsoleSession.get().cleanup();\n-\n-        SyncopeConsoleSession.get().invalidate();\n+    public OIDCClientLogout(final PageParameters parameters) {\n+        super(parameters);\n \n         setResponsePage(getApplication().getHomePage());\n     }\n-\n }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientLogout.java"},{"sha":"db29dce4abae57d3f37372787b91a5fe32689c19","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientSelfReg.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientSelfReg.java"},{"sha":"06a6ddee590ef09856a8f1008167c6a0dba647aa","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.java","status":"renamed","additions":33,"deletions":32,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -47,10 +47,10 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.OIDCClientEntitlement;\n+import org.apache.syncope.common.lib.types.OIDC4UIEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -66,7 +66,7 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class OIDCProvidersDirectoryPanel extends DirectoryPanel<\n-        OIDCProviderTO, OIDCProviderTO, OIDCProvidersProvider, OIDCProviderRestClient> {\n+        OIDCC4UIProviderTO, OIDCC4UIProviderTO, OIDCProvidersProvider, OIDCProviderRestClient> {\n \n     private static final long serialVersionUID = -1356497878858616714L;\n \n@@ -75,19 +75,20 @@ public class OIDCProvidersDirectoryPanel extends DirectoryPanel<\n     private final BaseModal<Serializable> templateModal;\n \n     public OIDCProvidersDirectoryPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<OIDCProviderTO, OIDCProviderTO, OIDCProviderRestClient>(new OIDCProviderRestClient(),\n-                pageRef) {\n+        super(id, new Builder<OIDCC4UIProviderTO, OIDCC4UIProviderTO, OIDCProviderRestClient>(\n+                new OIDCProviderRestClient(), pageRef) {\n \n             private static final long serialVersionUID = -5542535388772406165L;\n \n             @Override\n-            protected WizardMgtPanel<OIDCProviderTO> newInstance(final String id, final boolean wizardInModal) {\n+            protected WizardMgtPanel<OIDCC4UIProviderTO> newInstance(final String id,\n+                    final boolean wizardInModal) {\n                 throw new UnsupportedOperationException();\n             }\n         }.disableCheckBoxes());\n \n-        this.addNewItemPanelBuilder(new OIDCProviderWizardBuilder(this, new OIDCProviderTO(), pageRef), true);\n-        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, OIDCClientEntitlement.OP_CREATE);\n+        this.addNewItemPanelBuilder(new OIDCProviderWizardBuilder(this, new OIDCC4UIProviderTO(), pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, OIDC4UIEntitlement.OP_CREATE);\n \n         modal.size(Modal.Size.Large);\n \n@@ -123,16 +124,16 @@ protected OIDCProvidersProvider dataProvider() {\n     }\n \n     @Override\n-    protected ActionLinksTogglePanel<OIDCProviderTO> actionTogglePanel() {\n-        return new ActionLinksTogglePanel<OIDCProviderTO>(Constants.OUTER, pageRef) {\n+    protected ActionLinksTogglePanel<OIDCC4UIProviderTO> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<OIDCC4UIProviderTO>(Constants.OUTER, pageRef) {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n             @Override\n             public void updateHeader(final AjaxRequestTarget target, final Serializable object) {\n-                if (object instanceof OIDCProviderTO) {\n+                if (object instanceof OIDCC4UIProviderTO) {\n                     setHeader(target,\n-                            StringUtils.abbreviate(((OIDCProviderTO) object).getName(), HEADER_FIRST_ABBREVIATION));\n+                            StringUtils.abbreviate(((OIDCC4UIProviderTO) object).getName(), HEADER_FIRST_ABBREVIATION));\n                 } else {\n                     super.updateHeader(target, object);\n                 }\n@@ -147,8 +148,8 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    protected List<IColumn<OIDCProviderTO, String>> getColumns() {\n-        List<IColumn<OIDCProviderTO, String>> columns = new ArrayList<>();\n+    protected List<IColumn<OIDCC4UIProviderTO, String>> getColumns() {\n+        List<IColumn<OIDCC4UIProviderTO, String>> columns = new ArrayList<>();\n         columns.add(new KeyPropertyColumn<>(new ResourceModel(\"key\"), \"key\", \"key\"));\n         columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n         columns.add(new PropertyColumn<>(new ResourceModel(\"issuer\"), \"issuer\", \"issuer\"));\n@@ -163,29 +164,29 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     }\n \n     @Override\n-    public ActionsPanel<OIDCProviderTO> getActions(final IModel<OIDCProviderTO> model) {\n-        final ActionsPanel<OIDCProviderTO> panel = super.getActions(model);\n+    public ActionsPanel<OIDCC4UIProviderTO> getActions(final IModel<OIDCC4UIProviderTO> model) {\n+        final ActionsPanel<OIDCC4UIProviderTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<OIDCProviderTO>() {\n+        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final OIDCProviderTO ignore) {\n-                OIDCProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n+            public void onClick(final AjaxRequestTarget target, final OIDCC4UIProviderTO ignore) {\n+                OIDCC4UIProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n                 send(OIDCProvidersDirectoryPanel.this, Broadcast.EXACT,\n                         new AjaxWizard.EditItemActionEvent<>(object, target));\n                 modal.header(Model.of(StringUtils.capitalize((\"Edit \" + object.getName()))));\n             }\n-        }, ActionLink.ActionType.EDIT, OIDCClientEntitlement.OP_UPDATE);\n+        }, ActionLink.ActionType.EDIT, OIDC4UIEntitlement.OP_UPDATE);\n \n-        panel.add(new ActionLink<OIDCProviderTO>() {\n+        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n \n             private static final long serialVersionUID = 8557679125857348178L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final OIDCProviderTO ignore) {\n-                final OIDCProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n+            public void onClick(final AjaxRequestTarget target, final OIDCC4UIProviderTO ignore) {\n+                final OIDCC4UIProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n \n                 UserTemplateWizardBuilder builder = new UserTemplateWizardBuilder(\n                         object.getUserTemplate(),\n@@ -210,14 +211,14 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                 target.add(templateModal);\n \n             }\n-        }, ActionLink.ActionType.TEMPLATE, OIDCClientEntitlement.OP_UPDATE);\n+        }, ActionLink.ActionType.TEMPLATE, OIDC4UIEntitlement.OP_UPDATE);\n \n-        panel.add(new ActionLink<OIDCProviderTO>() {\n+        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n \n             private static final long serialVersionUID = -5467832321897812767L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final OIDCProviderTO ignore) {\n+            public void onClick(final AjaxRequestTarget target, final OIDCC4UIProviderTO ignore) {\n                 try {\n                     OIDCProviderRestClient.delete(model.getObject().getKey());\n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n@@ -228,7 +229,7 @@ public void onClick(final AjaxRequestTarget target, final OIDCProviderTO ignore)\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        }, ActionLink.ActionType.DELETE, OIDCClientEntitlement.OP_DELETE, true);\n+        }, ActionLink.ActionType.DELETE, OIDC4UIEntitlement.OP_DELETE, true);\n         return panel;\n     }\n \n@@ -254,11 +255,11 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    protected static final class OIDCProvidersProvider extends DirectoryDataProvider<OIDCProviderTO> {\n+    protected static final class OIDCProvidersProvider extends DirectoryDataProvider<OIDCC4UIProviderTO> {\n \n         private static final long serialVersionUID = -2865055116864423761L;\n \n-        private final SortableDataProviderComparator<OIDCProviderTO> comparator;\n+        private final SortableDataProviderComparator<OIDCC4UIProviderTO> comparator;\n \n         public OIDCProvidersProvider(final int paginatorRows) {\n             super(paginatorRows);\n@@ -268,8 +269,8 @@ public OIDCProvidersProvider(final int paginatorRows) {\n         }\n \n         @Override\n-        public Iterator<OIDCProviderTO> iterator(final long first, final long count) {\n-            List<OIDCProviderTO> list = OIDCProviderRestClient.list();\n+        public Iterator<OIDCC4UIProviderTO> iterator(final long first, final long count) {\n+            List<OIDCC4UIProviderTO> list = OIDCProviderRestClient.list();\n             list.sort(comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n@@ -280,7 +281,7 @@ public long size() {\n         }\n \n         @Override\n-        public IModel<OIDCProviderTO> model(final OIDCProviderTO object) {\n+        public IModel<OIDCC4UIProviderTO> model(final OIDCC4UIProviderTO object) {\n             return new CompoundPropertyModel<>(object);\n         }\n     }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.java"},{"sha":"85d4647ee0844d75dfc23ade5c29b0ec06bfe1ee","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCSSOLoginFormPanel.java","status":"renamed","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.common.ui.panels.AbstractOIDCSSOLoginFormPanel;\n+import org.apache.syncope.client.ui.commons.panels.AbstractOIDCSSOLoginFormPanel;\n import org.apache.syncope.client.ui.commons.BaseSession;\n \n public class OIDCSSOLoginFormPanel extends AbstractOIDCSSOLoginFormPanel {\n@@ -28,5 +28,4 @@ public class OIDCSSOLoginFormPanel extends AbstractOIDCSSOLoginFormPanel {\n     public OIDCSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id, session);\n     }\n-\n }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCSSOLoginFormPanel.java"},{"sha":"3638cdc2be8225ffdac3812172be3bdd5968a569","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleCodeConsumerResource.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.resources;\n+\n+import org.apache.syncope.client.console.pages.OIDCClientLogin;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.client.ui.commons.resources.oidcc4ui.CodeConsumerResource;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".codeConsumer\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/code-consumer\")\n+public class ConsoleCodeConsumerResource extends CodeConsumerResource {\n+\n+    private static final long serialVersionUID = 8348262380011763032L;\n+\n+    @Override\n+    protected Class<? extends WebPage> getLoginPageClass() {\n+        return OIDCClientLogin.class;\n+    }\n+\n+    @Override\n+    protected Class<? extends WebPage> getSelfRegPageClass() {\n+        throw new UnsupportedOperationException(\"Self-registration not supported by Admin Console\");\n+    }\n+}"},{"sha":"7116f8814160cf8a674242b919ab70ae2894693c","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleLogoutResource.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleLogoutResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.resources;\n+\n+import org.apache.syncope.client.console.pages.OIDCClientLogout;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.client.ui.commons.resources.oidcc4ui.LogoutResource;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".logout\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/logout\")\n+public class ConsoleLogoutResource extends LogoutResource {\n+\n+    private static final long serialVersionUID = -4250716706885039749L;\n+\n+    @Override\n+    protected Class<? extends WebPage> getLogoutPageClass() {\n+        return OIDCClientLogout.class;\n+    }\n+}"},{"sha":"ca9aa1c01b27ac0e0ed31f63168fae590b07fd93","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/rest/OIDCProviderRestClient.java","status":"renamed","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCProviderRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCProviderRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCProviderRestClient.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -20,34 +20,34 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n public class OIDCProviderRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -4006712447589576324L;\n \n-    public static List<OIDCProviderTO> list() {\n-        return getService(OIDCProviderService.class).list();\n+    public static List<OIDCC4UIProviderTO> list() {\n+        return getService(OIDCC4UIProviderService.class).list();\n     }\n \n-    public static void create(final OIDCProviderTO op) {\n-        SyncopeConsoleSession.get().getService(OIDCProviderService.class).create(op);\n+    public static void create(final OIDCC4UIProviderTO op) {\n+        SyncopeConsoleSession.get().getService(OIDCC4UIProviderService.class).create(op);\n     }\n \n-    public static void createFromDiscovery(final OIDCProviderTO op) {\n-        SyncopeConsoleSession.get().getService(OIDCProviderService.class).createFromDiscovery(op);\n+    public static void createFromDiscovery(final OIDCC4UIProviderTO op) {\n+        SyncopeConsoleSession.get().getService(OIDCC4UIProviderService.class).createFromDiscovery(op);\n     }\n \n-    public static OIDCProviderTO read(final String key) {\n-        return getService(OIDCProviderService.class).read(key);\n+    public static OIDCC4UIProviderTO read(final String key) {\n+        return getService(OIDCC4UIProviderService.class).read(key);\n     }\n \n-    public static void update(final OIDCProviderTO op) {\n-        getService(OIDCProviderService.class).update(op);\n+    public static void update(final OIDCC4UIProviderTO op) {\n+        getService(OIDCC4UIProviderService.class).update(op);\n     }\n \n     public static void delete(final String key) {\n-        getService(OIDCProviderService.class).delete(key);\n+        getService(OIDCC4UIProviderService.class).delete(key);\n     }\n }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/rest/OIDCProviderRestClient.java"},{"sha":"128aaa4a006c3ccc8b5f29ed01902b62b0d438f4","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java","status":"renamed","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -40,7 +40,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.types.OIDCClientImplementationType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -55,7 +55,7 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.validation.validator.UrlValidator;\n \n-public class OIDCProviderWizardBuilder extends AjaxWizardBuilder<OIDCProviderTO> {\n+public class OIDCProviderWizardBuilder extends AjaxWizardBuilder<OIDCC4UIProviderTO> {\n \n     private static final long serialVersionUID = -3310772400714122768L;\n \n@@ -72,14 +72,17 @@ protected List<String> load() {\n         }\n     };\n \n-    public OIDCProviderWizardBuilder(final OIDCProvidersDirectoryPanel directoryPanel, final OIDCProviderTO defaultItem,\n+    public OIDCProviderWizardBuilder(\n+            final OIDCProvidersDirectoryPanel directoryPanel,\n+            final OIDCC4UIProviderTO defaultItem,\n             final PageReference pageRef) {\n+\n         super(defaultItem, pageRef);\n         this.directoryPanel = directoryPanel;\n     }\n \n     @Override\n-    protected Serializable onApplyInternal(final OIDCProviderTO modelObject) {\n+    protected Serializable onApplyInternal(final OIDCC4UIProviderTO modelObject) {\n         if (modelObject.getKey() == null) {\n             if (modelObject.getHasDiscovery()) {\n                 OIDCProviderRestClient.createFromDiscovery(modelObject);\n@@ -94,7 +97,7 @@ protected Serializable onApplyInternal(final OIDCProviderTO modelObject) {\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final OIDCProviderTO modelObject, final WizardModel wizardModel) {\n+    protected WizardModel buildModelSteps(final OIDCC4UIProviderTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new OP(modelObject));\n         if (modelObject.getKey() == null) {\n             wizardModel.add(new OPContinue(modelObject));\n@@ -141,7 +144,7 @@ public class OP extends WizardStep {\n \n         private static final long serialVersionUID = 7127421283216134900L;\n \n-        public OP(final OIDCProviderTO opTO) {\n+        public OP(final OIDCC4UIProviderTO opTO) {\n             AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n                     \"name\", \"name\", new PropertyModel<>(opTO, \"name\"), false);\n             name.addRequiredLabel();\n@@ -189,7 +192,7 @@ public static class OPContinue extends WizardStep {\n \n         private static final long serialVersionUID = -7087008312629522790L;\n \n-        public OPContinue(final OIDCProviderTO opTO) {\n+        public OPContinue(final OIDCC4UIProviderTO opTO) {\n             final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n             this.setOutputMarkupId(true);\n             content.setOutputMarkupId(true);\n@@ -257,7 +260,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             });\n         }\n \n-        public OPContinue(final OIDCProviderTO opTO, final boolean readOnly) {\n+        public OPContinue(final OIDCC4UIProviderTO opTO, final boolean readOnly) {\n             WebMarkupContainer content = new WebMarkupContainer(\"content\");\n             this.setOutputMarkupId(true);\n             content.setOutputMarkupId(true);\n@@ -324,7 +327,7 @@ private static final class Mapping extends WizardStep {\n \n         private static final long serialVersionUID = 3454904947720856253L;\n \n-        Mapping(final OIDCProviderTO item) {\n+        Mapping(final OIDCC4UIProviderTO item) {\n             setTitleModel(Model.of(\"Mapping\"));\n             setSummaryModel(Model.of(StringUtils.EMPTY));\n         }","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java"},{"sha":"2a5116c39a01e7b8bf245f7735ab74a8bdb69393","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/mapping/OIDCProviderMappingPanel.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.wicket.model.IModel;\n@@ -39,7 +39,7 @@ public class OIDCProviderMappingPanel extends AbstractMappingPanel {\n \n     public OIDCProviderMappingPanel(\n             final String id,\n-            final OIDCProviderTO opTO,\n+            final OIDCC4UIProviderTO opTO,\n             final ItemTransformersTogglePanel mapItemTransformers,\n             final JEXLTransformersTogglePanel jexlTransformers) {\n ","previous_filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/wizards/mapping/OIDCProviderMappingPanel.java"},{"sha":"b076c132d547270323dc79b4e7219c5bf30eaf91","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCC4UI.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -31,7 +31,7 @@ <h1>&nbsp;</h1>\n                 <a wicket:id=\"dashboardBr\"><i class=\"fa fa-tachometer-alt\"></i> <wicket:message key=\"dashboard\"></wicket:message></a>\n               </li>\n               <li class=\"breadcrumb-item\"><wicket:message key=\"extensions\"/></li>\n-              <li class=\"breadcrumb-item active\">OIDC Client</li>\n+              <li class=\"breadcrumb-item active\">OpenID Connect 1.0 C4UI</li>\n             </ol>\n           </div>\n         </div>","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient.html"},{"sha":"b34f11c366797b70370a25da34b3e42be36014d0","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCC4UI_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_it.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient.properties"},{"sha":"b34f11c366797b70370a25da34b3e42be36014d0","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCC4UI_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCC4UI_ru.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient_it.properties"},{"sha":"b34f11c366797b70370a25da34b3e42be36014d0","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient_pt_BR.properties"},{"sha":"ce0dbe8f344fd162dab43c231a0033ab30d2e42c","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.html"},{"sha":"0c6e94697d5f60b9577ce23242419dc08952616b","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.properties"},{"sha":"0c6e94697d5f60b9577ce23242419dc08952616b","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_it.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_it.properties"},{"sha":"0c6e94697d5f60b9577ce23242419dc08952616b","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_pt_BR.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_pt_BR.properties"},{"sha":"0c6e94697d5f60b9577ce23242419dc08952616b","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel_ru.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel_ru.properties"},{"sha":"ce0dbe8f344fd162dab43c231a0033ab30d2e42c","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCSSOLoginFormPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/panels/OIDCSSOLoginFormPanel.html"},{"sha":"11b1a5259058e6902e02b9f380d437cc5cdb4442","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$Mapping.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24Mapping.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$Mapping.html"},{"sha":"caea371991d01d1ef77a33fc23c1600e941fed65","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.html"},{"sha":"9b3313eb4e9ce493a60899bea0b03fd672fe16c2","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.properties"},{"sha":"0f8de216f477d353354c679bd547f9306dbe095c","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue.html"},{"sha":"d41462e2f92a2ccf6115703a5b54cd38de471ea6","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue.properties"},{"sha":"d41462e2f92a2ccf6115703a5b54cd38de471ea6","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_it.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_it.properties"},{"sha":"d41462e2f92a2ccf6115703a5b54cd38de471ea6","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_pt_BR.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_pt_BR.properties"},{"sha":"d41462e2f92a2ccf6115703a5b54cd38de471ea6","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OPContinue_ru.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OPContinue_ru.properties"},{"sha":"9b3313eb4e9ce493a60899bea0b03fd672fe16c2","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_it.properties"},{"sha":"9b3313eb4e9ce493a60899bea0b03fd672fe16c2","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_pt_BR.properties"},{"sha":"9b3313eb4e9ce493a60899bea0b03fd672fe16c2","filename":"ext/oidcc4ui/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_ru.properties"},{"sha":"61334fe79079d15660d0c5550725a9c7ce69e28d","filename":"ext/oidcc4ui/client-enduser/pom.xml","status":"renamed","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Enduser</name>\n-  <description>Apache Syncope Ext: OIDC Client Enduser</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Enduser</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Enduser</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -43,20 +43,15 @@ under the License.\n       <artifactId>javax.servlet-api</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-agent</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.idrepo</groupId>\n       <artifactId>syncope-client-idrepo-enduser</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-common-ui</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-common-ui</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/client-enduser/pom.xml"},{"sha":"5989fde69f83cc3fbe04246b0943bfd6f2821d15","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientBeforeLogout.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientBeforeLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientBeforeLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientBeforeLogout.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.pages;\n \n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.UrlUtils;\n import org.apache.wicket.request.cycle.RequestCycle;\n@@ -31,6 +32,7 @@ public OIDCClientBeforeLogout() {\n         super();\n \n         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n-                UrlUtils.rewriteToContextRelative(\"oidcclient/beforelogout\", RequestCycle.get())));\n+                UrlUtils.rewriteToContextRelative(OIDCC4UIConstants.URL_CONTEXT + \"/before-logout\",\n+                        RequestCycle.get())));\n     }\n }","previous_filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientBeforeLogout.java"},{"sha":"5096ec10a3bf145d98b92f3817aaf77f2f616884","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientLogin.java","status":"renamed","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogin.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,9 +21,9 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.wicket.authentication.IAuthenticationStrategy;\n import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -39,8 +39,7 @@ public class OIDCClientLogin extends WebPage {\n     public OIDCClientLogin(final PageParameters parameters) {\n         super(parameters);\n \n-        String token = (String) ((ServletWebRequest) getRequest()).getContainerRequest().\n-                getSession().getAttribute(org.apache.syncope.ext.oidcclient.agent.Constants.OIDCCLIENTJWT);\n+        String token = parameters.get(OIDCC4UIConstants.OIDCC4UI_JWT).toOptionalString();\n         if (StringUtils.isBlank(token)) {\n             LOG.error(\"No JWT found, redirecting to default greeter\");\n \n@@ -52,7 +51,7 @@ public OIDCClientLogin(final PageParameters parameters) {\n         IAuthenticationStrategy strategy = getApplication().getSecuritySettings().getAuthenticationStrategy();\n \n         if (SyncopeEnduserSession.get().authenticate(token)) {\n-            if (parameters.get(\"logoutSupported\").toBoolean(false)) {\n+            if (parameters.get(OIDCC4UIConstants.OIDCC4UI_SLO_SUPPORTED).toBoolean(false)) {\n                 SyncopeEnduserSession.get().setAttribute(Constants.BEFORE_LOGOUT_PAGE, OIDCClientBeforeLogout.class);\n             }\n \n@@ -67,5 +66,4 @@ public OIDCClientLogin(final PageParameters parameters) {\n         }\n         strategy.remove();\n     }\n-\n }","previous_filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientLogin.java"},{"sha":"e998e8e7328d9dda790555ef942e1e0e3740e724","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientLogout.java","status":"renamed","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientLogout.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.enduser.pages;\n \n-import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n@@ -29,10 +28,6 @@ public class OIDCClientLogout extends WebPage {\n     public OIDCClientLogout(final PageParameters parameters) {\n         super(parameters);\n \n-        SyncopeEnduserSession.get().cleanup();\n-\n-        SyncopeEnduserSession.get().invalidate();\n-\n         setResponsePage(getApplication().getHomePage());\n     }\n }","previous_filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientLogout.java"},{"sha":"8270e99c3db3635ff04d69f128033e6de2cba6dd","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientSelfReg.java","status":"renamed","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.pages;\n \n-import org.apache.syncope.ext.oidcclient.agent.Constants;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -36,10 +36,9 @@ public OIDCClientSelfReg(final PageParameters parameters) {\n \n         PageParameters params = new PageParameters();\n         try {\n-            params.add(\n-                    Self.NEW_USER_PARAM,\n+            params.add(Self.NEW_USER_PARAM,\n                     ((ServletWebRequest) getRequest()).getContainerRequest().\n-                            getSession().getAttribute(Constants.OIDCC4UI_NEW_USER));\n+                            getSession().getAttribute(OIDCC4UIConstants.OIDCC4UI_NEW_USER));\n         } catch (Exception e) {\n             LOG.error(\"While getting user data from social registration\", e);\n ","previous_filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientSelfReg.java"},{"sha":"ca8999430c7d58ecd31dd4dc4d8d7e30125e4d1b","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/panels/OIDCSSOLoginFormPanel.java","status":"renamed","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.panels;\n \n-import org.apache.syncope.client.common.ui.panels.AbstractOIDCSSOLoginFormPanel;\n+import org.apache.syncope.client.ui.commons.panels.AbstractOIDCSSOLoginFormPanel;\n import org.apache.syncope.client.ui.commons.BaseSession;\n \n public class OIDCSSOLoginFormPanel extends AbstractOIDCSSOLoginFormPanel {\n@@ -28,5 +28,4 @@ public class OIDCSSOLoginFormPanel extends AbstractOIDCSSOLoginFormPanel {\n     public OIDCSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id, session);\n     }\n-\n }","previous_filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/panels/OIDCSSOLoginFormPanel.java"},{"sha":"d83940d781a73a8da27996d6357b44869c84c434","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/EnduserCodeConsumerResource.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import org.apache.syncope.client.enduser.pages.OIDCClientLogin;\n+import org.apache.syncope.client.enduser.pages.Self;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.client.ui.commons.resources.oidcc4ui.CodeConsumerResource;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".codeConsumer\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/code-consumer\")\n+public class EnduserCodeConsumerResource extends CodeConsumerResource {\n+\n+    private static final long serialVersionUID = 8348262380011763032L;\n+\n+    @Override\n+    protected Class<? extends WebPage> getLoginPageClass() {\n+        return OIDCClientLogin.class;\n+    }\n+\n+    @Override\n+    protected Class<? extends WebPage> getSelfRegPageClass() {\n+        return Self.class;\n+    }\n+}"},{"sha":"8ef3bec14959f7430a76380a3025850f95f2f039","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/EnduserLogoutResource.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserLogoutResource.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import org.apache.syncope.client.enduser.pages.OIDCClientLogout;\n+import org.apache.syncope.client.ui.commons.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n+import org.apache.syncope.client.ui.commons.resources.oidcc4ui.LogoutResource;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+@Resource(\n+        key = OIDCC4UIConstants.URL_CONTEXT + \".logout\",\n+        path = \"/\" + OIDCC4UIConstants.URL_CONTEXT + \"/logout\")\n+public class EnduserLogoutResource extends LogoutResource {\n+\n+    private static final long serialVersionUID = -4250716706885039749L;\n+\n+    @Override\n+    protected Class<? extends WebPage> getLogoutPageClass() {\n+        return OIDCClientLogout.class;\n+    }\n+}"},{"sha":"ce0dbe8f344fd162dab43c231a0033ab30d2e42c","filename":"ext/oidcc4ui/client-enduser/src/main/resources/org/apache/syncope/client/enduser/panels/OIDCSSOLoginFormPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FOIDCSSOLoginFormPanel.html?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","previous_filename":"ext/oidcclient/client-enduser/src/main/resources/org/apache/syncope/client/enduser/panels/OIDCSSOLoginFormPanel.html"},{"sha":"d85ec7bb8840e9f2fad7660fc355bceeb4d77f85","filename":"ext/oidcc4ui/common-lib/pom.xml","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Common Lib</name>\n-  <description>Apache Syncope Ext: OIDC Client Common Lib</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-common-lib</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Common Lib</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Common Lib</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-common-lib</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -39,8 +39,8 @@ under the License.\n \n   <dependencies>\n     <dependency>\n-      <groupId>org.apache.syncope.common.idm</groupId>\n-      <artifactId>syncope-common-idm-lib</artifactId>\n+      <groupId>org.apache.syncope.common.am</groupId>\n+      <artifactId>syncope-common-am-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/common-lib/pom.xml"},{"sha":"7096ae19190549fb98cb5f012ab44a3812dac979","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/oidc/OIDCConstants.java","status":"renamed","additions":1,"deletions":14,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCConstants.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -16,22 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib;\n+package org.apache.syncope.common.lib.oidc;\n \n public final class OIDCConstants {\n \n-    public static final String CLIENT_ID = \"client_id\";\n-\n-    public static final String CLIENT_SECRET = \"client_secret\";\n-\n-    public static final String SCOPE = \"scope\";\n-\n-    public static final String RESPONSE_TYPE = \"response_type\";\n-\n-    public static final String STATE = \"state\";\n-    \n-    public static final String POST_LOGOUT_REDIRECT_URI = \"post_logout_redirect_uri\";\n-\n     public static final String REDIRECT_URI = \"redirect_uri\";\n \n     public static final String CODE = \"code\";\n@@ -41,5 +29,4 @@ public final class OIDCConstants {\n     private OIDCConstants() {\n         // private constructor for static utility class\n     }\n-\n }","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/OIDCConstants.java"},{"sha":"c21fb863643f4ee733c58cc67061c463f128f807","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/oidc/OIDCLoginResponse.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCLoginResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCLoginResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCLoginResponse.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib.to;\n+package org.apache.syncope.common.lib.oidc;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n@@ -28,7 +28,7 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.Attr;\n \n-public class OIDCLoginResponseTO implements Serializable {\n+public class OIDCLoginResponse implements Serializable {\n \n     private static final long serialVersionUID = -5971442076182154492L;\n ","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginResponseTO.java"},{"sha":"a0333f256873388bd171221f47fc4e90d0fd90fa","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/oidc/OIDCRequest.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Foidc%2FOIDCRequest.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.oidc;\n+\n+import java.io.Serializable;\n+\n+public class OIDCRequest implements Serializable {\n+\n+    private static final long serialVersionUID = -3509031322459942441L;\n+\n+    private String location;\n+\n+    public String getLocation() {\n+        return location;\n+    }\n+\n+    public void setLocation(final String location) {\n+        this.location = location;\n+    }\n+}"},{"sha":"f03eda74f48b3cd11359dc98115423d34275e943","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCC4UIProviderTO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCC4UIProviderTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCC4UIProviderTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCC4UIProviderTO.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -25,7 +25,7 @@\n import java.util.Optional;\n import javax.ws.rs.PathParam;\n \n-public class OIDCProviderTO implements EntityTO, ItemContainerTO {\n+public class OIDCC4UIProviderTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = -1229802774546135794L;\n \n@@ -200,8 +200,8 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem)\n-                .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem).\n+                map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n     @JacksonXmlElementWrapper(localName = \"items\")\n@@ -213,8 +213,8 @@ public List<ItemTO> getItems() {\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item)\n-                .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item).\n+                filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCProviderTO.java"},{"sha":"3f6a0a98df0aa9cadb43899d1c2b48f0908cbc70","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/types/OIDC4UIEntitlement.java","status":"renamed","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDC4UIEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDC4UIEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDC4UIEntitlement.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -24,7 +24,7 @@\n import java.util.Set;\n import java.util.TreeSet;\n \n-public final class OIDCClientEntitlement {\n+public final class OIDC4UIEntitlement {\n \n     public static final String OP_READ = \"OP_READ\";\n \n@@ -38,7 +38,7 @@ public final class OIDCClientEntitlement {\n \n     static {\n         Set<String> values = new TreeSet<>();\n-        for (Field field : OIDCClientEntitlement.class.getDeclaredFields()) {\n+        for (Field field : OIDC4UIEntitlement.class.getDeclaredFields()) {\n             if (Modifier.isStatic(field.getModifiers()) && String.class.equals(field.getType())) {\n                 values.add(field.getName());\n             }\n@@ -50,8 +50,7 @@ public static Set<String> values() {\n         return VALUES;\n     }\n \n-    private OIDCClientEntitlement() {\n+    private OIDC4UIEntitlement() {\n         // private constructor for static utility class\n     }\n-\n }","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/types/OIDCClientEntitlement.java"},{"sha":"164e47fb0360a4433f896d57deeadffa4886e714","filename":"ext/oidcc4ui/common-lib/src/main/java/org/apache/syncope/common/lib/types/OIDCClientImplementationType.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,7 +26,7 @@ public final class OIDCClientImplementationType {\n     public static final String OP_ACTIONS = \"OP_ACTIONS\";\n \n     private static final Map<String, String> VALUES = Map.ofEntries(\n-            Pair.of(OP_ACTIONS, \"org.apache.syncope.core.provisioning.api.OIDCProviderActions\"));\n+            Pair.of(OP_ACTIONS, \"org.apache.syncope.core.provisioning.api.OIDCC4UIProviderActions\"));\n \n     public static Map<String, String> values() {\n         return VALUES;","previous_filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/types/OIDCClientImplementationType.java"},{"sha":"c0d40756957200fab7493edd4ae6934cb5230b92","filename":"ext/oidcc4ui/logic/pom.xml","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,67 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: OIDC C4UI Logic</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Logic</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-logic</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core.idm</groupId>\n+      <artifactId>syncope-core-idm-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-provisioning-java</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.pac4j</groupId>\n+      <artifactId>pac4j-oidc</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"8cef563fe8d93566982f6dc3ab777084d8ec146b","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/OIDCC4UILogic.java","status":"added","additions":290,"deletions":0,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,290 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import com.nimbusds.jwt.JWTClaimsSet;\n+import com.nimbusds.jwt.SignedJWT;\n+import com.nimbusds.oauth2.sdk.AuthorizationCode;\n+import java.lang.reflect.Method;\n+import java.text.ParseException;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.oidc.OIDCRequest;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.core.logic.oidc.OIDC4UIContext;\n+import org.apache.syncope.core.logic.oidc.OIDCClientCache;\n+import org.apache.syncope.core.logic.oidc.OIDCUserManager;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.provisioning.api.data.AccessTokenDataBinder;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.AuthDataAccessor;\n+import org.apache.syncope.core.spring.security.Encryptor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n+import org.apache.syncope.core.persistence.api.dao.OIDCC4UIProviderDAO;\n+import org.pac4j.core.exception.http.WithLocationAction;\n+import org.pac4j.oidc.client.OidcClient;\n+import org.pac4j.oidc.config.OidcConfiguration;\n+import org.pac4j.oidc.credentials.OidcCredentials;\n+import org.pac4j.oidc.profile.OidcProfile;\n+\n+@Component\n+public class OIDCC4UILogic extends AbstractTransactionalLogic<EntityTO> {\n+\n+    private static final String JWT_CLAIM_OP_NAME = \"OP_NAME\";\n+\n+    private static final String JWT_CLAIM_ID_TOKEN = \"ID_TOKEN\";\n+\n+    private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n+\n+    @Autowired\n+    private OIDCClientCache oidcClientClientCache;\n+\n+    @Autowired\n+    private AuthDataAccessor authDataAccessor;\n+\n+    @Autowired\n+    private AccessTokenDataBinder accessTokenDataBinder;\n+\n+    @Autowired\n+    private OIDCC4UIProviderDAO opDAO;\n+\n+    @Autowired\n+    private OIDCUserManager userManager;\n+\n+    private OidcClient<OidcConfiguration> getOidcClient(final OIDCC4UIProvider op, final String callbackUrl) {\n+        return oidcClientClientCache.get(op.getName()).orElseGet(() -> oidcClientClientCache.add(op, callbackUrl));\n+    }\n+\n+    private OidcClient<OidcConfiguration> getOidcClient(final String opName, final String callbackUrl) {\n+        OIDCC4UIProvider op = opDAO.findByName(opName);\n+        if (op == null) {\n+            throw new NotFoundException(\"OIDC Provider '\" + opName + '\\'');\n+        }\n+\n+        return getOidcClient(op, callbackUrl);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    public OIDCRequest createLoginRequest(final String redirectURI, final String opName) {\n+        // 1. look for OidcClient\n+        OidcClient<OidcConfiguration> oidcClient = getOidcClient(opName, redirectURI);\n+        oidcClient.setCallbackUrl(redirectURI);\n+\n+        // 2. create OIDCRequest\n+        WithLocationAction action = oidcClient.getRedirectionAction(new OIDC4UIContext()).\n+                map(WithLocationAction.class::cast).\n+                orElseThrow(() -> {\n+                    SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+                    sce.getElements().add(\"No RedirectionAction generated for LoginRequest\");\n+                    return sce;\n+                });\n+\n+        OIDCRequest loginRequest = new OIDCRequest();\n+        loginRequest.setLocation(action.getLocation());\n+        return loginRequest;\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    public OIDCLoginResponse login(final String redirectURI, final String authorizationCode, final String opName) {\n+        // 0. look for OP\n+        OIDCC4UIProvider op = opDAO.findByName(opName);\n+        if (op == null) {\n+            throw new NotFoundException(\"OIDC Provider '\" + opName + '\\'');\n+        }\n+\n+        // 1. look for configured client\n+        OidcClient<OidcConfiguration> oidcClient = getOidcClient(opName, redirectURI);\n+        oidcClient.setCallbackUrl(redirectURI);\n+\n+        // 2. get OpenID Connect tokens\n+        String idTokenHint;\n+        JWTClaimsSet idToken;\n+        try {\n+            OidcCredentials credentials = new OidcCredentials();\n+            credentials.setCode(new AuthorizationCode(authorizationCode));\n+\n+            OIDC4UIContext ctx = new OIDC4UIContext();\n+\n+            oidcClient.getAuthenticator().validate(credentials, ctx);\n+\n+            idToken = credentials.getIdToken().getJWTClaimsSet();\n+            idTokenHint = credentials.getIdToken().serialize();\n+        } catch (Exception e) {\n+            LOG.error(\"While validating Token Response\", e);\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n+\n+        // 3. prepare the result\n+        OIDCLoginResponse loginResponse = new OIDCLoginResponse();\n+        loginResponse.setLogoutSupported(StringUtils.isNotBlank(op.getEndSessionEndpoint()));\n+\n+        // 3a. find matching user (if any) and return the received attributes\n+        String keyValue = idToken.getSubject();\n+        for (OIDCC4UIProviderItem item : op.getItems()) {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(item.getExtAttrName());\n+\n+            String value = idToken.getClaim(item.getExtAttrName()) == null\n+                    ? null\n+                    : idToken.getClaim(item.getExtAttrName()).toString();\n+            if (value != null) {\n+                attrTO.getValues().add(value);\n+                loginResponse.getAttrs().add(attrTO);\n+                if (item.isConnObjectKey()) {\n+                    keyValue = value;\n+                }\n+            }\n+        }\n+\n+        List<String> matchingUsers = keyValue == null\n+                ? List.of()\n+                : userManager.findMatchingUser(keyValue, op.getConnObjectKeyItem().get());\n+        LOG.debug(\"Found {} matching users for {}\", matchingUsers.size(), keyValue);\n+\n+        // 3b. not found: create or selfreg if configured\n+        String username;\n+        if (matchingUsers.isEmpty()) {\n+            if (op.isCreateUnmatching()) {\n+                LOG.debug(\"No user matching {}, about to create\", keyValue);\n+\n+                String defaultUsername = keyValue;\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n+                        () -> userManager.create(op, loginResponse, defaultUsername));\n+            } else if (op.isSelfRegUnmatching()) {\n+                UserTO userTO = new UserTO();\n+\n+                userManager.fill(op, loginResponse, userTO);\n+\n+                loginResponse.getAttrs().clear();\n+                loginResponse.getAttrs().addAll(userTO.getPlainAttrs());\n+                if (StringUtils.isNotBlank(userTO.getUsername())) {\n+                    loginResponse.setUsername(userTO.getUsername());\n+                } else {\n+                    loginResponse.setUsername(keyValue);\n+                }\n+\n+                loginResponse.setSelfReg(true);\n+\n+                return loginResponse;\n+            } else {\n+                throw new NotFoundException(Optional.ofNullable(keyValue).\n+                        map(value -> \"User matching the provided value \" + value).\n+                        orElse(\"User marching the provided claims\"));\n+            }\n+        } else if (matchingUsers.size() > 1) {\n+            throw new IllegalArgumentException(\"Several users match the provided value \" + keyValue);\n+        } else {\n+            if (op.isUpdateMatching()) {\n+                LOG.debug(\"About to update {} for {}\", matchingUsers.get(0), keyValue);\n+\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n+                        () -> userManager.update(matchingUsers.get(0), op, loginResponse));\n+            } else {\n+                username = matchingUsers.get(0);\n+            }\n+        }\n+\n+        loginResponse.setUsername(username);\n+\n+        // 4. generate JWT for further access\n+        Map<String, Object> claims = new HashMap<>();\n+        claims.put(JWT_CLAIM_OP_NAME, opName);\n+        claims.put(JWT_CLAIM_ID_TOKEN, idTokenHint);\n+\n+        byte[] authorities = null;\n+        try {\n+            authorities = ENCRYPTOR.encode(POJOHelper.serialize(\n+                    authDataAccessor.getAuthorities(loginResponse.getUsername())), CipherAlgorithm.AES).\n+                    getBytes();\n+        } catch (Exception e) {\n+            LOG.error(\"Could not fetch authorities\", e);\n+        }\n+\n+        Pair<String, Date> accessTokenInfo =\n+                accessTokenDataBinder.create(loginResponse.getUsername(), claims, authorities, true);\n+        loginResponse.setAccessToken(accessTokenInfo.getLeft());\n+        loginResponse.setAccessTokenExpiryTime(accessTokenInfo.getRight());\n+\n+        return loginResponse;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"'))\")\n+    public OIDCRequest createLogoutRequest(final String accessToken, final String redirectURI) {\n+        // 0. fetch the current JWT used for Syncope authentication\n+        JWTClaimsSet claimsSet;\n+        try {\n+            SignedJWT jwt = SignedJWT.parse(accessToken);\n+            claimsSet = jwt.getJWTClaimsSet();\n+        } catch (ParseException e) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAccessToken);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n+\n+        // 1. look for OidcClient\n+        OidcClient<OidcConfiguration> oidcClient =\n+                getOidcClient((String) claimsSet.getClaim(JWT_CLAIM_OP_NAME), redirectURI);\n+        oidcClient.setCallbackUrl(redirectURI);\n+\n+        // 2. create OIDCRequest\n+        OidcProfile profile = new OidcProfile();\n+        profile.setIdTokenString((String) claimsSet.getClaim(JWT_CLAIM_ID_TOKEN));\n+\n+        WithLocationAction action = oidcClient.getLogoutAction(\n+                new OIDC4UIContext(),\n+                profile,\n+                redirectURI).\n+                map(WithLocationAction.class::cast).\n+                orElseThrow(() -> {\n+                    SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+                    sce.getElements().add(\"No RedirectionAction generated for LogoutRequest\");\n+                    return sce;\n+                });\n+\n+        OIDCRequest logoutRequest = new OIDCRequest();\n+        logoutRequest.setLocation(action.getLocation());\n+        return logoutRequest;\n+    }\n+\n+    @Override\n+    protected EntityTO resolveReference(\n+            final Method method, final Object... args) throws UnresolvedReferenceException {\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"6c5d6461c948638af4ae5c011b8150137b2863f4","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/OIDCC4UIProviderLogic.java","status":"added","additions":148,"deletions":0,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UIProviderLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UIProviderLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UIProviderLogic.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,148 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ItemTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.OIDC4UIEntitlement;\n+import org.apache.syncope.core.logic.oidc.OIDCClientCache;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.dao.OIDCC4UIProviderDAO;\n+import org.apache.syncope.core.provisioning.api.data.OIDCC4UIProviderDataBinder;\n+\n+@Component\n+public class OIDCC4UIProviderLogic extends AbstractTransactionalLogic<OIDCC4UIProviderTO> {\n+\n+    @Autowired\n+    private OIDCClientCache oidcClientClientCache;\n+\n+    @Autowired\n+    private OIDCC4UIProviderDAO opDAO;\n+\n+    @Autowired\n+    private OIDCC4UIProviderDataBinder binder;\n+\n+    @PreAuthorize(\"hasRole('\" + OIDC4UIEntitlement.OP_CREATE + \"')\")\n+    public String createFromDiscovery(final OIDCC4UIProviderTO opTO) {\n+        OIDCClientCache.importMetadata(opTO);\n+\n+        return create(opTO);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + OIDC4UIEntitlement.OP_CREATE + \"')\")\n+    public String create(final OIDCC4UIProviderTO opTO) {\n+        if (opTO.getConnObjectKeyItem() == null) {\n+            ItemTO connObjectKeyItem = new ItemTO();\n+            connObjectKeyItem.setIntAttrName(\"username\");\n+            connObjectKeyItem.setExtAttrName(\"email\");\n+            opTO.setConnObjectKeyItem(connObjectKeyItem);\n+        }\n+\n+        OIDCC4UIProvider provider = opDAO.save(binder.create(opTO));\n+\n+        return provider.getKey();\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public List<OIDCC4UIProviderTO> list() {\n+        return opDAO.findAll().stream().map(binder::getOIDCProviderTO).collect(Collectors.toList());\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + OIDC4UIEntitlement.OP_READ + \"')\")\n+    @Transactional(readOnly = true)\n+    public OIDCC4UIProviderTO read(final String key) {\n+        OIDCC4UIProvider op = opDAO.find(key);\n+        if (op == null) {\n+            throw new NotFoundException(\"OIDC Provider '\" + key + '\\'');\n+        }\n+        return binder.getOIDCProviderTO(op);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + OIDC4UIEntitlement.OP_UPDATE + \"')\")\n+    public void update(final OIDCC4UIProviderTO opTO) {\n+        OIDCC4UIProvider op = opDAO.find(opTO.getKey());\n+        if (op == null) {\n+            throw new NotFoundException(\"OIDC Provider '\" + opTO.getKey() + '\\'');\n+        }\n+\n+        if (!op.getIssuer().equals(opTO.getIssuer())) {\n+            LOG.error(\"Issuers do not match: expected {}, found {}\",\n+                    op.getIssuer(), opTO.getIssuer());\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidEntity);\n+            sce.getElements().add(\"Issuers do not match\");\n+            throw sce;\n+        }\n+        String opName = op.getName();\n+\n+        opDAO.save(binder.update(op, opTO));\n+        oidcClientClientCache.removeAll(opName);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + OIDC4UIEntitlement.OP_DELETE + \"')\")\n+    public void delete(final String key) {\n+        OIDCC4UIProvider op = opDAO.find(key);\n+        if (op == null) {\n+            throw new NotFoundException(\"OIDC Provider '\" + key + '\\'');\n+        }\n+        String opName = op.getName();\n+\n+        opDAO.delete(key);\n+        oidcClientClientCache.removeAll(opName);\n+    }\n+\n+    @Override\n+    protected OIDCC4UIProviderTO resolveReference(\n+            final Method method, final Object... args) throws UnresolvedReferenceException {\n+\n+        String key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n+                } else if (args[i] instanceof OIDCC4UIProviderTO) {\n+                    key = ((OIDCC4UIProviderTO) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if (key != null) {\n+            try {\n+                return binder.getOIDCProviderTO(opDAO.find(key));\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"75f331cc978370dca3174848dc80540e0604c0ee","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/init/OIDCC4UILoader.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCC4UILoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCC4UILoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCC4UILoader.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -20,13 +20,13 @@\n \n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n import org.apache.syncope.common.lib.types.ImplementationTypesHolder;\n-import org.apache.syncope.common.lib.types.OIDCClientEntitlement;\n+import org.apache.syncope.common.lib.types.OIDC4UIEntitlement;\n import org.apache.syncope.common.lib.types.OIDCClientImplementationType;\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class OIDCClientLoader implements SyncopeCoreLoader {\n+public class OIDCC4UILoader implements SyncopeCoreLoader {\n \n     @Override\n     public int getOrder() {\n@@ -35,7 +35,7 @@ public int getOrder() {\n \n     @Override\n     public void load() {\n-        EntitlementsHolder.getInstance().addAll(OIDCClientEntitlement.values());\n+        EntitlementsHolder.getInstance().addAll(OIDC4UIEntitlement.values());\n         ImplementationTypesHolder.getInstance().putAll(OIDCClientImplementationType.values());\n     }\n }","previous_filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/init/OIDCClientLoader.java"},{"sha":"dbc9eae3de0b3428f8c2a022ab5a126e24f8de6a","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/model/TokenEndpointResponse.java","status":"renamed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FTokenEndpointResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FTokenEndpointResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FTokenEndpointResponse.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -82,5 +82,4 @@ public String getTokenType() {\n     public void setTokenType(final String tokenType) {\n         this.tokenType = tokenType;\n     }\n-\n }","previous_filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/model/TokenEndpointResponse.java"},{"sha":"8dcc984278863dceb3478c8f79138434535c4de7","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/NoOpLogoutHandler.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpLogoutHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpLogoutHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpLogoutHandler.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,24 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.oidc;\n+\n+import org.pac4j.core.logout.handler.LogoutHandler;\n+\n+public class NoOpLogoutHandler implements LogoutHandler<OIDC4UIContext> {\n+}"},{"sha":"11cf61f3a37940bd166f9bc9953607a55123de18","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/NoOpSessionStore.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpSessionStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpSessionStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FNoOpSessionStore.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.oidc;\n+\n+import java.util.Optional;\n+import org.pac4j.core.context.session.SessionStore;\n+\n+public final class NoOpSessionStore implements SessionStore<OIDC4UIContext> {\n+\n+    public static final NoOpSessionStore INSTANCE = new NoOpSessionStore();\n+\n+    private NoOpSessionStore() {\n+        // private constructor for singleton\n+    }\n+\n+    @Override\n+    public String getOrCreateSessionId(final OIDC4UIContext context) {\n+        return \"<NO_KEY>\";\n+    }\n+\n+    @Override\n+    public Optional<Object> get(final OIDC4UIContext context, final String key) {\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public void set(final OIDC4UIContext context, final String key, final Object value) {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public boolean destroySession(final OIDC4UIContext context) {\n+        return true;\n+    }\n+\n+    @Override\n+    public Optional<?> getTrackableSession(final OIDC4UIContext context) {\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public Optional<SessionStore<OIDC4UIContext>> buildFromTrackableSession(\n+            final OIDC4UIContext context,\n+            final Object trackableSession) {\n+\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public boolean renewSession(final OIDC4UIContext context) {\n+        return false;\n+    }\n+}"},{"sha":"9eb4fb9f1c2d9782f92632f26a9466dddb260de2","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDC4UIContext.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDC4UIContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDC4UIContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDC4UIContext.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.oidc;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import javax.ws.rs.HttpMethod;\n+import org.pac4j.core.context.Cookie;\n+import org.pac4j.core.context.WebContext;\n+import org.pac4j.core.context.session.SessionStore;\n+\n+public class OIDC4UIContext implements WebContext {\n+\n+    @Override\n+    public String getRequestMethod() {\n+        return HttpMethod.GET;\n+    }\n+\n+    @Override\n+    public SessionStore<OIDC4UIContext> getSessionStore() {\n+        return NoOpSessionStore.INSTANCE;\n+    }\n+\n+    @Override\n+    public Optional<String> getRequestParameter(final String name) {\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public Map<String, String[]> getRequestParameters() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public Optional<String> getRequestAttribute(final String name) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void setRequestAttribute(final String name, final Object value) {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public Optional<String> getRequestHeader(final String name) {\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public String getRemoteAddr() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void setResponseHeader(final String name, final String value) {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public String getServerName() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public int getServerPort() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public String getScheme() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public boolean isSecure() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public String getFullRequestURL() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public Collection<Cookie> getRequestCookies() {\n+        return Set.of();\n+    }\n+\n+    @Override\n+    public void addResponseCookie(final Cookie cookie) {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public String getPath() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void setResponseContentType(final String content) {\n+        // nothing to do\n+    }\n+}"},{"sha":"a56b193a7be19754c38307f70b24384a2a494f1d","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDCClientCache.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCClientCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCClientCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCClientCache.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.oidc;\n+\n+import com.nimbusds.oauth2.sdk.ParseException;\n+import com.nimbusds.oauth2.sdk.id.Issuer;\n+import com.nimbusds.openid.connect.sdk.SubjectType;\n+import com.nimbusds.openid.connect.sdk.op.OIDCProviderMetadata;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.pac4j.core.http.callback.NoParameterCallbackUrlResolver;\n+import org.pac4j.oidc.client.OidcClient;\n+import org.pac4j.oidc.config.OidcConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Basic in-memory cache for available {@link OidcClient} instances.\n+ */\n+@Component\n+public class OIDCClientCache {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(OIDCClientCache.class);\n+\n+    private final List<OidcClient<OidcConfiguration>> cache = Collections.synchronizedList(new ArrayList<>());\n+\n+    private static OIDCProviderMetadata getDiscoveryDocument(final String issuer) {\n+        String discoveryDocumentURL = issuer + \"/.well-known/openid-configuration\";\n+        try {\n+            HttpResponse<String> response = HttpClient.newBuilder().build().send(\n+                    HttpRequest.newBuilder(URI.create(discoveryDocumentURL)).GET().build(),\n+                    HttpResponse.BodyHandlers.ofString());\n+\n+            return OIDCProviderMetadata.parse(response.body());\n+        } catch (IOException | InterruptedException | ParseException e) {\n+            LOG.error(\"While getting the Discovery Document at {}\", discoveryDocumentURL, e);\n+\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n+    }\n+\n+    public static void importMetadata(final OIDCC4UIProviderTO opTO) {\n+        OIDCProviderMetadata metadata = getDiscoveryDocument(opTO.getIssuer());\n+\n+        opTO.setIssuer(\n+                Optional.ofNullable(metadata.getIssuer()).map(Issuer::getValue).orElse(null));\n+        opTO.setJwksUri(\n+                Optional.ofNullable(metadata.getJWKSetURI()).map(URI::toASCIIString).orElse(null));\n+        opTO.setAuthorizationEndpoint(\n+                Optional.ofNullable(metadata.getAuthorizationEndpointURI()).map(URI::toASCIIString).orElse(null));\n+        opTO.setTokenEndpoint(\n+                Optional.ofNullable(metadata.getTokenEndpointURI()).map(URI::toASCIIString).orElse(null));\n+        opTO.setUserinfoEndpoint(\n+                Optional.ofNullable(metadata.getUserInfoEndpointURI()).map(URI::toASCIIString).orElse(null));\n+        opTO.setEndSessionEndpoint(\n+                Optional.ofNullable(metadata.getEndSessionEndpointURI()).map(URI::toASCIIString).orElse(null));\n+    }\n+\n+    public Optional<OidcClient<OidcConfiguration>> get(final String opName) {\n+        return cache.stream().filter(c -> opName.equals(c.getName())).findFirst();\n+    }\n+\n+    public OidcClient<OidcConfiguration> add(final OIDCC4UIProvider op, final String callbackUrl) {\n+        OIDCProviderMetadata metadata = new OIDCProviderMetadata(\n+                new Issuer(op.getIssuer()),\n+                List.of(SubjectType.PUBLIC),\n+                Optional.ofNullable(op.getJwksUri()).map(URI::create).orElse(null));\n+        metadata.setAuthorizationEndpointURI(\n+                Optional.ofNullable(op.getAuthorizationEndpoint()).map(URI::create).orElse(null));\n+        metadata.setTokenEndpointURI(\n+                Optional.ofNullable(op.getTokenEndpoint()).map(URI::create).orElse(null));\n+        metadata.setUserInfoEndpointURI(\n+                Optional.ofNullable(op.getUserinfoEndpoint()).map(URI::create).orElse(null));\n+        metadata.setEndSessionEndpointURI(\n+                Optional.ofNullable(op.getEndSessionEndpoint()).map(URI::create).orElse(null));\n+\n+        OidcConfiguration config = new OidcConfiguration();\n+        config.setClientId(op.getClientID());\n+        config.setSecret(op.getClientSecret());\n+        config.setProviderMetadata(metadata);\n+        config.setScope(\"openid profile email address phone offline_access\");\n+        config.setUseNonce(false);\n+        config.setLogoutHandler(new NoOpLogoutHandler());\n+\n+        OidcClient<OidcConfiguration> client = new OidcClient<>(config);\n+        client.setName(op.getName());\n+        client.setCallbackUrlResolver(new NoParameterCallbackUrlResolver());\n+        client.setCallbackUrl(callbackUrl);\n+        client.init();\n+        return client;\n+    }\n+\n+    public boolean removeAll(final String opName) {\n+        return cache.removeIf(c -> opName.equals(c.getName()));\n+    }\n+}"},{"sha":"cb13fa20c5a21ba1173a53fcc0a2958a61cee759","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDCUserManager.java","status":"renamed","additions":21,"deletions":18,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -31,17 +31,14 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.OIDCProviderActions;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n@@ -55,6 +52,9 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.provisioning.api.OIDCC4UIProviderActions;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n \n @Component\n public class OIDCUserManager {\n@@ -82,16 +82,19 @@ public class OIDCUserManager {\n     private UserDataBinder binder;\n \n     @Transactional(readOnly = true)\n-    public List<String> findMatchingUser(final String connObjectKeyValue, final OIDCProviderItem connObjectKeyItem) {\n+    public List<String> findMatchingUser(\n+            final String connObjectKeyValue,\n+            final OIDCC4UIProviderItem connObjectKeyItem) {\n+\n         return inboundMatcher.matchByConnObjectKeyValue(\n                 connObjectKeyItem, connObjectKeyValue, AnyTypeKind.USER, false, null).stream().\n                 filter(match -> match.getAny() != null).\n                 map(match -> ((User) match.getAny()).getUsername()).\n                 collect(Collectors.toList());\n     }\n \n-    private List<OIDCProviderActions> getActions(final OIDCProvider op) {\n-        List<OIDCProviderActions> actions = new ArrayList<>();\n+    private List<OIDCC4UIProviderActions> getActions(final OIDCC4UIProvider op) {\n+        List<OIDCC4UIProviderActions> actions = new ArrayList<>();\n         op.getActions().forEach(impl -> {\n             try {\n                 actions.add(ImplementationManager.build(impl));\n@@ -103,10 +106,10 @@ private List<OIDCProviderActions> getActions(final OIDCProvider op) {\n         return actions;\n     }\n \n-    public void fill(final OIDCProvider op, final OIDCLoginResponseTO responseTO, final UserTO userTO) {\n+    public void fill(final OIDCC4UIProvider op, final OIDCLoginResponse loginResponse, final UserTO userTO) {\n         op.getItems().forEach(item -> {\n             List<String> values = new ArrayList<>();\n-            Optional<Attr> oidcAttr = responseTO.getAttr(item.getExtAttrName());\n+            Optional<Attr> oidcAttr = loginResponse.getAttr(item.getExtAttrName());\n             if (oidcAttr.isPresent() && !oidcAttr.get().getValues().isEmpty()) {\n                 values.addAll(oidcAttr.get().getValues());\n \n@@ -161,16 +164,16 @@ public void fill(final OIDCProvider op, final OIDCLoginResponseTO responseTO, fi\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n-    public String create(final OIDCProvider op, final OIDCLoginResponseTO responseTO, final String email) {\n+    public String create(final OIDCC4UIProvider op, final OIDCLoginResponse responseTO, final String defaultUsername) {\n         UserCR userCR = new UserCR();\n         userCR.setStorePassword(false);\n \n         if (op.getUserTemplate() != null && op.getUserTemplate().get() != null) {\n             templateUtils.apply(userCR, op.getUserTemplate().get());\n         }\n \n-        List<OIDCProviderActions> actions = getActions(op);\n-        for (OIDCProviderActions action : actions) {\n+        List<OIDCC4UIProviderActions> actions = getActions(op);\n+        for (OIDCC4UIProviderActions action : actions) {\n             userCR = action.beforeCreate(userCR, responseTO);\n         }\n \n@@ -182,39 +185,39 @@ public String create(final OIDCProvider op, final OIDCLoginResponseTO responseTO\n             userCR.setRealm(SyncopeConstants.ROOT_REALM);\n         }\n         if (userCR.getUsername() == null) {\n-            userCR.setUsername(email);\n+            userCR.setUsername(defaultUsername);\n         }\n \n         Pair<String, List<PropagationStatus>> created =\n                 provisioningManager.create(userCR, false, userCR.getUsername(), OIDC_CLIENT_CONTEXT);\n         userTO = binder.getUserTO(created.getKey());\n \n-        for (OIDCProviderActions action : actions) {\n+        for (OIDCC4UIProviderActions action : actions) {\n             userTO = action.afterCreate(userTO, responseTO);\n         }\n \n         return userTO.getUsername();\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n-    public String update(final String username, final OIDCProvider op, final OIDCLoginResponseTO responseTO) {\n+    public String update(final String username, final OIDCC4UIProvider op, final OIDCLoginResponse responseTO) {\n         UserTO userTO = binder.getUserTO(userDAO.findKey(username));\n         UserTO original = SerializationUtils.clone(userTO);\n \n         fill(op, responseTO, userTO);\n \n         UserUR userUR = AnyOperations.diff(userTO, original, true);\n \n-        List<OIDCProviderActions> actions = getActions(op);\n-        for (OIDCProviderActions action : actions) {\n+        List<OIDCC4UIProviderActions> actions = getActions(op);\n+        for (OIDCC4UIProviderActions action : actions) {\n             userUR = action.beforeUpdate(userUR, responseTO);\n         }\n \n         Pair<UserUR, List<PropagationStatus>> updated =\n                 provisioningManager.update(userUR, false, userTO.getUsername(), OIDC_CLIENT_CONTEXT);\n         userTO = binder.getUserTO(updated.getLeft().getKey());\n \n-        for (OIDCProviderActions action : actions) {\n+        for (OIDCC4UIProviderActions action : actions) {\n             userTO = action.afterUpdate(userTO, responseTO);\n         }\n ","previous_filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDCUserManager.java"},{"sha":"b0b7dcb51d1ada803a49dc4659132f9d991f68b4","filename":"ext/oidcc4ui/persistence-api/pom.xml","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Persistence API</name>\n-  <description>Apache Syncope Ext: OIDC Client Persistence API</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-persistence-api</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Persistence API</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Persistence API</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-persistence-api</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -44,8 +44,8 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-common-lib</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-common-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/persistence-api/pom.xml"},{"sha":"93e795e80ad7431e007762bb59b3a5c90e639fd5","filename":"ext/oidcc4ui/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/OIDCC4UIProviderDAO.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FOIDCC4UIProviderDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FOIDCC4UIProviderDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FOIDCC4UIProviderDAO.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -19,17 +19,17 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n \n-public interface OIDCProviderDAO {\n+public interface OIDCC4UIProviderDAO {\n \n-    OIDCProvider find(String key);\n+    OIDCC4UIProvider find(String key);\n \n-    OIDCProvider findByName(String name);\n+    OIDCC4UIProvider findByName(String name);\n \n-    List<OIDCProvider> findAll();\n+    List<OIDCC4UIProvider> findAll();\n \n-    OIDCProvider save(OIDCProvider op);\n+    OIDCC4UIProvider save(OIDCC4UIProvider op);\n \n     void delete(String key);\n }","previous_filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/OIDCProviderDAO.java"},{"sha":"51c9612264cc5d082ac5ea660267091e50623d4b","filename":"ext/oidcc4ui/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCC4UIEntityFactory.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIEntityFactory.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface OIDCEntityFactory {\n+public interface OIDCC4UIEntityFactory {\n \n     <E extends Entity> E newEntity(Class<E> reference);\n ","previous_filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCEntityFactory.java"},{"sha":"7f3bc7892775e7e69112683afb5cb2f12a6b7063","filename":"ext/oidcc4ui/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCC4UIProvider.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProvider.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import java.util.Optional;\n \n-public interface OIDCProvider extends Entity {\n+public interface OIDCC4UIProvider extends Entity {\n \n     String getName();\n \n@@ -75,17 +75,17 @@ public interface OIDCProvider extends Entity {\n \n     void setUpdateMatching(boolean updateMatching);\n \n-    OIDCUserTemplate getUserTemplate();\n+    OIDCC4UIUserTemplate getUserTemplate();\n \n-    void setUserTemplate(OIDCUserTemplate userTemplate);\n+    void setUserTemplate(OIDCC4UIUserTemplate userTemplate);\n \n-    List<? extends OIDCProviderItem> getItems();\n+    List<? extends OIDCC4UIProviderItem> getItems();\n \n-    Optional<? extends OIDCProviderItem> getConnObjectKeyItem();\n+    Optional<? extends OIDCC4UIProviderItem> getConnObjectKeyItem();\n \n-    void setConnObjectKeyItem(OIDCProviderItem item);\n+    void setConnObjectKeyItem(OIDCC4UIProviderItem item);\n \n-    boolean add(OIDCProviderItem item);\n+    boolean add(OIDCC4UIProviderItem item);\n \n     boolean add(Implementation action);\n ","previous_filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCProvider.java"},{"sha":"8f87121562fba39ab7efedfa57c6ad91d7766913","filename":"ext/oidcc4ui/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCC4UIProviderItem.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProviderItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProviderItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIProviderItem.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -20,10 +20,10 @@\n \n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n \n-public interface OIDCProviderItem extends Item {\n+public interface OIDCC4UIProviderItem extends Item {\n \n-    OIDCProvider getOP();\n+    OIDCC4UIProvider getOP();\n \n-    void setOP(OIDCProvider op);\n+    void setOP(OIDCC4UIProvider op);\n \n }","previous_filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCProviderItem.java"},{"sha":"f8ddb38779e5e4d5fb2c99f9a6664ee1b80c9538","filename":"ext/oidcc4ui/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCC4UIUserTemplate.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIUserTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIUserTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCC4UIUserTemplate.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface OIDCUserTemplate extends AnyTemplate {\n+public interface OIDCC4UIUserTemplate extends AnyTemplate {\n \n-    OIDCProvider getOP();\n+    OIDCC4UIProvider getOP();\n \n-    void setOP(OIDCProvider op);\n+    void setOP(OIDCC4UIProvider op);\n \n }","previous_filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCUserTemplate.java"},{"sha":"1628636f956ddbedbc704b811fb6b976596b434b","filename":"ext/oidcc4ui/persistence-jpa/pom.xml","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Persistence JPA</name>\n-  <description>Apache Syncope Ext: OIDC Client Persistence JPA</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Persistence JPA</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Persistence JPA</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-persistence-jpa</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -44,8 +44,8 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-persistence-api</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-persistence-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/persistence-jpa/pom.xml"},{"sha":"a4e4f3511e14462f69ee1f7d3d4a1ba138f72353","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAOIDCC4UIProviderDAO.java","status":"renamed","additions":16,"deletions":17,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCC4UIProviderDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCC4UIProviderDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCC4UIProviderDAO.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,30 +21,30 @@\n import java.util.List;\n import javax.persistence.NoResultException;\n import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.api.dao.OIDCProviderDAO;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAOIDCProvider;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAOIDCC4UIProvider;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.dao.OIDCC4UIProviderDAO;\n \n @Repository\n-public class JPAOIDCProviderDAO extends AbstractDAO<OIDCProvider> implements OIDCProviderDAO {\n+public class JPAOIDCC4UIProviderDAO extends AbstractDAO<OIDCC4UIProvider> implements OIDCC4UIProviderDAO {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public OIDCProvider find(final String key) {\n-        return entityManager().find(JPAOIDCProvider.class, key);\n+    public OIDCC4UIProvider find(final String key) {\n+        return entityManager().find(JPAOIDCC4UIProvider.class, key);\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n-    public OIDCProvider findByName(final String name) {\n-        TypedQuery<OIDCProvider> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAOIDCProvider.class.getSimpleName()\n-                + \" e WHERE e.name = :name\", OIDCProvider.class);\n+    public OIDCC4UIProvider findByName(final String name) {\n+        TypedQuery<OIDCC4UIProvider> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPAOIDCC4UIProvider.class.getSimpleName()\n+                + \" e WHERE e.name = :name\", OIDCC4UIProvider.class);\n         query.setParameter(\"name\", name);\n \n-        OIDCProvider result = null;\n+        OIDCC4UIProvider result = null;\n         try {\n             result = query.getSingleResult();\n         } catch (NoResultException e) {\n@@ -56,23 +56,22 @@ public OIDCProvider findByName(final String name) {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public List<OIDCProvider> findAll() {\n-        TypedQuery<OIDCProvider> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAOIDCProvider.class.getSimpleName() + \" e\", OIDCProvider.class);\n+    public List<OIDCC4UIProvider> findAll() {\n+        TypedQuery<OIDCC4UIProvider> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPAOIDCC4UIProvider.class.getSimpleName() + \" e\", OIDCC4UIProvider.class);\n         return query.getResultList();\n     }\n \n     @Override\n-    public OIDCProvider save(final OIDCProvider op) {\n+    public OIDCC4UIProvider save(final OIDCC4UIProvider op) {\n         return entityManager().merge(op);\n     }\n \n     @Override\n     public void delete(final String key) {\n-        OIDCProvider op = find(key);\n+        OIDCC4UIProvider op = find(key);\n         if (op != null) {\n             entityManager().remove(op);\n         }\n     }\n-\n }","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAOIDCProviderDAO.java"},{"sha":"e5552b08a75721e78cbdd480bf62fe4d3369af73","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCC4UIEntityFactory.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIEntityFactory.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -19,27 +19,27 @@\n package org.apache.syncope.core.persistence.jpa.entity;\n \n import org.apache.syncope.core.persistence.api.entity.Entity;\n-import org.apache.syncope.core.persistence.api.entity.OIDCEntityFactory;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n-import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIEntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIUserTemplate;\n \n @Component\n-public class JPAOIDCEntityFactory implements OIDCEntityFactory {\n+public class JPAOIDCC4UIEntityFactory implements OIDCC4UIEntityFactory {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <E extends Entity> E newEntity(final Class<E> reference) {\n         E result;\n \n-        if (reference.equals(OIDCProvider.class)) {\n-            result = (E) new JPAOIDCProvider();\n-        } else if (reference.equals(OIDCProviderItem.class)) {\n-            result = (E) new JPAOIDCProviderItem();\n-        } else if (reference.equals(OIDCUserTemplate.class)) {\n-            result = (E) new JPAOIDCUserTemplate();\n+        if (reference.equals(OIDCC4UIProvider.class)) {\n+            result = (E) new JPAOIDCC4UIProvider();\n+        } else if (reference.equals(OIDCC4UIProviderItem.class)) {\n+            result = (E) new JPAOIDCC4UIProviderItem();\n+        } else if (reference.equals(OIDCC4UIUserTemplate.class)) {\n+            result = (E) new JPAOIDCC4UIUserTemplate();\n         } else {\n             throw new IllegalArgumentException(\"Could not find a JPA implementation of \" + reference.getName());\n         }","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCEntityFactory.java"},{"sha":"48301e5a065db928bfe867f13a0bb886d7bf3046","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCC4UIProvider.java","status":"renamed","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProvider.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -35,17 +35,17 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.OIDCClientImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n-import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.OIDCProviderCheck;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIUserTemplate;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.OIDCC4UIProviderCheck;\n \n @Entity\n-@Table(name = JPAOIDCProvider.TABLE)\n+@Table(name = JPAOIDCC4UIProvider.TABLE)\n @Cacheable\n-@OIDCProviderCheck\n-public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCProvider {\n+@OIDCC4UIProviderCheck\n+public class JPAOIDCC4UIProvider extends AbstractGeneratedKeyEntity implements OIDCC4UIProvider {\n \n     public static final String TABLE = \"OIDCProvider\";\n \n@@ -82,10 +82,10 @@ public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCP\n     private boolean hasDiscovery;\n \n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"op\")\n-    private JPAOIDCUserTemplate userTemplate;\n+    private JPAOIDCC4UIUserTemplate userTemplate;\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"op\")\n-    private List<JPAOIDCProviderItem> items = new ArrayList<>();\n+    private List<JPAOIDCC4UIProviderItem> items = new ArrayList<>();\n \n     @NotNull\n     private Boolean createUnmatching = false;\n@@ -235,34 +235,34 @@ public void setUpdateMatching(final boolean updateMatching) {\n     }\n \n     @Override\n-    public OIDCUserTemplate getUserTemplate() {\n+    public OIDCC4UIUserTemplate getUserTemplate() {\n         return userTemplate;\n     }\n \n     @Override\n-    public void setUserTemplate(final OIDCUserTemplate userTemplate) {\n-        checkType(userTemplate, JPAOIDCUserTemplate.class);\n-        this.userTemplate = (JPAOIDCUserTemplate) userTemplate;\n+    public void setUserTemplate(final OIDCC4UIUserTemplate userTemplate) {\n+        checkType(userTemplate, JPAOIDCC4UIUserTemplate.class);\n+        this.userTemplate = (JPAOIDCC4UIUserTemplate) userTemplate;\n     }\n \n     @Override\n-    public boolean add(final OIDCProviderItem item) {\n-        checkType(item, JPAOIDCProviderItem.class);\n-        return items.contains((JPAOIDCProviderItem) item) || items.add((JPAOIDCProviderItem) item);\n+    public boolean add(final OIDCC4UIProviderItem item) {\n+        checkType(item, JPAOIDCC4UIProviderItem.class);\n+        return items.contains((JPAOIDCC4UIProviderItem) item) || items.add((JPAOIDCC4UIProviderItem) item);\n     }\n \n     @Override\n-    public List<? extends OIDCProviderItem> getItems() {\n+    public List<? extends OIDCC4UIProviderItem> getItems() {\n         return items;\n     }\n \n     @Override\n-    public Optional<? extends OIDCProviderItem> getConnObjectKeyItem() {\n+    public Optional<? extends OIDCC4UIProviderItem> getConnObjectKeyItem() {\n         return getItems().stream().filter(Item::isConnObjectKey).findFirst();\n     }\n \n     @Override\n-    public void setConnObjectKeyItem(final OIDCProviderItem item) {\n+    public void setConnObjectKeyItem(final OIDCC4UIProviderItem item) {\n         item.setConnObjectKey(true);\n         this.add(item);\n     }","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCProvider.java"},{"sha":"85ee0a659336af0936296e8abf70ee9c5b2d6629","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCC4UIProviderItem.java","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProviderItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProviderItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIProviderItem.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -31,31 +31,31 @@\n import javax.persistence.UniqueConstraint;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n import org.apache.syncope.core.persistence.jpa.entity.resource.AbstractItem;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n \n @Entity\n-@Table(name = JPAOIDCProviderItem.TABLE)\n+@Table(name = JPAOIDCC4UIProviderItem.TABLE)\n @Cacheable\n-public class JPAOIDCProviderItem extends AbstractItem implements OIDCProviderItem {\n+public class JPAOIDCC4UIProviderItem extends AbstractItem implements OIDCC4UIProviderItem {\n \n     public static final String TABLE = \"OIDCProviderItem\";\n \n     private static final long serialVersionUID = -6903418265811089724L;\n \n     @ManyToOne\n-    private JPAOIDCProvider op;\n+    private JPAOIDCC4UIProvider op;\n \n     @Override\n-    public OIDCProvider getOP() {\n+    public OIDCC4UIProvider getOP() {\n         return op;\n     }\n \n     @Override\n-    public void setOP(final OIDCProvider op) {\n-        checkType(op, JPAOIDCProvider.class);\n-        this.op = (JPAOIDCProvider) op;\n+    public void setOP(final OIDCC4UIProvider op) {\n+        checkType(op, JPAOIDCC4UIProvider.class);\n+        this.op = (JPAOIDCC4UIProvider) op;\n     }\n \n     @ManyToMany(fetch = FetchType.EAGER)","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCProviderItem.java"},{"sha":"303c4090def8833d996ca906f2c19f65474a6222","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCC4UIUserTemplate.java","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIUserTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIUserTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCC4UIUserTemplate.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -22,31 +22,31 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n import org.apache.syncope.core.persistence.jpa.entity.resource.AbstractAnyTemplate;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIUserTemplate;\n \n @Entity\n-@Table(name = JPAOIDCUserTemplate.TABLE, uniqueConstraints =\n+@Table(name = JPAOIDCC4UIUserTemplate.TABLE, uniqueConstraints =\n         @UniqueConstraint(columnNames = { \"op_id\" }))\n-public class JPAOIDCUserTemplate extends AbstractAnyTemplate implements OIDCUserTemplate {\n+public class JPAOIDCC4UIUserTemplate extends AbstractAnyTemplate implements OIDCC4UIUserTemplate {\n \n     public static final String TABLE = \"OIDCUserTemplate\";\n \n     private static final long serialVersionUID = 3964321047520954968L;\n \n     @ManyToOne\n-    private JPAOIDCProvider op;\n+    private JPAOIDCC4UIProvider op;\n \n     @Override\n-    public OIDCProvider getOP() {\n+    public OIDCC4UIProvider getOP() {\n         return op;\n     }\n \n     @Override\n-    public void setOP(final OIDCProvider op) {\n-        checkType(op, JPAOIDCProvider.class);\n-        this.op = (JPAOIDCProvider) op;\n+    public void setOP(final OIDCC4UIProvider op) {\n+        checkType(op, JPAOIDCC4UIProvider.class);\n+        this.op = (JPAOIDCC4UIProvider) op;\n     }\n \n }","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCUserTemplate.java"},{"sha":"41f9eed632beb5e2424eaba78e8a8dbf3f7068ac","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCC4UIProviderCheck.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderCheck.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -29,11 +29,11 @@\n \n @Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = OIDCProviderValidator.class)\n+@Constraint(validatedBy = OIDCC4UIProviderValidator.class)\n @Documented\n-public @interface OIDCProviderCheck {\n+public @interface OIDCC4UIProviderCheck {\n \n-    String message() default \"{org.apache.syncope.core.persistence.validation.oidcprovider}\";\n+    String message() default \"{org.apache.syncope.core.persistence.validation.oidcc4uiprovider}\";\n \n     Class<?>[] groups() default {};\n ","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCProviderCheck.java"},{"sha":"53560adf2ef2b5317e2dd10fed1feb5ee34bbbcd","filename":"ext/oidcc4ui/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCC4UIProviderValidator.java","status":"renamed","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCC4UIProviderValidator.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,14 +21,14 @@\n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n \n-public class OIDCProviderValidator extends AbstractValidator<OIDCProviderCheck, OIDCProvider> {\n+public class OIDCC4UIProviderValidator extends AbstractValidator<OIDCC4UIProviderCheck, OIDCC4UIProvider> {\n \n     @Override\n-    public boolean isValid(final OIDCProvider oidcProvider, final ConstraintValidatorContext context) {\n+    public boolean isValid(final OIDCC4UIProvider oidcProvider, final ConstraintValidatorContext context) {\n         context.disableDefaultConstraintViolation();\n \n         if (isHtml(oidcProvider.getKey())) {\n@@ -90,5 +90,4 @@ public boolean isValid(final OIDCProvider oidcProvider, final ConstraintValidato\n \n         return isValid[0];\n     }\n-\n }","previous_filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCProviderValidator.java"},{"sha":"92974c73365b2caff628ab596046e1192fb837a7","filename":"ext/oidcc4ui/pom.xml","status":"renamed","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -27,10 +27,10 @@ under the License.\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client</name>\n-  <description>Apache Syncope Ext: OIDC Client</description>\n+  <name>Apache Syncope Ext: OIDC C4UI</name>\n+  <description>Apache Syncope Ext: OIDC C4UI</description>\n   <groupId>org.apache.syncope.ext</groupId>\n-  <artifactId>syncope-ext-oidcclient</artifactId>\n+  <artifactId>syncope-ext-oidcc4ui</artifactId>\n   <packaging>pom</packaging>\n   \n   <properties>\n@@ -45,7 +45,6 @@ under the License.\n     <module>rest-cxf</module>\n     <module>persistence-api</module>\n     <module>persistence-jpa</module>\n-    <module>agent</module>\n     <module>client-console</module>\n     <module>client-enduser</module>\n     <module>provisioning-api</module>","previous_filename":"ext/oidcclient/pom.xml"},{"sha":"74857e5b3611be93218ea1cddd303dda1bebd01a","filename":"ext/oidcc4ui/provisioning-api/pom.xml","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fprovisioning-api%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Provisioning API</name>\n-  <description>Apache Syncope Ext: OIDC Client Provisioning API</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-provisioning-api</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Provisioning API</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Provisioning API</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-provisioning-api</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -45,13 +45,13 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-persistence-api</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-persistence-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-common-lib</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-common-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/provisioning-api/pom.xml"},{"sha":"d0e47a21b0197d97612f83404714e21eb24eef51","filename":"ext/oidcc4ui/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/OIDCC4UIProviderActions.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCC4UIProviderActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCC4UIProviderActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FOIDCC4UIProviderActions.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -20,24 +20,24 @@\n \n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n import org.apache.syncope.common.lib.to.UserTO;\n \n-public interface OIDCProviderActions {\n+public interface OIDCC4UIProviderActions {\n \n-    default UserCR beforeCreate(UserCR input, OIDCLoginResponseTO loginResponse) {\n+    default UserCR beforeCreate(UserCR input, OIDCLoginResponse loginResponse) {\n         return input;\n     }\n \n-    default UserTO afterCreate(UserTO input, OIDCLoginResponseTO loginResponse) {\n+    default UserTO afterCreate(UserTO input, OIDCLoginResponse loginResponse) {\n         return input;\n     }\n \n-    default UserUR beforeUpdate(UserUR input, OIDCLoginResponseTO loginResponse) {\n+    default UserUR beforeUpdate(UserUR input, OIDCLoginResponse loginResponse) {\n         return input;\n     }\n \n-    default UserTO afterUpdate(UserTO input, OIDCLoginResponseTO loginResponse) {\n+    default UserTO afterUpdate(UserTO input, OIDCLoginResponse loginResponse) {\n         return input;\n     }\n }","previous_filename":"ext/oidcclient/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/OIDCProviderActions.java"},{"sha":"803c59467eb38eb1fa011fa420996e4b1d4e3a56","filename":"ext/oidcc4ui/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/OIDCC4UIProviderDataBinder.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCC4UIProviderDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCC4UIProviderDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCC4UIProviderDataBinder.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,15 +18,15 @@\n  */\n package org.apache.syncope.core.provisioning.api.data;\n \n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n \n-public interface OIDCProviderDataBinder {\n+public interface OIDCC4UIProviderDataBinder {\n \n-    OIDCProvider create(OIDCProviderTO op);\n+    OIDCC4UIProvider create(OIDCC4UIProviderTO op);\n \n-    OIDCProvider update(OIDCProvider op, OIDCProviderTO opTO);\n+    OIDCC4UIProvider update(OIDCC4UIProvider op, OIDCC4UIProviderTO opTO);\n \n-    OIDCProviderTO getOIDCProviderTO(OIDCProvider op);\n+    OIDCC4UIProviderTO getOIDCProviderTO(OIDCC4UIProvider op);\n \n }","previous_filename":"ext/oidcclient/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/OIDCProviderDataBinder.java"},{"sha":"a144a0e7fd6258814bdc11546e61632fce97955f","filename":"ext/oidcc4ui/provisioning-java/pom.xml","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fprovisioning-java%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client Provisioning Java</name>\n-  <description>Apache Syncope Ext: OIDC Client Provisioning Java</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-provisioning-java</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI Provisioning Java</name>\n+  <description>Apache Syncope Ext: OIDC C4UI Provisioning Java</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-provisioning-java</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -44,8 +44,8 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-provisioning-api</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-provisioning-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/provisioning-java/pom.xml"},{"sha":"ff7d13873e75b0817bab9e2949c0fab485cfd23e","filename":"ext/oidcc4ui/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/OIDCC4UIProviderDataBinderImpl.java","status":"renamed","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCC4UIProviderDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCC4UIProviderDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCC4UIProviderDataBinderImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,56 +23,56 @@\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n-import org.apache.syncope.core.persistence.api.dao.OIDCProviderDAO;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n-import org.apache.syncope.core.persistence.api.entity.OIDCEntityFactory;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n-import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n-import org.apache.syncope.core.provisioning.api.data.OIDCProviderDataBinder;\n import org.apache.syncope.core.provisioning.api.jexl.JexlUtils;\n import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIEntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProvider;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIProviderItem;\n+import org.apache.syncope.core.persistence.api.entity.OIDCC4UIUserTemplate;\n+import org.apache.syncope.core.persistence.api.dao.OIDCC4UIProviderDAO;\n+import org.apache.syncope.core.provisioning.api.data.OIDCC4UIProviderDataBinder;\n \n @Component\n-public class OIDCProviderDataBinderImpl implements OIDCProviderDataBinder {\n+public class OIDCC4UIProviderDataBinderImpl implements OIDCC4UIProviderDataBinder {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(OIDCProviderDataBinder.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(OIDCC4UIProviderDataBinder.class);\n \n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n \n     @Autowired\n-    private OIDCProviderDAO oidcOPDAO;\n+    private OIDCC4UIProviderDAO oidcOPDAO;\n \n     @Autowired\n     private ImplementationDAO implementationDAO;\n \n     @Autowired\n-    private OIDCEntityFactory entityFactory;\n+    private OIDCC4UIEntityFactory entityFactory;\n \n     @Autowired\n     private IntAttrNameParser intAttrNameParser;\n \n     @Override\n-    public OIDCProvider create(final OIDCProviderTO opTO) {\n-        return update(entityFactory.newEntity(OIDCProvider.class), opTO);\n+    public OIDCC4UIProvider create(final OIDCC4UIProviderTO opTO) {\n+        return update(entityFactory.newEntity(OIDCC4UIProvider.class), opTO);\n     }\n \n-    private void populateItems(final OIDCProviderTO opTO, final OIDCProvider op) {\n+    private void populateItems(final OIDCC4UIProviderTO opTO, final OIDCC4UIProvider op) {\n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n         SyncopeClientException invalidMapping =\n                 SyncopeClientException.build(ClientExceptionType.InvalidMapping);\n@@ -108,7 +108,7 @@ private void populateItems(final OIDCProviderTO opTO, final OIDCProvider op) {\n                         scce.addException(invalidMandatoryCondition);\n                     }\n \n-                    OIDCProviderItem item = entityFactory.newEntity(OIDCProviderItem.class);\n+                    OIDCC4UIProviderItem item = entityFactory.newEntity(OIDCC4UIProviderItem.class);\n                     item.setIntAttrName(itemTO.getIntAttrName());\n                     item.setExtAttrName(itemTO.getExtAttrName());\n                     item.setMandatoryCondition(itemTO.getMandatoryCondition());\n@@ -145,7 +145,7 @@ private void populateItems(final OIDCProviderTO opTO, final OIDCProvider op) {\n     }\n \n     @Override\n-    public OIDCProvider update(final OIDCProvider op, final OIDCProviderTO opTO) {\n+    public OIDCC4UIProvider update(final OIDCC4UIProvider op, final OIDCC4UIProviderTO opTO) {\n         op.setAuthorizationEndpoint(opTO.getAuthorizationEndpoint());\n         op.setClientID(opTO.getClientID());\n         op.setClientSecret(opTO.getClientSecret());\n@@ -163,9 +163,9 @@ public OIDCProvider update(final OIDCProvider op, final OIDCProviderTO opTO) {\n         if (opTO.getUserTemplate() == null) {\n             op.setUserTemplate(null);\n         } else {\n-            OIDCUserTemplate userTemplate = op.getUserTemplate();\n+            OIDCC4UIUserTemplate userTemplate = op.getUserTemplate();\n             if (userTemplate == null) {\n-                userTemplate = entityFactory.newEntity(OIDCUserTemplate.class);\n+                userTemplate = entityFactory.newEntity(OIDCC4UIUserTemplate.class);\n                 userTemplate.setAnyType(anyTypeDAO.findUser());\n                 userTemplate.setOP(op);\n                 op.setUserTemplate(userTemplate);\n@@ -190,7 +190,7 @@ public OIDCProvider update(final OIDCProvider op, final OIDCProviderTO opTO) {\n         return oidcOPDAO.save(op);\n     }\n \n-    private static void populateItems(final OIDCProvider op, final OIDCProviderTO opTO) {\n+    private static void populateItems(final OIDCC4UIProvider op, final OIDCC4UIProviderTO opTO) {\n         op.getItems().forEach(item -> {\n             ItemTO itemTO = new ItemTO();\n             itemTO.setKey(item.getKey());\n@@ -212,8 +212,8 @@ private static void populateItems(final OIDCProvider op, final OIDCProviderTO op\n     }\n \n     @Override\n-    public OIDCProviderTO getOIDCProviderTO(final OIDCProvider op) {\n-        OIDCProviderTO opTO = new OIDCProviderTO();\n+    public OIDCC4UIProviderTO getOIDCProviderTO(final OIDCC4UIProvider op) {\n+        OIDCC4UIProviderTO opTO = new OIDCC4UIProviderTO();\n \n         opTO.setKey(op.getKey());\n         opTO.setAuthorizationEndpoint(op.getAuthorizationEndpoint());","previous_filename":"ext/oidcclient/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/OIDCProviderDataBinderImpl.java"},{"sha":"f1dc0c26ffaee2c738661623735a338fcf7dcec9","filename":"ext/oidcc4ui/rest-api/pom.xml","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-api%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client REST API</name>\n-  <description>Apache Syncope Ext: OIDC Client REST API</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-rest-api</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI REST API</name>\n+  <description>Apache Syncope Ext: OIDC C4UI REST API</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-rest-api</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n     \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-common-lib</artifactId>      \n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-common-lib</artifactId>      \n       <version>${project.version}</version>\n     </dependency>    \n   </dependencies>","previous_filename":"ext/oidcclient/rest-api/pom.xml"},{"sha":"91d2bf07d245cb333fc3194f1985834347b7362e","filename":"ext/oidcc4ui/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCC4UIProviderService.java","status":"renamed","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIProviderService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIProviderService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIProviderService.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -35,7 +35,7 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import java.util.List;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.PUT;\n@@ -46,12 +46,12 @@\n /**\n  * REST operations for OpenID Connect Providers.\n  */\n-@Tag(name = \"OpenID Connect 1.0\")\n+@Tag(name = \"OpenID Connect 1.0 C4UI\")\n @SecurityRequirements({\n     @SecurityRequirement(name = \"BasicAuthentication\"),\n     @SecurityRequirement(name = \"Bearer\") })\n-@Path(\"oidcclient/providers\")\n-public interface OIDCProviderService extends JAXRSService {\n+@Path(\"oidcc4ui/providers\")\n+public interface OIDCC4UIProviderService extends JAXRSService {\n \n     /**\n      * Returns a list of all defined OIDC Providers.\n@@ -60,7 +60,7 @@ public interface OIDCProviderService extends JAXRSService {\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<OIDCProviderTO> list();\n+    List<OIDCC4UIProviderTO> list();\n \n     /**\n      * Returns the OIDC Provider with matching key, if available.\n@@ -71,7 +71,7 @@ public interface OIDCProviderService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    OIDCProviderTO read(@PathParam(\"key\") String key);\n+    OIDCC4UIProviderTO read(@PathParam(\"key\") String key);\n \n     /**\n      * Creates a new OIDC Provider.\n@@ -91,7 +91,7 @@ public interface OIDCProviderService extends JAXRSService {\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Response create(OIDCProviderTO oidcProviderTO);\n+    Response create(OIDCC4UIProviderTO oidcProviderTO);\n \n     /**\n      * Creates a new OIDC Provider by using its Discovery Document.\n@@ -112,7 +112,7 @@ public interface OIDCProviderService extends JAXRSService {\n     @Path(\"fromDiscovery\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Response createFromDiscovery(OIDCProviderTO oidcProviderTO);\n+    Response createFromDiscovery(OIDCC4UIProviderTO oidcProviderTO);\n \n     /**\n      * Updates the OIDC Provider with matching key.\n@@ -127,7 +127,7 @@ public interface OIDCProviderService extends JAXRSService {\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void update(@NotNull OIDCProviderTO oidcProviderTO);\n+    void update(@NotNull OIDCC4UIProviderTO oidcProviderTO);\n \n     /**\n      * Deletes the OIDC Provider with matching key.\n@@ -140,5 +140,4 @@ public interface OIDCProviderService extends JAXRSService {\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     void delete(@PathParam(\"key\") String key);\n-\n }","previous_filename":"ext/oidcclient/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCProviderService.java"},{"sha":"be1a1f0f46664bfe2319ab2007b6686a592064b3","filename":"ext/oidcc4ui/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCC4UIService.java","status":"renamed","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCC4UIService.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,21 +26,20 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.common.lib.OIDCConstants;\n-import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n-import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n+import org.apache.syncope.common.lib.oidc.OIDCConstants;\n+import org.apache.syncope.common.lib.oidc.OIDCRequest;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n  * REST operations for OpenID Connect Clients.\n  */\n-@Tag(name = \"OpenID Connect 1.0\")\n+@Tag(name = \"OpenID Connect 1.0 C4UI\")\n @SecurityRequirements({\n     @SecurityRequirement(name = \"BasicAuthentication\"),\n     @SecurityRequirement(name = \"Bearer\") })\n-@Path(\"oidcclient/clients\")\n-public interface OIDCClientService extends JAXRSService {\n+@Path(\"oidcc4ui/clients\")\n+public interface OIDCC4UIService extends JAXRSService {\n \n     /**\n      * Generates OpenID Connect authentication request for the Provider matching the provided op.\n@@ -52,7 +51,7 @@ public interface OIDCClientService extends JAXRSService {\n     @POST\n     @Path(\"loginRequest\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    OIDCLoginRequestTO createLoginRequest(\n+    OIDCRequest createLoginRequest(\n             @QueryParam(OIDCConstants.REDIRECT_URI) String redirectURI,\n             @QueryParam(OIDCConstants.OP) String op);\n \n@@ -68,20 +67,19 @@ OIDCLoginRequestTO createLoginRequest(\n     @POST\n     @Path(\"login\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    OIDCLoginResponseTO login(\n+    OIDCLoginResponse login(\n             @QueryParam(OIDCConstants.REDIRECT_URI) String redirectURI,\n             @QueryParam(\"authorizationCode\") String authorizationCode,\n             @QueryParam(OIDCConstants.OP) String op);\n \n     /**\n-     * Returns the endSession endpoint for the provided op.\n+     * Returns the endSession endpoint for the OP matching the requesting access token.\n      *\n-     * @param op OpenID Connect Provider\n-     * @return endSession endpoint for the provided op\n+     * @param redirectURI redirect URI\n+     * @return endSession endpoint for the OP matching the requesting access token\n      */\n     @POST\n     @Path(\"logout\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    OIDCLogoutRequestTO createLogoutRequest(@QueryParam(OIDCConstants.OP) String op);\n-\n+    OIDCRequest createLogoutRequest(@QueryParam(OIDCConstants.REDIRECT_URI) String redirectURI);\n }","previous_filename":"ext/oidcclient/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCClientService.java"},{"sha":"c298fe9b6f3a2a8020f4cd5e2bc170a916f757fb","filename":"ext/oidcc4ui/rest-cxf/pom.xml","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-cxf%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <parent>\n     <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n+    <artifactId>syncope-ext-oidcc4ui</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: OIDC Client REST CXF</name>\n-  <description>Apache Syncope Ext: OIDC Client REST CXF</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+  <name>Apache Syncope Ext: OIDC C4UI REST CXF</name>\n+  <description>Apache Syncope Ext: OIDC C4UI REST CXF</description>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -44,19 +44,19 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-api</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-api</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-rest-api</artifactId>\n       <version>${project.version}</version>\n       <classifier>javadoc</classifier>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-logic</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-logic</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>","previous_filename":"ext/oidcclient/rest-cxf/pom.xml"},{"sha":"8b4bcf412a8617a3194ba8f28fc27e18f7b3ec89","filename":"ext/oidcc4ui/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCC4UIProviderServiceImpl.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIProviderServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIProviderServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIProviderServiceImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,21 +21,21 @@\n import java.net.URI;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n-import org.apache.syncope.core.logic.OIDCProviderLogic;\n+import org.apache.syncope.core.logic.OIDCC4UIProviderLogic;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n @Service\n-public class OIDCProviderServiceImpl extends AbstractServiceImpl implements OIDCProviderService {\n+public class OIDCC4UIProviderServiceImpl extends AbstractServiceImpl implements OIDCC4UIProviderService {\n \n     @Autowired\n-    private OIDCProviderLogic logic;\n+    private OIDCC4UIProviderLogic logic;\n \n     @Override\n-    public Response create(final OIDCProviderTO oidcProviderTO) {\n+    public Response create(final OIDCC4UIProviderTO oidcProviderTO) {\n         String created = logic.create(oidcProviderTO);\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(created).build();\n@@ -45,7 +45,7 @@ public Response create(final OIDCProviderTO oidcProviderTO) {\n     }\n \n     @Override\n-    public Response createFromDiscovery(final OIDCProviderTO oidcProviderTO) {\n+    public Response createFromDiscovery(final OIDCC4UIProviderTO oidcProviderTO) {\n         String created = logic.createFromDiscovery(oidcProviderTO);\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(created).build();\n@@ -55,18 +55,18 @@ public Response createFromDiscovery(final OIDCProviderTO oidcProviderTO) {\n     }\n \n     @Override\n-    public List<OIDCProviderTO> list() {\n+    public List<OIDCC4UIProviderTO> list() {\n         return logic.list();\n \n     }\n \n     @Override\n-    public OIDCProviderTO read(final String key) {\n+    public OIDCC4UIProviderTO read(final String key) {\n         return logic.read(key);\n     }\n \n     @Override\n-    public void update(final OIDCProviderTO oidcProviderTO) {\n+    public void update(final OIDCC4UIProviderTO oidcProviderTO) {\n         logic.update(oidcProviderTO);\n     }\n ","previous_filename":"ext/oidcclient/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCProviderServiceImpl.java"},{"sha":"fa77fa578069d3bb30b2b7e034f5a433b0725f4a","filename":"ext/oidcc4ui/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCC4UIServiceImpl.java","status":"renamed","additions":21,"deletions":11,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCC4UIServiceImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,33 +18,43 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.apache.syncope.core.logic.OIDCClientLogic;\n+import java.util.Optional;\n+import javax.ws.rs.core.HttpHeaders;\n+import org.apache.syncope.common.lib.oidc.OIDCRequest;\n+import org.apache.syncope.core.logic.OIDCC4UILogic;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n-import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n+import org.apache.syncope.common.lib.oidc.OIDCLoginResponse;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIService;\n \n @Service\n-public class OIDCClientServiceImpl extends AbstractServiceImpl implements OIDCClientService {\n+public class OIDCC4UIServiceImpl extends AbstractServiceImpl implements OIDCC4UIService {\n \n     @Autowired\n-    private OIDCClientLogic logic;\n+    private OIDCC4UILogic logic;\n \n     @Override\n-    public OIDCLoginRequestTO createLoginRequest(final String redirectURI, final String op) {\n+    public OIDCRequest createLoginRequest(final String redirectURI, final String op) {\n         return logic.createLoginRequest(redirectURI, op);\n     }\n \n     @Override\n-    public OIDCLoginResponseTO login(final String redirectURI, final String authorizationCode, final String op) {\n+    public OIDCLoginResponse login(final String redirectURI, final String authorizationCode, final String op) {\n         return logic.login(redirectURI, authorizationCode, op);\n     }\n \n     @Override\n-    public OIDCLogoutRequestTO createLogoutRequest(final String op) {\n-        return logic.createLogoutRequest(op);\n+    public OIDCRequest createLogoutRequest(final String redirectURI) {\n+        return logic.createLogoutRequest(getAccessToken(), redirectURI);\n     }\n \n+    private String getAccessToken() {\n+        String auth = messageContext.getHttpHeaders().getHeaderString(HttpHeaders.AUTHORIZATION);\n+        String[] parts = Optional.ofNullable(auth).map(s -> s.split(\" \")).orElse(null);\n+        if (parts == null || parts.length != 2 || !\"Bearer\".equals(parts[0])) {\n+            return null;\n+        }\n+\n+        return parts[1];\n+    }\n }","previous_filename":"ext/oidcclient/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCClientServiceImpl.java"},{"sha":"d0c37b7c318e5e93331b8765ba007d28d2547aa2","filename":"ext/oidcclient/agent/pom.xml","status":"removed","additions":0,"deletions":136,"changes":136,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fpom.xml?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,136 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Ext: OIDC Client Agent</name>\n-  <description>Apache Syncope Ext: OIDC Client Agent</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-agent</artifactId>\n-  <packaging>jar</packaging>\n-  \n-  <properties>\n-    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.taglibs</groupId>\n-      <artifactId>taglibs-standard-impl</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.springframework.boot</groupId>\n-      <artifactId>spring-boot</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>commons-io</groupId>\n-      <artifactId>commons-io</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.apache.syncope.common.keymaster</groupId>\n-      <artifactId>syncope-common-keymaster-client-api</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.client.idrepo</groupId>\n-      <artifactId>syncope-client-idrepo-lib</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-api</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-  </dependencies>\n-  \n-  <build>\n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-    \n-    <resources>\n-      <resource>\n-        <directory>src/main/resources</directory>\n-        <filtering>true</filtering>\n-      </resource>\n-      \n-      <resource>\n-        <directory>${basedir}</directory>\n-        <targetPath>META-INF</targetPath>\n-        <includes>\n-          <include>LICENSE</include>\n-          <include>NOTICE</include>\n-        </includes>\n-      </resource>\n-    </resources>\n-  </build>\n-  \n-  <profiles>\n-    <profile>\n-      <id>apache-release</id>\n-\n-      <build>\n-        <plugins>\n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-source-plugin</artifactId>\n-            <inherited>false</inherited>\n-            <executions>\n-              <execution>\n-                <id>attach-sources</id>\n-                <goals>\n-                  <goal>jar-no-fork</goal>\n-                </goals>\n-                <configuration>\n-                  <includes>\n-                    <include>${basedir}/LICENSE</include>\n-                    <include>${basedir}/NOTICE</include>\n-                  </includes>\n-                </configuration>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n-      </build>\n-    </profile>\n-  </profiles>\n-</project>"},{"sha":"b484f56d6412e934bf7b562fa5ca12835720295a","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/AbstractOIDCClientServlet.java","status":"removed","additions":0,"deletions":83,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FAbstractOIDCClientServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FAbstractOIDCClientServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FAbstractOIDCClientServlet.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,83 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import javax.servlet.ServletContext;\n-import javax.servlet.http.HttpServlet;\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n-import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.context.ApplicationContext;\n-\n-class AbstractOIDCClientServlet extends HttpServlet {\n-\n-    private static final long serialVersionUID = 4738590657326972169L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(AbstractOIDCClientServlet.class);\n-\n-    private static final String SYNCOPE_CLIENT_FACTORY = \"SyncopeClientFactory\";\n-\n-    private static final String SYNCOPE_ANONYMOUS_CLIENT = \"SyncopeAnonymousClient\";\n-\n-    private final ApplicationContext ctx;\n-\n-    protected AbstractOIDCClientServlet(final ApplicationContext ctx) {\n-        super();\n-        this.ctx = ctx;\n-    }\n-\n-    protected SyncopeClientFactoryBean getClientFactory(\n-            final ServletContext servletContext,\n-            final boolean useGZIPCompression) {\n-\n-        SyncopeClientFactoryBean clientFactory =\n-                (SyncopeClientFactoryBean) servletContext.getAttribute(SYNCOPE_CLIENT_FACTORY);\n-        if (clientFactory == null) {\n-            ServiceOps serviceOps = ctx.getBean(ServiceOps.class);\n-            clientFactory = new SyncopeClientFactoryBean().\n-                    setAddress(serviceOps.get(NetworkService.Type.CORE).getAddress()).\n-                    setUseCompression(useGZIPCompression);\n-\n-            servletContext.setAttribute(SYNCOPE_CLIENT_FACTORY, clientFactory);\n-        }\n-\n-        return clientFactory;\n-    }\n-\n-    protected SyncopeClient getAnonymousClient(\n-            final ServletContext servletContext,\n-            final String anonymousUser,\n-            final String anonymousKey,\n-            final boolean useGZIPCompression) {\n-\n-        SyncopeClient anonymousClient = (SyncopeClient) servletContext.getAttribute(SYNCOPE_ANONYMOUS_CLIENT);\n-        if (anonymousClient == null) {\n-            SyncopeClientFactoryBean clientFactory = getClientFactory(servletContext, useGZIPCompression);\n-            anonymousClient = clientFactory.create(new AnonymousAuthenticationHandler(anonymousUser, anonymousKey));\n-\n-            servletContext.setAttribute(SYNCOPE_ANONYMOUS_CLIENT, anonymousClient);\n-        }\n-\n-        return anonymousClient;\n-    }\n-}"},{"sha":"948865bebaf0eecbae8e5c555573404333b94fc4","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/BeforeLogout.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import java.io.IOException;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import javax.ws.rs.core.HttpHeaders;\n-import javax.ws.rs.core.UriBuilder;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.lib.OIDCConstants;\n-import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.springframework.context.ApplicationContext;\n-\n-public class BeforeLogout extends AbstractOIDCClientServlet {\n-\n-    private static final long serialVersionUID = -5920740403138557179L;\n-\n-    private final boolean useGZIPCompression;\n-\n-    public BeforeLogout(\n-            final ApplicationContext ctx,\n-            final boolean useGZIPCompression) {\n-\n-        super(ctx);\n-        this.useGZIPCompression = useGZIPCompression;\n-    }\n-\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        response.setHeader(HttpHeaders.CACHE_CONTROL, \"no-cache, no-store\");\n-        response.setHeader(\"Pragma\", \"no-cache\");\n-        response.setStatus(HttpServletResponse.SC_SEE_OTHER);\n-\n-        String accessToken = (String) request.getSession().getAttribute(Constants.OIDCCLIENTJWT);\n-        if (StringUtils.isBlank(accessToken)) {\n-            throw new IllegalArgumentException(\"No access token found \");\n-        }\n-\n-        SyncopeClientFactoryBean clientFactory = getClientFactory(request.getServletContext(), useGZIPCompression);\n-        OIDCLogoutRequestTO requestTO = clientFactory.create(accessToken).getService(OIDCClientService.class).\n-                createLogoutRequest(request.getSession().getAttribute(OIDCConstants.OP).toString());\n-\n-        String postLogoutRedirectURI = StringUtils.substringBefore(request.getRequestURL().toString(), \"/beforelogout\")\n-                + \"/logout\";\n-        UriBuilder ub = UriBuilder.fromUri(requestTO.getEndSessionEndpoint());\n-        ub.queryParam(OIDCConstants.POST_LOGOUT_REDIRECT_URI, postLogoutRedirectURI);\n-        response.setHeader(HttpHeaders.LOCATION, ub.build().toASCIIString());\n-    }\n-}"},{"sha":"7ad61681c5edb9b341ebf9c996b12e9185fdf1f0","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/CodeConsumer.java","status":"removed","additions":0,"deletions":127,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,127 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.net.URLEncoder;\n-import java.nio.charset.StandardCharsets;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.OIDCConstants;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.springframework.context.ApplicationContext;\n-\n-public class CodeConsumer extends AbstractOIDCClientServlet {\n-\n-    private static final long serialVersionUID = 968480296813639041L;\n-\n-    private static final ObjectMapper MAPPER =\n-            new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n-\n-    private final String anonymousUser;\n-\n-    private final String anonymousKey;\n-\n-    private final boolean useGZIPCompression;\n-\n-    public CodeConsumer(\n-            final ApplicationContext ctx,\n-            final String anonymousUser,\n-            final String anonymousKey,\n-            final boolean useGZIPCompression) {\n-\n-        super(ctx);\n-        this.anonymousUser = anonymousUser;\n-        this.anonymousKey = anonymousKey;\n-        this.useGZIPCompression = useGZIPCompression;\n-    }\n-\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        try {\n-            String authorizationCode = request.getParameter(OIDCConstants.CODE);\n-            String state = request.getParameter(OIDCConstants.STATE);\n-            if (StringUtils.isBlank(authorizationCode) || StringUtils.isBlank(state)) {\n-                throw new IllegalArgumentException(\"Empty \" + OIDCConstants.CODE + \" or \" + OIDCConstants.STATE);\n-            }\n-            if (state.equals(request.getSession().getAttribute(OIDCConstants.STATE).toString())) {\n-                SyncopeClient anonymous = getAnonymousClient(\n-                        request.getServletContext(), anonymousUser, anonymousKey, useGZIPCompression);\n-\n-                OIDCLoginResponseTO responseTO = anonymous.getService(OIDCClientService.class).login(\n-                        request.getRequestURL().toString(),\n-                        authorizationCode,\n-                        request.getSession().getAttribute(OIDCConstants.OP).toString());\n-                if (responseTO.isSelfReg()) {\n-                    UserTO newUser = new UserTO();\n-                    newUser.setUsername(responseTO.getUsername());\n-                    newUser.getPlainAttrs().addAll(responseTO.getAttrs());\n-                    request.getSession(true).\n-                            setAttribute(Constants.OIDCC4UI_NEW_USER, MAPPER.writeValueAsString(newUser));\n-\n-                    String selfRegRedirectURL =\n-                            getServletContext().getInitParameter(Constants.CONTEXT_PARAM_REDIRECT_SELFREG_URL);\n-                    if (selfRegRedirectURL == null) {\n-                        request.setAttribute(\"responseTO\", responseTO);\n-                        request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n-                    } else {\n-                        response.sendRedirect(selfRegRedirectURL);\n-                    }\n-                } else {\n-                    request.getSession().setAttribute(\n-                            Constants.OIDCCLIENTJWT, responseTO.getAccessToken());\n-                    request.getSession().setAttribute(\n-                            Constants.OIDCCLIENTJWT_EXPIRE, responseTO.getAccessTokenExpiryTime());\n-\n-                    String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_SUCCESS_URL);\n-                    if (successURL == null) {\n-                        request.setAttribute(\"responseTO\", responseTO);\n-                        request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n-                    } else {\n-                        response.sendRedirect(successURL + \"?logoutSupported=\" + responseTO.isLogoutSupported());\n-                    }\n-                }\n-            } else {\n-                throw new IllegalArgumentException(\"Invalid \" + OIDCConstants.STATE + \" provided\");\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"While processing authentication response from OP\", e);\n-            String errorURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_ERROR_URL);\n-\n-            if (errorURL == null) {\n-                request.setAttribute(\"exception\", e);\n-                request.getRequestDispatcher(\"loginError.jsp\").forward(request, response);\n-\n-                e.printStackTrace(response.getWriter());\n-            } else {\n-                response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n-            }\n-        }\n-    }\n-}"},{"sha":"e6c12f44cfb731e23d46ac0b015892a8eed7c059","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Constants.java","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,46 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-public final class Constants {\n-\n-    public static final String URL_CONTEXT = \"oidcc4ui\";\n-\n-    public static final String PARAM_OP = \"op\";\n-\n-    public static final String CONTEXT_PARAM_LOGIN_SUCCESS_URL = \"oidcclient.login.success.url\";\n-\n-    public static final String CONTEXT_PARAM_LOGIN_ERROR_URL = \"oidcclient.login.error.url\";\n-\n-    public static final String CONTEXT_PARAM_LOGOUT_SUCCESS_URL = \"oidcclient.logout.success.url\";\n-\n-    public static final String CONTEXT_PARAM_LOGOUT_ERROR_URL = \"oidcclient.logout.error.url\";\n-\n-    public static final String CONTEXT_PARAM_REDIRECT_SELFREG_URL = \"oidcclient.redirect.selfreg\";\n-\n-    public static final String OIDCCLIENTJWT = \"oidcclient.jwt\";\n-\n-    public static final String OIDCCLIENTJWT_EXPIRE = \"oidcclient.jwt.expire\";\n-\n-    public static final String OIDCC4UI_NEW_USER = \"oidcc4ui.newUser\";\n-\n-    private Constants() {\n-        // private constructor for static utility class\n-    }\n-}"},{"sha":"7a637b9b12248cc82cdc31ecb722741cddfa44b9","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Login.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import java.io.IOException;\n-import java.net.URLEncoder;\n-import java.nio.charset.StandardCharsets;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import javax.ws.rs.core.HttpHeaders;\n-import javax.ws.rs.core.UriBuilder;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.OIDCConstants;\n-import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.springframework.context.ApplicationContext;\n-\n-public class Login extends AbstractOIDCClientServlet {\n-\n-    private static final long serialVersionUID = 968480296813639041L;\n-\n-    private final String anonymousUser;\n-\n-    private final String anonymousKey;\n-\n-    private final boolean useGZIPCompression;\n-\n-    public Login(final ApplicationContext ctx,\n-            final String anonymousUser,\n-            final String anonymousKey,\n-            final boolean useGZIPCompression) {\n-\n-        super(ctx);\n-        this.anonymousUser = anonymousUser;\n-        this.anonymousKey = anonymousKey;\n-        this.useGZIPCompression = useGZIPCompression;\n-    }\n-\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        String op = request.getParameter(Constants.PARAM_OP);\n-\n-        SyncopeClient anonymous =\n-                getAnonymousClient(request.getServletContext(), anonymousUser, anonymousKey, useGZIPCompression);\n-        try {\n-            String redirectURI = StringUtils.substringBefore(request.getRequestURL().toString(), \"/login\")\n-                    + \"/code-consumer\";\n-            OIDCLoginRequestTO requestTO = anonymous.getService(OIDCClientService.class).\n-                    createLoginRequest(redirectURI, op);\n-\n-            request.getSession().setAttribute(OIDCConstants.STATE, requestTO.getState());\n-            request.getSession().setAttribute(OIDCConstants.OP, op);\n-\n-            response.setHeader(HttpHeaders.CACHE_CONTROL, \"no-cache, no-store\");\n-            response.setHeader(\"Pragma\", \"no-cache\");\n-            response.setStatus(HttpServletResponse.SC_SEE_OTHER);\n-\n-            UriBuilder ub = UriBuilder.fromUri(requestTO.getProviderAddress());\n-            ub.queryParam(OIDCConstants.CLIENT_ID, requestTO.getClientId());\n-            ub.queryParam(OIDCConstants.REDIRECT_URI, requestTO.getRedirectURI());\n-            ub.queryParam(OIDCConstants.RESPONSE_TYPE, requestTO.getResponseType());\n-            ub.queryParam(OIDCConstants.SCOPE, requestTO.getScope());\n-            ub.queryParam(OIDCConstants.STATE, requestTO.getState());\n-            response.setHeader(HttpHeaders.LOCATION, ub.build().toASCIIString());\n-        } catch (Exception e) {\n-            LOG.error(\"While preparing the Authentication Request\", e);\n-\n-            String errorURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_ERROR_URL);\n-            if (errorURL == null) {\n-                request.setAttribute(\"exception\", e);\n-                request.getRequestDispatcher(\"loginError.jsp\").forward(request, response);\n-\n-                e.printStackTrace(response.getWriter());\n-            } else {\n-                response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n-            }\n-        }\n-    }\n-}"},{"sha":"d948b308153c713e8aaa1fed2bd17e3ecfaaef3d","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Logout.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import java.io.IOException;\n-import java.net.URLEncoder;\n-import java.nio.charset.StandardCharsets;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class Logout extends HttpServlet {\n-\n-    private static final long serialVersionUID = 2383239908659843071L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(Logout.class);\n-\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        try {\n-            String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGOUT_SUCCESS_URL);\n-            if (successURL == null) {\n-                request.getRequestDispatcher(\"logoutSuccess.jsp\").forward(request, response);\n-            } else {\n-                response.sendRedirect(successURL);\n-            }\n-            request.getSession().removeAttribute(Constants.OIDCCLIENTJWT);\n-        } catch (Exception e) {\n-            LOG.error(\"While processing authentication response from IdP\", e);\n-\n-            String errorURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGOUT_ERROR_URL);\n-            if (errorURL == null) {\n-                request.setAttribute(\"exception\", e);\n-                request.getRequestDispatcher(\"logoutError.jsp\").forward(request, response);\n-\n-                e.printStackTrace(response.getWriter());\n-            } else {\n-                response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n-            }\n-        }\n-    }\n-}"},{"sha":"61a346a83262e8e32224f65305168507fd8833bf","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/OIDCClientAgentContext.java","status":"removed","additions":0,"deletions":76,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,76 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.oidcclient.agent;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.web.servlet.ServletRegistrationBean;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n-\n-@PropertySource(\"classpath:oidcclient-agent.properties\")\n-@PropertySource(value = \"file:${conf.directory}/oidcclient-agent.properties\", ignoreResourceNotFound = true)\n-@Configuration\n-public class OIDCClientAgentContext {\n-\n-    @Value(\"${anonymousUser}\")\n-    private String anonymousUser;\n-\n-    @Value(\"${anonymousKey}\")\n-    private String anonymousKey;\n-\n-    @Value(\"${useGZIPCompression}\")\n-    private boolean useGZIPCompression;\n-\n-    @Autowired\n-    private ApplicationContext ctx;\n-\n-    @Bean\n-    public ServletRegistrationBean<Login> oidcClientLogin() {\n-        ServletRegistrationBean<Login> bean = new ServletRegistrationBean<>(\n-                new Login(ctx, anonymousUser, anonymousKey, useGZIPCompression), \"/oidcclient/login\");\n-        bean.setName(\"oidcClientLogin\");\n-        return bean;\n-    }\n-\n-    @Bean\n-    public ServletRegistrationBean<CodeConsumer> oidcClientCodeConsumer() {\n-        ServletRegistrationBean<CodeConsumer> bean = new ServletRegistrationBean<>(\n-                new CodeConsumer(ctx, anonymousUser, anonymousKey, useGZIPCompression), \"/oidcclient/code-consumer\");\n-        bean.setName(\"oidcClientCodeConsumer\");\n-        return bean;\n-    }\n-\n-    @Bean\n-    public ServletRegistrationBean<BeforeLogout> oidcClientBeforeLogout() {\n-        ServletRegistrationBean<BeforeLogout> bean =\n-                new ServletRegistrationBean<>(new BeforeLogout(ctx, useGZIPCompression), \"/oidcclient/beforelogout\");\n-        bean.setName(\"oidcClientBeforeLogout\");\n-        return bean;\n-    }\n-\n-    @Bean\n-    public ServletRegistrationBean<Logout> oidcClientLogout() {\n-        ServletRegistrationBean<Logout> bean = new ServletRegistrationBean<>(new Logout(), \"/oidcclient/logout\");\n-        bean.setName(\"oidcClientLogout\");\n-        return bean;\n-    }\n-}"},{"sha":"b3c80d97eeb041ec20bcead515c91b1efc181c5a","filename":"ext/oidcclient/agent/src/main/resources/META-INF/resources/oidcclient/loginError.jsp","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginError.jsp?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,35 +0,0 @@\n-<%--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n---%>\n-<%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n-<%\n-    Exception exception = (Exception) request.getAttribute(\"exception\");\n-%>\n-<html>\n-  <head>\n-    <title>Apache Syncope ${syncope.version} - OIDC CLIENT - Login Error</title>\n-  </head>\n-  <body>\n-    <h1>An error was found</h1>\n-\n-    <h2><%=exception.getMessage()%></h2>\n-    <pre>\n-      <%exception.printStackTrace(new java.io.PrintWriter(out));%>\n-    </pre>\n-  </body>\n-</html>\n\\ No newline at end of file"},{"sha":"7c2890411965420c522366f6ed46187f6ef176df","filename":"ext/oidcclient/agent/src/main/resources/META-INF/resources/oidcclient/loginSuccess.jsp","status":"removed","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginSuccess.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginSuccess.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FloginSuccess.jsp?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,33 +0,0 @@\n-<%--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n---%>\n-<%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n-<%@page import=\"org.apache.syncope.common.lib.to.OIDCLoginResponseTO\"%>\n-<%@taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n-<c:set var=\"responseTO\" value=\"${requestScope['responseTO']}\"/>\n-<html>\n-  <head>\n-    <title>Apache Syncope ${syncope.version} - OIDC CLIENT - Successful Login</title>\n-  </head>\n-  <body>\n-    <h1>Welcome ${responseTO.username}</h1>\n-\n-    <p>You have been successfully authenticated by the requested OIDC Provider</p>\n-\n-  </body>\n-</html>\n\\ No newline at end of file"},{"sha":"df0cb3df888116322e001182e0679cc04c361bb7","filename":"ext/oidcclient/agent/src/main/resources/META-INF/resources/oidcclient/logoutError.jsp","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutError.jsp?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,35 +0,0 @@\n-<%--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n---%>\n-<%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n-<%\n-    Exception exception = (Exception) request.getAttribute(\"exception\");\n-%>\n-<html>\n-  <head>\n-    <title>Apache Syncope ${syncope.version} - OIDC CLIENT - Logout Error</title>\n-  </head>\n-  <body>\n-    <h1>An error was found</h1>\n-\n-    <h2><%=exception.getMessage()%></h2>\n-    <pre>\n-      <%exception.printStackTrace(new java.io.PrintWriter(out));%>\n-    </pre>\n-  </body>\n-</html>\n\\ No newline at end of file"},{"sha":"ecbdc77088f65bd7b27ee345616bf19036b20df2","filename":"ext/oidcclient/agent/src/main/resources/META-INF/resources/oidcclient/logoutSuccess.jsp","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutSuccess.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutSuccess.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Foidcclient%2FlogoutSuccess.jsp?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,27 +0,0 @@\n-<%--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n---%>\n-<%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n-<html>\n-  <head>\n-    <title>Apache Syncope ${syncope.version} - OIDC CLIENT - Successful Logout</title>\n-  </head>\n-  <body>\n-    <h1>You have been successfully logged out.</h1>\n-  </body>\n-</html>\n\\ No newline at end of file"},{"sha":"344c41d20710cd4dd084b9ff92fb5650fc73c2d6","filename":"ext/oidcclient/agent/src/main/resources/META-INF/spring.factories","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.ext.oidcclient.agent.OIDCClientAgentContext"},{"sha":"237929239b018494b5b8f8d3f460e011f80479a3","filename":"ext/oidcclient/agent/src/main/resources/META-INF/web-fragment.xml","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n-                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_4_0.xsd\"\n-              id=\"${pom.artifactId}\" version=\"4.0\">\n-\n-</web-fragment>\n\\ No newline at end of file"},{"sha":"7e5b0d5f84a633ea236140ee503baaa1bd9d8dcf","filename":"ext/oidcclient/agent/src/main/resources/oidcclient-agent.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-conf.directory=${conf.directory}\n-\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-\n-useGZIPCompression=true"},{"sha":"b34f11c366797b70370a25da34b3e42be36014d0","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/pages/OIDCClient_ru.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClient_ru.properties?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-op=OIDC Providers"},{"sha":"81898094e0f49ae3428bf783e45ab9ced815cb86","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginRequestTO.java","status":"removed","additions":0,"deletions":87,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,87 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import java.io.Serializable;\n-\n-public class OIDCLoginRequestTO implements Serializable {\n-\n-    private static final long serialVersionUID = -3509031322459942441L;\n-\n-    private String providerAddress;\n-\n-    private String clientId;\n-\n-    private String scope;\n-\n-    private String responseType;\n-\n-    private String redirectURI;\n-\n-    private String state;\n-\n-    public String getProviderAddress() {\n-        return providerAddress;\n-    }\n-\n-    public void setProviderAddress(final String providerAddress) {\n-        this.providerAddress = providerAddress;\n-    }\n-\n-    public String getClientId() {\n-        return clientId;\n-    }\n-\n-    public void setClientId(final String clientId) {\n-        this.clientId = clientId;\n-    }\n-\n-    public String getScope() {\n-        return scope;\n-    }\n-\n-    public void setScope(final String scope) {\n-        this.scope = scope;\n-    }\n-\n-    public String getResponseType() {\n-        return responseType;\n-    }\n-\n-    public void setResponseType(final String responseType) {\n-        this.responseType = responseType;\n-    }\n-\n-    public String getRedirectURI() {\n-        return redirectURI;\n-    }\n-\n-    public void setRedirectURI(final String redirectURI) {\n-        this.redirectURI = redirectURI;\n-    }\n-\n-    public String getState() {\n-        return state;\n-    }\n-\n-    public void setState(final String state) {\n-        this.state = state;\n-    }\n-\n-}"},{"sha":"94c73dc28f3f94aa0624db4d0a38769d12a8c2f6","filename":"ext/oidcclient/logic/pom.xml","status":"removed","additions":0,"deletions":76,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fpom.xml?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,76 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-oidcclient</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Ext: OIDC Client Logic</name>\n-  <description>Apache Syncope Ext: OIDC Client Logic</description>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-logic</artifactId>\n-  <packaging>jar</packaging>\n-  \n-  <properties>\n-    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>org.apache.syncope.core.idm</groupId>\n-      <artifactId>syncope-core-idm-logic</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-provisioning-java</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-extension-providers</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-security-sso-oidc</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n-      <artifactId>jackson-jaxrs-json-provider</artifactId>\n-    </dependency>\n-  </dependencies>\n-\n-  <build>\n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-  </build>\n-</project>"},{"sha":"61ae5702595f6d7e684327c9a4a9658ab341813f","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"removed","additions":0,"deletions":446,"changes":446,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,446 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.lang.reflect.Method;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-\n-import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.cxf.helpers.IOUtils;\n-import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.cxf.jaxrs.provider.json.JsonMapObjectProvider;\n-import org.apache.cxf.rs.security.jose.jaxrs.JsonWebKeysProvider;\n-import org.apache.cxf.rs.security.oauth2.client.Consumer;\n-import org.apache.cxf.rs.security.oauth2.common.ClientAccessToken;\n-import org.apache.cxf.rs.security.oauth2.utils.OAuthConstants;\n-import org.apache.cxf.rs.security.oidc.common.AbstractUserInfo;\n-import org.apache.cxf.rs.security.oidc.common.IdToken;\n-import org.apache.cxf.rs.security.oidc.common.UserInfo;\n-import org.apache.cxf.rs.security.oidc.rp.IdTokenReader;\n-import org.apache.cxf.rs.security.oidc.rp.UserInfoClient;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n-import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n-import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.CipherAlgorithm;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.syncope.core.logic.model.TokenEndpointResponse;\n-import org.apache.syncope.core.logic.oidc.OIDCUserManager;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.OIDCProviderDAO;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n-import org.apache.syncope.core.provisioning.api.data.AccessTokenDataBinder;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.apache.syncope.core.spring.security.AuthDataAccessor;\n-import org.apache.syncope.core.spring.security.Encryptor;\n-import org.apache.syncope.core.spring.security.SecureRandomUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class OIDCClientLogic extends AbstractTransactionalLogic<EntityTO> {\n-\n-    private static final String JWT_CLAIM_OP_ENTITYID = \"OP_ENTITYID\";\n-\n-    private static final String JWT_CLAIM_USERID = \"USERID\";\n-\n-    private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n-\n-    @Autowired\n-    private AuthDataAccessor authDataAccessor;\n-\n-    @Autowired\n-    private AccessTokenDataBinder accessTokenDataBinder;\n-\n-    @Autowired\n-    private OIDCProviderDAO opDAO;\n-\n-    @Autowired\n-    private OIDCUserManager userManager;\n-\n-    private OIDCProvider getOIDCProvider(final String opName) {\n-        OIDCProvider op = null;\n-        if (StringUtils.isBlank(opName)) {\n-            List<OIDCProvider> ops = opDAO.findAll();\n-            if (!ops.isEmpty()) {\n-                op = ops.get(0);\n-            }\n-        } else {\n-            op = opDAO.findByName(opName);\n-        }\n-        if (op == null) {\n-            throw new NotFoundException(StringUtils.isBlank(opName)\n-                    ? \"Any OIDC Provider\"\n-                    : \"OIDC Provider '\" + opName + '\\'');\n-        }\n-        return op;\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n-    public OIDCLoginRequestTO createLoginRequest(final String redirectURI, final String opName) {\n-        // 1. look for Provider\n-        OIDCProvider op = getOIDCProvider(opName);\n-\n-        // 2. create AuthnRequest\n-        OIDCLoginRequestTO requestTO = new OIDCLoginRequestTO();\n-        requestTO.setProviderAddress(op.getAuthorizationEndpoint());\n-        requestTO.setClientId(op.getClientID());\n-        requestTO.setScope(\"openid email profile\");\n-        requestTO.setResponseType(OAuthConstants.CODE_RESPONSE_TYPE);\n-        requestTO.setRedirectURI(redirectURI);\n-        requestTO.setState(SecureRandomUtils.generateRandomUUID().toString());\n-        return requestTO;\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n-    public OIDCLoginResponseTO login(final String redirectURI, final String authorizationCode, final String opName) {\n-        OIDCProvider op = getOIDCProvider(opName);\n-\n-        // 1. get OpenID Connect tokens\n-        String body = OAuthConstants.AUTHORIZATION_CODE_VALUE + '=' + authorizationCode\n-                + '&' + OAuthConstants.CLIENT_ID + '=' + op.getClientID()\n-                + '&' + OAuthConstants.CLIENT_SECRET + '=' + op.getClientSecret()\n-                + '&' + OAuthConstants.REDIRECT_URI + '=' + redirectURI\n-                + '&' + OAuthConstants.GRANT_TYPE + '=' + OAuthConstants.AUTHORIZATION_CODE_GRANT;\n-        TokenEndpointResponse tokenEndpointResponse;\n-        try {\n-            tokenEndpointResponse = getOIDCTokens(op.getTokenEndpoint(), body);\n-        } catch (IOException e) {\n-            LOG.error(\"Unexpected response for OIDC Tokens\", e);\n-\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(\"Unexpected response for OIDC Tokens: \" + e.getMessage());\n-            throw sce;\n-        }\n-\n-        Consumer consumer = new Consumer(op.getClientID(), op.getClientSecret());\n-\n-        // 2. validate token\n-        LOG.debug(\"Id Token to be validated: {}\", tokenEndpointResponse.getIdToken());\n-        IdToken idToken = getValidatedIdToken(op, consumer, tokenEndpointResponse.getIdToken());\n-\n-        // 3. prepare the result:\n-        final OIDCLoginResponseTO responseTO = new OIDCLoginResponseTO();\n-        responseTO.setLogoutSupported(StringUtils.isNotBlank(op.getEndSessionEndpoint()));\n-\n-        // 3a. extract user info from userInfoEndpoint if exists otherwise from idToken\n-        AbstractUserInfo userInfo = StringUtils.isBlank(op.getUserinfoEndpoint())\n-                ? idToken\n-                : getUserInfo(op.getUserinfoEndpoint(), tokenEndpointResponse.getAccessToken(), idToken, consumer);\n-\n-        // 3b. find matching user (if any) and return the received attributes\n-        String keyValue = userInfo.getEmail();\n-        for (OIDCProviderItem item : op.getItems()) {\n-            Attr attrTO = new Attr();\n-            attrTO.setSchema(item.getExtAttrName());\n-            switch (item.getExtAttrName()) {\n-                case UserInfo.PREFERRED_USERNAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getPreferredUserName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getPreferredUserName();\n-                    }\n-                    break;\n-\n-                case UserInfo.PROFILE_CLAIM:\n-                    attrTO.getValues().add(userInfo.getProfile());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getProfile();\n-                    }\n-                    break;\n-\n-                case UserInfo.EMAIL_CLAIM:\n-                    attrTO.getValues().add(userInfo.getEmail());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getEmail();\n-                    }\n-                    break;\n-\n-                case UserInfo.NAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getName();\n-                    }\n-                    break;\n-\n-                case UserInfo.FAMILY_NAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getFamilyName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getFamilyName();\n-                    }\n-                    break;\n-\n-                case UserInfo.MIDDLE_NAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getMiddleName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getMiddleName();\n-                    }\n-                    break;\n-\n-                case UserInfo.GIVEN_NAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getGivenName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getGivenName();\n-                    }\n-                    break;\n-\n-                case UserInfo.NICKNAME_CLAIM:\n-                    attrTO.getValues().add(userInfo.getNickName());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getNickName();\n-                    }\n-                    break;\n-\n-                case UserInfo.GENDER_CLAIM:\n-                    attrTO.getValues().add(userInfo.getGender());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getGender();\n-                    }\n-                    break;\n-\n-                case UserInfo.LOCALE_CLAIM:\n-                    attrTO.getValues().add(userInfo.getLocale());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getLocale();\n-                    }\n-                    break;\n-\n-                case UserInfo.ZONEINFO_CLAIM:\n-                    attrTO.getValues().add(userInfo.getZoneInfo());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getZoneInfo();\n-                    }\n-                    break;\n-\n-                case UserInfo.BIRTHDATE_CLAIM:\n-                    attrTO.getValues().add(userInfo.getBirthDate());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getBirthDate();\n-                    }\n-                    break;\n-\n-                case UserInfo.PHONE_CLAIM:\n-                    attrTO.getValues().add(userInfo.getPhoneNumber());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getPhoneNumber();\n-                    }\n-                    break;\n-\n-                case UserInfo.ADDRESS_CLAIM:\n-                    attrTO.getValues().add(userInfo.getUserAddress().getFormatted());\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = userInfo.getUserAddress().getFormatted();\n-                    }\n-                    break;\n-\n-                case UserInfo.UPDATED_AT_CLAIM:\n-                    attrTO.getValues().add(Long.toString(userInfo.getUpdatedAt()));\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = Long.toString(userInfo.getUpdatedAt());\n-                    }\n-                    break;\n-\n-                default:\n-                    String value = userInfo.getClaim(item.getExtAttrName()) == null\n-                            ? null\n-                            : userInfo.getClaim(item.getExtAttrName()).toString();\n-                    attrTO.getValues().add(value);\n-                    responseTO.getAttrs().add(attrTO);\n-                    if (item.isConnObjectKey()) {\n-                        keyValue = value;\n-                    }\n-            }\n-        }\n-\n-        final List<String> matchingUsers = keyValue == null\n-                ? List.of()\n-                : userManager.findMatchingUser(keyValue, op.getConnObjectKeyItem().get());\n-        LOG.debug(\"Found {} matching users for {}\", matchingUsers.size(), keyValue);\n-\n-        String username;\n-        if (matchingUsers.isEmpty()) {\n-            if (op.isCreateUnmatching()) {\n-                LOG.debug(\"No user matching {}, about to create\", keyValue);\n-\n-                final String emailValue = userInfo.getEmail();\n-                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n-                        () -> userManager.create(op, responseTO, emailValue));\n-            } else if (op.isSelfRegUnmatching()) {\n-                UserTO userTO = new UserTO();\n-\n-                userManager.fill(op, responseTO, userTO);\n-\n-                responseTO.getAttrs().clear();\n-                responseTO.getAttrs().addAll(userTO.getPlainAttrs());\n-                responseTO.getAttrs().addAll(userTO.getVirAttrs());\n-                if (StringUtils.isNotBlank(userTO.getUsername())) {\n-                    responseTO.setUsername(userTO.getUsername());\n-                }\n-\n-                responseTO.setSelfReg(true);\n-\n-                return responseTO;\n-            } else {\n-                throw new NotFoundException(Optional.ofNullable(keyValue)\n-                    .map(value -> \"User matching the provided value \" + value)\n-                    .orElse(\"User marching the provided claims\"));\n-            }\n-        } else if (matchingUsers.size() > 1) {\n-            throw new IllegalArgumentException(\"Several users match the provided value \" + keyValue);\n-        } else {\n-            if (op.isUpdateMatching()) {\n-                LOG.debug(\"About to update {} for {}\", matchingUsers.get(0), keyValue);\n-\n-                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n-                        () -> userManager.update(matchingUsers.get(0), op, responseTO));\n-            } else {\n-                username = matchingUsers.get(0);\n-            }\n-\n-        }\n-\n-        responseTO.setUsername(username);\n-\n-        // 4. generate JWT for further access\n-        Map<String, Object> claims = new HashMap<>();\n-        claims.put(JWT_CLAIM_OP_ENTITYID, idToken.getIssuer());\n-        claims.put(JWT_CLAIM_USERID, idToken.getSubject());\n-\n-        byte[] authorities = null;\n-        try {\n-            authorities = ENCRYPTOR.encode(POJOHelper.serialize(\n-                    authDataAccessor.getAuthorities(responseTO.getUsername())), CipherAlgorithm.AES).\n-                    getBytes();\n-        } catch (Exception e) {\n-            LOG.error(\"Could not fetch authorities\", e);\n-        }\n-\n-        Pair<String, Date> accessTokenInfo =\n-                accessTokenDataBinder.create(responseTO.getUsername(), claims, authorities, true);\n-        responseTO.setAccessToken(accessTokenInfo.getLeft());\n-        responseTO.setAccessTokenExpiryTime(accessTokenInfo.getRight());\n-\n-        return responseTO;\n-    }\n-\n-    private static TokenEndpointResponse getOIDCTokens(final String url, final String body) throws IOException {\n-        Response response = WebClient.create(url, List.of(new JacksonJsonProvider())).\n-                type(MediaType.APPLICATION_FORM_URLENCODED).accept(MediaType.APPLICATION_JSON).\n-                post(body);\n-        if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n-            LOG.error(\"Unexpected response from OIDC Provider: {}\\n{}\\n{}\",\n-                    response.getStatus(), response.getHeaders(),\n-                    IOUtils.toString((InputStream) response.getEntity()));\n-\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(\"Unexpected response from OIDC Provider\");\n-            throw sce;\n-        }\n-\n-        return response.readEntity(TokenEndpointResponse.class);\n-    }\n-\n-    private static IdToken getValidatedIdToken(final OIDCProvider op, final Consumer consumer,\n-                                               final String jwtIdToken) {\n-        IdTokenReader idTokenReader = new IdTokenReader();\n-        idTokenReader.setClockOffset(10);\n-        idTokenReader.setIssuerId(op.getIssuer());\n-        idTokenReader.setJwkSetClient(WebClient.create(op.getJwksUri(), List.of(new JsonWebKeysProvider())).\n-                accept(MediaType.APPLICATION_JSON));\n-        IdToken idToken;\n-        try {\n-            idToken = idTokenReader.getIdToken(jwtIdToken, consumer);\n-        } catch (Exception e) {\n-            LOG.error(\"While validating the id_token\", e);\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(e.getMessage());\n-            throw sce;\n-        }\n-        return idToken;\n-    }\n-\n-    private static UserInfo getUserInfo(\n-        final String endpoint,\n-        final String accessToken,\n-        final IdToken idToken,\n-        final Consumer consumer) {\n-\n-        WebClient userInfoServiceClient = WebClient.create(endpoint, List.of(new JsonMapObjectProvider())).\n-                accept(MediaType.APPLICATION_JSON);\n-        ClientAccessToken clientAccessToken =\n-                new ClientAccessToken(OAuthConstants.BEARER_AUTHORIZATION_SCHEME, accessToken);\n-        UserInfoClient userInfoClient = new UserInfoClient();\n-        userInfoClient.setUserInfoServiceClient(userInfoServiceClient);\n-        UserInfo userInfo = null;\n-        try {\n-            userInfo = userInfoClient.getUserInfo(clientAccessToken, idToken, consumer);\n-        } catch (Exception e) {\n-            LOG.error(\"While getting the userInfo\", e);\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(e.getMessage());\n-            throw sce;\n-        }\n-        return userInfo;\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"'))\")\n-    public OIDCLogoutRequestTO createLogoutRequest(final String op) {\n-        OIDCLogoutRequestTO logoutRequest = new OIDCLogoutRequestTO();\n-        logoutRequest.setEndSessionEndpoint(getOIDCProvider(op).getEndSessionEndpoint());\n-        return logoutRequest;\n-    }\n-\n-    @Override\n-    protected EntityTO resolveReference(\n-            final Method method, final Object... args) throws UnresolvedReferenceException {\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-}"},{"sha":"f093e7834ac05c26a4d684bcc8749c26c7d7fc8b","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCProviderLogic.java","status":"removed","additions":0,"deletions":170,"changes":170,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCProviderLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCProviderLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCProviderLogic.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,170 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n-import java.lang.reflect.Method;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import javax.ws.rs.ClientErrorException;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.OIDCClientEntitlement;\n-import org.apache.syncope.core.logic.model.OIDCProviderDiscoveryDocument;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.OIDCProviderDAO;\n-import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n-import org.apache.syncope.core.provisioning.api.data.OIDCProviderDataBinder;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Component\n-public class OIDCProviderLogic extends AbstractTransactionalLogic<OIDCProviderTO> {\n-\n-    @Autowired\n-    private OIDCProviderDAO opDAO;\n-\n-    @Autowired\n-    private OIDCProviderDataBinder binder;\n-\n-    private static OIDCProviderDiscoveryDocument getDiscoveryDocument(final String issuer) {\n-        String discoveryDocumentURL = issuer + \"/.well-known/openid-configuration\";\n-        WebClient client = WebClient.create(discoveryDocumentURL, List.of(new JacksonJsonProvider())).\n-                accept(MediaType.APPLICATION_JSON);\n-        try {\n-            return client.get(OIDCProviderDiscoveryDocument.class);\n-        } catch (ClientErrorException e) {\n-            LOG.error(\"While getting the Discovery Document at {}\", discoveryDocumentURL, e);\n-\n-            if (e instanceof javax.ws.rs.NotFoundException) {\n-                throw new NotFoundException(\"Discovery Document cannot be found at \" + discoveryDocumentURL);\n-            } else {\n-                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-                sce.getElements().add(e.getMessage());\n-                throw sce;\n-            }\n-        }\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + OIDCClientEntitlement.OP_CREATE + \"')\")\n-    public String createFromDiscovery(final OIDCProviderTO opTO) {\n-        OIDCProviderDiscoveryDocument discoveryDocument = getDiscoveryDocument(opTO.getIssuer());\n-\n-        opTO.setAuthorizationEndpoint(discoveryDocument.getAuthorizationEndpoint());\n-        opTO.setIssuer(discoveryDocument.getIssuer());\n-        opTO.setJwksUri(discoveryDocument.getJwksUri());\n-        opTO.setTokenEndpoint(discoveryDocument.getTokenEndpoint());\n-        opTO.setUserinfoEndpoint(discoveryDocument.getUserinfoEndpoint());\n-        opTO.setEndSessionEndpoint(discoveryDocument.getEndSessionEndpoint());\n-\n-        return create(opTO);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + OIDCClientEntitlement.OP_CREATE + \"')\")\n-    public String create(final OIDCProviderTO opTO) {\n-        if (opTO.getConnObjectKeyItem() == null) {\n-            ItemTO connObjectKeyItem = new ItemTO();\n-            connObjectKeyItem.setIntAttrName(\"username\");\n-            connObjectKeyItem.setExtAttrName(\"email\");\n-            opTO.setConnObjectKeyItem(connObjectKeyItem);\n-        }\n-\n-        OIDCProvider provider = opDAO.save(binder.create(opTO));\n-\n-        return provider.getKey();\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true)\n-    public List<OIDCProviderTO> list() {\n-        return opDAO.findAll().stream().map(binder::getOIDCProviderTO).collect(Collectors.toList());\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + OIDCClientEntitlement.OP_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public OIDCProviderTO read(final String key) {\n-        OIDCProvider op = opDAO.find(key);\n-        if (op == null) {\n-            throw new NotFoundException(\"OIDC Provider '\" + key + '\\'');\n-        }\n-        return binder.getOIDCProviderTO(op);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + OIDCClientEntitlement.OP_UPDATE + \"')\")\n-    public void update(final OIDCProviderTO oidcProviderTO) {\n-        OIDCProvider oidcProvider = opDAO.find(oidcProviderTO.getKey());\n-        if (oidcProvider == null) {\n-            throw new NotFoundException(\"OIDC Provider '\" + oidcProviderTO.getKey() + '\\'');\n-        }\n-\n-        if (!oidcProvider.getIssuer().equals(oidcProviderTO.getIssuer())) {\n-            LOG.error(\"Issuers do not match: expected {}, found {}\",\n-                    oidcProvider.getIssuer(), oidcProviderTO.getIssuer());\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidEntity);\n-            sce.getElements().add(\"Issuers do not match\");\n-            throw sce;\n-        }\n-\n-        opDAO.save(binder.update(oidcProvider, oidcProviderTO));\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + OIDCClientEntitlement.OP_DELETE + \"')\")\n-    public void delete(final String key) {\n-        OIDCProvider op = opDAO.find(key);\n-        if (op == null) {\n-            throw new NotFoundException(\"OIDC Provider '\" + key + '\\'');\n-        }\n-        opDAO.delete(key);\n-    }\n-\n-    @Override\n-    protected OIDCProviderTO resolveReference(\n-            final Method method, final Object... args) throws UnresolvedReferenceException {\n-\n-        String key = null;\n-\n-        if (ArrayUtils.isNotEmpty(args)) {\n-            for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof String) {\n-                    key = (String) args[i];\n-                } else if (args[i] instanceof OIDCProviderTO) {\n-                    key = ((OIDCProviderTO) args[i]).getKey();\n-                }\n-            }\n-        }\n-\n-        if (key != null) {\n-            try {\n-                return binder.getOIDCProviderTO(opDAO.find(key));\n-            } catch (Throwable ignore) {\n-                LOG.debug(\"Unresolved reference\", ignore);\n-                throw new UnresolvedReferenceException(ignore);\n-            }\n-        }\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-}"},{"sha":"aae3f0cec57f8c60a5810e59803ceca298047157","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/model/OIDCProviderDiscoveryDocument.java","status":"removed","additions":0,"deletions":128,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FOIDCProviderDiscoveryDocument.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FOIDCProviderDiscoveryDocument.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fmodel%2FOIDCProviderDiscoveryDocument.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,128 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic.model;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n-\n-@JsonIgnoreProperties(ignoreUnknown = true)\n-@JsonPropertyOrder({\n-    \"issuer\",\n-    \"authorization_endpoint\",\n-    \"token_endpoint\",\n-    \"userinfo_endpoint\",\n-    \"end_session_endpoint\",\n-    \"jwks_uri\",\n-    \"registration_endpoint\"\n-})\n-public class OIDCProviderDiscoveryDocument {\n-\n-    @JsonProperty(\"issuer\")\n-    private String issuer;\n-\n-    @JsonProperty(\"authorization_endpoint\")\n-    private String authorizationEndpoint;\n-\n-    @JsonProperty(\"token_endpoint\")\n-    private String tokenEndpoint;\n-\n-    @JsonProperty(\"userinfo_endpoint\")\n-    private String userinfoEndpoint;\n-\n-    @JsonProperty(\"end_session_endpoint\")\n-    private String endSessionEndpoint;\n-\n-    @JsonProperty(\"jwks_uri\")\n-    private String jwksUri;\n-\n-    @JsonProperty(\"registration_endpoint\")\n-    private String registrationEndpoint;\n-\n-    @JsonProperty(\"issuer\")\n-    public String getIssuer() {\n-        return issuer;\n-    }\n-\n-    @JsonProperty(\"issuer\")\n-    public void setIssuer(final String issuer) {\n-        this.issuer = issuer;\n-    }\n-\n-    @JsonProperty(\"authorization_endpoint\")\n-    public String getAuthorizationEndpoint() {\n-        return authorizationEndpoint;\n-    }\n-\n-    @JsonProperty(\"authorization_endpoint\")\n-    public void setAuthorizationEndpoint(final String authorizationEndpoint) {\n-        this.authorizationEndpoint = authorizationEndpoint;\n-    }\n-\n-    @JsonProperty(\"token_endpoint\")\n-    public String getTokenEndpoint() {\n-        return tokenEndpoint;\n-    }\n-\n-    @JsonProperty(\"token_endpoint\")\n-    public void setTokenEndpoint(final String tokenEndpoint) {\n-        this.tokenEndpoint = tokenEndpoint;\n-    }\n-\n-    @JsonProperty(\"userinfo_endpoint\")\n-    public String getUserinfoEndpoint() {\n-        return userinfoEndpoint;\n-    }\n-\n-    @JsonProperty(\"userinfo_endpoint\")\n-    public void setUserinfoEndpoint(final String userinfoEndpoint) {\n-        this.userinfoEndpoint = userinfoEndpoint;\n-    }\n-\n-    @JsonProperty(\"end_session_endpoint\")\n-    public String getEndSessionEndpoint() {\n-        return endSessionEndpoint;\n-    }\n-\n-    @JsonProperty(\"end_session_endpoint\")\n-    public void setEndSessionEndpoint(final String endSessionEndpoint) {\n-        this.endSessionEndpoint = endSessionEndpoint;\n-    }\n-\n-    @JsonProperty(\"jwks_uri\")\n-    public String getJwksUri() {\n-        return jwksUri;\n-    }\n-\n-    @JsonProperty(\"jwks_uri\")\n-    public void setJwksUri(final String jwksUri) {\n-        this.jwksUri = jwksUri;\n-    }\n-\n-    @JsonProperty(\"registration_endpoint\")\n-    public String getRegistrationEndpoint() {\n-        return registrationEndpoint;\n-    }\n-\n-    @JsonProperty(\"registration_endpoint\")\n-    public void setRegistrationEndpoint(final String registrationEndpoint) {\n-        this.registrationEndpoint = registrationEndpoint;\n-    }\n-\n-}"},{"sha":"67cc21eb8fadfcd07df5e69a8e180610486816ea","filename":"ext/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -80,9 +80,9 @@ under the License.\n     <module>flowable</module>\n     <module>camel</module>\n     <module>saml2sp4ui</module>\n+    <module>oidcc4ui</module>\n     <module>elasticsearch</module>\n     <module>scimv2</module>\n-    <module>oidcclient</module>\n     <module>self-keymaster</module>\n   </modules>\n "},{"sha":"01866e1967c2fb6d11fca8872e0b57a7a9b8f2ec","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/AbstractSAMLSSOLoginFormPanel.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,8 +23,9 @@\n import java.util.List;\n import org.apache.syncope.client.ui.commons.BaseSession;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n@@ -46,29 +47,29 @@ public abstract class AbstractSAMLSSOLoginFormPanel extends BaseSSOLoginFormPane\n     public AbstractSAMLSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id);\n \n-        List<SAML24UIIdPTO> available = session.getAnonymousService(SAML2SP4UIIdPService.class).list();\n+        List<SAML2SP4UIIdPTO> available = session.getAnonymousService(SAML2SP4UIIdPService.class).list();\n \n-        final Model<SAML24UIIdPTO> model = new Model<>();\n-        AjaxDropDownChoicePanel<SAML24UIIdPTO> idps =\n+        final Model<SAML2SP4UIIdPTO> model = new Model<>();\n+        AjaxDropDownChoicePanel<SAML2SP4UIIdPTO> idps =\n                 new AjaxDropDownChoicePanel<>(\"idps\", \"SAML 2.0\", model, false);\n         idps.setChoices(available);\n-        idps.setChoiceRenderer(new IChoiceRenderer<SAML24UIIdPTO>() {\n+        idps.setChoiceRenderer(new IChoiceRenderer<SAML2SP4UIIdPTO>() {\n \n             private static final long serialVersionUID = 1814750973898916102L;\n \n             @Override\n-            public Object getDisplayValue(final SAML24UIIdPTO object) {\n+            public Object getDisplayValue(final SAML2SP4UIIdPTO object) {\n                 return object.getName();\n             }\n \n             @Override\n-            public String getIdValue(final SAML24UIIdPTO object, final int index) {\n+            public String getIdValue(final SAML2SP4UIIdPTO object, final int index) {\n                 return object.getEntityID();\n             }\n \n             @Override\n-            public SAML24UIIdPTO getObject(\n-                    final String id, final IModel<? extends List<? extends SAML24UIIdPTO>> choices) {\n+            public SAML2SP4UIIdPTO getObject(\n+                    final String id, final IModel<? extends List<? extends SAML2SP4UIIdPTO>> choices) {\n \n                 return choices.getObject().stream().\n                         filter(idp -> idp.getEntityID().equals(id)).findFirst().orElse(null);\n@@ -83,7 +84,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 if (model.getObject() != null) {\n                     try {\n                         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n-                                UrlUtils.rewriteToContextRelative(\"saml2sp4ui/login?idp=\"\n+                                UrlUtils.rewriteToContextRelative(SAML2SP4UIConstants.URL_CONTEXT + \"/login?idp=\"\n                                         + URLEncoder.encode(\n                                                 model.getObject().getEntityID(), StandardCharsets.UTF_8),\n                                         RequestCycle.get())));"},{"sha":"bc98630a28dc57e94d7af90c58a15a6f2aeb2816","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":31,"deletions":30,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -50,7 +50,7 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SAML2SP4UIEntitlement;\n@@ -70,7 +70,7 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class SAML2IdPsDirectoryPanel extends DirectoryPanel<\n-        SAML24UIIdPTO, SAML24UIIdPTO, SAML2IdPsProvider, SAML2IdPsRestClient> {\n+        SAML2SP4UIIdPTO, SAML2SP4UIIdPTO, SAML2IdPsProvider, SAML2IdPsRestClient> {\n \n     private static final long serialVersionUID = 4792356089584116041L;\n \n@@ -81,16 +81,17 @@ public class SAML2IdPsDirectoryPanel extends DirectoryPanel<\n     private final BaseModal<Serializable> templateModal;\n \n     public SAML2IdPsDirectoryPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<SAML24UIIdPTO, SAML24UIIdPTO, SAML2IdPsRestClient>(new SAML2IdPsRestClient(), pageRef) {\n+        super(id, new Builder<SAML2SP4UIIdPTO, SAML2SP4UIIdPTO, SAML2IdPsRestClient>(\n+                new SAML2IdPsRestClient(), pageRef) {\n \n             private static final long serialVersionUID = 8517982765290075155L;\n \n             @Override\n-            protected WizardMgtPanel<SAML24UIIdPTO> newInstance(final String id, final boolean wizardInModal) {\n+            protected WizardMgtPanel<SAML2SP4UIIdPTO> newInstance(final String id, final boolean wizardInModal) {\n                 throw new UnsupportedOperationException();\n             }\n         }.disableCheckBoxes());\n-        this.addNewItemPanelBuilder(new SAML2IdPWizardBuilder(this, new SAML24UIIdPTO(), pageRef), false);\n+        this.addNewItemPanelBuilder(new SAML2IdPWizardBuilder(this, new SAML2SP4UIIdPTO(), pageRef), false);\n \n         modal.addSubmitButton();\n         modal.size(Modal.Size.Large);\n@@ -153,16 +154,16 @@ protected SAML2IdPsProvider dataProvider() {\n     }\n \n     @Override\n-    protected ActionLinksTogglePanel<SAML24UIIdPTO> actionTogglePanel() {\n-        return new ActionLinksTogglePanel<SAML24UIIdPTO>(Constants.OUTER, pageRef) {\n+    protected ActionLinksTogglePanel<SAML2SP4UIIdPTO> actionTogglePanel() {\n+        return new ActionLinksTogglePanel<SAML2SP4UIIdPTO>(Constants.OUTER, pageRef) {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n             @Override\n             public void updateHeader(final AjaxRequestTarget target, final Serializable modelObject) {\n-                if (modelObject instanceof SAML24UIIdPTO) {\n-                    setHeader(target,\n-                            StringUtils.abbreviate(((SAML24UIIdPTO) modelObject).getName(), HEADER_FIRST_ABBREVIATION));\n+                if (modelObject instanceof SAML2SP4UIIdPTO) {\n+                    setHeader(target, StringUtils.abbreviate(\n+                            ((SAML2SP4UIIdPTO) modelObject).getName(), HEADER_FIRST_ABBREVIATION));\n                 } else {\n                     super.updateHeader(target, modelObject);\n                 }\n@@ -181,8 +182,8 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     }\n \n     @Override\n-    protected List<IColumn<SAML24UIIdPTO, String>> getColumns() {\n-        List<IColumn<SAML24UIIdPTO, String>> columns = new ArrayList<>();\n+    protected List<IColumn<SAML2SP4UIIdPTO, String>> getColumns() {\n+        List<IColumn<SAML2SP4UIIdPTO, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<>(new ResourceModel(\"key\"), \"key\", \"key\"));\n         columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n@@ -196,16 +197,16 @@ protected List<IColumn<SAML24UIIdPTO, String>> getColumns() {\n     }\n \n     @Override\n-    public ActionsPanel<SAML24UIIdPTO> getActions(final IModel<SAML24UIIdPTO> model) {\n-        final ActionsPanel<SAML24UIIdPTO> panel = super.getActions(model);\n+    public ActionsPanel<SAML2SP4UIIdPTO> getActions(final IModel<SAML2SP4UIIdPTO> model) {\n+        final ActionsPanel<SAML2SP4UIIdPTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SAML24UIIdPTO>() {\n+        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final SAML24UIIdPTO ignore) {\n-                SAML24UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n+            public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore) {\n+                SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n                 metadataModal.header(Model.of(object.getName() + \" - Metadata\"));\n                 metadataModal.setContent(new XMLEditorPanel(\n                         metadataModal,\n@@ -216,24 +217,24 @@ public void onClick(final AjaxRequestTarget target, final SAML24UIIdPTO ignore)\n                 target.add(metadataModal);\n             }\n         }, ActionLink.ActionType.HTML, SAML2SP4UIEntitlement.IDP_READ);\n-        panel.add(new ActionLink<SAML24UIIdPTO>() {\n+        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final SAML24UIIdPTO ignore) {\n-                SAML24UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n+            public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore) {\n+                SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n                 send(SAML2IdPsDirectoryPanel.this, Broadcast.EXACT,\n                         new AjaxWizard.EditItemActionEvent<>(object, target));\n             }\n         }, ActionLink.ActionType.EDIT, SAML2SP4UIEntitlement.IDP_UPDATE);\n-        panel.add(new ActionLink<SAML24UIIdPTO>() {\n+        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final SAML24UIIdPTO ignore) {\n-                final SAML24UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n+            public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore) {\n+                final SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n \n                 UserTemplateWizardBuilder builder = new UserTemplateWizardBuilder(\n                         object.getUserTemplate(),\n@@ -259,12 +260,12 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n \n             }\n         }, ActionLink.ActionType.TEMPLATE, SAML2SP4UIEntitlement.IDP_UPDATE);\n-        panel.add(new ActionLink<SAML24UIIdPTO>() {\n+        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n \n             private static final long serialVersionUID = -5467832321897812767L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final SAML24UIIdPTO ignore) {\n+            public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore) {\n                 try {\n                     SAML2IdPsRestClient.delete(model.getObject().getKey());\n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n@@ -302,11 +303,11 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    protected static final class SAML2IdPsProvider extends DirectoryDataProvider<SAML24UIIdPTO> {\n+    protected static final class SAML2IdPsProvider extends DirectoryDataProvider<SAML2SP4UIIdPTO> {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n-        private final SortableDataProviderComparator<SAML24UIIdPTO> comparator;\n+        private final SortableDataProviderComparator<SAML2SP4UIIdPTO> comparator;\n \n         private SAML2IdPsProvider(final int paginatorRows) {\n             super(paginatorRows);\n@@ -316,8 +317,8 @@ private SAML2IdPsProvider(final int paginatorRows) {\n         }\n \n         @Override\n-        public Iterator<SAML24UIIdPTO> iterator(final long first, final long count) {\n-            List<SAML24UIIdPTO> list = SAML2IdPsRestClient.list();\n+        public Iterator<SAML2SP4UIIdPTO> iterator(final long first, final long count) {\n+            List<SAML2SP4UIIdPTO> list = SAML2IdPsRestClient.list();\n             list.sort(comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n@@ -328,7 +329,7 @@ public long size() {\n         }\n \n         @Override\n-        public IModel<SAML24UIIdPTO> model(final SAML24UIIdPTO object) {\n+        public IModel<SAML2SP4UIIdPTO> model(final SAML2SP4UIIdPTO object) {\n             return new CompoundPropertyModel<>(object);\n         }\n     }"},{"sha":"5fa2e935f13306851c0b9e004520be73af9800ed","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/SAMLSSOLoginFormPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -28,5 +28,4 @@ public class SAMLSSOLoginFormPanel extends AbstractSAMLSSOLoginFormPanel {\n     public SAMLSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id, session);\n     }\n-\n }"},{"sha":"ed627c5ad49159c424bae60961f4944a07e24e48","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/rest/SAML2IdPsRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -24,14 +24,14 @@\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.rest.api.service.SAML2SP4UIIdPService;\n \n public class SAML2IdPsRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -5084300184764037527L;\n \n-    public static List<SAML24UIIdPTO> list() {\n+    public static List<SAML2SP4UIIdPTO> list() {\n         return getService(SAML2SP4UIIdPService.class).list();\n     }\n \n@@ -45,11 +45,11 @@ public static void importIdPs(final InputStream input) {\n         SyncopeConsoleSession.get().resetClient(SAML2SP4UIIdPService.class);\n     }\n \n-    public static SAML24UIIdPTO read(final String key) {\n+    public static SAML2SP4UIIdPTO read(final String key) {\n         return getService(SAML2SP4UIIdPService.class).read(key);\n     }\n \n-    public static void update(final SAML24UIIdPTO idp) {\n+    public static void update(final SAML2SP4UIIdPTO idp) {\n         getService(SAML2SP4UIIdPService.class).update(idp);\n     }\n "},{"sha":"91dda178f2e73c567981428737bf43b8020662c1","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.apache.syncope.common.lib.types.SAML2SP4UIImplementationType;\n import org.apache.wicket.Component;\n@@ -58,7 +58,7 @@\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class SAML2IdPWizardBuilder extends AjaxWizardBuilder<SAML24UIIdPTO> {\n+public class SAML2IdPWizardBuilder extends AjaxWizardBuilder<SAML2SP4UIIdPTO> {\n \n     private static final long serialVersionUID = 5952696913893950460L;\n \n@@ -87,14 +87,14 @@ protected List<String> load() {\n     };\n \n     public SAML2IdPWizardBuilder(\n-            final SAML2IdPsDirectoryPanel directoryPanel, final SAML24UIIdPTO idpTO, final PageReference pageRef) {\n+            final SAML2IdPsDirectoryPanel directoryPanel, final SAML2SP4UIIdPTO idpTO, final PageReference pageRef) {\n \n         super(idpTO, pageRef);\n         this.directoryPanel = directoryPanel;\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final SAML24UIIdPTO modelObject, final WizardModel wizardModel) {\n+    protected WizardModel buildModelSteps(final SAML2SP4UIIdPTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new IdP(modelObject));\n \n         Mapping mapping = new Mapping(modelObject);\n@@ -137,7 +137,7 @@ private final class IdP extends WizardStep {\n \n         private static final long serialVersionUID = 854012593185195024L;\n \n-        IdP(final SAML24UIIdPTO idpTO) {\n+        IdP(final SAML2SP4UIIdPTO idpTO) {\n             super(StringUtils.EMPTY, StringUtils.EMPTY);\n \n             List<Component> fields = new ArrayList<>();\n@@ -200,14 +200,14 @@ private static final class Mapping extends WizardStep {\n \n         private static final long serialVersionUID = 3454904947720856253L;\n \n-        Mapping(final SAML24UIIdPTO item) {\n+        Mapping(final SAML2SP4UIIdPTO item) {\n             setTitleModel(Model.of(\"Mapping\"));\n             setSummaryModel(Model.of(StringUtils.EMPTY));\n         }\n     }\n \n     @Override\n-    protected Serializable onApplyInternal(final SAML24UIIdPTO modelObject) {\n+    protected Serializable onApplyInternal(final SAML2SP4UIIdPTO modelObject) {\n         long connObjectKeyCount = modelObject.getItems().stream().filter(ItemTO::isConnObjectKey).count();\n         if (connObjectKeyCount != 1) {\n             throw new IllegalArgumentException("},{"sha":"1b9fba8721eaebaee31d97000cbf792d16fbf2e1","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/mapping/SAML2IdPMappingPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.wicket.model.IModel;\n@@ -39,7 +39,7 @@ public class SAML2IdPMappingPanel extends AbstractMappingPanel {\n \n     public SAML2IdPMappingPanel(\n             final String id,\n-            final SAML24UIIdPTO idpTO,\n+            final SAML2SP4UIIdPTO idpTO,\n             final ItemTransformersTogglePanel mapItemTransformers,\n             final JEXLTransformersTogglePanel jexlTransformers) {\n "},{"sha":"b94e979e174c4fd1f6340e352c27c7480d717769","filename":"ext/saml2sp4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/panels/SAMLSSOLoginFormPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSAMLSSOLoginFormPanel.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -28,5 +28,4 @@ public class SAMLSSOLoginFormPanel extends AbstractSAMLSSOLoginFormPanel {\n     public SAMLSSOLoginFormPanel(final String id, final BaseSession session) {\n         super(id, session);\n     }\n-\n }"},{"sha":"06ec97575fff4a549421d4fba06b8d3742fafea0","filename":"ext/saml2sp4ui/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2SP4UIIdPTO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SP4UIIdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SP4UIIdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SP4UIIdPTO.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,7 +26,7 @@\n import javax.ws.rs.PathParam;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n-public class SAML24UIIdPTO implements EntityTO, ItemContainerTO {\n+public class SAML2SP4UIIdPTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = 4426527052873779881L;\n ","previous_filename":"ext/saml2sp4ui/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML24UIIdPTO.java"},{"sha":"01133c5f78f6cb4f87c9eab7c9bd1627557ac1a7","filename":"ext/saml2sp4ui/common-lib/src/main/java/org/apache/syncope/common/lib/types/SAML2SP4UIImplementationType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SP4UIImplementationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SP4UIImplementationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SP4UIImplementationType.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -29,7 +29,7 @@ public final class SAML2SP4UIImplementationType {\n \n     private static final Map<String, String> VALUES = Map.ofEntries(\n             Pair.of(IDP_ACTIONS,\n-                    \"org.apache.syncope.core.provisioning.api.SAML2IdPActions\"),\n+                    \"org.apache.syncope.core.provisioning.api.SAML2SP4UIIdPActions\"),\n             Pair.of(REQUESTED_AUTHN_CONTEXT_PROVIDER,\n                     \"org.apache.syncope.core.provisioning.api.RequestedAuthnContextProvider\"));\n "},{"sha":"73e7f2d619f5eaa26bc976a72cd66c63c2b8dc2b","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/SAML2SP4UIIdPLogic.java","status":"modified","additions":9,"deletions":18,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UIIdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UIIdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UIIdPLogic.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -24,14 +24,12 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.apache.syncope.common.lib.types.SAML2SP4UIEntitlement;\n import org.apache.syncope.core.logic.init.SAML2SP4UILoader;\n import org.apache.syncope.core.logic.saml2.SAML2ClientCache;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.pac4j.saml.config.SAML2Configuration;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -41,7 +39,7 @@\n import org.apache.syncope.core.provisioning.api.data.SAML2SP4UIIdPDataBinder;\n \n @Component\n-public class SAML2SP4UIIdPLogic extends AbstractTransactionalLogic<SAML24UIIdPTO> {\n+public class SAML2SP4UIIdPLogic extends AbstractTransactionalLogic<SAML2SP4UIIdPTO> {\n \n     @Autowired\n     private SAML2SP4UILoader loader;\n@@ -57,13 +55,13 @@ public class SAML2SP4UIIdPLogic extends AbstractTransactionalLogic<SAML24UIIdPTO\n \n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n-    public List<SAML24UIIdPTO> list() {\n+    public List<SAML2SP4UIIdPTO> list() {\n         return idpDAO.findAll().stream().map(binder::getIdPTO).collect(Collectors.toList());\n     }\n \n     @PreAuthorize(\"hasRole('\" + SAML2SP4UIEntitlement.IDP_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public SAML24UIIdPTO read(final String key) {\n+    public SAML2SP4UIIdPTO read(final String key) {\n         SAML2SP4UIIdP idp = idpDAO.find(key);\n         if (idp == null) {\n             throw new NotFoundException(\"SAML 2.0 IdP '\" + key + '\\'');\n@@ -75,7 +73,7 @@ public SAML24UIIdPTO read(final String key) {\n     @PreAuthorize(\"hasRole('\" + SAML2SP4UIEntitlement.IDP_IMPORT + \"')\")\n     public String importFromMetadata(final InputStream input) {\n         try {\n-            SAML24UIIdPTO idpTO = saml2ClientCache.importMetadata(input, loader.newSAML2Configuration());\n+            SAML2SP4UIIdPTO idpTO = SAML2ClientCache.importMetadata(input, loader.newSAML2Configuration());\n             SAML2SP4UIIdP idp = idpDAO.save(binder.create(idpTO));\n \n             return idp.getKey();\n@@ -89,15 +87,8 @@ public String importFromMetadata(final InputStream input) {\n         }\n     }\n \n-    private static void setBindingType(final SAML2Configuration cfg, final SAML2BindingType type) {\n-        cfg.setAuthnRequestBindingType(type.getUri());\n-        cfg.setResponseBindingType(SAML2BindingType.POST.getUri());\n-        cfg.setSpLogoutRequestBindingType(type.getUri());\n-        cfg.setSpLogoutResponseBindingType(type.getUri());\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + SAML2SP4UIEntitlement.IDP_UPDATE + \"')\")\n-    public void update(final SAML24UIIdPTO saml2IdpTO) {\n+    public void update(final SAML2SP4UIIdPTO saml2IdpTO) {\n         SAML2SP4UIIdP idp = idpDAO.find(saml2IdpTO.getKey());\n         if (idp == null) {\n             throw new NotFoundException(\"SAML 2.0 IdP '\" + saml2IdpTO.getKey() + '\\'');\n@@ -119,7 +110,7 @@ public void delete(final String key) {\n     }\n \n     @Override\n-    protected SAML24UIIdPTO resolveReference(final Method method, final Object... args)\n+    protected SAML2SP4UIIdPTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         String key = null;\n@@ -128,8 +119,8 @@ protected SAML24UIIdPTO resolveReference(final Method method, final Object... ar\n             for (int i = 0; key == null && i < args.length; i++) {\n                 if (args[i] instanceof String) {\n                     key = (String) args[i];\n-                } else if (args[i] instanceof SAML24UIIdPTO) {\n-                    key = ((SAML24UIIdPTO) args[i]).getKey();\n+                } else if (args[i] instanceof SAML2SP4UIIdPTO) {\n+                    key = ((SAML2SP4UIIdPTO) args[i]).getKey();\n                 }\n             }\n         }"},{"sha":"54d39c86ae1ce319e6bedeb8058aac6a61c2a831","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/SAML2SP4UILogic.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -364,11 +364,10 @@ public SAML2LoginResponse validateLoginResponse(final SAML2Response saml2Respons\n \n                 loginResp.getAttrs().clear();\n                 loginResp.getAttrs().addAll(userTO.getPlainAttrs());\n-                loginResp.getAttrs().addAll(userTO.getVirAttrs());\n                 if (StringUtils.isNotBlank(userTO.getUsername())) {\n                     loginResp.setUsername(userTO.getUsername());\n                 } else {\n-                    loginResp.setUsername(loginResp.getNameID());\n+                    loginResp.setUsername(keyValue);\n                 }\n \n                 loginResp.setSelfReg(true);"},{"sha":"8575f0caec768f7a5ba520aef9e0e731e729f17b","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2ClientCache.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -27,7 +27,7 @@\n import java.util.Optional;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.opensaml.saml.common.xml.SAMLConstants;\n import org.opensaml.saml.saml2.core.NameID;\n@@ -53,7 +53,7 @@ public Optional<SAML2Client> get(final String idpEntityID, final String spEntity\n                 && spEntityID.equals(c.getConfiguration().getServiceProviderEntityId())).findFirst();\n     }\n \n-    private SAML2Client newSAML2Client(final Resource metadata, final SAML2Configuration cfg) {\n+    private static SAML2Client newSAML2Client(final Resource metadata, final SAML2Configuration cfg) {\n         cfg.setIdentityProviderMetadataResource(metadata);\n \n         SAML2Client saml2Client = new SAML2Client(cfg);\n@@ -62,11 +62,13 @@ private SAML2Client newSAML2Client(final Resource metadata, final SAML2Configura\n         return saml2Client;\n     }\n \n-    public SAML24UIIdPTO importMetadata(final InputStream metadata, final SAML2Configuration cfg) throws IOException {\n+    public static SAML2SP4UIIdPTO importMetadata(\n+            final InputStream metadata, final SAML2Configuration cfg) throws IOException {\n+\n         SAML2Client saml2Client = newSAML2Client(new ByteArrayResource(IOUtils.readBytesFromStream(metadata)), cfg);\n         String entityId = saml2Client.getConfiguration().getIdentityProviderMetadataResolver().getEntityId();\n \n-        SAML24UIIdPTO idpTO = new SAML24UIIdPTO();\n+        SAML2SP4UIIdPTO idpTO = new SAML2SP4UIIdPTO();\n         idpTO.setEntityID(entityId);\n         idpTO.setName(entityId);\n \n@@ -120,10 +122,6 @@ public SAML2Client add(\n         return saml2Client;\n     }\n \n-    public boolean remove(final SAML2Client saml2Client) {\n-        return cache.remove(saml2Client);\n-    }\n-\n     public boolean removeAll(final String idpEntityID) {\n         return cache.removeIf(c -> idpEntityID.equals(c.getIdentityProviderResolvedEntityId()));\n     }"},{"sha":"3d1ab5b496da6bdc87027adfe52e398c67ac45a6","filename":"ext/saml2sp4ui/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/SAML2SP4UIIdPDataBinder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSAML2SP4UIIdPDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSAML2SP4UIIdPDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSAML2SP4UIIdPDataBinder.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -18,15 +18,15 @@\n  */\n package org.apache.syncope.core.provisioning.api.data;\n \n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.core.persistence.api.entity.SAML2SP4UIIdP;\n \n public interface SAML2SP4UIIdPDataBinder {\n \n-    SAML24UIIdPTO getIdPTO(SAML2SP4UIIdP idp);\n+    SAML2SP4UIIdPTO getIdPTO(SAML2SP4UIIdP idp);\n \n-    SAML2SP4UIIdP create(SAML24UIIdPTO idpTO);\n+    SAML2SP4UIIdP create(SAML2SP4UIIdPTO idpTO);\n \n-    SAML2SP4UIIdP update(SAML2SP4UIIdP idp, SAML24UIIdPTO idpTO);\n+    SAML2SP4UIIdP update(SAML2SP4UIIdP idp, SAML2SP4UIIdPTO idpTO);\n \n }"},{"sha":"0efa2b3a946bfa3c10ce6fdf5d2f746cfa4ccff3","filename":"ext/saml2sp4ui/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2SP4UIIdPDataBinderImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2SP4UIIdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2SP4UIIdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2SP4UIIdPDataBinderImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -69,11 +69,11 @@ public class SAML2SP4UIIdPDataBinderImpl implements SAML2SP4UIIdPDataBinder {\n     private IntAttrNameParser intAttrNameParser;\n \n     @Override\n-    public SAML2SP4UIIdP create(final SAML24UIIdPTO idpTO) {\n+    public SAML2SP4UIIdP create(final SAML2SP4UIIdPTO idpTO) {\n         return update(entityFactory.newEntity(SAML2SP4UIIdP.class), idpTO);\n     }\n \n-    private void populateItems(final SAML24UIIdPTO idpTO, final SAML2SP4UIIdP idp) {\n+    private void populateItems(final SAML2SP4UIIdPTO idpTO, final SAML2SP4UIIdP idp) {\n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n         SyncopeClientException invalidMapping =\n                 SyncopeClientException.build(ClientExceptionType.InvalidMapping);\n@@ -146,7 +146,7 @@ private void populateItems(final SAML24UIIdPTO idpTO, final SAML2SP4UIIdP idp) {\n     }\n \n     @Override\n-    public SAML2SP4UIIdP update(final SAML2SP4UIIdP idp, final SAML24UIIdPTO idpTO) {\n+    public SAML2SP4UIIdP update(final SAML2SP4UIIdP idp, final SAML2SP4UIIdPTO idpTO) {\n         idp.setEntityID(idpTO.getEntityID());\n         idp.setName(idpTO.getName());\n         idp.setMetadata(Base64.getMimeDecoder().decode(idpTO.getMetadata()));\n@@ -198,7 +198,7 @@ public SAML2SP4UIIdP update(final SAML2SP4UIIdP idp, final SAML24UIIdPTO idpTO)\n         return idapDAO.save(idp);\n     }\n \n-    private static void populateItems(final SAML2SP4UIIdP idp, final SAML24UIIdPTO idpTO) {\n+    private static void populateItems(final SAML2SP4UIIdP idp, final SAML2SP4UIIdPTO idpTO) {\n         idp.getItems().forEach(item -> {\n             ItemTO itemTO = new ItemTO();\n             itemTO.setKey(item.getKey());\n@@ -220,8 +220,8 @@ private static void populateItems(final SAML2SP4UIIdP idp, final SAML24UIIdPTO i\n     }\n \n     @Override\n-    public SAML24UIIdPTO getIdPTO(final SAML2SP4UIIdP idp) {\n-        SAML24UIIdPTO idpTO = new SAML24UIIdPTO();\n+    public SAML2SP4UIIdPTO getIdPTO(final SAML2SP4UIIdP idp) {\n+        SAML2SP4UIIdPTO idpTO = new SAML2SP4UIIdPTO();\n \n         idpTO.setKey(idp.getKey());\n         idpTO.setEntityID(idp.getEntityID());"},{"sha":"dd5e987a4201fc442694a76a7415ed2d5f53eb3c","filename":"ext/saml2sp4ui/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2SP4UIIdPService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SP4UIIdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SP4UIIdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SP4UIIdPService.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -39,7 +39,7 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n@@ -59,7 +59,7 @@ public interface SAML2SP4UIIdPService extends JAXRSService {\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<SAML24UIIdPTO> list();\n+    List<SAML2SP4UIIdPTO> list();\n \n     /**\n      * Returns the SAML 2.0 Identity Provider with matching entityID, if available.\n@@ -70,7 +70,7 @@ public interface SAML2SP4UIIdPService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    SAML24UIIdPTO read(@PathParam(\"key\") String key);\n+    SAML2SP4UIIdPTO read(@PathParam(\"key\") String key);\n \n     /**\n      * Imports the SAML 2.0 Identity Provider definitions available in the provided XML metadata.\n@@ -96,7 +96,7 @@ public interface SAML2SP4UIIdPService extends JAXRSService {\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void update(@NotNull SAML24UIIdPTO saml2IdpTO);\n+    void update(@NotNull SAML2SP4UIIdPTO saml2IdpTO);\n \n     /**\n      * Deletes the SAML 2.0 Identity Provider with matching entityID."},{"sha":"620242d55eab37ac5dc21177c6ea31bd6476024b","filename":"ext/saml2sp4ui/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2SP4UIIdPServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIIdPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIIdPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIIdPServiceImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -21,7 +21,7 @@\n import java.io.InputStream;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.core.logic.SAML2SP4UIIdPLogic;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -35,12 +35,12 @@ public class SAML2SP4UIIdPServiceImpl extends AbstractServiceImpl implements SAM\n     private SAML2SP4UIIdPLogic logic;\n \n     @Override\n-    public List<SAML24UIIdPTO> list() {\n+    public List<SAML2SP4UIIdPTO> list() {\n         return logic.list();\n     }\n \n     @Override\n-    public SAML24UIIdPTO read(final String key) {\n+    public SAML2SP4UIIdPTO read(final String key) {\n         return logic.read(key);\n     }\n \n@@ -50,7 +50,7 @@ public Response importFromMetadata(final InputStream input) {\n     }\n \n     @Override\n-    public void update(final SAML24UIIdPTO saml2IdpTO) {\n+    public void update(final SAML2SP4UIIdPTO saml2IdpTO) {\n         logic.update(saml2IdpTO);\n     }\n "},{"sha":"f72104b759c9e4073d08aa376ff2507d763e44cb","filename":"ext/saml2sp4ui/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2SP4UIServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SP4UIServiceImpl.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -65,7 +65,7 @@ public SAML2LoginResponse validateLoginResponse(final SAML2Response reponse) {\n     @Override\n     public SAML2Request createLogoutRequest(final String spEntityID, final String urlContext) {\n         return logic.createLogoutRequest(\n-                getJWTToken(),\n+                getAccessToken(),\n                 StringUtils.appendIfMissing(spEntityID, \"/\"),\n                 urlContext);\n     }\n@@ -75,7 +75,7 @@ public void validateLogoutResponse(final SAML2Response response) {\n         logic.validateLogoutResponse(response);\n     }\n \n-    private String getJWTToken() {\n+    private String getAccessToken() {\n         String auth = messageContext.getHttpHeaders().getHeaderString(HttpHeaders.AUTHORIZATION);\n         String[] parts = Optional.ofNullable(auth).map(s -> s.split(\" \")).orElse(null);\n         if (parts == null || parts.length != 2 || !\"Bearer\".equals(parts[0])) {"},{"sha":"1aec226959c099405baf1d2a666524daf92b9ac8","filename":"fit/console-reference/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -82,8 +82,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     "},{"sha":"7e5b0d5f84a633ea236140ee503baaa1bd9d8dcf","filename":"fit/console-reference/src/main/resources/oidcclient-agent.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-conf.directory=${conf.directory}\n-\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-\n-useGZIPCompression=true"},{"sha":"f29a909688bcafb99a847e1740f70808b68a4f14","filename":"fit/console-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,30 +26,6 @@ under the License.\n \n   <display-name>Apache Syncope ${syncope.version} Console</display-name>\n \n-  <!-- OIDC Client Parameters -->\n-  <context-param>\n-    <param-name>oidcclient.login.success.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.OIDCClientLogin</param-value>\n-  </context-param>\n-  <context-param>\n-    <param-name>oidcclient.login.error.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n-  </context-param>\n-  \n-  <context-param>\n-    <param-name>oidcclient.logout.success.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.OIDCClientLogout</param-value>\n-  </context-param>\n-  <context-param>\n-    <param-name>oidcclient.logout.error.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n-  </context-param>\n-  \n-  <context-param>\n-    <param-name>oidcclient.redirect.selfreg</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.OIDCClientSelfReg</param-value>\n-  </context-param>\n-\n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>\n     <session-timeout>30</session-timeout>"},{"sha":"cf71c551e2ea3ab56634d656d275b1a583fd61d0","filename":"fit/core-reference/pom.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -197,14 +197,14 @@ under the License.\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>          \n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n@@ -1841,13 +1841,13 @@ under the License.\n         </dependency>\n         \n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-          <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-          <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+          <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+          <artifactId>syncope-ext-oidcc4ui-persistence-jpa</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n         "},{"sha":"726bb25cafbf9f173631104d7f81424c8730374e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -120,8 +120,6 @@\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.ImplementationService;\n import org.apache.syncope.common.rest.api.service.MailTemplateService;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.syncope.common.rest.api.service.ReconciliationService;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n@@ -155,6 +153,8 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIService;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n @SpringJUnitConfig({ CoreITContext.class, SelfKeymasterClientContext.class, ZookeeperKeymasterClientContext.class })\n public abstract class AbstractITCase {\n@@ -317,9 +317,9 @@ public abstract class AbstractITCase {\n \n     protected static SAML2SP4UIIdPService saml2SP4UIIdPService;\n \n-    protected static OIDCClientService oidcClientService;\n+    protected static OIDCC4UIService oidcClientService;\n \n-    protected static OIDCProviderService oidcProviderService;\n+    protected static OIDCC4UIProviderService oidcProviderService;\n \n     protected static SCIMConfService scimConfService;\n \n@@ -409,8 +409,8 @@ public static void restSetup() {\n         camelRouteService = adminClient.getService(CamelRouteService.class);\n         saml2SP4UIService = adminClient.getService(SAML2SP4UIService.class);\n         saml2SP4UIIdPService = adminClient.getService(SAML2SP4UIIdPService.class);\n-        oidcClientService = adminClient.getService(OIDCClientService.class);\n-        oidcProviderService = adminClient.getService(OIDCProviderService.class);\n+        oidcClientService = adminClient.getService(OIDCC4UIService.class);\n+        oidcProviderService = adminClient.getService(OIDCC4UIProviderService.class);\n         scimConfService = adminClient.getService(SCIMConfService.class);\n         clientAppService = adminClient.getService(ClientAppService.class);\n         authModuleService = adminClient.getService(AuthModuleService.class);"},{"sha":"75fc77228d4ca2797b6af53ef1475ad56b6e8fec","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/OIDCClientDetector.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FOIDCClientDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FOIDCClientDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FOIDCClientDetector.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -20,9 +20,9 @@\n \n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n public class OIDCClientDetector {\n \n@@ -39,7 +39,7 @@ public static boolean isOIDCClientAvailable() {\n                             setContentType(SyncopeClientFactoryBean.ContentType.JSON).\n                             create(new AnonymousAuthenticationHandler(\n                                     AbstractITCase.ANONYMOUS_UNAME, AbstractITCase.ANONYMOUS_KEY)).\n-                            getService(OIDCProviderService.class).list();\n+                            getService(OIDCC4UIProviderService.class).list();\n                     ENABLED = true;\n                 } catch (Exception e) {\n                     // ignore"},{"sha":"2fb16c76993e1aad1be719748820db1e450792bd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/OIDCClientITCase.java","status":"removed","additions":0,"deletions":125,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,125 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.core;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assumptions.assumeTrue;\n-\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.service.OIDCClientService;\n-import org.apache.syncope.fit.AbstractITCase;\n-import org.apache.syncope.fit.OIDCClientDetector;\n-import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-\n-public class OIDCClientITCase extends AbstractITCase {\n-\n-    @BeforeAll\n-    public static void createOIDCProviderWithoutDiscovery() throws Exception {\n-        if (!OIDCClientDetector.isOIDCClientAvailable()) {\n-            return;\n-        }\n-\n-        assertTrue(oidcProviderService.list().isEmpty());\n-\n-        OIDCProviderTO google = new OIDCProviderTO();\n-        google.setAuthorizationEndpoint(\"AuthorizationEndpoint\");\n-        google.setClientID(\"ClientID\");\n-        google.setClientSecret(\"ClientSecret\");\n-        google.setIssuer(\"https://accounts.google.com\");\n-        google.setJwksUri(\"JwksUri\");\n-        google.setName(\"Google\");\n-        google.setTokenEndpoint(\"TokenEndpoint\");\n-        google.setUserinfoEndpoint(\"UserinfoEndpoint\");\n-\n-        oidcProviderService.create(google);\n-    }\n-\n-    @AfterAll\n-    public static void clearProviders() throws Exception {\n-        if (!OIDCClientDetector.isOIDCClientAvailable()) {\n-            return;\n-        }\n-\n-        oidcProviderService.list().forEach(op -> oidcProviderService.delete(op.getKey()));\n-    }\n-\n-    @Test\n-    public void createLoginRequest() {\n-        assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n-\n-        SyncopeClient anonymous = clientFactory.create(\n-                new AnonymousAuthenticationHandler(ANONYMOUS_UNAME, ANONYMOUS_KEY));\n-        OIDCLoginRequestTO loginRequest = anonymous.getService(OIDCClientService.class).\n-                createLoginRequest(\"http://localhost:9080/syncope-console/oidcclient/code-consumer\", \"Google\");\n-\n-        assertNotNull(loginRequest);\n-        assertEquals(\"http://localhost:9080/syncope-console/oidcclient/code-consumer\", loginRequest.getRedirectURI());\n-        assertNotNull(loginRequest.getProviderAddress());\n-        assertNotNull(loginRequest.getClientId());\n-        assertNotNull(loginRequest.getResponseType());\n-        assertNotNull(loginRequest.getScope());\n-        assertNotNull(loginRequest.getState());\n-    }\n-\n-    @Test\n-    public void setProviderMapping() {\n-        assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n-\n-        OIDCProviderTO google = oidcProviderService.list().stream().\n-                filter(object -> \"Google\".equals(object.getName())).findFirst().orElse(null);\n-        assertNotNull(google);\n-        assertFalse(google.isCreateUnmatching());\n-        assertNull(google.getUserTemplate());\n-        assertFalse(google.getItems().isEmpty());\n-        assertNotEquals(\"fullname\", google.getConnObjectKeyItem().getIntAttrName());\n-        assertNotEquals(\"given_name\", google.getConnObjectKeyItem().getExtAttrName());\n-\n-        google.setCreateUnmatching(true);\n-\n-        UserTO userTemplate = new UserTO();\n-        userTemplate.setRealm(\"'/'\");\n-        google.setUserTemplate(userTemplate);\n-\n-        google.getItems().clear();\n-        ItemTO keyMapping = new ItemTO();\n-        keyMapping.setIntAttrName(\"fullname\");\n-        keyMapping.setExtAttrName(\"given_name\");\n-        google.setConnObjectKeyItem(keyMapping);\n-\n-        oidcProviderService.update(google);\n-\n-        google = oidcProviderService.read(google.getKey());\n-        assertTrue(google.isCreateUnmatching());\n-        assertEquals(userTemplate, google.getUserTemplate());\n-        assertEquals(\"fullname\", google.getConnObjectKeyItem().getIntAttrName());\n-        assertEquals(\"given_name\", google.getConnObjectKeyItem().getExtAttrName());\n-    }\n-}"},{"sha":"58ccf44e21462df82940ae11640671939defc975","filename":"fit/enduser-reference/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fenduser-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fenduser-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -64,8 +64,8 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     "},{"sha":"7e5b0d5f84a633ea236140ee503baaa1bd9d8dcf","filename":"fit/enduser-reference/src/main/resources/oidcclient-agent.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca3e1ebac58651568a73dfb3289ffcad2d80fdc4/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties?ref=ca3e1ebac58651568a73dfb3289ffcad2d80fdc4","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-conf.directory=${conf.directory}\n-\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-\n-useGZIPCompression=true"},{"sha":"545f1dc9a394b500b4dc232f9ff8bfd28728275f","filename":"fit/enduser-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -26,29 +26,6 @@ under the License.\n \n   <display-name>Apache Syncope ${syncope.version} Enduser</display-name>\n \n-  <context-param>\n-    <param-name>oidcclient.login.success.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.OIDCClientLogin</param-value>\n-  </context-param>\n-  <context-param>\n-    <param-name>oidcclient.login.error.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.Login</param-value>\n-  </context-param>\n-  \n-  <context-param>\n-    <param-name>oidcclient.logout.success.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.OIDCClientLogout</param-value>\n-  </context-param>\n-  <context-param>\n-    <param-name>oidcclient.logout.error.url</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.Login</param-value>\n-  </context-param>\n-\n-  <context-param>\n-    <param-name>oidcclient.redirect.selfreg</param-name>\n-    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.OIDCClientSelfReg</param-value>\n-  </context-param>\n-  \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>\n     <session-timeout>30</session-timeout>"},{"sha":"3b04d0bba1def6a74656cd820907667f28bd71fe","filename":"fit/wa-reference/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fpom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -60,8 +60,8 @@ under the License.\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-      <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+      <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+      <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>"},{"sha":"ddfa2a4f90279ed01b31d02d79acd7079ad671ec","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -41,7 +41,6 @@\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.rest.api.service.ClientAppService;\n-import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n import org.apache.syncope.common.rest.api.service.SRARouteService;\n import org.apache.syncope.common.rest.api.service.wa.WASAML2IdPMetadataService;\n@@ -51,6 +50,7 @@\n import org.slf4j.LoggerFactory;\n import org.apache.syncope.common.rest.api.service.SAML2SP4UIIdPService;\n import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.syncope.common.rest.api.service.OIDCC4UIProviderService;\n \n public class AbstractITCase {\n \n@@ -84,7 +84,7 @@ public class AbstractITCase {\n \n     protected static SAML2SP4UIIdPService saml2sp4UIIdPService;\n \n-    protected static OIDCProviderService oidcProviderService;\n+    protected static OIDCC4UIProviderService oidcProviderService;\n \n     @BeforeAll\n     public static void restSetup() {\n@@ -96,7 +96,7 @@ public static void restSetup() {\n         clientAppService = adminClient.getService(ClientAppService.class);\n         sraRouteService = adminClient.getService(SRARouteService.class);\n         saml2sp4UIIdPService = adminClient.getService(SAML2SP4UIIdPService.class);\n-        oidcProviderService = adminClient.getService(OIDCProviderService.class);\n+        oidcProviderService = adminClient.getService(OIDCC4UIProviderService.class);\n     }\n \n     @BeforeAll"},{"sha":"998b41ce2495c96def2f9365fe40dda24ff85b66","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -216,7 +216,7 @@ protected static AuthPolicyTO getAuthPolicy() {\n                     policyConf.getAuthModules().add(authModule);\n \n                     AuthPolicyTO policy = new AuthPolicyTO();\n-                    policy.setDescription(\"SRA auth policy\");\n+                    policy.setDescription(description);\n                     policy.setConf(policyConf);\n \n                     Response response = policyService.create(PolicyType.AUTH, policy);"},{"sha":"fd519dbaa795392a9ea1e22b304cdbc7fbb7d578","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/OIDCSRAITCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -109,6 +109,7 @@ protected static void oidcClientAppSetup(\n         clientApp.setClientId(clientId);\n         clientApp.setClientSecret(clientSecret);\n         clientApp.setSubjectType(OIDCSubjectType.PUBLIC);\n+        clientApp.getRedirectUris().clear();\n         clientApp.getRedirectUris().add(SRA_ADDRESS + \"/login/oauth2/code/\" + sraRegistrationId);\n         clientApp.setAuthPolicy(getAuthPolicy().getKey());\n         clientApp.setSignIdToken(true);"},{"sha":"be1a899edab540daa2edc19b05216f8ad3eeda92","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/AbstractUIITCase.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,12 +23,10 @@\n import static org.junit.jupiter.api.Assertions.fail;\n \n import java.io.IOException;\n-import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -55,7 +53,7 @@ protected static AuthPolicyTO getAuthPolicy() {\n                     policyConf.getAuthModules().add(ldapAuthModule);\n \n                     AuthPolicyTO policy = new AuthPolicyTO();\n-                    policy.setDescription(\"Test authentication\");\n+                    policy.setDescription(description);\n                     policy.setConf(policyConf);\n \n                     Response response = policyService.create(PolicyType.AUTH, policy);\n@@ -92,6 +90,8 @@ public void createUnmatching() throws IOException {\n         assertNotNull(userService.read(\"pullFromLDAP\"));\n     }\n \n+    protected abstract void doSelfReg(Runnable runnable);\n+\n     @Test\n     public void selfRegUnmatching() throws IOException {\n         try {\n@@ -100,21 +100,13 @@ public void selfRegUnmatching() throws IOException {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n \n-        List<SAML24UIIdPTO> idps = saml2sp4UIIdPService.list();\n-        assertEquals(1, idps.size());\n-\n-        SAML24UIIdPTO cas = idps.get(0);\n-        cas.setCreateUnmatching(false);\n-        cas.setSelfRegUnmatching(true);\n-        saml2sp4UIIdPService.update(cas);\n-\n-        try {\n-            sso(ENDUSER_ADDRESS, \"pullFromLDAP\", \"Password123\");\n-        } finally {\n-            cas.setCreateUnmatching(true);\n-            cas.setSelfRegUnmatching(false);\n-            saml2sp4UIIdPService.update(cas);\n-        }\n+        doSelfReg(() -> {\n+            try {\n+                sso(ENDUSER_ADDRESS, \"pullFromLDAP\", \"Password123\");\n+            } catch (IOException e) {\n+                fail(e);\n+            }\n+        });\n \n         try {\n             userService.read(\"pullFromLDAP\");"},{"sha":"05b77130d1816df87b08aae4fd01fb12d276edca","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/OIDC4UIITCase.java","status":"modified","additions":45,"deletions":52,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -23,11 +23,11 @@\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n-import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Optional;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.http.Consts;\n@@ -44,22 +44,17 @@\n import org.apache.http.impl.client.HttpClients;\n import org.apache.http.message.BasicNameValuePair;\n import org.apache.http.util.EntityUtils;\n+import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.OIDCProviderTO;\n+import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.to.client.OIDCRPTO;\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.ext.oidcclient.agent.Constants;\n import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n \n public class OIDC4UIITCase extends AbstractUIITCase {\n \n-    private static final String CLIENT_ID = OIDC4UIITCase.class.getSimpleName();\n-\n-    private static final String CLIENT_SECRET = OIDC4UIITCase.class.getSimpleName();\n-\n     private static void clientAppSetup(final String appName, final String baseAddress, final long appId) {\n         OIDCRPTO clientApp = clientAppService.list(ClientAppType.OIDCRP).stream().\n                 filter(app -> appName.equals(app.getName())).\n@@ -69,8 +64,8 @@ private static void clientAppSetup(final String appName, final String baseAddres\n                     OIDCRPTO app = new OIDCRPTO();\n                     app.setName(appName);\n                     app.setClientAppId(appId);\n-                    app.setClientId(CLIENT_ID);\n-                    app.setClientSecret(CLIENT_SECRET);\n+                    app.setClientId(appName);\n+                    app.setClientSecret(appName);\n \n                     Response response = clientAppService.create(ClientAppType.OIDCRP, app);\n                     if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n@@ -81,37 +76,48 @@ private static void clientAppSetup(final String appName, final String baseAddres\n                             ClientAppType.OIDCRP, response.getHeaderString(RESTHeaders.RESOURCE_KEY));\n                 });\n \n-        clientApp.setClientId(CLIENT_ID);\n-        clientApp.setClientSecret(CLIENT_SECRET);\n+        clientApp.setClientId(appName);\n+        clientApp.setClientSecret(appName);\n         clientApp.setSubjectType(OIDCSubjectType.PUBLIC);\n-        clientApp.getRedirectUris().add(baseAddress + Constants.URL_CONTEXT + \"/code-consumer\");\n+        clientApp.getRedirectUris().clear();\n+        clientApp.getRedirectUris().add(baseAddress + OIDCC4UIConstants.URL_CONTEXT + \"/code-consumer\");\n         clientApp.setAuthPolicy(getAuthPolicy().getKey());\n         clientApp.setSignIdToken(true);\n-        clientApp.setLogoutUri(baseAddress + Constants.URL_CONTEXT + \"/logout\");\n+        clientApp.setLogoutUri(baseAddress + OIDCC4UIConstants.URL_CONTEXT + \"/logout\");\n \n         clientAppService.update(ClientAppType.OIDCRP, clientApp);\n         clientAppService.pushToWA();\n     }\n \n+    private static String getAppName(final String address) {\n+        return CONSOLE_ADDRESS.equals(address)\n+                ? OIDC4UIITCase.class.getName() + \"_Console\"\n+                : OIDC4UIITCase.class.getName() + \"_Enduser\";\n+    }\n+\n     @BeforeAll\n     public static void consoleClientAppSetup() {\n-        clientAppSetup(OIDC4UIITCase.class.getName() + \"_Console\", CONSOLE_ADDRESS, 7L);\n+        clientAppSetup(getAppName(CONSOLE_ADDRESS), CONSOLE_ADDRESS, 7L);\n     }\n \n     @BeforeAll\n     public static void enduserClientAppSetup() {\n-        clientAppSetup(OIDC4UIITCase.class.getName() + \"_Enduser\", ENDUSER_ADDRESS, 8L);\n+        clientAppSetup(getAppName(ENDUSER_ADDRESS), ENDUSER_ADDRESS, 8L);\n     }\n \n-    @BeforeAll\n-    public static void oidcSetup() {\n-        List<OIDCProviderTO> ops = oidcProviderService.list();\n+    private static void oidcSetup(\n+            final String appName,\n+            final boolean createUnmatching,\n+            final boolean selfRegUnmatching) {\n+\n+        Optional<OIDCC4UIProviderTO> ops = oidcProviderService.list().stream().\n+                filter(op -> op.getName().equals(appName)).findFirst();\n         if (ops.isEmpty()) {\n-            OIDCProviderTO cas = new OIDCProviderTO();\n-            cas.setName(\"CAS\");\n+            OIDCC4UIProviderTO cas = new OIDCC4UIProviderTO();\n+            cas.setName(appName);\n \n-            cas.setClientID(CLIENT_ID);\n-            cas.setClientSecret(CLIENT_SECRET);\n+            cas.setClientID(appName);\n+            cas.setClientSecret(appName);\n \n             cas.setIssuer(WA_ADDRESS + \"/oidc/\");\n             cas.setAuthorizationEndpoint(WA_ADDRESS + \"/oidc/authorize\");\n@@ -120,12 +126,12 @@ public static void oidcSetup() {\n             cas.setUserinfoEndpoint(WA_ADDRESS + \"/oidc/profile\");\n             cas.setEndSessionEndpoint(WA_ADDRESS + \"/oidc/logout\");\n \n-            cas.setCreateUnmatching(true);\n-            cas.setSelfRegUnmatching(false);\n+            cas.setCreateUnmatching(createUnmatching);\n+            cas.setSelfRegUnmatching(selfRegUnmatching);\n \n             ItemTO item = new ItemTO();\n             item.setIntAttrName(\"username\");\n-            item.setExtAttrName(\"NameID\");\n+            item.setExtAttrName(\"preferred_username\");\n             item.setConnObjectKey(true);\n             cas.setConnObjectKeyItem(item);\n \n@@ -158,6 +164,16 @@ public static void oidcSetup() {\n         }\n     }\n \n+    @BeforeAll\n+    public static void consoleOIDCSetup() {\n+        oidcSetup(getAppName(CONSOLE_ADDRESS), true, false);\n+    }\n+\n+    @BeforeAll\n+    public static void enduserOIDCSetup() {\n+        oidcSetup(getAppName(ENDUSER_ADDRESS), false, true);\n+    }\n+\n     @Override\n     protected void sso(final String baseURL, final String username, final String password) throws IOException {\n         CloseableHttpClient httpclient = HttpClients.createDefault();\n@@ -170,7 +186,7 @@ protected void sso(final String baseURL, final String username, final String pas\n         assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n \n         // 2. click on the OpenID Connect Provider\n-        get = new HttpGet(baseURL + Constants.URL_CONTEXT + \"/login?op=CAS\");\n+        get = new HttpGet(baseURL + OIDCC4UIConstants.URL_CONTEXT + \"/login?op=\" + getAppName(baseURL));\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n         response = httpclient.execute(get, context);\n@@ -226,35 +242,12 @@ protected void sso(final String baseURL, final String username, final String pas\n         response = httpclient.execute(get, context);\n \n         // 3. verify that user is now authenticated\n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n-        response = httpclient.execute(get, context);\n         assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n         assertTrue(EntityUtils.toString(response.getEntity()).contains(username));\n     }\n \n-    @Test\n-    @Override\n-    public void sso2Console() throws IOException {\n-        assumeTrue(false);\n-        super.sso2Console();\n-    }\n-\n-    @Test\n-    @Override\n-    public void sso2Enduser() throws IOException {\n-        assumeTrue(false);\n-        super.sso2Enduser();\n-    }\n-\n-    @Override\n-    public void createUnmatching() throws IOException {\n-        assumeTrue(false);\n-        super.createUnmatching();\n-    }\n-\n     @Override\n-    public void selfRegUnmatching() throws IOException {\n-        assumeTrue(false);\n-        super.selfRegUnmatching();\n+    protected void doSelfReg(final Runnable runnable) {\n+        runnable.run();\n     }\n }"},{"sha":"f7c245448045667e80fe5beb74d15f8496391ee3","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -48,7 +48,7 @@\n import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ItemTO;\n-import org.apache.syncope.common.lib.to.SAML24UIIdPTO;\n+import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.to.client.SAML2SPTO;\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.SAML2SPNameId;\n@@ -113,10 +113,10 @@ public static void idpSetup() {\n                     type(clientFactory.getContentType().getMediaType());\n         }\n \n-        List<SAML24UIIdPTO> idps = saml2sp4UIIdPService.list();\n+        List<SAML2SP4UIIdPTO> idps = saml2sp4UIIdPService.list();\n         assertEquals(1, idps.size());\n \n-        SAML24UIIdPTO cas = idps.get(0);\n+        SAML2SP4UIIdPTO cas = idps.get(0);\n         cas.setName(\"CAS\");\n         cas.setCreateUnmatching(true);\n         cas.setSelfRegUnmatching(false);\n@@ -240,4 +240,23 @@ protected void sso(final String baseURL, final String username, final String pas\n         assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n         assertTrue(EntityUtils.toString(response.getEntity()).contains(username));\n     }\n+\n+    @Override\n+    protected void doSelfReg(final Runnable runnable) {\n+        List<SAML2SP4UIIdPTO> idps = saml2sp4UIIdPService.list();\n+        assertEquals(1, idps.size());\n+\n+        SAML2SP4UIIdPTO cas = idps.get(0);\n+        cas.setCreateUnmatching(false);\n+        cas.setSelfRegUnmatching(true);\n+        saml2sp4UIIdPService.update(cas);\n+\n+        try {\n+            runnable.run();\n+        } finally {\n+            cas.setCreateUnmatching(true);\n+            cas.setSelfRegUnmatching(false);\n+            saml2sp4UIIdPService.update(cas);\n+        }\n+    }\n }"},{"sha":"9b6d98aec979126f472a5240892d03d7a34be7d3","filename":"pom.xml","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -636,16 +636,6 @@ under the License.\n         <artifactId>cxf-rt-features-logging</artifactId>\n         <version>${cxf.version}</version>\n       </dependency>\n-      <dependency>\n-        <groupId>org.apache.cxf</groupId>\n-        <artifactId>cxf-rt-rs-security-sso-oidc</artifactId>\n-        <version>${cxf.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apache.cxf</groupId>\n-        <artifactId>cxf-rt-rs-extension-providers</artifactId>\n-        <version>${cxf.version}</version>\n-      </dependency>\n       <!-- /CXF -->\n \n       <!-- Swagger -->"},{"sha":"79a295066c970b45520038a411304848b8153666","filename":"sra/src/test/resources/debug/application-debug.properties","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -14,10 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-#am.type=OIDC\n-#am.oidc.configuration=http://localhost:9080/syncope-wa/oidc/\n-#am.oidc.client.id=oidcTestClientId\n-#am.oidc.client.secret=oidcTestClientSecret\n+am.type=OIDC\n+am.oidc.configuration=http://localhost:9080/syncope-wa/oidc/\n+am.oidc.client.id=oidcTestClientId\n+am.oidc.client.secret=oidcTestClientSecret\n \n #am.type=OAUTH2\n #am.oauth2.tokenUri=http://localhost:9080/syncope-wa/oauth2.0/accessToken\n@@ -30,20 +30,20 @@\n #am.oauth2.client.id=oauth2TestClientId\n #am.oauth2.client.secret=oauth2TestClientSecret\n \n-am.type=SAML2\n-am.saml2.sp.authnrequest.binding=POST\n-am.saml2.sp.logout.request.binding=POST\n-am.saml2.sp.logout.response.binding=REDIRECT\n-am.saml2.sp.entityId=http://localhost:8080\n-am.saml2.sp.skew=300\n-am.saml2.idp=http://localhost:9080/syncope-wa/idp/metadata\n-am.saml2.keystore=classpath:/saml.keystore.jks\n-am.saml2.keystore.type=jks\n-am.saml2.keystore.storepass=changeit\n-am.saml2.keystore.keypass=changeit\n+#am.type=SAML2\n+#am.saml2.sp.authnrequest.binding=POST\n+#am.saml2.sp.logout.request.binding=POST\n+#am.saml2.sp.logout.response.binding=REDIRECT\n+#am.saml2.sp.entityId=http://localhost:8080\n+#am.saml2.sp.skew=300\n+#am.saml2.idp=http://localhost:9080/syncope-wa/idp/metadata\n+#am.saml2.keystore=classpath:/saml.keystore.jks\n+#am.saml2.keystore.type=jks\n+#am.saml2.keystore.storepass=changeit\n+#am.saml2.keystore.keypass=changeit\n \n #am.type=CAS\n-#am.cas.server.name=http://localhost:80\n+#am.cas.server.name=http://localhost:9080\n #am.cas.url.prefix=http://localhost:9080/syncope-wa/\n \n global.postLogout=http://localhost:8080/logout"},{"sha":"345fde1932854d96d02d3729ac21bbb28f1c6e50","filename":"src/main/asciidoc/reference-guide/concepts/extensions.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fextensions.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fextensions.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fextensions.adoc?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -109,10 +109,10 @@ is going to be implemented in order to reach the user information to be used by\n ====\n The source code of this extension is available from the Apache Syncope\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/tree/syncope-{docVersion}/ext/oidcclient[source tree^]\n+https://github.com/apache/syncope/tree/syncope-{docVersion}/ext/oidcc4ui[source tree^]\n endif::[]\n ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/tree/master/ext/oidcclient[source tree^]\n+https://github.com/apache/syncope/tree/master/ext/oidcc4ui[source tree^]\n endif::[]\n .\n ===="},{"sha":"53b87ace73d8ef117174b7e1bf08ae5cf7102571","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/customization.adoc","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6cc0cc0cc419ae666b3daecf3ab3139b0672baf5/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcustomization.adoc?ref=6cc0cc0cc419ae666b3daecf3ab3139b0672baf5","patch":"@@ -385,13 +385,13 @@ Add the following dependencies to `core/pom.xml`:\n [source,xml,subs=\"verbatim,attributes\"]\n ----\n <dependency>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-rest-cxf</artifactId>\n   <version>${syncope.version}</version>\n </dependency>\n <dependency>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-persistence-jpa</artifactId>\n   <version>${syncope.version}</version>\n </dependency>\n ----\n@@ -583,13 +583,13 @@ Add the following dependencies to `console/pom.xml`:\n [source,xml,subs=\"verbatim,attributes\"]\n ----\n <dependency>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-client-console</artifactId>\n   <version>${syncope.version}</version>\n </dependency>\n ----\n \n-Copy `console/src/main/resources/all/oidcclient-agent.properties` to `console/src/main/resources/oidcclient-agent.properties`.\n+Copy `console/src/main/resources/all/oidcc4ui-agent.properties` to `console/src/main/resources/oidcc4ui-agent.properties`.\n \n \n [discrete]\n@@ -651,14 +651,12 @@ Add the following dependencies to `enduser/pom.xml`:\n [source,xml,subs=\"verbatim,attributes\"]\n ----\n <dependency>\n-  <groupId>org.apache.syncope.ext.oidcclient</groupId>\n-  <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n+  <groupId>org.apache.syncope.ext.oidcc4ui</groupId>\n+  <artifactId>syncope-ext-oidcc4ui-client-enduser</artifactId>\n   <version>${syncope.version}</version>\n </dependency>\n ----\n \n-Copy `enduser/src/main/resources/all/oidcclient-agent.properties` to `enduser/src/main/resources/oidcclient-agent.properties`.\n-\n [[customization-enduser-i18n]]\n ===== i18n \n "}]}