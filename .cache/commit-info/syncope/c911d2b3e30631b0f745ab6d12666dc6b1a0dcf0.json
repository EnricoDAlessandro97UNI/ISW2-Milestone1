{"sha":"c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM5MTFkMmIzZTMwNjMxYjBmNzQ1YWI2ZDEyNjY2ZGM2YjFhMGRjZjA=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-08-01T14:24:34Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-08-01T14:24:34Z"},"message":"merge from branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1615112 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c20b871e33422a1b2703c22cfbd26b2300fef153","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c20b871e33422a1b2703c22cfbd26b2300fef153"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/comments","author":null,"committer":null,"parents":[{"sha":"ef8379bea3eb3481e761ab35c1cded1e71d1adb6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef8379bea3eb3481e761ab35c1cded1e71d1adb6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef8379bea3eb3481e761ab35c1cded1e71d1adb6"}],"stats":{"total":270,"additions":162,"deletions":108},"files":[{"sha":"589606d3e6b8b6e0ed35b12b2e696a88d60236b5","filename":"installer/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fpom.xml?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -55,6 +55,10 @@ under the License.\n       <groupId>org.codehaus.izpack</groupId>\n       <artifactId>izpack-panel</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven.shared</groupId>\n+      <artifactId>maven-invoker</artifactId>\n+    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>"},{"sha":"7e24b7183693070d1bde1a4389a2b33147336603","filename":"installer/src/main/java/org/apache/syncope/installer/containers/Tomcat.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -20,7 +20,7 @@\n \n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n-import org.apache.syncope.installer.utilities.Commands;\n+import org.apache.syncope.installer.utilities.FileSystemUtils;\n import org.apache.syncope.installer.utilities.HttpUtils;\n \n public class Tomcat extends AbstractContainer {\n@@ -52,7 +52,7 @@ public Tomcat(final boolean tomcatSsl, final String tomcatHost, final String tom\n \n     public boolean deployCore() {\n         int status;\n-        if (Commands.IS_WIN) {\n+        if (FileSystemUtils.IS_WIN) {\n             status = httpUtils.getWithBasicAuth(pathEncoded(WIN_DEPLOY_SYNCOPE_CORE_QUERY));\n         } else {\n             status = httpUtils.getWithBasicAuth(path(UNIX_DEPLOY_SYNCOPE_CORE_QUERY));\n@@ -63,7 +63,7 @@ public boolean deployCore() {\n \n     public boolean deployConsole() {\n         int status;\n-        if (Commands.IS_WIN) {\n+        if (FileSystemUtils.IS_WIN) {\n             status = httpUtils.getWithBasicAuth(pathEncoded(WIN_DEPLOY_SYNCOPE_CONSOLE_QUERY));\n         } else {\n             status = httpUtils.getWithBasicAuth(path(UNIX_DEPLOY_SYNCOPE_CONSOLE_QUERY));"},{"sha":"d796d1d9e748bbfdf04ba0c2edcf093bd5b0efdc","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ArchetypeProcess.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.installer.processes;\n \n+import org.apache.syncope.installer.utilities.FileSystemUtils;\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n import org.apache.syncope.installer.files.Pom;\n-import org.apache.syncope.installer.utilities.Commands;\n+import org.apache.syncope.installer.utilities.MavenUtils;\n \n-public class ArchetypeProcess extends AbstractProcess {\n+public class ArchetypeProcess {\n \n     public void run(final AbstractUIProcessHandler handler, final String[] args) {\n \n@@ -39,19 +40,22 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         final String syncopeAdminPassword = args[9];\n \n         if (!new File(installPath).exists()) {\n-            exec(Commands.createDirectory(installPath), handler, null);\n+            FileSystemUtils.createDirectory(installPath, handler, null);\n         }\n-        exec(Commands.createArchetype(mavenDir, syncopeVersion, groupId, artifactId, secretKey, anonymousKey),\n-                handler, installPath);\n-        writeToFile(new File(installPath + \"/\" + artifactId + Pom.PATH),\n+        \n+        final MavenUtils mavenUtils = new MavenUtils(mavenDir);\n+        \n+        mavenUtils.archetypeGenerate(\n+                syncopeVersion, groupId, artifactId, secretKey, anonymousKey, installPath);\n+\n+        FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + Pom.PATH),\n                 String.format(Pom.FILE, syncopeVersion, syncopeVersion));\n \n-        exec(Commands.createDirectory(logsDirectory), handler, null);\n+        FileSystemUtils.createDirectory(logsDirectory, handler, null);\n \n-        exec(Commands.createDirectory(bundlesDirectory), handler, null);\n+        FileSystemUtils.createDirectory(bundlesDirectory, handler, null);\n \n-        exec(Commands.compileArchetype(mavenDir, logsDirectory, bundlesDirectory),\n-                handler, installPath + \"/\" + artifactId);\n+        mavenUtils.createPackage(installPath + \"/\" + artifactId, logsDirectory, bundlesDirectory);\n     }\n \n }"},{"sha":"ef7b00d31e008c623678d5ef09ffb5dd57f13b75","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ContainerProcess.java","status":"modified","additions":16,"deletions":13,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.installer.processes;\n \n+import org.apache.syncope.installer.utilities.FileSystemUtils;\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n import org.apache.syncope.installer.containers.Glassfish;\n@@ -28,9 +29,9 @@\n import org.apache.syncope.installer.files.JBossDeploymentStructureXml;\n import org.apache.syncope.installer.files.PersistenceContextEMFactoryXml;\n import org.apache.syncope.installer.files.WebXml;\n-import org.apache.syncope.installer.utilities.Commands;\n+import org.apache.syncope.installer.utilities.MavenUtils;\n \n-public class ContainerProcess extends AbstractProcess {\n+public class ContainerProcess {\n \n     private String installPath;\n \n@@ -91,24 +92,26 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         jbossAdminPassword = args[18];\n \n         if (withDataSource) {\n-            writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH), WebXml.withDataSource());\n+            FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH), WebXml.withDataSource());\n             switch (selectedContainer) {\n                 case JBOSS:\n-                    writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH), WebXml.withDataSourceForJBoss());\n-                    writeToFile(new File(installPath + \"/\" + artifactId + PersistenceContextEMFactoryXml.PATH),\n-                            PersistenceContextEMFactoryXml.FILE);\n-                    writeToFile(new File(installPath + \"/\" + artifactId + JBossDeploymentStructureXml.PATH),\n+                    FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH),\n+                            WebXml.withDataSourceForJBoss());\n+                    FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId\n+                            + PersistenceContextEMFactoryXml.PATH), PersistenceContextEMFactoryXml.FILE);\n+                    FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId\n+                            + JBossDeploymentStructureXml.PATH),\n                             String.format(JBossDeploymentStructureXml.FILE, jbossJdbcModuleName));\n                     break;\n                 case GLASSFISH:\n-                    writeToFile(new File(installPath + \"/\" + artifactId + GlassfishWebXml.PATH),\n+                    FileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + GlassfishWebXml.PATH),\n                             GlassfishWebXml.withDataSource());\n                     break;\n             }\n         }\n \n-        exec(Commands.compileArchetype(mavenDir, logsDirectory, bundlesDirectory),\n-                handler, installPath + \"/\" + artifactId);\n+        final MavenUtils mavenUtils = new MavenUtils(mavenDir);\n+        mavenUtils.createPackage(installPath + \"/\" + artifactId, logsDirectory, bundlesDirectory);\n \n         switch (selectedContainer) {\n             case TOMCAT:\n@@ -148,12 +151,12 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                 break;\n             case GLASSFISH:\n                 final String createJavaOptCommand = \"sh \" + glassfishDir + Glassfish.CREATE_JAVA_OPT_COMMAND;\n-                exec(createJavaOptCommand, handler, null);\n+                FileSystemUtils.exec(createJavaOptCommand, handler, null);\n \n                 final Glassfish glassfish = new Glassfish(installPath, artifactId);\n \n-                exec(\"sh \" + glassfishDir + Glassfish.DEPLOY_COMMAND + glassfish.deployCore(), handler, null);\n-                exec(\"sh \" + glassfishDir + Glassfish.DEPLOY_COMMAND + glassfish.deployConsole(), handler, null);\n+                FileSystemUtils.exec(\"sh \" + glassfishDir + Glassfish.DEPLOY_COMMAND + glassfish.deployCore(), handler, null);\n+                FileSystemUtils.exec(\"sh \" + glassfishDir + Glassfish.DEPLOY_COMMAND + glassfish.deployConsole(), handler, null);\n                 break;\n         }\n     }"},{"sha":"27470753bc46665e49648e920999bf211ede50c9","filename":"installer/src/main/java/org/apache/syncope/installer/processes/PersistenceProcess.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.installer.processes;\n \n+import org.apache.syncope.installer.utilities.FileSystemUtils;\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n import org.apache.syncope.installer.enums.DBs;\n import org.apache.syncope.installer.files.OrmXml;\n import org.apache.syncope.installer.files.PersistenceProperties;\n-import org.apache.syncope.installer.utilities.Commands;\n \n-public class PersistenceProcess extends AbstractProcess {\n+public class PersistenceProcess {\n \n     private String installPath;\n \n@@ -83,14 +83,14 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                 break;\n         }\n \n-        writeToFile(new File(\n+        FileSystemUtils.writeToFile(new File(\n                 installPath + \"/\" + artifactId + PersistenceProperties.PATH), persistenceProperties.toString());\n \n     }\n \n     private void writeOrmFile(final AbstractUIProcessHandler handler, final String content) {\n-        exec(Commands.createDirectory(installPath + \"/\" + artifactId + OrmXml.PATH_DIR), handler, null);\n+        FileSystemUtils.createDirectory(installPath + \"/\" + artifactId + OrmXml.PATH_DIR, handler, null);\n         final File orm = new File(installPath + \"/\" + artifactId + OrmXml.PATH_COMPLETE);\n-        writeToFile(orm, content);\n+        FileSystemUtils.writeToFile(orm, content);\n     }\n }"},{"sha":"464bb6e2716766dc2ea8b5b9c3ecc71ed0ab2272","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/Commands.java","status":"removed","additions":0,"deletions":72,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef8379bea3eb3481e761ab35c1cded1e71d1adb6/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FCommands.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef8379bea3eb3481e761ab35c1cded1e71d1adb6/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FCommands.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FCommands.java?ref=ef8379bea3eb3481e761ab35c1cded1e71d1adb6","patch":"@@ -1,72 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.installer.utilities;\n-\n-public class Commands {\n-\n-    public static String createArchetype(final String mavenDir, final String syncopeVersion, final String groupId,\n-            final String artifactId, final String secretKey, final String anonymousKey) {\n-        final StringBuilder commandBuilder = new StringBuilder();\n-        if (IS_WIN) {\n-            commandBuilder.append(\"cmd /c \").append(String.format(WIN_MAVEN, mavenDir));\n-        } else {\n-            commandBuilder.append(String.format(UNIX_MAVEN, mavenDir));\n-        }\n-        return commandBuilder.append(String.format(\n-                CREATE_ARCHETYPE_COMMAND, syncopeVersion, groupId, artifactId, secretKey, anonymousKey))\n-                .toString();\n-\n-    }\n-\n-    private static final String UNIX_MAVEN = \"%s/bin/mvn \";\n-\n-    private static final String WIN_MAVEN = \"%s\\\\bin\\\\mvn \";\n-\n-    private static final String CREATE_ARCHETYPE_COMMAND = \"archetype:generate \"\n-            + \"-DarchetypeGroupId=org.apache.syncope \"\n-            + \"-DarchetypeArtifactId=syncope-archetype \"\n-            + \"-DarchetypeRepository=http://repository.apache.org/content/repositories/snapshots \"\n-            + \"-DarchetypeVersion=%s \"\n-            + \"-DgroupId=%s -DartifactId=%s -DsecretKey=%s -DanonymousKey=%s -DinteractiveMode=false\";\n-\n-    public static String compileArchetype(\n-            final String mavenDir, final String logsDirectory, final String bundlesDirectory) {\n-        final StringBuilder commandBuilder = new StringBuilder();\n-        if (IS_WIN) {\n-            commandBuilder.append(\"cmd /c \").append(String.format(WIN_MAVEN, mavenDir));;\n-        } else {\n-            commandBuilder.append(String.format(UNIX_MAVEN, mavenDir));;\n-        }\n-        return commandBuilder.append(String.format(\n-                COMPILE_ARCHETYPE, logsDirectory, bundlesDirectory))\n-                .toString();\n-    }\n-\n-    private static final String COMPILE_ARCHETYPE\n-            = \"clean package -Dlog.directory=%s -Dbundles.directory=%s \";\n-\n-    public static String createDirectory(final String directory) {\n-        return String.format(CREATE_DIRECTORY, directory);\n-    }\n-\n-    private static final String CREATE_DIRECTORY = \"mkdir -p %s\";\n-\n-    public static final boolean IS_WIN = System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n-\n-}"},{"sha":"a4afebc0dfe675ee16246fce69721b047544fd6e","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java","status":"renamed","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.installer.processes;\n+package org.apache.syncope.installer.utilities;\n \n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.BufferedReader;\n@@ -27,9 +27,18 @@\n import java.io.InputStream;\n import java.io.InputStreamReader;\n \n-public abstract class AbstractProcess {\n+public class FileSystemUtils {\n \n-    protected void exec(final String cmd, final AbstractUIProcessHandler handler, final String path) {\n+    public static final boolean IS_WIN = System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n+\n+    public static void createDirectory(final String directoryPath,\n+            final AbstractUIProcessHandler handler, final String path) {\n+        exec(String.format(CREATE_DIRECTORY, directoryPath), null, path);\n+    }\n+\n+    private static final String CREATE_DIRECTORY = \"mkdir -p %s\";\n+\n+    public static void exec(final String cmd, final AbstractUIProcessHandler handler, final String path) {\n         try {\n             final ProcessBuilder builder = new ProcessBuilder(cmd.split(\" \"));\n             if (path != null && !path.isEmpty()) {\n@@ -41,7 +50,7 @@ protected void exec(final String cmd, final AbstractUIProcessHandler handler, fi\n         }\n     }\n \n-    protected void readResponse(final InputStream inputStream, final AbstractUIProcessHandler handler) throws\n+    private static void readResponse(final InputStream inputStream, final AbstractUIProcessHandler handler) throws\n             IOException {\n         final BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\n         String line = reader.readLine();\n@@ -52,7 +61,7 @@ protected void readResponse(final InputStream inputStream, final AbstractUIProce\n         inputStream.close();\n     }\n \n-    protected void writeToFile(final File orm, final String content) {\n+    public static void writeToFile(final File orm, final String content) {\n         try {\n             final FileWriter fw = new FileWriter(orm.getAbsoluteFile());\n             final BufferedWriter bw = new BufferedWriter(fw);","previous_filename":"installer/src/main/java/org/apache/syncope/installer/processes/AbstractProcess.java"},{"sha":"929cddf63ba7541c9ee78b447b094580b99cdcee","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.installer.utilities;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Properties;\n+import org.apache.maven.shared.invoker.DefaultInvocationRequest;\n+import org.apache.maven.shared.invoker.DefaultInvoker;\n+import org.apache.maven.shared.invoker.InvocationRequest;\n+import org.apache.maven.shared.invoker.InvocationResult;\n+import org.apache.maven.shared.invoker.Invoker;\n+import org.apache.maven.shared.invoker.MavenInvocationException;\n+\n+public class MavenUtils {\n+\n+    private static final String MAVEN_HOME_PROPERTY = \"maven.home\";\n+\n+    public MavenUtils(final String mavenHomeDirectory) {\n+        if (System.getProperty(MAVEN_HOME_PROPERTY) == null || System.getProperty(MAVEN_HOME_PROPERTY).isEmpty()) {\n+            System.setProperty(MAVEN_HOME_PROPERTY, mavenHomeDirectory);\n+        }\n+    }\n+\n+    public void archetypeGenerate(final String archetypeVersion, final String groupId,\n+            final String artifactId, final String secretKey, final String anonymousKey, final String path) {\n+\n+        final InvocationRequest request = new DefaultInvocationRequest();\n+        request.setGoals(Collections.singletonList(\"archetype:generate\"));\n+        request.setInteractive(false);\n+        request.setProperties(archetypeProperties(archetypeVersion, groupId, artifactId, secretKey, anonymousKey));\n+        invoke(request, \"/tmp/syncope\");\n+    }\n+\n+    private Properties archetypeProperties(final String archetypeVersion, final String groupId,\n+            final String artifactId, final String secretKey, final String anonymousKey) {\n+        final Properties properties = new Properties();\n+        properties.setProperty(\"archetypeGroupId\", \"org.apache.syncope\");\n+        properties.setProperty(\"archetypeArtifactId\", \"syncope-archetype\");\n+        properties.setProperty(\"archetypeRepository\", \"http://repository.apache.org/content/repositories/snapshots\");\n+        properties.setProperty(\"archetypeVersion\", archetypeVersion);\n+        properties.setProperty(\"groupId\", groupId);\n+        properties.setProperty(\"artifactId\", artifactId);\n+        properties.setProperty(\"secretKey\", secretKey);\n+        properties.setProperty(\"anonymousKey\", anonymousKey);\n+        return properties;\n+    }\n+\n+    public void createPackage(final String path, final String logDirectory, final String bundlesDirectory) {\n+\n+        final InvocationRequest request = new DefaultInvocationRequest();\n+        request.setProperties(packageProperties(logDirectory, bundlesDirectory));\n+        final List<String> mavenGoals = new ArrayList<String>();\n+        mavenGoals.add(\"clean\");\n+        mavenGoals.add(\"package\");\n+        request.setGoals(mavenGoals);\n+        invoke(request, path);\n+    }\n+\n+    private Properties packageProperties(final String logDirectory, final String bundlesDirectory) {\n+        Properties properties = new Properties();\n+        properties.setProperty(\"log.directory\", logDirectory);\n+        properties.setProperty(\"bundles.directory\", bundlesDirectory);\n+        return properties;\n+    }\n+\n+    private InvocationResult invoke(final InvocationRequest request, final String path) {\n+        InvocationResult result = null;\n+        final Invoker invoker = new DefaultInvoker();\n+        invoker.setWorkingDirectory(new File(path));\n+        try {\n+            result = invoker.execute(request);\n+        } catch (MavenInvocationException ex) {\n+\n+        }\n+        return result;\n+    }\n+\n+}"},{"sha":"ad250316157f29056d87dc9610a003b275c865a1","filename":"installer/src/main/resources/izpack/install.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -142,6 +142,9 @@ under the License.\n   <jar src=\"lib/jackson-core-@{jackson.version}.1.jar\"/>\n   <jar src=\"lib/jackson-annotations-@{jackson.version}.jar\"/>\n   \n+  <jar src=\"lib/maven-invoker-@{maven-invoker.version}.jar\"/>\n+  <jar src=\"lib/plexus-utils-3.0.8.jar\"/>\n+  \n   <panels>\n     <panel classname=\"HTMLHelloPanel\" id=\"welcome\"/>\n        "},{"sha":"2686cf1c7394aa6dd487c8d4cce6adb1fd230512","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c911d2b3e30631b0f745ab6d12666dc6b1a0dcf0","patch":"@@ -367,6 +367,7 @@ under the License.\n     <codemirror.version>3.23</codemirror.version>\n \n     <izpack.version>5.0.0-rc2</izpack.version>\n+    <maven-invoker.version>2.1.1</maven-invoker.version>\n     \n     <jdeb.version>1.3</jdeb.version>\n  \n@@ -923,6 +924,11 @@ under the License.\n         <artifactId>izpack-panel</artifactId>\n         <version>${izpack.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apache.maven.shared</groupId>\n+        <artifactId>maven-invoker</artifactId>\n+        <version>${maven-invoker.version}</version>\n+      </dependency>\n       \n       <!-- TEST -->\n       <dependency>"}]}