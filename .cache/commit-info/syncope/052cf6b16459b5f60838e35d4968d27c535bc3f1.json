{"sha":"052cf6b16459b5f60838e35d4968d27c535bc3f1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1MmNmNmIxNjQ1OWI1ZjYwODM4ZTM1ZDQ5NjhkMjdjNTM1YmMzZjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-29T14:24:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-29T14:24:09Z"},"message":"[SYNCOPE-745] Audit","tree":{"sha":"9847a9eabac450219137f4665dc734babe315b39","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9847a9eabac450219137f4665dc734babe315b39"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/052cf6b16459b5f60838e35d4968d27c535bc3f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/052cf6b16459b5f60838e35d4968d27c535bc3f1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/052cf6b16459b5f60838e35d4968d27c535bc3f1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/052cf6b16459b5f60838e35d4968d27c535bc3f1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3b16483cfeacbf0aebffc0560fba50918d0af737","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b16483cfeacbf0aebffc0560fba50918d0af737","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3b16483cfeacbf0aebffc0560fba50918d0af737"}],"stats":{"total":750,"additions":444,"deletions":306},"files":[{"sha":"6a57c2eb22dadc4b1b0f2c2f78076609202cff47","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/TaskDataProvider.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,9 +37,8 @@\n \n     public TaskDataProvider(final int paginatorRows, final TaskType taskType, final TaskRestClient taskRestClient) {\n         super(paginatorRows);\n-        this.taskRestClient = taskRestClient;\n \n-        //Default sorting\n+        this.taskRestClient = taskRestClient;\n         setSort(\"key\", SortOrder.DESCENDING);\n         comparator = new SortableDataProviderComparator<>(this);\n         this.taskType = taskType;"},{"sha":"7d9a6886c511d0c388489501c84794f4e05ac023","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -35,7 +35,7 @@ public abstract class AbstractStatusBeanProvider extends DirectoryDataProvider<S\n \n     public AbstractStatusBeanProvider(final String sort) {\n         super(10);\n-        //Default sorting\n+\n         setSort(sort, SortOrder.ASCENDING);\n         comparator = new SortableDataProviderComparator<>(this);\n     }"},{"sha":"9277212c95ed5ee85de445e6bede4be2ae2b91f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/events/EventCategoryPanel.java","status":"renamed","additions":89,"deletions":100,"changes":189,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.notifications;\n+package org.apache.syncope.client.console.events;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -29,9 +29,10 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.notifications.SelectedEventsPanel.EventSelectionChanged;\n-import org.apache.syncope.client.console.notifications.SelectedEventsPanel.InspectSelectedEvent;\n+import org.apache.syncope.client.console.events.SelectedEventsPanel.EventSelectionChanged;\n+import org.apache.syncope.client.console.events.SelectedEventsPanel.InspectSelectedEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -40,8 +41,6 @@\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -55,15 +54,8 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public abstract class LoggerCategoryPanel extends Panel {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerCategoryPanel.class);\n+public abstract class EventCategoryPanel extends Panel {\n \n     private static final long serialVersionUID = 6429053774964787734L;\n \n@@ -85,16 +77,15 @@ public abstract class LoggerCategoryPanel extends Panel {\n \n     private final AjaxTextFieldPanel custom;\n \n-    private final ActionLinksPanel actionPanel;\n+    private final ActionLinksPanel<EventCategoryTO> actionLinksPanel;\n \n     private final IModel<List<String>> model;\n \n-    public LoggerCategoryPanel(\n+    public EventCategoryPanel(\n             final String id,\n             final List<EventCategoryTO> eventCategoryTOs,\n-            final IModel<List<String>> model,\n-            final PageReference pageReference,\n-            final String pageId) {\n+            final IModel<List<String>> model) {\n+\n         super(id);\n \n         this.model = model;\n@@ -114,7 +105,7 @@ public LoggerCategoryPanel(\n         authorizeList();\n         authorizeChanges();\n \n-        type = new AjaxDropDownChoicePanel<EventCategoryType>(\n+        type = new AjaxDropDownChoicePanel<>(\n                 \"type\",\n                 \"type\",\n                 new PropertyModel<EventCategoryType>(eventCategoryTO, \"type\"),\n@@ -155,17 +146,16 @@ public boolean evaluate(final EventCategoryType object) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, type));\n+                send(EventCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, type));\n             }\n         });\n \n-        category = new AjaxDropDownChoicePanel<String>(\n+        category = new AjaxDropDownChoicePanel<>(\n                 \"category\",\n                 \"category\",\n                 new PropertyModel<String>(eventCategoryTO, \"category\"),\n                 false);\n         category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n-//        category.setStyleSheet(\"ui-widget-content ui-corner-all\");\n         categoryContainer.add(category);\n \n         category.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -174,17 +164,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, category));\n+                send(EventCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, category));\n             }\n         });\n \n-        subcategory = new AjaxDropDownChoicePanel<String>(\n+        subcategory = new AjaxDropDownChoicePanel<>(\n                 \"subcategory\",\n                 \"subcategory\",\n                 new PropertyModel<String>(eventCategoryTO, \"subcategory\"),\n                 false);\n         subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n-//        subcategory.setStyleSheet(\"ui-widget-content ui-corner-all\");\n         categoryContainer.add(subcategory);\n \n         subcategory.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -193,33 +182,30 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, subcategory));\n+                send(EventCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, subcategory));\n             }\n         });\n \n         categoryContainer.add(new Label(\"customLabel\", new ResourceModel(\"custom\", \"custom\")).setVisible(false));\n \n         custom = new AjaxTextFieldPanel(\"custom\", \"custom\", new Model<String>(null));\n-//        custom.setStyleSheet(\"ui-widget-content ui-corner-all short_fixedsize\");\n         custom.setVisible(false);\n         custom.setEnabled(false);\n \n         categoryContainer.add(custom.hideLabel());\n \n-        actionPanel = ActionLinksPanel.<EventCategoryTO>builder().\n+        actionLinksPanel = ActionLinksPanel.<EventCategoryTO>builder().\n                 add(new ActionLink<EventCategoryTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n-\n                         if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n-                                    parseEventCategory(\n-                                            custom.getModelObject());\n+                            Map.Entry<EventCategoryTO, AuditElements.Result> parsed =\n+                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n \n-                            final String eventString = AuditLoggerName.buildEvent(\n+                            String eventString = AuditLoggerName.buildEvent(\n                                     parsed.getKey().getType(),\n                                     null,\n                                     null,\n@@ -228,26 +214,25 @@ public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelO\n                                     parsed.getValue());\n \n                             custom.setModelObject(StringUtils.EMPTY);\n-                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n                                     target,\n                                     Collections.<String>singleton(eventString),\n                                     Collections.<String>emptySet()));\n                             target.add(categoryContainer);\n                         }\n                     }\n-                }, ActionLink.ActionType.CREATE, StandardEntitlement.NOTIFICATION_UPDATE, true).\n+                }, ActionLink.ActionType.CREATE).\n                 add(new ActionLink<EventCategoryTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n                         if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n-                                    parseEventCategory(\n-                                            custom.getModelObject());\n+                            Pair<EventCategoryTO, AuditElements.Result> parsed =\n+                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n \n-                            final String eventString = AuditLoggerName.buildEvent(\n+                            String eventString = AuditLoggerName.buildEvent(\n                                     parsed.getKey().getType(),\n                                     null,\n                                     null,\n@@ -256,26 +241,25 @@ public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelO\n                                     parsed.getValue());\n \n                             custom.setModelObject(StringUtils.EMPTY);\n-                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n                                     target,\n                                     Collections.<String>singleton(eventString),\n                                     Collections.<String>emptySet()));\n                             target.add(categoryContainer);\n                         }\n                     }\n-                }, ActionLink.ActionType.CREATE, pageId, true).\n+                }, ActionLink.ActionType.CREATE).\n                 add(new ActionLink<EventCategoryTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435521L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n                         if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n-                                    parseEventCategory(\n-                                            custom.getModelObject());\n+                            Pair<EventCategoryTO, AuditElements.Result> parsed =\n+                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n \n-                            final String eventString = AuditLoggerName.buildEvent(\n+                            String eventString = AuditLoggerName.buildEvent(\n                                     parsed.getKey().getType(),\n                                     null,\n                                     null,\n@@ -284,50 +268,49 @@ public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelO\n                                     parsed.getValue());\n \n                             custom.setModelObject(StringUtils.EMPTY);\n-                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n                                     target,\n                                     Collections.<String>emptySet(),\n                                     Collections.<String>singleton(eventString)));\n                             target.add(categoryContainer);\n                         }\n                     }\n-                }, ActionLink.ActionType.DELETE, pageId, true).build(\"customActions\");\n+                }, ActionLink.ActionType.DELETE).build(\"customActions\");\n \n-        //, new Model(), pageReference);\n-        categoryContainer.add(actionPanel);\n+        categoryContainer.add(actionLinksPanel);\n \n-        actionPanel.setVisible(false);\n-        actionPanel.setEnabled(false);\n+        actionLinksPanel.setVisible(false);\n+        actionLinksPanel.setEnabled(false);\n \n         eventsContainer.add(new EventSelectionPanel(\"eventsPanel\", eventCategoryTO, model) {\n \n             private static final long serialVersionUID = 3513194801190026082L;\n \n             @Override\n             protected void onEventAction(final IEvent<?> event) {\n-                LoggerCategoryPanel.this.onEventAction(event);\n+                EventCategoryPanel.this.onEventAction(event);\n             }\n         });\n     }\n \n-    private List<String> filter(\n-            final List<EventCategoryTO> eventCategoryTOs, final EventCategoryType type) {\n-        final Set<String> res = new HashSet<String>();\n+    private List<String> filter(final List<EventCategoryTO> eventCategoryTOs, final EventCategoryType type) {\n+        Set<String> res = new HashSet<>();\n \n         for (EventCategoryTO eventCategory : eventCategoryTOs) {\n             if (type == eventCategory.getType() && StringUtils.isNotEmpty(eventCategory.getCategory())) {\n                 res.add(eventCategory.getCategory());\n             }\n         }\n \n-        final List<String> filtered = new ArrayList<String>(res);\n+        List<String> filtered = new ArrayList<>(res);\n         Collections.sort(filtered);\n         return filtered;\n     }\n \n     private List<String> filter(\n             final List<EventCategoryTO> eventCategoryTOs, final EventCategoryType type, final String category) {\n-        final Set<String> res = new HashSet<String>();\n+\n+        Set<String> res = new HashSet<>();\n \n         for (EventCategoryTO eventCategory : eventCategoryTOs) {\n             if (type == eventCategory.getType() && StringUtils.equals(category, eventCategory.getCategory())\n@@ -336,13 +319,12 @@ private List<String> filter(\n             }\n         }\n \n-        final List<String> filtered = new ArrayList<String>(res);\n+        List<String> filtered = new ArrayList<>(res);\n         Collections.sort(filtered);\n         return filtered;\n     }\n \n     @Override\n-    @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof ChangeCategoryEvent) {\n             // update objects ....\n@@ -351,39 +333,46 @@ public void onEvent(final IEvent<?> event) {\n             final ChangeCategoryEvent change = (ChangeCategoryEvent) event.getPayload();\n \n             final Panel changedPanel = change.getChangedPanel();\n-            if (\"type\".equals(changedPanel.getId())) {\n-                eventCategoryTO.setType(type.getModelObject());\n-                eventCategoryTO.setCategory(null);\n-                eventCategoryTO.setSubcategory(null);\n-\n-                if (type.getModelObject() == EventCategoryType.CUSTOM) {\n-                    category.setChoices(Collections.<String>emptyList());\n-                    subcategory.setChoices(Collections.<String>emptyList());\n-                    category.setEnabled(false);\n-                    subcategory.setEnabled(false);\n-                    custom.setVisible(true);\n-                    custom.setEnabled(true);\n-                    actionPanel.setVisible(true);\n-                    actionPanel.setEnabled(true);\n-\n-                } else {\n-                    category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n-                    subcategory.setChoices(Collections.<String>emptyList());\n-                    category.setEnabled(true);\n-                    subcategory.setEnabled(true);\n-                    custom.setVisible(false);\n-                    custom.setEnabled(false);\n-                    actionPanel.setVisible(false);\n-                    actionPanel.setEnabled(false);\n+            if (null != changedPanel.getId()) {\n+                switch (changedPanel.getId()) {\n+                    case \"type\":\n+                        eventCategoryTO.setType(type.getModelObject());\n+                        eventCategoryTO.setCategory(null);\n+                        eventCategoryTO.setSubcategory(null);\n+                        if (type.getModelObject() == EventCategoryType.CUSTOM) {\n+                            category.setChoices(Collections.<String>emptyList());\n+                            subcategory.setChoices(Collections.<String>emptyList());\n+                            category.setEnabled(false);\n+                            subcategory.setEnabled(false);\n+                            custom.setVisible(true);\n+                            custom.setEnabled(true);\n+                            actionLinksPanel.setVisible(true);\n+                            actionLinksPanel.setEnabled(true);\n+                        } else {\n+                            category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n+                            subcategory.setChoices(Collections.<String>emptyList());\n+                            category.setEnabled(true);\n+                            subcategory.setEnabled(true);\n+                            custom.setVisible(false);\n+                            custom.setEnabled(false);\n+                            actionLinksPanel.setVisible(false);\n+                            actionLinksPanel.setEnabled(false);\n+                        }\n+                        change.getTarget().add(categoryContainer);\n+                        break;\n+\n+                    case \"category\":\n+                        subcategory.setChoices(\n+                                filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n+                        eventCategoryTO.setCategory(category.getModelObject());\n+                        eventCategoryTO.setSubcategory(null);\n+                        change.getTarget().add(categoryContainer);\n+                        break;\n+\n+                    default:\n+                        eventCategoryTO.setSubcategory(subcategory.getModelObject());\n+                        break;\n                 }\n-                change.getTarget().add(categoryContainer);\n-            } else if (\"category\".equals(changedPanel.getId())) {\n-                subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n-                eventCategoryTO.setCategory(category.getModelObject());\n-                eventCategoryTO.setSubcategory(null);\n-                change.getTarget().add(categoryContainer);\n-            } else {\n-                eventCategoryTO.setSubcategory(subcategory.getModelObject());\n             }\n \n             updateEventsContainer(change.getTarget());\n@@ -417,15 +406,15 @@ public void onEvent(final IEvent<?> event) {\n                 subcategory.setEnabled(false);\n                 custom.setVisible(true);\n                 custom.setEnabled(true);\n-                actionPanel.setVisible(true);\n-                actionPanel.setEnabled(true);\n+                actionLinksPanel.setVisible(true);\n+                actionLinksPanel.setEnabled(true);\n             } else {\n                 category.setEnabled(true);\n                 subcategory.setEnabled(true);\n                 custom.setVisible(false);\n                 custom.setEnabled(false);\n-                actionPanel.setVisible(false);\n-                actionPanel.setEnabled(false);\n+                actionLinksPanel.setVisible(false);\n+                actionLinksPanel.setEnabled(false);\n             }\n \n             inspectSelectedEvent.getTarget().add(categoryContainer);\n@@ -476,13 +465,13 @@ protected void onEventAction(final IEvent<?> event) {\n     }\n \n     private void authorizeList() {\n-        for (String role : getListRoles()) {\n+        for (String role : getListAuthRoles()) {\n             MetaDataRoleAuthorizationStrategy.authorize(selectedEventsPanel, RENDER, role);\n         }\n     }\n \n     private void authorizeChanges() {\n-        for (String role : getChangeRoles()) {\n+        for (String role : getChangeAuthRoles()) {\n             MetaDataRoleAuthorizationStrategy.authorize(categoryContainer, RENDER, role);\n             MetaDataRoleAuthorizationStrategy.authorize(eventsContainer, RENDER, role);\n         }\n@@ -497,13 +486,13 @@ private void updateEventsContainer(final AjaxRequestTarget target) {\n \n             @Override\n             public void onEventAction(final IEvent<?> event) {\n-                LoggerCategoryPanel.this.onEventAction(event);\n+                EventCategoryPanel.this.onEventAction(event);\n             }\n         });\n         target.add(eventsContainer);\n     }\n \n-    protected abstract String[] getListRoles();\n+    protected abstract List<String> getListAuthRoles();\n \n-    protected abstract String[] getChangeRoles();\n+    protected abstract List<String> getChangeAuthRoles();\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/LoggerCategoryPanel.java"},{"sha":"54a45063591bc157b278c34cc123289abea4caaa","filename":"client/console/src/main/java/org/apache/syncope/client/console/events/EventSelectionPanel.java","status":"renamed","additions":26,"deletions":46,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -16,18 +16,18 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.notifications;\n+package org.apache.syncope.client.console.events;\n \n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.common.lib.to.EventCategoryTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -40,46 +40,36 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public abstract class EventSelectionPanel extends Panel {\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(EventSelectionPanel.class);\n-\n     private static final long serialVersionUID = 752233163798301002L;\n \n-    private final Set<String> selected = new HashSet<String>();\n+    private final Set<String> selected = new HashSet<>();\n \n     public EventSelectionPanel(\n             final String id, final EventCategoryTO eventCategoryTO, final IModel<List<String>> model) {\n         super(id);\n         setOutputMarkupId(true);\n \n-        final List<String> events = getEvents(eventCategoryTO);\n+        List<String> events = getEvents(eventCategoryTO);\n \n         // needed to avoid model reset: model have to be managed into SelectedEventsPanel\n         selected.addAll(model.getObject());\n \n-        final CheckGroup<String> successGroup = new CheckGroup<String>(\n-                \"successGroup\",\n-                selected);\n-\n-        successGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+        final CheckGroup<String> successGroup = new CheckGroup<>(\"successGroup\", selected);\n+        successGroup.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n \n-                final Set<String> toBeRemoved = new HashSet<String>();\n-                final Set<String> toBeAdded = new HashSet<String>();\n+                final Set<String> toBeRemoved = new HashSet<>();\n+                final Set<String> toBeAdded = new HashSet<>();\n \n                 for (String event : getEvents(eventCategoryTO)) {\n-                    final String eventString = AuditLoggerName.buildEvent(\n+                    String eventString = AuditLoggerName.buildEvent(\n                             eventCategoryTO.getType(),\n                             eventCategoryTO.getCategory(),\n                             eventCategoryTO.getSubcategory(),\n@@ -97,17 +87,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new SelectedEventsPanel.EventSelectionChanged(target, toBeAdded, toBeRemoved));\n             }\n         });\n-\n         successGroup.setVisible(!events.isEmpty());\n         add(successGroup);\n \n         add(new Label(\"successLabel\", new ResourceModel(\"Success\", \"Success\"))).setVisible(!events.isEmpty());\n \n-        final CheckGroupSelector successSelector = new CheckGroupSelector(\"successSelector\", successGroup);\n+        CheckGroupSelector successSelector = new CheckGroupSelector(\"successSelector\", successGroup);\n         successSelector.setVisible(!events.isEmpty());\n         add(successSelector);\n \n-        final ListView<String> categoryView = new ListView<String>(\"categoryView\", events) {\n+        ListView<String> categoryView = new ListView<String>(\"categoryView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -120,38 +109,33 @@ protected void populateItem(final ListItem<String> item) {\n         };\n         add(categoryView);\n \n-        final ListView<String> successView = new ListView<String>(\"successView\", events) {\n+        ListView<String> successView = new ListView<String>(\"successView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n-                final String event = item.getModelObject();\n-\n-                final Check<String> successCheck = new Check<String>(\"successCheck\",\n-                        new Model<String>(AuditLoggerName.buildEvent(\n+                item.add(new Check<>(\"successCheck\",\n+                        new Model<>(AuditLoggerName.buildEvent(\n                                 eventCategoryTO.getType(),\n                                 eventCategoryTO.getCategory(),\n                                 eventCategoryTO.getSubcategory(),\n-                                event,\n+                                item.getModelObject(),\n                                 AuditElements.Result.SUCCESS)),\n-                        successGroup);\n-                item.add(successCheck);\n+                        successGroup));\n             }\n         };\n         successGroup.add(successView);\n \n-        final CheckGroup<String> failureGroup = new CheckGroup<String>(\"failureGroup\", selected);\n-\n-        failureGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+        final CheckGroup<String> failureGroup = new CheckGroup<>(\"failureGroup\", selected);\n+        failureGroup.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-\n-                final Set<String> toBeRemoved = new HashSet<String>();\n-                final Set<String> toBeAdded = new HashSet<String>();\n+                final Set<String> toBeRemoved = new HashSet<>();\n+                final Set<String> toBeAdded = new HashSet<>();\n \n                 for (String event : getEvents(eventCategoryTO)) {\n                     final String eventString = AuditLoggerName.buildEvent(\n@@ -172,33 +156,29 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new SelectedEventsPanel.EventSelectionChanged(target, toBeAdded, toBeRemoved));\n             }\n         });\n-\n         failureGroup.setVisible(!events.isEmpty());\n         add(failureGroup);\n \n         add(new Label(\"failureLabel\", new ResourceModel(\"Failure\", \"Failure\"))).setVisible(!events.isEmpty());\n \n-        final CheckGroupSelector failureSelector = new CheckGroupSelector(\"failureSelector\", failureGroup);\n+        CheckGroupSelector failureSelector = new CheckGroupSelector(\"failureSelector\", failureGroup);\n         failureSelector.setVisible(!events.isEmpty());\n         add(failureSelector);\n \n-        final ListView<String> failureView = new ListView<String>(\"failureView\", events) {\n+        ListView<String> failureView = new ListView<String>(\"failureView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n-                final String event = item.getModelObject();\n-\n-                final Check<String> failureCheck = new Check<String>(\"failureCheck\",\n-                        new Model<String>(AuditLoggerName.buildEvent(\n+                item.add(new Check<>(\"failureCheck\",\n+                        new Model<>(AuditLoggerName.buildEvent(\n                                 eventCategoryTO.getType(),\n                                 eventCategoryTO.getCategory(),\n                                 eventCategoryTO.getSubcategory(),\n-                                event,\n+                                item.getModelObject(),\n                                 AuditElements.Result.FAILURE)),\n-                        failureGroup);\n-                item.add(failureCheck);\n+                        failureGroup));\n             }\n         };\n         failureGroup.add(failureView);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/EventSelectionPanel.java"},{"sha":"07c3854df26a2c091c04909a71f60cdb609c2005","filename":"client/console/src/main/java/org/apache/syncope/client/console/events/SelectedEventsPanel.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.notifications;\n+package org.apache.syncope.client.console.events;\n \n import java.util.List;\n import java.util.Set;","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/SelectedEventsPanel.java"},{"sha":"6b1796f57dfd486646f141e0bcf5b51a6477946a","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -203,14 +203,14 @@ public MailTemplateProvider(final int paginatorRows) {\n \n         @Override\n         public Iterator<MailTemplateTO> iterator(final long first, final long count) {\n-            final List<MailTemplateTO> list = restClient.getAllAvailableTemplates();\n+            final List<MailTemplateTO> list = restClient.listTemplates();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return restClient.getAllAvailableTemplates().size();\n+            return restClient.listTemplates().size();\n         }\n \n         @Override"},{"sha":"ba0e43a277de1b8f20b2316722aa5a2deb19c7c2","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -56,23 +57,24 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class NotificationDirectoryPanel\n-        extends DirectoryPanel<NotificationTO, NotificationHandler, NotificationProvider, NotificationRestClient> {\n+        extends DirectoryPanel<NotificationTO, NotificationWrapper, NotificationProvider, NotificationRestClient> {\n \n     private static final long serialVersionUID = -3789392431954221446L;\n \n     protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n \n-    public NotificationDirectoryPanel(final String id, final PageReference pageReference) {\n-        super(id, pageReference, true);\n+    public NotificationDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, pageRef, true);\n         disableCheckBoxes();\n \n         addOuterObject(utilityModal);\n         setWindowClosedReloadCallback(utilityModal);\n+        utilityModal.size(Modal.Size.Large);\n \n         modal.size(Modal.Size.Large);\n         altDefaultModal.size(Modal.Size.Large);\n \n-        addNewItemPanelBuilder(new NotificationWizardBuilder(new NotificationTO(), pageReference), true);\n+        addNewItemPanelBuilder(new NotificationWizardBuilder(new NotificationTO(), pageRef), true);\n \n         restClient = new NotificationRestClient();\n \n@@ -83,7 +85,6 @@ public NotificationDirectoryPanel(final String id, final PageReference pageRefer\n \n     @Override\n     protected List<IColumn<NotificationTO, String>> getColumns() {\n-\n         List<IColumn<NotificationTO, String>> columns = new ArrayList<>();\n         columns.add(new KeyPropertyColumn<NotificationTO>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n@@ -95,7 +96,7 @@ protected List<IColumn<NotificationTO, String>> getColumns() {\n                 new StringResourceModel(\"template\", this, null), \"template\", \"template\"));\n         columns.add(new PropertyColumn<NotificationTO, String>(\n                 new StringResourceModel(\"traceLevel\", this, null), \"traceLevel\", \"traceLevel\"));\n-        columns.add(new PropertyColumn<NotificationTO, String>(\n+        columns.add(new BooleanPropertyColumn<NotificationTO>(\n                 new StringResourceModel(\"active\", this, null), \"active\", \"active\"));\n \n         columns.add(new ActionColumn<NotificationTO, String>(new ResourceModel(\"actions\", \"\")) {\n@@ -130,7 +131,7 @@ public void onClick(final AjaxRequestTarget target, final NotificationTO ignore)\n                     public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n                         send(NotificationDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.EditItemActionEvent<>(\n-                                        new NotificationHandler(restClient.read(model.getObject().getKey())), target));\n+                                        new NotificationWrapper(restClient.read(model.getObject().getKey())), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, StandardEntitlement.NOTIFICATION_UPDATE);\n \n@@ -173,28 +174,29 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    public class NotificationProvider extends DirectoryDataProvider<NotificationTO> {\n+    protected class NotificationProvider extends DirectoryDataProvider<NotificationTO> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n         private final SortableDataProviderComparator<NotificationTO> comparator;\n \n         public NotificationProvider(final int paginatorRows) {\n             super(paginatorRows);\n+\n             setSort(\"key\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override\n         public Iterator<NotificationTO> iterator(final long first, final long count) {\n-            final List<NotificationTO> list = restClient.getAllNotifications();\n+            List<NotificationTO> list = restClient.list();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return restClient.getAllNotifications().size();\n+            return restClient.list().size();\n         }\n \n         @Override"},{"sha":"4bc8478a9c4e9326128d45a1cda9b59aaee00711","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.notifications;\n \n+import org.apache.syncope.client.console.events.EventCategoryPanel;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -69,7 +70,7 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.validation.validator.EmailAddressValidator;\n \n-public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationHandler> {\n+public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationWrapper> {\n \n     private static final long serialVersionUID = -1975312550059578553L;\n \n@@ -86,11 +87,11 @@ public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationHan\n      * @param pageRef Caller page reference.\n      */\n     public NotificationWizardBuilder(final NotificationTO notificationTO, final PageReference pageRef) {\n-        super(new NotificationHandler(notificationTO), pageRef);\n+        super(new NotificationWrapper(notificationTO), pageRef);\n     }\n \n     @Override\n-    protected Serializable onApplyInternal(final NotificationHandler modelObject) {\n+    protected Serializable onApplyInternal(final NotificationWrapper modelObject) {\n         modelObject.fillRecipientConditions();\n         modelObject.fillAboutConditions();\n \n@@ -105,7 +106,7 @@ protected Serializable onApplyInternal(final NotificationHandler modelObject) {\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final NotificationHandler modelObject, final WizardModel wizardModel) {\n+    protected WizardModel buildModelSteps(final NotificationWrapper modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new NotificationWizardBuilder.Details(modelObject));\n         wizardModel.add(new NotificationWizardBuilder.Events(modelObject));\n         wizardModel.add(new NotificationWizardBuilder.Abouts(modelObject));\n@@ -117,7 +118,7 @@ public class Details extends WizardStep {\n \n         private static final long serialVersionUID = -7709805590497687958L;\n \n-        public Details(final NotificationHandler modelObject) {\n+        public Details(final NotificationWrapper modelObject) {\n             final NotificationTO notificationTO = modelObject.getInnerObject();\n             final boolean createFlag = notificationTO.getKey() == null;\n \n@@ -165,7 +166,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     \"template\", getString(\"template\"),\n                     new PropertyModel<String>(notificationTO, \"template\"));\n             template.setChoices(CollectionUtils.collect(\n-                    restClient.getAllAvailableTemplates(), new Transformer<MailTemplateTO, String>() {\n+                    restClient.listTemplates(), new Transformer<MailTemplateTO, String>() {\n \n                 @Override\n                 public String transform(final MailTemplateTO input) {\n@@ -197,25 +198,22 @@ public class Events extends WizardStep {\n \n         private static final long serialVersionUID = -7709805590497687958L;\n \n-        public Events(final NotificationHandler modelObject) {\n-            final NotificationTO notificationTO = modelObject.getInnerObject();\n-            add(new LoggerCategoryPanel(\n+        public Events(final NotificationWrapper modelObject) {\n+            add(new EventCategoryPanel(\n                     \"eventSelection\",\n                     loggerRestClient.listEvents(),\n-                    new PropertyModel<List<String>>(notificationTO, \"events\"),\n-                    pageRef,\n-                    \"Notification\") {\n+                    new PropertyModel<List<String>>(modelObject.getInnerObject(), \"events\")) {\n \n                 private static final long serialVersionUID = 6429053774964787735L;\n \n                 @Override\n-                protected String[] getListRoles() {\n-                    return new String[] {};\n+                protected List<String> getListAuthRoles() {\n+                    return Collections.emptyList();\n                 }\n \n                 @Override\n-                protected String[] getChangeRoles() {\n-                    return new String[] {};\n+                protected List<String> getChangeAuthRoles() {\n+                    return Collections.emptyList();\n                 }\n             });\n         }\n@@ -313,7 +311,7 @@ public class Abouts extends WizardStep {\n \n         private static final long serialVersionUID = -7709805590497687958L;\n \n-        public Abouts(final NotificationHandler modelObject) {\n+        public Abouts(final NotificationWrapper modelObject) {\n             final WebMarkupContainer aboutContainer = new WebMarkupContainer(\"about\");\n             aboutContainer.setOutputMarkupId(true);\n             add(aboutContainer);\n@@ -361,7 +359,7 @@ public class Recipients extends WizardStep {\n \n         private static final long serialVersionUID = -7709805590497687958L;\n \n-        public Recipients(final NotificationHandler modelObject) {\n+        public Recipients(final NotificationWrapper modelObject) {\n             final NotificationTO notificationTO = modelObject.getInnerObject();\n             final boolean createFlag = notificationTO.getKey() == null;\n "},{"sha":"031ebb8d7987a6752fa1b96ab9202d7743630855","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWrapper.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.NotificationTO;\n \n-public class NotificationHandler implements Serializable {\n+public class NotificationWrapper implements Serializable {\n \n     private static final long serialVersionUID = 8058288034211558376L;\n \n@@ -41,7 +41,7 @@ public class NotificationHandler implements Serializable {\n \n     private List<SearchClause> recipientClauses;\n \n-    public NotificationHandler(final NotificationTO notificationTO) {\n+    public NotificationWrapper(final NotificationTO notificationTO) {\n         this.notificationTO = notificationTO;\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationHandler.java"},{"sha":"9a5fc4adff8846b402817c2d3511f544241e6d1c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Audit.java","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -0,0 +1,127 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.events.EventCategoryPanel;\n+import org.apache.syncope.client.console.events.SelectedEventsPanel;\n+import org.apache.syncope.client.console.rest.LoggerRestClient;\n+import org.apache.syncope.common.lib.to.EventCategoryTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class Audit extends BasePage {\n+\n+    private static final long serialVersionUID = -1100228004207271271L;\n+\n+    public Audit(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        final LoggerRestClient loggerRestClient = new LoggerRestClient();\n+\n+        List<String> events = new ArrayList<>();\n+        for (AuditLoggerName audit : loggerRestClient.listAudits()) {\n+            events.add(AuditLoggerName.buildEvent(\n+                    audit.getType(),\n+                    audit.getCategory(),\n+                    audit.getSubcategory(),\n+                    audit.getEvent(),\n+                    audit.getResult()));\n+        }\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+\n+        Form<?> form = new Form<>(\"auditForm\");\n+        content.add(form);\n+\n+        form.add(new EventCategoryPanel(\n+                \"auditPanel\",\n+                loggerRestClient.listEvents(),\n+                new ListModel<>(events)) {\n+\n+            private static final long serialVersionUID = 6113164334533550277L;\n+\n+            @Override\n+            protected List<String> getListAuthRoles() {\n+                return Collections.singletonList(StandardEntitlement.AUDIT_LIST);\n+            }\n+\n+            @Override\n+            protected List<String> getChangeAuthRoles() {\n+                return Arrays.asList(\n+                        new String[] { StandardEntitlement.AUDIT_ENABLE, StandardEntitlement.AUDIT_DISABLE });\n+            }\n+\n+            @Override\n+            public void onEventAction(final IEvent<?> event) {\n+                if (event.getPayload() instanceof SelectedEventsPanel.EventSelectionChanged) {\n+                    final SelectedEventsPanel.EventSelectionChanged eventSelectionChanged =\n+                            (SelectedEventsPanel.EventSelectionChanged) event.getPayload();\n+\n+                    for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n+                        Pair<EventCategoryTO, AuditElements.Result> eventCategory =\n+                                AuditLoggerName.parseEventCategory(toBeRemoved);\n+\n+                        AuditLoggerName auditLoggerName = new AuditLoggerName(\n+                                eventCategory.getKey().getType(),\n+                                eventCategory.getKey().getCategory(),\n+                                eventCategory.getKey().getSubcategory(),\n+                                CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n+                                ? null : eventCategory.getKey().getEvents().iterator().next(),\n+                                eventCategory.getValue());\n+\n+                        loggerRestClient.disableAudit(auditLoggerName);\n+                    }\n+\n+                    for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n+                        Pair<EventCategoryTO, AuditElements.Result> eventCategory =\n+                                AuditLoggerName.parseEventCategory(toBeAdded);\n+\n+                        AuditLoggerName auditLoggerName = new AuditLoggerName(\n+                                eventCategory.getKey().getType(),\n+                                eventCategory.getKey().getCategory(),\n+                                eventCategory.getKey().getSubcategory(),\n+                                CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n+                                ? null : eventCategory.getKey().getEvents().iterator().next(),\n+                                eventCategory.getValue());\n+\n+                        loggerRestClient.enableAudit(auditLoggerName);\n+                    }\n+                }\n+            }\n+        });\n+\n+        body.add(content);\n+    }\n+}"},{"sha":"c5797db393867420e312e3cb0506d82fa7e58265","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -160,6 +160,12 @@ protected void onConnect(final ConnectedMessage message) {\n         MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n         liContainer.add(link);\n \n+        liContainer = new WebMarkupContainer(getLIContainerId(\"audit\"));\n+        confULContainer.add(liContainer);\n+        link = BookmarkablePageLinkBuilder.build(\"audit\", Audit.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.AUDIT_LIST);\n+        liContainer.add(link);\n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"logs\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"logs\", Logs.class);"},{"sha":"0f4295cdab105ff8bfe22c8d9936c5f6c4ab56dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.panels.RoleDirectoryPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.role.RoleHandler;\n+import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n import org.apache.syncope.client.console.wizards.role.RoleWizardBuilder;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -40,7 +40,7 @@ public Roles(final PageParameters parameters) {\n         content.setOutputMarkupId(true);\n         body.add(content);\n \n-        WizardMgtPanel<RoleHandler> rolesPanel = new RoleDirectoryPanel.Builder(getPageReference()) {\n+        WizardMgtPanel<RoleWrapper> rolesPanel = new RoleDirectoryPanel.Builder(getPageReference()) {\n \n             private static final long serialVersionUID = -5960765294082359003L;\n "},{"sha":"b99a3237e0fbc7b7bc15e34c2e57d51ece456afb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -29,7 +29,7 @@\n  * Modal window with Display any attributes form.\n  *\n  * @param <T> can be {@link org.apache.syncope.common.lib.to.AnyTO} or\n- * {@link org.apache.syncope.client.console.wizards.any.AnyHandler}\n+ * {@link org.apache.syncope.client.console.wizards.any.AnyWrapper}\n  */\n public class AnyObjectDisplayAttributesModalPanel<T extends Serializable> extends DisplayAttributesModalPanel<T> {\n "},{"sha":"764a5e316a5453eac57bd8715db67de76492c0c4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -41,7 +41,7 @@\n /**\n  * Modal window with Display attributes form.\n  *\n- * @param <T> can be {@link AnyTO} or {@link org.apache.syncope.client.console.wizards.any.AnyHandler}\n+ * @param <T> can be {@link AnyTO} or {@link org.apache.syncope.client.console.wizards.any.AnyWrapper}\n  */\n public abstract class DisplayAttributesModalPanel<T extends Serializable> extends AbstractModalPanel<T> {\n "},{"sha":"43b8b933586bac68c09cc067eb1b8fd3b52a8ec9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -29,7 +29,7 @@\n  * Modal window with Display group attributes form.\n  *\n  * @param <T> can be {@link org.apache.syncope.common.lib.to.AnyTO} or\n- * {@link org.apache.syncope.client.console.wizards.any.AnyHandler}\n+ * {@link org.apache.syncope.client.console.wizards.any.AnyWrapper}\n  */\n public class GroupDisplayAttributesModalPanel<T extends Serializable> extends DisplayAttributesModalPanel<T> {\n "},{"sha":"9997e029c0b10c5eeb1e9391270798ce24600993","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,7 +37,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.role.RoleHandler;\n+import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -50,7 +50,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class RoleDirectoryPanel extends DirectoryPanel<RoleTO, RoleHandler, RoleDataProvider, RoleRestClient> {\n+public class RoleDirectoryPanel extends DirectoryPanel<RoleTO, RoleWrapper, RoleDataProvider, RoleRestClient> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -108,7 +108,7 @@ public ActionLinksPanel<RoleTO> getActions(final String componentId, final IMode\n                     public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                         send(RoleDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.EditItemActionEvent<>(\n-                                        new RoleHandler(new RoleRestClient().read(model.getObject().getKey())),\n+                                        new RoleWrapper(new RoleRestClient().read(model.getObject().getKey())),\n                                         target));\n                     }\n                 }, ActionLink.ActionType.EDIT, StandardEntitlement.ROLE_READ).add(new ActionLink<RoleTO>() {\n@@ -120,7 +120,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                         final RoleTO clone = SerializationUtils.clone(model.getObject());\n                         clone.setKey(null);\n                         send(RoleDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new RoleHandler(clone), target));\n+                                new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n                     }\n                 }, ActionLink.ActionType.CLONE, StandardEntitlement.ROLE_CREATE).add(new ActionLink<RoleTO>() {\n \n@@ -187,7 +187,7 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n     }\n \n     public abstract static class Builder\n-            extends DirectoryPanel.Builder<RoleTO, RoleHandler, RoleRestClient> {\n+            extends DirectoryPanel.Builder<RoleTO, RoleWrapper, RoleRestClient> {\n \n         private static final long serialVersionUID = 5088962796986706805L;\n \n@@ -196,7 +196,7 @@ public Builder(final PageReference pageRef) {\n         }\n \n         @Override\n-        protected WizardMgtPanel<RoleHandler> newInstance(final String id) {\n+        protected WizardMgtPanel<RoleWrapper> newInstance(final String id) {\n             return new RoleDirectoryPanel(id, this);\n         }\n     }"},{"sha":"21a85b68f637366a0b66c8ac90d46b387359541d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -264,9 +264,8 @@ protected final class SchemaProvider extends DirectoryDataProvider<AbstractSchem\n \n         private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n             super(paginatorRows);\n-            this.schemaType = schemaType;\n \n-            // Default sorting\n+            this.schemaType = schemaType;\n             setSort(\"key\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n         }"},{"sha":"a010569c4b818b1435c415b16217d9fa3ac860a2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -179,7 +179,6 @@ protected class TypeExtensionDataProvider extends DirectoryDataProvider<TypeExte\n         public TypeExtensionDataProvider(final int paginatorRows) {\n             super(paginatorRows);\n \n-            //Default sorting\n             setSort(\"anyKey\", SortOrder.DESCENDING);\n         }\n "},{"sha":"1ef96ca31961ca9a05067302488938d6af14227d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -29,7 +29,7 @@\n  * Modal window with Display user attributes form.\n  *\n  * @param <T> can be {@link org.apache.syncope.common.lib.to.AnyTO} or\n- * {@link org.apache.syncope.client.console.wizards.any.AnyHandler}\n+ * {@link org.apache.syncope.client.console.wizards.any.AnyWrapper}\n  */\n public class UserDisplayAttributesModalPanel<T extends Serializable> extends DisplayAttributesModalPanel<T> {\n "},{"sha":"1f5608309ea1ac9a6a67dcbc5478c485994a6fb2","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -228,27 +228,23 @@ protected class ReportDataProvider extends DirectoryDataProvider<ReportTO> {\n \n         private final SortableDataProviderComparator<ReportTO> comparator;\n \n-        private final List<ReportTO> reports;\n-\n         public ReportDataProvider(final int paginatorRows) {\n             super(paginatorRows);\n-            this.reports = restClient.list();\n \n-            //Default sorting\n             setSort(\"key\", SortOrder.DESCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n-\n-            Collections.sort(this.reports, comparator);\n         }\n \n         @Override\n         public Iterator<ReportTO> iterator(final long first, final long count) {\n-            return this.reports.subList((int) first, (int) (first + count)).iterator();\n+            List<ReportTO> list = restClient.list();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return reports.size();\n+            return restClient.list().size();\n         }\n \n         @Override"},{"sha":"31e84f1ece1284f475f237cb9a3716d3fffa52c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -225,14 +225,14 @@ public ReportTemplateProvider(final int paginatorRows) {\n \n         @Override\n         public Iterator<ReportTemplateTO> iterator(final long first, final long count) {\n-            final List<ReportTemplateTO> list = restClient.getAllAvailableTemplates();\n+            final List<ReportTemplateTO> list = restClient.listTemplates();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return restClient.getAllAvailableTemplates().size();\n+            return restClient.listTemplates().size();\n         }\n \n         @Override"},{"sha":"6d4922c0082ece08e4b17eceebcd332576095c5a","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -78,7 +78,7 @@ public Profile(final ReportTO reportTO) {\n                     \"template\", getString(\"template\"),\n                     new PropertyModel<String>(reportTO, \"template\"));\n             template.setChoices(CollectionUtils.collect(\n-                    restClient.getAllAvailableTemplates(), new Transformer<ReportTemplateTO, String>() {\n+                    restClient.listTemplates(), new Transformer<ReportTemplateTO, String>() {\n \n                 @Override\n                 public String transform(final ReportTemplateTO input) {"},{"sha":"15092179a3d3df2889def20842e0145ccea31db9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -34,7 +34,7 @@ public class NotificationRestClient extends BaseRestClient\n \n     private static final long serialVersionUID = 6328933265096511690L;\n \n-    public List<NotificationTO> getAllNotifications() {\n+    public List<NotificationTO> list() {\n         return getService(NotificationService.class).list();\n     }\n \n@@ -55,7 +55,7 @@ public void delete(final String key) {\n     }\n \n     @Override\n-    public List<MailTemplateTO> getAllAvailableTemplates() {\n+    public List<MailTemplateTO> listTemplates() {\n         return getService(MailTemplateService.class).list();\n     }\n "},{"sha":"30e203706e964f5eefc49b017188e507ba6a9c9f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -97,7 +97,7 @@ public int countExecutions(final String taskKey) {\n     }\n \n     @Override\n-    public List<ReportTemplateTO> getAllAvailableTemplates() {\n+    public List<ReportTemplateTO> listTemplates() {\n         return getService(ReportTemplateService.class).list();\n     }\n "},{"sha":"d3d5c355734244a413f7b2715492a4783ed270e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TemplateRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -22,7 +22,7 @@\n \n public interface TemplateRestClient<T, F> extends RestClient {\n \n-    List<T> getAllAvailableTemplates();\n+    List<T> listTemplates();\n \n     void createTemplate(final T templateTO);\n "},{"sha":"3dd4955581b83a7d2650dfaf93f6c4bd21d3b35f","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -140,7 +141,7 @@ public void populateItem(\n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new PropertyColumn<T, String>(\n+        columns.add(new BooleanPropertyColumn<T>(\n                 new StringResourceModel(\"active\", this, null), \"active\", \"active\"));\n \n         return columns;"},{"sha":"db580857c373ed007b147f296108af7eac332371","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -76,7 +76,6 @@ protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<T, Stri\n         public TasksProvider(final int paginatorRows, final TaskType id) {\n             super(paginatorRows);\n \n-            //Default sorting\n             setSort(\"key\", SortOrder.DESCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n             this.id = id;"},{"sha":"5a6abe9dc3b55da3ed27a4f77096683b74ebdbb9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -50,7 +50,7 @@ public class DynamicMemberships extends WizardStep {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n-    public DynamicMemberships(final GroupWrapper groupHandler) {\n+    public DynamicMemberships(final GroupWrapper groupWrapper) {\n         super();\n \n         final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n@@ -79,10 +79,10 @@ public boolean evaluate(final AnyTypeTO t) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupHandler, \"uDynClauses\")).\n+                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupWrapper, \"uDynClauses\")).\n                         required(false).build(panelId);\n             }\n-        }), Model.of(StringUtils.isBlank(groupHandler.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n+        }), Model.of(StringUtils.isBlank(groupWrapper.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n         // ------------------------ \n \n         // ------------------------\n@@ -104,10 +104,10 @@ protected void populateItem(final ListItem<AnyTypeTO> item) {\n                     @Override\n                     public Panel getPanel(final String panelId) {\n                         return new AnyObjectSearchPanel.Builder(\n-                                key, new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n+                                key, new MapOfListModel<SearchClause>(groupWrapper, \"aDynClauses\", key)).\n                                 required(false).build(panelId);\n                     }\n-                }), Model.of(StringUtils.isBlank(groupHandler.getADynMembershipConds().get(key)) ? -1 : 0))\n+                }), Model.of(StringUtils.isBlank(groupWrapper.getADynMembershipConds().get(key)) ? -1 : 0))\n                         .setOutputMarkupId(true));\n             }\n         });"},{"sha":"aac95f8dc6720601f5c6d1258b39603c784174a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -91,11 +91,11 @@ public class Ownership extends WizardStep {\n \n     private final Model<Boolean> isGroupOwnership;\n \n-    public Ownership(final GroupWrapper groupHandler, final PageReference pageRef) {\n+    public Ownership(final GroupWrapper groupWrapper, final PageReference pageRef) {\n         super();\n-        this.wrapper = groupHandler;\n+        this.wrapper = groupWrapper;\n \n-        isGroupOwnership = Model.of(groupHandler.getInnerObject().getGroupOwner() != null);\n+        isGroupOwnership = Model.of(groupWrapper.getInnerObject().getGroupOwner() != null);\n \n         final BootstrapToggleConfig config = new BootstrapToggleConfig().\n                 withOnStyle(BootstrapToggleConfig.Style.info).\n@@ -187,16 +187,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n \n         final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\n-                \"userOwner\", \"userOwner\", new PropertyModel<String>(groupHandler.getInnerObject(), \"userOwner\") {\n+                \"userOwner\", \"userOwner\", new PropertyModel<String>(groupWrapper.getInnerObject(), \"userOwner\") {\n \n             private static final long serialVersionUID = -3743432456095828573L;\n \n             @Override\n             public String getObject() {\n-                if (groupHandler.getInnerObject().getUserOwner() == null) {\n+                if (groupWrapper.getInnerObject().getUserOwner() == null) {\n                     return StringUtils.EMPTY;\n                 } else {\n-                    UserTO userTO = userRestClient.read(groupHandler.getInnerObject().getUserOwner());\n+                    UserTO userTO = userRestClient.read(groupWrapper.getInnerObject().getUserOwner());\n                     if (userTO == null) {\n                         return StringUtils.EMPTY;\n                     } else {\n@@ -208,11 +208,11 @@ public String getObject() {\n             @Override\n             public void setObject(final String object) {\n                 if (StringUtils.isBlank(object)) {\n-                    groupHandler.getInnerObject().setUserOwner(null);\n+                    groupWrapper.getInnerObject().setUserOwner(null);\n                 } else {\n                     final Matcher matcher = owner.matcher(object);\n                     if (matcher.matches()) {\n-                        groupHandler.getInnerObject().setUserOwner(matcher.group(1));\n+                        groupWrapper.getInnerObject().setUserOwner(matcher.group(1));\n                     }\n                 }\n             }\n@@ -235,16 +235,16 @@ public void onClick(final AjaxRequestTarget target) {\n         userSearchFragment.add(userOwnerReset);\n \n         final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\n-                \"groupOwner\", \"groupOwner\", new PropertyModel<String>(groupHandler.getInnerObject(), \"groupOwner\") {\n+                \"groupOwner\", \"groupOwner\", new PropertyModel<String>(groupWrapper.getInnerObject(), \"groupOwner\") {\n \n             private static final long serialVersionUID = -3743432456095828573L;\n \n             @Override\n             public String getObject() {\n-                if (groupHandler.getInnerObject().getGroupOwner() == null) {\n+                if (groupWrapper.getInnerObject().getGroupOwner() == null) {\n                     return StringUtils.EMPTY;\n                 } else {\n-                    GroupTO groupTO = groupRestClient.read(groupHandler.getInnerObject().getGroupOwner());\n+                    GroupTO groupTO = groupRestClient.read(groupWrapper.getInnerObject().getGroupOwner());\n                     if (groupTO == null) {\n                         return StringUtils.EMPTY;\n                     } else {\n@@ -256,11 +256,11 @@ public String getObject() {\n             @Override\n             public void setObject(final String object) {\n                 if (StringUtils.isBlank(object)) {\n-                    groupHandler.getInnerObject().setGroupOwner(null);\n+                    groupWrapper.getInnerObject().setGroupOwner(null);\n                 } else {\n                     final Matcher matcher = owner.matcher(object);\n                     if (matcher.matches()) {\n-                        groupHandler.getInnerObject().setGroupOwner(matcher.group(1));\n+                        groupWrapper.getInnerObject().setGroupOwner(matcher.group(1));\n                     }\n                 }\n             }"},{"sha":"c71d1ca21c00a7c389446ae285a1f17c6297f973","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -46,7 +46,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class RoleWizardBuilder extends AjaxWizardBuilder<RoleHandler> {\n+public class RoleWizardBuilder extends AjaxWizardBuilder<RoleWrapper> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n \n@@ -59,7 +59,7 @@ public class RoleWizardBuilder extends AjaxWizardBuilder<RoleHandler> {\n      * @param pageRef Caller page reference.\n      */\n     public RoleWizardBuilder(final RoleTO roleTO, final PageReference pageRef) {\n-        super(new RoleHandler(roleTO), pageRef);\n+        super(new RoleWrapper(roleTO), pageRef);\n     }\n \n     /**\n@@ -70,14 +70,14 @@ public RoleWizardBuilder(final RoleTO roleTO, final PageReference pageRef) {\n      * @return the current builder.\n      */\n     @Override\n-    public AjaxWizardBuilder<RoleHandler> setItem(final RoleHandler item) {\n-        return (AjaxWizardBuilder<RoleHandler>) (item == null\n+    public AjaxWizardBuilder<RoleWrapper> setItem(final RoleWrapper item) {\n+        return (AjaxWizardBuilder<RoleWrapper>) (item == null\n                 ? super.setItem(item)\n-                : super.setItem(new RoleHandler(item.getInnerObject())));\n+                : super.setItem(new RoleWrapper(item.getInnerObject())));\n     }\n \n     @Override\n-    protected Serializable onApplyInternal(final RoleHandler modelObject) {\n+    protected Serializable onApplyInternal(final RoleWrapper modelObject) {\n         modelObject.fillDynamicConditions();\n         if (getOriginalItem() == null || getOriginalItem().getInnerObject() == null\n                 || StringUtils.isBlank(getOriginalItem().getInnerObject().getKey())) {\n@@ -89,7 +89,7 @@ protected Serializable onApplyInternal(final RoleHandler modelObject) {\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final RoleHandler modelObject, final WizardModel wizardModel) {\n+    protected WizardModel buildModelSteps(final RoleWrapper modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new Details(modelObject));\n         wizardModel.add(new Entitlements(modelObject.getInnerObject()));\n         wizardModel.add(new Realms(modelObject.getInnerObject()));\n@@ -100,7 +100,7 @@ public static class Details extends WizardStep {\n \n         private static final long serialVersionUID = 5514523040031722255L;\n \n-        public Details(final RoleHandler modelObject) {\n+        public Details(final RoleWrapper modelObject) {\n             add(new AjaxTextFieldPanel(\n                     \"key\", \"key\", new PropertyModel<String>(modelObject.getInnerObject(), \"key\"), false));\n "},{"sha":"462ffed32beef1776654f98bf3d77598ff33437a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWrapper.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -27,15 +27,15 @@\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.RoleTO;\n \n-public class RoleHandler implements Serializable {\n+public class RoleWrapper implements Serializable {\n \n     private static final long serialVersionUID = 8058288034211558376L;\n \n     private final RoleTO roleTO;\n \n     private List<SearchClause> dynClauses;\n \n-    public RoleHandler(final RoleTO roleTO) {\n+    public RoleWrapper(final RoleTO roleTO) {\n         this.roleTO = roleTO;\n         getDynClauses();\n     }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleHandler.java"},{"sha":"c854b054fc79440e49508b6fe8fe0dcc85970ee0","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":46,"deletions":1,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -839,5 +839,50 @@ div#templates {\n   clear: both;\n }\n /**\n-END -CRONTAB\n+END - CRONTAB\n+*/\n+\n+/**\n+START - EVENTS\n+*/\n+.events {\n+  display: table-row;\n+  width: 990px;\n+}\n+\n+.selectedEvents {\n+  display: inline-block;\n+  height: 100px;\n+  margin: 10px 10px 0 10px;\n+  overflow-y: auto;\n+}\n+\n+.eventSelection {\n+  display: inline-table;\n+  float: right;\n+  width: 380px;\n+  min-width: 530px;\n+}\n+\n+.eventSelection div#value {\n+  height: auto;\n+  overflow: hidden;\n+}\n+\n+.eventSelection div#value div#custom {\n+  width: auto;\n+  overflow: hidden;\n+}\n+\n+.eventSelection div#value div#customActions {\n+  width: 85px;\n+  float: right;\n+}\n+\n+div#selectionContainer select {\n+  width: 585px;\n+  min-width: 585px;\n+}\n+/**\n+END - EVENTS\n */"},{"sha":"c7733fd5b97257eb4f4544f459ce6a2c34ac2241","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,6 +37,7 @@ page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology\n page.reports=org.apache.syncope.client.console.pages.Reports\n page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.audit=org.apache.syncope.client.console.pages.Audit\n page.logs=org.apache.syncope.client.console.pages.Logs\n page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n page.types=org.apache.syncope.client.console.pages.Types"},{"sha":"dba9d594ccd45e8bd6c6843087a20732977d1b90","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -71,3 +71,4 @@ OrderByLink.CSS.ascending=sorting_asc\n OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlements\n+audit=Audit"},{"sha":"597b62532741b1370a13c92e61ca87b560eccd5b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -70,3 +70,4 @@ OrderByLink.CSS.ascending=sorting_asc\n OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n+audit=Audit"},{"sha":"a43dfb65fff3c26e23d69724d28d802950214842","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -70,3 +70,4 @@ OrderByLink.CSS.ascending=sorting_asc\n OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n+audit=Audit"},{"sha":"799a71628f9f42dccdd1c8f69bb77e2e047b9cd6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -121,3 +121,4 @@ OrderByLink.CSS.descending=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043\n OrderByLink.CSS.none=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430\n # entitlements=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0087\\u00d0\\u00b8\\u00d1\\u008f\n entitlements=\\u041f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f\n+audit=Audit"},{"sha":"2e3915fcaa2a3193f410a2592e84a9b5b65f3483","filename":"client/console/src/main/resources/org/apache/syncope/client/console/events/EventCategoryPanel.html","status":"renamed","additions":2,"deletions":40,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -17,44 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <style>\n-\n-      .events{\n-        display: table-row;\n-        width: 990px;\n-      }\n-\n-      .selectedEvents{\n-        display: inline-block;\n-        height: 100px;\n-        margin: 10px 10px 0 10px;\n-        overflow-y: auto;\n-      }\n-\n-      .eventSelection{\n-        display: inline-table;\n-        float: right;\n-        width: 380px;\n-        min-width: 380px;\n-      }\n-\n-      .eventSelection div#eventElement{\n-        display: table-row;\n-        width:100%;\n-      }\n-      .eventSelection div#eventElement div#eventLabel{\n-        display: table-cell;\n-      }\n-\n-      .eventSelection div#eventElement div#value{\n-        display: table-cell;\n-        padding: 0 0 0 10px;\n-      }\n-    </style>\n-  </wicket:head>\n   <wicket:panel>\n-\n     <div class=\"events\">\n       <div class=\"selectedEvents\">\n         <span wicket:id=\"selectedEventsPanel\">[selected events panel]</span>\n@@ -76,8 +39,8 @@\n               <eventLabel wicket:id=\"customLabel\"/>\n             </div>\n             <div id=\"value\">\n-              <span wicket:id=\"custom\">[custom]</span>\n-              <span wicket:id=\"customActions\">[actions]</span>\n+              <div id=\"customActions\" wicket:id=\"customActions\">[actions]</div>\n+              <div id=\"custom\" wicket:id=\"custom\">[custom]</div>\n             </div>\n           </div>\n         </div>\n@@ -86,6 +49,5 @@\n         </div>\n       </div>\n     </div>\n-\n   </wicket:panel>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/LoggerCategoryPanel.html"},{"sha":"8baffa94867924e2adf9804f9d4ac1085e5eafbb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/events/EventSelectionPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/EventSelectionPanel.html"},{"sha":"3a9ff63c1ea554a515a2cca8578704cca1717d0a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/events/SelectedEventsPanel.html","status":"renamed","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -17,17 +17,9 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <style>\n-      div#selectionContainer select{\n-        width: 585px;\n-        min-width: 585px;\n-      }\n-    </style>\n-  </wicket:head>\n   <wicket:panel>\n     <div id=\"selectionContainer\" wicket:id=\"selectionContainer\">\n-      <select wicket:id=\"selectedEvents\" ></select>\n+      <select wicket:id=\"selectedEvents\"></select>\n     </div>\n   </wicket:panel>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/SelectedEventsPanel.html"},{"sha":"b4d51d6250b2e47c14456fb779abb62218fa6b42","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Audit.html","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -0,0 +1,38 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n+        <li class=\"active\"><wicket:message key=\"configuration\"/></li>\n+        <li class=\"active\"><wicket:message key=\"audit\"/></li>\n+      </ol>\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <form wicket:id=\"auditForm\">\n+          <div class=\"box-body\" wicket:id=\"auditPanel\"/>\n+        </form>\n+      </div>\n+    </section>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"d2eb6961acee5fca514d00db01bbec5352180024","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -104,14 +104,15 @@\n             <li wicket:id=\"configurationLI\" class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-edit\"></i><span><wicket:message key=\"configuration\"/></span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul wicket:id=\"configurationUL\" class=\"treeview-menu\">\n-                <li wicket:id=\"rolesLI\"><a href=\"#\" wicket:id=\"roles\"><i class=\"fa fa-users\"></i><wicket:message key=\"roles\"/></a></li>\n-                <li wicket:id=\"policiesLI\"><a href=\"#\" wicket:id=\"policies\"><i class=\"fa fa-list\"></i><wicket:message key=\"policies\"/></a></li>\n-                <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-question\"></i><wicket:message key=\"securityQuestions\"/></a></li>\n-                <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-share-alt\"></i><wicket:message key=\"workflow\"/></a></li>\n+                <li wicket:id=\"auditLI\"><a href=\"#\" wicket:id=\"audit\"><i class=\"fa fa-check-square-o\"></i><wicket:message key=\"audit\"/></a></li>\n                 <li wicket:id=\"logsLI\"><a href=\"#\" wicket:id=\"logs\"><i class=\"fa fa-file-text-o\"></i><wicket:message key=\"logs\"/></a></li>\n-                <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-wrench\"></i><wicket:message key=\"types\"/></a></li>\n                 <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-envelope-o\"></i><wicket:message key=\"notifications\"/></a></li>\n                 <li wicket:id=\"parametersLI\"><a href=\"#\" wicket:id=\"parameters\"><i class=\"fa fa-cog\"></i><wicket:message key=\"parameters\"/></a></li>\n+                <li wicket:id=\"policiesLI\"><a href=\"#\" wicket:id=\"policies\"><i class=\"fa fa-list\"></i><wicket:message key=\"policies\"/></a></li>\n+                <li wicket:id=\"rolesLI\"><a href=\"#\" wicket:id=\"roles\"><i class=\"fa fa-users\"></i><wicket:message key=\"roles\"/></a></li>\n+                <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-question\"></i><wicket:message key=\"securityQuestions\"/></a></li>\n+                <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-wrench\"></i><wicket:message key=\"types\"/></a></li>\n+                <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-share-alt\"></i><wicket:message key=\"workflow\"/></a></li>\n               </ul>\n             </li>\n             <li wicket:id=\"extensionsLI\" class=\"treeview\">"},{"sha":"d1be46a2766c73d214ef509f3327ee2d6baae0af","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,7 +37,7 @@\n           <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"resource.menu.remove\"/></a></li>\n           <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"resource.menu.edit\"/></a></li>\n           <li><i class=\"fa fa-exchange\"></i><a href=\"#\" wicket:id=\"provision\"><wicket:message key=\"resource.menu.provision\"/></a></li>\n-          <li><i class=\"fa fa-search\"></i><a href=\"#\" wicket:id=\"explore\"><wicket:message key=\"resource.menu.explore\"/></a></li>\n+          <li><i class=\"fa fa-eye\"></i><a href=\"#\" wicket:id=\"explore\"><wicket:message key=\"resource.menu.explore\"/></a></li>\n           <li><i class=\"fa fa-arrow-right\"></i><a href=\"#\" wicket:id=\"propagation\"><wicket:message key=\"task.propagation.list\"/></a></li>\n           <li><i class=\"fa fa-chevron-circle-left\"></i><a href=\"#\" wicket:id=\"pull\"><wicket:message key=\"task.pull.list\"/></a></li>\n           <li><i class=\"fa fa-chevron-circle-right\"></i><a href=\"#\" wicket:id=\"push\"><wicket:message key=\"task.push.list\"/></a></li>"},{"sha":"25eaf9e7f2c3e77380b4d8ce4e505df51372f42c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -86,7 +86,6 @@ public String toLoggerName() {\n                 append(buildEvent(type, category, subcategory, event, result)).toString();\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     public static AuditLoggerName fromLoggerName(final String loggerName)\n             throws ParseException {\n "},{"sha":"a8c6f04b42dd30dced548282856d200e1a67aa0b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/LoggerWrapper.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -32,25 +32,25 @@ private LoggerWrapper() {\n     }\n \n     public static List<AuditLoggerName> wrap(final Collection<LoggerTO> logger) {\n-        List<AuditLoggerName> respons = new ArrayList<>();\n+        List<AuditLoggerName> result = new ArrayList<>();\n         for (LoggerTO loggerTO : logger) {\n             try {\n-                respons.add(AuditLoggerName.fromLoggerName(loggerTO.getKey()));\n+                result.add(AuditLoggerName.fromLoggerName(loggerTO.getKey()));\n             } catch (Exception ignore) {\n                 // ignore\n             }\n         }\n-        return respons;\n+        return result;\n     }\n \n     public static List<LoggerTO> unwrap(final Collection<AuditLoggerName> auditNames) {\n-        List<LoggerTO> respons = new ArrayList<>();\n+        List<LoggerTO> result = new ArrayList<>();\n         for (AuditLoggerName name : auditNames) {\n             LoggerTO loggerTO = new LoggerTO();\n             loggerTO.setKey(name.toLoggerName());\n             loggerTO.setLevel(LoggerLevel.DEBUG);\n-            respons.add(loggerTO);\n+            result.add(loggerTO);\n         }\n-        return respons;\n+        return result;\n     }\n }"},{"sha":"fcdab017179d7165ddc086b44fb93aa40b76c883","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import javax.validation.constraints.NotNull;\n-\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;"},{"sha":"73acb0a81510b665a279e058a47e147c82c40f1b","filename":"fit/console-reference/src/main/resources/console.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,6 +37,7 @@ page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology\n page.reports=org.apache.syncope.client.console.pages.Reports\n page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.audit=org.apache.syncope.client.console.pages.Audit\n page.logs=org.apache.syncope.client.console.pages.Logs\n page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n page.types=org.apache.syncope.client.console.pages.Types"},{"sha":"73acb0a81510b665a279e058a47e147c82c40f1b","filename":"fit/core-reference/src/test/resources/console.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/052cf6b16459b5f60838e35d4968d27c535bc3f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/052cf6b16459b5f60838e35d4968d27c535bc3f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=052cf6b16459b5f60838e35d4968d27c535bc3f1","patch":"@@ -37,6 +37,7 @@ page.realms=org.apache.syncope.client.console.pages.Realms\n page.topology=org.apache.syncope.client.console.topology.Topology\n page.reports=org.apache.syncope.client.console.pages.Reports\n page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.audit=org.apache.syncope.client.console.pages.Audit\n page.logs=org.apache.syncope.client.console.pages.Logs\n page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n page.types=org.apache.syncope.client.console.pages.Types"}]}