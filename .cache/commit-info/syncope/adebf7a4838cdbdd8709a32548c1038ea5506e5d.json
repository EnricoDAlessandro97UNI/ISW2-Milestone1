{"sha":"adebf7a4838cdbdd8709a32548c1038ea5506e5d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFkZWJmN2E0ODM4Y2RiZGQ4NzA5YTMyNTQ4YzEwMzhlYTU1MDZlNWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-04T16:56:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-04T16:56:11Z"},"message":"[SYNCOPE-750] Platform information","tree":{"sha":"107a140f4773fed4fe6897565d8145f844a9198f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/107a140f4773fed4fe6897565d8145f844a9198f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/adebf7a4838cdbdd8709a32548c1038ea5506e5d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/adebf7a4838cdbdd8709a32548c1038ea5506e5d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/adebf7a4838cdbdd8709a32548c1038ea5506e5d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/adebf7a4838cdbdd8709a32548c1038ea5506e5d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1a30ce8eb1b08a16d5224808a3652f3a9687c7fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a30ce8eb1b08a16d5224808a3652f3a9687c7fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a30ce8eb1b08a16d5224808a3652f3a9687c7fa"}],"stats":{"total":319,"additions":255,"deletions":64},"files":[{"sha":"335546be71878272d75bcd4c0fd6ac93dd941bfc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeServices.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -67,7 +67,7 @@ public static void testUsernameAndPassword(final String username, final String p\n         }\n         final SyncopeClient syncopeClient = new SyncopeClientFactoryBean()\n                 .setAddress(properties.getProperty(\"syncope.rest.services\")).create(username, password);\n-        syncopeClient.getService(SyncopeService.class).info();\n+        syncopeClient.getService(SyncopeService.class).syncope();\n     }\n \n     private SyncopeServices() {"},{"sha":"55522d2c9f91007f440e492c4b59e79449223083","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSyncopeOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -31,7 +31,7 @@\n \n public class EntitlementSyncopeOperations {\n \n-    private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).info();\n+    private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).syncope();\n \n     private final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n "},{"sha":"d02fcd8ea11147dfc9a881ce4dad63a58bf5c3ec","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -28,7 +28,7 @@ public class Info {\n \n     private static final Logger LOG = LoggerFactory.getLogger(Info.class);\n \n-    private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).info();\n+    private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).syncope();\n \n     private final InfoResultManager infoResultManager = new InfoResultManager();\n "},{"sha":"1af1619a49d04049766f52e8d1bc6e4632187451","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -167,7 +167,7 @@ public void setup() throws FileNotFoundException, IllegalAccessException {\n \n         try {\n             final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n-            final String syncopeVersion = syncopeService.info().getVersion();\n+            final String syncopeVersion = syncopeService.syncope().getVersion();\n             installResultManager.installationSuccessful(syncopeVersion);\n         } catch (final ProcessingException ex) {\n             LOG.error(\"Error installing CLI\", ex);"},{"sha":"a0af9841529818a148f0a12cda0263951c0a84f0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetupForDebug.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -67,7 +67,7 @@ public void setup() throws FileNotFoundException, IllegalAccessException {\n \n         try {\n             final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n-            final String syncopeVersion = syncopeService.info().getVersion();\n+            final String syncopeVersion = syncopeService.syncope().getVersion();\n             installResultManager.installationSuccessful(syncopeVersion);\n         } catch (final ProcessingException ex) {\n             LOG.error(\"Error installing CLI\", ex);"},{"sha":"d2899cbb25e2786bd1cd585068f8ff079277292a","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -87,7 +87,7 @@ public SyncopeConsoleSession(final Request request) {\n                 SyncopeConsoleApplication.get().getAnonymousUser(),\n                 SyncopeConsoleApplication.get().getAnonymousKey());\n \n-        syncopeTO = anonymousClient.getService(SyncopeService.class).info();\n+        syncopeTO = anonymousClient.getService(SyncopeService.class).syncope();\n         domains = new ArrayList<>();\n         domains.add(SyncopeConstants.MASTER_DOMAIN);\n         CollectionUtils.collect(anonymousClient.getService(DomainService.class).list(),"},{"sha":"1d83a9d9a3fc25eb48961e09195070f81df99aa3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -59,6 +59,6 @@ public int count() {\n     }\n \n     public List<String> getAllAvailableEntitlements() {\n-        return new ArrayList<>(getSyncopeService().info().getEntitlements());\n+        return new ArrayList<>(getSyncopeService().syncope().getEntitlements());\n     }\n }"},{"sha":"e61f1f66746bc5a0762a91034ecd0d01a3fe3c2b","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -80,7 +80,7 @@ public SyncopeEnduserSession(final Request request) {\n         anonymousClient = SyncopeEnduserApplication.get().getClientFactory().create(\n                 SyncopeEnduserApplication.get().getAnonymousUser(),\n                 SyncopeEnduserApplication.get().getAnonymousKey());\n-        syncopeTO = anonymousClient.getService(SyncopeService.class).info();\n+        syncopeTO = anonymousClient.getService(SyncopeService.class).syncope();\n \n     }\n "},{"sha":"d65e7ce6426b0a40bdc8be57ebee81e61f9ceee0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PlatformTO.java","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlatformTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlatformTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlatformTO.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.collections4.queue.CircularFifoQueue;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"platform\")\n+@XmlType\n+public class PlatformTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -352727968865892499L;\n+\n+    private String os;\n+\n+    private String jvm;\n+\n+    private int availableProcessors;\n+\n+    private final CircularFifoQueue<PlatformLoad> load = new CircularFifoQueue<>(5);\n+\n+    public String getOs() {\n+        return os;\n+    }\n+\n+    public void setOs(final String os) {\n+        this.os = os;\n+    }\n+\n+    public String getJvm() {\n+        return jvm;\n+    }\n+\n+    public void setJvm(final String jvm) {\n+        this.jvm = jvm;\n+    }\n+\n+    public int getAvailableProcessors() {\n+        return availableProcessors;\n+    }\n+\n+    public void setAvailableProcessors(final int availableProcessors) {\n+        this.availableProcessors = availableProcessors;\n+    }\n+\n+    @XmlElementWrapper(name = \"load\")\n+    @XmlElement(name = \"instant\")\n+    @JsonProperty(\"load\")\n+    public CircularFifoQueue<PlatformLoad> getLoad() {\n+        return load;\n+    }\n+\n+    @XmlRootElement(name = \"platformLoad\")\n+    @XmlType\n+    public static class PlatformLoad extends AbstractBaseBean {\n+\n+        private static final long serialVersionUID = 1700788373758716478L;\n+\n+        private long uptime;\n+\n+        private double systemLoadAverage;\n+\n+        private long totalMemory;\n+\n+        private long freeMemory;\n+\n+        private long maxMemory;\n+\n+        public double getSystemLoadAverage() {\n+            return systemLoadAverage;\n+        }\n+\n+        public void setSystemLoadAverage(final double systemLoadAverage) {\n+            this.systemLoadAverage = systemLoadAverage;\n+        }\n+\n+        public long getUptime() {\n+            return uptime;\n+        }\n+\n+        public void setUptime(final long uptime) {\n+            this.uptime = uptime;\n+        }\n+\n+        public long getTotalMemory() {\n+            return totalMemory;\n+        }\n+\n+        public void setTotalMemory(final long totalMemory) {\n+            this.totalMemory = totalMemory;\n+        }\n+\n+        public long getFreeMemory() {\n+            return freeMemory;\n+        }\n+\n+        public void setFreeMemory(final long freeMemory) {\n+            this.freeMemory = freeMemory;\n+        }\n+\n+        public long getMaxMemory() {\n+            return maxMemory;\n+        }\n+\n+        public void setMaxMemory(final long maxMemory) {\n+            this.maxMemory = maxMemory;\n+        }\n+    }\n+\n+}"},{"sha":"782efae15e9f7c4f74f795c37c98371811574e0c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -22,6 +22,7 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.common.lib.to.PlatformTO;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n \n /**\n@@ -37,5 +38,15 @@ public interface SyncopeService extends JAXRSService {\n      */\n     @GET\n     @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    SyncopeTO info();\n+    SyncopeTO syncope();\n+\n+    /**\n+     * Provides information about the underlying platform (Operating System, CPU / memory usage, ...).\n+     *\n+     * @return information about the underlying platform (Operating System, CPU / memory usage, ...)\n+     */\n+    @GET\n+    @Path(\"/platform\")\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PlatformTO platform();\n }"},{"sha":"0adc11e86ddef698faa7997236466daadd7d25bd","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":80,"deletions":37,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -18,10 +18,14 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import java.lang.management.ManagementFactory;\n+import java.lang.management.OperatingSystemMXBean;\n+import java.lang.management.RuntimeMXBean;\n import org.apache.syncope.core.misc.EntitlementsHolder;\n import java.lang.reflect.Method;\n import java.net.URI;\n import javax.annotation.Resource;\n+import org.apache.syncope.common.lib.to.PlatformTO;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n import org.apache.syncope.core.misc.security.PasswordGenerator;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n@@ -44,6 +48,12 @@\n @Component\n public class SyncopeLogic extends AbstractLogic<SyncopeTO> {\n \n+    private static final int MB = 1024 * 1024;\n+\n+    private static final SyncopeTO SYNCOPE_TO = new SyncopeTO();\n+\n+    private static final PlatformTO PLATFORM_TO = new PlatformTO();\n+\n     @Autowired\n     private ConfDAO confDAO;\n \n@@ -98,48 +108,81 @@ public boolean isPwdResetRequiringSecurityQuestions() {\n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     public SyncopeTO info() {\n-        SyncopeTO syncopeTO = new SyncopeTO();\n-        syncopeTO.setVersion(version);\n+        synchronized (SYNCOPE_TO) {\n+            SYNCOPE_TO.setVersion(version);\n \n-        syncopeTO.setSelfRegAllowed(isSelfRegAllowed());\n-        syncopeTO.setPwdResetAllowed(isPwdResetAllowed());\n-        syncopeTO.setPwdResetRequiringSecurityQuestions(isPwdResetRequiringSecurityQuestions());\n+            SYNCOPE_TO.setSelfRegAllowed(isSelfRegAllowed());\n+            SYNCOPE_TO.setPwdResetAllowed(isPwdResetAllowed());\n+            SYNCOPE_TO.setPwdResetRequiringSecurityQuestions(isPwdResetRequiringSecurityQuestions());\n \n-        if (bundleManager.getLocations() != null) {\n-            for (URI location : bundleManager.getLocations()) {\n-                syncopeTO.getConnIdLocations().add(location.toASCIIString());\n+            if (bundleManager.getLocations() != null) {\n+                for (URI location : bundleManager.getLocations()) {\n+                    SYNCOPE_TO.getConnIdLocations().add(location.toASCIIString());\n+                }\n             }\n+\n+            SYNCOPE_TO.setAnyObjectWorkflowAdapter(AopUtils.getTargetClass(awfAdapter).getName());\n+            SYNCOPE_TO.setUserWorkflowAdapter(AopUtils.getTargetClass(uwfAdapter).getName());\n+            SYNCOPE_TO.setGroupWorkflowAdapter(AopUtils.getTargetClass(gwfAdapter).getName());\n+\n+            SYNCOPE_TO.setAnyObjectProvisioningManager(aProvisioningManager.getClass().getName());\n+            SYNCOPE_TO.setUserProvisioningManager(uProvisioningManager.getClass().getName());\n+            SYNCOPE_TO.setGroupProvisioningManager(gProvisioningManager.getClass().getName());\n+            SYNCOPE_TO.setVirAttrCache(virAttrCache.getClass().getName());\n+            SYNCOPE_TO.setPasswordGenerator(passwordGenerator.getClass().getName());\n+\n+            SYNCOPE_TO.getEntitlements().addAll(EntitlementsHolder.getInstance().getValues());\n+\n+            SYNCOPE_TO.getReportlets().addAll(implLookup.getClassNames(Type.REPORTLET));\n+            SYNCOPE_TO.getAccountRules().addAll(implLookup.getClassNames(Type.ACCOUNT_RULE));\n+            SYNCOPE_TO.getPasswordRules().addAll(implLookup.getClassNames(Type.PASSWORD_RULE));\n+            SYNCOPE_TO.getMappingItemTransformers().addAll(implLookup.getClassNames(Type.MAPPING_ITEM_TRANSFORMER));\n+            SYNCOPE_TO.getTaskJobs().addAll(implLookup.getClassNames(Type.TASKJOBDELEGATE));\n+            SYNCOPE_TO.getReconciliationFilterBuilders().\n+                    addAll(implLookup.getClassNames(Type.RECONCILIATION_FILTER_BUILDER));\n+            SYNCOPE_TO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n+            SYNCOPE_TO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n+            SYNCOPE_TO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n+            SYNCOPE_TO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n+            SYNCOPE_TO.getSyncCorrelationRules().addAll(implLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n+            SYNCOPE_TO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));\n+            SYNCOPE_TO.getNotificationRecipientsProviders().\n+                    addAll(implLookup.getClassNames(Type.NOTIFICATION_RECIPIENTS_PROVIDER));\n+        }\n+\n+        return SYNCOPE_TO;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public PlatformTO platform() {\n+\n+        synchronized (PLATFORM_TO) {\n+            PlatformTO.PlatformLoad instant = new PlatformTO.PlatformLoad();\n+\n+            OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();\n+            PLATFORM_TO.setOs(operatingSystemMXBean.getName()\n+                    + \" \" + operatingSystemMXBean.getVersion()\n+                    + \" \" + operatingSystemMXBean.getArch());\n+            PLATFORM_TO.setAvailableProcessors(operatingSystemMXBean.getAvailableProcessors());\n+            instant.setSystemLoadAverage(operatingSystemMXBean.getSystemLoadAverage());\n+\n+            RuntimeMXBean runtimeMXBean = ManagementFactory.getRuntimeMXBean();\n+            PLATFORM_TO.setJvm(\n+                    runtimeMXBean.getVmName()\n+                    + \" \" + System.getProperty(\"java.version\")\n+                    + \" \" + runtimeMXBean.getVmVendor());\n+            instant.setUptime(runtimeMXBean.getUptime());\n+\n+            Runtime runtime = Runtime.getRuntime();\n+            instant.setTotalMemory(runtime.totalMemory() / MB);\n+            instant.setMaxMemory(runtime.maxMemory() / MB);\n+            instant.setFreeMemory(runtime.freeMemory() / MB);\n+\n+            PLATFORM_TO.getLoad().add(instant);\n         }\n \n-        syncopeTO.setAnyObjectWorkflowAdapter(AopUtils.getTargetClass(awfAdapter).getName());\n-        syncopeTO.setUserWorkflowAdapter(AopUtils.getTargetClass(uwfAdapter).getName());\n-        syncopeTO.setGroupWorkflowAdapter(AopUtils.getTargetClass(gwfAdapter).getName());\n-\n-        syncopeTO.setAnyObjectProvisioningManager(aProvisioningManager.getClass().getName());\n-        syncopeTO.setUserProvisioningManager(uProvisioningManager.getClass().getName());\n-        syncopeTO.setGroupProvisioningManager(gProvisioningManager.getClass().getName());\n-        syncopeTO.setVirAttrCache(virAttrCache.getClass().getName());\n-        syncopeTO.setPasswordGenerator(passwordGenerator.getClass().getName());\n-\n-        syncopeTO.getEntitlements().addAll(EntitlementsHolder.getInstance().getValues());\n-\n-        syncopeTO.getReportlets().addAll(implLookup.getClassNames(Type.REPORTLET));\n-        syncopeTO.getAccountRules().addAll(implLookup.getClassNames(Type.ACCOUNT_RULE));\n-        syncopeTO.getPasswordRules().addAll(implLookup.getClassNames(Type.PASSWORD_RULE));\n-        syncopeTO.getMappingItemTransformers().addAll(implLookup.getClassNames(Type.MAPPING_ITEM_TRANSFORMER));\n-        syncopeTO.getTaskJobs().addAll(implLookup.getClassNames(Type.TASKJOBDELEGATE));\n-        syncopeTO.getReconciliationFilterBuilders().\n-                addAll(implLookup.getClassNames(Type.RECONCILIATION_FILTER_BUILDER));\n-        syncopeTO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n-        syncopeTO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n-        syncopeTO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n-        syncopeTO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n-        syncopeTO.getSyncCorrelationRules().addAll(implLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n-        syncopeTO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));\n-        syncopeTO.getNotificationRecipientsProviders().\n-                addAll(implLookup.getClassNames(Type.NOTIFICATION_RECIPIENTS_PROVIDER));\n-\n-        return syncopeTO;\n+        return PLATFORM_TO;\n     }\n \n     @Override"},{"sha":"69acb72eae7d2dece72d12000ee407b1b545517f","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SyncopeServiceImpl.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import org.apache.syncope.common.lib.to.PlatformTO;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.syncope.core.logic.SyncopeLogic;\n@@ -31,8 +32,13 @@ public class SyncopeServiceImpl extends AbstractServiceImpl implements SyncopeSe\n     private SyncopeLogic logic;\n \n     @Override\n-    public SyncopeTO info() {\n+    public SyncopeTO syncope() {\n         return logic.info();\n     }\n \n+    @Override\n+    public PlatformTO platform() {\n+        return logic.platform();\n+    }\n+\n }"},{"sha":"a951e02af81d55ddc4090547d2e10e7709adcda7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ActivitiDetector.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FActivitiDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FActivitiDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FActivitiDetector.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -23,14 +23,14 @@\n public class ActivitiDetector {\n \n     public static boolean isActivitiEnabledForUsers(final SyncopeService syncopeService) {\n-        return syncopeService.info().getUserWorkflowAdapter().contains(\"Activiti\");\n+        return syncopeService.syncope().getUserWorkflowAdapter().contains(\"Activiti\");\n     }\n \n     public static boolean isActivitiEnabledForGroups(final SyncopeService syncopeService) {\n-        return syncopeService.info().getGroupWorkflowAdapter().contains(\"Activiti\");\n+        return syncopeService.syncope().getGroupWorkflowAdapter().contains(\"Activiti\");\n     }\n \n     public static boolean isActivitiEnabledForAnyObjects(final SyncopeService syncopeService) {\n-        return syncopeService.info().getAnyObjectWorkflowAdapter().contains(\"Activiti\");\n+        return syncopeService.syncope().getAnyObjectWorkflowAdapter().contains(\"Activiti\");\n     }\n }"},{"sha":"0a3f83944c62bd23bbc573b09f530c5d9c870eb8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/CamelDetector.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FCamelDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FCamelDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FCamelDetector.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -23,14 +23,14 @@\n public class CamelDetector {\n \n     public static boolean isCamelEnabledForUsers(final SyncopeService syncopeService) {\n-        return syncopeService.info().getUserProvisioningManager().contains(\"Camel\");\n+        return syncopeService.syncope().getUserProvisioningManager().contains(\"Camel\");\n     }\n \n     public static boolean isCamelEnabledForGroups(final SyncopeService syncopeService) {\n-        return syncopeService.info().getGroupProvisioningManager().contains(\"Camel\");\n+        return syncopeService.syncope().getGroupProvisioningManager().contains(\"Camel\");\n     }\n \n     public static boolean isCamelEnabledForAnyObjects(final SyncopeService syncopeService) {\n-        return syncopeService.info().getAnyObjectProvisioningManager().contains(\"Camel\");\n+        return syncopeService.syncope().getAnyObjectProvisioningManager().contains(\"Camel\");\n     }\n }"},{"sha":"3cf2e6a663bd57040271e6de032fb71a26cf7b02","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -137,7 +137,7 @@ public boolean evaluate(final String line) {\n                     return line.startsWith(\"-\");\n                 }\n             });\n-            assertEquals(syncopeService.info().getEntitlements().size(), entitlements);\n+            assertEquals(syncopeService.syncope().getEntitlements().size(), entitlements);\n \n             process.destroy();\n         } catch (IOException e) {"},{"sha":"9e2c3c379e0e1f6f3096d4d2598f308c5c66d3a1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -117,7 +117,7 @@ public void testReadEntitlements() {\n \n         // 3. as admin\n         self = adminClient.self();\n-        assertEquals(syncopeService.info().getEntitlements().size(), self.getKey().size());\n+        assertEquals(syncopeService.syncope().getEntitlements().size(), self.getKey().size());\n         assertFalse(self.getKey().keySet().contains(StandardEntitlement.ANONYMOUS));\n         assertEquals(ADMIN_UNAME, self.getValue().getUsername());\n \n@@ -402,7 +402,7 @@ public void anyTypeEntitlement() {\n         final String anyTypeKey = \"FOLDER \" + getUUIDString();\n \n         // 1. no entitlement exists (yet) for the any type to be created\n-        assertFalse(IterableUtils.matchesAny(syncopeService.info().getEntitlements(), new Predicate<String>() {\n+        assertFalse(IterableUtils.matchesAny(syncopeService.syncope().getEntitlements(), new Predicate<String>() {\n \n             @Override\n             public boolean evaluate(final String entitlement) {\n@@ -428,7 +428,7 @@ public boolean evaluate(final String entitlement) {\n         anyTypeService.create(anyTypeTO);\n \n         // 2. now entitlement exists for the any type just created\n-        assertTrue(IterableUtils.matchesAny(syncopeService.info().getEntitlements(), new Predicate<String>() {\n+        assertTrue(IterableUtils.matchesAny(syncopeService.syncope().getEntitlements(), new Predicate<String>() {\n \n             @Override\n             public boolean evaluate(final String entitlement) {"},{"sha":"dd90fb848607cf254b50666079ea931c0841a978","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -161,7 +161,7 @@ public void delete() {\n \n     @Test\n     public void getCorrelationRules() {\n-        assertEquals(2, syncopeService.info().getSyncCorrelationRules().size());\n+        assertEquals(2, syncopeService.syncope().getSyncCorrelationRules().size());\n     }\n \n     @Test"},{"sha":"9c09f001b61ed8044ce22287f281345c9ee89faa","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -67,7 +67,7 @@ public class PushTaskITCase extends AbstractTaskITCase {\n \n     @Test\n     public void getPushActionsClasses() {\n-        Set<String> actions = syncopeService.info().getPushActions();\n+        Set<String> actions = syncopeService.syncope().getPushActions();\n         assertNotNull(actions);\n     }\n "},{"sha":"ad1c1e888a28fb2600c6b84c05a1711b99c02a2c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -66,7 +66,7 @@ private ReportTO createReport(final ReportTO report) {\n \n     @Test\n     public void getReportletClasses() {\n-        Set<String> reportlets = syncopeService.info().getReportlets();\n+        Set<String> reportlets = syncopeService.syncope().getReportlets();\n         assertNotNull(reportlets);\n         assertFalse(reportlets.isEmpty());\n     }"},{"sha":"123e65938e33a3b29bcb1c83b6c3751c517ac6de","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -103,7 +103,7 @@ private ResourceTO buildResourceTO(final String resourceName) {\n \n     @Test\n     public void getPropagationActionsClasses() {\n-        Set<String> actions = syncopeService.info().getPropagationActions();\n+        Set<String> actions = syncopeService.syncope().getPropagationActions();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }"},{"sha":"dbfd158056db630ce8d63c062ace18c0383564fe","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SchedTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -53,7 +53,7 @@ public class SchedTaskITCase extends AbstractTaskITCase {\n \n     @Test\n     public void getJobClasses() {\n-        Set<String> jobClasses = syncopeService.info().getTaskJobs();\n+        Set<String> jobClasses = syncopeService.syncope().getTaskJobs();\n         assertNotNull(jobClasses);\n         assertFalse(jobClasses.isEmpty());\n     }"},{"sha":"23c30a12d39760f3119f0910f26a8cd62ff2622e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SyncTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -96,7 +96,7 @@ public static void testSyncActionsSetup() {\n \n     @Test\n     public void getSyncActionsClasses() {\n-        Set<String> actions = syncopeService.info().getSyncActions();\n+        Set<String> actions = syncopeService.syncope().getSyncActions();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }"},{"sha":"b3180bae0a4848c6b922a1f7f426f1b65689e464","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/adebf7a4838cdbdd8709a32548c1038ea5506e5d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=adebf7a4838cdbdd8709a32548c1038ea5506e5d","patch":"@@ -65,7 +65,7 @@ public class UserSelfITCase extends AbstractITCase {\n \n     @Test\n     public void selfRegistrationAllowed() {\n-        assertTrue(syncopeService.info().isSelfRegAllowed());\n+        assertTrue(syncopeService.syncope().isSelfRegAllowed());\n     }\n \n     @Test"}]}