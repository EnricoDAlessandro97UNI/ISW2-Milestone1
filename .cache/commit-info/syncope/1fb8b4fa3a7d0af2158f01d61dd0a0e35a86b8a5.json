{"sha":"1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5","node_id":"C_kwDOJfYA1toAKDFmYjhiNGZhM2E3ZDBhZjIxNThmMDFkNjFkZDBhMGUzNWE4NmI4YTU","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-02-06T07:55:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-02-06T07:55:19Z"},"message":"[SYNCOPE-1663] pgjsonb was missing","tree":{"sha":"f2164206f7859428e6d599601b3bd0ad52e170da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f2164206f7859428e6d599601b3bd0ad52e170da"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9e29c518beaa07dc3161cd23b48c6568e595733a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e29c518beaa07dc3161cd23b48c6568e595733a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e29c518beaa07dc3161cd23b48c6568e595733a"}],"stats":{"total":42,"additions":6,"deletions":36},"files":[{"sha":"d67f80f2db8a41b7ba264853957d1ad17e233e32","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":6,"deletions":36,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=1fb8b4fa3a7d0af2158f01d61dd0a0e35a86b8a5","patch":"@@ -245,12 +245,7 @@ protected String getQuery(\n             final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        Pair<PlainSchema, PlainAttrValue> checked;\n-        try {\n-            checked = check(cond, svs.anyTypeKind);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        Pair<PlainSchema, PlainAttrValue> checked = check(cond, svs.anyTypeKind);\n \n         StringBuilder query = new StringBuilder();\n \n@@ -426,12 +421,7 @@ protected String getQuery(\n             final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        Realm realm;\n-        try {\n-            realm = check(cond);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        Realm realm = check(cond);\n \n         StringBuilder query = new StringBuilder().append('(');\n         if (cond.isFromGroup()) {\n@@ -457,12 +447,7 @@ protected String getQuery(\n             final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        String memberKey;\n-        try {\n-            memberKey = check(cond);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        String memberKey = check(cond);\n \n         StringBuilder query = new StringBuilder().append('(');\n \n@@ -528,12 +513,7 @@ protected String getQuery(\n             final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        String rightAnyObjectKey;\n-        try {\n-            rightAnyObjectKey = check(cond);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        String rightAnyObjectKey = check(cond);\n \n         StringBuilder query = new StringBuilder().append('(');\n \n@@ -560,12 +540,7 @@ protected String getQuery(\n             final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        List<String> groupKeys;\n-        try {\n-            groupKeys = check(cond);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        List<String> groupKeys =check(cond);\n \n         String where = groupKeys.stream().\n                 map(key -> \"group_id=?\" + setParameter(parameters, key)).\n@@ -617,12 +592,7 @@ protected String getQuery(\n             cond.setExpression(realm.getKey());\n         }\n \n-        Triple<PlainSchema, PlainAttrValue, AnyCond> checked;\n-        try {\n-            checked = check(cond, svs.anyTypeKind);\n-        } catch (IllegalArgumentException e) {\n-            return ALWAYS_FALSE_ASSERTION;\n-        }\n+        Triple<PlainSchema, PlainAttrValue, AnyCond> checked = check(cond, svs.anyTypeKind);\n \n         StringBuilder query = new StringBuilder();\n "}]}