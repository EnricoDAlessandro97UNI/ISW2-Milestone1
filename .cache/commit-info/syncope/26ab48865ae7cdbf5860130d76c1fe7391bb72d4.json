{"sha":"26ab48865ae7cdbf5860130d76c1fe7391bb72d4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2YWI0ODg2NWFlN2NkYmY1ODYwMTMwZDc2YzFmZTczOTFiYjcyZDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-24T15:20:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-24T15:20:13Z"},"message":"[SYNCOPE-357] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1471477 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dd317ce600f84297503c8d88da72f6a8c791a09f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dd317ce600f84297503c8d88da72f6a8c791a09f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/26ab48865ae7cdbf5860130d76c1fe7391bb72d4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26ab48865ae7cdbf5860130d76c1fe7391bb72d4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26ab48865ae7cdbf5860130d76c1fe7391bb72d4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f64ff23af57b8d9da025060ef146817d5d4527ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f64ff23af57b8d9da025060ef146817d5d4527ea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f64ff23af57b8d9da025060ef146817d5d4527ea"}],"stats":{"total":101,"additions":97,"deletions":4},"files":[{"sha":"dec7189e842df78e7be9419ae1a210a900c13660","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=26ab48865ae7cdbf5860130d76c1fe7391bb72d4","patch":"@@ -153,9 +153,9 @@ public class SyncopeUser extends AbstractAttributable {\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-    @JoinColumn(name = \"user_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"resource_name\"))\n+            @JoinColumn(name = \"user_id\"),\n+            inverseJoinColumns =\n+            @JoinColumn(name = \"resource_name\"))\n     @Valid\n     private Set<ExternalResource> resources;\n \n@@ -250,6 +250,10 @@ public Set<ExternalResource> getResources() {\n         return result;\n     }\n \n+    public Set<ExternalResource> getOwnResources() {\n+        return super.getResources();\n+    }\n+\n     public String getPassword() {\n         return password;\n     }"},{"sha":"ca3c5cd55843eee94c14b1a1cd9342b778356551","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=26ab48865ae7cdbf5860130d76c1fe7391bb72d4","patch":"@@ -383,6 +383,19 @@ public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Strin\n         return getDeleteTaskIds(user, noPropResourceNames);\n     }\n \n+    /**\n+     * Perform delete on each resource associated to the user. It is possible to ask for a mandatory provisioning for\n+     * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if\n+     * the creation fails onto a mandatory resource.\n+     *\n+     * @param wfResult user to be propagated (and info associated), as per result from workflow\n+     * @return list of propagation tasks\n+     */\n+    public List<PropagationTask> getUserDeleteTaskIds(final WorkflowResult<Long> wfResult) {\n+        SyncopeUser user = userDataBinder.getUserFromId(wfResult.getResult());\n+        return createTasks(user, null, null, null, false, true, wfResult.getPropByRes());\n+    }\n+\n     /**\n      * Perform delete on each resource associated to the role. It is possible to ask for a mandatory provisioning for\n      * some resources specifying a set of resource names. Exceptions won't be ignored and the process will be stopped if"},{"sha":"32e39b018acd16d1d0e13bc6ec1a148e60b32552","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=26ab48865ae7cdbf5860130d76c1fe7391bb72d4","patch":"@@ -324,7 +324,17 @@ public RoleTO update(@RequestBody final RoleMod roleMod) {\n     @PreAuthorize(\"hasRole('ROLE_DELETE')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/delete/{roleId}\")\n     public RoleTO delete(@PathVariable(\"roleId\") final Long roleId) {\n-        List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId);\n+        LOG.debug(\"Role delete called for {}\", roleId);\n+\n+        // Generate propagation tasks for deleting users from role resources, if they are on those resources only\n+        // because of the reason being deleted (see SYNCOPE-357)\n+        List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n+        for (WorkflowResult<Long> wfResult : binder.getUsersOnResourcesOnlyBecauseOfRole(roleId)) {\n+            tasks.addAll(propagationManager.getUserDeleteTaskIds(wfResult));\n+        }\n+\n+        // Generate propagation tasks for deleting this role from resources\n+        tasks.addAll(propagationManager.getRoleDeleteTaskIds(roleId));\n \n         RoleTO roleTO = new RoleTO();\n         roleTO.setId(roleId);"},{"sha":"e76be0fee57eb53af15e4cc04f5c6a568e816c52","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=26ab48865ae7cdbf5860130d76c1fe7391bb72d4","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.mod.RoleMod;\n@@ -30,7 +32,9 @@\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n+import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttr;\n import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n@@ -42,6 +46,7 @@\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n@@ -75,6 +80,30 @@ public SyncopeRole getRoleFromId(final Long roleId) {\n         return role;\n     }\n \n+    @Transactional(readOnly = true)\n+    public List<WorkflowResult<Long>> getUsersOnResourcesOnlyBecauseOfRole(final Long roleId) {\n+        SyncopeRole role = getRoleFromId(roleId);\n+\n+        List<WorkflowResult<Long>> result = new ArrayList<WorkflowResult<Long>>();\n+\n+        for (Membership membership : roleDAO.findMemberships(role)) {\n+            SyncopeUser user = membership.getSyncopeUser();\n+\n+            PropagationByResource propByRes = new PropagationByResource();\n+            for (ExternalResource resource : role.getResources()) {\n+                if (!user.getOwnResources().contains(resource)) {\n+                    propByRes.add(ResourceOperation.DELETE, resource.getName());\n+                }\n+\n+                if (!propByRes.isEmpty()) {\n+                    result.add(new WorkflowResult<Long>(user.getId(), propByRes, Collections.<String>emptySet()));\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n         role.setInheritOwner(roleTO.isInheritOwner());\n "},{"sha":"00b3290134393983f38900e48697fdd4c989a76d","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26ab48865ae7cdbf5860130d76c1fe7391bb72d4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=26ab48865ae7cdbf5860130d76c1fe7391bb72d4","patch":"@@ -2182,6 +2182,43 @@ public void issueSYNCOPE354() {\n         resourceService.update(ldap.getName(), ldap);\n     }\n \n+    @Test\n+    public void issueSYNCOPE357() {\n+        // 1. create role with LDAP resource\n+        RoleTO roleTO = new RoleTO();\n+        roleTO.setName(\"SYNCOPE357-\" + getUUIDString());\n+        roleTO.setParent(8L);\n+        roleTO.addResource(RESOURCE_NAME_LDAP);\n+\n+        roleTO = createRole(roleService, roleTO);\n+        assertNotNull(roleTO);\n+\n+        // 2. create user with membership of the above role\n+        UserTO userTO = getUniqueSampleTO(\"syncope357@syncope.apache.org\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(roleTO.getId());\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = createUser(userTO);\n+        assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n+\n+        // 3. read user on resource\n+        ConnObjectTO connObj =\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+        assertNotNull(connObj);\n+\n+        // 4. remove role\n+        roleService.delete(roleTO.getId());\n+\n+        // 5. try to read user on resource: fail\n+        try {\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+            fail();\n+        } catch (SyncopeClientCompositeErrorException scce) {\n+            assertNotNull(scce.getException(SyncopeClientExceptionType.NotFound));\n+        }\n+    }\n+\n     private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"}]}