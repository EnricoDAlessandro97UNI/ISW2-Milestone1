{"sha":"7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdlMGQ2Nzc1MDQ3ZDJiZjY2ZmE5OTc4ZjRhNTM4NWFiM2Y1YjQ1ZmI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-26T14:02:25Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-26T14:04:13Z"},"message":"[SYNCOPE-1081] fix onlick event handling on data tables","tree":{"sha":"21279bcaf53d9626eb0b91d5bb107b22e2b65407","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/21279bcaf53d9626eb0b91d5bb107b22e2b65407"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca0fcf1b728c9c6937b55fd0a8bead1d91d3edb4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca0fcf1b728c9c6937b55fd0a8bead1d91d3edb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca0fcf1b728c9c6937b55fd0a8bead1d91d3edb4"}],"stats":{"total":55,"additions":54,"deletions":1},"files":[{"sha":"9204aa1b30d9fac3e9916bdf561af5c1c460648a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","patch":"@@ -46,10 +46,13 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.util.visit.IVisit;\n+import org.apache.wicket.util.visit.IVisitor;\n \n public final class AjaxDataTablePanel<T extends Serializable, S> extends DataTablePanel<T, S> {\n \n@@ -203,6 +206,15 @@ public void onClose(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n+                group.visitChildren(\n+                        CheckGroupSelector.class, new IVisitor<CheckGroupSelector, List<CheckGroupSelector>>() {\n+\n+                    @Override\n+                    public void component(final CheckGroupSelector t, final IVisit<List<CheckGroupSelector>> ivisit) {\n+                        target.focusComponent(t);\n+                        ivisit.stop();\n+                    }\n+                });\n             }\n         });\n         bulkActionForm.add(group);"},{"sha":"b8bc02f9144f59f207fc48dcc2561b7c4b983dbc","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":42,"deletions":1,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=7e0d6775047d2bf66fa9978f4a5385ab3f5b45fb","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.navigation.paging.AjaxDataNavigationToolbar;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -36,9 +37,14 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.NoRecordsToolbar;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.markup.repeater.OddEvenItem;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.visit.IVisit;\n+import org.apache.wicket.util.visit.IVisitor;\n \n public class AjaxFallbackDataTable<T extends Serializable, S> extends DataTable<T, S> {\n \n@@ -129,8 +135,43 @@ protected String findIndicatorId() {\n \n                     @Override\n                     protected void onEvent(final AjaxRequestTarget target) {\n-                        if (target.getLastFocusedElementId() == null) {\n+                        final String lastFocussedElementId = target.getLastFocusedElementId();\n+                        if (lastFocussedElementId == null) {\n                             togglePanel.toggleWithContent(target, getActions(model), model.getObject());\n+                        } else {\n+                            final AjaxDataTablePanel<?, ?> parent = findParent(AjaxDataTablePanel.class);\n+                            final Model<Boolean> isCheck = Model.<Boolean>of(Boolean.FALSE);\n+\n+                            parent.visitChildren(CheckGroupSelector.class,\n+                                    new IVisitor<CheckGroupSelector, List<CheckGroupSelector>>() {\n+\n+                                @Override\n+                                public void component(\n+                                        final CheckGroupSelector t,\n+                                        final IVisit<List<CheckGroupSelector>> ivisit) {\n+                                    if (t.getMarkupId().equalsIgnoreCase(lastFocussedElementId)) {\n+                                        isCheck.setObject(Boolean.TRUE);\n+                                        ivisit.stop();\n+                                    }\n+                                }\n+                            });\n+\n+                            if (!isCheck.getObject()) {\n+                                parent.visitChildren(Check.class, new IVisitor<Check<?>, List<Check<?>>>() {\n+\n+                                    @Override\n+                                    public void component(final Check<?> t, final IVisit<List<Check<?>>> ivisit) {\n+                                        if (t.getMarkupId().equalsIgnoreCase(lastFocussedElementId)) {\n+                                            isCheck.setObject(Boolean.TRUE);\n+                                            ivisit.stop();\n+                                        }\n+                                    }\n+                                });\n+                            }\n+\n+                            if (!isCheck.getObject()) {\n+                                togglePanel.toggleWithContent(target, getActions(model), model.getObject());\n+                            }\n                         }\n                     }\n                 });"}]}