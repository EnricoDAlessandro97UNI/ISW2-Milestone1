{"sha":"047ac0190bf15aff81fee2d9538bd68a64305d15","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0N2FjMDE5MGJmMTVhZmY4MWZlZTJkOTUzOGJkNjhhNjQzMDVkMTU=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-10-30T11:32:48Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-10-30T11:32:48Z"},"message":"provides wizard to create users, groups and any objects +  several changes merged from master","tree":{"sha":"1a91638ab00269cdf315b70b8a5541177e10324c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1a91638ab00269cdf315b70b8a5541177e10324c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/047ac0190bf15aff81fee2d9538bd68a64305d15","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/047ac0190bf15aff81fee2d9538bd68a64305d15","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/047ac0190bf15aff81fee2d9538bd68a64305d15","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/047ac0190bf15aff81fee2d9538bd68a64305d15/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"4c30ca705382bfc26b09c1675941ac28f5f7ddfc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c30ca705382bfc26b09c1675941ac28f5f7ddfc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c30ca705382bfc26b09c1675941ac28f5f7ddfc"}],"stats":{"total":3680,"additions":2763,"deletions":917},"files":[{"sha":"c5e8097b81967a059013b064eee32426fd983486","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaSyncopeOperations.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -33,19 +33,19 @@ public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final St\n     }\n \n     public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n-        return schemaService.list(schemaType);\n+        return schemaService.list(schemaType, null);\n     }\n \n     public <T extends AbstractSchemaTO> List<T> listVirtual() {\n-        return schemaService.list(SchemaType.VIRTUAL);\n+        return schemaService.list(SchemaType.VIRTUAL, null);\n     }\n \n     public <T extends AbstractSchemaTO> List<T> listPlain() {\n-        return schemaService.list(SchemaType.PLAIN);\n+        return schemaService.list(SchemaType.PLAIN, null);\n     }\n \n     public <T extends AbstractSchemaTO> List<T> listDerived() {\n-        return schemaService.list(SchemaType.DERIVED);\n+        return schemaService.list(SchemaType.DERIVED, null);\n     }\n \n     public void delete(final SchemaType schemaType, final String schemaName) {"},{"sha":"03fab621d8bca96f3243b213046615d8bc588ce4","filename":"client/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -21,6 +21,7 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.core.type.TypeReference;\n import java.io.IOException;\n+import java.io.Serializable;\n import java.io.StringWriter;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -37,7 +38,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class PreferenceManager {\n+public class PreferenceManager implements Serializable {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PreferenceManager.class);\n \n@@ -50,9 +51,11 @@ public class PreferenceManager {\n \n     private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[] { 10, 25, 50 });\n \n+    private static final long serialVersionUID = 1L;\n+\n     private final ObjectMapper mapper;\n \n-    private final CookieUtils cookieUtils;\n+    private final transient CookieUtils cookieUtils;\n \n     public PreferenceManager() {\n         this.mapper = new ObjectMapper();"},{"sha":"4fb363093cd2aa2714654a13a2977aae7239c38f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -241,8 +241,8 @@ private void bulkAssociationAction(\n         if (beans.isEmpty()) {\n             modal.close(target);\n         } else {\n-            BulkActionResult res = resourceRestClient.bulkAssociationAction(resourceTO.getKey(), anyTypeKind.name(),\n-                    action, anyKeys);\n+            BulkActionResult res = resourceRestClient.bulkAssociationAction(\n+                    resourceTO.getKey(), anyTypeKind.name(), action, anyKeys);\n \n             ((BasePage) pageRef.getPage()).setModalResult(true);\n "},{"sha":"b7c0b29ac31cd3f1a19e8ab0ce5a504e82279a3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModal.java","status":"modified","additions":17,"deletions":14,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.wicket.Component;\n@@ -72,7 +73,7 @@\n \n     private static final String IMG_PREFIX = \"/img/statuses/\";\n \n-    private final AnyTO subject;\n+    private final ProvisioningResult<AnyTO> provResult;\n \n     private final Mode mode;\n \n@@ -87,7 +88,7 @@\n \n         private Mode mode;\n \n-        private AnyTO subject;\n+        private ProvisioningResult<AnyTO> provResult;\n \n         private final BaseModal<T> modal;\n \n@@ -96,8 +97,8 @@\n         public Builder(\n                 final BaseModal<T> modal,\n                 final PageReference pageRef,\n-                final AnyTO attributable) {\n-            this.subject = attributable;\n+                final ProvisioningResult<AnyTO> provResult) {\n+            this.provResult = provResult;\n             this.modal = modal;\n             this.pageRef = pageRef;\n         }\n@@ -119,7 +120,7 @@ private ResultStatusModal(\n \n         super(modal, pageRef);\n \n-        this.subject = builder.subject;\n+        this.provResult = builder.provResult;\n         statusUtils = new StatusUtils(new UserRestClient());\n         if (builder.mode == null) {\n             this.mode = Mode.ADMIN;\n@@ -145,14 +146,16 @@ private ResultStatusModal(\n \n             List<PropagationStatus> propagations = new ArrayList<PropagationStatus>();\n             propagations.add(syncope);\n-            propagations.addAll(subject.getPropagationStatusTOs());\n+            propagations.addAll(provResult.getPropagationStatuses());\n+\n+            AnyTO any = provResult.getAny();\n \n             fragment.add(new Label(\"info\",\n-                    ((subject instanceof UserTO) && ((UserTO) subject).getUsername() != null)\n-                            ? ((UserTO) subject).getUsername()\n-                            : ((subject instanceof GroupTO) && ((GroupTO) subject).getName() != null)\n-                                    ? ((GroupTO) subject).getName()\n-                                    : String.valueOf(subject.getKey())));\n+                    ((any instanceof UserTO) && ((UserTO) any).getUsername() != null)\n+                            ? ((UserTO) any).getUsername()\n+                            : ((any instanceof GroupTO) && ((GroupTO) any).getName() != null)\n+                                    ? ((GroupTO) any).getName()\n+                                    : String.valueOf(any.getKey())));\n \n             final ListView<PropagationStatus> propRes = new ListView<PropagationStatus>(\"resources\",\n                     propagations) {\n@@ -267,7 +270,7 @@ private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n \n         // sorted in reversed presentation order\n         final List<String> head = new ArrayList<String>();\n-        if (subject instanceof UserTO) {\n+        if (provResult.getAny() instanceof UserTO) {\n             head.add(ConnIdSpecialAttributeName.PASSWORD);\n             head.add(ConnIdSpecialAttributeName.ENABLE);\n         }\n@@ -286,7 +289,7 @@ private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n         attributes.addAll(beforeAttrMap.keySet());\n         attributes.addAll(afterAttrMap.keySet());\n \n-        if (!(subject instanceof UserTO)) {\n+        if (!(provResult.getAny() instanceof UserTO)) {\n             attributes.remove(ConnIdSpecialAttributeName.PASSWORD);\n             attributes.remove(ConnIdSpecialAttributeName.ENABLE);\n         }\n@@ -382,7 +385,7 @@ private Fragment getStatusIcon(final String id, final String resourceName, final\n         final Image image;\n         final String alt, title;\n         switch (statusUtils.getStatusBean(\n-                subject, resourceName, objectTO, this.subject instanceof GroupTO).getStatus()) {\n+                provResult.getAny(), resourceName, objectTO, this.provResult.getAny() instanceof GroupTO).getStatus()) {\n \n             case ACTIVE:\n                 image = new Image(\"status\","},{"sha":"57d34aad559732f20249840c475f401a8fe6551f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -30,7 +30,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class AbstractModalPanel extends Panel {\n+public class AbstractModalPanel extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = 8611724965544132636L;\n \n@@ -66,10 +66,12 @@ protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n         this.modal.close(target);\n     }\n \n+    @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         modal.getFeedbackPanel().refresh(target);\n     }\n \n+    @Override\n     public void onError(final AjaxRequestTarget target, final Form<?> form) {\n         modal.getFeedbackPanel().refresh(target);\n     }"},{"sha":"e6bd3edcb6737cae284c526948ca83f9345e84fd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":61,"deletions":17,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.PreferenceManager;\n@@ -27,24 +28,23 @@\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.event.IEventSource;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractSearchResultPanel<T extends AnyTO> extends Panel implements IEventSource {\n+public abstract class AbstractSearchResultPanel<T extends AnyTO> extends WizardMgtPanel<T> {\n \n     private static final long serialVersionUID = -9170191461250434024L;\n \n@@ -93,12 +93,6 @@\n      */\n     private AnyDataProvider dataProvider;\n \n-    /**\n-     * Modal window to be used for: user profile editing (Global visibility is required); attributes choosing to\n-     * display in tables; user status management.\n-     */\n-    protected final BaseModal<T> modal = new BaseModal<>(\"modal\");\n-\n     /**\n      * Owner page.\n      */\n@@ -114,13 +108,16 @@\n      */\n     private final String type;\n \n-    protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient,\n-            final String realm, final String type) {\n-\n-        super(id);\n+    protected <T extends AnyTO> AbstractSearchResultPanel(\n+            final String id,\n+            final boolean filtered,\n+            final String fiql,\n+            final PageReference pageRef,\n+            final AbstractAnyRestClient restClient,\n+            final String realm,\n+            final String type) {\n \n-        add(modal);\n+        super(id, pageRef, true);\n \n         setOutputMarkupId(true);\n \n@@ -133,7 +130,7 @@ protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boo\n         this.restClient = restClient;\n \n         // Container for user search result\n-        container = new WebMarkupContainer(\"container\");\n+        container = new WebMarkupContainer(\"searchContainer\");\n         container.setOutputMarkupId(true);\n         add(container);\n \n@@ -177,7 +174,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         // ---------------------------\n \n-        setWindowClosedReloadCallback(modal);\n+//        setWindowClosedReloadCallback(modal);\n     }\n \n     public void search(final String fiql, final AjaxRequestTarget target) {\n@@ -234,6 +231,7 @@ public void onEvent(final IEvent<?> event) {\n \n             data.getTarget().add(container);\n         }\n+        super.onEvent(event);\n     }\n \n     private void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n@@ -299,4 +297,50 @@ public void setRows(final int rows) {\n     protected abstract <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions();\n \n     protected abstract String getPageId();\n+\n+    public abstract static class Builder<T extends Serializable> extends WizardMgtPanel.Builder<T> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Specify if results are about a filtered search or not. Using this attribute it is possible to use this panel\n+         * to\n+         * show results about user list and user search.\n+         */\n+        protected final boolean filtered;\n+\n+        /**\n+         * Filter used in case of filtered search.\n+         */\n+        protected final String fiql;\n+\n+        protected final AbstractAnyRestClient restClient;\n+\n+        /**\n+         * Realm related to current panel.\n+         */\n+        protected final String realm;\n+\n+        /**\n+         * Any type related to current panel.\n+         */\n+        protected final String type;\n+\n+        protected Builder(\n+                final Class<T> reference,\n+                final boolean filtered,\n+                final String fiql,\n+                final PageReference pageRef,\n+                final AbstractAnyRestClient restClient,\n+                final String realm,\n+                final String type) {\n+            super(reference, pageRef);\n+            this.filtered = filtered;\n+            this.fiql = fiql;\n+            this.restClient = restClient;\n+            this.realm = realm;\n+            this.type = type;\n+        }\n+\n+    }\n }"},{"sha":"0272555f62fcd21a51e59ba458f70785f15e8e34","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -61,7 +61,7 @@ public AjaxDataTablePanel(\n \n         super(id);\n \n-        final BaseModal<?> bulkModalWin = new BaseModal(\"bulkModal\");\n+        final BaseModal<?> bulkModalWin = new BaseModal<>(\"bulkModal\");\n         add(bulkModalWin);\n \n         bulkModalWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {"},{"sha":"4e3efe38e5b308c25223abe4a9f985c5b125de38","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"modified","additions":40,"deletions":17,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.lang.reflect.Field;\n-import java.text.MessageFormat;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -29,25 +28,25 @@\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n-import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n@@ -65,9 +64,15 @@\n \n     private final String entitlement = \"USER_LIST\";\n \n-    public AnySearchResultPanel(final String type, final String parentId, final boolean filtered,\n-            final String fiql, final PageReference callerRef, final AbstractAnyRestClient restClient,\n-            final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+    protected AnySearchResultPanel(\n+            final String type,\n+            final String parentId,\n+            final boolean filtered,\n+            final String fiql,\n+            final PageReference callerRef,\n+            final AbstractAnyRestClient restClient,\n+            final List<AnyTypeClassTO> anyTypeClassTOs,\n+            final String realm) {\n \n         super(parentId, filtered, fiql, callerRef, restClient, realm, type);\n         //setCustomMarkupId(markupId);\n@@ -139,16 +144,8 @@ public ActionLinksPanel<AnyTO> getActions(final String componentId, final IModel\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n-                        final T modelObject = ((AnyObjectRestClient) restClient).<T>read(anyTO.getKey());\n-\n-                        final IModel<T> model = new CompoundPropertyModel<>(modelObject);\n-                        modal.setFormModel(model);\n-\n-                        // still missing content\n-                        target.add(modal);\n-\n-                        modal.header(new Model<String>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n-                        modal.show(true);\n+                        send(AnySearchResultPanel.this, Broadcast.BREADTH,\n+                                new AjaxWizard.NewItemActionEvent<AnyTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n \n@@ -222,4 +219,30 @@ protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n     protected String getPageId() {\n         return pageID;\n     }\n+\n+    public static final class Builder extends AbstractSearchResultPanel.Builder<AnyObjectTO> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private final List<AnyTypeClassTO> anyTypeClassTOs;\n+\n+        public Builder(\n+                final boolean filtered,\n+                final String fiql,\n+                final PageReference pageRef,\n+                final AbstractAnyRestClient restClient,\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final String realm,\n+                final String type) {\n+            super(AnyObjectTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            this.anyTypeClassTOs = anyTypeClassTOs;\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<AnyObjectTO> newInstance(final String parentId) {\n+            return new AnySearchResultPanel<AnyObjectTO>(\n+                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm);\n+        }\n+\n+    }\n }"},{"sha":"3447a9778827d61a0721ecc30cacf293d7c27a80","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorConfPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -43,10 +43,10 @@ public ConnectorConfPanel(final String id, final IModel<ConnInstanceTO> model, f\n         this.bundles = bundles;\n \n         final List<ConnConfProperty> properties = getConnProperties(model.getObject());\n-        model.getObject().getConfiguration().clear();\n-        model.getObject().getConfiguration().addAll(properties);\n+        model.getObject().getConf().clear();\n+        model.getObject().getConf().addAll(properties);\n \n-        setConfPropertyListView(\"configuration\", true);\n+        setConfPropertyListView(\"conf\", true);\n     }\n \n     /**\n@@ -67,10 +67,10 @@ public ConnConfProperty transform(final ConnConfPropSchema key) {\n                         final ConnConfProperty property = new ConnConfProperty();\n                         property.setSchema(key);\n \n-                        if (instance.getKey() != 0 && instance.getConfigurationMap().containsKey(key.getName())\n-                        && instance.getConfigurationMap().get(key.getName()).getValues() != null) {\n-                            property.getValues().addAll(instance.getConfigurationMap().get(key.getName()).getValues());\n-                            property.setOverridable(instance.getConfigurationMap().get(key.getName()).isOverridable());\n+                        if (instance.getKey() != 0 && instance.getConfMap().containsKey(key.getName())\n+                        && instance.getConfMap().get(key.getName()).getValues() != null) {\n+                            property.getValues().addAll(instance.getConfMap().get(key.getName()).getValues());\n+                            property.setOverridable(instance.getConfMap().get(key.getName()).isOverridable());\n                         }\n \n                         if (property.getValues().isEmpty() && !key.getDefaultValues().isEmpty()) {"},{"sha":"977888184b49b4bd4c55b5248a59c1615468d07a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupModalPanel.java","status":"removed","additions":0,"deletions":119,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,119 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-\n-/**\n- * Modal window with Group form.\n- */\n-public class GroupModalPanel extends AbstractModalPanel {\n-\n-    private static final long serialVersionUID = -1732493223434085205L;\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    protected final Mode mode;\n-\n-    protected final boolean createFlag;\n-\n-    protected final GroupPanel groupPanel;\n-\n-    protected GroupTO originalGroupTO;\n-\n-    public GroupModalPanel(\n-            final BaseModal<?> modal, final PageReference pageRef, final GroupTO groupTO) {\n-\n-        this(modal, pageRef, groupTO, Mode.ADMIN);\n-    }\n-\n-    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    public GroupModalPanel(\n-            final BaseModal<?> modal, final PageReference pageRef, final GroupTO groupTO, final Mode mode) {\n-\n-        super(modal, pageRef);\n-\n-        this.mode = mode;\n-\n-        this.createFlag = groupTO.getKey() == 0;\n-        if (!createFlag) {\n-            originalGroupTO = SerializationUtils.clone(groupTO);\n-        }\n-\n-        final Form<GroupTO> form = new Form<>(\"groupForm\");\n-        form.setMultiPart(true);\n-\n-        add(new Label(\"displayName\", groupTO.getKey() == 0 ? \"\" : groupTO.getDisplayName()));\n-\n-        form.setModel(new CompoundPropertyModel<>(groupTO));\n-\n-        this.groupPanel = new GroupPanel.Builder(\"groupPanel\").\n-                form(form).groupTO(groupTO).groupModalPageMode(mode).build();\n-        form.add(groupPanel);\n-\n-        final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n-\n-            private static final long serialVersionUID = -958724007591692537L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                try {\n-                    submitAction(target, form);\n-                } catch (Exception e) {\n-                    LOG.error(\"Failure managing groupTO {}\", groupTO, e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    modal.getFeedbackPanel().refresh(target);\n-                }\n-            }\n-\n-            @Override\n-            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                modal.getFeedbackPanel().refresh(target);\n-            }\n-        };\n-        form.add(submit);\n-        form.setDefaultButton(submit);\n-    }\n-\n-    protected void submitAction(final AjaxRequestTarget target, final Form<?> form) {\n-        final GroupTO groupTO = (GroupTO) form.getDefaultModelObject();\n-\n-        GroupTO result;\n-        if (createFlag) {\n-            result = groupRestClient.create(groupTO);\n-        } else {\n-            result = groupRestClient.update(originalGroupTO.getETagValue(), groupTO);\n-        }\n-\n-        //setResponsePage(new ResultStatusModal.Builder(window, result).build());\n-    }\n-}"},{"sha":"3e58e61b93988dc77ad5b0e9daaab4a8a1b0dc3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupPanel.java","status":"removed","additions":0,"deletions":75,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,75 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.io.Serializable;\n-import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n-\n-public final class GroupPanel extends Panel {\n-\n-    private static final long serialVersionUID = 4216376097320768369L;\n-\n-    public static class Builder implements Serializable {\n-\n-        private static final long serialVersionUID = 8150440254654306070L;\n-\n-        private String id;\n-\n-        private Form form;\n-\n-        private GroupTO groupTO;\n-\n-        private Mode mode;\n-\n-        private PageReference pageReference;\n-\n-        public Builder(final String id) {\n-            this.id = id;\n-        }\n-\n-        public Builder form(final Form form) {\n-            this.form = form;\n-            return this;\n-        }\n-\n-        public Builder groupTO(final GroupTO groupTO) {\n-            this.groupTO = groupTO;\n-            return this;\n-        }\n-\n-        public Builder groupModalPageMode(final Mode mode) {\n-            this.mode = mode;\n-            return this;\n-        }\n-\n-        public GroupPanel build() {\n-            return new GroupPanel(this);\n-        }\n-    }\n-\n-    private GroupPanel(final Builder builder) {\n-        super(builder.id);\n-        \n-\n-    }\n-}"},{"sha":"3e94680cb5fb06d50d11ae8b75ec3f626e1fae06","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":42,"deletions":11,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -34,28 +34,37 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class GroupSearchResultPanel extends AnySearchResultPanel<GroupTO> {\n+public final class GroupSearchResultPanel extends AnySearchResultPanel<GroupTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n     private final String entitlement = \"GROUP_READ\";\n \n-    public GroupSearchResultPanel(final String type, final String parentId,\n-            final boolean filtered, final String fiql, final PageReference callerRef,\n-            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+    private GroupSearchResultPanel(\n+            final String type,\n+            final String parentId,\n+            final boolean filtered,\n+            final String fiql,\n+            final PageReference callerRef,\n+            final AbstractAnyRestClient restClient,\n+            final List<AnyTypeClassTO> anyTypeClassTOs,\n+            final String realm) {\n \n         super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n     }\n@@ -73,8 +82,7 @@ protected List<IColumn<AnyTO, String>> getColumns() {\n             } else if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             } else {\n-                columns.add(\n-                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             }\n         }\n \n@@ -115,11 +123,8 @@ public ActionLinksPanel<AnyTO> getActions(final String componentId, final IModel\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n-                        modal.addOrReplace(new GroupModalPanel(\n-                                modal, getPage().getPageReference(), GroupTO.class.cast(model.getObject())));\n-\n-                        target.add(modal);\n-                        modal.show(target);\n+                        send(GroupSearchResultPanel.this, Broadcast.BREADTH,\n+                                new AjaxWizard.NewItemActionEvent<AnyTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n \n@@ -219,4 +224,30 @@ protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n     protected String getPageId() {\n         return pageID;\n     }\n+\n+    public static final class Builder extends AbstractSearchResultPanel.Builder<GroupTO> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private final List<AnyTypeClassTO> anyTypeClassTOs;\n+\n+        public Builder(\n+                final boolean filtered,\n+                final String fiql,\n+                final PageReference pageRef,\n+                final AbstractAnyRestClient restClient,\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final String realm,\n+                final String type) {\n+            super(GroupTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            this.anyTypeClassTOs = anyTypeClassTOs;\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<GroupTO> newInstance(final String parentId) {\n+            return new GroupSearchResultPanel(\n+                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm);\n+        }\n+\n+    }\n }"},{"sha":"229bcca52e40e7069f91d664a22bff694c78925f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":32,"deletions":125,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -27,28 +27,21 @@\n import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public final class ListViewPanel<T extends Serializable> extends Panel {\n+public final class ListViewPanel<T extends Serializable> extends WizardMgtPanel<T> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n@@ -57,18 +50,8 @@\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(ListViewPanel.class);\n \n-    private final ClearIndicatingAjaxButton addButton;\n-\n-    private AjaxWizardBuilder<T> newItemPanelBuilder;\n-\n-    private final WebMarkupContainer container;\n-\n-    private final Fragment initialFragment;\n-\n     private final List<T> listOfItems;\n \n-    private NotificationPanel notificationPanel;\n-\n     /**\n      * Table view of a list of beans.\n      *\n@@ -85,16 +68,10 @@ private ListViewPanel(\n             final List<String> includes,\n             final ActionLinksPanel.Builder<T> actions,\n             final PageReference pageRef) {\n-        super(id);\n+        super(id, pageRef);\n         setOutputMarkupId(true);\n \n-        container = new WebMarkupContainer(\"container\");\n-        add(container.setOutputMarkupId(true));\n-\n-        initialFragment = new Fragment(\"content\", \"table\", this);\n-        container.addOrReplace(initialFragment);\n-\n-        initialFragment.add(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n+        add(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n \n         final List<String> toBeIncluded;\n         if (includes == null || includes.isEmpty()) {\n@@ -130,7 +107,7 @@ protected void populateItem(final ListItem<String> item) {\n                 item.add(new Label(\"name\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n             }\n         };\n-        initialFragment.add(names);\n+        add(names);\n \n         final ListView<T> beans = new ListView<T>(\"beans\", listOfItems) {\n \n@@ -169,121 +146,37 @@ protected void populateItem(final ListItem<String> fieldItem) {\n                 beanItem.add(actions.build(\"actions\", bean));\n             }\n         };\n+        beans.setOutputMarkupId(true);\n         beans.setReuseItems(true);\n-        initialFragment.add(beans);\n-\n-        addButton = new ClearIndicatingAjaxButton(\"add\", pageRef) {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                send(ListViewPanel.this, Broadcast.DEPTH, new AjaxWizard.NewItemActionEvent<T>(null, target));\n-            }\n-        };\n-\n-        addButton.setEnabled(false);\n-        addButton.setVisible(false);\n-\n-        initialFragment.add(addButton);\n+        add(beans);\n     }\n \n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n-            final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n-\n-            final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n-\n-            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n-                final Fragment fragment = new Fragment(\"content\", \"wizard\", ListViewPanel.this);\n-                newItemPanelBuilder.setItem(item);\n-\n-                fragment.add(newItemPanelBuilder.build(\n-                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex()));\n-\n-                container.addOrReplace(fragment);\n-            } else {\n-                if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n-                    if (item != null && !this.listOfItems.contains(item)) {\n-                        this.listOfItems.add(item);\n-                    }\n-\n-                    if (notificationPanel != null) {\n-                        getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        notificationPanel.refresh(target);\n-                    }\n-                }\n-                container.addOrReplace(initialFragment);\n-            }\n-\n-            target.add(container);\n-        }\n-        super.onEvent(event);\n-    }\n-\n-    private ListViewPanel<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n-        this.newItemPanelBuilder = panelBuilder;\n-\n-        if (this.newItemPanelBuilder != null) {\n-            addButton.setEnabled(true);\n-            addButton.setVisible(true);\n-        }\n-\n-        return this;\n-    }\n-\n-    private ListViewPanel<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n-        this.notificationPanel = notificationPanel;\n-        return this;\n-    }\n-\n-    public static <T extends Serializable> Builder<T> builder(final Class<T> reference, final PageReference pageRef) {\n-        return new Builder<T>(reference, pageRef);\n+    public static <T extends Serializable> ListViewPanel.Builder<T> builder(\n+            final Class<T> reference, final PageReference pageRef) {\n+        return new ListViewPanel.Builder<T>(reference, pageRef);\n     }\n \n     /**\n      * ListViewPanel builder.\n      *\n      * @param <T> list item reference type.\n      */\n-    public static final class Builder<T extends Serializable> implements Serializable {\n+    public static final class Builder<T extends Serializable> extends WizardMgtPanel.Builder<T> {\n \n         private static final long serialVersionUID = 1L;\n \n-        private final PageReference pageRef;\n-\n-        private final Class<T> reference;\n-\n         private final List<String> includes = new ArrayList<>();\n \n         private final ActionLinksPanel.Builder<T> actions;\n \n         private List<T> items;\n \n-        private AjaxWizardBuilder<T> newItemPanelBuilder;\n-\n-        private NotificationPanel notificationPanel;\n-\n         private Builder(final Class<T> reference, final PageReference pageRef) {\n-            this.pageRef = pageRef;\n-            this.reference = reference;\n+            super(reference, pageRef);\n             this.items = null;\n             this.actions = ActionLinksPanel.<T>builder(pageRef);\n         }\n \n-        /**\n-         * Builds a list view.\n-         *\n-         * @param id component id.\n-         * @return List view.\n-         */\n-        public ListViewPanel<T> build(final String id) {\n-            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef).\n-                    addNewItemPanelBuilder(newItemPanelBuilder).addNotificationPanel(notificationPanel);\n-        }\n-\n         /**\n          * Sets list of items.\n          *\n@@ -343,14 +236,28 @@ public Builder<T> addAction(\n             return this;\n         }\n \n-        public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n-            this.newItemPanelBuilder = panelBuilder;\n-            return this;\n+        @Override\n+        protected WizardMgtPanel<T> newInstance(final String id) {\n+            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef);\n         }\n+    }\n \n-        public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n-            this.notificationPanel = notificationPanel;\n-            return this;\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+\n+            final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n+            final AjaxRequestTarget target = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getTarget();\n+\n+            if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                if (item != null && !this.listOfItems.contains(item)) {\n+                    this.listOfItems.add(item);\n+                }\n+            }\n+\n+            target.add(ListViewPanel.this);\n         }\n+        super.onEvent(event);\n     }\n }"},{"sha":"681c1f24ed966df377784df5061f5646baf74304","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ModalPanel.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.request.component.IRequestableComponent;\n+\n+public interface ModalPanel extends IRequestableComponent {\n+\n+    void onSubmit(final AjaxRequestTarget target, final Form<?> form);\n+\n+    void onError(final AjaxRequestTarget target, final Form<?> form);\n+}"},{"sha":"edf35ee9387ffae64d4c56a89ec16fc1d289e546","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":47,"deletions":11,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -22,12 +22,20 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wizards.any.AnyWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n@@ -54,13 +62,16 @@ public class Realm extends Panel {\n \n     private final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n \n+    private final PageReference pageRef;\n+\n     @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n-    public Realm(final String id, final RealmTO realmTO, final PageReference pageReference) {\n+    public Realm(final String id, final RealmTO realmTO, final PageReference pageRef) {\n         super(id);\n         this.realmTO = realmTO;\n         this.anyTypeTOs = anyTypeRestClient.getAll();\n+        this.pageRef = pageRef;\n \n-        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageReference)));\n+        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n     }\n \n     public RealmTO getRealmTO() {\n@@ -103,19 +114,44 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n \n         switch (anyTypeTO.getKind()) {\n             case USER:\n-                panel = new UserSearchResultPanel(anyTypeTO.getKey(), id,\n-                        false, null, pageReference, userRestClient, anyTypeRestClient.getAnyTypeClass(\n-                                anyTypeTO.getClasses()), realmTO.getFullPath());\n+                final UserTO userTO = new UserTO();\n+                userTO.setRealm(realmTO.getFullPath());\n+                panel = new UserSearchResultPanel.Builder(\n+                        false, null, pageReference, userRestClient,\n+                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        realmTO.getFullPath(),\n+                        anyTypeTO.getKey()).\n+                        addNewItemPanelBuilder(new UserWizardBuilder(\n+                                        BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        build(id);\n                 break;\n             case GROUP:\n-                panel = new GroupSearchResultPanel(anyTypeTO.getKey(), id,\n-                        false, null, pageReference, groupRestClient, anyTypeRestClient.getAnyTypeClass(\n-                                anyTypeTO.getClasses()), realmTO.getFullPath());\n+                final GroupTO groupTO = new GroupTO();\n+                groupTO.setRealm(realmTO.getFullPath());\n+                panel = new GroupSearchResultPanel.Builder(\n+                        false, null, pageReference, groupRestClient,\n+                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        realmTO.getFullPath(),\n+                        anyTypeTO.getKey()).\n+                        addNewItemPanelBuilder(new GroupWizardBuilder(\n+                                        BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        build(id);\n                 break;\n             case ANY_OBJECT:\n-                panel = new AnySearchResultPanel<>(anyTypeTO.getKey(), id,\n-                        false, null, pageReference, anyObjectRestClient, anyTypeRestClient.getAnyTypeClass(\n-                                anyTypeTO.getClasses()), realmTO.getFullPath());\n+                final AnyObjectTO anyObjectTO = new AnyObjectTO();\n+                anyObjectTO.setRealm(realmTO.getFullPath());\n+                anyObjectTO.setType(anyTypeTO.getKey());\n+                panel = new AnySearchResultPanel.Builder(\n+                        false, null, pageReference, anyObjectRestClient,\n+                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        realmTO.getFullPath(),\n+                        anyTypeTO.getKey()).\n+                        addNewItemPanelBuilder(new AnyWizardBuilder<AnyObjectTO>(\n+                                        BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        build(id);\n                 break;\n             default:\n                 panel = new LabelPanel(id, null);"},{"sha":"a838a47ba714260170157d229ac468f12210fff1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -31,7 +31,7 @@ public abstract class ResourceConnConfPanel extends AbstractConnectorConfPanel<R\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private ConnectorRestClient restClient = new ConnectorRestClient();\n+    private final ConnectorRestClient restClient = new ConnectorRestClient();\n \n     private final boolean createFlag;\n \n@@ -40,14 +40,14 @@ public ResourceConnConfPanel(final String id, final IModel<ResourceTO> model, fi\n \n         this.createFlag = createFlag;\n \n-        final List<ConnConfProperty> connConfProperties = getConnProperties(model.getObject());\n+        final List<ConnConfProperty> confOverride = getConnProperties(model.getObject());\n         model.getObject().getConfOverride().clear();\n-        model.getObject().getConfOverride().addAll(connConfProperties);\n+        model.getObject().getConfOverride().addAll(confOverride);\n \n-        setConfPropertyListView(\"connConfProperties\", false);\n+        setConfPropertyListView(\"confOverride\", false);\n \n-        check.setEnabled(!connConfProperties.isEmpty());\n-        check.setVisible(!connConfProperties.isEmpty());\n+        check.setEnabled(!confOverride.isEmpty());\n+        check.setVisible(!confOverride.isEmpty());\n     }\n \n     /**"},{"sha":"3e9881f7fe49293a0dd124a56c71b35d93da98d4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -72,12 +72,6 @@ public ResourceDetailsPanel(\n                 new PropertyModel<Boolean>(model, \"enforceMandatoryCondition\"),\n                 false));\n \n-        container.add(new AjaxCheckBoxPanel(\n-                \"propagationPrimary\",\n-                new ResourceModel(\"propagationPrimary\", \"propagationPrimary\").getObject(),\n-                new PropertyModel<Boolean>(model, \"propagationPrimary\"),\n-                false));\n-\n         container.add(new SpinnerFieldPanel<>(\n                 \"propagationPriority\",\n                 \"propagationPriority\","},{"sha":"26f638cd3de3be77f7ea966e9834636113afe1e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":42,"deletions":18,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -31,19 +31,21 @@\n import org.apache.syncope.client.console.pages.StatusModalPage;\n import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -52,15 +54,21 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class UserSearchResultPanel extends AnySearchResultPanel<UserTO> {\n+public final class UserSearchResultPanel extends AnySearchResultPanel<UserTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n     private final String entitlement = \"USER_LIST\";\n \n-    public UserSearchResultPanel(final String type, final String parentId,\n-            final boolean filtered, final String fiql, final PageReference callerRef,\n-            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+    private UserSearchResultPanel(\n+            final String type,\n+            final String parentId,\n+            final boolean filtered,\n+            final String fiql,\n+            final PageReference callerRef,\n+            final AbstractAnyRestClient restClient,\n+            final List<AnyTypeClassTO> anyTypeClassTOs,\n+            final String realm) {\n \n         super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n     }\n@@ -78,8 +86,7 @@ protected List<IColumn<AnyTO, String>> getColumns() {\n             } else if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             } else {\n-                columns.add(\n-                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             }\n         }\n \n@@ -98,8 +105,7 @@ protected List<IColumn<AnyTO, String>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION) {\n-                columns.add(\n-                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n@@ -155,15 +161,8 @@ public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n-                        final UserTO modelObject = ((UserRestClient) restClient).read(model.getObject().getKey());\n-\n-                        final IModel<UserTO> model = new CompoundPropertyModel<>(modelObject);\n-                        modal.setFormModel(model);\n-\n-                        target.add(modal);\n-\n-                        modal.header(new Model<String>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n-                        modal.show(true);\n+                        send(UserSearchResultPanel.this, Broadcast.BREADTH,\n+                                new AjaxWizard.NewItemActionEvent<AnyTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<AnyTO>() {\n \n@@ -236,4 +235,29 @@ protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n     protected String getPageId() {\n         return pageID;\n     }\n+\n+    public static final class Builder extends AbstractSearchResultPanel.Builder<UserTO> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private final List<AnyTypeClassTO> anyTypeClassTOs;\n+\n+        public Builder(\n+                final boolean filtered,\n+                final String fiql,\n+                final PageReference pageRef,\n+                final AbstractAnyRestClient restClient,\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final String realm,\n+                final String type) {\n+            super(UserTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            this.anyTypeClassTOs = anyTypeClassTOs;\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<UserTO> newInstance(final String parentId) {\n+            return new UserSearchResultPanel(\n+                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm);\n+        }\n+    }\n }"},{"sha":"85b7c88c3a9d12fb99b55bbd0b6239635654a7bd","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"modified","additions":36,"deletions":1,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -20,9 +20,15 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.springframework.stereotype.Component;\n@@ -35,6 +41,18 @@ public class AnyTypeRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 1L;\n \n+    public AnyTypeTO get(final String kind) {\n+        AnyTypeTO type = null;\n+\n+        try {\n+            type = getService(AnyTypeService.class).read(kind);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any types\", e);\n+        }\n+\n+        return type;\n+    }\n+\n     public List<AnyTypeTO> getAll() {\n         List<AnyTypeTO> types = null;\n \n@@ -47,11 +65,28 @@ public List<AnyTypeTO> getAll() {\n         return types;\n     }\n \n-    public List<AnyTypeClassTO> getAnyTypeClass(final List<String> anyTypeClassNames) {\n+    public List<AnyTypeClassTO> getAnyTypeClass(final String... anyTypeClassNames) {\n         List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n         for (String anyTypeClass : anyTypeClassNames) {\n             anyTypeClassTOs.add(getService(AnyTypeClassService.class).read(anyTypeClass));\n         }\n         return anyTypeClassTOs;\n     }\n+\n+    public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO) {\n+        Response response = getService(AnyObjectService.class).create(anyObjectTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectPatch anyObjectPatch) {\n+        ProvisioningResult<AnyObjectTO> result;\n+        synchronized (this) {\n+            AnyObjectService service = getService(etag, AnyObjectService.class);\n+            result = service.update(anyObjectPatch).readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+            });\n+            resetClient(AnyObjectService.class);\n+        }\n+        return result;\n+    }\n }"},{"sha":"d1ec74db078e21ab3cb54041ddfa05e9af082b8d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -25,16 +25,14 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;\n \n-    @Autowired\n-    private SchemaRestClient schemaRestClient;\n+    private SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     public List<AttrTO> list() {\n         final List<AttrTO> attrTOs = getService(ConfigurationService.class).list();"},{"sha":"fbf0ab0156c967b87fe8f14af78fd8fd51518ab7","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -19,13 +19,16 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n \n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.service.AnyService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n@@ -85,20 +88,22 @@ public ConnObjectTO readConnObject(final String resourceName, final Long id) {\n         return getService(ResourceService.class).readConnObject(resourceName, AnyTypeKind.GROUP.name(), id);\n     }\n \n-    public GroupTO create(final GroupTO groupTO) {\n+    public ProvisioningResult<GroupTO> create(final GroupTO groupTO) {\n         Response response = getService(GroupService.class).create(groupTO);\n-        return response.readEntity(GroupTO.class);\n+        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        });\n     }\n \n     public GroupTO read(final Long key) {\n         return getService(GroupService.class).read(key);\n     }\n \n-    public GroupTO update(final String etag, final GroupTO updated) {\n-        GroupTO result;\n+    public ProvisioningResult<GroupTO> update(final String etag, final GroupPatch patch) {\n+        ProvisioningResult<GroupTO> result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.update(updated).readEntity(GroupTO.class);\n+            result = service.update(patch).readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+            });\n             resetClient(GroupService.class);\n         }\n         return result;"},{"sha":"ee95e5c2a29d937594d7b15fa50ad78cefcd11cb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":12,"deletions":19,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n import java.util.ListIterator;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -60,26 +59,20 @@ public void filter(\n         }\n     }\n \n-    public List<? extends AbstractSchemaTO> getSchemas(final SchemaType schemaType) {\n-        List<? extends AbstractSchemaTO> schemas = Collections.emptyList();\n+    public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaType, final String... kind) {\n+        List<T> schemas = new ArrayList<>();\n \n         try {\n-            schemas = getService(SchemaService.class).list(schemaType);\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all schemas for {}\", schemaType, e);\n-        }\n-        return schemas;\n-    }\n-\n-    public List<PlainSchemaTO> getSchemas() {\n-        List<PlainSchemaTO> schemas = null;\n-\n-        try {\n-            schemas = getService(SchemaService.class).list(SchemaType.PLAIN);\n+            if (kind == null || kind.length == 0) {\n+                schemas.addAll(getService(SchemaService.class).<T>list(schemaType, null));\n+            } else {\n+                for (String clazz : kind) {\n+                    schemas.addAll(getService(SchemaService.class).<T>list(schemaType, clazz));\n+                }\n+            }\n         } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all schemas\", e);\n+            LOG.error(\"While getting all {} schemas for {}\", schemaType, kind, e);\n         }\n-\n         return schemas;\n     }\n \n@@ -109,7 +102,7 @@ public List<DerSchemaTO> getDerSchemas() {\n         List<DerSchemaTO> userDerSchemas = null;\n \n         try {\n-            userDerSchemas = getService(SchemaService.class).list(SchemaType.DERIVED);\n+            userDerSchemas = getService(SchemaService.class).list(SchemaType.DERIVED, null);\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n@@ -125,7 +118,7 @@ public List<VirSchemaTO> getVirSchemas() {\n         List<VirSchemaTO> userVirSchemas = null;\n \n         try {\n-            userVirSchemas = getService(SchemaService.class).list(SchemaType.VIRTUAL);\n+            userVirSchemas = getService(SchemaService.class).list(SchemaType.VIRTUAL, null);\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all virtual schemas\", e);\n         }"},{"sha":"2f148c413f45cd8a0c7404d46be4aeea655053d4","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n@@ -29,6 +30,7 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n@@ -67,16 +69,18 @@ public List<UserTO> list(final String realm, final int page, final int size, fin\n                 getResult();\n     }\n \n-    public UserTO create(final UserTO userTO, final boolean storePassword) {\n+    public ProvisioningResult<UserTO> create(final UserTO userTO, final boolean storePassword) {\n         Response response = getService(UserService.class).create(userTO, storePassword);\n-        return response.readEntity(UserTO.class);\n+        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        });\n     }\n \n-    public UserTO update(final String etag, final UserPatch userPatch) {\n-        UserTO result;\n+    public ProvisioningResult<UserTO> update(final String etag, final UserPatch userPatch) {\n+        ProvisioningResult<UserTO> result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            result = service.update(userPatch).readEntity(UserTO.class);\n+            result = service.update(userPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+            });\n             resetClient(UserService.class);\n         }\n         return result;"},{"sha":"70491e25779010fa85ee0af2e58541743aaf934c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -36,11 +36,13 @@\n     public ClearIndicatingAjaxLink(final String id, final PageReference pageRef) {\n         super(id);\n         this.pageRef = pageRef;\n+        setOutputMarkupId(true);\n     }\n \n     public ClearIndicatingAjaxLink(final String id, final IModel<T> model, final PageReference pageRef) {\n         super(id, model);\n         this.pageRef = pageRef;\n+        setOutputMarkupId(true);\n     }\n \n     public ClearIndicatingAjaxLink<T> feedbackPanelAutomaticReload(final boolean reloadFeedbackPanel) {"},{"sha":"e030ef7f1c0add2372aff83f5698993eb815b523","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -27,6 +27,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.DefaultModalCloseButton;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.PrimaryModalButton;\n@@ -39,6 +40,7 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n@@ -63,7 +65,7 @@\n \n     private WindowClosedCallback windowClosedCallback;\n \n-    private AbstractModalPanel content;\n+    private Panel content;\n \n     private PrimaryModalButton submitButton;\n \n@@ -127,11 +129,19 @@ public T getFormModel() {\n         return form.getModelObject();\n     }\n \n-    public AbstractModalPanel getContent() {\n-        return content;\n+    public ModalPanel getContent() {\n+        return ModalPanel.class.cast(content);\n     }\n \n-    public BaseModal<T> setContent(final AbstractModalPanel component) {\n+    public BaseModal<T> setContent(final ModalPanel component) {\n+        if (component instanceof Panel) {\n+            return setInternalContent(Panel.class.cast(component));\n+        }\n+        throw new IllegalArgumentException(\"Panel instance is required\");\n+\n+    }\n+\n+    private BaseModal<T> setInternalContent(final Panel component) {\n         if (!component.getId().equals(getContentId())) {\n             throw new WicketRuntimeException(\n                     \"Modal content id is wrong. Component ID:\" + component.getId() + \"; content ID: \" + getContentId());"},{"sha":"fda21bf18c680609dd0a4f80d1929204d8cee92a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -53,6 +53,8 @@ private ActionLinksPanel(final String componentId, final IModel<T> model, final\n         this.model = model;\n         this.pageRef = pageRef;\n \n+        setOutputMarkupId(true);\n+        \n         super.add(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));"},{"sha":"1311980959c728db82993f03f0bafb9cc6971005","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import java.io.ByteArrayInputStream;\n+import java.lang.reflect.InvocationTargetException;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n@@ -61,7 +62,7 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final Fragment emptyFragment;\n \n-    private final PreviewUtils previewUtils = PreviewUtils.getInstance();\n+    private final transient PreviewUtils previewUtils = PreviewUtils.getInstance();\n \n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n         super(id, model);\n@@ -135,7 +136,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                         uploadForm.addOrReplace(fileUpload);\n                         downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n                         target.add(uploadForm);\n-                    } catch (Exception e) {\n+                    } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n                         LOG.error(\"While saving uploaded file\", e);\n@@ -198,7 +199,7 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n             if (panelPreview != null) {\n                 changePreviewer(panelPreview);\n             }\n-        } catch (Exception e) {\n+        } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n             LOG.error(\"While loading saved file\", e);\n         }\n         downloadLink.setEnabled(StringUtils.isNotBlank(model.getObject()));"},{"sha":"3d923c6f36cdb42563a16eb2b3cbf6a8d9ce9f3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -67,8 +67,8 @@ public SpinnerFieldPanel(\n     }\n \n     private void init(final String name, final Class<T> reference, final IModel<T> model, final SpinnerConfig conf) {\n-        final Spinner<T> spinner = new Spinner<>(\"spinner\", model, conf);\n-        add(spinner);\n+        field = new Spinner<>(\"spinner\", model, conf);\n+        add(field);\n \n         this.name = name;\n         this.model = model;"},{"sha":"1a1cdc5b49d1a366359b482a7f93b43441428d98","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":35,"deletions":7,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -16,20 +16,26 @@\n package org.apache.syncope.client.console.wizards;\n \n import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.wizard.Wizard;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.request.cycle.RequestCycle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n-public abstract class AjaxWizard<T extends Serializable> extends Wizard {\n+public abstract class AjaxWizard<T extends Serializable> extends Wizard implements ModalPanel {\n \n     private static final long serialVersionUID = 1L;\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(AjaxWizard.class);\n+\n     private final PageReference pageRef;\n \n     private T item;\n@@ -87,19 +93,31 @@ public NotificationPanel getFeedbackPanel() {\n      */\n     @Override\n     public final void onCancel() {\n-        onCancelInternal();\n-        send(pageRef.getPage(), Broadcast.DEPTH,\n-                new NewItemCancelEvent<T>(item, RequestCycle.get().find(AjaxRequestTarget.class)));\n+        final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n+        try {\n+            onCancelInternal();\n+            send(pageRef.getPage(), Broadcast.DEPTH, new NewItemCancelEvent<T>(item, target));\n+        } catch (Exception e) {\n+            LOG.warn(\"Wizard error on cancel\", e);\n+            error(getString(\"wizard.cancel.error\"));\n+            feedbackPanel.refresh(target);\n+        }\n     }\n \n     /**\n      * @see org.apache.wicket.extensions.wizard.Wizard#onFinish()\n      */\n     @Override\n     public final void onFinish() {\n-        onApplyInternal();\n-        send(pageRef.getPage(), Broadcast.DEPTH,\n-                new NewItemFinishEvent<T>(item, RequestCycle.get().find(AjaxRequestTarget.class)));\n+        final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n+        try {\n+            onApplyInternal();\n+            send(pageRef.getPage(), Broadcast.DEPTH, new NewItemFinishEvent<T>(item, target));\n+        } catch (Exception e) {\n+            LOG.warn(\"Wizard error on finish\", e);\n+            error(getString(\"wizard.apply.error\"));\n+            feedbackPanel.refresh(target);\n+        }\n     }\n \n     public T getItem() {\n@@ -171,4 +189,14 @@ public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n         }\n \n     }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        onApplyInternal();\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        feedbackPanel.refresh(target);\n+    }\n }"},{"sha":"7c778e71ffff300d8b53cccbcf2a0ba716b27583","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -28,7 +28,7 @@\n \n     private final PageReference pageRef;\n \n-    private final T defaultItem;\n+    private T defaultItem;\n \n     private T item;\n \n@@ -55,42 +55,47 @@ public AjaxWizard<T> build(final int index) {\n \n     public AjaxWizard<T> build(final boolean edit) {\n         final T modelObject = getItem();\n-        setItem(null);\n+        this.item = null;\n \n         return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), pageRef, edit) {\n \n             private static final long serialVersionUID = 1L;\n \n             @Override\n             protected void onCancelInternal() {\n-                AjaxWizardBuilder.this.onCancelInternal();\n+                AjaxWizardBuilder.this.onCancelInternal(getItem());\n             }\n \n             @Override\n             protected void onApplyInternal() {\n-                AjaxWizardBuilder.this.onApplyInternal();\n+                AjaxWizardBuilder.this.onApplyInternal(getItem());\n             }\n         };\n     }\n \n     protected abstract WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel);\n \n-    protected abstract void onCancelInternal();\n+    protected abstract void onCancelInternal(T modelObject);\n \n-    protected abstract void onApplyInternal();\n+    protected abstract void onApplyInternal(T modelObject);\n+\n+    protected T getDefaultItem() {\n+        return defaultItem;\n+    }\n \n     private T getItem() {\n         return item == null ? SerializationUtils.clone(defaultItem) : item;\n     }\n \n     /**\n-     * Replaces the default value provided with the constructor.\n+     * Replaces the default value provided with the constructor and nullify working item object.\n      *\n      * @param item new value.\n      * @return the current wizard factory instance.\n      */\n     public AjaxWizardBuilder<T> setItem(final T item) {\n-        this.item = item;\n+        this.defaultItem = item;\n+        this.item = null;\n         return this;\n     }\n }"},{"sha":"7ceb2fd31f811dac8cdb163a755fb74ae950a373","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -71,6 +71,7 @@ public final boolean isEnabled() {\n             @Override\n             protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n                 getWizardModel().previous();\n+                wizard.modelChanged();\n                 target.add(wizard);\n             }\n "},{"sha":"1e020252080a963242cbf9425aef98e16db45265","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"added","additions":216,"deletions":0,"changes":216,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,216 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.event.IEventSource;\n+import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class WizardMgtPanel<T extends Serializable> extends Panel implements IEventSource {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final Fragment initialFragment;\n+\n+    private final AjaxLink<?> addAjaxLink;\n+\n+    private AjaxWizardBuilder<T> newItemPanelBuilder;\n+\n+    private NotificationPanel notificationPanel;\n+\n+    private final PageReference pageRef;\n+\n+    /**\n+     * Modal window.\n+     */\n+    protected final BaseModal<T> modal = new BaseModal<T>(\"modal\") {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        @Override\n+        protected void onConfigure() {\n+            super.onConfigure();\n+            setFooterVisible(false);\n+        }\n+\n+    };\n+\n+    private final boolean wizardInModal;\n+\n+    public WizardMgtPanel(final String id, final PageReference pageRef) {\n+        this(id, pageRef, false);\n+    }\n+\n+    public WizardMgtPanel(final String id, final PageReference pageRef, final boolean wizardInModal) {\n+        super(id);\n+        setOutputMarkupId(true);\n+        this.pageRef = pageRef;\n+        this.wizardInModal = wizardInModal;\n+\n+        add(modal);\n+\n+        container = new TransparentWebMarkupContainer(\"container\");\n+        container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n+        add(container);\n+\n+        initialFragment = new Fragment(\"content\", \"default\", this);\n+        container.addOrReplace(initialFragment);\n+\n+        addAjaxLink = new AjaxLink<T>(\"add\") {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                send(WizardMgtPanel.this, Broadcast.BREADTH, new AjaxWizard.NewItemActionEvent<T>(null, target));\n+            }\n+        };\n+\n+        addAjaxLink.setEnabled(false);\n+        addAjaxLink.setVisible(false);\n+        initialFragment.add(addAjaxLink);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+            final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n+\n+            final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n+\n+            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n+                if (item != null) {\n+                    newItemPanelBuilder.setItem(item);\n+                }\n+\n+                final AjaxWizard<T> wizard = newItemPanelBuilder.build(\n+                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex());\n+\n+                if (wizardInModal) {\n+                    final IModel<T> model = new CompoundPropertyModel<>(item);\n+                    modal.setFormModel(model);\n+\n+                    target.add(modal.setContent(wizard));\n+\n+                    modal.header(new ResourceModel(\"item.new\", \"New item\"));\n+                    modal.show(true);\n+                } else {\n+                    final Fragment fragment = new Fragment(\"content\", \"wizard\", WizardMgtPanel.this);\n+                    fragment.add(wizard);\n+                    container.addOrReplace(fragment);\n+                }\n+            } else {\n+                if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                    if (notificationPanel != null) {\n+                        getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n+                        notificationPanel.refresh(target);\n+                    }\n+                }\n+\n+                if (wizardInModal) {\n+                    modal.show(false);\n+                    modal.close(target);\n+                } else {\n+                    container.addOrReplace(initialFragment);\n+                }\n+            }\n+\n+            target.add(container);\n+        }\n+        super.onEvent(event);\n+    }\n+\n+    private WizardMgtPanel<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+        this.newItemPanelBuilder = panelBuilder;\n+\n+        if (this.newItemPanelBuilder != null) {\n+            addAjaxLink.setEnabled(true);\n+            addAjaxLink.setVisible(true);\n+        }\n+\n+        return this;\n+    }\n+\n+    private WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n+        this.notificationPanel = notificationPanel;\n+        return this;\n+    }\n+\n+    /**\n+     * PanelInWizard abstract builder.\n+     *\n+     * @param <T> list item reference type.\n+     */\n+    public abstract static class Builder<T extends Serializable> implements Serializable {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        protected final PageReference pageRef;\n+\n+        protected final Class<T> reference;\n+\n+        private AjaxWizardBuilder<T> newItemPanelBuilder;\n+\n+        private NotificationPanel notificationPanel;\n+\n+        protected Builder(final Class<T> reference, final PageReference pageRef) {\n+            this.pageRef = pageRef;\n+            this.reference = reference;\n+        }\n+\n+        protected abstract WizardMgtPanel<T> newInstance(final String id);\n+\n+        /**\n+         * Builds a list view.\n+         *\n+         * @param id component id.\n+         * @return List view.\n+         */\n+        public WizardMgtPanel<T> build(final String id) {\n+            return newInstance(id).addNewItemPanelBuilder(newItemPanelBuilder).addNotificationPanel(notificationPanel);\n+        }\n+\n+        public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+            this.newItemPanelBuilder = panelBuilder;\n+            return this;\n+        }\n+\n+        public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n+            this.notificationPanel = notificationPanel;\n+            return this;\n+        }\n+    }\n+}"},{"sha":"62707cc854eda006f4c7a7614c4cce0f5b059e0e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,143 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class AnyObjectWizardBuilder extends AjaxWizardBuilder<AnyTO> implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final AnyTO anyTO;\n+\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        @Override\n+        protected List<String> load() {\n+            final List<String> currentlyAdded = new ArrayList<>();\n+            return currentlyAdded;\n+        }\n+    };\n+\n+    /**\n+     * The object type specification step.\n+     */\n+    private final class ObjectType extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        ObjectType(final AnyTO item) {\n+            super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<AnyTO>(item));\n+\n+            add(new AjaxDropDownChoicePanel<String>(\"type\", \"type\", new PropertyModel<String>(item, \"anyType\"), false).\n+                    setChoices(anyTypes).\n+                    setStyleSheet(\"form-control\").\n+                    setRequired(true));\n+\n+            add(new TextField<String>(\n+                    \"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n+        }\n+    }\n+\n+    /**\n+     * Mapping definition step.\n+     */\n+    private final class Mapping extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        Mapping(final AnyTO item) {\n+            setTitleModel(new ResourceModel(\"mapping.title\", \"Mapping\"));\n+            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<AnyTO>(item)));\n+        }\n+    }\n+\n+    /**\n+     * AccountLink specification step.\n+     */\n+    private final class ConnObjectLink extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        ConnObjectLink(final AnyTO item) {\n+            super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n+\n+            final WebMarkupContainer connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n+            connObjectLinkContainer.setOutputMarkupId(true);\n+            add(connObjectLinkContainer);\n+        }\n+    }\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param anyTO external resource to be updated.\n+     * @param pageRef Caller page reference.\n+     */\n+    public AnyObjectWizardBuilder(final String id, final AnyTO anyTO, final PageReference pageRef) {\n+        super(id, new AnyObjectTO(), pageRef);\n+        this.anyTO = anyTO;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final AnyTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new ObjectType(modelObject));\n+        wizardModel.add(new Mapping(modelObject));\n+        wizardModel.add(new ConnObjectLink(modelObject));\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected void onCancelInternal(final AnyTO modelObject) {\n+        // d nothing\n+    }\n+\n+    @Override\n+    protected void onApplyInternal(final AnyTO modelObject) {\n+        // do nothing\n+    }\n+}"},{"sha":"c46f135d175c27293211ff2047285c148ad7bdde","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"added","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Mode;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+public class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<T> implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    protected final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n+    protected final List<String> anyTypeClasses;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param anyTO any\n+     * @param anyTypeClasses\n+     * @param pageRef Caller page reference.\n+     */\n+    public AnyWizardBuilder(\n+            final String id, final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+        super(id, anyTO, pageRef);\n+        this.anyTypeClasses = anyTypeClasses;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new PlainAttrs(modelObject, null, Mode.ADMIN, anyTypeClasses.toArray(new String[] {})));\n+        wizardModel.add(new DerAttrs(modelObject, anyTypeClasses.toArray(new String[] {})));\n+        wizardModel.add(new VirAttrs(modelObject, anyTypeClasses.toArray(new String[] {})));\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected void onCancelInternal(final T modelObject) {\n+        // do nothing\n+    }\n+\n+    @Override\n+    protected void onApplyInternal(final T modelObject) {\n+        if (!(modelObject instanceof AnyObjectTO)) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        final ProvisioningResult<AnyObjectTO> actual;\n+\n+        if (modelObject.getKey() == 0) {\n+            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(modelObject));\n+        } else {\n+            final AnyObjectPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+\n+            // update user just if it is changed\n+            if (!patch.isEmpty()) {\n+                actual = anyTypeRestClient.update(getDefaultItem().getETagValue(), patch);\n+            }\n+        }\n+    }\n+}"},{"sha":"42af808a11e96c6be2828753f8c46a25880e9377","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"added","additions":137,"deletions":0,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class DerAttrs extends WizardStep {\n+\n+    private static final long serialVersionUID = -5387344116983102292L;\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass) {\n+\n+        setOutputMarkupId(true);\n+\n+        final IModel<List<String>> derSchemas = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                List<DerSchemaTO> derSchemaNames = schemaRestClient.getSchemas(SchemaType.DERIVED, anyTypeClass);\n+\n+                return new ArrayList<>(CollectionUtils.collect(derSchemaNames, new Transformer<DerSchemaTO, String>() {\n+\n+                    @Override\n+                    public String transform(final DerSchemaTO input) {\n+                        return input.getKey();\n+                    }\n+                }));\n+            }\n+        };\n+\n+        final Map<String, AttrTO> derAttrMap = entityTO.getDerAttrMap();\n+        CollectionUtils.collect(derSchemas.getObject(), new Transformer<String, AttrTO>() {\n+\n+            @Override\n+            public AttrTO transform(final String input) {\n+                AttrTO attrTO = derAttrMap.get(input);\n+                if (attrTO == null) {\n+                    attrTO = new AttrTO();\n+                    attrTO.setSchema(input);\n+                }\n+                return attrTO;\n+            }\n+        }, entityTO.getDerAttrs());\n+\n+        final Fragment fragment;\n+        if (entityTO.getDerAttrs().isEmpty()) {\n+            // show empty list message\n+            fragment = new Fragment(\"content\", \"empty\", this);\n+        } else {\n+            fragment = new Fragment(\"content\", \"attributes\", this);\n+\n+            final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"derAttrContainer\");\n+            attributesContainer.setOutputMarkupId(true);\n+            fragment.add(attributesContainer);\n+\n+            ListView<AttrTO> attributes = new ListView<AttrTO>(\"attrs\",\n+                    new PropertyModel<List<AttrTO>>(entityTO, \"derAttrs\") {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        @Override\n+                        public List<AttrTO> getObject() {\n+                            return new ArrayList<>(entityTO.getDerAttrs());\n+                        }\n+\n+                    }) {\n+\n+                        private static final long serialVersionUID = 9101744072914090143L;\n+\n+                        @Override\n+                        protected void populateItem(final ListItem<AttrTO> item) {\n+                            final AttrTO attrTO = item.getModelObject();\n+\n+                            final IModel<String> model;\n+                            final List<String> values = attrTO.getValues();\n+                            if (values == null || values.isEmpty()) {\n+                                model = new ResourceModel(\"derived.emptyvalue.message\", StringUtils.EMPTY);\n+                            } else {\n+                                model = new Model<String>(values.get(0));\n+                            }\n+\n+                            final AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), model);\n+\n+                            panel.setEnabled(false);\n+                            panel.setRequired(true);\n+                            panel.setOutputMarkupId(true);\n+                            item.add(panel);\n+\n+                        }\n+                    };\n+            attributesContainer.add(attributes);\n+        }\n+\n+        add(fragment);\n+    }\n+}"},{"sha":"63ff592b0d6f88b0d14f0c386b62524c84963324","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"added","additions":293,"deletions":0,"changes":293,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,293 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupDetails extends WizardStep {\n+\n+    private static final long serialVersionUID = 855618618337931784L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(GroupDetails.class);\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    private final WebMarkupContainer ownerContainer;\n+\n+    private final OwnerModel userOwnerModel;\n+\n+    private final OwnerModel groupOwnerModel;\n+\n+    public GroupDetails(final GroupTO groupTO, final boolean templateMode) {\n+        ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n+        ownerContainer.setOutputMarkupId(true);\n+        this.add(ownerContainer);\n+\n+        final ModalWindow userOwnerSelectWin = new ModalWindow(\"userOwnerSelectWin\");\n+        userOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        userOwnerSelectWin.setCookieName(\"create-userOwnerSelect-modal\");\n+        this.add(userOwnerSelectWin);\n+        final ModalWindow groupOwnerSelectWin = new ModalWindow(\"groupOwnerSelectWin\");\n+        groupOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        groupOwnerSelectWin.setCookieName(\"create-groupOwnerSelect-modal\");\n+        this.add(groupOwnerSelectWin);\n+\n+        final AjaxTextFieldPanel name\n+                = new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(groupTO, \"name\"));\n+\n+        final WebMarkupContainer jexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"jexlHelp\");\n+\n+        final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtils.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n+        this.add(questionMarkJexlHelp);\n+        questionMarkJexlHelp.add(jexlHelp);\n+\n+        if (!templateMode) {\n+            name.addRequiredLabel();\n+            questionMarkJexlHelp.setVisible(false);\n+        }\n+        this.add(name);\n+\n+        userOwnerModel = new OwnerModel(groupTO, AnyTypeKind.USER);\n+        @SuppressWarnings(\"unchecked\")\n+        final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", userOwnerModel);\n+        userOwner.setReadOnly(true);\n+        userOwner.setOutputMarkupId(true);\n+        ownerContainer.add(userOwner);\n+        final AjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+//                        return new UserOwnerSelectModalPage(getPage().getPageReference(), userOwnerSelectWin);\n+                        return null;\n+                    }\n+                });\n+                userOwnerSelectWin.show(target);\n+            }\n+        };\n+        ownerContainer.add(userOwnerSelect.setEnabled(false));\n+        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                userOwnerModel.setObject(null);\n+                target.add(userOwner);\n+            }\n+        };\n+        ownerContainer.add(userOwnerReset.setEnabled(false));\n+\n+        groupOwnerModel = new OwnerModel(groupTO, AnyTypeKind.GROUP);\n+        @SuppressWarnings(\"unchecked\")\n+        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", groupOwnerModel);\n+        groupOwner.setReadOnly(true);\n+        groupOwner.setOutputMarkupId(true);\n+        ownerContainer.add(groupOwner);\n+        final AjaxLink<Void> groupOwnerSelect = new IndicatingAjaxLink<Void>(\"groupOwnerSelect\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+//                        return new GroupSelectModalPage(getPage().getPageReference(), userOwnerSelectWin,\n+//                                GroupOwnerSelectPayload.class);\n+                        return null;\n+                    }\n+                });\n+                userOwnerSelectWin.show(target);\n+            }\n+        };\n+        ownerContainer.add(groupOwnerSelect.setEnabled(false));\n+        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                groupOwnerModel.setObject(null);\n+                target.add(groupOwner);\n+            }\n+        };\n+        ownerContainer.add(groupOwnerReset.setEnabled(false));\n+    }\n+\n+    /**\n+     * This is waiting for events from opened modal windows: first to get the selected user / group, then to update the\n+     * respective text panel.\n+     *\n+     * {@inheritDoc }\n+     *\n+     * @param event\n+     */\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+\n+        if (event.getPayload() instanceof UserOwnerSelectPayload) {\n+            userOwnerModel.setObject(((UserOwnerSelectPayload) event.getPayload()).getUserId());\n+        }\n+        if (event.getPayload() instanceof GroupOwnerSelectPayload) {\n+            groupOwnerModel.setObject(((GroupOwnerSelectPayload) event.getPayload()).getGroupId());\n+        }\n+\n+        if (event.getPayload() instanceof AjaxRequestTarget) {\n+            ((AjaxRequestTarget) event.getPayload()).add(ownerContainer);\n+        }\n+    }\n+\n+    private class OwnerModel implements IModel {\n+\n+        private static final long serialVersionUID = -3865621970810102714L;\n+\n+        private final GroupTO groupTO;\n+\n+        private final AnyTypeKind type;\n+\n+        OwnerModel(final GroupTO groupTO, final AnyTypeKind type) {\n+            this.groupTO = groupTO;\n+            this.type = type;\n+        }\n+\n+        @Override\n+        public Object getObject() {\n+            String object = null;\n+\n+            switch (type) {\n+                case USER:\n+                    if (groupTO.getUserOwner() != null) {\n+                        UserTO user = null;\n+                        try {\n+                            user = userRestClient.read(groupTO.getUserOwner());\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Could not find user with id {}, ignoring\", groupTO.getUserOwner(), e);\n+                        }\n+                        if (user == null) {\n+                            groupTO.setUserOwner(null);\n+                        } else {\n+                            object = user.getKey() + \" \" + user.getUsername();\n+                        }\n+                    }\n+                    break;\n+\n+                case GROUP:\n+                    GroupTO group = null;\n+                    if (groupTO.getGroupOwner() != null) {\n+                        try {\n+                            group = groupRestClient.read(groupTO.getGroupOwner());\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getGroupOwner(), e);\n+                        }\n+                        if (group == null) {\n+                            groupTO.setGroupOwner(null);\n+                        } else {\n+                            object = group.getDisplayName();\n+                        }\n+                    }\n+                    break;\n+\n+                default:\n+            }\n+\n+            return object;\n+        }\n+\n+        @Override\n+        public void setObject(final Object object) {\n+            switch (type) {\n+                case USER:\n+                    groupTO.setUserOwner((Long) object);\n+                    break;\n+\n+                case GROUP:\n+                    groupTO.setGroupOwner((Long) object);\n+                    break;\n+\n+                default:\n+            }\n+        }\n+\n+        @Override\n+        public void detach() {\n+            // ignore\n+        }\n+    }\n+\n+    public static class UserOwnerSelectPayload {\n+\n+        private final Long userId;\n+\n+        public UserOwnerSelectPayload(final Long userId) {\n+            this.userId = userId;\n+        }\n+\n+        public Long getUserId() {\n+            return userId;\n+        }\n+    }\n+\n+    public static class GroupOwnerSelectPayload {\n+\n+        private final Long groupId;\n+\n+        public GroupOwnerSelectPayload(final Long groupId) {\n+            this.groupId = groupId;\n+        }\n+\n+        public Long getGroupId() {\n+            return groupId;\n+        }\n+    }\n+}"},{"sha":"9ae93326ab7ec4b75362dbf9f2b480916a4761bd","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.patch.GroupPatch;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param groupTO any\n+     * @param anyTypeClasses\n+     * @param pageRef Caller page reference.\n+     */\n+    public GroupWizardBuilder(\n+            final String id, final GroupTO groupTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+        super(id, groupTO, anyTypeClasses, pageRef);\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final GroupTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new GroupDetails(modelObject, false));\n+        return super.buildModelSteps(modelObject, wizardModel);\n+    }\n+\n+    @Override\n+    protected void onApplyInternal(final GroupTO modelObject) {\n+        final ProvisioningResult<GroupTO> actual;\n+\n+        if (modelObject.getKey() == 0) {\n+            actual = groupRestClient.create(modelObject);\n+        } else {\n+            final GroupPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+\n+            // update user just if it is changed\n+            if (!patch.isEmpty()) {\n+                actual = groupRestClient.update(getDefaultItem().getETagValue(), patch);\n+            }\n+        }\n+    }\n+}"},{"sha":"450185694709846b28cf4feb8cbd5d99603476d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"added","additions":339,"deletions":0,"changes":339,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,339 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.commons.Mode;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class PlainAttrs extends WizardStep {\n+\n+    private static final long serialVersionUID = 552437609667518888L;\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final AnyTO entityTO;\n+\n+    private final Mode mode;\n+\n+    private Map<String, PlainSchemaTO> schemas = new LinkedHashMap<>();\n+\n+    private final String[] anyTypeClass;\n+\n+    public <T extends AnyTO> PlainAttrs(final T entityTO, final Form<?> form, final Mode mode,\n+            final String... anyTypeClass) {\n+        this.setOutputMarkupId(true);\n+\n+        this.entityTO = entityTO;\n+        this.mode = mode;\n+        this.anyTypeClass = anyTypeClass;\n+\n+        setSchemas();\n+        setAttrs();\n+\n+        add(new ListView<AttrTO>(\"schemas\", new PropertyModel<List<AttrTO>>(entityTO, \"plainAttrs\") {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            public List<AttrTO> getObject() {\n+                return new ArrayList<>(super.getObject());\n+            }\n+\n+        }) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            protected void populateItem(final ListItem<AttrTO> item) {\n+                final AttrTO attributeTO = (AttrTO) item.getDefaultModelObject();\n+\n+                final WebMarkupContainer jexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"jexlHelp\");\n+\n+                final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtils.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n+                item.add(questionMarkJexlHelp);\n+                questionMarkJexlHelp.add(jexlHelp);\n+\n+                if (mode != Mode.TEMPLATE) {\n+                    questionMarkJexlHelp.setVisible(false);\n+                }\n+\n+                final FieldPanel panel = getFieldPanel(schemas.get(attributeTO.getSchema()), form, attributeTO);\n+\n+                if (mode == Mode.TEMPLATE || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n+                    item.add(panel);\n+                } else {\n+                    item.add(new MultiFieldPanel<String>(\n+                            \"panel\", attributeTO.getSchema(), new PropertyModel<List<String>>(attributeTO, \"values\"),\n+                            panel));\n+                }\n+            }\n+        }\n+        );\n+    }\n+\n+    private void setSchemas() {\n+\n+        AttrTO attrLayout = null;\n+        final List<PlainSchemaTO> schemaTOs = schemaRestClient.getSchemas(SchemaType.PLAIN, anyTypeClass);\n+\n+        schemas.clear();\n+\n+        if (attrLayout != null && mode != Mode.TEMPLATE) {\n+            // 1. remove attributes not selected for display\n+            schemaRestClient.filter(schemaTOs, attrLayout.getValues(), true);\n+            // 2. sort remainig attributes according to configuration, e.g. attrLayout\n+            final Map<String, Integer> attrLayoutMap = new HashMap<>(attrLayout.getValues().size());\n+            for (int i = 0; i < attrLayout.getValues().size(); i++) {\n+                attrLayoutMap.put(attrLayout.getValues().get(i), i);\n+            }\n+            Collections.sort(schemaTOs, new Comparator<PlainSchemaTO>() {\n+\n+                @Override\n+                public int compare(final PlainSchemaTO schema1, final PlainSchemaTO schema2) {\n+                    int value = 0;\n+\n+                    if (attrLayoutMap.get(schema1.getKey()) > attrLayoutMap.get(schema2.getKey())) {\n+                        value = 1;\n+                    } else if (attrLayoutMap.get(schema1.getKey()) < attrLayoutMap.get(schema2.getKey())) {\n+                        value = -1;\n+                    }\n+\n+                    return value;\n+                }\n+            });\n+        }\n+        for (PlainSchemaTO schemaTO : schemaTOs) {\n+            schemas.put(schemaTO.getKey(), schemaTO);\n+        }\n+    }\n+\n+    private void setAttrs() {\n+        final List<AttrTO> entityData = new ArrayList<>();\n+\n+        final Map<String, AttrTO> attrMap = entityTO.getPlainAttrMap();\n+\n+        for (PlainSchemaTO schema : schemas.values()) {\n+            final AttrTO attributeTO = new AttrTO();\n+            attributeTO.setSchema(schema.getKey());\n+\n+            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                attributeTO.getValues().add(\"\");\n+\n+                // is important to set readonly only after values setting\n+                attributeTO.setReadonly(schema.isReadonly());\n+            } else {\n+                attributeTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            }\n+            entityData.add(attributeTO);\n+        }\n+\n+        entityTO.getPlainAttrs().clear();\n+        entityTO.getPlainAttrs().addAll(entityData);\n+    }\n+\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO, final Form form, final AttrTO attributeTO) {\n+        final boolean required = mode == Mode.TEMPLATE\n+                ? false\n+                : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+\n+        final boolean readOnly = mode == Mode.TEMPLATE ? false : schemaTO.isReadonly();\n+\n+        final AttrSchemaType type = mode == Mode.TEMPLATE ? AttrSchemaType.String : schemaTO.getType();\n+\n+        final FieldPanel panel;\n+        switch (type) {\n+            case Boolean:\n+                panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<Boolean>(), false);\n+                panel.setRequired(required);\n+                break;\n+\n+//            case Date:\n+//                final String dataPattern = schemaTO.getConversionPattern() == null\n+//                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+//                        : schemaTO.getConversionPattern();\n+//\n+//                if (dataPattern.contains(\"H\")) {\n+//                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+//\n+//                    if (required) {\n+//                        panel.addRequiredLabel();\n+//                        ((DateTimeFieldPanel) panel).setFormValidator(form);\n+//                    }\n+//                    panel.setStyleSheet(\"ui-widget-content ui-corner-all\");\n+//                } else {\n+//                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+//\n+//                    if (required) {\n+//                        panel.addRequiredLabel();\n+//                    }\n+//                }\n+//                break;\n+            case Enum:\n+                panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getKey(), new Model<String>());\n+                ((AjaxDropDownChoicePanel<String>) panel).setChoices(getEnumeratedValues(schemaTO));\n+\n+                if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        private static final long serialVersionUID = -3724971416312135885L;\n+\n+                        private final Map<String, String> valueMap = getEnumeratedKeyValues(schemaTO);\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return valueMap.get(value) == null ? value : valueMap.get(value);\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, final int i) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getObject(\n+                                final String id, final IModel<? extends List<? extends String>> choices) {\n+                            return id;\n+                        }\n+                    });\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Long:\n+                panel = new SpinnerFieldPanel<Long>(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Double:\n+                panel = new SpinnerFieldPanel<Double>(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Binary:\n+                panel = new BinaryFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(),\n+                        schemas.containsKey(schemaTO.getKey())\n+                                ? schemas.get(schemaTO.getKey()).getMimeType()\n+                                : null);\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            default:\n+                panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+        }\n+\n+        panel.setReadOnly(readOnly);\n+        panel.setNewModel(attributeTO.getValues());\n+\n+        return panel;\n+    }\n+\n+    private Map<String, String> getEnumeratedKeyValues(final PlainSchemaTO schemaTO) {\n+        final Map<String, String> res = new HashMap<>();\n+\n+        final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n+                ? new String[0]\n+                : schemaTO.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+\n+        final String[] keys = StringUtils.isBlank(schemaTO.getEnumerationKeys())\n+                ? new String[0]\n+                : schemaTO.getEnumerationKeys().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+\n+        for (int i = 0; i < values.length; i++) {\n+            res.put(values[i].trim(), keys.length > i ? keys[i].trim() : null);\n+        }\n+\n+        return res;\n+    }\n+\n+    private List<String> getEnumeratedValues(final PlainSchemaTO schemaTO) {\n+        final List<String> res = new ArrayList<>();\n+\n+        final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n+                ? new String[0]\n+                : schemaTO.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+\n+        for (String value : values) {\n+            res.add(value.trim());\n+        }\n+\n+        return res;\n+    }\n+\n+//    @Override\n+//    public void onEvent(final IEvent<?> event) {\n+//        if ((event.getPayload() instanceof GroupAttrTemplatesChange)) {\n+//            final GroupAttrTemplatesChange update = (GroupAttrTemplatesChange) event.getPayload();\n+//            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.gPlainAttrTemplates) {\n+//                setSchemas();\n+//                setAttrs();\n+//                update.getTarget().add(this);\n+//            }\n+//        }\n+//    }\n+}"},{"sha":"5918fd0b50681d7c513a0cdb4dce83bfe4fddadb","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.form.validation.EqualPasswordInputValidator;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class UserDetails extends WizardStep {\n+\n+    private static final long serialVersionUID = 6592027822510220463L;\n+\n+    public UserDetails(final UserTO userTO, final boolean resetPassword, final boolean templateMode) {\n+        // ------------------------\n+        // Username\n+        // ------------------------\n+        final FieldPanel<String> username = new AjaxTextFieldPanel(\"username\", \"username\",\n+                new PropertyModel<String>(userTO, \"username\"));\n+\n+        final WebMarkupContainer jexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"usernameJexlHelp\");\n+\n+        final AjaxLink<?> questionMarkJexlHelp = JexlHelpUtils.getAjaxLink(jexlHelp, \"usernameQuestionMarkJexlHelp\");\n+        add(questionMarkJexlHelp);\n+        questionMarkJexlHelp.add(jexlHelp);\n+\n+        if (!templateMode) {\n+            username.addRequiredLabel();\n+            questionMarkJexlHelp.setVisible(false);\n+        }\n+        add(username);\n+        // ------------------------\n+\n+        // ------------------------\n+        // Password\n+        // ------------------------\n+        final Form<?> form = new Form<>(\"passwordInnerForm\");\n+        add(form);\n+        \n+        final WebMarkupContainer pwdJexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"pwdJexlHelp\");\n+\n+        final AjaxLink<?> pwdQuestionMarkJexlHelp = JexlHelpUtils.getAjaxLink(pwdJexlHelp, \"pwdQuestionMarkJexlHelp\");\n+        form.add(pwdQuestionMarkJexlHelp);\n+        pwdQuestionMarkJexlHelp.add(pwdJexlHelp);\n+\n+        FieldPanel<String> passwordField\n+                = new AjaxPasswordFieldPanel(\"password\", \"password\", new PropertyModel<String>(userTO, \"password\"));\n+        passwordField.setRequired(true);\n+        passwordField.setMarkupId(\"password\");\n+        passwordField.setPlaceholder(\"password\");\n+        ((PasswordTextField) passwordField.getField()).setResetPassword(true);\n+        form.add(passwordField);\n+\n+        FieldPanel<String> confirmPasswordField\n+                = new AjaxPasswordFieldPanel(\"confirmPassword\", \"confirmPassword\", new Model<String>());\n+        confirmPasswordField.setRequired(true);\n+        confirmPasswordField.setMarkupId(\"confirmPassword\");\n+        confirmPasswordField.setPlaceholder(\"confirmPassword\");\n+        ((PasswordTextField) confirmPasswordField.getField()).setResetPassword(true);\n+        form.add(confirmPasswordField);\n+\n+        form.add(new EqualPasswordInputValidator(passwordField.getField(), confirmPasswordField.getField()));\n+\n+        if (templateMode) {\n+            confirmPasswordField.setEnabled(false);\n+            confirmPasswordField.setVisible(false);\n+        } else {\n+            pwdQuestionMarkJexlHelp.setVisible(false);\n+\n+            ((PasswordTextField) passwordField.getField()).setResetPassword(resetPassword);\n+\n+            if (!resetPassword) {\n+                confirmPasswordField.getField().setModelObject(userTO.getPassword());\n+            }\n+            ((PasswordTextField) confirmPasswordField.getField()).setResetPassword(resetPassword);\n+        }\n+        // ------------------------\n+    }\n+}"},{"sha":"21d990fadc201a627cafb0ae4837a15259cd2ce0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.Model;\n+\n+public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param userTO any\n+     * @param anyTypeClasses\n+     * @param pageRef Caller page reference.\n+     */\n+    public UserWizardBuilder(\n+            final String id, final UserTO userTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+        super(id, userTO, anyTypeClasses, pageRef);\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final UserTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new UserDetails(modelObject, false, false));\n+        return super.buildModelSteps(modelObject, wizardModel);\n+    }\n+\n+    @Override\n+    protected void onApplyInternal(final UserTO modelObject) {\n+        Model<Boolean> storePassword = new Model<>(true);\n+\n+        final ProvisioningResult<UserTO> actual;\n+\n+        if (modelObject.getKey() == 0) {\n+            actual = userRestClient.create(modelObject, storePassword.getObject());\n+        } else {\n+            final UserPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+\n+//            if (statusPanel != null) {\n+//                patch.setPwdPropRequest(statusPanel.getStatusMod());\n+//            }\n+            // update user just if it is changed\n+            if (!patch.isEmpty()) {\n+                actual = userRestClient.update(getDefaultItem().getETagValue(), patch);\n+            }\n+        }\n+    }\n+}"},{"sha":"3bfcc1751a3817cd59ad78bf2c1823c7e2f436f8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"added","additions":141,"deletions":0,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class VirAttrs extends WizardStep {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    private SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final Map<String, VirSchemaTO> schemas = new TreeMap<String, VirSchemaTO>();\n+\n+    public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass) {\n+        this.setOutputMarkupId(true);\n+\n+        final IModel<List<String>> virSchemas = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                List<VirSchemaTO> schemaTOs = schemaRestClient.getSchemas(SchemaType.VIRTUAL, anyTypeClass);\n+\n+                schemas.clear();\n+\n+                for (VirSchemaTO schemaTO : schemaTOs) {\n+                    schemas.put(schemaTO.getKey(), schemaTO);\n+                }\n+\n+                return new ArrayList<>(schemas.keySet());\n+            }\n+        };\n+\n+        final Map<String, AttrTO> virAttrMap = entityTO.getVirAttrMap();\n+        CollectionUtils.collect(virSchemas.getObject(), new Transformer<String, AttrTO>() {\n+\n+            @Override\n+            public AttrTO transform(final String input) {\n+                AttrTO attrTO = virAttrMap.get(input);\n+                if (attrTO == null) {\n+                    attrTO = new AttrTO();\n+                    attrTO.setSchema(input);\n+                    attrTO.getValues().add(StringUtils.EMPTY);\n+                } else if (attrTO.getValues().isEmpty()) {\n+                    attrTO.getValues().add(\"\");\n+                }\n+\n+                return attrTO;\n+            }\n+        }, entityTO.getVirAttrs());\n+\n+        final Fragment fragment;\n+        if (entityTO.getVirAttrs().isEmpty()) {\n+            // show empty list message\n+            fragment = new Fragment(\"content\", \"empty\", this);\n+        } else {\n+            fragment = new Fragment(\"content\", \"attributes\", this);\n+\n+            final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"virAttrContainer\");\n+            attributesContainer.setOutputMarkupId(true);\n+            fragment.add(attributesContainer);\n+\n+            ListView<AttrTO> attributes = new ListView<AttrTO>(\"attrs\",\n+                    new PropertyModel<List<AttrTO>>(entityTO, \"virAttrs\") {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        @Override\n+                        public List<AttrTO> getObject() {\n+                            return new ArrayList<>(entityTO.getVirAttrs());\n+                        }\n+\n+                    }) {\n+\n+                        private static final long serialVersionUID = 9101744072914090143L;\n+\n+                        @Override\n+                        @SuppressWarnings(\"unchecked\")\n+                        protected void populateItem(final ListItem<AttrTO> item) {\n+                            AttrTO attrTO = item.getModelObject();\n+                            final VirSchemaTO schema = schemas.get(attrTO.getSchema());\n+\n+                            attrTO.setReadonly(schema.isReadonly());\n+\n+                            final AjaxTextFieldPanel panel\n+                            = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>());\n+\n+                            item.add(new MultiFieldPanel<String>(\n+                                            \"panel\",\n+                                            schema.getKey(),\n+                                            new PropertyModel<List<String>>(attrTO, \"values\"),\n+                                            panel).setEnabled(!schema.isReadonly()));\n+                        }\n+                    };\n+\n+            attributesContainer.add(attributes);\n+        }\n+\n+        add(fragment);\n+    }\n+}"},{"sha":"8c2092010f32b8a9aa7cc6561d8ba9fa98ac001d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -107,8 +107,7 @@ private final class ObjectType extends WizardStep {\n                     setStyleSheet(\"form-control\").\n                     setRequired(true));\n \n-            add(new TextField<String>(\n-                    \"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n+            add(new TextField<String>(\"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n         }\n     }\n \n@@ -211,12 +210,12 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n     }\n \n     @Override\n-    protected void onCancelInternal() {\n-        // d nothing\n+    protected void onCancelInternal(final ProvisionTO modelObject) {\n+        // do nothing\n     }\n \n     @Override\n-    protected void onApplyInternal() {\n+    protected void onApplyInternal(final ProvisionTO modelObject) {\n         // do nothing\n     }\n }"},{"sha":"98bb267ee8e3192bb8e53f5f6cbf7fab3fb4fa80","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -201,10 +201,25 @@ div.basepage-content{\n   overflow: hidden;\n }\n \n+.modal-body {\n+  max-height: 600px;\n+  overflow-y: auto;\n+}\n+\n .modal {\n   background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\n }\n \n+.wizard-view {\n+  max-height: 500px;\n+  overflow: auto;\n+  padding: 0px 15px 0px 5px;\n+}\n+\n+.wizard-buttons {\n+  padding: 10px 0px 5px 0px;\n+}\n+\n div.realms div.summarize {\n   margin: 50px 100px;\n }"},{"sha":"8a51c77e2776b49fe65debddab2e70ac851a5951","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.html","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -21,8 +21,8 @@\n     <title>Search result panel</title>\n   </head>\n   <body>\n-    <wicket:panel>\n-      <div wicket:id=\"container\">\n+    <wicket:extend>\n+      <div wicket:id=\"searchContainer\">\n         <span wicket:id=\"resultTable\">[Table]</span>\n \n         <span style=\"float:right\">\n@@ -38,10 +38,6 @@\n           </form>\n         </span>\n       </div>\n-\n-      <div wicket:id=\"modal\">\n-      </div>\n-\n-    </wicket:panel>\n+    </wicket:extend>\n   </body>\n </html>"},{"sha":"bbcd878eeb9a0ac0fc55b1392287c07f8d78ef18","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel.html","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.html?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,52 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <div style=\"margin: 5px;\">\n-      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"displayName\"/>\n-      </p>\n-      <form wicket:id=\"groupForm\">\n-        <div id=\"tabs\">\n-          <div style=\"display: block; clear: both\">\n-            <ul>\n-              <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n-              <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n-              <li><a href=\"#plainAttrs\"><span><wicket:message key=\"plainAttrs\"/></span></a></li>\n-              <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n-              <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n-              <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n-              <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n-              <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n-            </ul>\n-          </div>\n-          <div wicket:id=\"groupPanel\"></div>\n-        </div>\n-        <div style=\"bottom:0;margin:10px\">\n-          <input type=\"submit\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"submit\"/>\n-          <input type=\"button\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"cancel\"/>\n-        </div>\n-      </form>\n-    </div>\n-  </wicket:extend>\n-</html>"},{"sha":"4ffa2fb68c1d6661413d86239972475c72ffd654","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel.properties","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.properties?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,48 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-required_alert=All form fields are required.\n-title=Group\n-details=Details\n-plainAttrs=Plain attributes\n-tab3=Derived attributes\n-tab4=Virtual attributes\n-resources=Resources\n-entitlements=Entitlements\n-security=Security\n-add=+\n-drop=-\n-error=Generic error occurred during the operation\n-firstResourcesList=Group's resources\n-secondResourcesList=Available resources\n-firstEntitlementsList=Group's entitlements\n-secondEntitlementsList=Available entitlements\n-derAttrs=Derived Attributes\n-derAttrToRemove=Delete\n-derAttrName=Name\n-derAttrValue=Derived value\n-\n-virAttrs=Virtual Attributes\n-virAttrToRemove=Delete\n-virAttrName=Name\n-virAttrValue=Virtual value\n-\n-addAttributeBtn=Add\n-\n-inheritPlainAttrs=Inherit plain attributes\n-inheritDerAttrs=Inherit derived attributes\n-inheritVirAttrs=Inherit virtual attributes\n-templates=Templates"},{"sha":"1c6efec25120ce59e961fad69558171040144aba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel_it.properties","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_it.properties?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,50 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-required_alert=All form fields are required.\n-title=Gruppo\n-details=Dettagli\n-plainAttrs=Attributi normali\n-tab3=Attributi derivati\n-tab4=Attributi virtuali\n-resources=Risorse\n-entitlements=Entitlement\n-security=Sicurezza\n-add=+\n-drop=-\n-error=Errore generico durante l'operazione\n-firstResourcesList=Risorse ruolo\n-secondResourcesList=Risorse disponibili\n-firstResourcesList=Risorse gruppo\n-secondResourcesList=Risorse disponibili\n-derAttrs=Attributi derivati\n-derAttrToRemove=Elimina\n-derAttrName=Nome\n-derAttrValue=Valore derivato\n-\n-virAttrs=Attributi virtuali\n-virAttrToRemove=Elimina\n-virAttrName=Nome\n-virAttrValue=Valore virtuale\n-\n-addAttributeBtn=Aggiungi\n-\n-inheritPlainAttrs=Eredita attributi normali\n-inheritDerAttrs=Eredita attributi derivati\n-inheritVirAttrs=Eredita attributi virtuali\n-templates=Modelo\n-secondEntitlementsList=Entitlement disponibili\n-firstEntitlementsList=Entitlement gruppo"},{"sha":"064958566d562596d14e3ed26f4f3c3592bbf02e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupModalPanel_pt_BR.properties","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel_pt_BR.properties?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,48 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n-title=Grupo\n-details=Detalhes\n-plainAttrs=Atributos Normal\n-tab3=Atributos Derivados\n-tab4=Atributos Virtuais\n-resources=Recursos\n-entitlements=Direitos\n-security=Seguran\\u00e7a\n-add=+\n-drop=-\n-error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n-firstResourcesList=Recursos de grupos\n-secondResourcesList=Recursos dispon\\u00edveis\n-firstEntitlementsList=Direitos de grupos\n-secondEntitlementsList=Direitos dispon\\u00edveis\n-derAttrs=Atributos derivados\n-derAttrToRemove=Exluir\n-derAttrName=Nome\n-derAttrValue=Valor Derivado\n-\n-virAttrs=Atributos Virtuais\n-virAttrToRemove=Excluir\n-virAttrName=Nome\n-virAttrValue=Valor Virtual\n-\n-addAttributeBtn=Adicionar\n-\n-inheritPlainAttrs=Atributos Herdados Normal\n-inheritDerAttrs=Atributos Derivados Herdados\n-inheritVirAttrs=Atributos Virtuais Herdados\n-templates=Modelli"},{"sha":"4f24eb48010e647acd2e37cd692ccc6baea4afbf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ListViewPanel.html","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -17,16 +17,11 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span wicket:id=\"container\">\n-      <wicket:container wicket:id=\"content\" />\n-    </span>\n-\n-    <wicket:fragment wicket:id=\"wizard\">\n-      <span wicket:id=\"wizard\"/>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"table\">\n+  <head>\n+    <title>List view panel</title>\n+  </head>\n+  <body>\n+    <wicket:extend>\n       <div class=\"col-xs-12\">\n         <div class=\"box\">\n           <div class=\"box-header\">\n@@ -53,9 +48,6 @@ <h3 class=\"box-title\">\n           </div><!-- /.box-body -->\n         </div><!-- /.box -->\n       </div>\n-      <div class=\"modal-footer\" style=\"text-align: right\">\n-        <input type=\"submit\" class=\"btn btn-primary\" value=\"Add\" wicket:message=\"value:listview.add\" wicket:id=\"add\"/>\n-      </div>\n-    </wicket:fragment>\n-  </wicket:panel>\n+    </wicket:extend>\n+  </body>\n </html>"},{"sha":"19bcd4465522d1e91ae55128a19e6a4e32967c84","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceDetailsPanel.html","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -39,10 +39,6 @@\n           <span wicket:id=\"enforceMandatoryCondition\">[enforceMandatoryCondition]</span>\n         </div>\n \n-        <div class=\"form-group\">\n-          <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n-        </div>\n-\n         <div class=\"form-group\">\n           <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n         </div>"},{"sha":"351d029b1c4f1b1a6b1d4973c6dbfae8e7a40e8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -51,7 +51,6 @@ updateTraceLevel=Update trace level\n deleteTraceLevel=Delete trace level\n syncTraceLevel=Synchronization trace level\n propagationPriority=Propagation priority\n-propagationPrimary=Propagation primary\n \n success_connection=Successful connection\n error_connection=Connection failure"},{"sha":"8cb22f0cf80e42bdc95e4286d3aec1bb7880f73a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModalPage.html","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.html?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,56 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <form wicket:id=\"form\">\n-      <div class=\"tabbable tabs-left\">\n-        <ul class=\"nav nav-tabs\">\n-          <li class=\"active\"><a  data-toggle=\"tab\" href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#gmapping\"><span><wicket:message key=\"gmapping\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n-        </ul>\n-        <div class=\"tab-content\">\n-          <div id=\"resource\" class=\"tab-pane active\">\n-            <span wicket:id=\"details\">[details]</span>\n-            <span wicket:id=\"systeminformation\">[System Information]</span>\n-          </div>\n-          <div id=\"umapping\" class=\"tab-pane\">\n-            <span wicket:id=\"umapping\">[umapping]</span>\n-          </div>\n-          <div id=\"gmapping\" class=\"tab-pane\">\n-            <span wicket:id=\"gmapping\">[gmapping]</span>\n-          </div>\n-          <div id=\"connectorProperties\" class=\"tab-pane\">\n-            <span wicket:id=\"connconf\">[connconf]</span>\n-          </div>\n-          <div id=\"security\" class=\"tab-pane\">\n-            <span wicket:id=\"security\">[security]</span>\n-          </div>\n-        </div>\n-      </div>\n-\n-      <div class=\"modal-footer\">\n-        <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n-        <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n-      </div> \n-    </form>\n-  </wicket:extend>\n-</html>"},{"sha":"789919b55be1d08f2f0dfbaa603acead628432ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModalPage.properties","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c30ca705382bfc26b09c1675941ac28f5f7ddfc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModalPage.properties?ref=4c30ca705382bfc26b09c1675941ac28f5f7ddfc","patch":"@@ -1,60 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-resource=Resource details\n-umapping=User mapping\n-connectorProperties=Connector properties\n-security=Security\n-required_alert=All form fields are required\n-connector=Connector\n-existing_resources=Existing resources\n-action=Action\n-edit_attribute=Edit resource\n-title=Resource\n-extAttrNames=External attributes\n-intMappingTypes=Internal mapping types\n-entity=Entity\n-groupSchema=Group Schema\n-connObjectKey=ConnObjectKey\n-mandatoryCondition=Mandatory\n-password=Password\n-purpose=Purpose\n-mappingUserSchema=Mapping User Schema\n-mappingGroupSchema=Mapping Group Schema\n-delete=Delete\n-intAttrNames=Internal attributes\n-enforceMandatoryCondition=Enforce mandatory condition\n-fieldName=Field name\n-\n-connObjectKeyValidation=There must be exactly one ConnObjectKey\n-propagationMode=Propagation mode\n-connObjectLink=ConnObjectLink\n-enable=Enable\n-\n-createTraceLevel=Create trace level\n-updateTraceLevel=Update trace level\n-deleteTraceLevel=Delete trace level\n-syncTraceLevel=Synchronization trace level\n-propagationPriority=Propagation priority\n-propagationPrimary=Propagation primary\n-\n-success_connection=Successful connection\n-error_connection=Connection failure\n-check=Check connection\n-actionsClasses=Actions classes\n-gmapping=Group mapping\n-new=New resource\n-randomPwdIfNotProvided=Generate random passwords when missing"},{"sha":"51cf18ecd665871c8d6a485d74795a7f926678b3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -50,7 +50,6 @@ updateTraceLevel=Livello di tracciamento degli aggiornamenti\n deleteTraceLevel=Livello di tracciamento delle cancellazioni\n syncTraceLevel=Livello di tracciamento delle sincronizzazioni\n propagationPriority=Priorit\\u00e0 in propagazione\n-propagationPrimary=Primaria in propagazione\n \n success_connection=Connessione avvenuta con successo\n error_connection=Connessione non riuscita"},{"sha":"07e0f14ca64a98967947ca9a211f09ff68be9066","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_pt_BR.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -50,7 +50,6 @@ updateTraceLevel=Atualizar n\\u00edvel de trace\n deleteTraceLevel=Excluir n\\u00edvel de trace\n syncTraceLevel=N\\u00edvel de trace de sincroniza\\u00e7\\u00e3o\n propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n-propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n \n success_connection=Conex\\u00e3o com sucesso\n error_connection=Conex\\u00e3o sem sucesso"},{"sha":"c0b84a13eb9f9f8cab5a5b64bd0bfb867344e96d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wizard.cancel.error = Wizard error on cancel\n+wizard.apply.error = Wizard error on apply changes"},{"sha":"af40f3115c5830213096d114e077703acfa9ee54","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wizard.cancel.error = Errore wizard in annullamento operazione\n+wizard.apply.error = Errore wizard in fase di commit"},{"sha":"a73e27009fcd270c66162aeb91b356792b855150","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wizard.cancel.error = Erro em assistente de cancelar\n+wizard.apply.error = Assistente de erro em aplicar as altera\\u00e7\\u00f5es"},{"sha":"e849f373dcadc9c604b0de4015b6f9b6c57f6c35","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,45 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title></title>\n+  </head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"container\">\n+        <wicket:container wicket:id=\"content\" />\n+      </span>\n+\n+      <wicket:fragment wicket:id=\"wizard\">\n+        <span wicket:id=\"wizard\"/>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"default\">\n+\n+        <wicket:child />\n+\n+        <div class=\"modal-footer\" style=\"text-align: right\">\n+          <a haref=\"#\"  class=\"btn btn-primary\" wicket:id=\"add\">Add</a>\n+        </div>\n+      </wicket:fragment>\n+\n+      <div wicket:id=\"modal\" />\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"6b17a0609fcf1fb8c9769a45b9edcb8fffa99259","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DerAttrs.html","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,42 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\" xmlns:message=\"http://xmlns.jcp.org/jsf/composite\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"content\">[CONTENT]</span>\n+      \n+      <wicket:fragment wicket:id=\"empty\">\n+        <div class=\"attribute.empty.list\">\n+          <wicket:message key=\"attribute.empty.list\"/>\n+        </div>\n+      </wicket:fragment>\n+      \n+      <wicket:fragment wicket:id=\"attributes\">\n+        <div wicket:id=\"derAttrContainer\">\n+          <div class=\"form-group\" wicket:id=\"attrs\">\n+            <span wicket:id=\"panel\">\n+              [panel for dynamic input type markup]\n+            </span>\n+          </div>\n+        </div>\n+      </wicket:fragment>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"72b580f6565a4171d66973a138aaf92d91e28705","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DerAttrs.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+derived.emptyvalue.message=Value to be derived ...\n+attribute.empty.list=No derived attributes available"},{"sha":"d275c71cedee7fc1060603340f3c32dd8a504a1b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DerAttrs_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+derived.emptyvalue.message=Valore da derivare ...\n+attribute.empty.list=Non ci sono attributi derivati disponibili"},{"sha":"b659c46dd87bb23fca1ee475b0eeeef3d249f15c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DerAttrs_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+derived.emptyvalue.message=Valor a ser derivada ...\n+attribute.empty.list=Sem atributos derivados dispon\\u00edveis"},{"sha":"c813528048ab1cd8a1b056c9417b3b8dd2f22565","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,56 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"name\"/>\n+        <a class=\"tooltips\" wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+          <img src=\"img/help.png\"/>\n+          <span wicket:id=\"jexlHelp\" class=\"tooltips\">\n+            <wicket:message key=\"jexl_info\"/>\n+            <ul>\n+              <li><wicket:message key=\"jexl_ex1\"/></li>\n+              <li><wicket:message key=\"jexl_ex2\"/></li>\n+            </ul>\n+            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+          </span>\n+        </a>\n+      </div>\n+\n+      <div wicket:id=\"ownerContainer\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"userOwner\"/>\n+          <a href=\"#\" wicket:id=\"userOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select user owner\" title=\"Search\"/></a>\n+          <a href=\"#\" wicket:id=\"userOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset user owner\" title=\"Delete\"/></a>\n+        </div>\n+\n+        <div class=\"form-group\">\n+          <span wicket:id=\"groupOwner\"/>\n+          <a href=\"#\" wicket:id=\"groupOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select group owner\" title=\"Search\"/></a>\n+          <a href=\"#\" wicket:id=\"groupOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset group owner\" title=\"Delete\"/></a>\n+        </div>\n+      </div>\n+\n+      <span wicket:id=\"userOwnerSelectWin\"/>\n+      <span wicket:id=\"groupOwnerSelectWin\"/>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"13a83393a9124bf6ec36540556b4808abd47e206","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails.properties","status":"added","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,16 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License."},{"sha":"13a83393a9124bf6ec36540556b4808abd47e206","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails_it.properties","status":"added","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,16 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License."},{"sha":"13a83393a9124bf6ec36540556b4808abd47e206","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails_pt_BR.properties","status":"added","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,16 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License."},{"sha":"52f6321aea37268a280de6c650f14265cbeab1c9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/PlainAttrs.html","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,40 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"schemas\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"panel\">\n+          [panel for dynamic input type markup]\n+        </span>\n+        <a class=\"tooltips\" wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+          <img src=\"img/help.png\"/>\n+          <span wicket:id=\"jexlHelp\" class=\"tooltips\">\n+            <wicket:message key=\"jexl_info\"/>\n+            <ul>\n+              <li><wicket:message key=\"jexl_ex1\"/></li>\n+              <li><wicket:message key=\"jexl_ex2\"/></li>\n+            </ul>\n+            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+          </span>\n+        </a>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"45e550cd5816d6bb2ebe981a80d418ddd8a2ce99","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails.html","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,59 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"username\"/>\n+        <a class=\"tooltips\" wicket:id=\"usernameQuestionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+          <img src=\"img/help.png\"/>\n+          <span wicket:id=\"usernameJexlHelp\" class=\"tooltips\">\n+            <wicket:message key=\"jexl_info\"/>\n+            <ul>\n+              <li><wicket:message key=\"jexl_ex1\"/></li>\n+              <li><wicket:message key=\"jexl_ex2\"/></li>\n+            </ul>\n+            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+          </span>\n+        </a>\n+      </div>\n+\n+      <form wicket:id=\"passwordInnerForm\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"password\"/>\n+          <a class=\"tooltips\" wicket:id=\"pwdQuestionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+            <img src=\"img/help.png\"/>\n+            <span wicket:id=\"pwdJexlHelp\" class=\"tooltips\">\n+              <wicket:message key=\"jexl_info\"/>\n+              <ul>\n+                <li><wicket:message key=\"jexl_ex1\"/></li>\n+                <li><wicket:message key=\"jexl_ex2\"/></li>\n+              </ul>\n+              <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+            </span>\n+          </a>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"confirmPassword\"/>\n+        </div>\n+      </form>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"f07fe03cfe9c6452735683d37a9fb289a464c326","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Username\n+password=Password\n+confirmPassword=Password (confirm)"},{"sha":"741d7ddd07b31aeecc060d82373d3df2c97e4af1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Username\n+password=Password\n+confirmPassword=Password (conferma)"},{"sha":"9debd26ca01037ada673f77048b0c519c5da9422","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+username=Nome do Usu\\u00E1rio\n+password=Senha\n+confirmPassword=Senha (confirmar)"},{"sha":"c73710d491d63c8aa0a458549b0ed0d8dacbc3fe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/VirAttrs.html","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,42 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\" xmlns:message=\"http://xmlns.jcp.org/jsf/composite\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"content\">[CONTENT]</span>\n+\n+      <wicket:fragment wicket:id=\"empty\">\n+        <div class=\"attribute.empty.list\">\n+          <wicket:message key=\"attribute.empty.list\"/>\n+        </div>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"attributes\">\n+        <div wicket:id=\"virAttrContainer\">\n+          <div class=\"form-group\" wicket:id=\"attrs\">\n+            <span wicket:id=\"panel\">\n+              [panel for dynamic input type markup]\n+            </span>\n+          </div>\n+        </div>\n+      </wicket:fragment>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"075089340b6a8f2b18c554d1c50a319ea7dacd85","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/VirAttrs.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+attribute.empty.list=No virtual attributes available"},{"sha":"8c52b7b9dd1a42728d07d4bd64711a62dce1843d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/VirAttrs_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_it.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+attribute.empty.list=Non ci sono attributi virtuali disponibili"},{"sha":"5ee69a067b0414a0ada1180a8c4a9ed1dc8dd6c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/VirAttrs_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs_pt_BR.properties?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+attribute.empty.list=Sem atributos virtuais dispon\\u00edveis"},{"sha":"2f889e6cf680989af91b9b55080556e0d63d4a6e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ConnObjectLink.html","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -16,16 +16,18 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" \n-      xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <wicket:panel>\n-    <span wicket:id=\"connObjectLinkContainer\">\n-      <div class=\"form-group\">\n-        <span wicket:id=\"connObjectLinkCheckbox\">[connObjectLinkCheckbox]</span>\n-      </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"connObjectLink\">[connObjectLink]</span>\n-      </div>\n-    </span>\n-  </wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"connObjectLinkContainer\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"connObjectLinkCheckbox\">[connObjectLinkCheckbox]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"connObjectLink\">[connObjectLink]</span>\n+        </div>\n+      </span>\n+    </wicket:panel>\n+  </body>\n </html>\n\\ No newline at end of file"},{"sha":"f5eaaeb3b9705dad3128c5d20be6e4d0f164edd1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping.html","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -16,8 +16,11 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\">\n-  <wicket:panel>\n-    <span wicket:id=\"mapping\" />\n-  </wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"mapping\" />\n+    </wicket:panel>\n+  </body>\n </html>\n\\ No newline at end of file"},{"sha":"95b13a93badf37e0ad9fa18365ca50259fd3f4c1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType.html","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -16,16 +16,18 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"\n-      xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <wicket:panel >\n-    <div class=\"form-group\">\n-      <label>Object Type</label>\n-      <span wicket:id=\"type\"/>\n-    </div>\n-    <div class=\"form-group\">\n-      <label>Object Class</label>\n-      <input type=\"text\" placeholder=\"Object Class ...\" class=\"form-control\"  wicket:id=\"class\">\n-    </div>\n-  </wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel >\n+      <div class=\"form-group\">\n+        <label>Object Type</label>\n+        <span wicket:id=\"type\"/>\n+      </div>\n+      <div class=\"form-group\">\n+        <label>Object Class</label>\n+        <input type=\"text\" placeholder=\"Object Class ...\" class=\"form-control\"  wicket:id=\"class\">\n+      </div>\n+    </wicket:panel>\n+  </body>\n </html>\n\\ No newline at end of file"},{"sha":"372ac7ab2cc5c0c874dfc102adb479870f35d8a4","filename":"client/enduser/pom.xml","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/client%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fpom.xml?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -64,10 +64,6 @@ under the License.\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-datetime</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.wicket</groupId>\n-      <artifactId>wicket-spring</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-auth-roles</artifactId>\n@@ -191,4 +187,4 @@ under the License.\n     \n   </build>\n   \n-</project>\n\\ No newline at end of file\n+</project>"},{"sha":"e6ec502e154449c29b90a4b0a046d1ed9f784c62","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -28,6 +28,7 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n@@ -54,15 +55,17 @@ <T extends AbstractSchemaTO> T read(\n             @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n \n     /**\n-     * Returns a list of schemas with matching type.\n+     * Returns a list of schemas with matching type, for the given anyTypeClass if provided.\n      *\n      * @param <T> actual SchemaTO\n      * @param type type for schemas to be listed\n-     * @return list of schemas with matching type\n+     * @param anyTypeClass any type class name\n+     * @return list of schemas with matching type, for the given anyTypeClass if provided\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> List<T> list(@NotNull @PathParam(\"type\") SchemaType type);\n+    <T extends AbstractSchemaTO> List<T> list(@NotNull @PathParam(\"type\") SchemaType type, \n+            @QueryParam(\"anyType\") String anyTypeClass);\n \n     /**\n      * Creates a new schema."},{"sha":"f3b1b09b78b64291182a4287c2484e8bdab750c4","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SchemaLogic.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -33,11 +33,13 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n@@ -58,6 +60,9 @@ public class SchemaLogic extends AbstractTransactionalLogic<AbstractSchemaTO> {\n     @Autowired\n     private VirSchemaDAO virSchemaDAO;\n \n+    @Autowired\n+    private AnyTypeClassDAO anyTypeClassDAO;\n+\n     @Autowired\n     private SchemaDataBinder binder;\n \n@@ -140,11 +145,13 @@ public void delete(final SchemaType schemaType, final String schemaName) {\n \n     @PreAuthorize(\"isAuthenticated()\")\n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n+    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType, final String anyTypeClass) {\n+        AnyTypeClass clazz = anyTypeClass == null ? null : anyTypeClassDAO.find(anyTypeClass);\n         List<T> result;\n         switch (schemaType) {\n             case VIRTUAL:\n-                result = CollectionUtils.collect(virSchemaDAO.findAll(),\n+                result = CollectionUtils.collect(\n+                        clazz == null ? virSchemaDAO.findAll() : virSchemaDAO.findByAnyTypeClass(clazz),\n                         new Transformer<VirSchema, T>() {\n \n                             @Override\n@@ -155,7 +162,8 @@ public T transform(final VirSchema input) {\n                 break;\n \n             case DERIVED:\n-                result = CollectionUtils.collect(derSchemaDAO.findAll(),\n+                result = CollectionUtils.collect(\n+                        clazz == null ? derSchemaDAO.findAll() : derSchemaDAO.findByAnyTypeClass(clazz),\n                         new Transformer<DerSchema, T>() {\n \n                             @Override\n@@ -167,7 +175,8 @@ public T transform(final DerSchema input) {\n \n             case PLAIN:\n             default:\n-                result = CollectionUtils.collect(plainSchemaDAO.findAll(),\n+                result = CollectionUtils.collect(\n+                        clazz == null ? plainSchemaDAO.findAll() : plainSchemaDAO.findByAnyTypeClass(clazz),\n                         new Transformer<PlainSchema, T>() {\n \n                             @Override"},{"sha":"d39c9e900ce7bf7e255007a557cb65cf6aa9a7ed","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -99,8 +99,8 @@ public class ConnectorFacadeProxy implements Connector {\n     public ConnectorFacadeProxy(final ConnInstance connInstance) {\n         this.connInstance = connInstance;\n \n-        ConnIdBundleManager connIdBundleManager =\n-                ApplicationContextProvider.getBeanFactory().getBean(ConnIdBundleManager.class);\n+        ConnIdBundleManager connIdBundleManager = ApplicationContextProvider.getBeanFactory().getBean(\n+                ConnIdBundleManager.class);\n         ConnectorInfo info = connIdBundleManager.getConnectorInfo(connInstance);\n \n         // create default configuration"},{"sha":"c5fad733d0990bddf0b150ac01064a10a56cbdd0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncJobDelegate.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -128,20 +128,17 @@ protected String doExecuteProvisioning(\n         profile.setResAct(getSyncPolicySpec(syncTask).getConflictResolutionAction());\n \n         // Prepare handler for SyncDelta objects (any objects)\n-        AnyObjectSyncResultHandler ahandler =\n-                (AnyObjectSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n+        AnyObjectSyncResultHandler ahandler = (AnyObjectSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(AnyObjectSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ahandler.setProfile(profile);\n \n         // Prepare handler for SyncDelta objects (users)\n-        UserSyncResultHandler uhandler =\n-                (UserSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n+        UserSyncResultHandler uhandler = (UserSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(UserSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         uhandler.setProfile(profile);\n \n         // Prepare handler for SyncDelta objects (groups)\n-        GroupSyncResultHandler ghandler =\n-                (GroupSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n+        GroupSyncResultHandler ghandler = (GroupSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(GroupSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ghandler.setProfile(profile);\n "},{"sha":"07d84fb2063e428637f27251b9f28cb37fea6260","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -51,8 +51,8 @@ public void delete(final SchemaType schemaType, final String key) {\n     }\n \n     @Override\n-    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n-        return logic.list(schemaType);\n+    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType, final String anyTypeClass) {\n+        return logic.list(schemaType, anyTypeClass);\n     }\n \n     @Override"},{"sha":"ac941b7e5e098726caaf169b47b2fbf64708596f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/DerSchemaITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -40,7 +40,7 @@ public class DerSchemaITCase extends AbstractITCase {\n \n     @Test\n     public void list() {\n-        List<DerSchemaTO> derivedSchemas = schemaService.list(SchemaType.DERIVED);\n+        List<DerSchemaTO> derivedSchemas = schemaService.list(SchemaType.DERIVED, null);\n         assertFalse(derivedSchemas.isEmpty());\n         for (DerSchemaTO derivedSchemaTO : derivedSchemas) {\n             assertNotNull(derivedSchemaTO);"},{"sha":"d247aac453719bd7e336d8a10f50862d71069f92","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -674,7 +674,7 @@ public void capabilitiesOverride() {\n             assertEquals(RESOURCE_NAME_LDAP, result.getPropagationStatuses().get(0).getResource());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n             group = result.getAny();\n-\n+            \n             // 3. set capability override with only search allowed, but not enable\n             ldap.getCapabilitiesOverride().add(ConnectorCapability.SEARCH);\n             resourceService.update(ldap);\n@@ -867,5 +867,5 @@ public void issueSYNCOPE717() {\n         assertNotNull(groupTO);\n         assertEquals(\"11.23\", groupTO.getPlainAttrMap().get(doubleSchemaName).getValues().get(0));\n     }\n-\n+    \n }"},{"sha":"2a9dffef6092a009e77ab83e891dd75743685dbc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/MultitenancyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -100,7 +100,7 @@ public void masterOnly() {\n \n     @Test\n     public void readPlainSchemas() {\n-        assertEquals(17, adminClient.getService(SchemaService.class).list(SchemaType.PLAIN).size());\n+        assertEquals(17, adminClient.getService(SchemaService.class).list(SchemaType.PLAIN, null).size());\n     }\n \n     @Test"},{"sha":"2a75805c07aed9a5e8a08a1b3cc6796171f7bcd5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PlainSchemaITCase.java","status":"modified","additions":35,"deletions":21,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -29,13 +29,16 @@\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -83,7 +86,6 @@ public void createWithNotPermittedName() {\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n-\n             assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n@@ -99,9 +101,7 @@ public void createREnumWithoutEnumeration() {\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n-\n-            assertTrue(e.getElements().iterator().next().toString().\n-                    contains(EntityViolationType.InvalidSchemaEnum.name()));\n+            assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidSchemaEnum.name()));\n         }\n     }\n \n@@ -116,7 +116,6 @@ public void createUEnumWithoutEnumeration() {\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n-\n             assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidSchemaEnum.name()));\n         }\n     }\n@@ -160,23 +159,38 @@ public void delete() {\n \n     @Test\n     public void list() {\n-        List<PlainSchemaTO> userSchemas = schemaService.list(SchemaType.PLAIN);\n-        assertFalse(userSchemas.isEmpty());\n-        for (PlainSchemaTO schemaTO : userSchemas) {\n-            assertNotNull(schemaTO);\n-        }\n-\n-        List<PlainSchemaTO> groupSchemas = schemaService.list(SchemaType.PLAIN);\n-        assertFalse(groupSchemas.isEmpty());\n-        for (PlainSchemaTO schemaTO : groupSchemas) {\n+        List<PlainSchemaTO> schemas = schemaService.list(SchemaType.PLAIN, null);\n+        assertFalse(schemas.isEmpty());\n+        for (PlainSchemaTO schemaTO : schemas) {\n             assertNotNull(schemaTO);\n         }\n+    }\n \n-        List<PlainSchemaTO> membershipSchemas = schemaService.list(SchemaType.PLAIN);\n-        assertFalse(membershipSchemas.isEmpty());\n-        for (PlainSchemaTO schemaTO : membershipSchemas) {\n-            assertNotNull(schemaTO);\n-        }\n+    @Test\n+    public void listByAnyTypeClass() {\n+        final String clazz = anyTypeService.read(AnyTypeKind.USER.name()).getClasses().get(0);\n+        \n+        List<PlainSchemaTO> userSchemas = schemaService.list(SchemaType.PLAIN, clazz);\n+\n+        assertTrue(CollectionUtils.exists(userSchemas, new Predicate<PlainSchemaTO>() {\n+\n+            @Override\n+            public boolean evaluate(final PlainSchemaTO object) {\n+                return \"fullname\".equals(object.getKey());\n+            }\n+        }));\n+\n+        assertFalse(CollectionUtils.exists(userSchemas, new Predicate<PlainSchemaTO>() {\n+\n+            @Override\n+            public boolean evaluate(final PlainSchemaTO object) {\n+                return \"password.cipher.algorithm\".equals(object.getKey())\n+                        || \"rderived_dx\".equals(object.getKey())\n+                        || \"icon\".equals(object.getKey())\n+                        || \"mderived_sx\".equals(object.getKey())\n+                        || \"self.membership.layout\".equals(object.getKey());\n+            }\n+        }));\n     }\n \n     @Test\n@@ -323,13 +337,13 @@ public void issueSYNCOPE418() {\n     public void anonymous() {\n         SchemaService unauthenticated = clientFactory.create().getService(SchemaService.class);\n         try {\n-            unauthenticated.list(SchemaType.VIRTUAL);\n+            unauthenticated.list(SchemaType.VIRTUAL, null);\n             fail();\n         } catch (AccessControlException e) {\n             assertNotNull(e);\n         }\n \n         SchemaService anonymous = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(SchemaService.class);\n-        assertFalse(anonymous.list(SchemaType.VIRTUAL).isEmpty());\n+        assertFalse(anonymous.list(SchemaType.VIRTUAL, null).isEmpty());\n     }\n }"},{"sha":"45b4762d4f8b782dad7a30915b62703a71d5de51","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirSchemaITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirSchemaITCase.java?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -41,7 +41,7 @@ public class VirSchemaITCase extends AbstractITCase {\n \n     @Test\n     public void list() {\n-        List<VirSchemaTO> vSchemas = schemaService.list(SchemaType.VIRTUAL);\n+        List<VirSchemaTO> vSchemas = schemaService.list(SchemaType.VIRTUAL, null);\n         assertFalse(vSchemas.isEmpty());\n         for (VirSchemaTO vSchemaTO : vSchemas) {\n             assertNotNull(vSchemaTO);"},{"sha":"effa158dde95087767fe4cbc654655cc247d58a4","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047ac0190bf15aff81fee2d9538bd68a64305d15/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047ac0190bf15aff81fee2d9538bd68a64305d15/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=047ac0190bf15aff81fee2d9538bd68a64305d15","patch":"@@ -376,6 +376,7 @@ under the License.\n     <jquery-ui.version>1.11.4</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n+    <bootstrap-select.version>1.7.3</bootstrap-select.version>\n \n     <wicket-bootstrap.version>0.10.4-SNAPSHOT</wicket-bootstrap.version>\n     <bootbox.version>4.4.0</bootbox.version>\n@@ -966,6 +967,11 @@ under the License.\n         <artifactId>bootstrap</artifactId>\n         <version>${bootstrap.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>bootstrap-select</artifactId>\n+        <version>${bootstrap-select.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>font-awesome</artifactId>"}]}