{"sha":"0f3b83cde33f7aa151322f7ce71fdb623bce6e61","node_id":"C_kwDOJfYA1toAKDBmM2I4M2NkZTMzZjdhYTE1MTMyMmY3Y2U3MWZkYjYyM2JjZTZlNjE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-14T15:16:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-14T15:17:45Z"},"message":"[SYNCOPE-1722] Allow password fields to reveal their value to the end-user","tree":{"sha":"00b3d0122824e2d32664a62c0fef8abd02386391","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/00b3d0122824e2d32664a62c0fef8abd02386391"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f3b83cde33f7aa151322f7ce71fdb623bce6e61","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f3b83cde33f7aa151322f7ce71fdb623bce6e61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f3b83cde33f7aa151322f7ce71fdb623bce6e61","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"df5ceff0dce8bc03831e9d967e27564e63c04545","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df5ceff0dce8bc03831e9d967e27564e63c04545","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df5ceff0dce8bc03831e9d967e27564e63c04545"}],"stats":{"total":381,"additions":218,"deletions":163},"files":[{"sha":"923c79c55f8d2d1b444b9d2831af9a3f0a0e4f61","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -83,7 +83,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 || IdMConstants.GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n                 || IdMConstants.GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n-            field = new AjaxPasswordFieldPanel(\"panel\", label, new Model<>(), false);\n+            field = new AjaxPasswordFieldPanel(\"panel\", label, Model.of(), false);\n             ((PasswordTextField) field.getField()).setResetPassword(false);\n \n             required = property.getSchema().isRequired();"},{"sha":"6253f5f50aa08d3bd64c77eba0ce251ee33aaeb1","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.ui.commons.markup.html.form;\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n+import java.util.Optional;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -30,33 +31,35 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = -5490115280336667460L;\n \n-    public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n-        this(id, name, model, true, null);\n-    }\n-\n-    public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model,\n+    public AjaxPasswordFieldPanel(\n+            final String id,\n+            final String name,\n+            final IModel<String> model,\n             final boolean enableOnChange) {\n+\n         this(id, name, model, enableOnChange, null);\n     }\n \n     public AjaxPasswordFieldPanel(\n-            final String id, final String name, final IModel<String> model, final boolean enableOnChange,\n+            final String id,\n+            final String name,\n+            final IModel<String> model,\n+            final boolean enableOnChange,\n             final PasswordStrengthBehavior passwordStrengthBehavior) {\n+\n         super(id, name, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n-        if (passwordStrengthBehavior != null) {\n-            field.add(passwordStrengthBehavior);\n-        }\n         add(field.setLabel(new ResourceModel(name, name)).setRequired(false).setOutputMarkupId(true));\n+        Optional.ofNullable(passwordStrengthBehavior).ifPresent(field::add);\n \n         if (enableOnChange && !isReadOnly()) {\n             field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(final AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                     // nothing to do\n                 }\n             });"},{"sha":"7b4c72d31745cc84a76bc3ed7661487eecc70247","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/SyncopePasswordStrengthConfig.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSyncopePasswordStrengthConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSyncopePasswordStrengthConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSyncopePasswordStrengthConfig.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.markup.html.form;\n+\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n+import de.agilecoders.wicket.jquery.AbstractConfig;\n+import de.agilecoders.wicket.jquery.IKey;\n+import de.agilecoders.wicket.jquery.Key;\n+\n+public class SyncopePasswordStrengthConfig extends PasswordStrengthConfig {\n+\n+    private static final long serialVersionUID = -5625052394514215251L;\n+\n+    public enum KeyType {\n+        common,\n+        ui,\n+        rules;\n+\n+    }\n+\n+    public SyncopePasswordStrengthConfig() {\n+        super();\n+\n+        withProgressExtraCssClasses(\"pwstrengthProgress\").\n+                withShowVerdictsInsideProgressBar(true).\n+                withShowProgressBar(true);\n+    }\n+\n+    protected <T> void put(final KeyType keyType, final IKey<T> key, final T value) {\n+        AbstractConfig ui = (AbstractConfig) all().get(keyType.name());\n+        ui.put(key, value);\n+    }\n+\n+    public PasswordStrengthConfig withProgressExtraCssClasses(final String progressExtraCssClasses) {\n+        put(KeyType.ui, new Key<>(\"progressExtraCssClasses\"), progressExtraCssClasses);\n+        return this;\n+    }\n+}"},{"sha":"214c64ff9210696d2665f8c3a88b86ca726490c2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/PasswordPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -57,7 +57,7 @@ public PasswordPanel(\n         add(form);\n \n         AjaxPasswordFieldPanel confirmPasswordField = new AjaxPasswordFieldPanel(\n-                \"confirmPassword\", \"confirmPassword\", new Model<>(), false, null);\n+                \"confirmPassword\", \"confirmPassword\", Model.of(), false);\n         ((PasswordTextField) confirmPasswordField.getField()).setResetPassword(false);\n         form.add(confirmPasswordField.setPlaceholder(\"confirmPassword\").setMarkupId(\"confirmPassword\"));\n "},{"sha":"9feb80a77449f81d5e71268a8b173cc7a7ac3ed6","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/syncopeUI.scss","status":"modified","additions":19,"deletions":62,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,12 +19,10 @@\n \n @import 'utils';\n \n-\n pre {\n   @include white_space_pre_wrap;\n }\n \n-\n #veil {\n   display: none;\n   position: fixed;\n@@ -66,22 +64,18 @@ pre {\n       border-radius: 0.5em;\n \n       @include animation(spinner 2000ms infinite linear);\n-      @include shadow(rgba(0, 0, 0, 0.75) 1.5em 0 0 0, \n-      rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, \n-      rgba(0, 0, 0, 0.75) 0 1.5em 0 0, \n-      rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, \n-      rgba(0, 0, 0, 0.5) -1.5em 0 0 0, \n-      rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, \n-      rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, \n+      @include shadow(rgba(0, 0, 0, 0.75) 1.5em 0 0 0,\n+      rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0,\n+      rgba(0, 0, 0, 0.75) 0 1.5em 0 0,\n+      rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0,\n+      rgba(0, 0, 0, 0.5) -1.5em 0 0 0,\n+      rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0,\n+      rgba(0, 0, 0, 0.75) 0 -1.5em 0 0,\n       rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0);\n     }\n   }\n }\n \n-\n-\n-\n-\n /* General\n ============================================================================= */\n \n@@ -320,7 +314,6 @@ a.help {\n   }\n }\n \n-\n .wizard-buttons {\n   padding: 10px 0px 5px 0px;\n   position: absolute;\n@@ -374,7 +367,7 @@ span.overridable div.checkbox {\n   }\n }\n \n-#outer.modal-lg, \n+#outer.modal-lg,\n #utilityModal.modal-lg {\n   max-width: 1200px;\n   width: 97%;\n@@ -416,7 +409,11 @@ td.checkGroupColumn {\n   color: #fff!important;\n }\n \n-\n+.pwstrengthProgress {\n+  position: absolute;\n+  bottom: 0px;\n+  width: 100%;\n+}\n \n /* Style for Information panel\n ============================================================================= */\n@@ -461,7 +458,6 @@ td.checkGroupColumn {\n   margin-left: 155px;\n }\n \n-\n #ownership div.toggle {\n   width: 110px !important;\n }\n@@ -513,9 +509,6 @@ td.checkGroupColumn {\n   padding-left: 15px;\n }\n \n-\n-\n-\n /* Startat\n ============================================================================= */\n \n@@ -541,10 +534,6 @@ td.checkGroupColumn {\n   }\n }\n \n-\n-\n-\n-\n /* Notifications\n ============================================================================= */\n /*Temporany fix diagonal stacking*/\n@@ -599,11 +588,6 @@ td.checkGroupColumn {\n   }\n }\n \n-\n-\n-\n-\n-\n /* Actions\n ============================================================================= */\n \n@@ -666,12 +650,6 @@ div.listview-actions a {\n   margin: 0px;\n }\n \n-\n-\n-\n-\n-\n-\n /* Datatable\n ============================================================================= */\n \n@@ -778,16 +756,13 @@ div.panel-collapse.collapse.show span.ui-spinner.ui-corner-all.ui-widget.ui-widg\n   top: 5px !important;\n }\n \n-\n /* Parameters Details\n ============================================================================= */\n \n div#parametersForm {\n   min-height: 220px;\n }\n \n-\n-\n li.todoitem a {\n   cursor: default;\n }\n@@ -843,11 +818,6 @@ div#userFilter {\n   width: 20px;\n }\n \n-\n-\n-\n-\n-\n /* Alert widget onside menu\n ============================================================================= */\n \n@@ -898,10 +868,6 @@ div#userFilter {\n   }\n }\n \n-\n-\n-\n-\n /* Transformers toggle panel\n ============================================================================= */\n \n@@ -965,9 +931,6 @@ div#userFilter {\n   clear: both;\n }\n \n-\n-\n-\n /* Events\n ============================================================================= */\n \n@@ -1006,9 +969,6 @@ div#userFilter {\n   min-width: 585px;\n }\n \n-\n-\n-\n /* Others\n ============================================================================= */\n .form-check {\n@@ -1072,8 +1032,8 @@ th ul.menu {\n   padding: 0;\n }\n \n-#inline-actions ul.menu, \n-#tablehandling ul.menu, \n+#inline-actions ul.menu,\n+#tablehandling ul.menu,\n .listview-actions ul.menu {\n   list-style-type: none;\n   margin: 0;\n@@ -1088,7 +1048,7 @@ th ul.menu li {\n }\n \n #inline-actions ul.menu li,\n-#tablehandling ul.menu li, \n+#tablehandling ul.menu li,\n .listview-actions ul.menu li {\n   display: inline-block;\n }\n@@ -1098,8 +1058,8 @@ th ul.menu li a {\n   display: inline-block !important;\n }\n \n-#inline-actions ul.menu li a, \n-.listview-actions ul.menu li a, \n+#inline-actions ul.menu li a,\n+.listview-actions ul.menu li a,\n #tablehandling ul.menu li a {\n   margin-left: 5px;\n   display: inline-block !important;\n@@ -1115,7 +1075,7 @@ ul.menu {\n   }\n }\n \n-#inline-actions ul.menu i, \n+#inline-actions ul.menu i,\n #tablehandling ul.menu i {\n   width: auto !important;\n }\n@@ -1164,9 +1124,6 @@ h3.card-title {\n   @include shadow(0px 0px 20px 1px rgba(0,0,0,0.75));\n }\n \n-\n-\n-\n /* Utility classes\n ============================================================================= */\n "},{"sha":"4de436c3446d89c0d789ad588863991c7b31bcaf","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.html","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -22,6 +22,22 @@\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n       <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n-    <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n+    <div class=\"input-group\" style=\"height: 3.5rem;\">\n+      <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\"/>\n+      <span class=\"input-group-btn\">\n+        <button type=\"button\" class=\"btn btn-warning btn-flat\" onclick=\"\n+            var input = $(this).parent().prevAll('input');\n+            var type = input.attr('type');\n+            var children = $(this).children();\n+            if (type !== 'text') {\n+              $(input).attr('type', 'text');\n+              $(children).addClass('fa-eye-slash').removeClass('fa-eye');\n+            } else {\n+              $(input).attr('type', 'password');\n+              $(children).removeClass('fa-eye-slash').addClass('fa-eye');\n+            }\n+            return false;\"><i class=\"fa fa-eye\"></i></button>\n+      </span>\n+    </div>\n   </wicket:extend>\n-</html>\n\\ No newline at end of file\n+</html>"},{"sha":"cf6f387dada95b2c5ed91b5177da21e1cac0bf20","filename":"client/idrepo/console/pom.xml","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -263,11 +263,12 @@ under the License.\n       <id>debug</id>\n \n       <properties>\n+        <maven.build.cache.skipCache>true</maven.build.cache.skipCache>\n         <skipTests>true</skipTests>\n       </properties>\n \n       <build>\n-        <defaultGoal>clean package spring-boot:run</defaultGoal>\n+        <defaultGoal>clean package</defaultGoal>\n \n         <plugins>\n           <plugin>\n@@ -284,6 +285,14 @@ under the License.\n                 <profile>debug</profile>\n               </profiles>\n             </configuration>\n+            <executions>\n+              <execution>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>run</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n           </plugin>\n         </plugins>\n "},{"sha":"8ebbed46c0b3ab43c48627f562c4003be4660bb7","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -255,18 +255,20 @@ under the License.\n       <id>debug</id>\n \n       <properties>\n+        <maven.build.cache.skipCache>true</maven.build.cache.skipCache>\n         <skipTests>true</skipTests>\n       </properties>\n \n       <build>\n-        <defaultGoal>clean package spring-boot:run</defaultGoal>\n+        <defaultGoal>clean package</defaultGoal>\n \n         <plugins>\n           <plugin>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-maven-plugin</artifactId>\n             <configuration>\n               <jvmArguments>\n+                -Djavax.net.ssl.trustStore=${basedir}/../../../fit/wa-reference/src/test/resources/keystore.jks -Djavax.net.ssl.trustStorePassword=password\n                 -Dwicket.core.settings.general.configuration-type=development\n                 -XX:+AllowEnhancedClassRedefinition -XX:HotswapAgent=fatjar\n                 -Xdebug -Xrunjdwp:transport=dt_socket,address=8004,server=y,suspend=n\n@@ -275,6 +277,14 @@ under the License.\n                 <profile>debug</profile>\n               </profiles>\n             </configuration>\n+            <executions>\n+              <execution>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>run</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n           </plugin>\n         </plugins>\n "},{"sha":"191102a92d7ebe21936e2ec29f32f1522d942542","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -20,14 +20,15 @@\n \n import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.json.JsonMapper;\n-import com.giffing.wicket.spring.boot.starter.app.WicketBootStandardWebApplication;\n+import com.giffing.wicket.spring.boot.starter.app.WicketBootSecuredWebApplication;\n import de.agilecoders.wicket.core.Bootstrap;\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n import java.io.InputStream;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Map;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.enduser.pages.BasePage;\n@@ -47,12 +48,15 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.Session;\n import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.authorization.IAuthorizationStrategy;\n+import org.apache.wicket.authorization.IAuthorizationStrategy.AllowAllAuthorizationStrategy;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.protocol.http.ResourceIsolationRequestCycleListener;\n import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.protocol.http.servlet.XForwardedRequestWrapperFactory;\n import org.apache.wicket.request.Request;\n import org.apache.wicket.request.Response;\n+import org.apache.wicket.request.component.IRequestableComponent;\n import org.apache.wicket.request.component.IRequestablePage;\n import org.apache.wicket.request.cycle.IRequestCycleListener;\n import org.apache.wicket.request.cycle.RequestCycle;\n@@ -65,7 +69,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.core.io.ResourceLoader;\n \n-public class SyncopeWebApplication extends WicketBootStandardWebApplication {\n+public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n \n@@ -117,6 +121,8 @@ protected void init() {\n         getResourceSettings().setUseDefaultOnMissingResource(true);\n         getResourceSettings().setThrowExceptionOnMissingResource(false);\n \n+        getSecuritySettings().setAuthorizationStrategy(getAuthorizationStrategy());\n+\n         getMarkupSettings().setStripWicketTags(true);\n         getMarkupSettings().setCompressWhitespace(true);\n \n@@ -201,6 +207,23 @@ public IResource getResource() {\n         }\n     }\n \n+    protected IAuthorizationStrategy getAuthorizationStrategy() {\n+        return new AllowAllAuthorizationStrategy() {\n+\n+            @Override\n+            public <T extends IRequestableComponent> boolean isInstantiationAuthorized(final Class<T> componentClass) {\n+                if (BasePage.class.isAssignableFrom(componentClass)) {\n+                    return props.getPage().entrySet().stream().\n+                            filter(entry -> componentClass.equals(entry.getValue())).\n+                            map(Map.Entry::getKey).findFirst().\n+                            map(k -> SyncopeEnduserSession.get().isAuthenticated()).\n+                            orElse(true);\n+                }\n+                return true;\n+            }\n+        };\n+    }\n+\n     @Override\n     public Class<? extends Page> getHomePage() {\n         return SyncopeEnduserSession.get().isAuthenticated()\n@@ -247,6 +270,7 @@ public Class<? extends BasePage> getPageClass(final String name, final Class<? e\n         return props.getPage().getOrDefault(name, defaultValue);\n     }\n \n+    @Override\n     protected Class<? extends WebPage> getSignInPageClass() {\n         return Login.class;\n     }"},{"sha":"c41998b2389b0326eb48ca6fe3837cd89daf2440","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/BasePage.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.enduser.pages;\n \n import java.io.Serializable;\n-import java.lang.reflect.InvocationTargetException;\n import java.util.List;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.SyncopeWebApplication;\n@@ -84,8 +83,7 @@ public BasePage(final PageParameters parameters, final String name) {\n                     PageReference.class,\n                     List.class).\n                     newInstance(\"sidebar\", getPageReference(), lookup.getExtPageClasses());\n-        } catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException\n-                | IllegalArgumentException | InvocationTargetException e) {\n+        } catch (Exception e) {\n             throw new IllegalArgumentException(\"Could not instantiate \" + clazz.getName(), e);\n         }\n \n@@ -108,7 +106,7 @@ public BasePage(final PageParameters parameters, final String name) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 Session.get().setAttribute(Constants.MENU_COLLAPSE,\n-                    Session.get().getAttribute(Constants.MENU_COLLAPSE) == null\n+                        Session.get().getAttribute(Constants.MENU_COLLAPSE) == null\n                         ? true\n                         : !(Boolean) Session.get().getAttribute(Constants.MENU_COLLAPSE));\n             }"},{"sha":"d2e33711dcd04f7cdd580c3ceeef9a3c2a8529dc","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/EditChangePassword.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -21,7 +21,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.commons.ProvisioningUtils;\n-import org.apache.syncope.client.enduser.rest.UserSelfRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n import org.apache.syncope.common.lib.request.UserUR;\n@@ -35,8 +34,6 @@ public class EditChangePassword extends AbstractChangePassword {\n \n     private static final long serialVersionUID = -537205681762708502L;\n \n-    private final UserSelfRestClient userSelfRestClient = new UserSelfRestClient();\n-\n     public EditChangePassword(final PageParameters parameters) {\n         super(parameters);\n     }\n@@ -56,7 +53,7 @@ protected void doPwdSubmit(final AjaxRequestTarget target, final AjaxPasswordFie\n             setResponsePage(new SelfResult(provisioningResult,\n                     ProvisioningUtils.managePageParams(EditChangePassword.this, \"pwd.change\",\n                             !SyncopeWebApplication.get().isReportPropagationErrors()\n-                                    || provisioningResult.getPropagationStatuses().stream()\n+                            || provisioningResult.getPropagationStatuses().stream()\n                                     .allMatch(ps -> ExecStatus.SUCCESS == ps.getStatus()))));\n         } catch (Exception e) {\n             LOG.error(\"While changing password for {}\", SyncopeEnduserSession.get().getSelfTO().getUsername(), e);"},{"sha":"c56eff8372d0dbd0ac2377ee46b12270b2515597","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/EditUser.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditUser.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.pages;\n \n+import java.util.Optional;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n@@ -55,7 +56,7 @@ public EditUser(final PageParameters parameters) {\n     }\n \n     protected UserFormLayoutInfo buildFormLayout() {\n-        UserFormLayoutInfo customlayoutInfo = SyncopeWebApplication.get().getCustomFormLayout();\n-        return customlayoutInfo != null ? customlayoutInfo : new UserFormLayoutInfo();\n+        return Optional.ofNullable(SyncopeWebApplication.get().getCustomFormLayout()).\n+                orElseGet(() -> new UserFormLayoutInfo());\n     }\n }"},{"sha":"cdd76658572d493114d470d9bb4bf36dac25c001","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/SelfConfirmPasswordReset.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.enduser.pages;\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.commons.EnduserConstants;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.SyncopePasswordStrengthConfig;\n import org.apache.syncope.client.ui.commons.panels.CardPanel;\n import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n@@ -72,10 +72,7 @@ public SelfConfirmPasswordReset(final PageParameters parameters) {\n                 new UserWrapper(fakeUserTO),\n                 false,\n                 false,\n-                new PasswordStrengthBehavior(new PasswordStrengthConfig().\n-                        withDebug(false).\n-                        withShowVerdictsInsideProgressBar(true).\n-                        withShowProgressBar(true)));\n+                new PasswordStrengthBehavior(new SyncopePasswordStrengthConfig()));\n         passwordPanel.setOutputMarkupId(true);\n \n         form.add(new CardPanel.Builder<PasswordPanel>()"},{"sha":"b9f5111f1e9a1fa35800f07ad0059a4e7a497a29","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/ChangePasswordPanel.java","status":"modified","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.client.enduser.panels;\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.commons.EnduserConstants;\n import org.apache.syncope.client.enduser.panels.captcha.CaptchaPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.SyncopePasswordStrengthConfig;\n import org.apache.syncope.client.ui.commons.panels.CardPanel;\n import org.apache.syncope.client.ui.commons.panels.NotificationPanel;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -75,24 +75,24 @@ protected void appendDefaultButtonField() {\n \n                 // div that is not visible (but not display:none either)\n                 buffer.append(String.format(\n-                    \"<div style=\\\"width:0px;height:0px;position:absolute;\"\n+                        \"<div style=\\\"width:0px;height:0px;position:absolute;\"\n                         + \"left:-100px;top:-100px;overflow:hidden\\\" class=\\\"%s\\\">\",\n-                    cssClass));\n+                        cssClass));\n \n                 // add an empty textfield (otherwise IE doesn't work)\n                 buffer.append(\"<input title=\\\"text_hidden\\\" \"\n-                    + \"aria-label=\\\"text_hidden\\\" type=\\\"text\\\" \"\n-                    + \"tabindex=\\\"-1\\\" autocomplete=\\\"off\\\"/>\");\n+                        + \"aria-label=\\\"text_hidden\\\" type=\\\"text\\\" \"\n+                        + \"tabindex=\\\"-1\\\" autocomplete=\\\"off\\\"/>\");\n \n                 // add the submitting component\n                 final Component submittingComponent = (Component) getDefaultButton();\n                 buffer.append(\"<input title=\\\"submit_hidden\\\" aria-label=\\\"submit_hidden\\\" \"\n-                    + \"type=\\\"submit\\\" tabindex=\\\"-1\\\" name=\\\"\");\n+                        + \"type=\\\"submit\\\" tabindex=\\\"-1\\\" name=\\\"\");\n                 buffer.append(getDefaultButton().getInputName());\n                 buffer.append(\"\\\" onclick=\\\" var b=document.getElementById('\");\n                 buffer.append(submittingComponent.getMarkupId());\n                 buffer.append(\n-                    \"'); if (b!=null&amp;&amp;b.onclick!=null&amp;&amp;typeof(b.onclick) != 'undefined') \"\n+                        \"'); if (b!=null&amp;&amp;b.onclick!=null&amp;&amp;typeof(b.onclick) != 'undefined') \"\n                         + \"{  var r = Wicket.bind(b.onclick, b)(); if (r != false) b.click(); } \"\n                         + \"else { b.click(); };  return false;\\\" \");\n                 buffer.append(\" />\");\n@@ -109,13 +109,9 @@ protected void appendDefaultButtonField() {\n         passwordField = new AjaxPasswordFieldPanel(\n                 \"password\",\n                 getString(\"password\"),\n-                new Model<>(),\n+                Model.of(),\n                 false,\n-                new PasswordStrengthBehavior(\n-                        new PasswordStrengthConfig()\n-                                .withDebug(true)\n-                                .withShowVerdictsInsideProgressBar(true)\n-                                .withShowProgressBar(true)));\n+                new PasswordStrengthBehavior(new SyncopePasswordStrengthConfig()));\n         passwordField.setRequired(true);\n         passwordField.setMarkupId(\"password\");\n         passwordField.setPlaceholder(\"password\");\n@@ -126,8 +122,8 @@ protected void appendDefaultButtonField() {\n         ((PasswordTextField) passwordField.getField()).setResetPassword(true);\n         form.add(passwordField);\n \n-        confirmPasswordField = new AjaxPasswordFieldPanel(\"confirmPassword\",\n-                getString(\"confirmPassword\"), new Model<>());\n+        confirmPasswordField = new AjaxPasswordFieldPanel(\n+                \"confirmPassword\", getString(\"confirmPassword\"), Model.of(), true);\n         confirmPasswordField.setRequired(true);\n         confirmPasswordField.setMarkupId(\"confirmPassword\");\n         confirmPasswordField.setPlaceholder(\"confirmPassword\");"},{"sha":"b952b93437f6eb57f21f95ca2fffdcb2e4124946","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/Sidebar.java","status":"modified","additions":42,"deletions":47,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.enduser.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.SyncopeWebApplication;\n+import org.apache.syncope.client.enduser.layout.SidebarLayout;\n import org.apache.syncope.client.enduser.pages.BasePage;\n import org.apache.syncope.client.enduser.pages.Dashboard;\n import org.apache.syncope.client.enduser.pages.EditChangePassword;\n@@ -122,55 +123,55 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n             }\n         }\n \n-        ListView<Class<? extends BasePage>> extPages =\n-                new ListView<>(\"extPages\", extPageClasses.stream()\n-                        .filter(epc -> SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout()\n-                                .isExtensionEnabled(StringUtils.remove(epc.getAnnotation(ExtPage.class).label(),\n-                                                StringUtils.SPACE)))\n-                        .collect(Collectors.toList())) {\n+        ListView<Class<? extends BasePage>> extPages = new ListView<>(\"extPages\", extPageClasses.stream().\n+                filter(epc -> SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n+                isExtensionEnabled(StringUtils.remove(epc.getAnnotation(ExtPage.class).label(), StringUtils.SPACE))).\n+                collect(Collectors.toList())) {\n \n-                private static final long serialVersionUID = 4949588177564901031L;\n+            private static final long serialVersionUID = 4949588177564901031L;\n \n-                @Override\n-                protected void populateItem(final ListItem<Class<? extends BasePage>> item) {\n-                    WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n-                    item.add(containingLI);\n+            @Override\n+            protected void populateItem(final ListItem<Class<? extends BasePage>> item) {\n+                WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n+                item.add(containingLI);\n \n-                    ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n+                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n \n-                    BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n \n-                    link.add(new Label(\"extPageLabel\", ann.label()));\n+                link.add(new Label(\"extPageLabel\", ann.label()));\n \n-                    if (item.getModelObject().equals(pageRef.getPage().getClass())) {\n-                        link.add(new Behavior() {\n+                if (item.getModelObject().equals(pageRef.getPage().getClass())) {\n+                    link.add(new Behavior() {\n \n-                            private static final long serialVersionUID = 1469628524240283489L;\n+                        private static final long serialVersionUID = 1469628524240283489L;\n \n-                            @Override\n-                            public void renderHead(final Component component, final IHeaderResponse response) {\n-                                response.render(OnDomReadyHeaderItem.forScript(\n+                        @Override\n+                        public void renderHead(final Component component, final IHeaderResponse response) {\n+                            response.render(OnDomReadyHeaderItem.forScript(\n                                     \"$('#extensionsLink').addClass('active')\"));\n-                            }\n-\n-                            @Override\n-                            public void onComponentTag(final Component component, final ComponentTag tag) {\n-                                tag.append(\"class\", \"active\", \" \");\n-                            }\n-                        });\n-                    }\n-                    containingLI.add(link);\n+                        }\n \n-                    Label extPageIcon = new Label(\"extPageIcon\");\n-                    extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n-                    link.add(extPageIcon);\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            tag.append(\"class\", \"active\", \" \");\n+                        }\n+                    });\n                 }\n-            };\n+                containingLI.add(link);\n+\n+                Label extPageIcon = new Label(\"extPageIcon\");\n+                extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n+                link.add(extPageIcon);\n+            }\n+        };\n \n         add(extPages.setRenderBodyOnly(true).setOutputMarkupId(true));\n     }\n \n     protected void buildBaseSidebar() {\n+        SidebarLayout layout = SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout();\n+\n         dashboardLIContainer = new WebMarkupContainer(getLIContainerId(\"dashboard\"));\n         add(dashboardLIContainer);\n         dashboardLIContainer.add(BookmarkablePageLinkBuilder.build(\n@@ -180,33 +181,27 @@ protected void buildBaseSidebar() {\n         add(profileLIContainer);\n         profileULContainer = new WebMarkupContainer(getULContainerId(\"profile\"));\n         profileLIContainer.add(profileULContainer);\n-        profileLIContainer.setVisible(SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n-                isEditUserEnabled()\n-                || SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n-                isPasswordManagementEnabled()\n-                || (SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n-                isSecurityQuestionManagementEnabled()\n+        profileLIContainer.setVisible(layout.isEditUserEnabled()\n+                || layout.isPasswordManagementEnabled()\n+                || (layout.isSecurityQuestionManagementEnabled()\n                 && SyncopeEnduserSession.get().getPlatformInfo().isPwdResetRequiringSecurityQuestions()));\n \n         WebMarkupContainer liContainer = new WebMarkupContainer(getLIContainerId(\"edituser\"));\n         profileULContainer.add(liContainer);\n \n-        liContainer.add(BookmarkablePageLinkBuilder.build(\"edituser\", EditUser.class))\n-                .setVisible(SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout()\n-                        .isEditUserEnabled());\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"edituser\", EditUser.class)).\n+                setVisible(layout.isEditUserEnabled());\n         liContainer = new WebMarkupContainer(getLIContainerId(\"editchangepassword\"));\n         profileULContainer.add(liContainer);\n \n-        liContainer.add(BookmarkablePageLinkBuilder.build(\"editchangepassword\", EditChangePassword.class))\n-                .setVisible(SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n-                        isPasswordManagementEnabled());\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"editchangepassword\", EditChangePassword.class)).\n+                setVisible(layout.isPasswordManagementEnabled());\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"editsecurityquestion\"));\n         profileULContainer.add(liContainer);\n         liContainer.add(BookmarkablePageLinkBuilder.build(\"editsecurityquestion\", EditSecurityQuestion.class));\n         liContainer.setOutputMarkupPlaceholderTag(true);\n-        liContainer.setVisible(SyncopeWebApplication.get().getCustomFormLayout().getSidebarLayout().\n-                isSecurityQuestionManagementEnabled()\n+        liContainer.setVisible(layout.isSecurityQuestionManagementEnabled()\n                 && SyncopeEnduserSession.get().getPlatformInfo().isPwdResetRequiringSecurityQuestions());\n     }\n "},{"sha":"d68070e20ccef7cc0e1240fa62f705904f69bfad","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/UserDetails.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FUserDetails.java?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -19,14 +19,14 @@\n package org.apache.syncope.client.enduser.panels.any;\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.rest.RealmRestClient;\n import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.SyncopePasswordStrengthConfig;\n import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -89,10 +89,7 @@ protected EditUserPasswordPanel(final String id, final UserWrapper wrapper) {\n                     wrapper,\n                     false,\n                     wrapper.getInnerObject().getKey() == null,\n-                    new PasswordStrengthBehavior(new PasswordStrengthConfig().\n-                            withDebug(false).\n-                            withShowVerdictsInsideProgressBar(true).\n-                            withShowProgressBar(true))));\n+                    new PasswordStrengthBehavior(new SyncopePasswordStrengthConfig())));\n         }\n     }\n }"},{"sha":"bcdebf8d47dc5ce23812d275a4df5a7697abb37c","filename":"client/idrepo/enduser/src/test/resources/enduser-debug.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f3b83cde33f7aa151322f7ce71fdb623bce6e61/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties?ref=0f3b83cde33f7aa151322f7ce71fdb623bce6e61","patch":"@@ -15,10 +15,11 @@\n # specific language governing permissions and limitations\n # under the License.\n keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+#keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n server.port=9091\n-service.discovery.address=http://localhost:9090/syncope-enduser/\n+service.discovery.address=http://localhost:9091/syncope-enduser/\n \n logging.config=file://${project.build.testOutputDirectory}/log4j2.xml"}]}