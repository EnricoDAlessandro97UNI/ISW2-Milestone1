{"sha":"345a73dba31e26d016d1a5f591205f906a963216","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0NWE3M2RiYTMxZTI2ZDAxNmQxYTVmNTkxMjA1ZjkwNmE5NjMyMTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-17T08:26:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-17T08:26:36Z"},"message":"[SYNCOPE-58] UserRequestModalPage was always set to UserModalPage.Mode.SELF, now can also be UserModalPage.Mode.ADMIN\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1326988 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4f7b2c3b343fa67bd5583c802fb09cd210a92bd7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4f7b2c3b343fa67bd5583c802fb09cd210a92bd7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/345a73dba31e26d016d1a5f591205f906a963216","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/345a73dba31e26d016d1a5f591205f906a963216","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/345a73dba31e26d016d1a5f591205f906a963216","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/345a73dba31e26d016d1a5f591205f906a963216/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10"}],"stats":{"total":92,"additions":60,"deletions":32},"files":[{"sha":"1138feb6e5e4029aaf31cd16e342a8135b6d87ba","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=345a73dba31e26d016d1a5f591205f906a963216","patch":"@@ -151,7 +151,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n \n             editProfileFrag = new Fragment(\"editProfile\", \"editProfileFrag\", this);\n \n-            AjaxLink editProfileLink = new IndicatingAjaxLink(\"link\") {\n+            final AjaxLink editProfileLink = new IndicatingAjaxLink(\"link\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -162,7 +162,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         @Override\n                         public Page createPage() {\n                             return new UserRequestModalPage(BasePage.this.getPageReference(), editProfileModalWin,\n-                                    userTO);\n+                                    userTO, UserModalPage.Mode.SELF);\n                         }\n                     });\n "},{"sha":"e64dad5a6b0e4220d46d27b133ed24d66f47a965","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=345a73dba31e26d016d1a5f591205f906a963216","patch":"@@ -99,7 +99,7 @@ public Login(final PageParameters parameters) {\n         passwordField.setMarkupId(\"password\");\n         form.add(passwordField);\n \n-        languageSelect = new LocaleDropDown(\"language\", Arrays.asList(new Locale[] { Locale.ENGLISH, Locale.ITALIAN }));\n+        languageSelect = new LocaleDropDown(\"language\", Arrays.asList(new Locale[]{Locale.ENGLISH, Locale.ITALIAN}));\n \n         form.add(languageSelect);\n \n@@ -141,7 +141,7 @@ public void onSubmit() {\n         if (isSelfRegistrationAllowed()) {\n             selfRegFrag = new Fragment(\"selfRegistration\", \"selfRegAllowed\", this);\n \n-            AjaxLink selfRegLink = new IndicatingAjaxLink(\"link\") {\n+            final AjaxLink selfRegLink = new IndicatingAjaxLink(\"link\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -154,7 +154,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         @Override\n                         public Page createPage() {\n                             return new UserRequestModalPage(Login.this.getPageReference(), editProfileModalWin,\n-                                    new UserTO());\n+                                    new UserTO(), UserModalPage.Mode.SELF);\n                         }\n                     });\n \n@@ -174,8 +174,8 @@ public Page createPage() {\n \n     private String[] authenticate(final String userId, final String password) {\n         // 1. Set provided credentials to check\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userId, password));\n \n@@ -204,8 +204,8 @@ private boolean isSelfRegistrationAllowed() {\n     }\n \n     private String getCoreVersion() {\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n \n         String version = \"\";\n         try {"},{"sha":"26bb033eda80acd07431eea5c42a76d83dc79181","filename":"console/src/main/java/org/syncope/console/pages/Todo.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=345a73dba31e26d016d1a5f591205f906a963216","patch":"@@ -202,8 +202,8 @@ public Page createPage() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_APPROVAL_PAGINATOR_ROWS, String\n-                        .valueOf(approvalPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_APPROVAL_PAGINATOR_ROWS, String.valueOf(\n+                        approvalPaginatorRows));\n                 approvalTable.setItemsPerPage(approvalPaginatorRows);\n \n                 target.add(approvalContainer);\n@@ -262,8 +262,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new UserRequestModalPage(Todo.this.getPageReference(), editUserRequestWin, model\n-                                        .getObject());\n+                                return new UserRequestModalPage(Todo.this.getPageReference(), editUserRequestWin,\n+                                        model.getObject(), UserModalPage.Mode.ADMIN);\n                             }\n                         });\n \n@@ -330,8 +330,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n         Form userRequestPaginatorForm = new Form(\"userRequestPaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(userRequestPaginatorForm, RENDER, xmlRolesReader\n-                .getAllAllowedRoles(\"UserRequest\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(userRequestPaginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"UserRequest\", \"list\"));\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n                 \"userRequestPaginatorRows\"), prefMan.getPaginatorChoices());\n@@ -342,8 +342,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_USER_REQUEST_PAGINATOR_ROWS, String\n-                        .valueOf(userRequestPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_USER_REQUEST_PAGINATOR_ROWS, String.valueOf(\n+                        userRequestPaginatorRows));\n                 userRequestTable.setItemsPerPage(userRequestPaginatorRows);\n \n                 target.add(userRequestContainer);"},{"sha":"e606df5fe584e0ab808d3d68017514afdaafed54","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=345a73dba31e26d016d1a5f591205f906a963216","patch":"@@ -49,6 +49,7 @@ public enum Mode {\n         ADMIN,\n         SELF,\n         TEMPLATE;\n+\n     }\n \n     private static final long serialVersionUID = 5002005009737457667L;\n@@ -59,7 +60,7 @@ public enum Mode {\n \n     protected UserTO userTO;\n \n-    private final Mode mode;\n+    protected final Mode mode;\n \n     private Fragment fragment = null;\n \n@@ -194,7 +195,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                     }\n \n                     closeAction(target, form);\n-\n                 } catch (Exception e) {\n                     LOG.error(\"While creating or updating user\", e);\n                     error(getString(\"error\") + \":\" + e.getMessage());"},{"sha":"0303e6dffc652a20ee65c1b48aaa168d8caeaaea","filename":"console/src/main/java/org/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":41,"deletions":13,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/345a73dba31e26d016d1a5f591205f906a963216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=345a73dba31e26d016d1a5f591205f906a963216","patch":"@@ -47,19 +47,19 @@ public class UserRequestModalPage extends UserModalPage {\n \n     private UserRequestTO userRequestTO;\n \n-    public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO) {\n+    public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO,\n+            final Mode mode) {\n \n-        super(callerPageRef, window, userTO, Mode.SELF, false);\n+        super(callerPageRef, window, userTO, mode, false);\n \n         setupEditPanel();\n     }\n \n     public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window,\n-            final UserRequestTO userRequestTO) {\n+            final UserRequestTO userRequestTO, final Mode mode) {\n \n-        super(callerPageRef, window, null, Mode.SELF, false);\n+        super(callerPageRef, window, null, mode, false);\n \n-        // evaluate userTO ...\n         switch (userRequestTO.getType()) {\n             case CREATE:\n                 userTO = userRequestTO.getUserTO();\n@@ -81,30 +81,58 @@ public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow\n         setupEditPanel();\n     }\n \n-    public UserRequestModalPage(final ModalWindow window, final UserTO userTO) {\n+    public UserRequestModalPage(final ModalWindow window, final UserTO userTO, final Mode mode) {\n \n-        super(window, userTO, Mode.SELF);\n+        super(window, userTO, mode);\n     }\n \n     @Override\n     protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         final UserTO updatedUserTO = (UserTO) form.getModelObject();\n \n         if (updatedUserTO.getId() == 0) {\n-            requestRestClient.requestCreate(updatedUserTO);\n+            switch (mode) {\n+                case SELF:\n+                    requestRestClient.requestCreate(updatedUserTO);\n+                    break;\n+\n+                case ADMIN:\n+                    userRestClient.create(updatedUserTO);\n+                    if (userRequestTO != null) {\n+                        requestRestClient.delete(userRequestTO.getId());\n+                    }\n+                    break;\n+\n+                default:\n+                    LOG.warn(\"Invalid mode specified for {}: {}\", getClass().getName(), mode);\n+            }\n         } else {\n-            final UserMod userMod = AttributableOperations.diff(updatedUserTO, userRestClient.read(updatedUserTO\n-                    .getId()));\n+            final UserMod userMod = AttributableOperations.diff(updatedUserTO,\n+                    userRestClient.read(updatedUserTO.getId()));\n \n-            // update user just if it is changed\n+            // update user only if it has changed\n             if (!userMod.isEmpty()) {\n-                requestRestClient.requestUpdate(userMod);\n+                switch (mode) {\n+                    case SELF:\n+                        requestRestClient.requestUpdate(userMod);\n+                        break;\n+\n+                    case ADMIN:\n+                        userRestClient.update(userMod);\n+                        if (userRequestTO != null) {\n+                            requestRestClient.delete(userRequestTO.getId());\n+                        }\n+                        break;\n+\n+                    default:\n+                        LOG.warn(\"Invalid mode specified for {}: {}\", getClass().getName(), mode);\n+                }\n             }\n         }\n     }\n \n     @Override\n     protected void closeAction(final AjaxRequestTarget target, final Form form) {\n-        setResponsePage(new UserRequestModalPage(window, userTO));\n+        setResponsePage(new UserRequestModalPage(window, userTO, mode));\n     }\n }"}]}