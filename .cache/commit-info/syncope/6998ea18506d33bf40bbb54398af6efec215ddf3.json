{"sha":"6998ea18506d33bf40bbb54398af6efec215ddf3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY5OThlYTE4NTA2ZDMzYmY0MGJiYjU0Mzk4YWY2ZWZlYzIxNWRkZjM=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-27T11:56:33Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-27T11:56:33Z"},"message":"Fix password synchronization on update.\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1606040 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1a48f85720fc00a29e26c2f30ef2936bcd01d742","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1a48f85720fc00a29e26c2f30ef2936bcd01d742"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6998ea18506d33bf40bbb54398af6efec215ddf3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6998ea18506d33bf40bbb54398af6efec215ddf3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6998ea18506d33bf40bbb54398af6efec215ddf3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6998ea18506d33bf40bbb54398af6efec215ddf3/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"79fabe3bc70721bf91fd626b6762e76ff08107ac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79fabe3bc70721bf91fd626b6762e76ff08107ac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79fabe3bc70721bf91fd626b6762e76ff08107ac"}],"stats":{"total":102,"additions":73,"deletions":29},"files":[{"sha":"22155045b4a9384c3b0a12f9de2101f4cb9552f7","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/DBPasswordSyncActions.java","status":"modified","additions":37,"deletions":15,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6998ea18506d33bf40bbb54398af6efec215ddf3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6998ea18506d33bf40bbb54398af6efec215ddf3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java?ref=6998ea18506d33bf40bbb54398af6efec215ddf3","patch":"@@ -19,8 +19,11 @@\n package org.apache.syncope.core.sync.impl;\n \n import org.apache.syncope.core.sync.SyncProfile;\n+\n import java.util.Iterator;\n \n+import org.apache.syncope.common.mod.AbstractAttributableMod;\n+import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.CipherAlgorithm;\n@@ -65,25 +68,44 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n \n         if (subject instanceof UserTO) {\n             String password = ((UserTO) subject).getPassword();\n-            if (password != null) {\n-                Connector connector = profile.getConnector();\n-                ConnInstance connInstance = connector.getActiveConnInstance();\n-\n-                String cipherAlgorithm = getCipherAlgorithm(connInstance);\n-                if (!CLEARTEXT.equals(cipherAlgorithm)) {\n-                    try {\n-                        encodedPassword = password;\n-                        cipher = CipherAlgorithm.valueOf(cipherAlgorithm);\n-                    } catch (IllegalArgumentException e) {\n-                        LOG.error(\"Cipher algorithm not allowed: {}\", cipherAlgorithm, e);\n-                        encodedPassword = null;\n-                    }\n-                }\n-            }\n+            parseEncodedPassword(password, profile.getConnector());\n         }\n \n         return delta;\n     }\n+    \n+    @Transactional(readOnly = true)\n+    @Override\n+    public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n+            final SyncProfile<?, ?> profile,\n+            final SyncDelta delta,\n+            final T subject,\n+            final K subjectMod) throws JobExecutionException {\n+        \n+        if (subjectMod instanceof UserMod) {\n+            String modPassword = ((UserMod)subjectMod).getPassword();\n+            parseEncodedPassword(modPassword, profile.getConnector());\n+        }\n+        \n+        return delta;\n+    }\n+    \n+    private void parseEncodedPassword(String password, Connector connector) {\n+        if (password != null) {\n+            ConnInstance connInstance = connector.getActiveConnInstance();\n+\n+            String cipherAlgorithm = getCipherAlgorithm(connInstance);\n+            if (!CLEARTEXT.equals(cipherAlgorithm)) {\n+                try {\n+                    encodedPassword = password;\n+                    cipher = CipherAlgorithm.valueOf(cipherAlgorithm);\n+                } catch (IllegalArgumentException e) {\n+                    LOG.error(\"Cipher algorithm not allowed: {}\", cipherAlgorithm, e);\n+                    encodedPassword = null;\n+                }\n+            }\n+        }\n+    }\n \n     private String getCipherAlgorithm(ConnInstance connInstance) {\n         String cipherAlgorithm = CLEARTEXT;"},{"sha":"d3c7e0801bfc3d23743738777743843a781664d8","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPPasswordSyncActions.java","status":"modified","additions":36,"deletions":14,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6998ea18506d33bf40bbb54398af6efec215ddf3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6998ea18506d33bf40bbb54398af6efec215ddf3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java?ref=6998ea18506d33bf40bbb54398af6efec215ddf3","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.core.sync.impl;\n \n import org.apache.syncope.core.sync.SyncProfile;\n+import org.apache.syncope.common.mod.AbstractAttributableMod;\n+import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.CipherAlgorithm;\n@@ -59,24 +61,44 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n \n         if (subject instanceof UserTO) {\n             String password = ((UserTO) subject).getPassword();\n-            if (password != null && password.startsWith(\"{\")) {\n-                int closingBracketIndex = password.indexOf('}');\n-                String digest = password.substring(1, password.indexOf('}'));\n-                if (digest != null) {\n-                    digest = digest.toUpperCase();\n-                }\n-                try {\n-                    encodedPassword = password.substring(closingBracketIndex + 1);\n-                    cipher = CipherAlgorithm.valueOf(digest);\n-                } catch (IllegalArgumentException e) {\n-                    LOG.error(\"Cipher algorithm not allowed: {}\", digest, e);\n-                    encodedPassword = null;\n-                }\n-            }\n+            parseEncodedPassword(password);\n         }\n \n         return delta;\n     }\n+    \n+    @Transactional(readOnly = true)\n+    @Override\n+    public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n+            final SyncProfile<?, ?> profile,\n+            final SyncDelta delta,\n+            final T subject,\n+            final K subjectMod) throws JobExecutionException {\n+        \n+        if (subjectMod instanceof UserMod) {\n+            String modPassword = ((UserMod)subjectMod).getPassword();\n+            parseEncodedPassword(modPassword);\n+        }\n+        \n+        return delta;\n+    }\n+    \n+    private void parseEncodedPassword(String password) {\n+        if (password != null && password.startsWith(\"{\")) {\n+            int closingBracketIndex = password.indexOf('}');\n+            String digest = password.substring(1, password.indexOf('}'));\n+            if (digest != null) {\n+                digest = digest.toUpperCase();\n+            }\n+            try {\n+                encodedPassword = password.substring(closingBracketIndex + 1);\n+                cipher = CipherAlgorithm.valueOf(digest);\n+            } catch (IllegalArgumentException e) {\n+                LOG.error(\"Cipher algorithm not allowed: {}\", digest, e);\n+                encodedPassword = null;\n+            }\n+        }\n+    }\n \n     @Transactional(readOnly = true)\n     @Override"}]}