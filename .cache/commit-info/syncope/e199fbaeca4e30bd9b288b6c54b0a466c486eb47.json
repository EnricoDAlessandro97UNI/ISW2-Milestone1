{"sha":"e199fbaeca4e30bd9b288b6c54b0a466c486eb47","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUxOTlmYmFlY2E0ZTMwYmQ5YjI4OGI2YzU0YjBhNDY2YzQ4NmViNDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-13T14:59:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-13T15:16:51Z"},"message":"[SYNCOPE-652] More test improvements","tree":{"sha":"dedafad6a480496ff45071fac8721feedf6067a9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dedafad6a480496ff45071fac8721feedf6067a9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e199fbaeca4e30bd9b288b6c54b0a466c486eb47","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e199fbaeca4e30bd9b288b6c54b0a466c486eb47","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e199fbaeca4e30bd9b288b6c54b0a466c486eb47","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e199fbaeca4e30bd9b288b6c54b0a466c486eb47/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"554b7259f23b1172453f3a78278109b15bc3d992","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/554b7259f23b1172453f3a78278109b15bc3d992","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/554b7259f23b1172453f3a78278109b15bc3d992"}],"stats":{"total":16,"additions":9,"deletions":7},"files":[{"sha":"7bdd7c5066c384cbd37fd2a791dac3e5831b903a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractTaskITCase.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e199fbaeca4e30bd9b288b6c54b0a466c486eb47/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e199fbaeca4e30bd9b288b6c54b0a466c486eb47/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java?ref=e199fbaeca4e30bd9b288b6c54b0a466c486eb47","patch":"@@ -50,8 +50,6 @@ public abstract class AbstractTaskITCase extends AbstractITCase {\n \n     protected static class ThreadExec implements Callable<TaskExecTO> {\n \n-        private final AbstractTaskITCase test;\n-\n         private final TaskService taskService;\n \n         private final Long taskKey;\n@@ -60,10 +58,9 @@ protected static class ThreadExec implements Callable<TaskExecTO> {\n \n         private final boolean dryRun;\n \n-        public ThreadExec(final AbstractTaskITCase test, final TaskService taskService, final Long taskKey,\n-                final int maxWaitSeconds, final boolean dryRun) {\n+        public ThreadExec(\n+                final TaskService taskService, final Long taskKey, final int maxWaitSeconds, final boolean dryRun) {\n \n-            this.test = test;\n             this.taskService = taskService;\n             this.taskKey = taskKey;\n             this.maxWaitSeconds = maxWaitSeconds;\n@@ -72,7 +69,7 @@ public ThreadExec(final AbstractTaskITCase test, final TaskService taskService,\n \n         @Override\n         public TaskExecTO call() throws Exception {\n-            return test.execProvisioningTask(taskService, taskKey, maxWaitSeconds, dryRun);\n+            return execProvisioningTask(taskService, taskKey, maxWaitSeconds, dryRun);\n         }\n     }\n \n@@ -132,7 +129,12 @@ protected Map<Long, TaskExecTO> execProvisioningTasks(final TaskService taskServ\n         List<Future<TaskExecTO>> futures = new ArrayList<>();\n \n         for (Long key : taskKeys) {\n-            futures.add(service.submit(new ThreadExec(this, taskService, key, maxWaitSeconds, dryRun)));\n+            futures.add(service.submit(new ThreadExec(taskService, key, maxWaitSeconds, dryRun)));\n+            // avoid flooding the test server\n+            try {\n+                Thread.sleep(2000);\n+            } catch (InterruptedException e) {\n+            }\n         }\n \n         Map<Long, TaskExecTO> res = new HashMap<>();"}]}