{"sha":"6d6a9203f22dc8a71358d639921ed064c6f97d74","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkNmE5MjAzZjIyZGM4YTcxMzU4ZDYzOTkyMWVkMDY0YzZmOTdkNzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-11T11:04:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-11T11:04:38Z"},"message":"Removing a few (more) code scanning alerts","tree":{"sha":"dbb6de0e6960502320b6b88415e51150b23e6908","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dbb6de0e6960502320b6b88415e51150b23e6908"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d6a9203f22dc8a71358d639921ed064c6f97d74","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d6a9203f22dc8a71358d639921ed064c6f97d74","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d6a9203f22dc8a71358d639921ed064c6f97d74","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d6a9203f22dc8a71358d639921ed064c6f97d74/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5d4f5cc1288bb557314427c52730351f23c4a412","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d4f5cc1288bb557314427c52730351f23c4a412","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d4f5cc1288bb557314427c52730351f23c4a412"}],"stats":{"total":159,"additions":84,"deletions":75},"files":[{"sha":"663219d45acbcc5af2b4d87a035828ac141f1a72","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/widgets/RemediationsWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -50,7 +50,7 @@ public class RemediationsWidget extends ExtAlertWidget<RemediationTO> {\n     private final List<RemediationTO> lastRemediations = new ArrayList<>();\n \n     public RemediationsWidget(final String id, final PageReference pageRef) {\n-        super(id);\n+        super(id, pageRef);\n         setOutputMarkupId(true);\n \n         latestAlertsList.add(new IndicatorAjaxTimerBehavior(Duration.of(30, ChronoUnit.SECONDS)) {"},{"sha":"b90a7ecd58b72ef4f663601144915cc305fd260b","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPushWizardBuilder.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -103,19 +103,17 @@ public Details(final CSVPushSpec spec) {\n         }\n     }\n \n-    public class PushTask extends WizardStep {\n+    public static class PushTask extends WizardStep {\n \n         private static final long serialVersionUID = -2747583614435078452L;\n \n-        private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n-\n         private final IModel<List<String>> propActions = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 4659376149825914247L;\n \n             @Override\n             protected List<String> load() {\n-                return implRestClient.list(IdMImplementationType.PROPAGATION_ACTIONS).stream().\n+                return ImplementationRestClient.list(IdMImplementationType.PROPAGATION_ACTIONS).stream().\n                         map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n@@ -126,7 +124,7 @@ protected List<String> load() {\n \n             @Override\n             protected List<String> load() {\n-                return implRestClient.list(IdMImplementationType.PUSH_ACTIONS).stream().\n+                return ImplementationRestClient.list(IdMImplementationType.PUSH_ACTIONS).stream().\n                         map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };"},{"sha":"f420ad82ff230dbcaf7dd66ed6e9ef3cb0f1f6ee","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -31,7 +31,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.wicket.request.Request;\n-import org.apache.wicket.request.Response;\n import org.apache.wicket.util.cookies.CookieDefaults;\n import org.apache.wicket.util.cookies.CookieUtils;\n import org.slf4j.Logger;\n@@ -125,7 +124,7 @@ public static List<String> getList(final Request request, final String key) {\n         return result;\n     }\n \n-    public static void set(final Request request, final Response response, final Map<String, List<String>> prefs) {\n+    public static void set(final Map<String, List<String>> prefs) {\n         Map<String, String> current = new HashMap<>();\n \n         String prefString = COOKIE_UTILS.load(COOKIE_NAME);\n@@ -165,9 +164,8 @@ public static void setList(final String key, final List<String> values) {\n         set(key, StringUtils.join(values, \";\"));\n     }\n \n-    public static void setList(\n-            final Request request, final Response response, final Map<String, List<String>> prefs) {\n-        set(request, response, prefs);\n+    public static void setList(final Map<String, List<String>> prefs) {\n+        set(prefs);\n     }\n \n     private PreferenceManager() {"},{"sha":"c28126adad25d78e166544883c479b390d147423","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -193,7 +193,13 @@ protected void init() {\n                 ? null\n                 : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n \n-        maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n+        try {\n+            maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"Invalid value provided for 'maxWaitTimeOnApplyChanges': {}\",\n+                    props.getProperty(\"maxWaitTimeOnApplyChanges\"));\n+            maxWaitTime = 30;\n+        }\n \n         // Resource connections check thread pool size\n         try {"},{"sha":"c0b0e1ddf3ec6393f818fb347d784b9a3570c679","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DashboardExtensionsPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -46,8 +46,8 @@ public DashboardExtensionsPanel(\n \n         List<BaseExtWidget> instances = new ArrayList<>();\n \n-        for (final Class<? extends BaseExtWidget> clazz : extWidgetClasses) {\n-            final Constructor<? extends BaseExtWidget> constructor =\n+        extWidgetClasses.forEach(clazz -> {\n+            Constructor<? extends BaseExtWidget> constructor =\n                     ClassUtils.getConstructorIfAvailable(clazz, String.class, PageReference.class);\n             if (constructor == null) {\n                 LOG.error(\"Could not find required construtor in {}, ignoring\", clazz);\n@@ -58,7 +58,7 @@ public DashboardExtensionsPanel(\n                     LOG.error(\"While creating instance of {}\", clazz, e);\n                 }\n             }\n-        }\n+        });\n \n         ListView<BaseExtWidget> widgets = new ListView<BaseExtWidget>(\"widgets\", instances) {\n "},{"sha":"19d95fead64e8c6659cf3c5b1b976bb203b8bae0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -120,7 +120,7 @@ protected List<String> load() {\n         // remove old schemas from selected lists\n         selectedPlainSchemas.retainAll(pSchemaNames);\n         selectedDerSchemas.retainAll(dSchemaNames);\n-        \n+\n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n@@ -162,12 +162,11 @@ public void onSubmit(final AjaxRequestTarget target) {\n             SyncopeConsoleSession.get().error(getString(\"tooManySelections\"));\n             onError(target);\n         } else {\n-            final Map<String, List<String>> prefs = new HashMap<>();\n-\n+            Map<String, List<String>> prefs = new HashMap<>();\n             prefs.put(DisplayAttributesModalPanel.getPrefDetailView(type), selectedDetails);\n             prefs.put(DisplayAttributesModalPanel.getPrefPlainAttributeView(type), selectedPlainSchemas);\n             prefs.put(DisplayAttributesModalPanel.getPrefDerivedAttributeView(type), selectedDerSchemas);\n-            PreferenceManager.setList(getRequest(), getResponse(), prefs);\n+            PreferenceManager.setList(prefs);\n \n             SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);"},{"sha":"89642079f75d2329d60059c491267a0b68170498","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/AnyByRealmWidget.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -83,8 +83,6 @@ private Bar build(\n             final String anyType2,\n             final Map<String, Integer> any2ByRealm) {\n \n-        List<String> labels = new ArrayList<>();\n-\n         List<Integer> userValues = new ArrayList<>();\n         List<Integer> groupValues = new ArrayList<>();\n         List<Integer> any1Values = new ArrayList<>();"},{"sha":"1274bc6d8adb2162eb4e9a634a1d404c78b8a380","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/BaseExtWidget.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FBaseExtWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FBaseExtWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FBaseExtWidget.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -30,5 +30,4 @@ public BaseExtWidget(final String id, final PageReference pageRef) {\n         super(id);\n         this.pageRef = pageRef;\n     }\n-\n }"},{"sha":"3d354899165f9fd5ff68796f2f3ee85cc38837d1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ExtAlertWidget.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FExtAlertWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FExtAlertWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FExtAlertWidget.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -19,12 +19,16 @@\n package org.apache.syncope.client.console.widgets;\n \n import java.io.Serializable;\n+import org.apache.wicket.PageReference;\n \n public abstract class ExtAlertWidget<T extends Serializable> extends AlertWidget<T> {\n \n     private static final long serialVersionUID = -5622060468533516192L;\n \n-    public ExtAlertWidget(final String id) {\n+    protected final PageReference pageRef;\n+\n+    public ExtAlertWidget(final String id, final PageReference pageRef) {\n         super(id);\n+        this.pageRef = pageRef;\n     }\n }"},{"sha":"cd3c06b24347d7a1ff01946474c56bcf1daaadac","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -189,9 +189,11 @@ protected void init() {\n                 }\n             }\n             FileAlterationObserver observer = existsEnduserDir\n-                    ? new FileAlterationObserver(enduserDir,\n+                    ? new FileAlterationObserver(\n+                            enduserDir,\n                             pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE))\n-                    : new FileAlterationObserver(getClass().getResource('/' + CUSTOM_FORM_ATTRIBUTES_FILE).getFile(),\n+                    : new FileAlterationObserver(\n+                            SyncopeWebApplication.class.getResource('/' + CUSTOM_FORM_ATTRIBUTES_FILE).getFile(),\n                             pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE));\n \n             customFormAttributesMonitor = new FileAlterationMonitor(5000);"},{"sha":"b768362bc6aacaec0e0a0884b401d79447385ce3","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -103,7 +103,7 @@ protected WizardModel buildModelSteps(final AnyWrapper<UserTO> modelObject, fina\n         }\n \n         if (formLayoutInfo.isGroups()) {\n-            wizardModel.add(new Groups(modelObject, mode == AjaxWizard.Mode.TEMPLATE));\n+            wizardModel.add(new Groups(modelObject));\n         }\n \n         // attributes panel steps"},{"sha":"4b9d70bce3ae172a8843e3f21f56ea508cc72af6","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/Groups.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -42,7 +42,7 @@ public class Groups extends AbstractGroups {\n \n     private final EnduserGroupsModel groupsModel;\n \n-    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n+    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject) {\n         super(modelObject);\n         this.groupsModel = new EnduserGroupsModel();\n "},{"sha":"6f356bf25826a6b13ca831ac8553091b184d349a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/search/ConnObjectTOFiqlSearchConditionBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FConnObjectTOFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FConnObjectTOFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FConnObjectTOFiqlSearchConditionBuilder.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -39,7 +39,7 @@ public ConnObjectTOProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }\n \n-    protected class Builder extends AbstractFiqlSearchConditionBuilder.Builder<\n+    protected static class Builder extends AbstractFiqlSearchConditionBuilder.Builder<\n         ConnObjectTOProperty, ConnObjectTOPartialCondition, ConnObjectTOCompleteCondition>\n             implements ConnObjectTOProperty, ConnObjectTOPartialCondition, ConnObjectTOCompleteCondition {\n "},{"sha":"d64509a1dd05825c1e132de895c826120152c7c5","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/batch/BatchPayloadParser.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadParser.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -145,8 +145,12 @@ private static void consumeHeaders(final List<BatchPayloadLine> bodyPart, final\n                     }\n                 } else if (item instanceof BatchResponseItem) {\n                     BatchResponseItem bri = BatchResponseItem.class.cast(item);\n-                    bri.setStatus(Integer.valueOf(StringUtils.substringBefore(\n-                            StringUtils.substringAfter(currentLine.toString(), \" \"), \" \").trim()));\n+                    try {\n+                        bri.setStatus(Integer.valueOf(StringUtils.substringBefore(\n+                                StringUtils.substringAfter(currentLine.toString(), \" \"), \" \").trim()));\n+                    } catch (NumberFormatException e) {\n+                        LOG.error(\"Invalid value found in response for HTTP status\", e);\n+                    }\n                 }\n             } else {\n                 Matcher headerMatcher = PATTERN_HEADER_LINE.matcher(currentLine.toString());"},{"sha":"e01fad4d95724a53de6c9be296ebeec47f010b52","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/JPAWAConfigEntry.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -18,28 +18,28 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.auth;\n \n-import org.apache.syncope.core.persistence.api.entity.auth.WAConfigEntry;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractProvidedKeyEntity;\n-\n+import java.util.ArrayList;\n+import java.util.List;\n import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.JoinColumn;\n import javax.persistence.Table;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.auth.WAConfigEntry;\n+import org.apache.syncope.core.persistence.jpa.entity.AbstractProvidedKeyEntity;\n \n @Entity\n @Table(name = JPAWAConfigEntry.TABLE)\n public class JPAWAConfigEntry extends AbstractProvidedKeyEntity implements WAConfigEntry {\n+\n     public static final String TABLE = \"ConfigEntry\";\n \n     private static final long serialVersionUID = 6422422526695279794L;\n \n     @ElementCollection\n-    @CollectionTable(name = TABLE + \"Values\", joinColumns = @JoinColumn(name = \"id\"))\n+    @CollectionTable(name = TABLE + \"Values\", joinColumns =\n+            @JoinColumn(name = \"id\"))\n     @Column(nullable = false)\n     private List<String> values = new ArrayList<>();\n \n@@ -48,6 +48,7 @@ public List<String> getValues() {\n         return values;\n     }\n \n+    @Override\n     public void setValues(final List<String> values) {\n         this.values = values;\n     }"},{"sha":"68d498e68ede7310ab73f24ddc74d72769005469","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/BooleanValueHandler.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -47,12 +47,12 @@ public static BooleanValueHandler getInstance() {\n     @Deprecated\n     public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {\n         DBDictionary dict = vm.getMappingRepository().getDBDictionary();\n-        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict)\n-            .filter(DBDictionary::delimitAll).isPresent());\n-        return map(vm, colName, io, adapt);\n+        DBIdentifier colName = DBIdentifier.newColumn(name, Optional.ofNullable(dict).\n+                filter(DBDictionary::delimitAll).isPresent());\n+        return map(colName, io, adapt);\n     }\n \n-    public static Column[] map(final ValueMapping vm, final DBIdentifier name, final ColumnIO io, final boolean adapt) {\n+    public static Column[] map(final DBIdentifier name, final ColumnIO io, final boolean adapt) {\n         Column col = new Column();\n         col.setIdentifier(name);\n         col.setJavaType(JavaTypes.INT);"},{"sha":"33fb80f79ae62f3c19f46daed9b5aeab50208f35","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -136,7 +136,7 @@ private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit org\n             return List.of();\n         }\n \n-        RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), profile.getTask(), orgUnit);\n+        RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), orgUnit);\n         if (realmTO.getFullPath() == null) {\n             if (realmTO.getParent() == null) {\n                 realmTO.setParent(profile.getTask().getDestinationRealm().getFullPath());\n@@ -175,7 +175,7 @@ private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit\n             return List.of();\n         }\n \n-        RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), profile.getTask(), orgUnit);\n+        RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), orgUnit);\n         if (realmTO.getFullPath() == null) {\n             if (realmTO.getParent() == null) {\n                 realmTO.setParent(profile.getTask().getDestinationRealm().getFullPath());"},{"sha":"aad746060f7cf157bf44acb7e31b8b90627e4fb0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -202,7 +202,7 @@ public <C extends AnyCR> C getAnyCR(\n         return anyCR;\n     }\n \n-    public RealmTO getRealmTO(final ConnectorObject obj, final PullTask task, final OrgUnit orgUnit) {\n+    public RealmTO getRealmTO(final ConnectorObject obj, final OrgUnit orgUnit) {\n         RealmTO realmTO = new RealmTO();\n \n         MappingUtils.getPullItems(orgUnit.getItems().stream()).forEach(item"},{"sha":"530d74f3ed56e56967fb7ecfe2b5c14637d1d4f6","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/widgets/UserRequestFormsWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -51,7 +51,7 @@ public class UserRequestFormsWidget extends ExtAlertWidget<UserRequestForm> {\n     private final List<UserRequestForm> lastForms = new ArrayList<>();\n \n     public UserRequestFormsWidget(final String id, final PageReference pageRef) {\n-        super(id);\n+        super(id, pageRef);\n         setOutputMarkupId(true);\n \n         latestAlertsList.add(new IndicatorAjaxTimerBehavior(Duration.of(30, ChronoUnit.SECONDS)) {"},{"sha":"44b112aaedc225877dba4aa0ff5a2632b1b757a7","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableRuntimeUtils.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -121,9 +121,7 @@ public static ProcessDefinition getLatestProcDefByKey(final DomainProcessEngine\n         }\n     }\n \n-    public static Set<String> getPerformedTasks(\n-            final DomainProcessEngine engine, final String procInstId, final User user) {\n-\n+    public static Set<String> getPerformedTasks(final DomainProcessEngine engine, final String procInstId) {\n         return engine.getHistoryService().createHistoricActivityInstanceQuery().\n                 executionId(procInstId).\n                 list().stream()."},{"sha":"5cbbf91e2be27eade9f88a898a426034d33b7a35","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -643,7 +643,7 @@ public UserWorkflowResult<UserUR> submitForm(final UserRequestForm form) {\n             throw new NotFoundException(\"User with key \" + getUserKey(procInstID));\n         }\n \n-        Set<String> preTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID, user);\n+        Set<String> preTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID);\n \n         engine.getRuntimeService().setVariable(procInstID, FlowableRuntimeUtils.TASK, \"submit\");\n         engine.getRuntimeService().setVariable(procInstID, FlowableRuntimeUtils.FORM_SUBMITTER, authUser);\n@@ -653,7 +653,7 @@ public UserWorkflowResult<UserUR> submitForm(final UserRequestForm form) {\n         } catch (FlowableException e) {\n             FlowableRuntimeUtils.throwException(e, \"While submitting form for task \" + form.getTaskId());\n         }\n-        Set<String> postTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID, user);\n+        Set<String> postTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID);\n         postTasks.removeAll(preTasks);\n         postTasks.add(form.getTaskId());\n         if (procInstID.equals(FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey()))) {"},{"sha":"1a4702823ff68357ce418cc7901e91d2539c296b","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserWorkflowAdapter.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -160,7 +160,7 @@ protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n                 propByRes,\n                 propByLinkedAccount);\n \n-        Set<String> tasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInst.getProcessInstanceId(), user);\n+        Set<String> tasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInst.getProcessInstanceId());\n \n         return new UserWorkflowResult<>(\n                 Pair.of(created.getKey(), propagateEnable),\n@@ -174,7 +174,7 @@ protected Set<String> doExecuteNextTask(\n             final User user,\n             final Map<String, Object> moreVariables) {\n \n-        Set<String> preTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID, user);\n+        Set<String> preTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID);\n \n         Map<String, Object> variables = new HashMap<>();\n         variables.put(FlowableRuntimeUtils.WF_EXECUTOR, AuthContextUtils.getUsername());\n@@ -198,7 +198,7 @@ protected Set<String> doExecuteNextTask(\n             LOG.warn(\"Expected a single task, found {}\", tasks.size());\n         }\n \n-        Set<String> postTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID, user);\n+        Set<String> postTasks = FlowableRuntimeUtils.getPerformedTasks(engine, procInstID);\n         postTasks.removeAll(preTasks);\n         if (task != null) {\n             postTasks.add(task);"},{"sha":"bcc2afdf9a5190004429f65cbed61b4b20341c01","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfGeneralPanel.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -27,14 +27,16 @@\n import org.apache.syncope.common.lib.scim.SCIMGeneralConf;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SCIMConfGeneralPanel extends SCIMConfTabPanel {\n \n     private static final long serialVersionUID = 2765863608539154422L;\n \n-    public SCIMConfGeneralPanel(\n-            final String id,\n-            final SCIMConf scimConf) {\n+    private static final Logger LOG = LoggerFactory.getLogger(SCIMConfGeneralPanel.class);\n+\n+    public SCIMConfGeneralPanel(final String id, final SCIMConf scimConf) {\n         super(id, scimConf);\n \n         final SCIMGeneralConf scimGeneralConf = scimConf.getGeneralConf();\n@@ -126,9 +128,12 @@ public String getObject() {\n \n                     @Override\n                     public void setObject(final String object) {\n-                        scimGeneralConf.setFilterMaxResults(Integer.parseInt(object));\n+                        try {\n+                            scimGeneralConf.setFilterMaxResults(Integer.parseInt(object));\n+                        } catch (NumberFormatException e) {\n+                            LOG.error(\"Invalid value provided for 'filterMaxResults': {}\", object, e);\n+                        }\n                     }\n-\n                 });\n         filterMaxResultsPanel.setChoices(plainSchemaNames);\n "},{"sha":"41dba1852e60ef663ada15880febe2d90b3a558d","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/service/MailTemplateManagerService.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FMailTemplateManagerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FMailTemplateManagerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FMailTemplateManagerService.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -60,9 +60,4 @@ public Object getFormat(final String key, final MailTemplateFormat format) {\n     public void setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n         service.setFormat(key, format, templateIn);\n     }\n-\n-    public static boolean removeFormat(final String key, final MailTemplateFormat format) {\n-        return false;\n-    }\n-\n }"},{"sha":"faff3d35ed6352a4f67ae670da299724eb048577","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/view/ResourceExplorerTopComponent.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6a9203f22dc8a71358d639921ed064c6f97d74/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6a9203f22dc8a71358d639921ed064c6f97d74/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java?ref=6d6a9203f22dc8a71358d639921ed064c6f97d74","patch":"@@ -95,7 +95,7 @@ public final class ResourceExplorerTopComponent extends TopComponent {\n \n     private static final long serialVersionUID = -1643737786852621861L;\n \n-    public static final Logger LOG = Logger.getLogger(\"ResourceExplorerTopComponent\");\n+    private static final Logger LOG = Logger.getLogger(ResourceExplorerTopComponent.class.getSimpleName());\n \n     private static final RequestProcessor REQUEST_PROCESSOR = new RequestProcessor(ResourceExplorerTopComponent.class);\n \n@@ -562,9 +562,10 @@ private void openMailEditor(final String name) throws IOException {\n                 mailTemplatesDir.mkdirs();\n             }\n             File file = new File(mailTemplatesDirName + name + '.' + type);\n-            FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8);\n-            fw.write(content);\n-            fw.flush();\n+            try (FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8)) {\n+                fw.write(content);\n+                fw.flush();\n+            }\n             FileObject fob = FileUtil.toFileObject(file.getAbsoluteFile());\n             fob.setAttribute(\"description\", \"TEXT\");\n             DataObject data = DataObject.find(fob);\n@@ -587,9 +588,10 @@ private void openScriptEditor(final String name, final String type) throws IOExc\n             groovyScriptsDir.mkdirs();\n         }\n         File file = new File(groovyScriptsDirName + name + \".groovy\");\n-        FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8);\n-        fw.write(node.getBody());\n-        fw.flush();\n+        try (FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8)) {\n+            fw.write(node.getBody());\n+            fw.flush();\n+        }\n         FileObject fob = FileUtil.toFileObject(file.getAbsoluteFile());\n         DataObject data = DataObject.find(fob);\n         data.getLookup().lookup(OpenCookie.class).open();\n@@ -631,11 +633,11 @@ private void openReportEditor(final String name) throws IOException {\n             if (!reportTemplatesDir.exists()) {\n                 reportTemplatesDir.mkdirs();\n             }\n-            File file = new File(reportTemplatesDirName + name + '.' + format.\n-                    name().toLowerCase());\n-            FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8);\n-            fw.write(content);\n-            fw.flush();\n+            File file = new File(reportTemplatesDirName + name + '.' + format.name().toLowerCase());\n+            try (FileWriter fw = new FileWriter(file, StandardCharsets.UTF_8)) {\n+                fw.write(content);\n+                fw.flush();\n+            }\n             FileObject fob = FileUtil.toFileObject(file.getAbsoluteFile());\n             DataObject data = DataObject.find(fob);\n             data.getLookup().lookup(OpenCookie.class).open();"}]}