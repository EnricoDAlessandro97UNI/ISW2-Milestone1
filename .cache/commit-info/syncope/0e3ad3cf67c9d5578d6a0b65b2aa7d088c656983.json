{"sha":"0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlM2FkM2NmNjdjOWQ1NTc4ZDZhMGI2NWIyYWE3ZDA4OGM2NTY5ODM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T15:45:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T15:45:48Z"},"message":"[SYNCOPE-700] Realms and entitlements","tree":{"sha":"18f4d03e6f849222c6e4081c52ada01934ca0ea2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/18f4d03e6f849222c6e4081c52ada01934ca0ea2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0c47ba1925f55d7c2d245aae20076cba82f3e16b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c47ba1925f55d7c2d245aae20076cba82f3e16b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0c47ba1925f55d7c2d245aae20076cba82f3e16b"}],"stats":{"total":268,"additions":223,"deletions":45},"files":[{"sha":"841c88adc7eedcf0af86056bfefc44dd44f626d6","filename":"src/main/asciidoc/reference-guide/concepts/concepts.adoc","status":"modified","additions":55,"deletions":39,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -24,10 +24,64 @@ include::typemanagement.adoc[]\n \n include::externalresources.adoc[]\n \n-=== Realms\n+include::realms.adoc[]\n+\n+include::entitlements.adoc[]\n \n === Roles\n \n+[TIP]\n+.Static and Dynamic Memberships\n+====\n+Users are _statically_ assigned to roles when assignments are explicitely set.\n+\n+With role definition, however, a condition can be expressed so that all matching users are _dynamic_ members of the\n+role.\n+====\n+\n+==== Delegated Administration\n+\n+The idea is that any user U assigned to a role R, which provides entitlements E~1~...E~n~ for realms Re~1~...Re~k~ can \n+exercise E~i~ on entities (users or groups, depending on the type of E~i~) under any Re~j~ or related sub-realms.\n+\n+About group membership and any relationships:\n+\n+* User U can be member of group G either if U and G are in the same realm, or G is in one of super-realms of the realm \n+of U\n+* Any object A~1~ can be in relationship with any object A~2~ either if A~1~ and A~2~ are in the same realm, or A~2~ is\n+in one of super-realms of the realm of A~1~\n+\n+The rationale behind such conditions is to allow the definition of common groups and any objects (to enter in \n+relationship with) at the topmost position in the realm tree, so that they can be shared by various realm sub-trees.\n+\n+.Authorization\n+====\n+Let's suppose that we want to implement the following scenario:\n+\n+****\n+Administrator A can create users under realm R~5~ but not under realm R~7~, administrator B can update users under \n+realm R~6~ and R~8~, administrator C can update groups under realm R~8~.\n+****\n+\n+As default, Syncope will have defined the following entitlements, among others:\n+\n+* `USER_CREATE`\n+* `USER_UPDATE`\n+* `GROUP_UPDATE`\n+\n+Here it follows how entitlements should be assigned (via roles) to administrators in order to implement the scenario \n+above:\n+\n+* A: `USER_CREATE` on R~5~\n+* B: `USER_UPDATE` on R~6~ and R~8~\n+* C: `GROUP_UPDATE` on R~8~\n+====\n+\n+[NOTE]\n+.Group Ownership\n+====\n+====\n+\n === Domains\n \n include::provisioning/provisioning.adoc[]\n@@ -72,41 +126,3 @@ include::provisioning/provisioning.adoc[]\n === Reports\n \n === Audit\n-\n-=== Delegated Administration\n-\n-The idea is that any user U assigned to a role R, which provides entitlements E~1~...E~n~ for realms Re~1~...Re~k~ can \n-exercise E~i~ on entities (users or groups, depending on the type of E~i~) under any Re~j~ or related sub-realms.\n-\n-About group membership and any relationships:\n-\n-* User U can be member of group G either if U and G are in the same realm, or G is in one of super-realms of the realm \n-of U\n-* Any object A~1~ can be in relationship with any object A~2~ either if A~1~ and A~2~ are in the same realm, or A~2~ is\n-in one of super-realms of the realm of A~1~\n-\n-The rationale behind such conditions is to allow the definition of common groups and any objects (to enter in \n-relationship with) at the topmost position in the realm tree, so that they can be shared by various realm sub-trees.\n-\n-.Authorization\n-====\n-Let's suppose that we want to implement the following scenario:\n-\n-****\n-Administrator A can create users under realm R~5~ but not under realm R~7~, administrator B can update users under \n-realm R~6~ and R~8~, administrator C can update groups under realm R~8~.\n-****\n-\n-As default, Syncope will have defined the following entitlements, among others:\n-\n-* `USER_CREATE`\n-* `USER_UPDATE`\n-* `GROUP_UPDATE`\n-\n-Here it follows how entitlements should be assigned (via roles) to administrators in order to implement the scenario \n-above:\n-\n-* A: `USER_CREATE` on R~5~\n-* B: `USER_UPDATE` on R~6~ and R~8~\n-* C: `GROUP_UPDATE` on R~8~\n-===="},{"sha":"832293a3db8e6d8729bbf4da66b1cec10f6b59be","filename":"src/main/asciidoc/reference-guide/concepts/entitlements.adoc","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fentitlements.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fentitlements.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fentitlements.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -0,0 +1,63 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+=== Entitlements\n+\n+Entitlements are basically strings describing the right to perform an operation.\n+\n+The components in the <<logic,logic layer>> are annotated with\n+http://projects.spring.io/spring-security/[Spring Security^] to implement declarative security; in the following\n+code snippet taken from\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java[RealmLogic^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java[RealmLogic^]\n+endif::[]\n+, the\n+http://docs.spring.io/spring-security/site/docs/4.1.x/reference/htmlsingle/#el-common-built-in[`hasRole` expression^]\n+is used together with one of the standard entitlements to restrict access only to users owning the `REALM_LIST`\n+entitlement.\n+\n+[source,java]\n+----\n+@PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_LIST + \"')\")\n+public List<RealmTO> list(final String fullPath) {\n+----\n+\n+Entitlements are granted via <<roles, roles>> to users, scoped under certain <<realms,realms>>, thus allowing\n+<<delegated-administration,delegated administration>>.\n+\n+[NOTE]\n+====\n+The set of available entitlements is\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/types/StandardEntitlement.java[statically defined^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/types/StandardEntitlement.java[statically defined^]\n+endif::[]\n+- even though <<extensions,extensions>> have the ability to\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion/ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/types/CamelEntitlement.java[enlarge the initial list^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/types/CamelEntitlement.java[enlarge the initial list^]\n+endif::[]\n+: this because entitlements are the pillars of internal security model and not meant for external usage.\n+===="},{"sha":"0fc4f9aaa88fcf5ded2913b40b54061d31902218","filename":"src/main/asciidoc/reference-guide/concepts/externalresources.adoc","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -73,7 +73,7 @@ Given a selected connector instance, the following information is required for d\n * generate random password flag - under some circumstances, password might be mandatory but no actual value could be\n available: with this flag set, a random value will be generated, compliant with the defined\n <<policies-password,password policy>> (if set)\n-* propagation actions - which <<propagationactions,actions>> shall be execute during propagation\n+* propagation actions - which <<propagationactions,actions>> shall be executed during propagation\n * trace levels - control how much tracing (including logs and execution details) shall be carried over during\n <<propagation,propagation>>, <<provisioning-pull,pull>> and <<provisioning-push,push>>\n * configuration - see <<connector-instance-details,above>>\n@@ -124,13 +124,15 @@ this mapping item must be necessarily available or not; compared to simple boole\n express complex statements like as 'be mandatory only if this other attribute value is above 14', and so on\n * remote key flag - should this item be considered as the key value on the identity store?\n * password flag (users only) - should this item be treated as password value?\n-* purpose - should this item be considered for <<propagation,propagation>> / <<push,push>>, <<pull,pull>>, both or none? \n+* purpose - should this item be considered for <<propagation,propagation>> / <<provisioning-push,push>>,\n+<<provisioning-pull,pull>>, both or none? \n \n Besides items, some more data needs to be specified for a complete mapping:\n \n * ConnId `objectClass` - which\n http://connid.tirasa.net/apidocs/1.4/org/identityconnectors/framework/common/objects/ObjectClass.html[object class^]\n-shall be used during communication with identity store\n+shall be used during communication with identity store; predefined are `\\\\__ACCOUNT__` for users and \n+`\\\\__GROUP__` for groups\n * Object link - only required by some connector bundles as\n https://connid.atlassian.net/wiki/display/BASE/LDAP[LDAP^] and\n https://connid.atlassian.net/wiki/pages/viewpage.action?pageId=360482[Active Directory^], generally specifies the model"},{"sha":"6444c180e208073945ff678a8d02f057d9dc0eca","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/pull.adoc","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -66,6 +66,19 @@ this condition. +\n ****\n ====\n \n+[[pull-templates]]\n+[TIP]\n+.Pull Templates\n+====\n+With every <<tasks-pull,pull task>> it is possible to add a template for each defined <<anytype,any type>>.\n+\n+As the values specified in the template are applied to pulled entities, this can be used as mechanism for setting\n+default values for attributes or external resources on entities.\n+\n+A typical use case is, when pulling users from the external resource `R`, to automatically assign `R` so that every\n+further modification in Apache Syncope to such users will be <<propagation,propagated>> back to `R`.\n+====\n+\n ===== PullActions\n \n The pull process can be decorated with custom logic to be invoked around task execution, by associating"},{"sha":"bd1ef66896ef9b2becae269cb14d260d20169b4a","filename":"src/main/asciidoc/reference-guide/concepts/realms.adoc","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -0,0 +1,72 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+=== Realms\n+\n+Realms define a hierarchical security domain tree, primarily meant for containing users, groups and\n+any objects.\n+\n+Each realm:\n+\n+. has a unique name and a parent realm - except for the pre-defined _root realm_, which is named `/`;\n+. is either leaf or root of a sub-tree of realms;\n+. is uniquely identified by the path from root realm, e.g. `/a/b/c` identifies the sub-realm `c` in the sub-tree rooted\n+at `b`, having in turn `a` as parent realm, directly under root realm;\n+. optionally refers to <<policies-account,account>> and <<policies-password,password>> policies: such policies are\n+enforced to all users, groups and any objects in the given realm and sub-realms, unless some sub-realms define their own.\n+\n+If users, groups and any objects are member of a realm then they are also member of parent realm: as a result, the root\n+realm contains everything, and other realms can be seen as containers that split up the total number of entities into\n+smaller pools.\n+\n+This has consequences on <<memberships-relationships,memberhips and relationships>>:\n+\n+* An user or an any object can be member of groups in the same realm or in one of sub-realms.\n+* An user or an any object can be in relation with any objects in the same realm or in one of sub-realms.\n+\n+Moreover, this partition allows fine-grained control over policy enforcement and, alongside with\n+<<entitlements,entitlements>> and <<roles,roles>>, contribute to implement\n+<<delegated-administration,delegated administration>>.\n+\n+[TIP]\n+.Logic Templates\n+====\n+As with <<pull-templates,pull>> it is also possible to add templates to a realm.\n+\n+The values specified in the template are applied to entities belonging to that realm, hence this can be used as\n+a mechanism for setting default values for attributes or external resources on entities.\n+====\n+\n+==== Realm Provisioning\n+<<provisioning>> can be enabled for realms: <<mapping,mapping>> information can be provided so that realms\n+are considered during <<propagation,propagation>>, <<provisioning-pull,pull>> and <<provisioning-push,push>>.\n+\n+Typical use cases for realm provisioning apply to modelization of organization-like structure on identity stores, as\n+with LDAP and Active Directory.\n+\n+==== LogicActions\n+\n+When users, groups or any objects get created, updated or deleted into a realm, custom logic can be invoked by\n+associating the given realm with one or more implementations of the\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/LogicActions.java[LogicActions^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/LogicActions.java[LogicActions^]\n+endif::[]\n+interface."},{"sha":"dcf9b425195d7a7d64c88336aa550cb1b5dd949c","filename":"src/main/asciidoc/reference-guide/concepts/usersgroupsandanyobjects.adoc","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc?ref=0e3ad3cf67c9d5578d6a0b65b2aa7d088c656983","patch":"@@ -55,12 +55,24 @@ Each user / group / any object will be able to hold values for all schemas:\n \n Moreover, users and any objects can be part of groups, or associated to other any objects.\n \n-[TIP]\n+[[memberships-relationships]]\n+[NOTE]\n .Memberships and Relationships\n ====\n-When an user or an any object is assigned to a group, a *_membership_* is defined; the members of a group benefit\n-of <<type-extensions,type extensions>>.\n+When an user or an any object is assigned to a group, a *_membership_* is defined; the (static) members of a group\n+benefit of <<type-extensions,type extensions>>.\n \n When an user or an any object is associated to another any object, a *_relationship_* is defined, of one of available\n <<relationshiptype,relationship types>>.\n ====\n+\n+[TIP]\n+.Static and Dynamic Memberships\n+====\n+Users and any objects are _statically_ assigned to groups when memberships are explicitely set.\n+\n+With group definition, however, a condition can be expressed so that all matching users and any objects are\n+_dynamic_ members of the group. +\n+Dynamic memberships have some limitations: for example, <<type-extensions,type extensions>> do not apply;\n+group-based provisioning is still effective.\n+===="}]}