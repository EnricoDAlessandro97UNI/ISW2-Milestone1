{"sha":"3ff021421d2d4a24d39cafc3f227063e941ac1a2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNmZjAyMTQyMWQyZDRhMjRkMzljYWZjM2YyMjcwNjNlOTQxYWMxYTI=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-06-30T08:19:12Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-06-30T08:19:36Z"},"message":"[SYNCOPE-1111] new any type is now visible without re-logging in","tree":{"sha":"c4349206bc1c0953f939583f19cb73b77bf38ec1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c4349206bc1c0953f939583f19cb73b77bf38ec1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3ff021421d2d4a24d39cafc3f227063e941ac1a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ff021421d2d4a24d39cafc3f227063e941ac1a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3ff021421d2d4a24d39cafc3f227063e941ac1a2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ff021421d2d4a24d39cafc3f227063e941ac1a2/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fedae9c765091c278026e84fa998c029578ab674","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fedae9c765091c278026e84fa998c029578ab674","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fedae9c765091c278026e84fa998c029578ab674"}],"stats":{"total":25,"additions":18,"deletions":7},"files":[{"sha":"af8295a6d4f89912e1e97a8ad50fa4423f57fd37","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=3ff021421d2d4a24d39cafc3f227063e941ac1a2","patch":"@@ -142,9 +142,7 @@ public String getJWT() {\n     }\n \n     private void afterAuthentication() {\n-        Pair<Map<String, Set<String>>, UserTO> self = client.self();\n-        auth = self.getLeft();\n-        selfTO = self.getRight();\n+        refreshAuthorization();\n     }\n \n     @Override\n@@ -276,6 +274,12 @@ public void refreshAuth() {\n         roles = null;\n     }\n \n+    public void refreshAuthorization() {\n+        Pair<Map<String, Set<String>>, UserTO> self = client.self();\n+        auth = self.getLeft();\n+        selfTO = self.getRight();\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     private <T> T getCachedService(final Class<T> serviceClass) {\n         T service;"},{"sha":"f5a523d0cf445bf9384ba4199beecd69ec04f967","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=3ff021421d2d4a24d39cafc3f227063e941ac1a2","patch":"@@ -155,7 +155,7 @@ public void onEvent(final IEvent<?> event) {\n             WizardModalPanel<?> modalPanel = newItemEvent.getModalPanel();\n \n             if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && modalPanel != null) {\n-                final IModel<Serializable> model = new CompoundPropertyModel<Serializable>(modalPanel.getItem());\n+                final IModel<Serializable> model = new CompoundPropertyModel<>(modalPanel.getItem());\n                 templateModal.setFormModel(model);\n                 templateModal.header(newItemEvent.getResourceModel());\n                 newItemEvent.getTarget().add(templateModal.setContent(modalPanel));"},{"sha":"2460d7fe0bfc5a735b6be0602294e6cb59255de7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=3ff021421d2d4a24d39cafc3f227063e941ac1a2","patch":"@@ -81,6 +81,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                 restClient.update(modelObject);\n                             }\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            SyncopeConsoleSession.get().refreshAuthorization();\n                             AnyTypesPanel.this.updateResultTable(target);\n                             modal.close(target);\n                         } catch (Exception e) {"},{"sha":"0d74c95adef978ffbd6ff73f1a325ddb3a03b62f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ff021421d2d4a24d39cafc3f227063e941ac1a2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=3ff021421d2d4a24d39cafc3f227063e941ac1a2","patch":"@@ -73,14 +73,12 @@ public abstract class Realm extends WizardMgtPanel<RealmTO> {\n \n     private final List<AnyTypeTO> anyTypeTOs;\n \n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n     protected final RealmWizardBuilder wizardBuilder;\n \n     public Realm(final String id, final RealmTO realmTO, final PageReference pageRef, final int selectedIndex) {\n         super(id, true);\n         this.realmTO = realmTO;\n-        this.anyTypeTOs = anyTypeRestClient.list();\n+        this.anyTypeTOs = new AnyTypeRestClient().list();\n \n         setPageRef(pageRef);\n "},{"sha":"35f417d950ee696b398de37878c5274e6a641a1d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ff021421d2d4a24d39cafc3f227063e941ac1a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ff021421d2d4a24d39cafc3f227063e941ac1a2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=3ff021421d2d4a24d39cafc3f227063e941ac1a2","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.Realms;\n import org.apache.syncope.client.console.pages.Types;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -81,6 +83,12 @@ public void create() {\n \n         TESTER.assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n         TESTER.assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n+\n+        // issue SYNCOPE-1111\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n+        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:4:link:title\",\n+                anyTypeTest);\n     }\n \n     @Test"}]}