{"sha":"39f8a0696c465a5d170c4f37a36ea093743a60d1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM5ZjhhMDY5NmM0NjVhNWQxNzBjNGYzN2EzNmVhMDkzNzQzYTYwZDE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-22T13:51:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-22T13:51:01Z"},"message":"[SYNCOPE-156] Preparing place for new console","tree":{"sha":"2ce35e23197dc3ebecb9992162819020e45187da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2ce35e23197dc3ebecb9992162819020e45187da"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/39f8a0696c465a5d170c4f37a36ea093743a60d1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/39f8a0696c465a5d170c4f37a36ea093743a60d1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/39f8a0696c465a5d170c4f37a36ea093743a60d1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/39f8a0696c465a5d170c4f37a36ea093743a60d1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0474098365c88ecd085b813bf3c2c29a1705dfff","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0474098365c88ecd085b813bf3c2c29a1705dfff","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0474098365c88ecd085b813bf3c2c29a1705dfff"}],"stats":{"total":9286,"additions":8940,"deletions":346},"files":[{"sha":"381fc655a69bf1dad5bd6b59903e1693ec74a36c","filename":"client/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"added","additions":173,"deletions":0,"changes":173,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,173 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.apache.wicket.request.Request;\n+import org.apache.wicket.request.Response;\n+import org.apache.wicket.util.cookies.CookieDefaults;\n+import org.apache.wicket.util.cookies.CookieUtils;\n+import org.apache.wicket.util.crypt.Base64;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.StringUtils;\n+\n+public class PreferenceManager {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(PreferenceManager.class);\n+\n+    private static final String PREFMAN_KEY = \"prefMan\";\n+\n+    private static final int ONE_YEAR_TIME = 60 * 60 * 24 * 365;\n+\n+    private static final TypeReference<Map<String, String>> MAP_TYPE_REF = new TypeReference<Map<String, String>>() {\n+    };\n+\n+    private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[] { 10, 25, 50 });\n+\n+    private final ObjectMapper mapper;\n+\n+    private final CookieUtils cookieUtils;\n+\n+    public PreferenceManager() {\n+        this.mapper = new ObjectMapper();\n+\n+        CookieDefaults cookieDefaults = new CookieDefaults();\n+        cookieDefaults.setMaxAge(ONE_YEAR_TIME);\n+        this.cookieUtils = new CookieUtils(cookieDefaults);\n+    }\n+\n+    public List<Integer> getPaginatorChoices() {\n+        return PAGINATOR_CHOICES;\n+    }\n+\n+    private Map<String, String> getPrefs(final String value) {\n+        Map<String, String> prefs;\n+        try {\n+            if (StringUtils.hasText(value)) {\n+                prefs = mapper.readValue(value, MAP_TYPE_REF);\n+            } else {\n+                throw new Exception(\"Invalid cookie value '\" + value + \"'\");\n+            }\n+        } catch (Exception e) {\n+            LOG.debug(\"No preferences found\", e);\n+            prefs = new HashMap<>();\n+        }\n+\n+        return prefs;\n+    }\n+\n+    private String setPrefs(final Map<String, String> prefs) throws IOException {\n+        StringWriter writer = new StringWriter();\n+        mapper.writeValue(writer, prefs);\n+\n+        return writer.toString();\n+    }\n+\n+    public String get(final Request request, final String key) {\n+        String result = null;\n+\n+        String prefString = cookieUtils.load(PREFMAN_KEY);\n+        if (prefString != null) {\n+            final Map<String, String> prefs = getPrefs(new String(Base64.decodeBase64(prefString.getBytes())));\n+            result = prefs.get(key);\n+        }\n+\n+        return result;\n+    }\n+\n+    public Integer getPaginatorRows(final Request request, final String key) {\n+        Integer result = getPaginatorChoices().get(0);\n+\n+        String value = get(request, key);\n+        if (value != null) {\n+            result = NumberUtils.toInt(value, 10);\n+        }\n+\n+        return result;\n+    }\n+\n+    public List<String> getList(final Request request, final String key) {\n+        final List<String> result = new ArrayList<>();\n+\n+        final String compound = get(request, key);\n+\n+        if (StringUtils.hasText(compound)) {\n+            String[] items = compound.split(\";\");\n+            result.addAll(Arrays.asList(items));\n+        }\n+\n+        return result;\n+    }\n+\n+    public void set(final Request request, final Response response, final Map<String, List<String>> prefs) {\n+        Map<String, String> current = new HashMap<>();\n+\n+        String prefString = cookieUtils.load(PREFMAN_KEY);\n+        if (prefString != null) {\n+            current.putAll(getPrefs(new String(Base64.decodeBase64(prefString.getBytes()))));\n+        }\n+\n+        // after retrieved previous setting in order to overwrite the key ...\n+        for (Map.Entry<String, List<String>> entry : prefs.entrySet()) {\n+            current.put(entry.getKey(), StringUtils.collectionToDelimitedString(entry.getValue(), \";\"));\n+        }\n+\n+        try {\n+            cookieUtils.save(PREFMAN_KEY, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n+        } catch (IOException e) {\n+            LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n+        }\n+    }\n+\n+    public void set(final Request request, final Response response, final String key, final String value) {\n+        String prefString = cookieUtils.load(PREFMAN_KEY);\n+\n+        final Map<String, String> current = new HashMap<>();\n+        if (prefString != null) {\n+            current.putAll(getPrefs(new String(Base64.decodeBase64(prefString.getBytes()))));\n+        }\n+\n+        // after retrieved previous setting in order to overwrite the key ...\n+        current.put(key, value);\n+\n+        try {\n+            cookieUtils.save(PREFMAN_KEY, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n+        } catch (IOException e) {\n+            LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n+        }\n+    }\n+\n+    public void setList(final Request request, final Response response, final String key, final List<String> values) {\n+        set(request, response, key, StringUtils.collectionToDelimitedString(values, \";\"));\n+    }\n+\n+    public void setList(final Request request, final Response response, final Map<String, List<String>> prefs) {\n+        set(request, response, prefs);\n+    }\n+}"},{"sha":"d3de8b298c4e3176f8dbd5acc1f2aa960cbe8633","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.pages.HomePage;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n+import org.apache.wicket.authroles.authentication.AuthenticatedWebApplication;\n+import org.apache.wicket.authroles.authentication.pages.SignInPage;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.spring.injection.annot.SpringComponentInjector;\n+\n+public class SyncopeConsoleApplication extends AuthenticatedWebApplication {\n+\n+    @Override\n+    protected void init() {\n+        super.init();\n+\n+        getComponentInstantiationListeners().add(new SpringComponentInjector(this));\n+        getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(getHomePage(), SyncopeConsoleSession.AUTHENTICATED);\n+\n+        mountPage(\"/home\", HomePage.class);\n+        mountPage(\"/login\", SignInPage.class);\n+    }\n+\n+    @Override\n+    protected Class<? extends AbstractAuthenticatedWebSession> getWebSessionClass() {\n+        return SyncopeConsoleSession.class;\n+    }\n+\n+    @Override\n+    protected Class<? extends WebPage> getSignInPageClass() {\n+        return SignInPage.class;\n+    }\n+\n+    @Override\n+    public Class<? extends Page> getHomePage() {\n+        return HomePage.class;\n+    }\n+\n+}"},{"sha":"b63a86aa48b23e49445d84c84f9e8b13c2e3bff9","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"added","additions":179,"deletions":0,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import java.text.DateFormat;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.ws.rs.core.EntityTag;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.to.SyncopeTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n+import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n+import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.request.Request;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.web.context.support.WebApplicationContextUtils;\n+\n+public class SyncopeConsoleSession extends AuthenticatedWebSession {\n+\n+    private static final long serialVersionUID = 747562246415852166L;\n+\n+    public static final List<Locale> SUPPORTED_LOCALES = Collections.unmodifiableList(Arrays.asList(\n+            new Locale[] {\n+                Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")\n+            }));\n+\n+    public static final String AUTHENTICATED = \"AUTHENTICATED\";\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleSession.class);\n+\n+    private final SyncopeClientFactoryBean clientFactory;\n+\n+    private final String version;\n+\n+    private final SyncopeTO syncopeTO;\n+\n+    private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<Class<?>, Object>());\n+\n+    private SyncopeClient client;\n+\n+    private UserTO selfTO;\n+\n+    private Map<String, Set<String>> auth;\n+\n+    private Roles roles;\n+\n+    public static SyncopeConsoleSession get() {\n+        return (SyncopeConsoleSession) Session.get();\n+    }\n+\n+    public SyncopeConsoleSession(final Request request) {\n+        super(request);\n+\n+        ApplicationContext ctx = WebApplicationContextUtils.\n+                getWebApplicationContext(WebApplication.get().getServletContext());\n+\n+        clientFactory = ctx.getBean(SyncopeClientFactoryBean.class).\n+                setContentType(SyncopeClientFactoryBean.ContentType.JSON);\n+        String anonymousUser = ctx.getBean(\"anonymousUser\", String.class);\n+        String anonymousKey = ctx.getBean(\"anonymousKey\", String.class);\n+\n+        version = ctx.getBean(\"version\", String.class);\n+\n+        syncopeTO = clientFactory.create(anonymousUser, anonymousKey).getService(SyncopeService.class).info();\n+    }\n+\n+    public String getVersion() {\n+        return version;\n+    }\n+\n+    public SyncopeTO getSyncopeTO() {\n+        return syncopeTO;\n+    }\n+\n+    @Override\n+    public boolean authenticate(final String username, final String password) {\n+        boolean authenticated = false;\n+\n+        try {\n+            client = clientFactory.create(username, password);\n+\n+            Pair<Map<String, Set<String>>, UserTO> self = client.self();\n+            auth = self.getKey();\n+            selfTO = self.getValue();\n+\n+            authenticated = true;\n+        } catch (Exception e) {\n+            LOG.error(\"Authentication failed\", e);\n+        }\n+\n+        return authenticated;\n+    }\n+\n+    public UserTO getSelfTO() {\n+        return selfTO;\n+    }\n+\n+    @Override\n+    public Roles getRoles() {\n+        if (isSignedIn() && roles == null && auth != null) {\n+            roles = new Roles(auth.keySet().toArray(new String[] {}));\n+            roles.add(AUTHENTICATED);\n+        }\n+\n+        return roles;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T> T getCachedService(final Class<T> serviceClass) {\n+        T service;\n+        if (services.containsKey(serviceClass)) {\n+            service = (T) services.get(serviceClass);\n+        } else {\n+            service = client.getService(serviceClass);\n+            services.put(serviceClass, service);\n+        }\n+\n+        return service;\n+    }\n+\n+    public <T> T getService(final Class<T> serviceClass) {\n+        return getCachedService(serviceClass);\n+    }\n+\n+    public <T> T getService(final String etag, final Class<T> serviceClass) {\n+        T serviceInstance = getCachedService(serviceClass);\n+        WebClient.client(serviceInstance).match(new EntityTag(etag), false);\n+\n+        return serviceInstance;\n+    }\n+\n+    public <T> T getService(final MediaType mediaType, final Class<T> serviceClass) {\n+        T service = client.getService(serviceClass);\n+        WebClient.client(service).type(mediaType).accept(mediaType);\n+\n+        return service;\n+    }\n+\n+    public <T> void resetClient(final Class<T> service) {\n+        T serviceInstance = getCachedService(service);\n+        WebClient.client(serviceInstance).reset();\n+    }\n+\n+    public DateFormat getDateFormat() {\n+        final Locale locale = getLocale() == null ? Locale.ENGLISH : getLocale();\n+\n+        return DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);\n+    }\n+}"},{"sha":"51e22bc5604ac597e71657c93b7283c5fe894fe0","filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/BinaryPreview.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface BinaryPreview {\n+\n+    public String[] mimeTypes() default {};\n+\n+}"},{"sha":"26b359fa17bf5c33571fc53f94372874004934c2","filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/ExtensionPanel.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface ExtensionPanel {\n+\n+    public String value();\n+\n+}"},{"sha":"799b24369ff97d12a10a807884698dc04d034162","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -36,7 +36,7 @@ public abstract class AbstractStatusBeanProvider extends SortableDataProvider<St\n     public AbstractStatusBeanProvider(final String sort) {\n         //Default sorting\n         setSort(sort, SortOrder.ASCENDING);\n-        comparator = new SortableDataProviderComparator<StatusBean>(this);\n+        comparator = new SortableDataProviderComparator<>(this);\n     }\n \n     @Override"},{"sha":"1e92898d760fbbaa10a94dfe4e7c3ff6ac71be74","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -43,7 +43,7 @@ public class StatusBean implements Serializable {\n \n     private boolean linked = true;\n \n-    public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n+    public StatusBean(final AbstractAttributableTO attributable, final String resourceName) {\n         this.attributableKey = attributable.getKey();\n         this.attributableName = attributable instanceof UserTO\n                 ? ((UserTO) attributable).getUsername() : ((GroupTO) attributable).getName();"},{"sha":"7a4a157676bd64dfefb91174dc86f1a84eefdc47","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -22,21 +22,18 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ImagePanel;\n-import org.apache.syncope.client.console.panels.StatusPanel;\n import org.apache.syncope.client.console.rest.AbstractSubjectRestClient;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.image.Image;\n@@ -48,9 +45,6 @@ public class StatusUtils implements Serializable {\n \n     private static final long serialVersionUID = 7238009174387184309L;\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(StatusUtils.class);\n \n     private static final String IMG_PREFIX = \"/img/statuses/\";\n@@ -170,42 +164,6 @@ public static StatusMod buildStatusMod(final Collection<StatusBean> statuses, fi\n         return statusMod;\n     }\n \n-    public static void update(\n-            final AbstractAttributableTO attributable,\n-            final StatusPanel statusPanel,\n-            final AjaxRequestTarget target,\n-            final Collection<String> resourcesToAdd,\n-            final Collection<String> resourcesToRemove) {\n-\n-        if (statusPanel != null) {\n-            Map<String, StatusBean> statusMap = new LinkedHashMap<>();\n-            for (StatusBean statusBean : statusPanel.getStatusBeans()) {\n-                statusMap.put(statusBean.getResourceName(), statusBean);\n-            }\n-\n-            for (String resourceName : resourcesToAdd) {\n-                if (!statusMap.keySet().contains(resourceName)) {\n-                    StatusBean statusBean;\n-                    if (statusPanel.getInitialStatusBeanMap().containsKey(resourceName)) {\n-                        statusBean = statusPanel.getInitialStatusBeanMap().get(resourceName);\n-                    } else {\n-                        statusBean = new StatusBean(attributable, resourceName);\n-                        statusBean.setStatus(Status.NOT_YET_SUBMITTED);\n-                    }\n-\n-                    statusMap.put(statusBean.getResourceName(), statusBean);\n-                }\n-            }\n-\n-            for (String resource : resourcesToRemove) {\n-                statusMap.remove(resource);\n-            }\n-\n-            statusPanel.updateStatusBeans(new ArrayList<>(statusMap.values()));\n-            target.add(statusPanel);\n-        }\n-    }\n-\n     public ConnObjectTO getConnObjectTO(\n             final Long attributableId, final String resourceName, final List<ConnObjectWrapper> objects) {\n "},{"sha":"6b0666eafbe7ad5a01eaf678ee564dab3af1d1c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ImplementationClassNamesLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -25,7 +25,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.panels.AbstractExtensionPanel;\n-import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.syncope.client.console.annotations.BinaryPreview;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;"},{"sha":"38408f9a9aedefc05d053009610580dd01deb65b","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractBasePage.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.pages;\n \n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.XMLRolesReader;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.ConfigurationRestClient;\n@@ -44,9 +43,6 @@ public class AbstractBasePage extends WebPage {\n \n     private static final long serialVersionUID = 8611724965544132636L;\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractBasePage.class);\n \n     protected static final String TASKS = \"Tasks\";\n@@ -61,9 +57,6 @@ public class AbstractBasePage extends WebPage {\n \n     protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     @SpringBean\n     protected UserRestClient userRestClient;\n \n@@ -118,8 +111,8 @@ public boolean isModalResult() {\n         return modalResult;\n     }\n \n-    public void setModalResult(final boolean operationResult) {\n-        this.modalResult = operationResult;\n+    public void setModalResult(final boolean modalResult) {\n+        this.modalResult = modalResult;\n     }\n \n     @Override"},{"sha":"6da298ab64dc630b160f552e1f77b2e3d61a669d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BaseModalPage.java","status":"modified","additions":30,"deletions":2,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,7 +18,12 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.syncope.client.console.commons.CloseOnESCBehavior;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n /**\n  * Syncope Modal Window.\n@@ -30,6 +35,29 @@ public abstract class BaseModalPage extends AbstractBasePage {\n     public BaseModalPage() {\n         super();\n \n-        add(new CloseOnESCBehavior(\"keyup\"));\n+        add(new AjaxEventBehavior(\"keyup\") {\n+\n+            private static final long serialVersionUID = -7133385027739964990L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                ModalWindow.closeCurrent(target);\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+\n+                attributes.getAjaxCallListeners().add(new AjaxCallListener() {\n+\n+                    private static final long serialVersionUID = 7160235486520935153L;\n+\n+                    @Override\n+                    public CharSequence getPrecondition(final Component aComponent) {\n+                        return \" if(Wicket.Event.keyCode(attrs.event) != 27){return false;}\";\n+                    }\n+                });\n+            }\n+        });\n     }\n }"},{"sha":"7547448d90ea400d66afeeb538ff42aa6addf818","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,21 +18,9 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.syncope.client.console.SyncopeApplication;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxIndicatorAware;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n-/**\n- * Syncope Wicket base-page.\n- */\n public class BasePage extends AbstractBasePage implements IAjaxIndicatorAware {\n \n     private static final long serialVersionUID = 1571997737305598502L;\n@@ -43,69 +31,11 @@ public BasePage() {\n \n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n-\n-        pageSetup();\n-    }\n-\n-    private void pageSetup() {\n-        ((SyncopeApplication) getApplication()).setupNavigationPanel(this, xmlRolesReader, true);\n-\n-        final String kind = getClass().getSimpleName().toLowerCase();\n-        final BookmarkablePageLink kindLink = (BookmarkablePageLink) get(kind);\n-        if (kindLink != null) {\n-            kindLink.add(new Behavior() {\n-\n-                private static final long serialVersionUID = 1469628524240283489L;\n-\n-                @Override\n-                public void onComponentTag(final Component component, final ComponentTag tag) {\n-                    tag.put(\"class\", kind);\n-                }\n-            });\n-\n-            Component kindIcon = kindLink.get(0);\n-            if (kindIcon != null) {\n-                kindIcon.add(new Behavior() {\n-\n-                    private static final long serialVersionUID = 1469628524240283489L;\n-\n-                    @Override\n-                    public void onComponentTag(final Component component, final ComponentTag tag) {\n-                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind + Constants.PNG_EXT);\n-                    }\n-                });\n-            }\n-        }\n-\n-        ((SyncopeApplication) getApplication()).setupEditProfileModal(this, userSelfRestClient);\n     }\n \n     @Override\n     public String getAjaxIndicatorMarkupId() {\n         return \"veil\";\n     }\n \n-    /**\n-     * Set a WindowClosedCallback for a ModalWindow instance.\n-     *\n-     * @param window window\n-     * @param container container\n-     */\n-    protected void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n-\n-        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                target.add(container);\n-                if (isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    setModalResult(false);\n-                }\n-            }\n-        });\n-    }\n }"},{"sha":"6fa6b16364a46f73cf81c2a08c54f601fe0b5a95","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/HomePage.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,16 +18,17 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n-/**\n- * Syncope Home-Page.\n- */\n public class HomePage extends BasePage {\n \n-    private static final long serialVersionUID = -6712990478380766293L;\n+    private static final long serialVersionUID = -1100228004207271270L;\n \n     public HomePage(final PageParameters parameters) {\n         super(parameters);\n+\n+        add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n     }\n }"},{"sha":"1b0ab30f9de0adff122760b027d01ef537a8732c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SignOut.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class SignOut extends WebPage {\n+\n+    private static final long serialVersionUID = -6497270741904509673L;\n+\n+    public SignOut(final PageParameters parameters) {\n+        super(parameters);\n+\n+        SyncopeConsoleSession.get().invalidate();\n+    }\n+\n+}"},{"sha":"87af2ffb2039176685ae9b17a860aaebcc93075e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractExtensionPanel.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,18 +18,13 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.commons.XMLRolesReader;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public abstract class AbstractExtensionPanel extends Panel {\n \n     private static final long serialVersionUID = 4627828052717627159L;\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     protected PageReference pageref;\n \n     public AbstractExtensionPanel(final String id, final PageReference pageref) {"},{"sha":"f203d92cb1ab5c87556255dfc385ecfd6ccabf52","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -67,8 +67,8 @@ protected void onEvent(final AjaxRequestTarget target) {\n         setOutputMarkupId(true);\n \n         // Add the additional cssClass and hide the element by default\n-        add(new AttributeModifier(\"class\", new Model<String>(CSS_CLASS + \" \" + this.additionalCSSClass)));\n-        add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0;\")));\n+        add(new AttributeModifier(\"class\", new Model<>(CSS_CLASS + \" \" + this.additionalCSSClass)));\n+        add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0;\")));\n     }\n \n     /**\n@@ -95,7 +95,7 @@ public void refresh(final AjaxRequestTarget target) {\n             // add the css classes to the notification panel, \n             // including the border css which represents the highest level of feedback\n             add(new AttributeModifier(\"class\",\n-                    new Model<String>(CSS_CLASS\n+                    new Model<>(CSS_CLASS\n                             + \" \" + additionalCSSClass\n                             + \" notificationpanel_border_\" + highestFeedbackLevel)));\n "},{"sha":"4b64b30dee4a4199594a82bdcc82b63c2638d91b","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractSubjectRestClient.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -29,18 +29,19 @@ public abstract class AbstractSubjectRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 1962529678091410544L;\n \n-    public abstract int count();\n+    public abstract int count(String realm);\n \n-    public abstract List<? extends AbstractAttributableTO> list(int page, int size, final SortParam<String> sort);\n+    public abstract List<? extends AbstractAttributableTO> list(\n+            String realm, int page, int size, final SortParam<String> sort);\n \n-    public abstract int searchCount(String fiql);\n+    public abstract int searchCount(String realm, String fiql);\n \n-    public abstract List<? extends AbstractAttributableTO> search(String fiql,\n-            int page, int size, final SortParam<String> sort);\n+    public abstract List<? extends AbstractAttributableTO> search(\n+            String realm, String fiql,            int page, int size, final SortParam<String> sort);\n \n-    public abstract ConnObjectTO getConnectorObject(String resourceName, Long id);\n+    public abstract ConnObjectTO getConnectorObject(String resourceName, Long key);\n \n-    public abstract AbstractAttributableTO delete(String etag, Long id);\n+    public abstract AbstractAttributableTO delete(String etag, Long key);\n \n     public abstract BulkActionResult bulkAction(BulkAction action);\n }"},{"sha":"b0a19aac192bebe5b481fbc1c0b1a75acdba9e78","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ApprovalRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -35,8 +35,8 @@ public List<WorkflowFormTO> getForms() {\n         return getService(UserWorkflowService.class).getForms();\n     }\n \n-    public WorkflowFormTO claimForm(final String taskId) {\n-        return getService(UserWorkflowService.class).claimForm(taskId);\n+    public WorkflowFormTO claimForm(final String taskKey) {\n+        return getService(UserWorkflowService.class).claimForm(taskKey);\n     }\n \n     public void submitForm(final WorkflowFormTO form) {"},{"sha":"17b2d4ffc662ffc16a08378f631fadebc45eaa9f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.Serializable;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -35,20 +35,16 @@ public abstract class BaseRestClient implements Serializable {\n \n     private static final long serialVersionUID = 1523999867826481989L;\n \n-    protected <T> T getAnonymousService(final Class<T> serviceClass) {\n-        return SyncopeSession.get().getAnonymousService(serviceClass);\n-    }\n-\n     protected <T> T getService(final Class<T> serviceClass) {\n-        return SyncopeSession.get().getService(serviceClass);\n+        return SyncopeConsoleSession.get().getService(serviceClass);\n     }\n \n     protected <T> T getService(final String etag, final Class<T> serviceClass) {\n-        return SyncopeSession.get().getService(etag, serviceClass);\n+        return SyncopeConsoleSession.get().getService(etag, serviceClass);\n     }\n \n     protected <T> void resetClient(final Class<T> serviceClass) {\n-        SyncopeSession.get().resetClient(serviceClass);\n+        SyncopeConsoleSession.get().resetClient(serviceClass);\n     }\n \n     protected String toOrderBy(final SortParam<String> sort) {"},{"sha":"cc1501c9a9c1d166e72e55f9e55fd1ec6193ddf0","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -21,7 +21,7 @@\n import java.util.Iterator;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -88,7 +88,7 @@ public void delete(final String key) {\n     }\n \n     public List<String> getMailTemplates() {\n-        return SyncopeSession.get().getSyncopeTO().getMailTemplates();\n+        return SyncopeConsoleSession.get().getSyncopeTO().getMailTemplates();\n     }\n \n     public Response dbExport() {"},{"sha":"a093dbd5137eca4c0788d64119135da117a9068d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -23,7 +23,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -49,7 +49,7 @@ public class ConnectorRestClient extends BaseRestClient {\n     public List<ConnInstanceTO> getAllConnectors() {\n         List<ConnInstanceTO> connectors = Collections.<ConnInstanceTO>emptyList();\n         try {\n-            connectors = getService(ConnectorService.class).list(SyncopeSession.get().getLocale().toString());\n+            connectors = getService(ConnectorService.class).list(SyncopeConsoleSession.get().getLocale().toString());\n         } catch (Exception e) {\n             LOG.error(\"While reading connectors\", e);\n         }\n@@ -98,7 +98,7 @@ public List<ConnBundleTO> getAllBundles() {\n         List<ConnBundleTO> bundles = Collections.<ConnBundleTO>emptyList();\n \n         try {\n-            bundles = getService(ConnectorService.class).getBundles(SyncopeSession.get().getLocale().toString());\n+            bundles = getService(ConnectorService.class).getBundles(SyncopeConsoleSession.get().getLocale().toString());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting connector bundles\", e);\n         }"},{"sha":"89d016c855960619ddccad652e76eb012dff8952","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":19,"deletions":14,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.util.Collections;\n import java.util.List;\n \n import javax.ws.rs.core.Response;\n@@ -47,27 +48,31 @@ public class GroupRestClient extends AbstractSubjectRestClient {\n     private static final long serialVersionUID = -8549081557283519638L;\n \n     @Override\n-    public int count() {\n-        return getService(GroupService.class).list(1, 1).getTotalCount();\n+    public int count(final String realm) {\n+        return getService(GroupService.class).list(Collections.singletonList(realm), 1, 1).getTotalCount();\n     }\n \n-    public List<GroupTO> list() {\n-        return getService(GroupService.class).list(1, 1000).getResult();\n+    public List<GroupTO> list(final String realm) {\n+        return getService(GroupService.class).list(Collections.singletonList(realm), 1, 1000).getResult();\n     }\n \n     @Override\n-    public List<GroupTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(GroupService.class).list(page, size, toOrderBy(sort)).getResult();\n+    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+        return getService(GroupService.class).\n+                list(Collections.singletonList(realm), page, size, toOrderBy(sort)).getResult();\n     }\n \n     @Override\n-    public int searchCount(final String fiql) {\n-        return getService(GroupService.class).search(fiql, 1, 1).getTotalCount();\n+    public int searchCount(final String realm, final String fiql) {\n+        return getService(GroupService.class).search(Collections.singletonList(realm), fiql, 1, 1).getTotalCount();\n     }\n \n     @Override\n-    public List<GroupTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(GroupService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+    public List<GroupTO> search(\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+\n+        return getService(GroupService.class).\n+                search(Collections.singletonList(realm), fiql, page, size, toOrderBy(sort)).getResult();\n     }\n \n     @Override\n@@ -80,8 +85,8 @@ public GroupTO create(final GroupTO groupTO) {\n         return response.readEntity(GroupTO.class);\n     }\n \n-    public GroupTO read(final Long id) {\n-        return getAnonymousService(GroupService.class).read(id);\n+    public GroupTO read(final Long key) {\n+        return getService(GroupService.class).read(key);\n     }\n \n     public GroupTO update(final String etag, final GroupMod groupMod) {\n@@ -95,11 +100,11 @@ public GroupTO update(final String etag, final GroupMod groupMod) {\n     }\n \n     @Override\n-    public GroupTO delete(final String etag, final Long id) {\n+    public GroupTO delete(final String etag, final Long key) {\n         GroupTO result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.delete(id).readEntity(GroupTO.class);\n+            result = service.delete(key).readEntity(GroupTO.class);\n             resetClient(GroupService.class);\n         }\n         return result;"},{"sha":"318edcb58f49e4308f1388b80986a2c816be4a2e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/LoggerRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -47,7 +47,7 @@ public List<AuditLoggerName> listAudits() {\n     }\n \n     public Map<String, Set<AuditLoggerName>> listAuditsByCategory() {\n-        Map<String, Set<AuditLoggerName>> result = new HashMap<String, Set<AuditLoggerName>>();\n+        Map<String, Set<AuditLoggerName>> result = new HashMap<>();\n         for (AuditLoggerName auditLoggerName : listAudits()) {\n             if (!result.containsKey(auditLoggerName.getCategory())) {\n                 result.put(auditLoggerName.getCategory(), new HashSet<AuditLoggerName>());"},{"sha":"b33e4dc881b23a4b1298cec14805fcac71e2bb68","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -32,8 +32,8 @@ public List<NotificationTO> getAllNotifications() {\n         return getService(NotificationService.class).list();\n     }\n \n-    public NotificationTO read(final Long id) {\n-        return getService(NotificationService.class).read(id);\n+    public NotificationTO read(final Long key) {\n+        return getService(NotificationService.class).read(key);\n     }\n \n     public void create(final NotificationTO notificationTO) {\n@@ -44,7 +44,7 @@ public void update(final NotificationTO notificationTO) {\n         getService(NotificationService.class).update(notificationTO.getKey(), notificationTO);\n     }\n \n-    public void delete(final Long id) {\n-        getService(NotificationService.class).delete(id);\n+    public void delete(final Long key) {\n+        getService(NotificationService.class).delete(key);\n     }\n }"},{"sha":"c1f019f066c88a1a8d8ed741bc4111a88875514c","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":9,"deletions":30,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -20,7 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n@@ -34,28 +34,18 @@ public class PolicyRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -1392090291817187902L;\n \n-    public <T extends AbstractPolicyTO<?>> T getGlobalPolicy(final PolicyType type) {\n+    public <T extends AbstractPolicyTO> T getPolicy(final Long key) {\n         T policy = null;\n         try {\n-            policy = getService(PolicyService.class).readGlobal(type);\n+            policy = getService(PolicyService.class).read(key);\n         } catch (Exception e) {\n-            LOG.warn(\"No global \" + type + \" policy found\", e);\n-        }\n-        return policy;\n-    }\n-\n-    public <T extends AbstractPolicyTO<?>> T getPolicy(final Long id) {\n-        T policy = null;\n-        try {\n-            policy = getService(PolicyService.class).read(id);\n-        } catch (Exception e) {\n-            LOG.warn(\"No policy found for id {}\", id, e);\n+            LOG.warn(\"No policy found for id {}\", key, e);\n         }\n         return policy;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractPolicyTO<?>> List<T> getPolicies(final PolicyType type, final boolean includeGlobal) {\n+    public <T extends AbstractPolicyTO> List<T> getPolicies(final PolicyType type) {\n         final List<T> res = new ArrayList<>();\n \n         try {\n@@ -64,37 +54,26 @@ public <T extends AbstractPolicyTO<?>> List<T> getPolicies(final PolicyType type\n             LOG.debug(\"No policy found\", ignore);\n         }\n \n-        if (includeGlobal) {\n-            try {\n-                T globalPolicy = getGlobalPolicy(type);\n-                if (globalPolicy != null) {\n-                    res.add(0, globalPolicy);\n-                }\n-            } catch (Exception ignore) {\n-                LOG.warn(\"No global policy found\", ignore);\n-            }\n-        }\n-\n         return res;\n     }\n \n-    public <T extends AbstractPolicyTO<?>> void createPolicy(final T policy) {\n+    public <T extends AbstractPolicyTO> void createPolicy(final T policy) {\n         getService(PolicyService.class).create(policy);\n     }\n \n-    public <T extends AbstractPolicyTO<?>> void updatePolicy(final T policy) {\n+    public <T extends AbstractPolicyTO> void updatePolicy(final T policy) {\n         getService(PolicyService.class).update(policy.getKey(), policy);\n     }\n \n-    public void delete(final Long id, final Class<? extends AbstractPolicyTO<?>> policyClass) {\n+    public void delete(final Long id, final Class<? extends AbstractPolicyTO> policyClass) {\n         getService(PolicyService.class).delete(id);\n     }\n \n     public List<String> getCorrelationRuleClasses() {\n         List<String> rules = null;\n \n         try {\n-            rules = SyncopeSession.get().getSyncopeTO().getSyncCorrelationRules();\n+            rules = SyncopeConsoleSession.get().getSyncopeTO().getSyncCorrelationRules();\n         } catch (Exception e) {\n             LOG.error(\"While getting all correlation rule classes\", e);\n         }"},{"sha":"ffce9c7896df35e84ae3e412557f6744de4fa71e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -35,7 +35,7 @@ public class ReportRestClient extends BaseRestClient implements ExecutionRestCli\n     private static final long serialVersionUID = 1644689667998953604L;\n \n     public List<String> getReportletConfClasses() {\n-        List<String> result = new ArrayList<String>();\n+        List<String> result = new ArrayList<>();\n \n         try {\n             List<ReportletConfClass> reportletConfClasses = getService(ReportService.class).getReportletConfClasses();"},{"sha":"87c9a3a77e2931723692dc1697d423484a7f9749","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n@@ -41,7 +41,7 @@ public class ResourceRestClient extends BaseRestClient {\n     private static final long serialVersionUID = -6898907679835668987L;\n \n     public List<String> getPropagationActionsClasses() {\n-        return SyncopeSession.get().getSyncopeTO().getPropagationActions();\n+        return SyncopeConsoleSession.get().getSyncopeTO().getPropagationActions();\n     }\n \n     public List<ResourceTO> getAll() {"},{"sha":"6934ef61f651a47e99b1fe1d3f367c5352bec2ba","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":15,"deletions":45,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -23,7 +23,9 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.ListIterator;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n@@ -89,13 +91,16 @@ public List<PlainSchemaTO> getSchemas(final AttributableType type) {\n     }\n \n     public List<String> getSchemaNames(final AttributableType attrType, final SchemaType schemaType) {\n-        final List<String> schemaNames = new ArrayList<>();\n+        List<String> schemaNames = new ArrayList<>();\n \n         try {\n-            final List<? extends AbstractSchemaTO> schemas = getSchemas(attrType, schemaType);\n-            for (AbstractSchemaTO schemaTO : schemas) {\n-                schemaNames.add(schemaTO.getKey());\n-            }\n+            CollectionUtils.collect(getSchemas(attrType, schemaType), new Transformer<AbstractSchemaTO, String>() {\n+\n+                @Override\n+                public String transform(final AbstractSchemaTO schemaTO) {\n+                    return schemaTO.getKey();\n+                }\n+            }, schemaNames);\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user schema names\", e);\n         }\n@@ -104,18 +109,7 @@ public List<String> getSchemaNames(final AttributableType attrType, final Schema\n     }\n \n     public List<String> getPlainSchemaNames(final AttributableType type) {\n-        final List<String> schemaNames = new ArrayList<>();\n-\n-        try {\n-            final List<PlainSchemaTO> schemas = getSchemas(type);\n-            for (PlainSchemaTO schemaTO : schemas) {\n-                schemaNames.add(schemaTO.getKey());\n-            }\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all user schema names\", e);\n-        }\n-\n-        return schemaNames;\n+        return getSchemaNames(type, SchemaType.PLAIN);\n     }\n \n     public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n@@ -131,19 +125,7 @@ public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n     }\n \n     public List<String> getDerSchemaNames(final AttributableType type) {\n-        final List<String> userDerSchemasNames = new ArrayList<>();\n-\n-        try {\n-            final List<DerSchemaTO> userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n-\n-            for (DerSchemaTO schemaTO : userDerSchemas) {\n-                userDerSchemasNames.add(schemaTO.getKey());\n-            }\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all {} derived schema names\", type, e);\n-        }\n-\n-        return userDerSchemasNames;\n+        return getSchemaNames(type, SchemaType.DERIVED);\n     }\n \n     public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n@@ -159,19 +141,7 @@ public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n     }\n \n     public List<String> getVirSchemaNames(final AttributableType type) {\n-        final List<String> userVirSchemasNames = new ArrayList<String>();\n-\n-        try {\n-            @SuppressWarnings(\"unchecked\")\n-            final List<VirSchemaTO> userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n-            for (VirSchemaTO schemaTO : userVirSchemas) {\n-                userVirSchemasNames.add(schemaTO.getKey());\n-            }\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all user derived schema names\", e);\n-        }\n-\n-        return userVirSchemasNames;\n+        return getSchemaNames(type, SchemaType.VIRTUAL);\n     }\n \n     public void createPlainSchema(final AttributableType type, final PlainSchemaTO schemaTO) {\n@@ -241,7 +211,7 @@ public List<String> getAllValidatorClasses() {\n         List<String> response = null;\n \n         try {\n-            response = SyncopeSession.get().getSyncopeTO().getValidators();\n+            response = SyncopeConsoleSession.get().getSyncopeTO().getValidators();\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all validators\", e);\n         }"},{"sha":"be4976eced35f960556cbc1d0b138625413d3cb2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -42,15 +42,15 @@ public class TaskRestClient extends BaseRestClient implements ExecutionRestClien\n     private static final long serialVersionUID = 6284485820911028843L;\n \n     public List<String> getJobClasses() {\n-        return SyncopeSession.get().getSyncopeTO().getTaskJobs();\n+        return SyncopeConsoleSession.get().getSyncopeTO().getTaskJobs();\n     }\n \n     public List<String> getSyncActionsClasses() {\n-        return SyncopeSession.get().getSyncopeTO().getSyncActions();\n+        return SyncopeConsoleSession.get().getSyncopeTO().getSyncActions();\n     }\n \n     public List<String> getPushActionsClasses() {\n-        return SyncopeSession.get().getSyncopeTO().getPushActions();\n+        return SyncopeConsoleSession.get().getSyncopeTO().getPushActions();\n     }\n \n     /**"},{"sha":"cb3053666bf36a10e47dbc62578a5318aaf4bb13","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.util.Collections;\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n@@ -49,13 +50,14 @@ public class UserRestClient extends AbstractSubjectRestClient {\n     private static final long serialVersionUID = -1575748964398293968L;\n \n     @Override\n-    public int count() {\n-        return getService(UserService.class).list(1, 1).getTotalCount();\n+    public int count(final String realm) {\n+        return getService(UserService.class).list(Collections.singletonList(realm), 1, 1).getTotalCount();\n     }\n \n     @Override\n-    public List<UserTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).list(page, size, toOrderBy(sort)).getResult();\n+    public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+        return getService(UserService.class).\n+                list(Collections.singletonList(realm), page, size, toOrderBy(sort)).getResult();\n     }\n \n     public UserTO create(final UserTO userTO, final boolean storePassword) {\n@@ -95,13 +97,16 @@ public UserTO read(final Long id) {\n     }\n \n     @Override\n-    public int searchCount(final String fiql) {\n-        return getService(UserService.class).search(fiql, 1, 1).getTotalCount();\n+    public int searchCount(final String realm, final String fiql) {\n+        return getService(UserService.class).search(Collections.singletonList(realm), fiql, 1, 1).getTotalCount();\n     }\n \n     @Override\n-    public List<UserTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+    public List<UserTO> search(\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+        \n+        return getService(UserService.class).\n+                search(Collections.singletonList(realm), fiql, page, size, toOrderBy(sort)).getResult();\n     }\n \n     @Override"},{"sha":"13e1555b69adea92fff0803226e14ca7280a8d84","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserSelfRestClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -33,7 +33,7 @@ public class UserSelfRestClient extends BaseRestClient {\n     public boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {\n-            result = SyncopeSession.get().getSyncopeTO().isSelfRegAllowed();\n+            result = SyncopeConsoleSession.get().getSyncopeTO().isSelfRegAllowed();\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While seeking if self registration is allowed\", e);\n         }\n@@ -44,7 +44,7 @@ public boolean isSelfRegistrationAllowed() {\n     }\n \n     public UserTO read() {\n-        return getService(UserSelfService.class).read();\n+        return SyncopeConsoleSession.get().getSelfTO();\n     }\n \n     public void create(final UserTO userTO, final boolean storePassword) {\n@@ -62,7 +62,7 @@ public void delete() {\n     public boolean isPasswordResetAllowed() {\n         Boolean result = null;\n         try {\n-            result = SyncopeSession.get().getSyncopeTO().isPwdResetAllowed();\n+            result = SyncopeConsoleSession.get().getSyncopeTO().isPwdResetAllowed();\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While seeking if password reset is allowed\", e);\n         }\n@@ -75,7 +75,7 @@ public boolean isPasswordResetAllowed() {\n     public boolean isPwdResetRequiringSecurityQuestions() {\n         Boolean result = null;\n         try {\n-            result = SyncopeSession.get().getSyncopeTO().isPwdResetRequiringSecurityQuestions();\n+            result = SyncopeConsoleSession.get().getSyncopeTO().isPwdResetRequiringSecurityQuestions();\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While seeking if password reset requires security question\", e);\n         }"},{"sha":"eb0527e440b21eb8f2a8ffd74cdb5ac8d4aaf47a","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/WorkflowRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -23,7 +23,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.types.SubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n@@ -35,7 +35,7 @@ public class WorkflowRestClient extends BaseRestClient {\n     private static final long serialVersionUID = 5049285686167071017L;\n \n     private WorkflowService getService(final MediaType mediaType) {\n-        return SyncopeSession.get().getService(mediaType, WorkflowService.class);\n+        return SyncopeConsoleSession.get().getService(mediaType, WorkflowService.class);\n     }\n \n     public InputStream getDefinition(final MediaType mediaType) {\n@@ -60,7 +60,7 @@ public byte[] getDiagram() {\n     }\n \n     public boolean isActivitiEnabledForUsers() {\n-        return SyncopeSession.get().getSyncopeTO().getUserWorkflowAdapter().indexOf(\"Activiti\") != -1;\n+        return SyncopeConsoleSession.get().getSyncopeTO().getUserWorkflowAdapter().contains(\"Activiti\");\n     }\n \n     public void updateDefinition(final MediaType mediaType, final String definition) {"},{"sha":"932948b5b82486612d29b217fc1d187ac57d0db6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Collection;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.SelectChoiceRenderer;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n@@ -55,7 +54,7 @@ public AjaxPalettePanel(final String id, final IModel<List<T>> model, final List\n     protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n             final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n \n-        return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll);\n+        return new NonI18nPalette<>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll);\n     }\n \n     @Override"},{"sha":"2eb11eaf4ff85abad15d5a02ec4a651d43ea97f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -33,7 +33,7 @@ public AjaxPasswordFieldPanel(final String id, final String name, final IModel<S\n         super(id, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n-        add(field.setLabel(new Model<String>(name)).setRequired(false).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<>(name)).setRequired(false).setOutputMarkupId(true));\n \n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {"},{"sha":"0c79e14f4690be831a2208dbffcfb1d377b5d0b7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectChoiceRenderer.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+\n+public class SelectChoiceRenderer<T> implements IChoiceRenderer<T> {\n+\n+    private static final long serialVersionUID = -3242441544405909243L;\n+\n+    @Override\n+    public Object getDisplayValue(T obj) {\n+        if (obj instanceof SelectOption) {\n+            return ((SelectOption) obj).getDisplayValue();\n+        } else {\n+            return obj.toString();\n+        }\n+    }\n+\n+    @Override\n+    public String getIdValue(T obj, int i) {\n+        return obj.toString();\n+    }\n+}"},{"sha":"c66765788942b9aaf5b3d9585a71712f73757799","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectOption.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+\n+public class SelectOption implements Serializable {\n+\n+    private static final long serialVersionUID = 2961127533930849828L;\n+\n+    private String displayValue;\n+\n+    private String keyValue;\n+\n+    public SelectOption(final String displayValue, final String keyValue) {\n+        this.displayValue = displayValue;\n+        this.keyValue = keyValue;\n+    }\n+\n+    public String getDisplayValue() {\n+        return displayValue;\n+    }\n+\n+    public void setDisplayValue(final String displayValue) {\n+        this.displayValue = displayValue;\n+    }\n+\n+    public String getKeyValue() {\n+        return keyValue;\n+    }\n+\n+    public void setKeyValue(final String keyValue) {\n+        this.keyValue = keyValue;\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == null || !(obj instanceof SelectOption)) {\n+            return false;\n+        }\n+\n+        return (keyValue == null && ((SelectOption) obj).keyValue == null) || keyValue != null\n+                && keyValue.equals(((SelectOption) obj).keyValue);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return keyValue;\n+    }\n+}"},{"sha":"20f2a7b2f3bdf703047c59b43b44e3a15b49c6ce","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -24,7 +24,7 @@\n import javax.naming.ldap.LdapName;\n import javax.naming.ldap.Rdn;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.syncope.client.console.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;"},{"sha":"488caf0c16f21e9d5f9e4ed466e9604e4edc2c10","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n-import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.syncope.client.console.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n import org.apache.wicket.markup.html.image.NonCachingImage;"},{"sha":"8b7fa160ac7ff0d0651f400c19535d5fe49dcf9d","filename":"client/console/src/main/resources/consoleContext.xml","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -60,17 +60,11 @@ under the License.\n     <constructor-arg value=\"${activitiModelerDirectory}\"/>\n   </bean>\n \n-  <bean id=\"syncopeApplication\" class=\"org.apache.syncope.client.console.SyncopeApplication\"/>\n+  <bean class=\"org.apache.syncope.client.console.SyncopeConsoleApplication\"/>\n \n-  <bean id=\"preferenceManager\" class=\"org.apache.syncope.client.console.commons.PreferenceManager\"/>\n+  <bean class=\"org.apache.syncope.client.console.PreferenceManager\"/>\n \n-  <bean id=\"xmlRolesReader\" class=\"org.apache.syncope.client.console.commons.XMLRolesReader\" scope=\"singleton\">\n-    <property name=\"authorizations\" value=\"authorizations.xml\"/>\n-  </bean>\n-\n-  <bean id=\"groupTreeBuilder\" class=\"org.apache.syncope.client.console.commons.GroupTreeBuilder\"/>\n-\n-  <bean id=\"syncopeClientFactory\" class=\"org.apache.syncope.client.lib.SyncopeClientFactoryBean\">\n+  <bean class=\"org.apache.syncope.client.lib.SyncopeClientFactoryBean\">\n     <property name=\"address\" value=\"${scheme}://${host}:${port}/${rootPath}\"/>\n   </bean>\n "},{"sha":"a5fe51189830e90d65d6ab2a855d999c43305ae8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication.properties"},{"sha":"1f1e827c9df7d6956dcea1b05027f9c351ee97af","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication_it.properties"},{"sha":"de966d2d268464ce7124c99cb4ea97cae767bc84","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication_pt_BR.properties"},{"sha":"7e9b91a822b1515c846ccbc3ababe2c653b6b1b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/HomePage.html","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.html?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -1,4 +1,4 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n <!--\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n@@ -17,18 +17,17 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\">\n-\n-    <body>\n-\n-        <wicket:extend>\n-\n-            <div>\n-                <b>Syncope</b> Home-Page!\n-            </div>\n-\n-        </wicket:extend>\n-\n-    </body>\n-\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n+    <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n+    <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n+\n+    <title>Apache Syncope</title>\n+  </head>\n+  <body>\n+    <h1>Welcome <label wicket:id=\"username\"/></h1>\n+\n+    <wicket:link><a href=\"SignOut.html\">Sign Out</a></wicket:link>\n+  </body>\n </html>"},{"sha":"6ced70a4386041ce51aebb60d02dbde501f632e6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SignOut.html","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSignOut.html?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,33 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n+    <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n+    <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n+\n+    <title>Apache Syncope</title>\n+  </head>\n+  <body>\n+    <h1>Goodbye!</h1>\n+    \n+    <wicket:link><a href=\"HomePage.html\">Home</a></wicket:link>\n+  </body>\n+</html>"},{"sha":"4b5824b991865a489673cdce354836f78ffc235a","filename":"client/old_console/pom.xml","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fpom.xml?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,112 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-client</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Client OLD Console</name>\n+  <description>To keep only until the new console is ready, DOES NOT BUILD</description>\n+  <groupId>org.apache.syncope.client</groupId>\n+  <artifactId>syncope-client-old_console</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n+  <dependencies>\n+    <dependency> \n+      <groupId>javax.servlet</groupId> \n+      <artifactId>javax.servlet-api</artifactId> \n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-web</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket</artifactId>\n+      <type>pom</type>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-extensions</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-datetime</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-spring</artifactId>\n+      <!-- exclude spring framework that wicket pulls in -->\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.springframework</groupId>\n+          <artifactId>spring</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-auth-roles</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+  \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-pmd-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"c499d605a83dd3966c5a0e2207329910571b2541","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/BinaryPreview.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/BinaryPreview.java"},{"sha":"55749267d7c76ed7d357721672b27f27a71bbabf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/ExtensionPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/ExtensionPanel.java"},{"sha":"a1e781d0bfd8d97eef70003ca54c9768a53bde8b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/SyncopeApplication.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeApplication.java"},{"sha":"8b27260e7e5ef0c279ee017536736b3ae49992a7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/SyncopeRequestCycleListener.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeRequestCycleListener.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeRequestCycleListener.java"},{"sha":"fc7f7b9bde65f1c07a79999ab8a9fc1209b0f38b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/SyncopeSession.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeSession.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeSession.java"},{"sha":"453e0c0b75e0d7d528252bd0563cf1df3ce02f94","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/ActionTableCheckGroup.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FActionTableCheckGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FActionTableCheckGroup.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ActionTableCheckGroup.java"},{"sha":"26764b4ef2354f6a8654bc8060923ae3b6c18234","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/AttrLayoutType.java","status":"added","additions":105,"deletions":0,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.AttributableType;\n+\n+public enum AttrLayoutType {\n+\n+    ADMIN_USER(\"admin.user.layout\", Mode.ADMIN, AttributableType.USER),\n+    SELF_USER(\"self.user.layout\", Mode.SELF, AttributableType.USER),\n+    ADMIN_GROUP(\"admin.group.layout\", Mode.ADMIN, AttributableType.GROUP),\n+    SELF_GROUP(\"self.group.layout\", Mode.SELF, AttributableType.GROUP),\n+    ADMIN_MEMBERSHIP(\"admin.membership.layout\", Mode.ADMIN, AttributableType.MEMBERSHIP),\n+    SELF_MEMBERSHIP(\"self.membership.layout\", Mode.SELF, AttributableType.MEMBERSHIP);\n+\n+    private final String confKey;\n+\n+    private final Mode mode;\n+\n+    private final AttributableType attrType;\n+\n+    AttrLayoutType(final String confKey, final Mode mode, final AttributableType attrType) {\n+        this.confKey = confKey;\n+        this.mode = mode;\n+        this.attrType = attrType;\n+    }\n+\n+    public String getConfKey() {\n+        return confKey;\n+    }\n+\n+    public Mode getMode() {\n+        return mode;\n+    }\n+\n+    public AttributableType getAttrType() {\n+        return attrType;\n+    }\n+\n+    public static List<String> confKeys() {\n+        List<String> confKeys = new ArrayList<String>();\n+        for (AttrLayoutType value : values()) {\n+            confKeys.add(value.getConfKey());\n+        }\n+\n+        return confKeys;\n+    }\n+\n+    public static AttrLayoutType valueOf(final Mode mode, final AttributableType attrType) {\n+        AttrLayoutType result = null;\n+        if (mode == Mode.ADMIN) {\n+            switch (attrType) {\n+                case USER:\n+                    result = ADMIN_USER;\n+                    break;\n+\n+                case MEMBERSHIP:\n+                    result = ADMIN_MEMBERSHIP;\n+                    break;\n+\n+                case GROUP:\n+                    result = ADMIN_GROUP;\n+                    break;\n+\n+                default:\n+            }\n+        } else if (mode == Mode.SELF) {\n+            switch (attrType) {\n+                case USER:\n+                    result = SELF_USER;\n+                    break;\n+\n+                case MEMBERSHIP:\n+                    result = SELF_MEMBERSHIP;\n+                    break;\n+\n+                case GROUP:\n+                    result = SELF_GROUP;\n+                    break;\n+\n+                default:\n+            }\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"91a797e1144a381be30f7a623ff45293e40b57b6","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/AttributableDataProvider.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttributableDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttributableDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttributableDataProvider.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AttributableDataProvider.java"},{"sha":"f3f939ca14cdb74edd4fb46e51c01474f3d24866","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/CloseOnESCBehavior.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -29,7 +29,7 @@ public class CloseOnESCBehavior extends AjaxEventBehavior {\n \n     private static final long serialVersionUID = 5826308247642534260L;\n \n-    public CloseOnESCBehavior(String event) {\n+    public CloseOnESCBehavior(final String event) {\n         super(event);\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/CloseOnESCBehavior.java"},{"sha":"3533172603bd08e329380ef1992070269592c219","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/ConnIdSpecialAttributeName.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialAttributeName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialAttributeName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialAttributeName.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+public final class ConnIdSpecialAttributeName {\n+\n+    public static final String ENABLE = \"__ENABLE__\";\n+\n+    public static final String NAME = \"__NAME__\";\n+\n+    public static final String UID = \"__UID__\";\n+\n+    public static final String PASSWORD = \"__PASSWORD__\";\n+\n+    private ConnIdSpecialAttributeName() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"0b8391a2867b6d532743a6dd119eda2cc4d1bbb8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+public final class Constants {\n+\n+    public static final String ON_CLICK = \"onclick\";\n+\n+    public static final String ON_CHANGE = \"onchange\";\n+\n+    public static final String ON_BLUR = \"onblur\";\n+\n+    public static final String PNG_EXT = \".png\";\n+\n+    public static final String FEEDBACK = \"feedback\";\n+\n+    public static final String OPERATION_SUCCEEDED = \"operation_succeeded\";\n+\n+    public static final String OPERATION_ERROR = \"operation_error\";\n+\n+    public static final String SEARCH_ERROR = \"search_error\";\n+\n+    public static final String ERROR = \"error\";\n+\n+    public static final String PARAM_PASSWORD_RESET_TOKEN = \"pwdResetToken\";\n+\n+    public static final String PREF_USERS_DETAILS_VIEW = \"users.details.view\";\n+\n+    public static final String PREF_USERS_ATTRIBUTES_VIEW = \"users.attributes.view\";\n+\n+    public static final String PREF_USERS_DERIVED_ATTRIBUTES_VIEW = \"users.derived.attributes.view\";\n+\n+    public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW = \"users.virtual.attributes.view\";\n+\n+    public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n+\n+    public static final String PREF_USER_PLAIN_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n+\n+    public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS = \"user.derived.schema.paginator.rows\";\n+\n+    public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS = \"user.virtual.schema.paginator.rows\";\n+\n+    public static final String PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"group.schema.paginator.rows\";\n+\n+    public static final String PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS = \"group.derived.schema.paginator.rows\";\n+\n+    public static final String PREF_GROUP_VIR_SCHEMA_PAGINATOR_ROWS = \"group.virtual.schema.paginator.rows\";\n+\n+    public static final String PREF_MEMBERSHIP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"membership.schema.paginator.rows\";\n+\n+    public static final String PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS = \"membership.derived.aschema.paginator.rows\";\n+\n+    public static final String PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS = \"membership.virtual.aschema.paginator.rows\";\n+\n+    public static final String PREF_USERS_PAGINATOR_ROWS = \"users.paginator.rows\";\n+\n+    public static final String PREF_RESOURCES_PAGINATOR_ROWS = \"resources.paginator.rows\";\n+\n+    public static final String PREF_CONNECTORS_PAGINATOR_ROWS = \"connectors.paginator.rows\";\n+\n+    public static final String PREF_NOTIFICATION_PAGINATOR_ROWS = \"notification.paginator.rows\";\n+\n+    public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";\n+\n+    public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS = \"notificationtasks.paginator.rows\";\n+\n+    public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS = \"schedtasks.paginator.rows\";\n+\n+    public static final String PREF_SYNC_TASKS_PAGINATOR_ROWS = \"synctasks.paginator.rows\";\n+\n+    public static final String PREF_TODO_PAGINATOR_ROWS = \"todo.paginator.rows\";\n+\n+    public static final String PREF_REPORT_PAGINATOR_ROWS = \"report.paginator.rows\";\n+\n+    public static final String PAGEPARAM_CREATE = \"CREATE\";\n+\n+    public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n+\n+    public static final String PREF_POLICY_PAGINATOR_ROWS = \"policy.paginator.rows\";\n+\n+    /**\n+     * ConnId's GuardedString is not in the classpath.\n+     */\n+    public static final String GUARDED_STRING = \"org.identityconnectors.common.security.GuardedString\";\n+\n+    /**\n+     * ConnId's GuardedByteArray is not in the classpath.\n+     */\n+    public static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n+\n+    private Constants() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"e72b7d0bc1fec4dc49839cfd386516650f0730ee","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/DateFormatROModel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FDateFormatROModel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FDateFormatROModel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FDateFormatROModel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/DateFormatROModel.java"},{"sha":"bc7d21bf71a74791390f126210f8294f1be92aa8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/GroupTreeBuilder.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/GroupTreeBuilder.java"},{"sha":"feeba85d4965aa9627eea74e64369fe22af62682","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/HttpResourceStream.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FHttpResourceStream.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.util.lang.Bytes;\n+import org.apache.wicket.util.resource.AbstractResourceStream;\n+import org.apache.wicket.util.resource.IFixedLocationResourceStream;\n+import org.apache.wicket.util.resource.ResourceStreamNotFoundException;\n+\n+public class HttpResourceStream extends AbstractResourceStream implements IFixedLocationResourceStream {\n+\n+    private static final long serialVersionUID = 5811207817876330189L;\n+\n+    private transient InputStream inputStream;\n+\n+    private String contentType;\n+\n+    private String location;\n+\n+    private String filename;\n+\n+    public HttpResourceStream(final Response response) {\n+        super();\n+\n+        Object entity = response.getEntity();\n+        if (response.getStatusInfo().getStatusCode() == Response.Status.OK.getStatusCode()\n+                && (entity instanceof InputStream)) {\n+\n+            this.inputStream = (InputStream) entity;\n+            this.contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n+            this.location = response.getLocation() == null ? null : response.getLocation().toASCIIString();\n+            String contentDisposition = response.getHeaderString(HttpHeaders.CONTENT_DISPOSITION);\n+            if (StringUtils.isNotBlank(contentDisposition)) {\n+                String[] splitted = contentDisposition.split(\"=\");\n+                if (splitted != null && splitted.length > 1) {\n+                    this.filename = splitted[1].trim();\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public InputStream getInputStream()\n+            throws ResourceStreamNotFoundException {\n+\n+        return inputStream == null\n+                ? new ByteArrayInputStream(new byte[0])\n+                : inputStream;\n+    }\n+\n+    @Override\n+    public Bytes length() {\n+        return inputStream == null\n+                ? Bytes.bytes(0)\n+                : null;\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        // No need for explict closing\n+    }\n+\n+    @Override\n+    public String locationAsString() {\n+        return location;\n+    }\n+\n+    @Override\n+    public String getContentType() {\n+        return contentType == null\n+                ? MediaType.APPLICATION_OCTET_STREAM\n+                : contentType;\n+    }\n+\n+    public String getFilename() {\n+        return filename;\n+    }\n+}"},{"sha":"b29d180b856e59ddb8bed645b5dc5e25b887bb5d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/JexlHelpUtils.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/JexlHelpUtils.java"},{"sha":"118db6d8effd5d26527a89f170046ab6d3111e11","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/MapChoiceRenderer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMapChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMapChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMapChoiceRenderer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/MapChoiceRenderer.java"},{"sha":"27dad640d8350d1c7aea1ac4e85750567b2dd00f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/Mode.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FMode.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+public enum Mode {\n+\n+    ADMIN,\n+    SELF,\n+    TEMPLATE;\n+\n+}"},{"sha":"a4e246e4ba42cba29a2c1f9d72468c8d7d16c1fb","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/PreferenceManager.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreferenceManager.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/PreferenceManager.java"},{"sha":"12c93d4fa0d9424e817a7a89f112da44b1952b1c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.init.ImplementationClassNamesLoader;\n+import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.util.crypt.Base64;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.util.ClassUtils;\n+\n+@org.springframework.stereotype.Component\n+public class PreviewUtils {\n+\n+    @Autowired\n+    private ImplementationClassNamesLoader implementationClassNamesLoader;\n+\n+    public Component getPreviewer(final String mimeType, final String file)\n+            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n+\n+        final Class<? extends AbstractBinaryPreviewer> previewer = StringUtils.isBlank(file)\n+                ? null\n+                : implementationClassNamesLoader.getPreviewerClass(mimeType);\n+\n+        return previewer == null\n+                ? null\n+                : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n+                newInstance(new Object[] { \"previewer\", mimeType, Base64.decodeBase64(file) }).\n+                preview();\n+    }\n+\n+    public Component getPreviewer(final String mimeType, final byte[] file)\n+            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n+\n+        final Class<? extends AbstractBinaryPreviewer> previewer =\n+                implementationClassNamesLoader.getPreviewerClass(mimeType);\n+\n+        return previewer == null\n+                ? null\n+                : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n+                newInstance(new Object[] { \"previewer\", mimeType, file }).\n+                preview();\n+    }\n+}"},{"sha":"38a60fa825b04b7e1c475b9fe941215a92bcdff4","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/SchemaModalPageFactory.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SchemaModalPageFactory.java"},{"sha":"7b9164d8b6717391d3a8c3f541ef3ccacdfe156d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/SelectChoiceRenderer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SelectChoiceRenderer.java"},{"sha":"839df70d1d2d361c11576890310a909c0a16653b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/SelectOption.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSelectOption.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SelectOption.java"},{"sha":"e82b9bb2838fdfb871ba9616c5deeac2a0742f7f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/SortableAttributableProviderComparator.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+\n+public class SortableAttributableProviderComparator extends SortableDataProviderComparator<AbstractAttributableTO> {\n+\n+    private static final long serialVersionUID = 1775967163571699258L;\n+\n+    private static final Set<String> INLINE_PROPS = new HashSet<>(Arrays.asList(\n+            new String[] { \"key\", \"status\", \"token\", \"username\" }));\n+\n+    public SortableAttributableProviderComparator(final SortableDataProvider<AbstractAttributableTO, String> provider) {\n+        super(provider);\n+    }\n+\n+    @Override\n+    public int compare(final AbstractAttributableTO attributable1, AbstractAttributableTO attributable2) {\n+        if (INLINE_PROPS.contains(provider.getSort().getProperty())) {\n+            return super.compare(attributable1, attributable2);\n+        }\n+\n+        return super.compare(new AttrModel(attributable1), new AttrModel(attributable2));\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n+\n+        private static final long serialVersionUID = -7856686374020091808L;\n+\n+        private final Map<String, AttrTO> attrs;\n+\n+        private final Map<String, AttrTO> derAttrs;\n+\n+        private final Map<String, AttrTO> virAttrs;\n+\n+        public AttrModel(final AbstractAttributableTO attributableTO) {\n+            super();\n+\n+            this.attrs = attributableTO.getPlainAttrMap();\n+            this.derAttrs = attributableTO.getDerAttrMap();\n+            this.virAttrs = attributableTO.getVirAttrMap();\n+        }\n+\n+        /**\n+         * @see UserAttrColumn constructor\n+         */\n+        @Override\n+        public Comparable getObject() {\n+            int hashPos = provider.getSort().getProperty().indexOf('#');\n+\n+            SchemaType schemaType = null;\n+            final String schema;\n+            if (hashPos == -1) {\n+                schema = provider.getSort().getProperty();\n+            } else {\n+                String[] splitted = provider.getSort().getProperty().split(\"#\");\n+                try {\n+                    schemaType = SchemaType.valueOf(splitted[0]);\n+                } catch (IllegalArgumentException e) {\n+                    // this should never happen\n+                }\n+                schema = provider.getSort().getProperty().substring(hashPos + 1);\n+            }\n+\n+            final AttrTO attr;\n+            if (schemaType == null) {\n+                attr = this.attrs.get(schema);\n+            } else {\n+                switch (schemaType) {\n+                    case PLAIN:\n+                    default:\n+                        attr = this.attrs.get(schema);\n+                        break;\n+\n+                    case DERIVED:\n+                        attr = this.derAttrs.get(schema);\n+                        break;\n+\n+                    case VIRTUAL:\n+                        attr = this.virAttrs.get(schema);\n+                        break;\n+                }\n+            }\n+\n+            Comparable result = null;\n+\n+            List<String> values = attr == null ? null : attr.getValues();\n+            if (values != null && !values.isEmpty()) {\n+                result = values.iterator().next();\n+            }\n+\n+            return result;\n+        }\n+    }\n+}"},{"sha":"bc4357d68e666953dce74345afdad9690ee11809","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/SortableDataProviderComparator.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class SortableDataProviderComparator<T> implements Comparator<T>, Serializable {\n+\n+    private static final long serialVersionUID = -8897687699977460543L;\n+\n+    protected final SortableDataProvider<T, String> provider;\n+\n+    public SortableDataProviderComparator(final SortableDataProvider<T, String> provider) {\n+        this.provider = provider;\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    protected int compare(final IModel<Comparable> model1, final IModel<Comparable> model2) {\n+        int result;\n+\n+        if (model1.getObject() == null && model2.getObject() == null) {\n+            result = 0;\n+        } else if (model1.getObject() == null) {\n+            result = 1;\n+        } else if (model2.getObject() == null) {\n+            result = -1;\n+        } else {\n+            result = model1.getObject().compareTo(model2.getObject());\n+        }\n+\n+        result = provider.getSort().isAscending()\n+                ? result\n+                : -result;\n+\n+        return result;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public int compare(final T object1, final T object2) {\n+        IModel<Comparable> model1 = new PropertyModel<>(object1, provider.getSort().getProperty());\n+        IModel<Comparable> model2 = new PropertyModel<>(object2, provider.getSort().getProperty());\n+\n+        return compare(model1, model2);\n+    }\n+}"},{"sha":"3a0b446d05fe14640a44b6393986832b7fb5f1e1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/XMLRolesReader.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FXMLRolesReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FXMLRolesReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FXMLRolesReader.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/XMLRolesReader.java"},{"sha":"c10f55c47579fabb8ea800a9c0ef1afdc38e4972","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons.status;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class AbstractStatusBeanProvider extends SortableDataProvider<StatusBean, String> {\n+\n+    private static final long serialVersionUID = 4287357360778016173L;\n+\n+    private SortableDataProviderComparator<StatusBean> comparator;\n+\n+    public AbstractStatusBeanProvider(final String sort) {\n+        //Default sorting\n+        setSort(sort, SortOrder.ASCENDING);\n+        comparator = new SortableDataProviderComparator<StatusBean>(this);\n+    }\n+\n+    @Override\n+    public Iterator<StatusBean> iterator(final long first, final long count) {\n+        List<StatusBean> list = getStatusBeans();\n+        Collections.sort(list, comparator);\n+        return list.subList((int) first, (int) first + (int) count).iterator();\n+    }\n+\n+    @Override\n+    public long size() {\n+        return getStatusBeans().size();\n+    }\n+\n+    @Override\n+    public IModel<StatusBean> model(final StatusBean resource) {\n+        return new AbstractReadOnlyModel<StatusBean>() {\n+\n+            private static final long serialVersionUID = -7802635613997243712L;\n+\n+            @Override\n+            public StatusBean getObject() {\n+                return resource;\n+            }\n+        };\n+    }\n+\n+    public abstract List<StatusBean> getStatusBeans();\n+\n+}"},{"sha":"be038dbba7606557317a04ea20e258e7bbdcccef","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/status/ConnObjectWrapper.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons.status;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+\n+public class ConnObjectWrapper implements Serializable {\n+\n+    private static final long serialVersionUID = 9083721948999924299L;\n+\n+    private final AbstractAttributableTO attributable;\n+\n+    private final String resourceName;\n+\n+    private final ConnObjectTO connObjectTO;\n+\n+    public ConnObjectWrapper(final AbstractAttributableTO attributable, final String resourceName,\n+            final ConnObjectTO connObjectTO) {\n+\n+        this.attributable = attributable;\n+        this.resourceName = resourceName;\n+        this.connObjectTO = connObjectTO;\n+    }\n+\n+    public AbstractAttributableTO getAttributable() {\n+        return attributable;\n+    }\n+\n+    public String getResourceName() {\n+        return resourceName;\n+    }\n+\n+    public ConnObjectTO getConnObjectTO() {\n+        return connObjectTO;\n+    }\n+\n+}"},{"sha":"7198c2ce94fec272b9680ef80dc42cd95188f7a6","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/status/Status.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatus.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons.status;\n+\n+public enum Status {\n+\n+    NOT_YET_SUBMITTED(\"\"),\n+    CREATED(\"created\"),\n+    ACTIVE(\"active\"),\n+    SUSPENDED(\"inactive\"),\n+    UNDEFINED(\"undefined\"),\n+    OBJECT_NOT_FOUND(\"objectnotfound\");\n+\n+    public boolean isActive() {\n+        return this == ACTIVE;\n+    }\n+\n+    private Status(final String name) {\n+        this.name = name;\n+    }\n+\n+    private final String name;\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+}"},{"sha":"47d00862e9e3c9ac3bf7d39a6711ccc2fc21082b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"added","additions":103,"deletions":0,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons.status;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class StatusBean implements Serializable {\n+\n+    private static final long serialVersionUID = -5207260204921071129L;\n+\n+    private final Long attributableKey;\n+\n+    private final String attributableName;\n+\n+    private final String resourceName;\n+\n+    private String accountLink = null;\n+\n+    private Status status = Status.OBJECT_NOT_FOUND;\n+\n+    private boolean linked = true;\n+\n+    public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n+        this.attributableKey = attributable.getKey();\n+        this.attributableName = attributable instanceof UserTO\n+                ? ((UserTO) attributable).getUsername() : ((GroupTO) attributable).getName();\n+        this.resourceName = resourceName;\n+    }\n+\n+    public String getAccountLink() {\n+        return accountLink;\n+    }\n+\n+    public void setAccountLink(final String accountLink) {\n+        this.accountLink = accountLink;\n+    }\n+\n+    public String getResourceName() {\n+        return resourceName;\n+    }\n+\n+    public Status getStatus() {\n+        return status;\n+    }\n+\n+    public void setStatus(final Status status) {\n+        this.status = status;\n+    }\n+\n+    public Long getAttributableId() {\n+        return attributableKey;\n+    }\n+\n+    public String getAttributableName() {\n+        return attributableName;\n+    }\n+\n+    public boolean isLinked() {\n+        return linked;\n+    }\n+\n+    public void setLinked(boolean linked) {\n+        this.linked = linked;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+}"},{"sha":"391d20288c69252c4d11b63b6546692ba8ce19a9","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"added","additions":324,"deletions":0,"changes":324,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,324 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons.status;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.ImagePanel;\n+import org.apache.syncope.client.console.panels.StatusPanel;\n+import org.apache.syncope.client.console.rest.AbstractSubjectRestClient;\n+import org.apache.syncope.common.lib.mod.StatusMod;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.request.resource.ContextRelativeResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class StatusUtils implements Serializable {\n+\n+    private static final long serialVersionUID = 7238009174387184309L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(StatusUtils.class);\n+\n+    private static final String IMG_PREFIX = \"/img/statuses/\";\n+\n+    private final AbstractSubjectRestClient restClient;\n+\n+    public StatusUtils(final AbstractSubjectRestClient restClient) {\n+        this.restClient = restClient;\n+    }\n+\n+    public List<ConnObjectWrapper> getConnectorObjects(final AbstractSubjectTO subject) {\n+        final List<ConnObjectWrapper> objects = new ArrayList<>();\n+        objects.addAll(getConnectorObjects(subject, subject.getResources()));\n+        return objects;\n+    }\n+\n+    public List<ConnObjectWrapper> getConnectorObjects(\n+            final Collection<AbstractSubjectTO> subjects, final Collection<String> resources) {\n+\n+        final List<ConnObjectWrapper> objects = new ArrayList<>();\n+\n+        for (AbstractSubjectTO subject : subjects) {\n+            objects.addAll(getConnectorObjects(subject, resources));\n+        }\n+\n+        return objects;\n+    }\n+\n+    private List<ConnObjectWrapper> getConnectorObjects(\n+            final AbstractSubjectTO subject, final Collection<String> resources) {\n+\n+        final List<ConnObjectWrapper> objects = new ArrayList<>();\n+\n+        for (String resourceName : resources) {\n+            ConnObjectTO objectTO = null;\n+            try {\n+                objectTO = restClient.getConnectorObject(resourceName, subject.getKey());\n+            } catch (Exception e) {\n+                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", subject.getKey(), resourceName);\n+            }\n+\n+            objects.add(new ConnObjectWrapper(subject, resourceName, objectTO));\n+        }\n+\n+        return objects;\n+    }\n+\n+    public StatusBean getStatusBean(\n+            final AbstractAttributableTO attributable,\n+            final String resourceName,\n+            final ConnObjectTO objectTO,\n+            final boolean isGroup) {\n+\n+        final StatusBean statusBean = new StatusBean(attributable, resourceName);\n+\n+        if (objectTO != null) {\n+            final Boolean enabled = isEnabled(objectTO);\n+\n+            final Status status = enabled == null\n+                    ? (isGroup ? Status.ACTIVE : Status.UNDEFINED)\n+                    : enabled\n+                            ? Status.ACTIVE\n+                            : Status.SUSPENDED;\n+\n+            final String accountLink = getAccountLink(objectTO);\n+\n+            statusBean.setStatus(status);\n+            statusBean.setAccountLink(accountLink);\n+        }\n+\n+        return statusBean;\n+    }\n+\n+    private Boolean isEnabled(final ConnObjectTO objectTO) {\n+        final Map<String, AttrTO> attributeTOs = objectTO.getPlainAttrMap();\n+\n+        final AttrTO status = attributeTOs.get(ConnIdSpecialAttributeName.ENABLE);\n+\n+        return status != null && status.getValues() != null && !status.getValues().isEmpty()\n+                ? Boolean.parseBoolean(status.getValues().get(0))\n+                : null;\n+    }\n+\n+    private String getAccountLink(final ConnObjectTO objectTO) {\n+        final Map<String, AttrTO> attributeTOs = objectTO == null\n+                ? Collections.<String, AttrTO>emptyMap()\n+                : objectTO.getPlainAttrMap();\n+\n+        final AttrTO name = attributeTOs.get(ConnIdSpecialAttributeName.NAME);\n+\n+        return name != null && name.getValues() != null && !name.getValues().isEmpty()\n+                ? name.getValues().get(0)\n+                : null;\n+    }\n+\n+    public static StatusMod buildStatusMod(final Collection<StatusBean> statuses) {\n+        return buildStatusMod(statuses, null);\n+    }\n+\n+    public static StatusMod buildStatusMod(final Collection<StatusBean> statuses, final Boolean enable) {\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setOnSyncope(false);\n+\n+        for (StatusBean status : statuses) {\n+            if (enable == null\n+                    || (enable && !status.getStatus().isActive()) || (!enable && status.getStatus().isActive())) {\n+\n+                if (\"syncope\".equalsIgnoreCase(status.getResourceName())) {\n+                    statusMod.setOnSyncope(true);\n+                } else {\n+                    statusMod.getResourceNames().add(status.getResourceName());\n+                }\n+\n+            }\n+        }\n+\n+        return statusMod;\n+    }\n+\n+    public static void update(\n+            final AbstractAttributableTO attributable,\n+            final StatusPanel statusPanel,\n+            final AjaxRequestTarget target,\n+            final Collection<String> resourcesToAdd,\n+            final Collection<String> resourcesToRemove) {\n+\n+        if (statusPanel != null) {\n+            Map<String, StatusBean> statusMap = new LinkedHashMap<>();\n+            for (StatusBean statusBean : statusPanel.getStatusBeans()) {\n+                statusMap.put(statusBean.getResourceName(), statusBean);\n+            }\n+\n+            for (String resourceName : resourcesToAdd) {\n+                if (!statusMap.keySet().contains(resourceName)) {\n+                    StatusBean statusBean;\n+                    if (statusPanel.getInitialStatusBeanMap().containsKey(resourceName)) {\n+                        statusBean = statusPanel.getInitialStatusBeanMap().get(resourceName);\n+                    } else {\n+                        statusBean = new StatusBean(attributable, resourceName);\n+                        statusBean.setStatus(Status.NOT_YET_SUBMITTED);\n+                    }\n+\n+                    statusMap.put(statusBean.getResourceName(), statusBean);\n+                }\n+            }\n+\n+            for (String resource : resourcesToRemove) {\n+                statusMap.remove(resource);\n+            }\n+\n+            statusPanel.updateStatusBeans(new ArrayList<>(statusMap.values()));\n+            target.add(statusPanel);\n+        }\n+    }\n+\n+    public ConnObjectTO getConnObjectTO(\n+            final Long attributableId, final String resourceName, final List<ConnObjectWrapper> objects) {\n+\n+        for (ConnObjectWrapper object : objects) {\n+            if (attributableId.equals(object.getAttributable().getKey())\n+                    && resourceName.equalsIgnoreCase(object.getResourceName())) {\n+\n+                return object.getConnObjectTO();\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    public Image getStatusImage(final String componentId, final Status status) {\n+        final String alt, title, statusName;\n+\n+        switch (status) {\n+\n+            case NOT_YET_SUBMITTED:\n+                statusName = Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Not yet submitted\";\n+                break;\n+\n+            case ACTIVE:\n+                statusName = Status.ACTIVE.toString();\n+                alt = \"active icon\";\n+                title = \"Enabled\";\n+                break;\n+\n+            case UNDEFINED:\n+                statusName = Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Undefined status\";\n+                break;\n+\n+            case OBJECT_NOT_FOUND:\n+                statusName = Status.OBJECT_NOT_FOUND.toString();\n+                alt = \"notfound icon\";\n+                title = \"Not found\";\n+                break;\n+\n+            default:\n+                statusName = Status.SUSPENDED.toString();\n+                alt = \"inactive icon\";\n+                title = \"Disabled\";\n+        }\n+\n+        final Image img = new Image(componentId,\n+                new ContextRelativeResource(IMG_PREFIX + statusName + Constants.PNG_EXT));\n+        img.add(new Behavior() {\n+\n+            private static final long serialVersionUID = 1469628524240283489L;\n+\n+            @Override\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                tag.put(\"alt\", alt);\n+                tag.put(\"title\", title);\n+            }\n+        });\n+\n+        return img;\n+    }\n+\n+    public ImagePanel getStatusImagePanel(final String componentId, final Status status) {\n+        final String alt, title, statusName;\n+\n+        switch (status) {\n+\n+            case NOT_YET_SUBMITTED:\n+                statusName = Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Not yet submitted\";\n+                break;\n+\n+            case ACTIVE:\n+                statusName = Status.ACTIVE.toString();\n+                alt = \"active icon\";\n+                title = \"Enabled\";\n+                break;\n+\n+            case UNDEFINED:\n+                statusName = Status.UNDEFINED.toString();\n+                alt = \"undefined icon\";\n+                title = \"Undefined status\";\n+                break;\n+\n+            case OBJECT_NOT_FOUND:\n+                statusName = Status.OBJECT_NOT_FOUND.toString();\n+                alt = \"notfound icon\";\n+                title = \"Not found\";\n+                break;\n+\n+            default:\n+                statusName = Status.SUSPENDED.toString();\n+                alt = \"inactive icon\";\n+                title = \"Disabled\";\n+        }\n+\n+        final ImagePanel imagePanel = new ImagePanel(componentId,\n+                new ContextRelativeResource(IMG_PREFIX + statusName + Constants.PNG_EXT));\n+        imagePanel.add(new Behavior() {\n+\n+            private static final long serialVersionUID = 1469628524240283489L;\n+\n+            @Override\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                tag.put(\"alt\", alt);\n+                tag.put(\"title\", title);\n+            }\n+        });\n+\n+        return imagePanel;\n+    }\n+}"},{"sha":"ec51d3e7dedeea37ef56bff11d217f5af429c171","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/init/ConsoleInitializer.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.aop.support.AopUtils;\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.beans.factory.BeanFactoryAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Take care of all initializations needed by Syncope Console to run up and safe.\n+ */\n+@Component\n+public class ConsoleInitializer implements InitializingBean, BeanFactoryAware {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConsoleInitializer.class);\n+\n+    private DefaultListableBeanFactory beanFactory;\n+\n+    @Override\n+    public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n+        this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n+    }\n+\n+    @Override\n+    public void afterPropertiesSet() {\n+        Map<String, SyncopeConsoleLoader> loaderMap = beanFactory.getBeansOfType(SyncopeConsoleLoader.class);\n+\n+        List<SyncopeConsoleLoader> loaders = new ArrayList<>(loaderMap.values());\n+        Collections.sort(loaders, new Comparator<SyncopeConsoleLoader>() {\n+\n+            @Override\n+            public int compare(final SyncopeConsoleLoader o1, final SyncopeConsoleLoader o2) {\n+                return o1.getPriority().compareTo(o2.getPriority());\n+            }\n+        });\n+\n+        LOG.debug(\"Starting initialization...\");\n+        for (SyncopeConsoleLoader loader : loaders) {\n+            LOG.debug(\"Invoking {} with priority {}\", AopUtils.getTargetClass(loader).getName(), loader.getPriority());\n+            loader.load();\n+        }\n+        LOG.debug(\"Initialization completed\");\n+    }\n+\n+}"},{"sha":"0ff7282d2e3af3ab444684faf80f5a5c1eac31fc","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/init/ImplementationClassNamesLoader.java","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.AbstractExtensionPanel;\n+import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AssignableTypeFilter;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n+\n+@Component\n+public class ImplementationClassNamesLoader implements SyncopeConsoleLoader {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(ImplementationClassNamesLoader.class);\n+\n+    private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n+\n+    private List<Class<? extends AbstractExtensionPanel>> extPanels;\n+\n+    @Override\n+    public Integer getPriority() {\n+        return 0;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void load() {\n+        previewers = new ArrayList<>();\n+        extPanels = new ArrayList<>();\n+\n+        ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractExtensionPanel.class));\n+\n+        for (BeanDefinition bd : scanner.findCandidateComponents(StringUtils.EMPTY)) {\n+            try {\n+                Class<?> clazz = ClassUtils.resolveClassName(\n+                        bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+                boolean isAbsractClazz = Modifier.isAbstract(clazz.getModifiers());\n+\n+                if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                } else if (AbstractExtensionPanel.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    extPanels.add((Class<? extends AbstractExtensionPanel>) clazz);\n+                }\n+\n+            } catch (Throwable t) {\n+                LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n+            }\n+        }\n+        previewers = Collections.unmodifiableList(previewers);\n+        extPanels = Collections.unmodifiableList(extPanels);\n+\n+        LOG.debug(\"Binary previewers found: {}\", previewers);\n+        LOG.debug(\"Extension panels found: {}\", extPanels);\n+    }\n+\n+    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n+        Class<? extends AbstractBinaryPreviewer> previewer = null;\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n+            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n+            if (ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n+                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n+                previewer = candidate;\n+            }\n+        }\n+        return previewer;\n+    }\n+\n+    public List<Class<? extends AbstractBinaryPreviewer>> getPreviewerClasses() {\n+        return previewers;\n+    }\n+\n+    public List<Class<? extends AbstractExtensionPanel>> getExtPanelClasses() {\n+        return extPanels;\n+    }\n+\n+}"},{"sha":"7a2f878060932c400172bf88dcf1c19c01ac90cc","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/init/MIMETypesLoader.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.util.io.IOUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class MIMETypesLoader implements SyncopeConsoleLoader {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(MIMETypesLoader.class);\n+\n+    private List<String> mimeTypes;\n+\n+    @Override\n+    public Integer getPriority() {\n+        return 10;\n+    }\n+\n+    @Override\n+    public void load() {\n+        final Set<String> mediaTypes = new HashSet<>();\n+        this.mimeTypes = new ArrayList<>();\n+        try {\n+            final String mimeTypesFile = IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes\"));\n+            for (String fileRow : mimeTypesFile.split(\"\\n\")) {\n+                if (StringUtils.isNotBlank(fileRow) && !fileRow.startsWith(\"#\")) {\n+                    mediaTypes.add(fileRow);\n+                }\n+            }\n+            this.mimeTypes.addAll(mediaTypes);\n+            Collections.sort(this.mimeTypes);\n+        } catch (Exception e) {\n+            LOG.error(\"Error reading file MIMETypes from resources\", e);\n+        }\n+    }\n+\n+    public List<String> getMimeTypes() {\n+        LOG.debug(\"Returning loaded MIME types list {}\", mimeTypes);\n+        return mimeTypes;\n+    }\n+}"},{"sha":"7c4d3d4018b3c062f5f6d51971f06de69f6a370a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/init/SyncopeConsoleLoader.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FSyncopeConsoleLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FSyncopeConsoleLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FSyncopeConsoleLoader.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+/**\n+ * Marker interface for Syncope console initialization.\n+ */\n+public interface SyncopeConsoleLoader {\n+\n+    /**\n+     * @return the priority that the implementing class has in the initialization process.\n+     */\n+    Integer getPriority();\n+\n+    /**\n+     * Perform initialization operations.\n+     */\n+    void load();\n+}"},{"sha":"830f369058b4883dba338f0328eabff554a84024","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/AbstractBasePage.java","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.XMLRolesReader;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.console.rest.ConfigurationRestClient;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.rest.UserSelfRestClient;\n+import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.PriorityHeaderItem;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AbstractBasePage extends WebPage {\n+\n+    private static final long serialVersionUID = 8611724965544132636L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBasePage.class);\n+\n+    protected static final String TASKS = \"Tasks\";\n+\n+    protected static final String FORM = \"form\";\n+\n+    protected static final String CANCEL = \"cancel\";\n+\n+    protected static final String SUBMIT = \"submit\";\n+\n+    protected static final String APPLY = \"apply\";\n+\n+    protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    @SpringBean\n+    protected UserRestClient userRestClient;\n+\n+    @SpringBean\n+    protected UserSelfRestClient userSelfRestClient;\n+\n+    @SpringBean\n+    protected GroupRestClient groupRestClient;\n+\n+    @SpringBean\n+    protected TaskRestClient taskRestClient;\n+\n+    @SpringBean\n+    protected SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    protected ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    protected ReportRestClient reportRestClient;\n+\n+    @SpringBean\n+    protected ConfigurationRestClient confRestClient;\n+\n+    @SpringBean\n+    protected MIMETypesLoader mimeTypesInitializer;\n+\n+    protected NotificationPanel feedbackPanel;\n+\n+    /**\n+     * Response flag set by the Modal Window after the operation is completed.\n+     */\n+    protected boolean modalResult = false;\n+\n+    public AbstractBasePage() {\n+        this(null);\n+    }\n+\n+    public AbstractBasePage(final PageParameters parameters) {\n+        super(parameters);\n+\n+        feedbackPanel = new NotificationPanel(Constants.FEEDBACK);\n+        feedbackPanel.setOutputMarkupId(true);\n+        add(feedbackPanel);\n+    }\n+\n+    public NotificationPanel getFeedbackPanel() {\n+        return feedbackPanel;\n+    }\n+\n+    public boolean isModalResult() {\n+        return modalResult;\n+    }\n+\n+    public void setModalResult(final boolean operationResult) {\n+        this.modalResult = operationResult;\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(new PriorityHeaderItem(meta));\n+    }\n+\n+}"},{"sha":"78ca9061f2f751e8afa6f35c4a982c6583485f4e","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/AbstractSchedTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractSchedTaskModalPage.java"},{"sha":"1c1bd0f78c4707afadd0e685d47947a6d8a8bae8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/AbstractSchemaModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractSchemaModalPage.java"},{"sha":"f5dfbcaf0f72c7df0b6863063ef982e3a2872729","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/AbstractStatusModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractStatusModalPage.java"},{"sha":"aa62b414f1b1bdce49f6fcd0da7c74e3ff5853fb","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/AbstractSyncTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractSyncTaskModalPage.java"},{"sha":"05658fc9a504f56b03d21945567c52764175be77","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ActivitiModelerPopupPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FActivitiModelerPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FActivitiModelerPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FActivitiModelerPopupPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ActivitiModelerPopupPage.java"},{"sha":"79deeb05e72c2e0618ac5e5fb99c46eb38659f7b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ApprovalModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ApprovalModalPage.java"},{"sha":"20892dd5c69224ccd2b8f01a2875ca98d11f5528","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/BaseModalPage.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.commons.CloseOnESCBehavior;\n+\n+/**\n+ * Syncope Modal Window.\n+ */\n+public abstract class BaseModalPage extends AbstractBasePage {\n+\n+    private static final long serialVersionUID = -1443079028368471943L;\n+\n+    public BaseModalPage() {\n+        super();\n+\n+        add(new CloseOnESCBehavior(\"keyup\"));\n+    }\n+}"},{"sha":"2540c37aae71a4e34e1c4525d713ec0e159c0b44","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.SyncopeApplication;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+/**\n+ * Syncope Wicket base-page.\n+ */\n+public class BasePage extends AbstractBasePage implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = 1571997737305598502L;\n+\n+    public BasePage() {\n+        this(null);\n+    }\n+\n+    public BasePage(final PageParameters parameters) {\n+        super(parameters);\n+\n+        pageSetup();\n+    }\n+\n+    private void pageSetup() {\n+        ((SyncopeApplication) getApplication()).setupNavigationPanel(this, xmlRolesReader, true);\n+\n+        final String kind = getClass().getSimpleName().toLowerCase();\n+        final BookmarkablePageLink kindLink = (BookmarkablePageLink) get(kind);\n+        if (kindLink != null) {\n+            kindLink.add(new Behavior() {\n+\n+                private static final long serialVersionUID = 1469628524240283489L;\n+\n+                @Override\n+                public void onComponentTag(final Component component, final ComponentTag tag) {\n+                    tag.put(\"class\", kind);\n+                }\n+            });\n+\n+            Component kindIcon = kindLink.get(0);\n+            if (kindIcon != null) {\n+                kindIcon.add(new Behavior() {\n+\n+                    private static final long serialVersionUID = 1469628524240283489L;\n+\n+                    @Override\n+                    public void onComponentTag(final Component component, final ComponentTag tag) {\n+                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind + Constants.PNG_EXT);\n+                    }\n+                });\n+            }\n+        }\n+\n+        ((SyncopeApplication) getApplication()).setupEditProfileModal(this, userSelfRestClient);\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return \"veil\";\n+    }\n+\n+    /**\n+     * Set a WindowClosedCallback for a ModalWindow instance.\n+     *\n+     * @param window window\n+     * @param container container\n+     */\n+    protected void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n+\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(container);\n+                if (isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    setModalResult(false);\n+                }\n+            }\n+        });\n+    }\n+}"},{"sha":"856f4692f313b34287d1912fe31a3a8792cc7639","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/BasePopupPage.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+public class BasePopupPage extends AbstractBasePage {\n+\n+    private static final long serialVersionUID = -2633667311332659505L;\n+\n+}"},{"sha":"95e514b2a3b47219f1cf79ea4ff82cb03abaf029","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java"},{"sha":"b9b896855a64e814173f8227a8df95943a1f95de","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java"},{"sha":"0c65ac2d955372ef2c06c25499051ad94b6355b8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ConfModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ConfModalPage.java"},{"sha":"9f8c7347bc8d262f19b4722425baccfd668dac49","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Configuration.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Configuration.java"},{"sha":"ebc041dd4c05db6abf970230fb734571b8e65d6d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ConfirmPasswordResetModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfirmPasswordResetModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfirmPasswordResetModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfirmPasswordResetModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ConfirmPasswordResetModalPage.java"},{"sha":"cf1c4050382474c9a2d15d4c49b34aa4f6be8780","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ConnObjectModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnObjectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnObjectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnObjectModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ConnObjectModalPage.java"},{"sha":"809559184966556acf0ab5f3720ab455dae9a904","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ConnectorModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ConnectorModalPage.java"},{"sha":"1abe7440d59122397f9fab3071150d942a13ffd1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/DerSchemaModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDerSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDerSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDerSchemaModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DerSchemaModalPage.java"},{"sha":"6f89ec3560be056ce76684e10f80b306dd6422ab","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java"},{"sha":"af502d20b79e136fd0b10e2ded2f273f67bedc18","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/EditUserModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/EditUserModalPage.java"},{"sha":"db4617142350ccd952b62224343bd433657d22d5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ErrorPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FErrorPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FErrorPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FErrorPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ErrorPage.java"},{"sha":"e39f3fca54aece32cab181f518cf7d15b9c9cb50","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ExecMessageModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FExecMessageModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FExecMessageModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FExecMessageModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ExecMessageModalPage.java"},{"sha":"c0ee7ec0258f4b16ed249c24a14753c2e856ba40","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/FailureMessageModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FFailureMessageModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FFailureMessageModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FFailureMessageModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/FailureMessageModalPage.java"},{"sha":"8b4daa9dc15418291ded1384729013a04075937f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/GroupModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupModalPage.java"},{"sha":"97b7abfc37ab3abcb698e5fb9bfd385aa5dc786d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/GroupSelectModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupSelectModalPage.java"},{"sha":"293e402436d35459dc534a3c1ae9f8faea3bdd4d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/GroupTemplateModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupTemplateModalPage.java"},{"sha":"2e9294049e46c2c1950ddbafd3a1e817be45138f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Groups.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Groups.java"},{"sha":"7b4ba68db3a48ff130937aba6171ce5b96dfd3f3","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/HomePage.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FHomePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+/**\n+ * Syncope Home-Page.\n+ */\n+public class HomePage extends BasePage {\n+\n+    private static final long serialVersionUID = -6712990478380766293L;\n+\n+    public HomePage(final PageParameters parameters) {\n+        super(parameters);\n+    }\n+}"},{"sha":"83e01634703bc7e534cb0516c6dd7d38aaaf058e","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/InfoModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FInfoModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FInfoModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FInfoModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/InfoModalPage.java"},{"sha":"deaa359a033fcd228309d3c68cc6f39d1be923e1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Login.java"},{"sha":"acf313b50859236f1556ce40bba5d56308ab8fde","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Logout.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogout.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Logout.java"},{"sha":"f2e2189ffec3b8f15adc7254d90b8bab7d0ce38c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/MembershipModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/MembershipModalPage.java"},{"sha":"98d8862d28e897b5575b9bfd724863470d152080","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/NotificationModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/NotificationModalPage.java"},{"sha":"70f63d6129e4516e2ae52b63d0a6cacd7069df77","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/NotificationTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/NotificationTaskModalPage.java"},{"sha":"3adba7d865d44ca8e03912b96e3593303c7b8104","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/PlainSchemaModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPlainSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPlainSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPlainSchemaModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PlainSchemaModalPage.java"},{"sha":"ead376a79bc85db5483b9718f48c5028dade0992","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/PolicyModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PolicyModalPage.java"},{"sha":"5a6779f3cbf0fa3ede978f250679a135c868c1d2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/PropagationTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPropagationTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PropagationTaskModalPage.java"},{"sha":"6418d61bf4e9cb945e69bb4c1da85fe1a7e93f44","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java"},{"sha":"51852be66ace224ef487b612ef0bdb69473b5e7f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/PushTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PushTaskModalPage.java"},{"sha":"c6b57d22a3bb852f61c76dd7c44fff0bfc178a19","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ReportExecResultDownloadModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ReportExecResultDownloadModalPage.java"},{"sha":"0ef7c6a09eb76800b4e5987e6db54c4974faede3","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ReportModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ReportModalPage.java"},{"sha":"36560b055e065f6fde1b373aa768e9111f3aba4e","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ReportletConfModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ReportletConfModalPage.java"},{"sha":"e48470160e218ea1bd9adba3a3490794d645bcaf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Reports.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Reports.java"},{"sha":"d8b762f118844eb6eea743a4edfd0b82022c6b9f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/RequestPasswordResetModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRequestPasswordResetModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRequestPasswordResetModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRequestPasswordResetModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/RequestPasswordResetModalPage.java"},{"sha":"0becc1aabf2a1ac9994090b74cc5753f0ce2dfd0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ResourceModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResourceModalPage.java"},{"sha":"542cc82c31d6595767477022702b217968e12403","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Resources.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Resources.java"},{"sha":"e5017e3d4a0f129b4fecd447fbca811a8f79bee5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModalPage.java"},{"sha":"622271704391a8463f410ba2e10f3f900157a3ad","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/SchedTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SchedTaskModalPage.java"},{"sha":"cffb7cdfb9da0762229f6f6820b5f154f318182c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Schema.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Schema.java"},{"sha":"12bfc2b8437513e2514b59ca0bbd978d77f88dd1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestionModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestionModalPage.java"},{"sha":"cab0e04d1e37bbdb0fd1b84c2f9485efbaa50ff5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java"},{"sha":"544f6704119245aba3b4a46d2c95f2c923c43408","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/SyncTaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SyncTaskModalPage.java"},{"sha":"c251d87cb0a3608bc3fcfa8e2988570de20e8940","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/TaskModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTaskModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/TaskModalPage.java"},{"sha":"296c3659efb02530ccaa2318e3090bfb37d5cfa3","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Tasks.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Tasks.java"},{"sha":"1329fe4be390fc4a5988ae3b23d40f124f670749","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Todo.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTodo.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Todo.java"},{"sha":"0835ca24f9c5e0c7e0b804d3799828af0c8f646b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/UserModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserModalPage.java"},{"sha":"ae8a5da251bce0391cb91429d4bb9db63f05732b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/UserOwnerSelectModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserOwnerSelectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserOwnerSelectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserOwnerSelectModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserOwnerSelectModalPage.java"},{"sha":"087bd696f12a16e6a49957d17de2dc004cffb737","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/UserSelfModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserSelfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserSelfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserSelfModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserSelfModalPage.java"},{"sha":"2b04035a222faa44e12dee2744d371b8cd64f83f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/UserTemplateModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserTemplateModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserTemplateModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserTemplateModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserTemplateModalPage.java"},{"sha":"98f93bf50c6fda4af836ef4eca246afa3c316374","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Users.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUsers.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Users.java"},{"sha":"d47e07f30a2df457416a8c5da1d6b629d4168f5a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/ViewUserModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FViewUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FViewUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FViewUserModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ViewUserModalPage.java"},{"sha":"425b9cb9fa42e68011e5ad12e14800c37c8a95e3","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/VirSchemaModalPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FVirSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FVirSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FVirSchemaModalPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/VirSchemaModalPage.java"},{"sha":"d9f884dbe849f6e2e806f40f353e5f2e6118b0dc","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/WelcomePage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/WelcomePage.java"},{"sha":"b5a8d101e5597e8ded601dbe54483c814d9c8fa5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/XMLEditorPopupPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/XMLEditorPopupPage.java"},{"sha":"a785e9f882995fe0ef8a31830edd58447a651467","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AbstractExtensionPanel.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.commons.XMLRolesReader;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public abstract class AbstractExtensionPanel extends Panel {\n+\n+    private static final long serialVersionUID = 4627828052717627159L;\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    protected PageReference pageref;\n+\n+    public AbstractExtensionPanel(final String id, final PageReference pageref) {\n+        super(id);\n+        this.pageref = pageref;\n+    }\n+}"},{"sha":"e066aacb91bd4d862803bfc9a68455114d770f93","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AbstractProvisioningTasksPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractProvisioningTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractProvisioningTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractProvisioningTasksPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractProvisioningTasksPanel.java"},{"sha":"ba4411e0c43d0f8539cde8bdc78e3ce9478f76de","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchPanel.java"},{"sha":"6139ee4969c9df4d69702a87a9569a774aa81e5c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java"},{"sha":"381f878e5948464d0975b8d5ab485e90aafdbc0d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AbstractTasks.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTasks.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractTasks.java"},{"sha":"3bc7dd88edc443a6835581a5d2da9c7208199f57","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AccountInformationPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccountInformationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccountInformationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccountInformationPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AccountInformationPanel.java"},{"sha":"bfade982cd0ce14c7c06fd878ea75f2b8c34abdc","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java"},{"sha":"563bd17c3eb7bcda58ebc7a63cf754c7c08abd2b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java"},{"sha":"714cb5f3120585eee9eac3817450fd83ca7c389b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AnnotatedBeanPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnnotatedBeanPanel.java"},{"sha":"98ada288d64b4cda4c66df097201c9f3de531797","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/AttrTemplatesPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AttrTemplatesPanel.java"},{"sha":"a5f6588412a535fd29d20483a432a280af43c87e","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/DataTablePanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DataTablePanel.java"},{"sha":"8be459a6d4a1da80a261b262f0a07615859798c2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/DerAttrsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerAttrsPanel.java"},{"sha":"5332cb52ef953069d2d75410d7e9410ad4d635ab","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/EventSelectionPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FEventSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FEventSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FEventSelectionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/EventSelectionPanel.java"},{"sha":"7662e4a1c93134eb37baf67ab1a89137c1dd8127","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupDetailsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDetailsPanel.java"},{"sha":"7cbf47e4d68f82199a3a01284ad15408e7df2644","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupPanel.java"},{"sha":"d13ab9423f9b6b6884bd9cb93b2edf651a50919c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchPanel.java"},{"sha":"a7dac82df30ab2ee1db7f78fa918fb18e18e5bce","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java"},{"sha":"4e0e1f9a1eebe0654a461a7227813dd35ff95fcb","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupSecurityPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSecurityPanel.java"},{"sha":"f9a56e69fae07b8b39eeaef7e8068a990c203527","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupSummaryPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSummaryPanel.java"},{"sha":"9615554d87040a548c2190e154f01957d21a9670","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/GroupTabPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupTabPanel.java"},{"sha":"7969c6333c1ee8562e73025d74d1495318481409","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ImagePanel.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.request.resource.ContextRelativeResource;\n+\n+public class ImagePanel extends Panel {\n+\n+    private static final long serialVersionUID = 5564818820574092960L;\n+\n+    final Image img;\n+\n+    public ImagePanel(final String id, final ContextRelativeResource img) {\n+        super(id);\n+        this.img = new Image(\"img\", img);\n+        add(this.img);\n+    }\n+\n+    @Override\n+    public Component add(final Behavior... behaviors) {\n+        this.img.add(behaviors);\n+        return this;\n+    }\n+}"},{"sha":"d898ba610706ad43aeac4e6c2b620d33f34c084d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/JQueryUITabbedPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FJQueryUITabbedPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FJQueryUITabbedPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FJQueryUITabbedPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/JQueryUITabbedPanel.java"},{"sha":"26f18944d192576f573293da67d70ee311e24c69","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/LayoutsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLayoutsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLayoutsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLayoutsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/LayoutsPanel.java"},{"sha":"70e03613f482d887d0d38873c1f4b9844fb08055","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/LoggerCategoryPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLoggerCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLoggerCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLoggerCategoryPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/LoggerCategoryPanel.java"},{"sha":"fa0a9bc54bd961932e6f823298cef76a0aea4e5d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/MembershipsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MembershipsPanel.java"},{"sha":"8624d26173c57f2ed5d76638f43df0d8164df442","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.feedback.FeedbackMessage;\n+import org.apache.wicket.feedback.IFeedbackMessageFilter;\n+import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.model.Model;\n+\n+public class NotificationPanel extends FeedbackPanel {\n+\n+    private static final long serialVersionUID = 5895940553202128621L;\n+\n+    private static final String CSS_CLASS = \"notificationpanel\";\n+\n+    private static final String DEFAULT_ADDITIONAL_CSS_CLASS = \"notificationpanel_top_right\";\n+\n+    private final String additionalCSSClass;\n+\n+    public NotificationPanel(final String id) {\n+        this(id, null, null);\n+    }\n+\n+    public NotificationPanel(final String id, final String additionalCSSClass,\n+            final IFeedbackMessageFilter feedbackMessageFilter) {\n+\n+        super(id, feedbackMessageFilter);\n+\n+        this.add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+\n+            private static final long serialVersionUID = -7133385027739964990L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                target.appendJavaScript(\n+                        \"setTimeout(\\\"$('div#\" + getMarkupId() + \"').fadeOut('normal')\\\", 0);\");\n+            }\n+        });\n+\n+        this.additionalCSSClass = StringUtils.isBlank(additionalCSSClass)\n+                ? DEFAULT_ADDITIONAL_CSS_CLASS\n+                : additionalCSSClass;\n+\n+        // set custom markup id and ouput it, to find the component later on in the js function\n+        setMarkupId(id);\n+        setOutputMarkupId(true);\n+\n+        // Add the additional cssClass and hide the element by default\n+        add(new AttributeModifier(\"class\", new Model<String>(CSS_CLASS + \" \" + this.additionalCSSClass)));\n+        add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0;\")));\n+    }\n+\n+    /**\n+     * Method to refresh the notification panel.\n+     *\n+     * If there are any feedback messages for the user, find the gravest level, format the notification panel\n+     * accordingly and show it.\n+     *\n+     * @param target AjaxRequestTarget to add panel and the calling javascript function\n+     */\n+    public void refresh(final AjaxRequestTarget target) {\n+        // any feedback at all in the current form?\n+        if (anyMessage()) {\n+            int highestFeedbackLevel = FeedbackMessage.INFO;\n+\n+            // any feedback with the given level?\n+            if (anyMessage(FeedbackMessage.WARNING)) {\n+                highestFeedbackLevel = FeedbackMessage.WARNING;\n+            }\n+            if (anyMessage(FeedbackMessage.ERROR)) {\n+                highestFeedbackLevel = FeedbackMessage.ERROR;\n+            }\n+\n+            // add the css classes to the notification panel, \n+            // including the border css which represents the highest level of feedback\n+            add(new AttributeModifier(\"class\",\n+                    new Model<String>(CSS_CLASS\n+                            + \" \" + additionalCSSClass\n+                            + \" notificationpanel_border_\" + highestFeedbackLevel)));\n+\n+            // refresh the panel and call the js function with the panel markup id \n+            // and the total count of messages\n+            target.add(this);\n+            if (anyMessage(FeedbackMessage.ERROR)) {\n+                target.appendJavaScript(\n+                        \"$('div#\" + getMarkupId() + \"').fadeTo('normal', 1.0);\");\n+            } else {\n+                target.appendJavaScript(\n+                        \"showNotification('\" + getMarkupId() + \"', \" + getCurrentMessages().size() + \");\");\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected String getCSSClass(final FeedbackMessage message) {\n+        return \"notificationpanel_row_\" + message.getLevelAsString();\n+    }\n+}"},{"sha":"d7f52e197551a3aa34ce1cab122a8feaa52a35b7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/NotificationTasks.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationTasks.java"},{"sha":"b0517b0cb1f876f971aeb49bce3645aefeb085e0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/PlainAttrsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainAttrsPanel.java"},{"sha":"4d66edab99b47231f895613f2f6effdf7a77431c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/PoliciesPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPoliciesPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PoliciesPanel.java"},{"sha":"a55be9fc8411ce80e1870220a88feae27bfffd1a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/PolicyBeanPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PolicyBeanPanel.java"},{"sha":"41fdb03b2c2990db76772a46ff074441b09da7c8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/PropagationTasks.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPropagationTasks.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PropagationTasks.java"},{"sha":"a93000d02701c42eb17cdbce11dd6a18840eda4c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/PushTasksPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPushTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPushTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPushTasksPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PushTasksPanel.java"},{"sha":"b3e63c572fa4ab0a913a4fd12158baff5b9ac092","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java"},{"sha":"3bff23f529bafd9368b6083af5da4adf12d010b2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java"},{"sha":"406676f31509c96abd02a2c03fbaa0b8f518c29c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java"},{"sha":"40e031a84c4c418890ed59cd224ca29aff360d41","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ResourceSecurityPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceSecurityPanel.java"},{"sha":"028b3a0e7b3092f314b77793549210da192bfc8b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/ResourcesPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourcesPanel.java"},{"sha":"205bfa5f036048ffb3f8216ca1bd7967e0ee6d7b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SchedTasks.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchedTasks.java"},{"sha":"488a2cf4cd05bcd53e865003db9d631f57710a94","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SearchClause.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchClause.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchClause.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchClause.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SearchClause.java"},{"sha":"c081cd3b3bf13931e6bcd570f5fb6dd80b3bd35e","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SearchView.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SearchView.java"},{"sha":"8658cf67afa9bd4d40652549a4b3c75acc519fa5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionPanel.java"},{"sha":"efa5a3dbf9de538fdb27048317cdc57efc5d163a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SelectOnlyUserSearchResultPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SelectOnlyUserSearchResultPanel.java"},{"sha":"96c8d77fcf6ccd5d1ff3242fa60ef54bf58854d0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SelectedEventsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectedEventsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectedEventsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectedEventsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SelectedEventsPanel.java"},{"sha":"fb740656788b708faad0d86b2976f5f90977c866","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/StatusPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/StatusPanel.java"},{"sha":"55617164863f767f2f5201b9bd5fbbe1f0026b10","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SyncTasksPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SyncTasksPanel.java"},{"sha":"bf990eca01eefbccbdc0ecebf0ea3f6f61cacf8f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/UserDetailsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDetailsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDetailsPanel.java"},{"sha":"6618728a22bc301b193d6ecb5e0f43c276ce2e69","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/UserSearchPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchPanel.java"},{"sha":"132bb664f8775d42f29d3ad41e9f0b03b606ac27","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java"},{"sha":"84049f0d17c603f61b5d53e6160e55a85e182fe9","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/VirAttrsPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirAttrsPanel.java"},{"sha":"8a95de60907b9adb4d6d7db13aabe2f97c670ada","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/resources/FilesystemResource.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/FilesystemResource.java"},{"sha":"2104745454e85010dd6e6320652df310d7e01b0c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefGETResource.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefGETResource.java"},{"sha":"add6485dd547c2835e6d83fffd0c4931380cf798","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java"},{"sha":"a18a0a9dc1bf78d4d270edd55186dbbaabfff744","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/AbstractSubjectRestClient.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractSubjectRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+\n+public abstract class AbstractSubjectRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 1962529678091410544L;\n+\n+    public abstract int count();\n+\n+    public abstract List<? extends AbstractAttributableTO> list(int page, int size, final SortParam<String> sort);\n+\n+    public abstract int searchCount(String fiql);\n+\n+    public abstract List<? extends AbstractAttributableTO> search(String fiql,\n+            int page, int size, final SortParam<String> sort);\n+\n+    public abstract ConnObjectTO getConnectorObject(String resourceName, Long id);\n+\n+    public abstract AbstractAttributableTO delete(String etag, Long id);\n+\n+    public abstract BulkActionResult bulkAction(BulkAction action);\n+}"},{"sha":"dc9d12fa97db1b60c15a23ff4bfc9126d8c697bb","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ApprovalRestClient.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApprovalRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.rest.api.service.UserWorkflowService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Todo services.\n+ */\n+@Component\n+public class ApprovalRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -4785231164900813921L;\n+\n+    public List<WorkflowFormTO> getForms() {\n+        return getService(UserWorkflowService.class).getForms();\n+    }\n+\n+    public WorkflowFormTO claimForm(final String taskId) {\n+        return getService(UserWorkflowService.class).claimForm(taskId);\n+    }\n+\n+    public void submitForm(final WorkflowFormTO form) {\n+        getService(UserWorkflowService.class).submitForm(form);\n+    }\n+}"},{"sha":"01e68388a89b257910bcbb5fe136a4b1a9c14c9f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/AuthRestClient.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AuthRestClient.java"},{"sha":"ddab7afd98909a1c8ae7f2c2276ceabaed03d06d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class BaseRestClient implements Serializable {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(BaseRestClient.class);\n+\n+    private static final long serialVersionUID = 1523999867826481989L;\n+\n+    protected <T> T getAnonymousService(final Class<T> serviceClass) {\n+        return SyncopeSession.get().getAnonymousService(serviceClass);\n+    }\n+\n+    protected <T> T getService(final Class<T> serviceClass) {\n+        return SyncopeSession.get().getService(serviceClass);\n+    }\n+\n+    protected <T> T getService(final String etag, final Class<T> serviceClass) {\n+        return SyncopeSession.get().getService(etag, serviceClass);\n+    }\n+\n+    protected <T> void resetClient(final Class<T> serviceClass) {\n+        SyncopeSession.get().resetClient(serviceClass);\n+    }\n+\n+    protected String toOrderBy(final SortParam<String> sort) {\n+        OrderByClauseBuilder builder = SyncopeClient.getOrderByClauseBuilder();\n+\n+        String property = sort.getProperty();\n+        if (property.indexOf('#') != -1) {\n+            property = property.substring(property.indexOf('#') + 1);\n+        }\n+\n+        if (sort.isAscending()) {\n+            builder.asc(property);\n+        } else {\n+            builder.desc(property);\n+        }\n+\n+        return builder.build();\n+    }\n+}"},{"sha":"ca00ea81104708bab457acf0f557f1ff93d0622c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.commons.AttrLayoutType;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConfTO;\n+import org.apache.syncope.common.rest.api.service.ConfigurationService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class ConfigurationRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 7692363064029538722L;\n+\n+    @Autowired\n+    private SchemaRestClient schemaRestClient;\n+\n+    public ConfTO list() {\n+        ConfTO conf = getService(ConfigurationService.class).list();\n+\n+        for (Iterator<AttrTO> it = conf.getPlainAttrs().iterator(); it.hasNext();) {\n+            AttrTO attr = it.next();\n+            for (AttrLayoutType type : AttrLayoutType.values()) {\n+                if (type.getConfKey().equals(attr.getSchema())) {\n+                    it.remove();\n+                }\n+            }\n+        }\n+\n+        return conf;\n+    }\n+\n+    public AttrTO read(final String key) {\n+        try {\n+            return getService(ConfigurationService.class).read(key);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a configuration schema\", e);\n+        }\n+        return null;\n+    }\n+\n+    public AttrTO readAttrLayout(final AttrLayoutType type) {\n+        if (type == null) {\n+            return null;\n+        }\n+\n+        AttrTO attrLayout = read(type.getConfKey());\n+        if (attrLayout == null) {\n+            attrLayout = new AttrTO();\n+            attrLayout.setSchema(type.getConfKey());\n+        }\n+        if (attrLayout.getValues().isEmpty()) {\n+            attrLayout.getValues().addAll(schemaRestClient.getPlainSchemaNames(type.getAttrType()));\n+        }\n+\n+        return attrLayout;\n+    }\n+\n+    public void set(final AttrTO attributeTO) {\n+        getService(ConfigurationService.class).set(attributeTO.getSchema(), attributeTO);\n+    }\n+\n+    public void delete(final String key) {\n+        getService(ConfigurationService.class).delete(key);\n+    }\n+\n+    public List<String> getMailTemplates() {\n+        return SyncopeSession.get().getSyncopeTO().getMailTemplates();\n+    }\n+\n+    public Response dbExport() {\n+        return getService(ConfigurationService.class).export();\n+    }\n+}"},{"sha":"d9a729dc5c9b698c9a3333c5576efe089c596ef0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"added","additions":217,"deletions":0,"changes":217,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,217 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnBundleTO;\n+import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.rest.api.service.ConnectorService;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Connectors services.\n+ */\n+@Component\n+public class ConnectorRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -6870366819966266617L;\n+\n+    public List<ConnInstanceTO> getAllConnectors() {\n+        List<ConnInstanceTO> connectors = Collections.<ConnInstanceTO>emptyList();\n+        try {\n+            connectors = getService(ConnectorService.class).list(SyncopeSession.get().getLocale().toString());\n+        } catch (Exception e) {\n+            LOG.error(\"While reading connectors\", e);\n+        }\n+        return connectors;\n+    }\n+\n+    public void create(final ConnInstanceTO connectorTO) {\n+        Set<ConnConfProperty> filteredConf = filterProperties(connectorTO.getConfiguration());\n+        connectorTO.getConfiguration().clear();\n+        connectorTO.getConfiguration().addAll(filteredConf);\n+        getService(ConnectorService.class).create(connectorTO);\n+    }\n+\n+    /**\n+     * Load an already existent connector by its name.\n+     *\n+     * @param connectorInstanceId the id\n+     * @return ConnInstanceTO\n+     */\n+    public ConnInstanceTO read(final Long connectorInstanceId) {\n+        ConnInstanceTO connectorTO = null;\n+\n+        try {\n+            connectorTO = getService(ConnectorService.class).read(connectorInstanceId);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a connector\", e);\n+        }\n+\n+        return connectorTO;\n+    }\n+\n+    public void update(final ConnInstanceTO connectorTO) {\n+        Set<ConnConfProperty> filteredConf = filterProperties(connectorTO.getConfiguration());\n+        connectorTO.getConfiguration().clear();\n+        connectorTO.getConfiguration().addAll(filteredConf);\n+        getService(ConnectorService.class).update(connectorTO.getKey(), connectorTO);\n+    }\n+\n+    public ConnInstanceTO delete(final Long id) {\n+        ConnInstanceTO instanceTO = getService(ConnectorService.class).read(id);\n+        getService(ConnectorService.class).delete(id);\n+        return instanceTO;\n+    }\n+\n+    public List<ConnBundleTO> getAllBundles() {\n+        List<ConnBundleTO> bundles = Collections.<ConnBundleTO>emptyList();\n+\n+        try {\n+            bundles = getService(ConnectorService.class).getBundles(SyncopeSession.get().getLocale().toString());\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting connector bundles\", e);\n+        }\n+\n+        return bundles;\n+    }\n+\n+    /**\n+     * Get all configuration properties for the given connector instance.\n+     *\n+     * @param connectorId the connector id\n+     * @return List of ConnConfProperty, or an empty list in case none found\n+     */\n+    public List<ConnConfProperty> getConnectorProperties(final Long connectorId) {\n+        List<ConnConfProperty> properties = null;\n+\n+        try {\n+            properties = getService(ConnectorService.class).getConfigurationProperties(connectorId);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting connector configuration properties\", e);\n+        }\n+\n+        return properties;\n+    }\n+\n+    private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> properties) {\n+        Set<ConnConfProperty> newProperties = new HashSet<ConnConfProperty>();\n+\n+        for (ConnConfProperty property : properties) {\n+            ConnConfProperty prop = new ConnConfProperty();\n+            prop.setSchema(property.getSchema());\n+            prop.setOverridable(property.isOverridable());\n+\n+            final List<Object> parsed = new ArrayList<Object>();\n+            if (property.getValues() != null) {\n+                for (Object obj : property.getValues()) {\n+                    if (obj != null && !obj.toString().isEmpty()) {\n+                        parsed.add(obj);\n+                    }\n+                }\n+            }\n+            prop.getValues().addAll(parsed);\n+            newProperties.add(prop);\n+        }\n+        return newProperties;\n+    }\n+\n+    /**\n+     * Test connector connection.\n+     *\n+     * @param connectorTO connector\n+     * @return Connection status\n+     */\n+    public boolean check(final ConnInstanceTO connectorTO) {\n+        ConnInstanceTO toBeChecked = new ConnInstanceTO();\n+        BeanUtils.copyProperties(connectorTO, toBeChecked, new String[] { \"configuration\", \"configurationMap\" });\n+        toBeChecked.getConfiguration().addAll(filterProperties(connectorTO.getConfiguration()));\n+\n+        boolean check = false;\n+        try {\n+            check = getService(ConnectorService.class).check(toBeChecked);\n+        } catch (Exception e) {\n+            LOG.error(\"While checking {}\", toBeChecked, e);\n+        }\n+\n+        return check;\n+    }\n+\n+    public boolean check(final ResourceTO resourceTO) {\n+        boolean check = false;\n+        try {\n+            check = getService(ResourceService.class).check(resourceTO);\n+        } catch (Exception e) {\n+            LOG.error(\"Connector not found {}\", resourceTO.getConnectorId(), e);\n+        }\n+\n+        return check;\n+    }\n+\n+    public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n+        List<String> schemaNames = new ArrayList<String>();\n+        try {\n+            List<PlainSchemaTO> response = getService(ConnectorService.class).\n+                    getSchemaNames(connectorTO.getKey(), connectorTO, false);\n+            for (PlainSchemaTO schema : response) {\n+                schemaNames.add(schema.getKey());\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"While getting schema names\", e);\n+        } finally {\n+            // re-order schema names list\n+            Collections.sort(schemaNames);\n+        }\n+\n+        return schemaNames;\n+    }\n+\n+    public List<ConnIdObjectClassTO> getSupportedObjectClasses(final ConnInstanceTO connectorTO) {\n+        List<ConnIdObjectClassTO> result = Collections.emptyList();\n+        try {\n+            result = getService(ConnectorService.class).getSupportedObjectClasses(connectorTO.getKey(), connectorTO);\n+        } catch (Exception e) {\n+            LOG.error(\"While getting supported object classes\", e);\n+        }\n+\n+        return result;\n+    }\n+\n+    public void reload() {\n+        getService(ConnectorService.class).reload();\n+    }\n+\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(ConnectorService.class).bulk(action);\n+    }\n+}"},{"sha":"f78a6824ece773f5be276287b8b21d60f6f1ecde","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ExecutionRestClient.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+public interface ExecutionRestClient {\n+\n+    void startExecution(long executionCollectorId);\n+\n+    void deleteExecution(long executionId);\n+}"},{"sha":"91634f21c5df4c03b51bb60597b37f777895a9c9","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"added","additions":184,"deletions":0,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.rest.api.CollectionWrapper;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Group's services.\n+ */\n+@Component\n+public class GroupRestClient extends AbstractSubjectRestClient {\n+\n+    private static final long serialVersionUID = -8549081557283519638L;\n+\n+    @Override\n+    public int count() {\n+        return getService(GroupService.class).list(1, 1).getTotalCount();\n+    }\n+\n+    public List<GroupTO> list() {\n+        return getService(GroupService.class).list(1, 1000).getResult();\n+    }\n+\n+    @Override\n+    public List<GroupTO> list(final int page, final int size, final SortParam<String> sort) {\n+        return getService(GroupService.class).list(page, size, toOrderBy(sort)).getResult();\n+    }\n+\n+    @Override\n+    public int searchCount(final String fiql) {\n+        return getService(GroupService.class).search(fiql, 1, 1).getTotalCount();\n+    }\n+\n+    @Override\n+    public List<GroupTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n+        return getService(GroupService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+    }\n+\n+    @Override\n+    public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n+        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.GROUP, id);\n+    }\n+\n+    public GroupTO create(final GroupTO groupTO) {\n+        Response response = getService(GroupService.class).create(groupTO);\n+        return response.readEntity(GroupTO.class);\n+    }\n+\n+    public GroupTO read(final Long id) {\n+        return getAnonymousService(GroupService.class).read(id);\n+    }\n+\n+    public GroupTO update(final String etag, final GroupMod groupMod) {\n+        GroupTO result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public GroupTO delete(final String etag, final Long id) {\n+        GroupTO result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.delete(id).readEntity(GroupTO.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(GroupService.class).bulk(action);\n+    }\n+\n+    public void unlink(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNLINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(GroupService.class);\n+        }\n+    }\n+\n+    public void link(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            service.bulkAssociation(groupId, ResourceAssociationActionType.LINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(GroupService.class);\n+        }\n+    }\n+\n+    public BulkActionResult deprovision(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.DEPROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult provision(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkAssociation(groupId, ResourceAssociationActionType.PROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult unassign(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult assign(final String etag, final long groupId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkAssociation(groupId, ResourceAssociationActionType.ASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(GroupService.class);\n+        }\n+        return result;\n+    }\n+}"},{"sha":"6c7959c288e7553fc9d6593ea414c2eaa6f27c8d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/InvalidPolicyType.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FInvalidPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FInvalidPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FInvalidPolicyType.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/InvalidPolicyType.java"},{"sha":"a8b40ac55a3b5ba02b110f881267a0383c5832fe","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/LoggerRestClient.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.to.EventCategoryTO;\n+import org.apache.syncope.common.lib.to.LoggerTO;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.apache.syncope.common.lib.types.LoggerType;\n+import org.apache.syncope.common.rest.api.CollectionWrapper;\n+import org.apache.syncope.common.rest.api.service.LoggerService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class LoggerRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 4579786978763032240L;\n+\n+    public List<LoggerTO> listLogs() {\n+        return getService(LoggerService.class).list(LoggerType.LOG);\n+    }\n+\n+    public List<AuditLoggerName> listAudits() {\n+        return CollectionWrapper.wrapLogger(getService(LoggerService.class).list(LoggerType.AUDIT));\n+    }\n+\n+    public Map<String, Set<AuditLoggerName>> listAuditsByCategory() {\n+        Map<String, Set<AuditLoggerName>> result = new HashMap<String, Set<AuditLoggerName>>();\n+        for (AuditLoggerName auditLoggerName : listAudits()) {\n+            if (!result.containsKey(auditLoggerName.getCategory())) {\n+                result.put(auditLoggerName.getCategory(), new HashSet<AuditLoggerName>());\n+            }\n+\n+            result.get(auditLoggerName.getCategory()).add(auditLoggerName);\n+        }\n+\n+        return result;\n+    }\n+\n+    public void setLogLevel(final String name, final LoggerLevel level) {\n+        LoggerTO loggerTO = new LoggerTO();\n+        loggerTO.setKey(name);\n+        loggerTO.setLevel(level);\n+        getService(LoggerService.class).update(LoggerType.LOG, name, loggerTO);\n+    }\n+\n+    public void enableAudit(final AuditLoggerName auditLoggerName) {\n+        String name = auditLoggerName.toLoggerName();\n+        LoggerTO loggerTO = new LoggerTO();\n+        loggerTO.setKey(name);\n+        loggerTO.setLevel(LoggerLevel.DEBUG);\n+        getService(LoggerService.class).update(LoggerType.AUDIT, name, loggerTO);\n+    }\n+\n+    public void deleteLog(final String name) {\n+        getService(LoggerService.class).delete(LoggerType.LOG, name);\n+    }\n+\n+    public void disableAudit(final AuditLoggerName auditLoggerName) {\n+        getService(LoggerService.class).delete(LoggerType.AUDIT, auditLoggerName.toLoggerName());\n+    }\n+\n+    public List<EventCategoryTO> listEvents() {\n+        try {\n+            return getService(LoggerService.class).events();\n+        } catch (Exception e) {\n+            return Collections.<EventCategoryTO>emptyList();\n+        }\n+    }\n+}"},{"sha":"687ade0311c7f1cb561a345d540d17ddd60dfcb9","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.rest.api.service.NotificationService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class NotificationRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 6328933265096511690L;\n+\n+    public List<NotificationTO> getAllNotifications() {\n+        return getService(NotificationService.class).list();\n+    }\n+\n+    public NotificationTO read(final Long id) {\n+        return getService(NotificationService.class).read(id);\n+    }\n+\n+    public void create(final NotificationTO notificationTO) {\n+        getService(NotificationService.class).create(notificationTO);\n+    }\n+\n+    public void update(final NotificationTO notificationTO) {\n+        getService(NotificationService.class).update(notificationTO.getKey(), notificationTO);\n+    }\n+\n+    public void delete(final Long id) {\n+        getService(NotificationService.class).delete(id);\n+    }\n+}"},{"sha":"4409f7cfe6c40a0acf1a1cbb5e7a718c800ac1c4","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.to.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.common.rest.api.service.PolicyService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Policy services.\n+ */\n+@Component\n+public class PolicyRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -1392090291817187902L;\n+\n+    public <T extends AbstractPolicyTO<?>> T getGlobalPolicy(final PolicyType type) {\n+        T policy = null;\n+        try {\n+            policy = getService(PolicyService.class).readGlobal(type);\n+        } catch (Exception e) {\n+            LOG.warn(\"No global \" + type + \" policy found\", e);\n+        }\n+        return policy;\n+    }\n+\n+    public <T extends AbstractPolicyTO<?>> T getPolicy(final Long id) {\n+        T policy = null;\n+        try {\n+            policy = getService(PolicyService.class).read(id);\n+        } catch (Exception e) {\n+            LOG.warn(\"No policy found for id {}\", id, e);\n+        }\n+        return policy;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends AbstractPolicyTO<?>> List<T> getPolicies(final PolicyType type, final boolean includeGlobal) {\n+        final List<T> res = new ArrayList<>();\n+\n+        try {\n+            res.addAll((List<T>) getService(PolicyService.class).list(type));\n+        } catch (Exception ignore) {\n+            LOG.debug(\"No policy found\", ignore);\n+        }\n+\n+        if (includeGlobal) {\n+            try {\n+                T globalPolicy = getGlobalPolicy(type);\n+                if (globalPolicy != null) {\n+                    res.add(0, globalPolicy);\n+                }\n+            } catch (Exception ignore) {\n+                LOG.warn(\"No global policy found\", ignore);\n+            }\n+        }\n+\n+        return res;\n+    }\n+\n+    public <T extends AbstractPolicyTO<?>> void createPolicy(final T policy) {\n+        getService(PolicyService.class).create(policy);\n+    }\n+\n+    public <T extends AbstractPolicyTO<?>> void updatePolicy(final T policy) {\n+        getService(PolicyService.class).update(policy.getKey(), policy);\n+    }\n+\n+    public void delete(final Long id, final Class<? extends AbstractPolicyTO<?>> policyClass) {\n+        getService(PolicyService.class).delete(id);\n+    }\n+\n+    public List<String> getCorrelationRuleClasses() {\n+        List<String> rules = null;\n+\n+        try {\n+            rules = SyncopeSession.get().getSyncopeTO().getSyncCorrelationRules();\n+        } catch (Exception e) {\n+            LOG.error(\"While getting all correlation rule classes\", e);\n+        }\n+\n+        return rules;\n+    }\n+}"},{"sha":"81b58ac9fbd5143dfa2c29bd0a578f5fe739c9a0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.apache.syncope.common.lib.wrap.ReportletConfClass;\n+import org.apache.syncope.common.rest.api.service.ReportService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class ReportRestClient extends BaseRestClient implements ExecutionRestClient {\n+\n+    private static final long serialVersionUID = 1644689667998953604L;\n+\n+    public List<String> getReportletConfClasses() {\n+        List<String> result = new ArrayList<String>();\n+\n+        try {\n+            List<ReportletConfClass> reportletConfClasses = getService(ReportService.class).getReportletConfClasses();\n+            for (ReportletConfClass clazz : reportletConfClasses) {\n+                result.add(clazz.getElement());\n+            }\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting available reportlet classes\", e);\n+        }\n+\n+        return result;\n+    }\n+\n+    public ReportTO read(final Long reportId) {\n+        return getService(ReportService.class).read(reportId);\n+    }\n+\n+    public List<ReportTO> list() {\n+        return getService(ReportService.class).list().getResult();\n+    }\n+\n+    public List<ReportTO> list(final int page, final int size, final SortParam<String> sort) {\n+        return getService(ReportService.class).list(page, size, toOrderBy(sort)).getResult();\n+    }\n+\n+    public int count() {\n+        return getService(ReportService.class).list(1, 1).getTotalCount();\n+    }\n+\n+    public void create(final ReportTO reportTO) {\n+        getService(ReportService.class).create(reportTO);\n+    }\n+\n+    public void update(final ReportTO reportTO) {\n+        getService(ReportService.class).update(reportTO.getKey(), reportTO);\n+    }\n+\n+    /**\n+     * Delete specified report.\n+     *\n+     * @param reportId report to delete\n+     */\n+    public void delete(final Long reportId) {\n+        getService(ReportService.class).delete(reportId);\n+    }\n+\n+    /**\n+     * Start execution for the specified report.\n+     *\n+     * @param reportId report id\n+     */\n+    @Override\n+    public void startExecution(final long reportId) {\n+        getService(ReportService.class).execute(reportId);\n+    }\n+\n+    /**\n+     * Delete specified report execution.\n+     *\n+     * @param reportExecId report execution id\n+     */\n+    @Override\n+    public void deleteExecution(final long reportExecId) {\n+        getService(ReportService.class).deleteExecution(reportExecId);\n+    }\n+\n+    public Response exportExecutionResult(final Long executionId, final ReportExecExportFormat fmt) {\n+        return getService(ReportService.class).exportExecutionResult(executionId, fmt);\n+    }\n+}"},{"sha":"2c4421184d243afe87a1a71c5162c1e1db8100ae","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"added","additions":94,"deletions":0,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.common.lib.wrap.SubjectKey;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Resources services.\n+ */\n+@Component\n+public class ResourceRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -6898907679835668987L;\n+\n+    public List<String> getPropagationActionsClasses() {\n+        return SyncopeSession.get().getSyncopeTO().getPropagationActions();\n+    }\n+\n+    public List<ResourceTO> getAll() {\n+        List<ResourceTO> resources = null;\n+\n+        try {\n+            resources = getService(ResourceService.class).list();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all resources\", e);\n+        }\n+\n+        return resources;\n+    }\n+\n+    public void create(final ResourceTO resourceTO) {\n+        getService(ResourceService.class).create(resourceTO);\n+    }\n+\n+    public ResourceTO read(final String name) {\n+        ResourceTO resourceTO = null;\n+\n+        try {\n+            resourceTO = getService(ResourceService.class).read(name);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a resource\", e);\n+        }\n+        return resourceTO;\n+    }\n+\n+    public void update(final ResourceTO resourceTO) {\n+        getService(ResourceService.class).update(resourceTO.getKey(), resourceTO);\n+    }\n+\n+    public void delete(final String name) {\n+        getService(ResourceService.class).delete(name);\n+    }\n+\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(ResourceService.class).bulk(action);\n+    }\n+\n+    public BulkActionResult bulkAssociationAction(\n+            final String resourceName, final Class<? extends AbstractAttributableTO> typeRef,\n+            final ResourceDeassociationActionType type, final List<SubjectKey> subjtectIds) {\n+\n+        return getService(ResourceService.class).bulkDeassociation(resourceName,\n+                UserTO.class.isAssignableFrom(typeRef) ? SubjectType.USER : SubjectType.GROUP,\n+                type, subjtectIds);\n+    }\n+}"},{"sha":"378f98d81d10880693d3c420756982f815a352f2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"added","additions":250,"deletions":0,"changes":250,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.ListIterator;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.client.console.commons.AttrLayoutType;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.AttributableType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking rest schema services.\n+ */\n+@Component\n+public class SchemaRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2479730152700312373L;\n+\n+    public void filter(\n+            final List<? extends AbstractSchemaTO> schemaTOs, final Collection<String> allowed, final boolean exclude) {\n+\n+        for (ListIterator<? extends AbstractSchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n+            AbstractSchemaTO schema = itor.next();\n+            if (exclude) {\n+                if (!allowed.contains(schema.getKey())) {\n+                    itor.remove();\n+                }\n+            } else {\n+                if (allowed.contains(schema.getKey())) {\n+                    itor.remove();\n+                }\n+            }\n+        }\n+    }\n+\n+    public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrType, final SchemaType schemaType) {\n+        List<? extends AbstractSchemaTO> schemas = Collections.emptyList();\n+\n+        try {\n+            schemas = getService(SchemaService.class).list(attrType, schemaType);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all schemas for {} and {}\", attrType, schemaType, e);\n+        }\n+\n+        if (attrType == AttributableType.CONFIGURATION) {\n+            filter(schemas, AttrLayoutType.confKeys(), false);\n+        }\n+\n+        return schemas;\n+    }\n+\n+    public List<PlainSchemaTO> getSchemas(final AttributableType type) {\n+        List<PlainSchemaTO> schemas = null;\n+\n+        try {\n+            schemas = getService(SchemaService.class).list(type, SchemaType.PLAIN);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all schemas\", e);\n+        }\n+\n+        return schemas;\n+    }\n+\n+    public List<String> getSchemaNames(final AttributableType attrType, final SchemaType schemaType) {\n+        final List<String> schemaNames = new ArrayList<>();\n+\n+        try {\n+            final List<? extends AbstractSchemaTO> schemas = getSchemas(attrType, schemaType);\n+            for (AbstractSchemaTO schemaTO : schemas) {\n+                schemaNames.add(schemaTO.getKey());\n+            }\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all user schema names\", e);\n+        }\n+\n+        return schemaNames;\n+    }\n+\n+    public List<String> getPlainSchemaNames(final AttributableType type) {\n+        final List<String> schemaNames = new ArrayList<>();\n+\n+        try {\n+            final List<PlainSchemaTO> schemas = getSchemas(type);\n+            for (PlainSchemaTO schemaTO : schemas) {\n+                schemaNames.add(schemaTO.getKey());\n+            }\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all user schema names\", e);\n+        }\n+\n+        return schemaNames;\n+    }\n+\n+    public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n+        List<DerSchemaTO> userDerSchemas = null;\n+\n+        try {\n+            userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all user derived schemas\", e);\n+        }\n+\n+        return userDerSchemas;\n+    }\n+\n+    public List<String> getDerSchemaNames(final AttributableType type) {\n+        final List<String> userDerSchemasNames = new ArrayList<>();\n+\n+        try {\n+            final List<DerSchemaTO> userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n+\n+            for (DerSchemaTO schemaTO : userDerSchemas) {\n+                userDerSchemasNames.add(schemaTO.getKey());\n+            }\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all {} derived schema names\", type, e);\n+        }\n+\n+        return userDerSchemasNames;\n+    }\n+\n+    public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n+        List<VirSchemaTO> userVirSchemas = null;\n+\n+        try {\n+            userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all {} virtual schemas\", type, e);\n+        }\n+\n+        return userVirSchemas;\n+    }\n+\n+    public List<String> getVirSchemaNames(final AttributableType type) {\n+        final List<String> userVirSchemasNames = new ArrayList<String>();\n+\n+        try {\n+            @SuppressWarnings(\"unchecked\")\n+            final List<VirSchemaTO> userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n+            for (VirSchemaTO schemaTO : userVirSchemas) {\n+                userVirSchemasNames.add(schemaTO.getKey());\n+            }\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all user derived schema names\", e);\n+        }\n+\n+        return userVirSchemasNames;\n+    }\n+\n+    public void createPlainSchema(final AttributableType type, final PlainSchemaTO schemaTO) {\n+        getService(SchemaService.class).create(type, SchemaType.PLAIN, schemaTO);\n+    }\n+\n+    public PlainSchemaTO readPlainSchema(final AttributableType type, final String name) {\n+        PlainSchemaTO schema = null;\n+\n+        try {\n+            schema = getService(SchemaService.class).read(type, SchemaType.PLAIN, name);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a user schema\", e);\n+        }\n+        return schema;\n+    }\n+\n+    public void updatePlainSchema(final AttributableType type, final PlainSchemaTO schemaTO) {\n+        getService(SchemaService.class).update(type, SchemaType.PLAIN, schemaTO.getKey(), schemaTO);\n+    }\n+\n+    public PlainSchemaTO deletePlainSchema(final AttributableType type, final String name) {\n+        PlainSchemaTO response = getService(SchemaService.class).read(type, SchemaType.PLAIN, name);\n+        getService(SchemaService.class).delete(type, SchemaType.PLAIN, name);\n+        return response;\n+    }\n+\n+    public void createDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n+        getService(SchemaService.class).create(type, SchemaType.DERIVED, schemaTO);\n+    }\n+\n+    public DerSchemaTO readDerSchema(final AttributableType type, final String name) {\n+        DerSchemaTO derivedSchemaTO = null;\n+        try {\n+            derivedSchemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a derived user schema\", e);\n+        }\n+        return derivedSchemaTO;\n+    }\n+\n+    public void updateVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n+        getService(SchemaService.class).update(type, SchemaType.VIRTUAL, schemaTO.getKey(), schemaTO);\n+    }\n+\n+    public DerSchemaTO deleteDerSchema(final AttributableType type, final String name) {\n+        DerSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n+        getService(SchemaService.class).delete(type, SchemaType.DERIVED, name);\n+        return schemaTO;\n+    }\n+\n+    public void createVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n+        getService(SchemaService.class).create(type, SchemaType.VIRTUAL, schemaTO);\n+    }\n+\n+    public void updateDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n+        getService(SchemaService.class).update(type, SchemaType.DERIVED, schemaTO.getKey(), schemaTO);\n+    }\n+\n+    public VirSchemaTO deleteVirSchema(final AttributableType type, final String name) {\n+        VirSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.VIRTUAL, name);\n+        getService(SchemaService.class).delete(type, SchemaType.VIRTUAL, name);\n+        return schemaTO;\n+    }\n+\n+    public List<String> getAllValidatorClasses() {\n+        List<String> response = null;\n+\n+        try {\n+            response = SyncopeSession.get().getSyncopeTO().getValidators();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all validators\", e);\n+        }\n+        return response;\n+    }\n+}"},{"sha":"119b3b5bf163a0c5ac19ee3e3393eb87f6bffb0a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/SecurityQuestionRestClient.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SecurityQuestionRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -3167730221361895176L;\n+\n+    public List<SecurityQuestionTO> list() {\n+        return getService(SecurityQuestionService.class).list();\n+    }\n+\n+    public void create(final SecurityQuestionTO securityQuestionTO) {\n+        getService(SecurityQuestionService.class).create(securityQuestionTO);\n+    }\n+\n+    public void update(final SecurityQuestionTO securityQuestionTO) {\n+        getService(SecurityQuestionService.class).update(securityQuestionTO.getKey(), securityQuestionTO);\n+    }\n+\n+    public void delete(final Long securityQuestionId) {\n+        getService(SecurityQuestionService.class).delete(securityQuestionId);\n+    }\n+\n+    public SecurityQuestionTO readByUser(final String username) {\n+        return getService(SecurityQuestionService.class).readByUser(username);\n+    }\n+\n+}"},{"sha":"541b5cd50271f9256310fa3986bcb31519364509","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"added","additions":139,"deletions":0,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.rest.api.service.TaskService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest Tasks services.\n+ */\n+@Component\n+public class TaskRestClient extends BaseRestClient implements ExecutionRestClient {\n+\n+    private static final long serialVersionUID = 6284485820911028843L;\n+\n+    public List<String> getJobClasses() {\n+        return SyncopeSession.get().getSyncopeTO().getTaskJobs();\n+    }\n+\n+    public List<String> getSyncActionsClasses() {\n+        return SyncopeSession.get().getSyncopeTO().getSyncActions();\n+    }\n+\n+    public List<String> getPushActionsClasses() {\n+        return SyncopeSession.get().getSyncopeTO().getPushActions();\n+    }\n+\n+    /**\n+     * Return the number of tasks.\n+     *\n+     * @param kind of task (propagation, sched, sync).\n+     * @return number of stored tasks.\n+     */\n+    public int count(final String kind) {\n+        return getService(TaskService.class).list(TaskType.fromString(kind), 1, 1).getTotalCount();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends AbstractTaskTO> List<T> list(final Class<T> reference,\n+            final int page, final int size, final SortParam<String> sort) {\n+\n+        return (List<T>) getService(TaskService.class).list(getTaskType(reference), page, size, toOrderBy(sort)).\n+                getResult();\n+    }\n+\n+    private TaskType getTaskType(final Class<?> reference) {\n+        TaskType result = null;\n+        if (PropagationTaskTO.class.equals(reference)) {\n+            result = TaskType.PROPAGATION;\n+        } else if (NotificationTaskTO.class.equals(reference)) {\n+            result = TaskType.NOTIFICATION;\n+        } else if (SchedTaskTO.class.equals(reference)) {\n+            result = TaskType.SCHEDULED;\n+        } else if (SyncTaskTO.class.equals(reference)) {\n+            result = TaskType.SYNCHRONIZATION;\n+        } else if (PushTaskTO.class.equals(reference)) {\n+            result = TaskType.PUSH;\n+        }\n+        return result;\n+    }\n+\n+    public PropagationTaskTO readPropagationTask(final Long taskId) {\n+        return getService(TaskService.class).read(taskId);\n+    }\n+\n+    public NotificationTaskTO readNotificationTask(final Long taskId) {\n+        return getService(TaskService.class).read(taskId);\n+    }\n+\n+    public <T extends SchedTaskTO> T readSchedTask(final Class<T> reference, final Long taskId) {\n+        return getService(TaskService.class).read(taskId);\n+    }\n+\n+    public void delete(final Long taskId, final Class<? extends AbstractTaskTO> taskToClass) {\n+        getService(TaskService.class).delete(taskId);\n+    }\n+\n+    @Override\n+    public void startExecution(final long taskId) {\n+        startExecution(taskId, false);\n+    }\n+\n+    public void startExecution(final long taskId, final boolean dryRun) {\n+        getService(TaskService.class).execute(taskId, dryRun);\n+    }\n+\n+    @Override\n+    public void deleteExecution(final long taskExecId) {\n+        getService(TaskService.class).deleteExecution(taskExecId);\n+    }\n+\n+    public void createSyncTask(final SyncTaskTO taskTO) {\n+        getService(TaskService.class).create(taskTO);\n+    }\n+\n+    public void createSchedTask(final SchedTaskTO taskTO) {\n+        getService(TaskService.class).create(taskTO);\n+    }\n+\n+    public void updateSchedTask(final SchedTaskTO taskTO) {\n+        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n+    }\n+\n+    public void updateSyncTask(final SyncTaskTO taskTO) {\n+        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n+    }\n+\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(TaskService.class).bulk(action);\n+    }\n+}"},{"sha":"bca0e28e1f8755cd43ad1a2b258c75283f1f024c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"added","additions":228,"deletions":0,"changes":228,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,228 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n+import org.apache.syncope.common.lib.mod.StatusMod;\n+import org.apache.syncope.common.lib.mod.UserMod;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.rest.api.CollectionWrapper;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking rest users services.\n+ */\n+@Component\n+public class UserRestClient extends AbstractSubjectRestClient {\n+\n+    private static final long serialVersionUID = -1575748964398293968L;\n+\n+    @Override\n+    public int count() {\n+        return getService(UserService.class).list(1, 1).getTotalCount();\n+    }\n+\n+    @Override\n+    public List<UserTO> list(final int page, final int size, final SortParam<String> sort) {\n+        return getService(UserService.class).list(page, size, toOrderBy(sort)).getResult();\n+    }\n+\n+    public UserTO create(final UserTO userTO, final boolean storePassword) {\n+        Response response = getService(UserService.class).create(userTO, storePassword);\n+        return response.readEntity(UserTO.class);\n+    }\n+\n+    public UserTO update(final String etag, final UserMod userMod) {\n+        UserTO result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public UserTO delete(final String etag, final Long id) {\n+        UserTO result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.delete(id).readEntity(UserTO.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    public UserTO read(final Long id) {\n+        UserTO userTO = null;\n+        try {\n+            userTO = getService(UserService.class).read(id);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading a user\", e);\n+        }\n+        return userTO;\n+    }\n+\n+    @Override\n+    public int searchCount(final String fiql) {\n+        return getService(UserService.class).search(fiql, 1, 1).getTotalCount();\n+    }\n+\n+    @Override\n+    public List<UserTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n+        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+    }\n+\n+    @Override\n+    public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n+        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.USER, id);\n+    }\n+\n+    public void suspend(final String etag, final long userId, final List<StatusBean> statuses) {\n+        StatusMod statusMod = StatusUtils.buildStatusMod(statuses, false);\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.status(userId, statusMod);\n+            resetClient(UserService.class);\n+        }\n+    }\n+\n+    public void reactivate(final String etag, final long userId, final List<StatusBean> statuses) {\n+        StatusMod statusMod = StatusUtils.buildStatusMod(statuses, true);\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.status(userId, statusMod);\n+            resetClient(UserService.class);\n+        }\n+    }\n+\n+    @Override\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(UserService.class).bulk(action);\n+    }\n+\n+    public void unlink(final String etag, final long userId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(UserService.class);\n+        }\n+    }\n+\n+    public void link(final String etag, final long userId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            service.bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod);\n+\n+            resetClient(UserService.class);\n+        }\n+    }\n+\n+    public BulkActionResult deprovision(final String etag, final long userId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult provision(final String etag, final long userId,\n+            final List<StatusBean> statuses, final boolean changepwd, final String password) {\n+\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            associationMod.setChangePwd(changepwd);\n+            associationMod.setPassword(password);\n+\n+            result = service.bulkAssociation(userId, ResourceAssociationActionType.PROVISION, associationMod).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult unassign(final String etag, final long userId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult assign(final String etag, final long userId,\n+            final List<StatusBean> statuses, final boolean changepwd, final String password) {\n+\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            associationMod.setChangePwd(changepwd);\n+            associationMod.setPassword(password);\n+\n+            result = service.bulkAssociation(userId, ResourceAssociationActionType.ASSIGN, associationMod).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+}"},{"sha":"1bb10793925ed28ef7bb9cf543163e1f55c8d34c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/UserSelfRestClient.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.mod.UserMod;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.UserSelfService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class UserSelfRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 2994691796924731295L;\n+\n+    public boolean isSelfRegistrationAllowed() {\n+        Boolean result = null;\n+        try {\n+            result = SyncopeSession.get().getSyncopeTO().isSelfRegAllowed();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While seeking if self registration is allowed\", e);\n+        }\n+\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n+    }\n+\n+    public UserTO read() {\n+        return getService(UserSelfService.class).read();\n+    }\n+\n+    public void create(final UserTO userTO, final boolean storePassword) {\n+        getService(UserSelfService.class).create(userTO, storePassword);\n+    }\n+\n+    public void update(final UserMod userMod) {\n+        getService(UserSelfService.class).update(userMod.getKey(), userMod);\n+    }\n+\n+    public void delete() {\n+        getService(UserSelfService.class).delete();\n+    }\n+\n+    public boolean isPasswordResetAllowed() {\n+        Boolean result = null;\n+        try {\n+            result = SyncopeSession.get().getSyncopeTO().isPwdResetAllowed();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While seeking if password reset is allowed\", e);\n+        }\n+\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n+    }\n+\n+    public boolean isPwdResetRequiringSecurityQuestions() {\n+        Boolean result = null;\n+        try {\n+            result = SyncopeSession.get().getSyncopeTO().isPwdResetRequiringSecurityQuestions();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While seeking if password reset requires security question\", e);\n+        }\n+\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n+    }\n+\n+    public void requestPasswordReset(final String username, final String securityAnswer) {\n+        getService(UserSelfService.class).requestPasswordReset(username, securityAnswer);\n+    }\n+\n+    public void confirmPasswordReset(final String token, final String password) {\n+        getService(UserSelfService.class).confirmPasswordReset(token, password);\n+    }\n+\n+}"},{"sha":"f3bf60cd935385598abbd1296d84c253260bad79","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/WorkflowRestClient.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.io.InputStream;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.helpers.IOUtils;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.WorkflowService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class WorkflowRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 5049285686167071017L;\n+\n+    private WorkflowService getService(final MediaType mediaType) {\n+        return SyncopeSession.get().getService(mediaType, WorkflowService.class);\n+    }\n+\n+    public InputStream getDefinition(final MediaType mediaType) {\n+        Response response = getService(mediaType).exportDefinition(SubjectType.USER);\n+\n+        return (InputStream) response.getEntity();\n+    }\n+\n+    public byte[] getDiagram() {\n+        WorkflowService service = getService(WorkflowService.class);\n+        WebClient.client(service).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n+        Response response = service.exportDiagram(SubjectType.USER);\n+\n+        byte[] diagram;\n+        try {\n+            diagram = IOUtils.readBytesFromStream((InputStream) response.getEntity());\n+        } catch (Exception e) {\n+            LOG.error(\"Could not get workflow diagram\", e);\n+            diagram = new byte[0];\n+        }\n+        return diagram;\n+    }\n+\n+    public boolean isActivitiEnabledForUsers() {\n+        return SyncopeSession.get().getSyncopeTO().getUserWorkflowAdapter().indexOf(\"Activiti\") != -1;\n+    }\n+\n+    public void updateDefinition(final MediaType mediaType, final String definition) {\n+        getService(mediaType).importDefinition(SubjectType.USER, definition);\n+    }\n+}"},{"sha":"8074d37c32d652775510a696ad1b1a87a259116d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AbstractAjaxDownloadBehavior.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AbstractAjaxDownloadBehavior.java"},{"sha":"314f66c60914a27f0ce847217bc9ffa8d1297d66","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxButton.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxButton.java"},{"sha":"5bb56423e68fe383a43bb5be4819b07af542ea36","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java"},{"sha":"86db9156d3c69f1622d1db837efb9f3a50ae932a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/IndicatingOnConfirmAjaxLink.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingOnConfirmAjaxLink.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/IndicatingOnConfirmAjaxLink.java"},{"sha":"b9dfa62e51a84a5e9323a15025e93676c8854303","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java"},{"sha":"a2c40ff862410fd6c80d9e1f5523367d09cea7d6","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java"},{"sha":"b40d7c8b9065e0f91949ff6f00754545220445b7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java"},{"sha":"8f880b7b63799abc25f26ad83080b62fdceb5978","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxGroupSelectorPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxGroupSelectorPanel.java"},{"sha":"db8719230b94bc6dcdf07f7215e82a4217856d9c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxPanel.java"},{"sha":"cf13f3cbb00f0e7b01d35ff852562b2608e06ace","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckGroupColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckGroupColumn.java"},{"sha":"f04fa5a5b1f0289fed0724b80bf281e4b9a64281","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPanel.java"},{"sha":"a5fd774da17c4591b32e4604eafc6c92e6badfe7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPropertyColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPropertyColumn.java"},{"sha":"f767aa2b097e1e9455a8f680e4c762256816aefa","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java"},{"sha":"094e450c6fde2c7c960055ab71bb9b3d003c8be0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/TokenColumn.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/TokenColumn.java"},{"sha":"2c5150e44af4e26606c15987ffbf50fb63c69384","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/head/MetaHeaderItem.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhead%2FMetaHeaderItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhead%2FMetaHeaderItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhead%2FMetaHeaderItem.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.head;\n+\n+import java.io.Serializable;\n+import java.util.Arrays;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.request.Response;\n+\n+public class MetaHeaderItem extends HeaderItem implements Serializable {\n+\n+    private static final long serialVersionUID = 7578609827530302053L;\n+\n+    private final String key;\n+\n+    private final String value;\n+\n+    public MetaHeaderItem(final String key, final String value) {\n+        this.key = key;\n+        this.value = value;\n+    }\n+\n+    @Override\n+    public Iterable<?> getRenderTokens() {\n+        return Arrays.asList(\"meta-\" + key + \"-\" + value);\n+    }\n+\n+    @Override\n+    public void render(final Response response) {\n+        response.write(\"<meta http-equiv=\\\"\" + key + \"\\\" content=\\\"\" + value + \"\\\"/>\");\n+        response.write(\"\\n\");\n+    }\n+}"},{"sha":"555561648e18e20528bd28f29265ee06ec8096db","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/CrontabContainer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2FCrontabContainer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2FCrontabContainer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2FCrontabContainer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/CrontabContainer.java"},{"sha":"30bb47cb988b4855cb37bfb74ec742033f628006","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AbstractFieldPanel<T> extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractFieldPanel.class);\n+\n+    private static final long serialVersionUID = 5958017546318855690L;\n+\n+    public AbstractFieldPanel(final String id, final IModel<T> model) {\n+        super(id, model);\n+    }\n+\n+    public abstract AbstractFieldPanel setModelObject(T object);\n+}"},{"sha":"3e7cc445b2e3f7b878b92e48e174929fcf33f467","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java"},{"sha":"35e4a65b2367aa38c4e4d1a63eb7f3051392bf2d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java"},{"sha":"3702aa20995c5c0a2d82a84038f7607a7b2b20f7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"added","additions":130,"deletions":0,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n+\n+    private static final long serialVersionUID = 5664138233103884310L;\n+\n+    public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolean> model) {\n+        super(id, model);\n+\n+        field = new CheckBox(\"checkboxField\", model);\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public FieldPanel<Boolean> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        this.isRequiredLabelAdded = true;\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<Boolean> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model<Boolean>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public Boolean getObject() {\n+                Boolean value = null;\n+\n+                if (list != null && !list.isEmpty()) {\n+                    value = Boolean.TRUE.toString().equalsIgnoreCase(list.get(0).toString());\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            public void setObject(final Boolean object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(object.toString());\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Boolean> setNewModel(final ListItem item) {\n+        IModel<Boolean> model = new Model<Boolean>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Boolean getObject() {\n+                Boolean bool = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        bool = Boolean.TRUE.toString().equalsIgnoreCase(obj.toString());\n+                    } else if (obj instanceof Boolean) {\n+                        // Don't parse anything\n+                        bool = (Boolean) obj;\n+                    }\n+                }\n+\n+                return bool;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Boolean object) {\n+                item.setModelObject(object == null ? Boolean.FALSE.toString() : object.toString());\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+\n+}"},{"sha":"547d91a3c075df241652468694386f843242941d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDecoratedCheckbox.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxCheckBox;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * AjaxCheckBox allowing AjaxCallDecorator.\n+ */\n+public abstract class AjaxDecoratedCheckbox extends AjaxCheckBox {\n+\n+    private static final long serialVersionUID = 7345848589265633002L;\n+\n+    public AjaxDecoratedCheckbox(final String id) {\n+        this(id, null);\n+    }\n+\n+    public AjaxDecoratedCheckbox(final String id, final IModel<Boolean> model) {\n+        super(id, model);\n+\n+        add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+\n+            private static final long serialVersionUID = -295188647830294610L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                refreshComponent(target);\n+            }\n+        });\n+    }\n+\n+    private void refreshComponent(final AjaxRequestTarget target) {\n+        target.add(this);\n+    }\n+}"},{"sha":"19e0e1d162a9000da164d4495536c5210a9548c7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDropDownChoicePanel<T extends Serializable> extends FieldPanel<T> implements Cloneable {\n+\n+    private static final long serialVersionUID = -4716376580659196095L;\n+\n+    public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model) {\n+        this(id, name, model, true);\n+    }\n+\n+    public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model, boolean enableOnBlur) {\n+        super(id, model);\n+\n+        field = new DropDownChoice<T>(\n+                \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+\n+        if (enableOnBlur) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AjaxDropDownChoicePanel<T> setChoiceRenderer(final IChoiceRenderer renderer) {\n+        ((DropDownChoice) field).setChoiceRenderer(renderer);\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AjaxDropDownChoicePanel<T> setChoices(final List<T> choices) {\n+        ((DropDownChoice) field).setChoices(choices);\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? extends T>> choices) {\n+        ((DropDownChoice) field).setChoices(choices);\n+        return this;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public FieldPanel clone() {\n+        final AjaxDropDownChoicePanel<T> panel = (AjaxDropDownChoicePanel<T>) super.clone();\n+        panel.setChoiceRenderer(((DropDownChoice) field).getChoiceRenderer());\n+        panel.setChoices(((DropDownChoice) field).getChoices());\n+        return panel;\n+    }\n+}"},{"sha":"91b6306b2f8c27e3a556db743dc572db8472004b","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.SelectChoiceRenderer;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class AjaxPalettePanel<T> extends AbstractFieldPanel<List<T>> {\n+\n+    private static final long serialVersionUID = 7738499668258805567L;\n+\n+    protected final Palette<T> palette;\n+\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n+        this(id, model, choices, false);\n+    }\n+\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n+            final boolean allowOrder) {\n+\n+        this(id, model, choices, new SelectChoiceRenderer<T>(), allowOrder, false);\n+    }\n+\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n+\n+        super(id, model);\n+\n+        this.palette = createPalette(model, choices, renderer, allowOrder, allowMoveAll);\n+        add(palette.setOutputMarkupId(true));\n+        setOutputMarkupId(true);\n+    }\n+\n+    protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n+\n+        return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll);\n+    }\n+\n+    @Override\n+    public AjaxPalettePanel<T> setModelObject(final List<T> object) {\n+        palette.setDefaultModelObject(object);\n+        return this;\n+    }\n+\n+    public Collection<T> getModelCollection() {\n+        return palette.getModelCollection();\n+    }\n+}"},{"sha":"14fdf9e9232c9f5a3fe9a1084f4e1f395df5bb6a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n+\n+    private static final long serialVersionUID = -5490115280336667460L;\n+\n+    public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n+        super(id, model);\n+\n+        field = new PasswordTextField(\"passwordField\", model);\n+        add(field.setLabel(new Model<String>(name)).setRequired(false).setOutputMarkupId(true));\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget art) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public FieldPanel<String> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        this.isRequiredLabelAdded = true;\n+        return this;\n+    }\n+}"},{"sha":"6854fb0049384c589e65b49341e152b026e80273","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.validation.IValidator;\n+\n+public class AjaxTextFieldPanel extends FieldPanel<String> implements Cloneable {\n+\n+    private static final long serialVersionUID = 238940918106696068L;\n+\n+    private List<String> choices = Collections.emptyList();\n+\n+    public AjaxTextFieldPanel(final String id, final String name, final IModel<String> model) {\n+        super(id, model);\n+\n+        final AutoCompleteSettings settings = new AutoCompleteSettings();\n+        settings.setShowCompleteListOnFocusGain(true);\n+        settings.setShowListOnEmptyInput(true);\n+\n+        field = new AutoCompleteTextField<String>(\"textField\", model, settings) {\n+\n+            private static final long serialVersionUID = -6648767303091874219L;\n+\n+            @Override\n+            protected Iterator<String> getChoices(final String input) {\n+                final Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n+\n+                final List<String> result = new ArrayList<String>();\n+\n+                for (String choice : choices) {\n+                    if (pattern.matcher(choice).matches()) {\n+                        result.add(choice);\n+                    }\n+                }\n+\n+                return result.iterator();\n+            }\n+        };\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+\n+    public void addValidator(final IValidator<? super String> validator) {\n+        this.field.add(validator);\n+    }\n+\n+    public void setChoices(final List<String> choices) {\n+        if (choices != null) {\n+            this.choices = choices;\n+        }\n+    }\n+\n+    @Override\n+    public FieldPanel<String> clone() {\n+        final AjaxTextFieldPanel panel = (AjaxTextFieldPanel) super.clone();\n+        panel.setChoices(choices);\n+        return panel;\n+    }\n+}"},{"sha":"40a88ac7c96e4e4049b7cced433ad68aacba3286","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"added","additions":211,"deletions":0,"changes":211,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,211 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.ByteArrayInputStream;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.PreviewUtils;\n+import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BaseModalPage;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.StatelessForm;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.form.upload.FileUpload;\n+import org.apache.wicket.markup.html.form.upload.FileUploadField;\n+import org.apache.wicket.markup.html.link.Link;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n+import org.apache.wicket.request.resource.ContentDisposition;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.util.crypt.Base64;\n+import org.apache.wicket.util.lang.Bytes;\n+\n+public class BinaryFieldPanel extends FieldPanel<String> {\n+\n+    private static final long serialVersionUID = 6264462604183088931L;\n+\n+    private final String mimeType;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final Link<Void> downloadLink;\n+\n+    private final Form<?> uploadForm;\n+\n+    private final Fragment emptyFragment;\n+\n+    @SpringBean\n+    private PreviewUtils previewUtil;\n+\n+    public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n+        super(id, model);\n+        this.mimeType = mimeType;\n+\n+        uploadForm = new StatelessForm<Void>(\"uploadForm\");\n+        uploadForm.setMultiPart(true);\n+        uploadForm.setMaxSize(Bytes.megabytes(4));\n+        add(uploadForm);\n+\n+        container = new WebMarkupContainer(\"previewContainer\");\n+        container.setOutputMarkupId(true);\n+\n+        emptyFragment = new Fragment(\"panelPreview\", \"emptyFragment\", container);\n+        emptyFragment.setOutputMarkupId(true);\n+        container.add(emptyFragment);\n+        uploadForm.add(container);\n+\n+        field = new TextField<String>(\"textField\", model);\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+\n+        uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : \"(\" + mimeType + \")\"));\n+\n+        downloadLink = new Link<Void>(\"downloadLink\") {\n+\n+            private static final long serialVersionUID = -4331619903296515985L;\n+\n+            @Override\n+            public void onClick() {\n+                try {\n+                    HttpResourceStream stream = new HttpResourceStream(buildResponse());\n+\n+                    ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n+                    rsrh.setFileName(stream.getFilename() == null ? name : stream.getFilename());\n+                    rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);\n+\n+                    getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);\n+                } catch (Exception e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                }\n+            }\n+        };\n+        downloadLink.setOutputMarkupId(true);\n+        uploadForm.add(downloadLink);\n+\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        final FileUploadField fileUpload = new FileUploadField(\"fileUpload\", new Model());\n+        fileUpload.setOutputMarkupId(true);\n+        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target) {\n+                final FileUpload uploadedFile = fileUpload.getFileUpload();\n+                if (uploadedFile != null) {\n+                    try {\n+                        final byte[] uploadedBytes = uploadedFile.getBytes();\n+                        final String uploaded = new String(\n+                                Base64.encodeBase64(uploadedBytes),\n+                                SyncopeConstants.DEFAULT_CHARSET);\n+                        field.setModelObject(uploaded);\n+                        target.add(field);\n+\n+                        final Component panelPreview = previewUtil.getPreviewer(mimeType, uploadedBytes);\n+\n+                        if (panelPreview != null) {\n+                            changePreviewer(panelPreview);\n+                        }\n+\n+                        fileUpload.setModelObject(null);\n+                        uploadForm.addOrReplace(fileUpload);\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+                        target.add(uploadForm);\n+                    } catch (Exception e) {\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        ((BaseModalPage) getPage()).getFeedbackPanel().refresh(target);\n+                        LOG.error(\"While saving uploaded file\", e);\n+                    }\n+                }\n+            }\n+        });\n+\n+        uploadForm.add(fileUpload);\n+\n+        IndicatingAjaxLink<Void> uploadLink = new IndicatingAjaxLink<Void>(\"uploadLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+            }\n+        };\n+        uploadForm.add(uploadLink);\n+\n+        IndicatingAjaxLink<Void> resetLink = new IndicatingAjaxLink<Void>(\"resetLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                field.setModelObject(null);\n+                target.add(field);\n+                downloadLink.setEnabled(false);\n+                container.addOrReplace(emptyFragment);\n+                uploadForm.addOrReplace(container);\n+                target.add(uploadForm);\n+            }\n+        };\n+        uploadForm.add(resetLink);\n+    }\n+\n+    private Response buildResponse() {\n+        return Response.ok(new ByteArrayInputStream(Base64.decodeBase64(getModelObject()))).\n+                type(StringUtils.isBlank(mimeType) ? MediaType.APPLICATION_OCTET_STREAM : mimeType).build();\n+    }\n+\n+    private void changePreviewer(final Component panelPreview) {\n+        final Fragment fragment = new Fragment(\"panelPreview\", \"previewFragment\", container);\n+        fragment.add(panelPreview);\n+        container.addOrReplace(fragment);\n+        uploadForm.addOrReplace(container);\n+    }\n+\n+    @Override\n+    public BinaryFieldPanel clone() {\n+        return (BinaryFieldPanel) super.clone();\n+    }\n+\n+    @Override\n+    public FieldPanel<String> setNewModel(final IModel<String> model) {\n+        field.setModel(model);\n+        try {\n+            final Component panelPreview = previewUtil.getPreviewer(mimeType, model.getObject());\n+            if (panelPreview != null) {\n+                changePreviewer(panelPreview);\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"While loading saved file\", e);\n+        }\n+        downloadLink.setEnabled(StringUtils.isNotBlank(model.getObject()));\n+        uploadForm.addOrReplace(downloadLink);\n+        return this;\n+    }\n+}"},{"sha":"3c5119b2eb357f3e139edc335b99561fd421c166","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.List;\n+\n+import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n+import org.apache.wicket.model.IModel;\n+\n+public class CheckBoxMultipleChoiceFieldPanel<E> extends AbstractFieldPanel<List<E>> {\n+\n+    private static final long serialVersionUID = 4124935025837737298L;\n+\n+    private final CheckBoxMultipleChoice<E> field;\n+\n+    public CheckBoxMultipleChoiceFieldPanel(\n+            final String id, final IModel<List<E>> model, final IModel<List<E>> choices) {\n+\n+        super(id, model);\n+\n+        field = new CheckBoxMultipleChoice<E>(\"checkBoxMultipleChoice\", model, choices);\n+        add(field);\n+    }\n+\n+    @Override\n+    public AbstractFieldPanel<List<E>> setModelObject(final List<E> object) {\n+        field.setModelObject(object);\n+        return this;\n+    }\n+}"},{"sha":"1f5aaf6282405ec974ed709a0b7a9627186353cf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateFieldPanel.java","status":"added","additions":132,"deletions":0,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.springframework.util.StringUtils;\n+\n+public class DateFieldPanel extends FieldPanel<Date> {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    protected final String name;\n+\n+    protected final String datePattern;\n+\n+    protected DateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, model);\n+        this.name = name;\n+        this.datePattern = datePattern;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        setNewModel(new Model<Date>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                    try {\n+                        // Parse string using datePattern\n+                        date = formatter.parse(list.get(0).toString());\n+                    } catch (ParseException e) {\n+                        LOG.error(\"invalid parse exception\", e);\n+                    }\n+                }\n+\n+                return date;\n+            }\n+\n+            @Override\n+            public void setObject(final Date object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(formatter.format(object));\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Date> setNewModel(final ListItem item) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        IModel<Date> model = new Model<Date>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        // Parse string using datePattern\n+                        try {\n+                            date = formatter.parse(obj.toString());\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                    } else if (obj instanceof Date) {\n+                        // Don't parse anything\n+                        date = (Date) obj;\n+                    } else {\n+                        // consider Long\n+                        date = new Date((Long) obj);\n+                    }\n+                }\n+\n+                return date;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Date object) {\n+                item.setModelObject(object != null ? formatter.format(object) : null);\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+}"},{"sha":"add3de6506a73b23c10a53bc584abcb053fa2922","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Date;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.datetime.markup.html.form.DateTextField;\n+import org.apache.wicket.extensions.yui.calendar.DatePicker;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class DateTextFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = 1919852712185883648L;\n+\n+    public DateTextFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = DateTextField.forDatePattern(\"field\", model, datePattern);\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+\n+        field.add(getDatePicker());\n+\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+    }\n+\n+    /**\n+     * Setup a DatePicker component.\n+     */\n+    private DatePicker getDatePicker() {\n+        final DatePicker picker = new DatePicker() {\n+\n+            private static final long serialVersionUID = 4166072895162221956L;\n+\n+            @Override\n+            protected boolean enableMonthYearSelection() {\n+                return true;\n+            }\n+        };\n+\n+        picker.setShowOnFieldClick(true);\n+\n+        return picker;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTextFieldPanel(getId(), name, new Model<Date>(), datePattern);\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"d8014f68dc6ba4c4745f85d0195c1f1f22073397","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"added","additions":195,"deletions":0,"changes":195,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,195 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Calendar;\n+import java.util.Date;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.validation.IValidationError;\n+import org.apache.wicket.validation.ValidationError;\n+\n+public class DateTimeFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    private Form form = null;\n+\n+    public DateTimeFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = new DateTimeField(\"field\", model);\n+\n+        final Calendar cal = Calendar.getInstance();\n+\n+        field.get(\"hours\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Integer hours = ((DateTimeField) field).getHours();\n+                if (hours != null) {\n+                    cal.set(hours > 12 ? Calendar.HOUR_OF_DAY : Calendar.HOUR, hours);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"minutes\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Integer minutes = ((DateTimeField) field).getMinutes();\n+                if (minutes != null) {\n+                    cal.set(Calendar.MINUTE, minutes);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"date\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Date date = ((DateTimeField) field).getDate();\n+                if (date == null) {\n+                    field.setModelObject(null);\n+                } else {\n+                    cal.setTime(date);\n+                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                            : Calendar.AM);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"amOrPmChoice\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                        : Calendar.AM);\n+                field.setModelObject(cal.getTime());\n+            }\n+        });\n+\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+    }\n+\n+    /**\n+     * Custom form validator for registering and handling DateTimeField components that are in it.\n+     */\n+    private class DateTimeFormValidator extends AbstractFormValidator {\n+\n+        private static final long serialVersionUID = 6842264694946633582L;\n+\n+        private FormComponent[] dateTimeComponents;\n+\n+        public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n+            if (dateTimeComponent == null) {\n+                throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n+            }\n+\n+            dateTimeComponents = new FormComponent[] { dateTimeComponent };\n+        }\n+\n+        @Override\n+        public FormComponent[] getDependentFormComponents() {\n+            return dateTimeComponents;\n+        }\n+\n+        /**\n+         * Validation rule : all 3 fields (date,hours,minutes) must be not-null.\n+         *\n+         * @param form\n+         */\n+        @Override\n+        public void validate(final Form form) {\n+            final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n+\n+            if (!(dateTimeField.getDate() != null && dateTimeField.getHours() != null\n+                    && dateTimeField.getMinutes() != null)) {\n+\n+                ValidationError ve = new ValidationError();\n+                ve.setVariables(DateTimeFormValidator.this.variablesMap());\n+                ve.addKey(resourceKey());\n+                dateTimeComponents[0].error((IValidationError) ve);\n+            }\n+        }\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    public FieldPanel<Date> setFormValidator(final Form form) {\n+        if (field == null) {\n+            LOG.error(\"Error setting form validator\");\n+        } else {\n+            form.add(new DateTimeFormValidator(((DateTimeField) field)));\n+            this.form = form;\n+        }\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> setStyleSheet(final String classes) {\n+        field.get(\"date\").add(AttributeModifier.replace(\"class\", (classes == null ? \"\" : classes) + \" date_size\"));\n+\n+        field.get(\"hours\").add(AttributeModifier.replace(\"class\", classes == null ? \"\" : classes));\n+\n+        field.get(\"minutes\").add(AttributeModifier.replace(\"class\", classes == null ? \"\" : classes));\n+\n+        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\"class\", classes == null ? \"\" : classes));\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTimeFieldPanel(getId(), name, new Model<Date>(null), datePattern);\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        if (form != null && isRequired()) {\n+            ((DateTimeFieldPanel) panel).setFormValidator(form);\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"8dbc4349333c7e7f4144a68486b539d9e1ce20bc","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"added","additions":199,"deletions":0,"changes":199,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,199 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public abstract class FieldPanel<T> extends AbstractFieldPanel<T> implements Cloneable {\n+\n+    private static final long serialVersionUID = -198988924922541273L;\n+\n+    protected FormComponent<T> field = null;\n+\n+    protected String title = null;\n+\n+    protected boolean isRequiredLabelAdded = false;\n+\n+    public FieldPanel(final String id, final IModel<T> model) {\n+        super(id, model);\n+\n+        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n+        add(fragment);\n+\n+        setOutputMarkupId(true);\n+    }\n+\n+    public FormComponent<T> getField() {\n+        return field;\n+    }\n+\n+    public FieldPanel<T> setTitle(final String title) {\n+        this.title = title;\n+        field.add(AttributeModifier.replace(\"title\", title != null\n+                ? title\n+                : \"\"));\n+\n+        return this;\n+    }\n+\n+    public FieldPanel<T> setStyleSheet(final String classes) {\n+        field.add(AttributeModifier.replace(\"class\", classes != null\n+                ? classes\n+                : \"\"));\n+\n+        return this;\n+    }\n+\n+    public FieldPanel<T> setRequired(boolean required) {\n+        field.setRequired(required);\n+\n+        return this;\n+    }\n+\n+    public FieldPanel<T> setReadOnly(boolean readOnly) {\n+        field.setEnabled(!readOnly);\n+\n+        return this;\n+    }\n+\n+    public boolean isRequired() {\n+        return field.isRequired();\n+    }\n+\n+    public boolean isReadOnly() {\n+        return !field.isEnabled();\n+    }\n+\n+    public FieldPanel<T> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n+\n+        fragment.add(new Label(\"requiredLabel\", \"*\"));\n+\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = true;\n+\n+        return this;\n+    }\n+\n+    public FieldPanel<T> removeRequiredLabel() {\n+        if (isRequired()) {\n+            setRequired(false);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n+\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = false;\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<T> setModelObject(final T object) {\n+        field.setModelObject(object);\n+        return this;\n+    }\n+\n+    public T getModelObject() {\n+        return (T) field.getModelObject();\n+    }\n+\n+    public FieldPanel<T> setNewModel(final IModel<T> model) {\n+        field.setModel(model);\n+        return this;\n+    }\n+\n+    /**\n+     * Used by MultiValueSelectorPanel to attach items.\n+     *\n+     * @param item item to attach.\n+     * @return updated FieldPanel object.\n+     */\n+    public FieldPanel<T> setNewModel(final ListItem<T> item) {\n+        setNewModel(new IModel<T>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public T getObject() {\n+                return item.getModelObject();\n+            }\n+\n+            @Override\n+            public void setObject(final T object) {\n+                item.setModelObject(object);\n+            }\n+\n+            @Override\n+            public void detach() {\n+                // no detach\n+            }\n+        });\n+        return this;\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    public FieldPanel<T> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model() {\n+\n+            private static final long serialVersionUID = 1088212074765051906L;\n+\n+            @Override\n+            public Serializable getObject() {\n+                return list == null || list.isEmpty()\n+                        ? null\n+                        : list.get(0);\n+            }\n+\n+            @Override\n+            public void setObject(final Serializable object) {\n+                list.clear();\n+\n+                if (object != null) {\n+                    list.add(object);\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public FieldPanel<T> clone() {\n+        final FieldPanel<T> panel = SerializationUtils.clone(this);\n+        panel.setModelObject(null);\n+        return panel;\n+    }\n+}"},{"sha":"b31bbab69a3ed75366dc588c9a0b26f545b6f3e9","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/LinkPanel.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FLinkPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * This empty class must exist because there not seems to be alternative to\n+ * provide specialized HTML for links.\n+ */\n+public class LinkPanel extends Panel {\n+\n+    private static final long serialVersionUID = 4799005986804366330L;\n+\n+    public LinkPanel(final String id) {\n+        super(id);\n+    }\n+\n+    public LinkPanel(final String id, final IModel<?> model) {\n+        super(id, model);\n+    }\n+}"},{"sha":"2c41f3713be2f5d0107caea15847d99735229366","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MappingPurposePanel.java","status":"added","additions":133,"deletions":0,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,133 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class MappingPurposePanel extends Panel {\n+\n+    private static final long serialVersionUID = 322966537010107771L;\n+\n+    private final AjaxLink<Void> propagation;\n+\n+    private final AjaxLink<Void> synchronization;\n+\n+    private final AjaxLink<Void> both;\n+\n+    private final AjaxLink<Void> none;\n+\n+    public MappingPurposePanel(final String componentId, final IModel<MappingPurpose> model,\n+            final WebMarkupContainer container) {\n+\n+        super(componentId, model);\n+\n+        propagation = new AjaxLink<Void>(\"propagationPurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.PROPAGATION);\n+                setOpacity(MappingPurpose.PROPAGATION);\n+                target.add(container);\n+            }\n+        };\n+\n+        synchronization = new AjaxLink<Void>(\"synchronizationPurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.SYNCHRONIZATION);\n+                setOpacity(MappingPurpose.SYNCHRONIZATION);\n+                target.add(container);\n+            }\n+        };\n+\n+        both = new AjaxLink<Void>(\"bothPurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.BOTH);\n+                setOpacity(MappingPurpose.BOTH);\n+                target.add(container);\n+            }\n+        };\n+\n+        none = new AjaxLink<Void>(\"nonePurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.NONE);\n+                setOpacity(MappingPurpose.NONE);\n+                target.add(container);\n+            }\n+        };\n+\n+        add(propagation);\n+        add(synchronization);\n+        add(both);\n+        add(none);\n+\n+        setOpacity(model.getObject());\n+    }\n+\n+    private void setOpacity(final MappingPurpose mappingPurpose) {\n+        switch (mappingPurpose) {\n+            case PROPAGATION:\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case SYNCHRONIZATION:\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case BOTH:\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case NONE:\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            default:\n+            // do nothing\n+        }\n+    }\n+}"},{"sha":"cd4ab2ad44de6e701dedeef227170d0efbbb4144","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"added","additions":172,"deletions":0,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+\n+public class MultiFieldPanel<E> extends AbstractFieldPanel<List<E>> {\n+\n+    private static final long serialVersionUID = -6322397761456513324L;\n+\n+    private ListView<E> view;\n+\n+    private WebMarkupContainer container;\n+\n+    public MultiFieldPanel(final String id, final IModel<List<E>> model, final FieldPanel<E> panelTemplate) {\n+        this(id, model, panelTemplate, false);\n+    }\n+\n+    public MultiFieldPanel(final String id, final IModel<List<E>> model, final FieldPanel<E> panelTemplate,\n+            final boolean eventTemplate) {\n+\n+        super(id, model);\n+\n+        // -----------------------\n+        // Object container definition\n+        // -----------------------\n+        container = new WebMarkupContainer(\"multiValueContainer\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+        // -----------------------\n+\n+        view = new ListView<E>(\"view\", model) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<E> item) {\n+                final FieldPanel<E> fieldPanel = panelTemplate.clone();\n+\n+                if (eventTemplate) {\n+                    fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                        private static final long serialVersionUID = -1107858522700306810L;\n+\n+                        @Override\n+                        protected void onUpdate(final AjaxRequestTarget target) {\n+                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                        }\n+                    });\n+                }\n+\n+\t\tfieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+                    \n+                    private static final long serialVersionUID = -1107858522700306810L;\n+  \n+                        @Override\n+                        protected void onUpdate(final AjaxRequestTarget target) {\n+                        }\n+                    });\n+\n+                fieldPanel.setNewModel(item);\n+                item.add(fieldPanel);\n+\n+                AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        //Drop current component\n+                        model.getObject().remove(item.getModelObject());\n+                        fieldPanel.getField().clearInput();\n+                        target.add(container);\n+                        \n+                        if (eventTemplate) {\n+                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                        }\n+                    }\n+                };\n+\n+                item.add(minus);\n+\n+                if (model.getObject().size() <= 1) {\n+                    minus.setVisible(false);\n+                    minus.setEnabled(false);\n+                } else {\n+                    minus.setVisible(true);\n+                    minus.setEnabled(true);\n+                }\n+\n+                final Fragment fragment;\n+                if (item.getIndex() == model.getObject().size() - 1) {\n+                    final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target) {\n+                            //Add current component\n+                            model.getObject().add(null);\n+                            target.add(container);\n+                        }\n+                    };\n+\n+                    fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", container);\n+\n+                    fragment.add(plus);\n+                } else {\n+                    fragment = new Fragment(\"panelPlus\", \"emptyFragment\", container);\n+                }\n+                item.add(fragment);\n+            }\n+        };\n+\n+        container.add(view.setOutputMarkupId(true));\n+        setOutputMarkupId(true);\n+    }\n+\n+    public ListView<E> getView() {\n+        return view;\n+    }\n+\n+    public WebMarkupContainer getContainer() {\n+        return container;\n+    }\n+\n+    @Override\n+    public MultiFieldPanel<E> setModelObject(final List<E> object) {\n+        view.setModelObject(object);\n+        return this;\n+    }\n+\n+    public static class MultiValueSelectorEvent {\n+\n+        final AjaxRequestTarget target;\n+\n+        public MultiValueSelectorEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+}"},{"sha":"55038da2d81ebf30cb4de65e7caf8434b072cc73","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/NonI18nPalette.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+\n+public class NonI18nPalette<T> extends Palette<T> {\n+\n+    private static final long serialVersionUID = 2659070187837941889L;\n+\n+    public NonI18nPalette(final String id,\n+            final IModel<? extends List<? extends T>> model,\n+            final IModel<? extends Collection<? extends T>> choicesModel,\n+            final IChoiceRenderer<T> choiceRenderer, final int rows,\n+            final boolean allowOrder, final boolean allowMoveAll) {\n+\n+        super(id, model, choicesModel, choiceRenderer, rows, allowOrder, allowMoveAll);\n+    }\n+\n+    @Override\n+    protected boolean localizeDisplayValues() {\n+        return false;\n+    }\n+}"},{"sha":"2893533834b9251b70da894c2c9047c49344f447","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectableRecorder.java","status":"added","additions":204,"deletions":0,"changes":204,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,204 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.string.Strings;\n+\n+/**\n+ * A variant of Recorder, supporting single element selection (for editing purpose, for example). <b>Note</b>: this\n+ * class extends Recorder<T> but in fact it is a bare copy of most source code; this was done because the original class\n+ * is keeping everything private.\n+ *\n+ * @param <T> Type of the palette\n+ */\n+public class SelectableRecorder<T> extends Recorder<T> {\n+\n+    private static final long serialVersionUID = -3009044376132921879L;\n+\n+    private boolean attached = false;\n+\n+    private static final String[] EMPTY_IDS = new String[0];\n+\n+    /**\n+     * Conveniently maintained array of selected ids.\n+     */\n+    private String[] ids;\n+\n+    private String selectedId;\n+\n+    public SelectableRecorder(final String id, final Palette<T> palette) {\n+        super(id, palette);\n+    }\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+\n+        if (!getForm().hasError()) {\n+            initIds();\n+        } else if (ids == null) {\n+            ids = EMPTY_IDS;\n+        }\n+        attached = true;\n+    }\n+\n+    /**\n+     * Synchronize ids collection from the palette's model\n+     */\n+    private void initIds() {\n+        // construct the model string based on selection collection\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        StringBuilder modelStringBuffer = new StringBuilder();\n+        Collection<T> modelCollection = getPalette().getModelCollection();\n+        if (modelCollection == null) {\n+            throw new WicketRuntimeException(\"Expected getPalette().getModelCollection() to return a non-null value.\"\n+                    + \" Please make sure you have model object assigned to the palette\");\n+        }\n+        Iterator<T> selection = modelCollection.iterator();\n+\n+        int i = 0;\n+        while (selection.hasNext()) {\n+            modelStringBuffer.append(renderer.getIdValue(selection.next(), i++));\n+            if (selection.hasNext()) {\n+                modelStringBuffer.append(\",\");\n+            }\n+        }\n+\n+        // set model and update ids array\n+        String modelString = modelStringBuffer.toString();\n+        setDefaultModel(new Model<String>(modelString));\n+        updateIds(modelString);\n+    }\n+\n+    public T getSelectedItem() {\n+        if (selectedId == null) {\n+            return null;\n+        }\n+\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+\n+        T selected = null;\n+        for (T choice : getPalette().getChoices()) {\n+            if (renderer.getIdValue(choice, 0).equals(selectedId)) {\n+                selected = choice;\n+                break;\n+            }\n+        }\n+\n+        return selected;\n+    }\n+\n+    /**\n+     * @return iterator over selected choices\n+     */\n+    @Override\n+    public Iterator<T> getSelectedChoices() {\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        if (ids.length == 0) {\n+            return Collections.<T>emptyList().iterator();\n+        }\n+\n+        List<T> selected = new ArrayList<T>(ids.length);\n+        for (String id : ids) {\n+            for (T choice : getPalette().getChoices()) {\n+                if (renderer.getIdValue(choice, 0).equals(id)) {\n+                    selected.add(choice);\n+                    break;\n+                }\n+            }\n+        }\n+        return selected.iterator();\n+    }\n+\n+    /**\n+     * @return iterator over unselected choices\n+     */\n+    @Override\n+    public Iterator<T> getUnselectedChoices() {\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        Collection<? extends T> choices = getPalette().getChoices();\n+\n+        if (choices.size() - ids.length == 0) {\n+            return Collections.<T>emptyList().iterator();\n+        }\n+\n+        List<T> unselected = new ArrayList<T>(Math.max(1, choices.size() - ids.length));\n+        for (T choice : choices) {\n+            final String choiceId = renderer.getIdValue(choice, 0);\n+            boolean selected = false;\n+            for (String id : ids) {\n+                if (id.equals(choiceId)) {\n+                    selected = true;\n+                    break;\n+                }\n+            }\n+            if (!selected) {\n+                unselected.add(choice);\n+            }\n+        }\n+        return unselected.iterator();\n+    }\n+\n+    @Override\n+    protected void onValid() {\n+        super.onValid();\n+        if (attached) {\n+            updateIds();\n+        }\n+    }\n+\n+    @Override\n+    protected void onInvalid() {\n+        super.onInvalid();\n+        if (attached) {\n+            updateIds();\n+        }\n+    }\n+\n+    private void updateIds() {\n+        updateIds(getValue());\n+    }\n+\n+    @Override\n+    protected void updateIds(final String value) {\n+        if (Strings.isEmpty(value)) {\n+            ids = EMPTY_IDS;\n+        } else {\n+            if (value.indexOf('|') == -1) {\n+                ids = value.split(\",\");\n+                selectedId = null;\n+            } else {\n+                String[] splitted = value.split(\"\\\\|\");\n+                selectedId = splitted[0];\n+                ids = splitted[1].split(\",\");\n+            }\n+        }\n+    }\n+}"},{"sha":"4f71f812722b47c943035ddc39d6783625a5f896","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.java","status":"added","additions":197,"deletions":0,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,197 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.UUID;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.springframework.util.StringUtils;\n+\n+public class SpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n+\n+    private static final long serialVersionUID = 6413819574530703577L;\n+\n+    private final String name;\n+\n+    private final Class<T> reference;\n+\n+    private final IModel<T> model;\n+\n+    private final T min;\n+\n+    private final T max;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public SpinnerFieldPanel(final String id, final String name, final Class<T> reference, final IModel<T> model,\n+            final T min, final T max) {\n+\n+        super(id, model);\n+        this.name = name;\n+        this.reference = reference;\n+        this.model = model;\n+        this.min = min;\n+        this.max = max;\n+\n+        String uuid = UUID.randomUUID().toString();\n+        field = new TextField<T>(\"spinnerField\", model, reference);\n+        field.setMarkupId(uuid);\n+        add(field.setLabel(new Model<String>(name)));\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+\n+        final StringBuilder statements = new StringBuilder();\n+        statements.append(\"jQuery(function() {\").\n+                append(\"var spinner = $('#\").append(uuid).append(\"').spinner();\").\n+                append(\"$('#\").append(uuid).append(\"').spinner(\").\n+                append(\"'option', 'stop', function(event, ui) { $(this).change(); });\");\n+        if (this.min != null) {\n+            statements.\n+                    append(\"$('#\").append(uuid).append(\"').spinner(\").\n+                    append(\"'option', 'min', \").append(this.min).append(\");\");\n+        }\n+        if (this.max != null) {\n+            statements.\n+                    append(\"$('#\").append(uuid).append(\"').spinner(\").\n+                    append(\"'option', 'max', \").append(this.max).append(\");\");\n+        }\n+        statements.append(\"});\");\n+        Label spinnerFieldJS = new Label(\"spinnerFieldJS\", statements.toString());\n+        spinnerFieldJS.setEscapeModelStrings(false);\n+        add(spinnerFieldJS);\n+    }\n+\n+    @Override\n+    public SpinnerFieldPanel<T> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public T getObject() {\n+                T value = null;\n+\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                    value = reference.equals(Integer.class)\n+                            ? reference.cast(NumberUtils.toInt(list.get(0).toString()))\n+                            : reference.equals(Long.class)\n+                            ? reference.cast(NumberUtils.toLong(list.get(0).toString()))\n+                            : reference.equals(Short.class)\n+                            ? reference.cast(NumberUtils.toShort(list.get(0).toString()))\n+                            : reference.equals(Float.class)\n+                            ? reference.cast(NumberUtils.toFloat(list.get(0).toString()))\n+                            : reference.equals(byte.class)\n+                            ? reference.cast(NumberUtils.toByte(list.get(0).toString()))\n+                            : reference.cast(NumberUtils.toDouble(list.get(0).toString()));\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            public void setObject(final T object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(object.toString());\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public SpinnerFieldPanel<T> setNewModel(final ListItem item) {\n+        field.setModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public T getObject() {\n+                T number = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        number = reference.equals(Integer.class)\n+                                ? reference.cast(Integer.valueOf((String) obj))\n+                                : reference.equals(Long.class)\n+                                ? reference.cast(Long.valueOf((String) obj))\n+                                : reference.equals(Short.class)\n+                                ? reference.cast(Short.valueOf((String) obj))\n+                                : reference.equals(Float.class)\n+                                ? reference.cast(Float.valueOf((String) obj))\n+                                : reference.equals(byte.class)\n+                                ? reference.cast(Byte.valueOf((String) obj))\n+                                : reference.cast(Double.valueOf((String) obj));\n+                    } else if (obj instanceof Number) {\n+                        // Don't parse anything\n+                        number = reference.cast(obj);\n+                    }\n+                }\n+\n+                return number;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final T object) {\n+                item.setModelObject(object == null ? null : object.toString());\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public SpinnerFieldPanel<T> clone() {\n+        SpinnerFieldPanel<T> panel = new SpinnerFieldPanel<T>(getId(), name, reference, model, min, max);\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+\n+}"},{"sha":"24bdb47940b294beee90ec9d0d62f4cbcc62ae18","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/AbstractBinaryPreviewer.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AbstractBinaryPreviewer extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBinaryPreviewer.class);\n+\n+    private static final long serialVersionUID = -2482706463911903025L;\n+\n+    protected final String mimeType;\n+\n+    protected final byte[] uploadedBytes;\n+\n+    public AbstractBinaryPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id);\n+        this.mimeType = mimeType;\n+        this.uploadedBytes = uploadedBytes;\n+    }\n+\n+    public abstract Component preview();\n+}"},{"sha":"61589d7adb71f4dac03e26cd35c065961b60ed6d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+\n+import java.io.ByteArrayInputStream;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.X509Certificate;\n+import javax.naming.ldap.LdapName;\n+import javax.naming.ldap.Rdn;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+@BinaryPreview(mimeTypes = { \"application/x-x509-ca-cert\", \"application/x-x509-user-cert\", \"application/pkix-cert\" })\n+public class BinaryCertPreviewer extends AbstractBinaryPreviewer {\n+\n+    private static final long serialVersionUID = -5843835939538055110L;\n+\n+    public BinaryCertPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id, mimeType, uploadedBytes);\n+    }\n+\n+    @Override\n+    public Component preview() {\n+        final Label commonNameLabel = new Label(\"certCommonName\", new Model<String>());\n+        final ByteArrayInputStream certificateStream = new ByteArrayInputStream(uploadedBytes);\n+        try {\n+            final X509Certificate certificate = (X509Certificate) CertificateFactory.getInstance(\"X.509\").\n+                    generateCertificate(certificateStream);\n+\n+            final StringBuilder commonNameBuilder = new StringBuilder(\"cn=\");\n+\n+            final LdapName ldapName = new LdapName(certificate.getIssuerDN().getName());\n+\n+            for (Rdn rdn : ldapName.getRdns()) {\n+                if (\"CN\".equalsIgnoreCase(rdn.getType())) {\n+                    commonNameBuilder.append(rdn.getValue() == null\n+                            ? StringUtils.EMPTY\n+                            : rdn.getValue().toString());\n+                }\n+            }\n+            commonNameLabel.setDefaultModelObject(commonNameBuilder.toString());\n+        } catch (Exception e) {\n+            LOG.error(\"Error evaluating certificate file\", e);\n+            throw new IllegalArgumentException(\"Error evaluating certificate file\", e);\n+        } finally {\n+            IOUtils.closeQuietly(certificateStream);\n+        }\n+        return this.add(commonNameLabel);\n+    }\n+}"},{"sha":"35e442eba71bf02f655337f2a2f7db31aec92c3d","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+\n+import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n+import org.apache.wicket.markup.html.image.NonCachingImage;\n+import org.apache.wicket.request.resource.DynamicImageResource;\n+import org.apache.wicket.request.resource.IResource;\n+\n+@BinaryPreview(mimeTypes = { \"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/x-png\", \"image/vnd.wap.wbmp\" })\n+public class BinaryImagePreviewer extends AbstractBinaryPreviewer {\n+\n+    private static final long serialVersionUID = 3338812359368457349L;\n+\n+    private static final int IMG_SIZE = 230;\n+\n+    public BinaryImagePreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+        super(id, mimeType, uploadedBytes);\n+    }\n+\n+    @Override\n+    public Component preview() {\n+        return this.add(new NonCachingImage(\"previewImage\", new ThumbnailImageResource(new DynamicImageResource() {\n+\n+            private static final long serialVersionUID = 923201517955737928L;\n+\n+            @Override\n+            protected byte[] getImageData(final IResource.Attributes attributes) {\n+                return uploadedBytes;\n+            }\n+        }, IMG_SIZE)));\n+    }\n+}"},{"sha":"51c8ec520907d5c0244eb36be3acc3a727a89466","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/link/VeilPopupSettings.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/link/VeilPopupSettings.java"},{"sha":"5a491ae6300a0f3e0ba6120f3a1dada6f91288c0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/AltListView.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.list;\n+\n+import java.util.List;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class AltListView<T> extends ListView<T> {\n+\n+    private static final long serialVersionUID = 251378224847354710L;\n+\n+    public AltListView(final String id) {\n+        super(id);\n+    }\n+\n+    public AltListView(final String id, final IModel<? extends List<? extends T>> model) {\n+        super(id, model);\n+    }\n+\n+    public AltListView(final String id, final List<? extends T> list) {\n+        super(id, list);\n+    }\n+\n+    @Override\n+    protected ListItem<T> newItem(final int index, final IModel<T> itemModel) {\n+        return new ListItem<T>(index, itemModel) {\n+\n+            private static final long serialVersionUID = 5473483270932376694L;\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                if (index % 2 == 0) {\n+                    tag.append(\"class\", \"alt\", \" \");\n+                }\n+\n+                super.onComponentTag(tag);\n+            }\n+        };\n+    }\n+}"},{"sha":"30775f5e1f99203ebc64f069e167be20cd7f0108","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"added","additions":152,"deletions":0,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","patch":"@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.list;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ClassUtils;\n+\n+public class ConnConfPropertyListView extends AltListView<ConnConfProperty> {\n+\n+    private static final long serialVersionUID = -5239334900329150316L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConnConfPropertyListView.class);\n+\n+    private final boolean withOverridable;\n+\n+    private final Set<ConnConfProperty> configuration;\n+\n+    public ConnConfPropertyListView(final String id, final IModel<? extends List<? extends ConnConfProperty>> model,\n+            final boolean withOverridable, final Set<ConnConfProperty> configuration) {\n+\n+        super(id, model);\n+        this.configuration = configuration;\n+        this.withOverridable = withOverridable;\n+    }\n+\n+    @Override\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    protected void populateItem(final ListItem<ConnConfProperty> item) {\n+        final ConnConfProperty property = item.getModelObject();\n+\n+        final Label label = new Label(\"connPropAttrSchema\",\n+                StringUtils.isBlank(property.getSchema().getDisplayName())\n+                        ? property.getSchema().getName()\n+                        : property.getSchema().getDisplayName());\n+        item.add(label);\n+\n+        FieldPanel<? extends Serializable> field;\n+        boolean required = false;\n+        boolean isArray = false;\n+\n+        if (property.getSchema().isConfidential()\n+                || Constants.GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n+                || Constants.GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n+\n+            field = new AjaxPasswordFieldPanel(\"panel\",\n+                    label.getDefaultModelObjectAsString(), new Model<String>());\n+            ((PasswordTextField) field.getField()).setResetPassword(false);\n+\n+            required = property.getSchema().isRequired();\n+        } else {\n+            Class<?> propertySchemaClass;\n+            try {\n+                propertySchemaClass =\n+                        ClassUtils.forName(property.getSchema().getType(), ClassUtils.getDefaultClassLoader());\n+                if (ClassUtils.isPrimitiveOrWrapper(propertySchemaClass)) {\n+                    propertySchemaClass = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(propertySchemaClass);\n+                }\n+            } catch (Exception e) {\n+                LOG.error(\"Error parsing attribute type\", e);\n+                propertySchemaClass = String.class;\n+            }\n+\n+            if (ClassUtils.isAssignable(Number.class, propertySchemaClass)) {\n+                @SuppressWarnings(\"unchecked\")\n+                final Class<Number> numberClass = (Class<Number>) propertySchemaClass;\n+                field = new SpinnerFieldPanel<Number>(\"panel\",\n+                        label.getDefaultModelObjectAsString(), numberClass, new Model<Number>(), null, null);\n+\n+                required = property.getSchema().isRequired();\n+            } else if (ClassUtils.isAssignable(Boolean.class, propertySchemaClass)) {\n+                field = new AjaxCheckBoxPanel(\"panel\",\n+                        label.getDefaultModelObjectAsString(), new Model<Boolean>());\n+            } else {\n+                field = new AjaxTextFieldPanel(\"panel\",\n+                        label.getDefaultModelObjectAsString(), new Model<String>());\n+\n+                required = property.getSchema().isRequired();\n+            }\n+\n+            if (propertySchemaClass.isArray()) {\n+                isArray = true;\n+            }\n+        }\n+\n+        field.setTitle(property.getSchema().getHelpMessage());\n+\n+        if (required) {\n+            field.addRequiredLabel();\n+        }\n+\n+        if (isArray) {\n+            if (property.getValues().isEmpty()) {\n+                property.getValues().add(null);\n+            }\n+\n+            final MultiFieldPanel multiFieldPanel = new MultiFieldPanel(\"panel\",\n+                    new PropertyModel<List<String>>(property, \"values\"), field);\n+            item.add(multiFieldPanel);\n+        } else {\n+            setNewFieldModel(field, property.getValues());\n+            item.add(field);\n+        }\n+\n+        if (withOverridable) {\n+            item.add(new AjaxCheckBoxPanel(\"connPropAttrOverridable\",\n+                    \"connPropAttrOverridable\", new PropertyModel<Boolean>(property, \"overridable\")));\n+        }\n+\n+        configuration.add(property);\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    private void setNewFieldModel(final FieldPanel field, final List<Object> values) {\n+        field.setNewModel(values);\n+    }\n+\n+}"},{"sha":"fa962bc2b9576cb241cee603f4ef950a8a0fc9aa","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/DefaultMutableTreeNodeExpansion.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/DefaultMutableTreeNodeExpansion.java"},{"sha":"1b342bdbf68491a2361c39cfaef60174e10f9aee","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/DefaultMutableTreeNodeExpansionModel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansionModel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansionModel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansionModel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/DefaultMutableTreeNodeExpansionModel.java"},{"sha":"0638a73730be0e05354afe728e666c92c29fd04c","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupPanel.java"},{"sha":"c0b55c375c6826ef1503c8c83772de208d5ea2a3","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupProvider.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupProvider.java"},{"sha":"1f0e6219089d31a00b7d85dd4d0151b416b55b0c","filename":"client/old_console/src/main/resources/META-INF/resources/css/bulk.css","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/bulk.css"},{"sha":"23ef109c7571eab9c24253c8672eb62a5ba255ef","filename":"client/old_console/src/main/resources/META-INF/resources/css/fieldstyle.css","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffieldstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffieldstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffieldstyle.css?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/fieldstyle.css"},{"sha":"64ece5707d91a6edf9fad4bfcce0c4dbcafcf58d","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_diagonals-thick_20_666666_40x40.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_diagonals-thick_20_666666_40x40.png"},{"sha":"fc9ef062c613a297345f8e4a90000bb689ee9f61","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_flat_0_aaaaaa_40x100.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_flat_0_aaaaaa_40x100.png"},{"sha":"b3d19991052cdb5b6405be6dec11b9078f918b4e","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_flat_0_aaaaaa_40x100_greennotused.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100_greennotused.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100_greennotused.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_flat_0_aaaaaa_40x100_greennotused.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_flat_0_aaaaaa_40x100_greennotused.png"},{"sha":"ad3d6346e00f246102f72f2e026ed0491988b394","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_55_fbf9ee_1x400.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_55_fbf9ee_1x400.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_55_fbf9ee_1x400.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_55_fbf9ee_1x400.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_55_fbf9ee_1x400.png"},{"sha":"42ccba269b6e91bef12ad0fa18be651b5ef0ee68","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_65_ffffff_1x400.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_65_ffffff_1x400.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_65_ffffff_1x400.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_65_ffffff_1x400.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_65_ffffff_1x400.png"},{"sha":"5a46b47cb16631068aee9e0bd61269fc4e95e5cd","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_75_dadada_1x400.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_dadada_1x400.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_dadada_1x400.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_dadada_1x400.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_75_dadada_1x400.png"},{"sha":"86c2baa655eac8539db34f8d9adb69ec1226201c","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_75_e6e6e6_1x400.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_e6e6e6_1x400.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_e6e6e6_1x400.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_75_e6e6e6_1x400.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_75_e6e6e6_1x400.png"},{"sha":"4443fdc1a156babad4336f004eaf5ca5dfa0f9ab","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_95_fef1ec_1x400.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_95_fef1ec_1x400.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_95_fef1ec_1x400.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_glass_95_fef1ec_1x400.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_glass_95_fef1ec_1x400.png"},{"sha":"5749fc490195c45bd0b928f659a162034f04257f","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100.png"},{"sha":"7c9fa6c6edcfcdd3e5b77e6f547b719e6fc66e30","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100_greynotused.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_greynotused.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_greynotused.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_greynotused.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100_greynotused.png"},{"sha":"46325297b761c0703ca0ccc57498f6ee49fd50af","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100_red.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_red.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_red.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-bg_highlight-soft_75_cccccc_1x100_red.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-bg_highlight-soft_75_cccccc_1x100_red.png"},{"sha":"ee039dc096a38a3753f92519546eee94bcfbeffa","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-icons_222222_256x240.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_222222_256x240.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_222222_256x240.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_222222_256x240.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-icons_222222_256x240.png"},{"sha":"45e8928e5284adacea3f9ec07b9b50667d2ac65f","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-icons_2e83ff_256x240.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_2e83ff_256x240.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_2e83ff_256x240.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_2e83ff_256x240.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-icons_2e83ff_256x240.png"},{"sha":"7ec70d11bfb2f77374dfd00ef61ba0c3647b5a0c","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-icons_454545_256x240.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_454545_256x240.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_454545_256x240.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_454545_256x240.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-icons_454545_256x240.png"},{"sha":"5ba708c39172a69e069136bd1309c4322c61f571","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-icons_888888_256x240.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_888888_256x240.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_888888_256x240.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_888888_256x240.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-icons_888888_256x240.png"},{"sha":"7930a558099bc8d92b4264eb67a0f040460f4a4f","filename":"client/old_console/src/main/resources/META-INF/resources/css/images/ui-icons_cd0a0a_256x240.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_cd0a0a_256x240.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_cd0a0a_256x240.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fimages%2Fui-icons_cd0a0a_256x240.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/images/ui-icons_cd0a0a_256x240.png"},{"sha":"0978141cf4c0df83296c2226b70a2e80047b8c8d","filename":"client/old_console/src/main/resources/META-INF/resources/css/style.css","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/css/style.css"},{"sha":"f9f2a33097a794547b09d538311fcecb9c1837e9","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/assign-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fassign-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fassign-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fassign-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/assign-icon.png"},{"sha":"0f98eec8f41d3011586f7d420194c3c0cb5b7727","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/both-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fboth-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fboth-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fboth-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/both-icon.png"},{"sha":"ea6d145a1d9275cb60fc1d876b7563d1fa3c1bef","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/bulk.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fbulk.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fbulk.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fbulk.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/bulk.png"},{"sha":"79332c043da9eebcc7a0d27a5c3a546d785daa63","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/claim.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fclaim.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fclaim.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fclaim.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/claim.png"},{"sha":"3f8faf108d0f1d4640dd38b83024fda3434a7ad8","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/create.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fcreate.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fcreate.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fcreate.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/create.png"},{"sha":"1207d8d6a4e6a1edd29644ae4b717264769a80bc","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/delete.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdelete.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdelete.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdelete.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/delete.png"},{"sha":"4bc2f4e456f3857fd9f1d9126f48edcd20febd6d","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/deprovision-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdeprovision-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdeprovision-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdeprovision-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/deprovision-icon.png"},{"sha":"910b148c39666fb193fb66666721051844350255","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/dryrun.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdryrun.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdryrun.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fdryrun.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/dryrun.png"},{"sha":"80e00db26b7d2ff285b6731dc1803d6ba6b9e019","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/edit.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fedit.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fedit.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fedit.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/edit.png"},{"sha":"39ba0cadaab10faab1d3ddff2ead1b26183fd6a5","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/enable.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fenable.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fenable.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fenable.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/enable.png"},{"sha":"443c7196b9eff72cc5826da9df08da5461858f0f","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/execute.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexecute.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexecute.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexecute.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/execute.png"},{"sha":"038583bcb7e532815d435688460fe5a46e133862","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/export.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexport.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexport.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fexport.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/export.png"},{"sha":"9669486ce123cd439f6fc52ddb52af71a929a9de","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/groups-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/groups-icon.png"},{"sha":"8c166afc03ca8d351ef483622633c24aa0ebade8","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/link-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Flink-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Flink-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Flink-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/link-icon.png"},{"sha":"2e8e1903d9bcef0c039d67384f3e327c3ccaf5cc","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/manage-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fmanage-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fmanage-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fmanage-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/manage-icon.png"},{"sha":"cc49adbb3bf8c90e4e43961c77b5c319022591a9","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/none-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fnone-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fnone-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fnone-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/none-icon.png"},{"sha":"d7fa5e91e7ffe991cf1ec8bb90cc685ea7fa627f","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/propagation-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fpropagation-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fpropagation-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fpropagation-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/propagation-icon.png"},{"sha":"3f8faf108d0f1d4640dd38b83024fda3434a7ad8","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/provision-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fprovision-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fprovision-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fprovision-icon.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/provision-icon.png"},{"sha":"50503e2d8636564f0d1f0be02067bde74b7b990d","filename":"client/old_console/src/main/resources/META-INF/resources/img/actions/reactivate.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Freactivate.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39f8a0696c465a5d170c4f37a36ea093743a60d1/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Freactivate.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Freactivate.png?ref=39f8a0696c465a5d170c4f37a36ea093743a60d1","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/reactivate.png"}]}