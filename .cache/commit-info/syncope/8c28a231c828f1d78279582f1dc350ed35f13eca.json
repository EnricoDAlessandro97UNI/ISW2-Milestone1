{"sha":"8c28a231c828f1d78279582f1dc350ed35f13eca","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjMjhhMjMxYzgyOGYxZDc4Mjc5NTgyZjFkYzM1MGVkMzVmMTNlY2E=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-27T12:47:25Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-27T12:47:25Z"},"message":"Fixes SYNCOPE-442 onto 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1546016 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d9d9e9de87a82eedc89cee0a4e952ab5b15baa4c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d9d9e9de87a82eedc89cee0a4e952ab5b15baa4c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8c28a231c828f1d78279582f1dc350ed35f13eca","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8c28a231c828f1d78279582f1dc350ed35f13eca","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8c28a231c828f1d78279582f1dc350ed35f13eca","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8c28a231c828f1d78279582f1dc350ed35f13eca/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2c11630a3363f9845ac5332ff93efdcbc4e864e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c11630a3363f9845ac5332ff93efdcbc4e864e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2c11630a3363f9845ac5332ff93efdcbc4e864e6"}],"stats":{"total":1012,"additions":605,"deletions":407},"files":[{"sha":"35e9ffa1dde99beb264e1ec5683a9bb33c83c8d7","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":28,"deletions":11,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.core.util.MappingUtil;\n import org.apache.syncope.core.util.SecureRandomUtil;\n import org.apache.syncope.core.util.VirAttrCache;\n+import org.apache.syncope.core.util.VirAttrCacheValue;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -508,15 +509,22 @@ private void retrieveVirAttrValue(\n             final ConnectorFactory connFactory) {\n \n         final String schemaName = virAttr.getVirtualSchema().getName();\n-        final List<String> values = virAttrCache.get(attrUtil.getType(), owner.getId(), schemaName);\n+        final VirAttrCacheValue virAttrCacheValue = virAttrCache.get(attrUtil.getType(), owner.getId(), schemaName);\n \n         LOG.debug(\"Retrieve values for virtual attribute {} ({})\", schemaName, type);\n \n-        if (values == null) {\n-            // non cached ...\n+        if (virAttrCache.isValidEntry(virAttrCacheValue)) {\n+            // cached ...\n+            LOG.debug(\"Values found in cache {}\", virAttrCacheValue);\n+            virAttr.setValues(new ArrayList<String>(virAttrCacheValue.getValues()));\n+        } else {\n+            // not cached ...\n             LOG.debug(\"Need one or more remote connections\");\n+\n+            final VirAttrCacheValue toBeCached = new VirAttrCacheValue();\n+\n             for (ExternalResource resource : getTargetResource(virAttr, type, attrUtil)) {\n-                LOG.debug(\"Seach values into {}\", resource.getName());\n+                LOG.debug(\"Search values into {}\", resource.getName());\n                 try {\n                     final List<AbstractMappingItem> mappings = attrUtil.getMappingItems(resource, MappingPurpose.BOTH);\n \n@@ -561,19 +569,28 @@ private void retrieveVirAttrValue(\n                                 }\n                             }\n                         }\n-                    }\n \n-                    LOG.debug(\"Retrieved values {}\", virAttr.getValues());\n+                        toBeCached.setResourceValues(resource.getName(), new HashSet<String>(virAttr.getValues()));\n+\n+                        LOG.debug(\"Retrieved values {}\", virAttr.getValues());\n+                    }\n                 } catch (Exception e) {\n                     LOG.error(\"Error reading connector object from {}\", resource.getName(), e);\n+\n+                    if (virAttrCacheValue != null) {\n+                        toBeCached.forceExpiring();\n+                        LOG.debug(\"Search for a cached value (even expired!) ...\");\n+                        final Set<String> cachedValues = virAttrCacheValue.getValues(resource.getName());\n+                        if (cachedValues != null) {\n+                            LOG.debug(\"Use cached value {}\", cachedValues);\n+                            virAttr.getValues().addAll(cachedValues);\n+                            toBeCached.setResourceValues(resource.getName(), new HashSet<String>(cachedValues));\n+                        }\n+                    }\n                 }\n             }\n \n-            virAttrCache.put(attrUtil.getType(), owner.getId(), schemaName, virAttr.getValues());\n-        } else {\n-            // cached ...\n-            LOG.debug(\"Values found in cache {}\", values);\n-            virAttr.setValues(values);\n+            virAttrCache.put(attrUtil.getType(), owner.getId(), schemaName, toBeCached);\n         }\n     }\n "},{"sha":"66a0d15519f9f18c5f0c752dbef0babee98808b3","filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCache.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -21,7 +21,6 @@\n import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.types.AttributableType;\n@@ -59,14 +58,18 @@ public VirAttrCache(final int ttl, final int maxCacheSize) {\n      * @param schemaName virtual attribute name\n      * @param values virtual attribute values\n      */\n-    public void put(final AttributableType type, final Long id, final String schemaName, final List<String> values) {\n+    public void put(\n+            final AttributableType type,\n+            final Long id,\n+            final String schemaName,\n+            final VirAttrCacheValue value) {\n         synchronized (cache) {\n             // this operations (retrieve cache space and put entry on) have to be thread safe.\n             if (this.cache.size() >= this.maxCacheSize) {\n                 free();\n             }\n \n-            cache.put(new VirAttrCacheKey(type, id, schemaName), new VirAttrCacheValue(values));\n+            cache.put(new VirAttrCacheKey(type, id, schemaName), value);\n         }\n     }\n \n@@ -76,11 +79,10 @@ public void put(final AttributableType type, final Long id, final String schemaN\n      * @param type user or role\n      * @param id user or role id\n      * @param schemaName virtual attribute schema name.\n-     * @return cached values or null in case of virtual attribute not found.\n+     * @return cached values or null if virtual attribute is not cached.\n      */\n-    public List<String> get(final AttributableType type, final Long id, final String schemaName) {\n-        final VirAttrCacheValue value = cache.get(new VirAttrCacheKey(type, id, schemaName));\n-        return isValidEntry(value) ? value.getValues() : null;\n+    public VirAttrCacheValue get(final AttributableType type, final Long id, final String schemaName) {\n+        return cache.get(new VirAttrCacheKey(type, id, schemaName));\n     }\n \n     /**\n@@ -134,7 +136,7 @@ private void free() {\n      * @param value cache entry value.\n      * @return TRUE if the value is valid; FALSE otherwise.\n      */\n-    private boolean isValidEntry(final VirAttrCacheValue value) {\n+    public boolean isValidEntry(final VirAttrCacheValue value) {\n         final Date expiringDate = new Date(value == null ? 0 : value.getCreationDate().getTime() + ttl * 1000);\n         return expiringDate.after(new Date());\n     }"},{"sha":"bca5acf610620cd187390150544962eee1407dbb","filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCacheValue.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCacheValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCacheValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCacheValue.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -19,7 +19,10 @@\n package org.apache.syncope.core.util;\n \n import java.util.Date;\n-import java.util.List;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n \n /**\n  * Cache entry value.\n@@ -29,7 +32,7 @@ public class VirAttrCacheValue {\n     /**\n      * Virtual attribute values.\n      */\n-    private final List<String> values;\n+    private final Map<String, Set<String>> values;\n \n     /**\n      * Entry creation date.\n@@ -41,10 +44,14 @@ public class VirAttrCacheValue {\n      */\n     private Date lastAccessDate;\n \n-    public VirAttrCacheValue(final List<String> values) {\n-        this.values = values;\n+    public VirAttrCacheValue() {\n         this.creationDate = new Date();\n         this.lastAccessDate = new Date();\n+        values = new HashMap<String, Set<String>>();\n+    }\n+\n+    public void setResourceValues(final String resourceName, final Set<String> values) {\n+        this.values.put(resourceName, values);\n     }\n \n     public Date getCreationDate() {\n@@ -55,8 +62,18 @@ public void forceExpiring() {\n         creationDate = new Date(0);\n     }\n \n-    public List<String> getValues() {\n-        return values;\n+    public Set<String> getValues(final String resourceName) {\n+        return values.get(resourceName);\n+    }\n+\n+    public Set<String> getValues() {\n+        final Set<String> res = new HashSet<String>();\n+\n+        for (Set<String> value : values.values()) {\n+            res.addAll(value);\n+        }\n+\n+        return res;\n     }\n \n     public Date getLastAccessDate() {"},{"sha":"9efcc342e4331a2c5aac30f1770e87e46a26a8dc","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":47,"deletions":3,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -71,13 +71,11 @@\n import org.apache.syncope.common.services.UserWorkflowService;\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n-import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.AttributeTO;\n-import org.apache.syncope.common.to.PasswordPolicyTO;\n+import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PolicyTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.PolicyType;\n@@ -117,6 +115,48 @@ public abstract class AbstractTest {\n \n     private static final String ENV_KEY_CONTENT_TYPE = \"jaxrsContentType\";\n \n+    protected static final String RESOURCE_NAME_WS1 = \"ws-target-resource-1\";\n+\n+    protected static final String RESOURCE_NAME_WS2 = \"ws-target-resource-2\";\n+\n+    protected static final String RESOURCE_NAME_LDAP = \"resource-ldap\";\n+\n+    protected static final String RESOURCE_NAME_TESTDB = \"resource-testdb\";\n+\n+    protected static final String RESOURCE_NAME_TESTDB2 = \"resource-testdb2\";\n+\n+    protected static final String RESOURCE_NAME_CSV = \"resource-csv\";\n+\n+    protected static final String RESOURCE_NAME_DBSYNC = \"resource-db-sync\";\n+\n+    protected static final String RESOURCE_NAME_DBVIRATTR = \"resource-db-virattr\";\n+\n+    protected static final String RESOURCE_NAME_NOPROPAGATION = \"ws-target-resource-nopropagation\";\n+\n+    protected static final String RESOURCE_NAME_NOPROPAGATION2 = \"ws-target-resource-nopropagation2\";\n+\n+    protected static final String RESOURCE_NAME_NOPROPAGATION3 = \"ws-target-resource-nopropagation3\";\n+\n+    protected static final String RESOURCE_NAME_NOPROPAGATION4 = \"ws-target-resource-nopropagation4\";\n+\n+    protected static final String RESOURCE_NAME_RESETSYNCTOKEN = \"ws-target-resource-update-resetsynctoken\";\n+\n+    protected static final String RESOURCE_NAME_TIMEOUT = \"ws-target-resource-timeout\";\n+\n+    protected static final String RESOURCE_NAME_MAPPINGS1 = \"ws-target-resource-list-mappings-1\";\n+\n+    protected static final String RESOURCE_NAME_MAPPINGS2 = \"ws-target-resource-list-mappings-2\";\n+\n+    protected static final String RESOURCE_NAME_CREATE = \"ws-target-resource-create\";\n+\n+    protected static final String RESOURCE_NAME_CREATE_SINGLE = \"ws-target-resource-create-single\";\n+\n+    protected static final String RESOURCE_NAME_CREATE_WRONG = \"ws-target-resource-create-wrong\";\n+\n+    protected static final String RESOURCE_NAME_DELETE = \"ws-target-resource-delete\";\n+\n+    protected static final String RESOURCE_NAME_UPDATE = \"ws-target-resource-update\";\n+\n     @Autowired\n     private RestTemplate restTemplate;\n \n@@ -178,6 +218,10 @@ public void setup() throws Exception {\n         }\n     }\n \n+    protected ConnObjectTO readConnectorObject(final String resourceName, final Long userId, AttributableType type) {\n+        return resourceService.getConnectorObject(resourceName, type, userId);\n+    }\n+\n     // BEGIN Spring MVC Initialization\n     private void setupRestTemplate(final String uid, final String pwd) {\n         PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate"},{"sha":"7ccd1165dd52ed3c17f21d3e42e381217950ca81","filename":"core/src/test/java/org/apache/syncope/core/rest/LoggerTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -170,7 +170,7 @@ public void listAuditEvents() {\n         found = false;\n         for (EventCategoryTO eventCategoryTO : events) {\n             if (AttributableType.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n-                if (\"resource-ldap\".equals(eventCategoryTO.getSubcategory())\n+                if (RESOURCE_NAME_LDAP.equals(eventCategoryTO.getSubcategory())\n                         && EventCategoryType.SYNCHRONIZATION == eventCategoryTO.getType()) {\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.CREATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.UPDATE.name().toLowerCase()));\n@@ -184,7 +184,7 @@ public void listAuditEvents() {\n         found = false;\n         for (EventCategoryTO eventCategoryTO : events) {\n             if (AttributableType.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n-                if (\"resource-csv\".equals(eventCategoryTO.getSubcategory())\n+                if (RESOURCE_NAME_CSV.equals(eventCategoryTO.getSubcategory())\n                         && EventCategoryType.PROPAGATION == eventCategoryTO.getType()) {\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.CREATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.UPDATE.name().toLowerCase()));"},{"sha":"f6b858fb011d12f65880e5dd949c4555fe9ce2dd","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -65,7 +65,7 @@ public void getPropagationActionsClasses() {\n \n     @Test\n     public void create() {\n-        String resourceName = \"ws-target-resource-create\";\n+        String resourceName = RESOURCE_NAME_CREATE;\n         ResourceTO resourceTO = buildResourceTO(resourceName);\n \n         Response response = resourceService.create(resourceTO);\n@@ -135,7 +135,7 @@ public void createOverridingProps() {\n \n     @Test\n     public void createWithSingleMappingItem() {\n-        String resourceName = \"ws-target-resource-create-single\";\n+        String resourceName = RESOURCE_NAME_CREATE_SINGLE;\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(102L);\n@@ -174,7 +174,7 @@ public void createWithSingleMappingItem() {\n \n     @Test\n     public void createWithInvalidMapping() {\n-        String resourceName = \"ws-target-resource-create-wrong\";\n+        String resourceName = RESOURCE_NAME_CREATE_WRONG;\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(102L);\n@@ -209,7 +209,7 @@ public void createWithInvalidMapping() {\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createWithoutExtAttr() {\n-        String resourceName = \"ws-target-resource-create-wrong\";\n+        String resourceName = RESOURCE_NAME_CREATE_WRONG;\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(102L);\n@@ -278,7 +278,7 @@ public void updateWithException() {\n \n     @Test\n     public void update() {\n-        String resourceName = \"ws-target-resource-update\";\n+        String resourceName = RESOURCE_NAME_UPDATE;\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(101L);\n@@ -335,7 +335,7 @@ public void deleteWithException() {\n     @Test\n     public void updateResetSyncToken() {\n         // create resource with sync token\n-        String resourceName = \"ws-target-resource-update-resetsynctoken\" + getUUIDString();\n+        String resourceName = RESOURCE_NAME_RESETSYNCTOKEN + getUUIDString();\n         ResourceTO pre = buildResourceTO(resourceName);\n         pre.setUsyncToken(\"test\");\n         resourceService.create(pre);\n@@ -386,13 +386,13 @@ public void listByType() {\n \n     @Test\n     public void read() {\n-        ResourceTO actual = resourceService.read(\"resource-testdb\");\n+        ResourceTO actual = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(actual);\n     }\n \n     @Test\n     public void issueSYNCOPE323() {\n-        ResourceTO actual = resourceService.read(\"resource-testdb\");\n+        ResourceTO actual = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(actual);\n \n         try {"},{"sha":"b013a3d6a7146fc8688e6666667ddab38377a42f","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -68,14 +68,10 @@ private RoleTO buildRoleTO(final String name) {\n \n         roleTO.addAttribute(attributeTO(\"icon\", \"anIcon\"));\n \n-        roleTO.addResource(\"resource-ldap\");\n+        roleTO.addResource(RESOURCE_NAME_LDAP);\n         return roleTO;\n     }\n \n-    private ConnObjectTO readConnectorObject(final String resourceName, final Long roleId) {\n-        return resourceService.getConnectorObject(resourceName, AttributableType.ROLE, roleId);\n-    }\n-\n     @Test\n     public void createWithException() {\n         RoleTO newRoleTO = new RoleTO();\n@@ -109,9 +105,9 @@ public void create() {\n         assertNotNull(roleTO.getPasswordPolicy());\n         assertEquals(4L, (long) roleTO.getPasswordPolicy());\n \n-        assertTrue(roleTO.getResources().contains(\"resource-ldap\"));\n+        assertTrue(roleTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(\"resource-ldap\", roleTO.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, roleTO.getId(), AttributableType.ROLE);\n         assertNotNull(connObjectTO);\n         assertNotNull(connObjectTO.getAttributeMap().get(\"owner\"));\n     }\n@@ -144,7 +140,7 @@ public void delete() {\n         roleTO.setName(\"toBeDeleted\" + getUUIDString());\n         roleTO.setParent(8L);\n \n-        roleTO.addResource(\"resource-ldap\");\n+        roleTO.addResource(RESOURCE_NAME_LDAP);\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);"},{"sha":"6c547124aa30d6f8523de748efd9f29f83038222","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -135,7 +135,7 @@ public void searchUserByResourceName() throws InvalidSearchConditionException {\n         ws2.setResourceName(\"ws-target-resource2\");\n \n         ResourceCond ws1 = new ResourceCond();\n-        ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n+        ws1.setResourceName(RESOURCE_NAME_MAPPINGS2);\n \n         NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getNotLeafCond(ws2), NodeCond.getLeafCond(ws1));\n "},{"sha":"4ac78231d6e1c4b901e584d8ee4e7107d658fb7c","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -95,17 +95,17 @@ public void getSyncActionsClasses() {\n     public void create() {\n         SyncTaskTO task = new SyncTaskTO();\n         task.setName(\"Test create Sync\");\n-        task.setResource(\"ws-target-resource-2\");\n+        task.setResource(RESOURCE_NAME_WS2);\n \n         UserTO userTemplate = new UserTO();\n-        userTemplate.addResource(\"ws-target-resource-2\");\n+        userTemplate.addResource(RESOURCE_NAME_WS2);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n         userTemplate.addMembership(membershipTO);\n         task.setUserTemplate(userTemplate);\n \n         RoleTO roleTemplate = new RoleTO();\n-        roleTemplate.addResource(\"resource-ldap\");\n+        roleTemplate.addResource(RESOURCE_NAME_LDAP);\n         task.setRoleTemplate(roleTemplate);\n \n         Response response = taskService.create(task);\n@@ -264,7 +264,7 @@ public void sync() {\n             UserTO template = new UserTO();\n             template.addAttribute(attributeTO(\"type\", \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n             template.addDerivedAttribute(attributeTO(\"cn\", null));\n-            template.addResource(\"resource-testdb\");\n+            template.addResource(RESOURCE_NAME_TESTDB);\n \n             MembershipTO membershipTO = new MembershipTO();\n             membershipTO.setRoleId(8L);\n@@ -296,8 +296,8 @@ public void sync() {\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n             assertEquals(2, userTO.getResources().size());\n-            assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n-            assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n+            assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n+            assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n             assertEquals(1, userTO.getMemberships().size());\n             assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n \n@@ -383,7 +383,7 @@ public void reconcileFromLDAP()\n \n         //  add user template\n         final UserTO userTemplate = task.getUserTemplate();\n-        userTemplate.setResources(Collections.singleton(\"resource-ldap\"));\n+        userTemplate.setResources(Collections.singleton(RESOURCE_NAME_LDAP));\n         userTemplate.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"\"));\n \n         task.setUserTemplate(userTemplate);\n@@ -592,8 +592,8 @@ public void issueSYNCOPE68() {\n         userTO.addAttribute(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n         userTO.addAttribute(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n \n-        userTO.addResource(\"ws-target-resource-nopropagation2\");\n-        userTO.addResource(\"ws-target-resource-nopropagation4\");\n+        userTO.addResource(RESOURCE_NAME_NOPROPAGATION2);\n+        userTO.addResource(RESOURCE_NAME_NOPROPAGATION4);\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7L);\n@@ -618,7 +618,7 @@ public void issueSYNCOPE68() {\n \n             template.addMembership(membershipTO);\n \n-            template.addResource(\"ws-target-resource-nopropagation4\");\n+            template.addResource(RESOURCE_NAME_NOPROPAGATION4);\n             //-----------------------------\n \n             // Update sync task\n@@ -744,7 +744,7 @@ public void issueSYNCOPE272() {\n \n         // create user with testdb resource\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope272@syncope.apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n         try {\n@@ -767,7 +767,7 @@ public void issueSYNCOPE272() {\n             template.addAttribute(attributeTO(\"userId\", \"'test'\"));\n             template.addAttribute(attributeTO(\"fullname\", \"'test'\"));\n             template.addAttribute(attributeTO(\"surname\", \"'test'\"));\n-            template.addResource(\"resource-testdb\");\n+            template.addResource(RESOURCE_NAME_TESTDB);\n \n             task.setUserTemplate(template);\n \n@@ -804,7 +804,7 @@ public void issueSYNCOPE258() {\n \n         SyncTaskTO task = new SyncTaskTO();\n         task.setName(\"Test Sync Rule\");\n-        task.setResource(\"ws-target-resource-2\");\n+        task.setResource(RESOURCE_NAME_WS2);\n         task.setFullReconciliation(true);\n         task.setPerformCreate(true);\n         task.setPerformDelete(true);\n@@ -816,13 +816,13 @@ public void issueSYNCOPE258() {\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"s258_1@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.addResource(RESOURCE_NAME_WS2);\n \n         userTO = createUser(userTO);\n \n         userTO = UserTestITCase.getUniqueSampleTO(\"s258_2@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.addResource(RESOURCE_NAME_WS2);\n \n         userTO = createUser(userTO);\n \n@@ -853,8 +853,8 @@ public void issueSYNCOPE307() {\n         userTO.addDerivedAttribute(csvuserid);\n \n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-2\");\n-        userTO.addResource(\"resource-csv\");\n+        userTO.addResource(RESOURCE_NAME_WS2);\n+        userTO.addResource(RESOURCE_NAME_CSV);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -868,7 +868,7 @@ public void issueSYNCOPE307() {\n \n         //  add user template\n         UserTO template = new UserTO();\n-        template.addResource(\"resource-db-virattr\");\n+        template.addResource(RESOURCE_NAME_DBVIRATTR);\n \n         AttributeTO userId = attributeTO(\"userId\", \"'s307@apache.org'\");\n         template.addAttribute(userId);\n@@ -903,7 +903,7 @@ public void bulkAction() {\n \n         // create user with testdb resource\n         final UserTO userTO = UserTestITCase.getUniqueSampleTO(\"taskBulk@apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n         createUser(userTO);\n \n         @SuppressWarnings(\"unchecked\")"},{"sha":"54993e644747e34a713478c964bb914c318d7e65","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":38,"deletions":341,"changes":379,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -62,8 +62,6 @@\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.CipherAlgorithm;\n-import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n@@ -89,16 +87,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserTestITCase extends AbstractTest {\n \n-    private static final String RESOURCE_NAME_LDAP = \"resource-ldap\";\n-\n-    private static final String RESOURCE_NAME_TESTDB = \"resource-testdb\";\n-\n-    private static final String RESOURCE_NAME_CSV = \"resource-csv\";\n-\n-    private ConnObjectTO readConnectorObject(final String resourceName, final Long userId) {\n-        return resourceService.getConnectorObject(resourceName, AttributableType.USER, userId);\n-    }\n-\n     public static UserTO getUniqueSampleTO(final String email) {\n         return getSampleTO(getUUIDString() + email);\n     }\n@@ -155,7 +143,7 @@ public void createUserWithNoPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"xxx@xxx.xxx\");\n \n         userTO.setPassword(\"password123\");\n-        userTO.addResource(\"ws-target-resource-nopropagation\");\n+        userTO.addResource(RESOURCE_NAME_NOPROPAGATION);\n \n         createUser(userTO);\n \n@@ -220,7 +208,7 @@ public void issue186() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_WS2);\n \n         SyncopeClientException sce = null;\n         try {\n@@ -235,7 +223,7 @@ public void issue186() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_WS1);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n@@ -259,7 +247,7 @@ public void issue186() {\n     @Test\n     public void testEnforceMandatoryCondition() {\n         UserTO userTO = getUniqueSampleTO(\"enforce@apache.org\");\n-        userTO.addResource(\"ws-target-resource-2\");\n+        userTO.addResource(RESOURCE_NAME_WS2);\n         userTO.setPassword(\"newPassword\");\n \n         AttributeTO type = null;\n@@ -351,7 +339,7 @@ public void createWithInvalidPasswordByRes() {\n         // configured to be minLength=16\n         userTO.setPassword(\"password1\");\n \n-        userTO.setResources(Collections.singleton(\"ws-target-resource-nopropagation\"));\n+        userTO.setResources(Collections.singleton(RESOURCE_NAME_NOPROPAGATION));\n \n         createUser(userTO);\n     }\n@@ -589,7 +577,7 @@ public void createWithReject() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] { userTO.getUsername() }, Integer.class);\n+                    new String[] {userTO.getUsername()}, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -626,7 +614,7 @@ public void createWithApproval() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] { userTO.getUsername() }, Integer.class);\n+                    new String[] {userTO.getUsername()}, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -1146,10 +1134,10 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, userId);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, userId, AttributableType.USER);\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n@@ -1161,7 +1149,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n@@ -1173,7 +1161,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n         assertTrue(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n     }\n \n@@ -1376,7 +1364,7 @@ public void roleAttrPropagation() {\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1403,43 +1391,11 @@ public void membershipAttrPropagation() {\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n \n-    @Test\n-    public void issueSYNCOPE16() {\n-        UserTO userTO = getUniqueSampleTO(\"issue16@apache.org\");\n-\n-        MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(8L);\n-        userTO.addMembership(membershipTO);\n-\n-        // 1. create user\n-        UserTO actual = createUser(userTO);\n-        assertNotNull(actual);\n-\n-        // 2. check for virtual attribute value\n-        actual = userService.read(actual.getId());\n-        assertNotNull(actual);\n-        assertEquals(\"virtualvalue\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n-\n-        UserMod userMod = new UserMod();\n-        userMod.setId(actual.getId());\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"virtualupdated\"));\n-\n-        // 3. update virtual attribute\n-        actual = userService.update(userMod.getId(), userMod);\n-        assertNotNull(actual);\n-\n-        // 4. check for virtual attribute value\n-        actual = userService.read(actual.getId());\n-        assertNotNull(actual);\n-        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n-    }\n-\n     @Test\n     public void issueSYNCOPE108() {\n         UserTO userTO = getUniqueSampleTO(\"syncope108@syncope.apache.org\");\n@@ -1466,7 +1422,7 @@ public void issueSYNCOPE108() {\n         assertEquals(2, actual.getMemberships().size());\n         assertEquals(1, actual.getResources().size());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1481,7 +1437,7 @@ public void issueSYNCOPE108() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1498,7 +1454,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1516,7 +1472,7 @@ public void issueSYNCOPE108() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+            readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n             fail(\"Read should not succeeed\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n@@ -1547,7 +1503,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n \n         AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1576,7 +1532,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1608,7 +1564,7 @@ public void issueSYNCOPE185() {\n \n         // 3. try (and fail) to find this user on the external LDAP resource\n         try {\n-            readConnectorObject(RESOURCE_NAME_LDAP, userTO.getId());\n+            readConnectorObject(RESOURCE_NAME_LDAP, userTO.getId(), AttributableType.USER);\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             SyncopeClientException sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n@@ -1646,136 +1602,22 @@ public void issueSYNCOPE51() {\n         assertEquals(defaultConfigurationTO, oldConfTO);\n     }\n \n-    @Test\n-    public void issueSYNCOPE260() {\n-        // ----------------------------------\n-        // create user and check virtual attribute value propagation\n-        // ----------------------------------\n-        UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n-        userTO.addResource(\"ws-target-resource-2\");\n-\n-        userTO = createUser(userTO);\n-        assertNotNull(userTO);\n-        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n-\n-        ConnObjectTO connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n-        // ----------------------------------\n-\n-        // ----------------------------------\n-        // update user virtual attribute and check virtual attribute value update propagation\n-        // ----------------------------------\n-        UserMod userMod = new UserMod();\n-        userMod.setId(userTO.getId());\n-\n-        AttributeMod attrMod = new AttributeMod();\n-        attrMod.setSchema(\"virtualdata\");\n-        attrMod.addValueToBeRemoved(\"virtualvalue\");\n-        attrMod.addValueToBeAdded(\"virtualvalue2\");\n-\n-        userMod.addVirtualAttributeToBeUpdated(attrMod);\n-\n-        userTO = userService.update(userMod.getId(), userMod);\n-        assertNotNull(userTO);\n-        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n-\n-        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n-        // ----------------------------------\n-\n-        // ----------------------------------\n-        // suspend/reactivate user and check virtual attribute value (unchanged)\n-        // ----------------------------------\n-        userTO = userService.suspend(userTO.getId());\n-        assertEquals(\"suspended\", userTO.getStatus());\n-\n-        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n-\n-        userTO = userService.reactivate(userTO.getId());\n-        assertEquals(\"active\", userTO.getStatus());\n-\n-        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n-        // ----------------------------------\n-\n-        // ----------------------------------\n-        // update user attribute and check virtual attribute value (unchanged)\n-        // ----------------------------------\n-        userMod = new UserMod();\n-        userMod.setId(userTO.getId());\n-\n-        attrMod = new AttributeMod();\n-        attrMod.setSchema(\"surname\");\n-        attrMod.addValueToBeRemoved(\"Surname\");\n-        attrMod.addValueToBeAdded(\"Surname2\");\n-\n-        userMod.addAttributeToBeUpdated(attrMod);\n-\n-        userTO = userService.update(userMod.getId(), userMod);\n-        assertNotNull(userTO);\n-        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n-\n-        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-        assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n-\n-        // attribute \"name\" mapped on virtual attribute \"virtualdata\" shouldn't be changed\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n-        // ----------------------------------\n-\n-        // ----------------------------------\n-        // remove user virtual attribute and check virtual attribute value (reset)\n-        // ----------------------------------\n-        userMod = new UserMod();\n-        userMod.setId(userTO.getId());\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-\n-        userTO = userService.update(userMod.getId(), userMod);\n-        assertNotNull(userTO);\n-        assertTrue(userTO.getVirtualAttributes().isEmpty());\n-        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n-\n-        connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n-        assertNotNull(connObjectTO);\n-\n-        // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n-        assertTrue(connObjectTO.getAttributeMap().get(\"NAME\").getValues() == null\n-                || connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        // ----------------------------------\n-    }\n-\n     @Test\n     public void issueSYNCOPE267() {\n         // ----------------------------------\n         // create user and check virtual attribute value propagation\n         // ----------------------------------\n         UserTO userTO = getUniqueSampleTO(\"syncope267@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"resource-db-virattr\");\n+        userTO.addResource(RESOURCE_NAME_DBVIRATTR);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"resource-db-virattr\", userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(RESOURCE_NAME_DBVIRATTR, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(\"resource-db-virattr\", userTO.getId());\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_DBVIRATTR, userTO.getId(), AttributableType.USER);\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1799,7 +1641,7 @@ public void issueSYNCOPE266() {\n         userMod.setId(userTO.getId());\n \n         // this resource has not a mapping for Password\n-        userMod.addResourceToBeAdded(\"ws-target-resource-update\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_UPDATE);\n \n         userTO = userService.update(userTO.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1809,9 +1651,9 @@ public void issueSYNCOPE266() {\n     public void issueSYNCOPE279() {\n         UserTO userTO = getUniqueSampleTO(\"syncope279@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"ws-target-resource-timeout\");\n+        userTO.addResource(RESOURCE_NAME_TIMEOUT);\n         userTO = createUser(userTO);\n-        assertEquals(\"ws-target-resource-timeout\", userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(RESOURCE_NAME_TIMEOUT, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n         assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n@@ -1822,7 +1664,7 @@ public void issueSYNCOPE122() {\n         UserTO userTO = getUniqueSampleTO(\"syncope122@apache.org\");\n         userTO.getResources().clear();\n         userTO.addResource(RESOURCE_NAME_TESTDB);\n-        userTO.addResource(\"resource-testdb2\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB2);\n         try {\n             userTO = createUser(userTO);\n         } catch (SyncopeClientCompositeErrorException scce) {\n@@ -1834,7 +1676,7 @@ public void issueSYNCOPE122() {\n         }\n         assertNotNull(userTO);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n-        assertTrue(userTO.getResources().contains(\"resource-testdb2\"));\n+        assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n \n         final String pwdOnSyncope = userTO.getPassword();\n \n@@ -1847,7 +1689,7 @@ public void issueSYNCOPE122() {\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 = resourceService.getConnectorObject(\n-                \"resource-testdb2\", AttributableType.USER, userTO.getId());\n+                RESOURCE_NAME_TESTDB2, AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n@@ -1881,7 +1723,7 @@ public void issueSYNCOPE122() {\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n-        userOnDb2 = resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n+        userOnDb2 = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB2, AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n@@ -1909,7 +1751,7 @@ public void isseSYNCOPE136AES() {\n         // 4. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_WS1);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1920,7 +1762,7 @@ public void isseSYNCOPE136AES() {\n         assertEquals(1, props.size());\n         PropagationStatusTO prop = props.iterator().next();\n         assertNotNull(prop);\n-        assertEquals(\"ws-target-resource-1\", prop.getResource());\n+        assertEquals(RESOURCE_NAME_WS1, prop.getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n \n         // 6. restore initial cipher algorithm\n@@ -1955,71 +1797,6 @@ public void isseSYNCOPE136Random() {\n         assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n     }\n \n-    @Test\n-    public void virAttrCache() {\n-        UserTO userTO = getUniqueSampleTO(\"virattrcache@apache.org\");\n-        userTO.getVirtualAttributes().clear();\n-\n-        AttributeTO virAttrTO = new AttributeTO();\n-        virAttrTO.setSchema(\"virtualdata\");\n-        virAttrTO.addValue(\"virattrcache\");\n-        userTO.addVirtualAttribute(virAttrTO);\n-\n-        userTO.getMemberships().clear();\n-        userTO.getResources().clear();\n-        userTO.addResource(\"resource-db-virattr\");\n-\n-        // 1. create user\n-        UserTO actual = createUser(userTO);\n-        assertNotNull(actual);\n-\n-        // 2. check for virtual attribute value\n-        actual = userService.read(actual.getId());\n-        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n-\n-        Exception exception = null;\n-        try {\n-            final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-\n-            String value = jdbcTemplate.queryForObject(\n-                    \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getId());\n-            assertEquals(\"virattrcache\", value);\n-\n-            jdbcTemplate.update(\"UPDATE testsync set USERNAME='virattrcache2' WHERE ID=?\", userTO.getId());\n-\n-            value = jdbcTemplate.queryForObject(\n-                    \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getId());\n-            assertEquals(\"virattrcache2\", value);\n-\n-        } catch (EmptyResultDataAccessException e) {\n-            exception = e;\n-        }\n-        assertNotNull(exception);\n-\n-        // 2. check for cached attribute value\n-        actual = userService.read(actual.getId());\n-        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n-\n-        UserMod userMod = new UserMod();\n-        userMod.setId(actual.getId());\n-\n-        AttributeMod virtualdata = new AttributeMod();\n-        virtualdata.setSchema(\"virtualdata\");\n-        virtualdata.addValueToBeAdded(\"virtualupdated\");\n-\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n-\n-        // 3. update virtual attribute\n-        actual = userService.update(actual.getId(), userMod);\n-        assertNotNull(actual);\n-\n-        // 4. check for virtual attribute value\n-        actual = userService.read(actual.getId());\n-        assertNotNull(actual);\n-        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n-    }\n-\n     @Test\n     public void mappingPurpose() {\n         UserTO userTO = getUniqueSampleTO(\"mpurpose@apache.org\");\n@@ -2034,7 +1811,7 @@ public void mappingPurpose() {\n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n \n-        final ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n+        final ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n         assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n     }\n \n@@ -2223,74 +2000,6 @@ public void issueSYNCOPE383() {\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n     }\n \n-    @Test\n-    public void issueSYNCOPE397() {\n-        ResourceTO csv = resourceService.read(RESOURCE_NAME_CSV);\n-\n-        for (MappingItemTO item : csv.getUmapping().getItems()) {\n-            if (\"email\".equals(item.getIntAttrName())) {\n-                // unset internal attribute mail and set virtual attribute virtualdata as mapped to external email\n-                item.setIntMappingType(IntMappingType.UserVirtualSchema);\n-                item.setIntAttrName(\"virtualdata\");\n-                item.setPurpose(MappingPurpose.BOTH);\n-                item.setExtAttrName(\"email\");\n-            }\n-        }\n-\n-        resourceService.update(csv.getName(), csv);\n-        csv = resourceService.read(RESOURCE_NAME_CSV);\n-        assertNotNull(csv.getUmapping());\n-\n-        boolean found = false;\n-        for (MappingItemTO item : csv.getUmapping().getItems()) {\n-            if (\"email\".equals(item.getExtAttrName()) && \"virtualdata\".equals(item.getIntAttrName())) {\n-                found = true;\n-            }\n-        }\n-\n-        assertTrue(found);\n-\n-        // create a new user\n-        UserTO userTO = getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n-        userTO.getResources().clear();\n-        userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-\n-        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n-        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n-        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"test@testone.org\"));\n-        // assign resource-csv to user\n-        userTO.addResource(RESOURCE_NAME_CSV);\n-        // save user\n-        UserTO created = createUser(userTO);\n-        // make std controls about user\n-        assertNotNull(created);\n-        assertTrue(RESOURCE_NAME_CSV.equals(created.getResources().iterator().next()));\n-        // update user\n-        UserTO toBeUpdated = userService.read(created.getId());\n-        UserMod userMod = new UserMod();\n-        userMod.setId(toBeUpdated.getId());\n-        userMod.setPassword(\"password2\");\n-        // assign new resource to user\n-        userMod.addResourceToBeAdded(\"ws-target-resource-2\");\n-        //modify virtual attribute\n-        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n-\n-        // check Syncope change password\n-        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.setOnSyncope(true);\n-        pwdPropRequest.addResource(\"ws-target-resource-2\");\n-        userMod.setPwdPropRequest(pwdPropRequest);\n-\n-        toBeUpdated = userService.update(userMod.getId(), userMod);\n-        assertNotNull(toBeUpdated);\n-        assertEquals(\"test@testoneone.com\", toBeUpdated.getVirtualAttributes().get(0).getValues().get(0));\n-        // check if propagates correctly with assertEquals on size of tasks list\n-        assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n-    }\n-\n     @Test\n     public void issueSYNCOPE402() {\n         // 1. create an user with strict mandatory attributes only\n@@ -2312,10 +2021,10 @@ public void issueSYNCOPE402() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n-        userMod.addResourceToBeAdded(\"resource-testdb\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_WS1);\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_TESTDB);\n         userTO = userService.update(userMod.getId(), userMod);\n-        assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n+        assertEquals(RESOURCE_NAME_WS1, userTO.getPropagationStatusTOs().get(1).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(1).getFailureReason());\n         assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(1).getStatus());\n     }\n@@ -2369,27 +2078,15 @@ public void issueSYNCOPE435() {\n \n         // 2. try to update user by subscribing a resource - works but propagation is not even attempted\n         UserMod userMod = new UserMod();\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n+        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_WS1);\n \n         userTO = userService.update(userTO.getId(), userMod);\n-        assertEquals(Collections.singleton(\"ws-target-resource-1\"), userTO.getResources());\n+        assertEquals(Collections.singleton(RESOURCE_NAME_WS1), userTO.getResources());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getFailureReason().\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n \n-    @Test\n-    public void issueSYNCOPE436() {\n-        UserTO userTO = getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n-        userTO.getMemberships().clear();\n-        userTO.getResources().clear();\n-        userTO.addResource(RESOURCE_NAME_LDAP);\n-        userTO.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"readOnly\"));\n-        userTO = createUser(userTO);\n-        //Finding no values because the virtual attribute is readonly \n-        assertTrue(userTO.getVirtualAttributeMap().get(\"virtualReadOnly\").getValues().isEmpty());\n-    }\n-\n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"},{"sha":"71df152353de423e4d23366370e9a9b8936df713","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"added","additions":425,"deletions":0,"changes":425,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c28a231c828f1d78279582f1dc350ed35f13eca/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=8c28a231c828f1d78279582f1dc350ed35f13eca","patch":"@@ -0,0 +1,425 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest;\n+\n+import static org.apache.syncope.core.rest.AbstractTest.RESOURCE_NAME_DBVIRATTR;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeMod;\n+import static org.apache.syncope.core.rest.UserTestITCase.getUniqueSampleTO;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.Collections;\n+import org.apache.syncope.common.mod.AttributeMod;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.ConnInstanceTO;\n+import org.apache.syncope.common.to.ConnObjectTO;\n+import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MembershipTO;\n+import org.apache.syncope.common.to.PropagationRequestTO;\n+import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.ConnConfProperty;\n+import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.MappingPurpose;\n+import org.apache.syncope.common.types.PropagationTaskExecStatus;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class VirAttrTestITCase extends AbstractTest {\n+\n+    @Test\n+    public void issueSYNCOPE16() {\n+        UserTO userTO = getUniqueSampleTO(\"issue16@apache.org\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(8L);\n+        userTO.addMembership(membershipTO);\n+\n+        // 1. create user\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        // 2. check for virtual attribute value\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertEquals(\"virtualvalue\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"virtualupdated\"));\n+\n+        // 3. update virtual attribute\n+        actual = userService.update(userMod.getId(), userMod);\n+        assertNotNull(actual);\n+\n+        // 4. check for virtual attribute value\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+    }\n+\n+    @Test\n+    public void issueSYNCOPE260() {\n+        // ----------------------------------\n+        // create user and check virtual attribute value propagation\n+        // ----------------------------------\n+        UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n+        userTO.addResource(RESOURCE_NAME_WS2);\n+\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n+        assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+\n+        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // update user virtual attribute and check virtual attribute value update propagation\n+        // ----------------------------------\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        AttributeMod attrMod = new AttributeMod();\n+        attrMod.setSchema(\"virtualdata\");\n+        attrMod.addValueToBeRemoved(\"virtualvalue\");\n+        attrMod.addValueToBeAdded(\"virtualvalue2\");\n+\n+        userMod.addVirtualAttributeToBeUpdated(attrMod);\n+\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n+        assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // suspend/reactivate user and check virtual attribute value (unchanged)\n+        // ----------------------------------\n+        userTO = userService.suspend(userTO.getId());\n+        assertEquals(\"suspended\", userTO.getStatus());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+\n+        userTO = userService.reactivate(userTO.getId());\n+        assertEquals(\"active\", userTO.getStatus());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // update user attribute and check virtual attribute value (unchanged)\n+        // ----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        attrMod = new AttributeMod();\n+        attrMod.setSchema(\"surname\");\n+        attrMod.addValueToBeRemoved(\"Surname\");\n+        attrMod.addValueToBeAdded(\"Surname2\");\n+\n+        userMod.addAttributeToBeUpdated(attrMod);\n+\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n+        assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n+\n+        // attribute \"name\" mapped on virtual attribute \"virtualdata\" shouldn't be changed\n+        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // remove user virtual attribute and check virtual attribute value (reset)\n+        // ----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO);\n+        assertTrue(userTO.getVirtualAttributes().isEmpty());\n+        assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n+        assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+\n+        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        assertNotNull(connObjectTO);\n+\n+        // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n+        assertTrue(connObjectTO.getAttributeMap().get(\"NAME\").getValues() == null\n+                || connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        // ----------------------------------\n+    }\n+\n+    @Test\n+    public void virAttrCache() {\n+        UserTO userTO = getUniqueSampleTO(\"virattrcache@apache.org\");\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO virAttrTO = new AttributeTO();\n+        virAttrTO.setSchema(\"virtualdata\");\n+        virAttrTO.addValue(\"virattrcache\");\n+        userTO.addVirtualAttribute(virAttrTO);\n+\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.addResource(RESOURCE_NAME_DBVIRATTR);\n+\n+        // 1. create user\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        // 2. check for virtual attribute value\n+        actual = userService.read(actual.getId());\n+        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // ----------------------------------------\n+        // 3. update virtual attribute\n+        // ----------------------------------------\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+\n+        String value = jdbcTemplate.queryForObject(\n+                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getId());\n+        assertEquals(\"virattrcache\", value);\n+\n+        jdbcTemplate.update(\"UPDATE testsync set USERNAME='virattrcache2' WHERE ID=?\", actual.getId());\n+\n+        value = jdbcTemplate.queryForObject(\n+                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getId());\n+        assertEquals(\"virattrcache2\", value);\n+        // ----------------------------------------\n+\n+        // 4. check for cached attribute value\n+        actual = userService.read(actual.getId());\n+        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        AttributeMod virtualdata = new AttributeMod();\n+        virtualdata.setSchema(\"virtualdata\");\n+        virtualdata.addValueToBeAdded(\"virtualupdated\");\n+\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n+\n+        // 5. update virtual attribute\n+        actual = userService.update(actual.getId(), userMod);\n+        assertNotNull(actual);\n+\n+        // 6. check for virtual attribute value\n+        actual = userService.read(actual.getId());\n+        assertNotNull(actual);\n+        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+    }\n+\n+    @Test\n+    public void issueSYNCOPE397() {\n+        ResourceTO csv = resourceService.read(RESOURCE_NAME_CSV);\n+\n+        for (MappingItemTO item : csv.getUmapping().getItems()) {\n+            if (\"email\".equals(item.getIntAttrName())) {\n+                // unset internal attribute mail and set virtual attribute virtualdata as mapped to external email\n+                item.setIntMappingType(IntMappingType.UserVirtualSchema);\n+                item.setIntAttrName(\"virtualdata\");\n+                item.setPurpose(MappingPurpose.BOTH);\n+                item.setExtAttrName(\"email\");\n+            }\n+        }\n+\n+        resourceService.update(csv.getName(), csv);\n+        csv = resourceService.read(RESOURCE_NAME_CSV);\n+        assertNotNull(csv.getUmapping());\n+\n+        boolean found = false;\n+        for (MappingItemTO item : csv.getUmapping().getItems()) {\n+            if (\"email\".equals(item.getExtAttrName()) && \"virtualdata\".equals(item.getIntAttrName())) {\n+                found = true;\n+            }\n+        }\n+\n+        assertTrue(found);\n+\n+        // create a new user\n+        UserTO userTO = getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n+        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n+        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"test@testone.org\"));\n+        // assign resource-csv to user\n+        userTO.addResource(RESOURCE_NAME_CSV);\n+        // save user\n+        UserTO created = createUser(userTO);\n+        // make std controls about user\n+        assertNotNull(created);\n+        assertTrue(RESOURCE_NAME_CSV.equals(created.getResources().iterator().next()));\n+        // update user\n+        UserTO toBeUpdated = userService.read(created.getId());\n+        UserMod userMod = new UserMod();\n+        userMod.setId(toBeUpdated.getId());\n+        userMod.setPassword(\"password2\");\n+        // assign new resource to user\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_WS2);\n+        //modify virtual attribute\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n+\n+        // check Syncope change password\n+        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n+        pwdPropRequest.setOnSyncope(true);\n+        pwdPropRequest.addResource(RESOURCE_NAME_WS2);\n+        userMod.setPwdPropRequest(pwdPropRequest);\n+\n+        toBeUpdated = userService.update(userMod.getId(), userMod);\n+        assertNotNull(toBeUpdated);\n+        assertEquals(\"test@testoneone.com\", toBeUpdated.getVirtualAttributes().get(0).getValues().get(0));\n+        // check if propagates correctly with assertEquals on size of tasks list\n+        assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n+    }\n+\n+    @Test\n+    public void issueSYNCOPE442() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope442@apache.org\");\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO virAttrTO = new AttributeTO();\n+        virAttrTO.setSchema(\"virtualdata\");\n+        virAttrTO.addValue(\"virattrcache\");\n+        userTO.addVirtualAttribute(virAttrTO);\n+\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.addResource(RESOURCE_NAME_DBVIRATTR);\n+\n+        // 1. create user\n+        UserTO actual = createUser(userTO);\n+        assertNotNull(actual);\n+\n+        // 2. check for virtual attribute value\n+        actual = userService.read(actual.getId());\n+        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // ----------------------------------------\n+        // 3. force cache expiring without any modification\n+        // ----------------------------------------\n+        String jdbcURL = null;\n+        ConnInstanceTO connInstanceBean = connectorService.readByResource(RESOURCE_NAME_DBVIRATTR);\n+        for (ConnConfProperty prop : connInstanceBean.getConfiguration()) {\n+            if (\"jdbcUrlTemplate\".equals(prop.getSchema().getName())) {\n+                jdbcURL = prop.getValues().iterator().next().toString();\n+                prop.setValues(Collections.singletonList(\"jdbc:h2:tcp://localhost:9092/xxx\"));\n+            }\n+        }\n+\n+        connectorService.update(connInstanceBean.getId(), connInstanceBean);\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        AttributeMod virtualdata = new AttributeMod();\n+        virtualdata.setSchema(\"virtualdata\");\n+        virtualdata.addValueToBeAdded(\"virtualupdated\");\n+\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n+\n+        actual = userService.update(actual.getId(), userMod);\n+        assertNotNull(actual);\n+        // ----------------------------------------\n+\n+        // ----------------------------------------\n+        // 4. update virtual attribute\n+        // ----------------------------------------\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+\n+        String value = jdbcTemplate.queryForObject(\n+                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getId());\n+        assertEquals(\"virattrcache\", value);\n+\n+        jdbcTemplate.update(\"UPDATE testsync set USERNAME='virattrcache2' WHERE ID=?\", actual.getId());\n+\n+        value = jdbcTemplate.queryForObject(\n+                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getId());\n+        assertEquals(\"virattrcache2\", value);\n+        // ----------------------------------------\n+\n+        actual = userService.read(actual.getId());\n+        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // ----------------------------------------\n+        // 5. restore connector\n+        // ----------------------------------------\n+        for (ConnConfProperty prop : connInstanceBean.getConfiguration()) {\n+            if (\"jdbcUrlTemplate\".equals(prop.getSchema().getName())) {\n+                prop.setValues(Collections.singletonList(jdbcURL));\n+            }\n+        }\n+\n+        connectorService.update(connInstanceBean.getId(), connInstanceBean);\n+        // ----------------------------------------\n+\n+        actual = userService.read(actual.getId());\n+        assertEquals(\"virattrcache2\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+    }\n+\n+    @Test\n+    public void issueSYNCOPE436() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"readOnly\"));\n+        userTO = createUser(userTO);\n+        //Finding no values because the virtual attribute is readonly \n+        assertTrue(userTO.getVirtualAttributeMap().get(\"virtualReadOnly\").getValues().isEmpty());\n+    }\n+}"}]}