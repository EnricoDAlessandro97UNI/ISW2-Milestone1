{"sha":"81df5c249b44ec9d80021cd9119c1bc584b43adf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxZGY1YzI0OWI0NGVjOWQ4MDAyMWNkOTExOWMxYmM1ODRiNDNhZGY=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-08T11:03:38Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-08T11:03:38Z"},"message":"SYNCOPE-231 Small refactoring of UserService and test\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1443934 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"26d8840d73d91e463e36fa99e7839143410d3008","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/26d8840d73d91e463e36fa99e7839143410d3008"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/81df5c249b44ec9d80021cd9119c1bc584b43adf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81df5c249b44ec9d80021cd9119c1bc584b43adf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/81df5c249b44ec9d80021cd9119c1bc584b43adf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81df5c249b44ec9d80021cd9119c1bc584b43adf/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"985f9397d6c54a82858de93165f2dbbce1a22587","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/985f9397d6c54a82858de93165f2dbbce1a22587","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/985f9397d6c54a82858de93165f2dbbce1a22587"}],"stats":{"total":135,"additions":69,"deletions":66},"files":[{"sha":"2e7b0bc5b7b58ccf7bbbececd377cb1b5ee76fc4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81df5c249b44ec9d80021cd9119c1bc584b43adf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81df5c249b44ec9d80021cd9119c1bc584b43adf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=81df5c249b44ec9d80021cd9119c1bc584b43adf","patch":"@@ -670,13 +670,7 @@ protected UserTO setStatus(final SyncopeUser user, final String token,\n \n         WorkflowResult<Long> updated;\n         if (propagationRequestTO == null || propagationRequestTO.isOnSyncope()) {\n-            if (\"suspend\".equals(task)) {\n-                updated = uwfAdapter.suspend(user.getId());\n-            } else if (\"reactivate\".equals(task)) {\n-                updated = uwfAdapter.reactivate(user.getId());\n-            } else {\n-                updated = uwfAdapter.activate(user.getId(), token);\n-            }\n+            updated = setStatusOnWfAdapter(user, token, task);\n         } else {\n             updated = new WorkflowResult<Long>(user.getId(), null, task);\n         }\n@@ -702,6 +696,19 @@ protected UserTO setStatus(final SyncopeUser user, final String token,\n         return savedTO;\n     }\n \n+\tprivate WorkflowResult<Long> setStatusOnWfAdapter(\n+\t\t\tfinal SyncopeUser user, final String token, final String task) {\n+\t\tWorkflowResult<Long> updated;\n+\t\tif (\"suspend\".equals(task)) {\n+\t\t    updated = uwfAdapter.suspend(user.getId());\n+\t\t} else if (\"reactivate\".equals(task)) {\n+\t\t    updated = uwfAdapter.reactivate(user.getId());\n+\t\t} else {\n+\t\t    updated = uwfAdapter.activate(user.getId(), token);\n+\t\t}\n+\t\treturn updated;\n+\t}\n+\n     protected UserTO doDelete(final Long userId)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n "},{"sha":"9c92058b265f6b5d71fad1343df30f16a625cc4f","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":55,"deletions":59,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81df5c249b44ec9d80021cd9119c1bc584b43adf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81df5c249b44ec9d80021cd9119c1bc584b43adf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=81df5c249b44ec9d80021cd9119c1bc584b43adf","patch":"@@ -78,7 +78,10 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserTestITCase extends AbstractTest {\n \n-    private ConnObjectTO readUserConnObj(final String resourceName, final String userId) {\n+    private static final String RESOURCE_NAME_LDAP = \"resource-ldap\";\n+\tprivate static final String RESOURCE_NAME_TESTDB = \"resource-testdb\";\n+\n+\tprivate ConnObjectTO readUserConnObj(final String resourceName, final String userId) {\n         return resourceService.getConnector(resourceName, AttributableType.USER, userId);\n     }\n \n@@ -334,7 +337,7 @@ public void issue147() {\n     @Test\n     public void createUserWithDbPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"yyy@yyy.yyy\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n@@ -595,7 +598,7 @@ public void createWithApproval() {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n         UserTO userTO = getUniqueSampleTO(\"createWithApproval@syncope.apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n@@ -608,7 +611,7 @@ public void createWithApproval() {\n         assertEquals(1, userTO.getMemberships().size());\n         assertEquals(9, userTO.getMemberships().get(0).getRoleId());\n         assertEquals(\"createApproval\", userTO.getStatus());\n-        assertEquals(Collections.singleton(\"resource-testdb\"), userTO.getResources());\n+        assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());\n \n         assertTrue(userTO.getPropagationStatusTOs().isEmpty());\n \n@@ -643,7 +646,7 @@ public void createWithApproval() {\n         userTO = userService.submitForm(form);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n-        assertEquals(Collections.singleton(\"resource-testdb\"), userTO.getResources());\n+        assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());\n \n         exception = null;\n         try {\n@@ -675,7 +678,7 @@ public void delete() {\n         UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n \n         // specify a propagation\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n \n@@ -703,7 +706,7 @@ public void deleteByUsername() {\n         UserTO userTO = getSampleTO(\"delete.by.username@apache.org\");\n \n         // specify a propagation\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n \n@@ -1107,70 +1110,63 @@ public void suspendReactivateByUsername() {\n \n     @Test\n     public void suspendReactivateOnResource() {\n-        UserTO userTO = getUniqueSampleTO(\"suspreactonresource@syncope.apache.org\");\n-\n-        userTO.getMemberships().clear();\n-        userTO.getResources().clear();\n-\n-        ResourceTO dbTable = resourceService.read(\"resource-testdb\");\n-\n+    \t// Assert resources are present\n+        ResourceTO dbTable = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(dbTable);\n-        userTO.addResource(dbTable.getName());\n-\n-        ResourceTO ldap = resourceService.read(\"resource-ldap\");\n-\n+        ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n         assertNotNull(ldap);\n-        userTO.addResource(ldap.getName());\n \n+        // Create user with reference to resources\n+        UserTO userTO = getUniqueSampleTO(\"suspreactonresource@syncope.apache.org\");\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n+        userTO.addResource(RESOURCE_NAME_LDAP);\n         userTO = createUser(userTO);\n-\n         assertNotNull(userTO);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n                 ? \"active\"\n                 : \"created\", userTO.getStatus());\n+        String userName = userTO.getUsername();\n+        long userId = userTO.getId();\n \n+        // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources \n         PropagationRequestTO propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.addResource(dbTable.getName());\n-        propagationRequestTO.addResource(ldap.getName());\n-        userTO = userService.suspend(userTO.getId(), propagationRequestTO);\n-\n+        propagationRequestTO.addResource(RESOURCE_NAME_TESTDB);\n+        propagationRequestTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO = userService.suspend(userId, propagationRequestTO);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        String dbTableUID = userTO.getUsername();\n-        assertNotNull(dbTableUID);\n-\n-        ConnObjectTO connObjectTO = readUserConnObj(dbTable.getName(), dbTableUID);\n+        ConnObjectTO connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n-        String ldapUID = userTO.getUsername();\n-        assertNotNull(ldapUID);\n-\n-        connObjectTO = readUserConnObj(ldap.getName(), ldapUID);\n+        connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userName);\n         assertNotNull(connObjectTO);\n \n+        // Suspend and reactivate only on ldap => db and syncope should still show suspended\n         propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(false);\n-        propagationRequestTO.addResource(ldap.getName());\n-        userTO = userService.suspend(userTO.getId(), propagationRequestTO);\n-\n-        userTO = userService.reactivate(userTO.getId(), propagationRequestTO);\n+        propagationRequestTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO = userService.suspend(userId, propagationRequestTO);\n+        userTO = userService.reactivate(userId, propagationRequestTO);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(dbTable.getName(), dbTableUID);\n+        connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n+        // Reactivate on syncope and db => syncope and db should show the user as active\n         propagationRequestTO = new PropagationRequestTO();\n         propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.addResource(dbTable.getName());\n+        propagationRequestTO.addResource(RESOURCE_NAME_TESTDB);\n \n-        userTO = userService.reactivate(userTO.getId(), propagationRequestTO);\n+        userTO = userService.reactivate(userId, propagationRequestTO);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readUserConnObj(dbTable.getName(), dbTableUID);\n+        connObjectTO = readUserConnObj(RESOURCE_NAME_TESTDB, userName);\n         assertTrue(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n     }\n \n@@ -1206,7 +1202,7 @@ public void updateMultivalueAttribute() {\n     @Test(expected = EmptyResultDataAccessException.class)\n     public void issue213() {\n         UserTO userTO = getUniqueSampleTO(\"issue213@syncope.apache.org\");\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -1222,7 +1218,7 @@ public void issue213() {\n         UserMod userMod = new UserMod();\n \n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeRemoved(\"resource-testdb\");\n+        userMod.addResourceToBeRemoved(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -1234,7 +1230,7 @@ public void issue213() {\n     @Test\n     public void issue234() {\n         UserTO inUserTO = getUniqueSampleTO(\"issue234@syncope.apache.org\");\n-        inUserTO.addResource(\"resource-ldap\");\n+        inUserTO.addResource(RESOURCE_NAME_LDAP);\n \n         UserTO userTO = createUser(inUserTO);\n         assertNotNull(userTO);\n@@ -1297,7 +1293,7 @@ public final void issue280() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"123password\");\n-        userMod.addResourceToBeAdded(\"resource-testdb\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1311,7 +1307,7 @@ public final void issue280() {\n         final String resource = propagations.get(0).getResource();\n \n         assertNotNull(status);\n-        assertEquals(\"resource-testdb\", resource);\n+        assertEquals(RESOURCE_NAME_TESTDB, resource);\n         assertTrue(status.isSuccessful());\n     }\n \n@@ -1544,13 +1540,13 @@ public void issueSYNCOPE111() {\n         memb13.setRoleId(13L);\n         userTO.addMembership(memb13);\n \n-        userTO.addResource(\"resource-ldap\");\n+        userTO.addResource(RESOURCE_NAME_LDAP);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n \n-        ConnObjectTO connObjectTO = readUserConnObj(\"resource-ldap\", userTO.getUsername());\n+        ConnObjectTO connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n         assertNotNull(connObjectTO);\n \n         AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1579,7 +1575,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readUserConnObj(\"resource-ldap\", userTO.getUsername());\n+        connObjectTO = readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1598,20 +1594,20 @@ public void issueSYNCOPE185() {\n         // 1. create user with LDAP resource, succesfully propagated\n         UserTO userTO = getSampleTO(\"syncope185@syncope.apache.org\");\n         userTO.getVirtualAttributes().clear();\n-        userTO.addResource(\"resource-ldap\");\n+        userTO.addResource(RESOURCE_NAME_LDAP);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertEquals(\"resource-ldap\", userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertEquals(RESOURCE_NAME_LDAP, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         // 2. delete this user\n         userService.delete(userTO.getId());\n \n         // 3. try (and fail) to find this user on the external LDAP resource\n         try {\n-            readUserConnObj(\"resource-ldap\", userTO.getUsername());\n+            readUserConnObj(RESOURCE_NAME_LDAP, userTO.getUsername());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             SyncopeClientException sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n@@ -1821,7 +1817,7 @@ public void issueSYNCOPE122() {\n         // 1. create user on testdb and testdb2\n         UserTO userTO = getUniqueSampleTO(\"syncope123@apache.org\");\n         userTO.getResources().clear();\n-        userTO.addResource(\"resource-testdb\");\n+        userTO.addResource(RESOURCE_NAME_TESTDB);\n         userTO.addResource(\"resource-testdb2\");\n         try {\n             userTO = createUser(userTO);\n@@ -1833,13 +1829,13 @@ public void issueSYNCOPE122() {\n             return;\n         }\n         assertNotNull(userTO);\n-        assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n+        assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n         assertTrue(userTO.getResources().contains(\"resource-testdb2\"));\n \n         final String pwdOnSyncope = userTO.getPassword();\n \n         ConnObjectTO userOnDb =\n-                resourceService.getConnector(\"resource-testdb\", AttributableType.USER, userTO.getUsername());\n+                resourceService.getConnector(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getUsername());\n         final AttributeTO pwdOnTestDbAttr = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n@@ -1859,21 +1855,21 @@ public void issueSYNCOPE122() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(getUUIDString());\n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.addResource(\"resource-testdb\");\n+        pwdPropRequest.addResource(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n         // 3a. Chech that only a single propagation took place\n         assertNotNull(userTO.getPropagationStatusTOs());\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertEquals(\"resource-testdb\", userTO.getPropagationStatusTOs().iterator().next().getResource());\n+        assertEquals(RESOURCE_NAME_TESTDB, userTO.getPropagationStatusTOs().iterator().next().getResource());\n \n         // 3b. verify that password hasn't changed on Syncope\n         assertEquals(pwdOnSyncope, userTO.getPassword());\n \n         // 3c. verify that password *has* changed on testdb\n-        userOnDb = resourceService.getConnector(\"resource-testdb\", AttributableType.USER, userTO.getUsername());\n+        userOnDb = resourceService.getConnector(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getUsername());\n         final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n@@ -1944,7 +1940,7 @@ public void isseSYNCOPE136Random() {\n         // 2. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.addResourceToBeAdded(\"resource-ldap\");\n+        userMod.addResourceToBeAdded(RESOURCE_NAME_LDAP);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1955,7 +1951,7 @@ public void isseSYNCOPE136Random() {\n         assertEquals(1, props.size());\n         PropagationStatusTO prop = props.iterator().next();\n         assertNotNull(prop);\n-        assertEquals(\"resource-ldap\", prop.getResource());\n+        assertEquals(RESOURCE_NAME_LDAP, prop.getResource());\n         assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n     }\n "}]}