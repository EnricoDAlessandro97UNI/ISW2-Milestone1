{"sha":"769f1b24630581abd2c1b79ddd4209be1c89bf41","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc2OWYxYjI0NjMwNTgxYWJkMmMxYjc5ZGRkNDIwOWJlMWM4OWJmNDE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2020-03-15T16:24:42Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2020-03-15T17:17:20Z"},"message":"[SYNCOPE-1548] Better management","tree":{"sha":"073f27bc7c7169058100a3c2d2c237ee7e938261","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/073f27bc7c7169058100a3c2d2c237ee7e938261"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/769f1b24630581abd2c1b79ddd4209be1c89bf41","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/769f1b24630581abd2c1b79ddd4209be1c89bf41","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/769f1b24630581abd2c1b79ddd4209be1c89bf41","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/769f1b24630581abd2c1b79ddd4209be1c89bf41/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"65fbd6f2f18ef9bb783469247682f411405fdc7d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65fbd6f2f18ef9bb783469247682f411405fdc7d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65fbd6f2f18ef9bb783469247682f411405fdc7d"}],"stats":{"total":41,"additions":25,"deletions":16},"files":[{"sha":"668a89b1f6528cbff7ad77404b2050ea8e55c7b2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractGroups.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java?ref=769f1b24630581abd2c1b79ddd4209be1c89bf41","patch":"@@ -35,7 +35,11 @@ public abstract class AbstractGroups extends WizardStep implements ICondition {\n \n     protected final AnyTO anyTO;\n \n-    protected final WebMarkupContainer groupsContainer;\n+    protected WebMarkupContainer dyngroupsContainer;\n+\n+    protected WebMarkupContainer dynrealmsContainer;\n+\n+    protected WebMarkupContainer groupsContainer;\n \n     public <T extends AnyTO> AbstractGroups(final AnyWrapper<T> modelObject) {\n         super();\n@@ -65,6 +69,10 @@ public <T extends AnyTO> AbstractGroups(final AnyWrapper<T> modelObject) {\n \n     protected abstract void addGroupsPanel();\n \n+    protected abstract void addDynamicRealmsContainer();\n+\n+    protected abstract void addDynamicGroupsContainer();\n+\n     @Override\n     public boolean evaluate() {\n         return true;"},{"sha":"3dc6b773cc41a892dcbfc460a1fc78e28050f20c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=769f1b24630581abd2c1b79ddd4209be1c89bf41","patch":"@@ -58,17 +58,13 @@ public class Groups extends AbstractGroups {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final ConsoleGroupsModel groupsModel;\n-\n     private final List<DynRealmTO> allDynRealms = new ArrayList<>();\n \n     private final boolean templateMode;\n \n-    protected WebMarkupContainer dyngroupsContainer;\n+    protected final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    protected WebMarkupContainer dynrealmsContainer;\n+    protected final ConsoleGroupsModel groupsModel;\n \n     public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n         super(modelObject);\n@@ -84,13 +80,12 @@ public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean t\n         // -----------------------------------------------------------------\n \n         addDynamicGroupsContainer();\n-\n         addGroupsPanel();\n-\n         addDynamicRealmsContainer();\n     }\n \n-    private void addDynamicRealmsContainer() {\n+    @Override\n+    protected void addDynamicRealmsContainer() {\n         dynrealmsContainer = new WebMarkupContainer(\"dynrealmsContainer\");\n         dynrealmsContainer.setOutputMarkupId(true);\n         dynrealmsContainer.setOutputMarkupPlaceholderTag(true);\n@@ -180,7 +175,8 @@ public List<String> getObject() {\n         }\n     }\n \n-    private void addDynamicGroupsContainer() {\n+    @Override\n+    protected void addDynamicGroupsContainer() {\n         dyngroupsContainer = new WebMarkupContainer(\"dyngroupsContainer\");\n         dyngroupsContainer.setOutputMarkupId(true);\n         dyngroupsContainer.setOutputMarkupPlaceholderTag(true);"},{"sha":"7ce21c7d60908f015e1076b32b5d0607007ef59f","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/Groups.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/769f1b24630581abd2c1b79ddd4209be1c89bf41/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java?ref=769f1b24630581abd2c1b79ddd4209be1c89bf41","patch":"@@ -40,20 +40,17 @@ public class Groups extends AbstractGroups {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final AnyTO anyTO;\n-\n     private final EnduserGroupsModel groupsModel;\n \n     public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n         super(modelObject);\n-        this.anyTO = modelObject.getInnerObject();\n         this.groupsModel = new EnduserGroupsModel();\n \n         setOutputMarkupId(true);\n \n+        addDynamicGroupsContainer();\n         addGroupsPanel();\n+        addDynamicRealmsContainer();\n     }\n \n     @Override\n@@ -117,6 +114,14 @@ public List<MembershipTO> execute(final String filter) {\n         }\n     }\n \n+    @Override\n+    protected void addDynamicRealmsContainer() {\n+    }\n+\n+    @Override\n+    protected void addDynamicGroupsContainer() {\n+    }\n+\n     protected class EnduserGroupsModel extends AbstractGroupsModel {\n \n         private static final long serialVersionUID = -4541954630939063927L;"}]}