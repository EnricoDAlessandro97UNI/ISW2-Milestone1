{"sha":"538761562e922794bcb674028c2a01ff19469d5a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUzODc2MTU2MmU5MjI3OTRiY2I2NzQwMjhjMmEwMWZmMTk0NjlkNWE=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-23T14:27:19Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-23T14:27:33Z"},"message":"Fixed SYNCOPE-727","tree":{"sha":"e470a00e2905c2ebd36cdf4f625738f0906b07d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e470a00e2905c2ebd36cdf4f625738f0906b07d6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/538761562e922794bcb674028c2a01ff19469d5a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/538761562e922794bcb674028c2a01ff19469d5a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/538761562e922794bcb674028c2a01ff19469d5a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/538761562e922794bcb674028c2a01ff19469d5a/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"6b2e6f3d59b7507ba2a1e0bc89045432cadb1936","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b2e6f3d59b7507ba2a1e0bc89045432cadb1936","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6b2e6f3d59b7507ba2a1e0bc89045432cadb1936"}],"stats":{"total":141,"additions":124,"deletions":17},"files":[{"sha":"2bf0ded47460e7874db781e0493eee0174c36739","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallConfigFileTemplate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/538761562e922794bcb674028c2a01ff19469d5a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/538761562e922794bcb674028c2a01ff19469d5a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallConfigFileTemplate.java?ref=538761562e922794bcb674028c2a01ff19469d5a","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.cli.commands.install;\n \n import java.util.ResourceBundle;\n-import org.apache.syncope.client.cli.util.FileSystemUtils;\n+import org.apache.commons.lang3.SystemUtils;\n \n public final class InstallConfigFileTemplate {\n \n@@ -49,7 +49,7 @@ public static String cliPropertiesFile(\n     }\n \n     public static String dirPath() {\n-        if (FileSystemUtils.isWindows()) {\n+        if (SystemUtils.IS_OS_WINDOWS) {\n             return CONF.getString(\"cli.installation.directory.windows\");\n         } else {\n             return CONF.getString(\"cli.installation.directory.linux\");\n@@ -61,7 +61,7 @@ public static String configurationFilePath() {\n     }\n \n     private static String scriptFileName() {\n-        if (FileSystemUtils.isWindows()) {\n+        if (SystemUtils.IS_OS_WINDOWS) {\n             return CONF.getString(\"script.file.name.windows\");\n         } else {\n             return CONF.getString(\"script.file.name.linux\");"},{"sha":"5c8eb6802b609d06597e74325c606a9f03621670","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/FileSystemUtils.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/538761562e922794bcb674028c2a01ff19469d5a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/538761562e922794bcb674028c2a01ff19469d5a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java?ref=538761562e922794bcb674028c2a01ff19469d5a","patch":"@@ -42,10 +42,6 @@ public static boolean exists(final String path) {\n         return installationDirectory.exists();\n     }\n \n-    public static boolean isWindows() {\n-        return (System.getProperty(\"os.name\").toLowerCase().contains(\"win\"));\n-    }\n-\n     private FileSystemUtils() {\n \n     }"},{"sha":"9fcd0188e2d19114b18e3fd62395c68f03822876","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/CLIITCase.java","status":"modified","additions":88,"deletions":10,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/538761562e922794bcb674028c2a01ff19469d5a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/538761562e922794bcb674028c2a01ff19469d5a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java?ref=538761562e922794bcb674028c2a01ff19469d5a","patch":"@@ -32,6 +32,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SystemUtils;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.junit.BeforeClass;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -111,12 +112,14 @@ public void entitlementCount() {\n             int entitlements = CollectionUtils.countMatches(IOUtils.readLines(process.getInputStream()),\n                     new Predicate<String>() {\n \n-                @Override\n-                public boolean evaluate(final String line) {\n-                    return line.startsWith(\"-\");\n-                }\n-            });\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\"-\");\n+                        }\n+                    });\n             assertEquals(syncopeService.info().getEntitlements().size(), entitlements);\n+\n+            process.destroy();\n         } catch (IOException e) {\n             fail(e.getMessage());\n         }\n@@ -131,12 +134,87 @@ public void connectorCount() {\n             int bundles = CollectionUtils.countMatches(IOUtils.readLines(process.getInputStream()),\n                     new Predicate<String>() {\n \n-                @Override\n-                public boolean evaluate(final String line) {\n-                    return line.startsWith(\" > BUNDLE NAME:\");\n-                }\n-            });\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\" > BUNDLE NAME:\");\n+                        }\n+                    });\n             assertEquals(connectorService.getBundles(null).size(), bundles);\n+\n+            process.destroy();\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void userRead() {\n+        final long userId = 1;\n+        try {\n+            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(userId)));\n+            final Process process = PROCESS_BUILDER.start();\n+            final String result = IOUtils.toString(process.getInputStream());\n+            assertTrue(result.contains(\"username: \" + userService.read(userId).getUsername()));\n+            process.destroy();\n+\n+            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(\"1\"), String.valueOf(\"2\"),\n+                    String.valueOf(\"3\"), String.valueOf(\"4\"), String.valueOf(\"5\")));\n+            final Process process2 = PROCESS_BUILDER.start();\n+            int users = CollectionUtils.countMatches(IOUtils.readLines(process2.getInputStream()),\n+                    new Predicate<String>() {\n+\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\" > USER ID:\");\n+                        }\n+                    });\n+            assertEquals(userService.list(new AnyListQuery()).getResult().size(), users);\n+\n+            process2.destroy();\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void roleRead() {\n+        final String roleId = \"Search for realm evenTwo\";\n+        try {\n+            PROCESS_BUILDER.command(getCommand(\"role\", \"--read\", roleId));\n+            final Process process = PROCESS_BUILDER.start();\n+            final String result = IOUtils.toString(process.getInputStream());\n+            assertTrue(result.contains(roleService.read(roleId).getEntitlements().iterator().next()));\n+\n+            process.destroy();\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void reportNotExists() {\n+        try {\n+            PROCESS_BUILDER.command(getCommand(\"report\", \"--read\", \"2\"));\n+            final Process process = PROCESS_BUILDER.start();\n+            final String result = IOUtils.toString(process.getInputStream());\n+            assertTrue(result.contains(\"- Report 2 doesn't exist\"));\n+\n+            process.destroy();\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void policyError() {\n+        try {\n+            PROCESS_BUILDER.command(getCommand(\"policy\", \"--read\", \"wrong\"));\n+            final Process process = PROCESS_BUILDER.start();\n+            final String result = IOUtils.toString(process.getInputStream());\n+            assertTrue(result.contains(\n+                    \"- Error reading wrong. It isn't a valid policy value because it isn't a boolean value\"));\n+\n+            process.destroy();\n         } catch (IOException e) {\n             fail(e.getMessage());\n         }"},{"sha":"61b388dd2d26809f8f6b8220ee927e06b65594af","filename":"fit/core-reference/src/test/resources/log4j2.xml","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/538761562e922794bcb674028c2a01ff19469d5a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/538761562e922794bcb674028c2a01ff19469d5a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=538761562e922794bcb674028c2a01ff19469d5a","patch":"@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\" shutdownHook=\"disable\">\n+  <appenders>\n+    <console name=\"Console\" target=\"SYSTEM_OUT\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+    </console>\n+  </appenders>\n+  <loggers>\n+    <root level=\"debug\">\n+      <appenderRef ref=\"Console\" />\n+    </root>\n+  </loggers>\n+</configuration>\n\\ No newline at end of file"}]}