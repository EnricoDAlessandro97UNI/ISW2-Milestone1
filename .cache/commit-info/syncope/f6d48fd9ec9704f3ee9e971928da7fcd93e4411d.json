{"sha":"f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY2ZDQ4ZmQ5ZWM5NzA0ZjNlZTllOTcxOTI4ZGE3ZmNkOTNlNDQxMWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-05T13:33:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-05T13:33:46Z"},"message":"Merge branch 'master' into 2_0_X","tree":{"sha":"f341afa9d870227feb0bc531a7dd69ab2a23193c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f341afa9d870227feb0bc531a7dd69ab2a23193c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ed49626ca17747a97f72bfa2130ee1c3eeb60767","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed49626ca17747a97f72bfa2130ee1c3eeb60767","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ed49626ca17747a97f72bfa2130ee1c3eeb60767"},{"sha":"a90a48ad5dc9dd5667713a159e555ba1ac6b8741","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a90a48ad5dc9dd5667713a159e555ba1ac6b8741","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a90a48ad5dc9dd5667713a159e555ba1ac6b8741"}],"stats":{"total":6470,"additions":5636,"deletions":834},"files":[{"sha":"f9559519178f90a704e478e276b685c855ba51b8","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClient.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.search.OrderByClauseBuilder;\n import org.apache.syncope.common.search.RoleFiqlSearchConditionBuilder;\n import org.apache.syncope.common.search.UserFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.services.RouteService;\n import org.apache.syncope.common.services.UserSelfService;\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.types.Preference;\n@@ -265,6 +266,31 @@ public boolean isActivitiEnabledFor(final SubjectType subjectType) {\n \n         return result;\n     }\n+    \n+    /**\n+     * Checks whether Camel is enabled for users / roles, by calling <tt>RouteService</tt>'s options.\n+     *\n+     * @param subjectType user / role\n+     * @return whether Camel Provisioning is enabled for given attributable type\n+     * @see RouteService#getOptions(org.apache.syncope.common.types.SubjectType)\n+     */\n+    public boolean isCamelEnabledFor(final SubjectType subjectType) {\n+        Response options = getService(RouteService.class).getOptions(subjectType);\n+\n+        boolean result;\n+        switch (subjectType) {\n+            case ROLE:\n+                result = Boolean.valueOf(options.getHeaderString(RESTHeaders.CAMEL_ROLE_PROVISIONING_MANAGER));\n+                break;\n+\n+            case USER:\n+            default:\n+                result = Boolean.valueOf(options.getHeaderString(RESTHeaders.CAMEL_USER_PROVISIONING_MANAGER));\n+                break;\n+        }\n+\n+        return result;\n+    }\n \n     /**\n      * Fetches <tt>ETag</tt> header value from latest service run (if available)."},{"sha":"6e3090f50b1042748b1ca0d695ae11abe2f4ac74","filename":"common/src/main/java/org/apache/syncope/common/services/RouteService.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.services;\n+\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.OPTIONS;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.model.wadl.Description;\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.types.SubjectType;\n+\n+@Path(\"routes/{kind}\")\n+public interface RouteService extends JAXRSService {\n+\n+    /**\n+     * Checks whether Camel is choosed as default provisioning engine.\n+     *\n+     * @param kind user or role\n+     * @return <tt>Response</tt> contains special syncope HTTP header indicating if Camel is enabled for\n+     * users / roles provisioning\n+     * @see org.apache.syncope.common.types.RESTHeaders#CAMEL_USER_PROVISIONING_MANAGER\n+     * @see org.apache.syncope.common.types.RESTHeaders#CAMEL_ROLE_PROVISIONING_MANAGER\n+     *\n+     * @Descriptions({\n+     * @Description(target = DocTarget.RESPONSE,\n+     * value = \"Contains special syncope HTTP header indicating if Camel is the default provisioning manager\")\n+     * }) */\n+    @OPTIONS\n+    Response getOptions(@NotNull @PathParam(\"kind\") SubjectType kind);\n+\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    List<RouteTO> getRoutes(@NotNull @PathParam(\"kind\") SubjectType kind);\n+\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Path(\"{id}\")\n+    public RouteTO getRoute(@NotNull @PathParam(\"kind\") SubjectType kind, @PathParam(\"id\") Long Id);\n+\n+    @PUT\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Path(\"{id}\")\n+    void importRoute(@NotNull @PathParam(\"kind\") SubjectType kind,@PathParam(\"id\") Long id, RouteTO route);\n+\n+}"},{"sha":"da700437970336fdf1e46a8dd16fed4480e61925","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -86,4 +86,13 @@ public interface WorkflowService extends JAXRSService {\n     @PUT\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void importDefinition(@NotNull @PathParam(\"kind\") SubjectType kind, @NotNull String definition);\n+    \n+    @GET\n+    @Path(\"{id}\")\n+    @Produces({ MediaType.APPLICATION_XML })\n+    Response getRoute(@PathParam(\"id\") Long id);\n+    \n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML })\n+    Response getRoutes();\n }"},{"sha":"d9fe8330d0681f2de55ed66e70f6c85be7054414","filename":"common/src/main/java/org/apache/syncope/common/to/RouteTO.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.syncope.common.to;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"route\")\n+@XmlType\n+public class RouteTO extends AbstractBaseBean{\n+    \n+    private Long id;\n+\n+    private String name;\n+\n+    private String routeContent;\n+    \n+    public void setId(Long id){\n+        this.id = id;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getRouteContent() {\n+        return routeContent;\n+    }\n+\n+    public void setRouteContent(String routeContent) {\n+        this.routeContent = routeContent;\n+    }\n+    \n+}"},{"sha":"3e7cdc38cab0e7ec679fa1da4c9e5505fbf8237f","filename":"common/src/main/java/org/apache/syncope/common/types/RESTHeaders.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -57,6 +57,17 @@ public final class RESTHeaders {\n      * Option key stating if Activiti workflow adapter is in use for roles.\n      */\n     public static final String ACTIVITI_ROLE_ENABLED = \"Syncope.Activiti.Role.Enabled\";\n+    \n+     /**\n+     * Option key stating if Camel is the current provisioning manager engine.\n+     */\n+    public static final String CAMEL_USER_PROVISIONING_MANAGER =\"Syncope.Provisioning.Camel.User.Enabled\";\n+    \n+    /**\n+     * Option key stating if Camel is the current provisioning manager engine.\n+     */\n+    public static final String CAMEL_ROLE_PROVISIONING_MANAGER =\"Syncope.Provisioning.Camel.Role.Enabled\";\n+\n \n     /**\n      * HTTP header key for object ID assigned to an object after its creation."},{"sha":"53b03c09406a84c4623b930d4209fb0a6f3ce814","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -114,6 +114,13 @@ public boolean isActivitiEnabledFor(final SubjectType type) {\n                 : clients.values().iterator().next();\n         return client.isActivitiEnabledFor(type);\n     }\n+    \n+    public boolean isCamelEnabledFor(final SubjectType type) {\n+        SyncopeClient client = clients.isEmpty()\n+                ? clientFactory.createAnonymous()\n+                : clients.values().iterator().next();\n+        return client.isCamelEnabledFor(type);\n+    }\n \n     public <T> T getService(final Class<T> service) {\n         return getService(service, this.username, this.password);"},{"sha":"05316ddef035aa05b8008c734a2f16081edd3c33","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":133,"deletions":0,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.LoggerTO;\n import org.apache.syncope.common.to.NotificationTO;\n+import org.apache.syncope.common.to.RouteTO;\n import org.apache.syncope.common.to.SecurityQuestionTO;\n import org.apache.syncope.console.commons.AttrLayoutType;\n import org.apache.syncope.common.types.LoggerLevel;\n@@ -44,12 +45,14 @@\n import org.apache.syncope.console.pages.panels.PoliciesPanel;\n import org.apache.syncope.console.rest.LoggerRestClient;\n import org.apache.syncope.console.rest.NotificationRestClient;\n+import org.apache.syncope.console.rest.RouteRestClient;\n import org.apache.syncope.console.rest.SecurityQuestionRestClient;\n import org.apache.syncope.console.rest.WorkflowRestClient;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.console.wicket.markup.html.link.VeilPopupSettings;\n+import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -117,6 +120,9 @@ public class Configuration extends BasePage {\n \n     @SpringBean\n     private WorkflowRestClient wfRestClient;\n+    \n+    @SpringBean\n+    private RouteRestClient routeRestClient;\n \n     @SpringBean\n     private PreferenceManager prefMan;\n@@ -130,12 +136,16 @@ public class Configuration extends BasePage {\n     private final ModalWindow createSecurityQuestionWin;\n \n     private final ModalWindow editSecurityQuestionWin;\n+    \n+    private final ModalWindow editRouteWin;\n \n     private WebMarkupContainer notificationContainer;\n \n     private WebMarkupContainer securityQuestionContainer;\n \n     private int notificationPaginatorRows;\n+    \n+    private int routePaginatorRows;\n \n     public Configuration() {\n         super();\n@@ -267,6 +277,11 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n         add(new LayoutsPanel(\"selfRoleLayoutPanel\", AttrLayoutType.SELF_ROLE, feedbackPanel));\n         add(new LayoutsPanel(\"adminMembershipLayoutPanel\", AttrLayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n         add(new LayoutsPanel(\"selfMembershipLayoutPanel\", AttrLayoutType.SELF_MEMBERSHIP, feedbackPanel));\n+        \n+        //Route Management\n+        editRouteWin = new ModalWindow(\"editRouteWin\");\n+        add(editRouteWin);\n+        setupRoutes();\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n@@ -754,4 +769,122 @@ public void setLogLevel(final String name, final LoggerLevel level) {\n             ctx.updateLoggers();\n         }\n     }\n+    \n+    private void setupRoutes() {\n+\n+        routePaginatorRows = prefMan.getPaginatorRows(getRequest(), \"route.paginator.rows\");\n+\n+        final List<IColumn<RouteTO, String>> routeCols = new ArrayList<IColumn<RouteTO, String>>();\n+        routeCols.add(new PropertyColumn<RouteTO, String>(\n+                new ResourceModel(\"id\"), \"id\", \"id\"));\n+\n+        routeCols.add(new PropertyColumn<RouteTO, String>(\n+                new ResourceModel(\"name\"), \"name\", \"name\"));\n+\n+        routeCols.add(new AbstractColumn<RouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<RouteTO>> cellItem, final String componentId,\n+                    final IModel<RouteTO> model) {\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        editRouteWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new RouteModalPage(Configuration.this.getPageReference(), editRouteWin, routeRestClient.readRoute(model.getObject().getId()), false);\n+                                //throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n+                            }\n+\n+                        });\n+\n+                        editRouteWin.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, \"Routes\");\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        final AjaxFallbackDefaultDataTable<RouteTO, String> routeTable\n+                = new AjaxFallbackDefaultDataTable<RouteTO, String>(\n+                        \"routeTable\", routeCols, new RouteProvider(), routePaginatorRows);\n+\n+        WebMarkupContainer routeContainer = new WebMarkupContainer(\"routesContainer\");\n+        routeContainer.add(routeTable);\n+        routeContainer.setOutputMarkupId(true);\n+        \n+        ListItem<Object> li = new ListItem<Object>(\"routeTab\", 0);\n+        if (routeRestClient.isCamelEnabledForUsers() == false) {\n+            li.setVisible(false);\n+            routeContainer.setVisible(false);   \n+        }\n+        else{\n+            li.setVisible(true);\n+            routeContainer.setVisible(true); \n+        }\n+\n+        add(li);\n+        add(routeContainer);\n+\n+        editRouteWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editRouteWin.setInitialHeight(NOTIFICATION_WIN_HEIGHT);\n+        editRouteWin.setInitialWidth(NOTIFICATION_WIN_WIDTH);\n+    }\n+    \n+    private class RouteProvider extends SortableDataProvider<RouteTO, String> {\n+\n+        private SortableDataProviderComparator<RouteTO> comparator;\n+       \n+        public RouteProvider() {\n+            setSort(\"id\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<RouteTO>(this);   \n+        }\n+\n+        @Override\n+        public Iterator<? extends RouteTO> iterator(long first, long count) {\n+            List<RouteTO> list =  routeRestClient.readRoutes();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return routeRestClient.readRoutes().size();\n+        }\n+\n+        @Override\n+        public IModel<RouteTO> model(final RouteTO route) {\n+            return new AbstractReadOnlyModel<RouteTO>() {\n+\n+                private static final long serialVersionUID = 774694801558497248L;\n+\n+                @Override\n+                public RouteTO getObject() {\n+                    return route;\n+                }\n+            };\n+        }\n+       \n+   }\n+\n }"},{"sha":"bba8aa4c722bd71d283dd3a6560862a6a13a6a54","filename":"console/src/main/java/org/apache/syncope/console/pages/RouteModalPage.java","status":"added","additions":90,"deletions":0,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages;\n+\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.rest.RouteRestClient;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+\n+public class RouteModalPage extends BaseModalPage{\n+    \n+    @SpringBean\n+    private RouteRestClient restClient;\n+    \n+     public RouteModalPage(final PageReference pageRef, final ModalWindow window,\n+            final RouteTO routeTO, final boolean createFlag){\n+         \n+        Form routeForm = new Form(\"routeDefForm\");            \n+        \n+        final TextArea<String> routeDefArea = new TextArea<String>(\"routeContent\", new PropertyModel<String>(routeTO, \"routeContent\"));       \n+        //routeDefArea.setOutputMarkupId(true);      \n+        \n+        routeForm.add(routeDefArea);\n+        routeForm.setModel(new CompoundPropertyModel<RouteTO>(routeTO));\n+        \n+        //routeDefArea.setMarkupId(\"routeContent\");\n+\n+        AjaxButton submit =\n+                new IndicatingAjaxButton(APPLY, new Model<String>(getString(SUBMIT)), routeForm) {\n+\n+                    private static final long serialVersionUID = -958724007591692537L;\n+\n+                    @Override\n+                    protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            restClient.updateRoute(routeTO.getId(), ((RouteTO)form.getModelObject()).getRouteContent());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            \n+                            Configuration callerPage = (Configuration) pageRef.getPage();\n+                            callerPage.setModalResult(true);                            \n+                            window.close(target);\n+                        } catch (SyncopeClientException scee) {\n+                            error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n+                        }\n+                        target.add(feedbackPanel);\n+                    }\n+\n+                    @Override\n+                    protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                        target.add(feedbackPanel);\n+                    }\n+\n+                };\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                xmlRolesReader.getEntitlement(\"Routes\", \"update\"));\n+        routeForm.add(submit);\n+\n+        this.add(routeForm);\n+     }\n+}"},{"sha":"dcfb8c3bf2500e63f4bebcca7ce75944a6a2cfb6","filename":"console/src/main/java/org/apache/syncope/console/rest/RouteRestClient.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.services.RouteService;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.console.SyncopeSession;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RouteRestClient extends BaseRestClient{\n+    \n+    protected static final Logger LOG = LoggerFactory.getLogger(RouteRestClient.class);\n+    \n+    public List<RouteTO> readRoutes(){\n+        return getService(RouteService.class).getRoutes(SubjectType.USER);\n+    }\n+    \n+    public RouteTO readRoute(Long id){\n+        return getService(RouteService.class).getRoute(SubjectType.USER, id);\n+    }\n+    \n+    public void updateRoute(Long id, String definition){\n+        RouteTO routeTO = readRoute(id);        \n+        routeTO.setRouteContent(definition);     \n+        getService(RouteService.class).importRoute(SubjectType.USER, routeTO.getId(), routeTO);\n+    }\n+    \n+    public boolean isCamelEnabledForUsers() {\n+        Boolean result = null;\n+        try {\n+            result = SyncopeSession.get().isCamelEnabledFor(SubjectType.USER);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While seeking if Camel is enabled for users\", e);\n+        }\n+\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n+    }\n+    \n+}"},{"sha":"d5914f822696634005ecf18f23865e02b51cac81","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -317,4 +317,17 @@ under the License.\n       <entitlement>POLICY_UPDATE</entitlement>\n     </action>\n   </page>\n+  <page id=\"Routes\">\n+    <action id=\"list\">\n+      <entitlement>ROUTE_LIST</entitlement>\n+    </action>\n+\n+    <action id=\"read\">\n+      <entitlement>ROUTE_READ</entitlement>\n+    </action>\n+\n+    <action id=\"update\">\n+      <entitlement>ROUTE_UPDATE</entitlement>\n+    </action>\n+  </page>\n </auth>"},{"sha":"130c89a20b56f22de034b74abef23dafbf27705e","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration.html","status":"modified","additions":206,"deletions":197,"changes":403,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -17,211 +17,220 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <script type=\"text/javascript\">\n-      $(document).ready(function () {\n-        $(\"#policies\").tabs();\n-        $(\"#logs\").tabs();\n-        $(\"#layouts\").tabs();\n-      });\n-    </script>\n-  </wicket:head>\n+    <wicket:head>\n+        <script type=\"text/javascript\">\n+            $(document).ready(function () {\n+                $(\"#policies\").tabs();\n+                $(\"#logs\").tabs();\n+                $(\"#layouts\").tabs();\n+            });\n+        </script>\n+    </wicket:head>\n \n-  <wicket:extend>\n+    <wicket:extend>\n \n-    <div id=\"tabs\">\n-      <ul>\n-        <li class=\"tabs-selected\">\n-          <a href=\"#layouts\"><span><wicket:message key=\"layouts\"/></span></a>\n-        </li>\n-        <li><a href=\"#policies\"><span><wicket:message key=\"policies\"/></span></a></li>\n-        <li><a href=\"#notifications\"><span><wicket:message key=\"notifications\"/></span></a></li>\n-        <li><a href=\"#securityQuestions\"><span><wicket:message key=\"securityQuestions\"/></span></a></li>\n-        <li><a href=\"#workflow\"><span><wicket:message key=\"workflow\"/></span></a></li>\n-        <li><a href=\"#logs\"><span><wicket:message key=\"logs\"/></span></a></li>\n-      </ul>\n-      <div id=\"layouts\">\n-        <ul>\n-          <li class=\"tabs-selected\">\n-            <a href=\"#adminUser\"><span><wicket:message key=\"adminUser\"/></span></a>\n-          </li>\n-          <li><a href=\"#selfUser\"><span><wicket:message key=\"selfUser\"/></span></a></li>\n-          <li><a href=\"#adminRole\"><span><wicket:message key=\"adminRole\"/></span></a></li>\n-          <li><a href=\"#selfRole\"><span><wicket:message key=\"selfRole\"/></span></a></li>\n-          <li><a href=\"#adminMembership\"><span><wicket:message key=\"adminMembership\"/></span></a></li>\n-          <li><a href=\"#selfMembership\"><span><wicket:message key=\"selfMembership\"/></span></a></li>\n-        </ul>\n-        <div id=\"adminUser\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"adminUserLayoutPanel\">[admin user layout panel]</span>\n-        </div>\n-        <div id=\"selfUser\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"selfUserLayoutPanel\">[self user layout panel]</span>\n-        </div>\n-        <div id=\"adminRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"adminRoleLayoutPanel\">[admin role layout panel]</span>\n-        </div>\n-        <div id=\"selfRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"selfRoleLayoutPanel\">[self role layout panel]</span>\n-        </div>\n-        <div id=\"adminMembership\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"adminMembershipLayoutPanel\">[admin membership layout panel]</span>\n-        </div>\n-        <div id=\"selfMembership\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"selfMembershipLayoutPanel\">[self membership layout panel]</span>\n-        </div>\n-      </div>      \n-      <div id=\"policies\">\n-        <ul>\n-          <li class=\"tabs-selected\">\n-            <a href=\"#account\"><span><wicket:message key=\"account\"/></span></a>\n-          </li>\n-          <li><a href=\"#password\"><span><wicket:message key=\"password\"/></span></a></li>\n-          <li><a href=\"#sync\"><span><wicket:message key=\"sync\"/></span></a></li>\n-        </ul>\n-        <div id=\"account\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"accountPoliciesPanel\">[account policies]</span>\n-        </div>\n-        <div id=\"password\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"passwordPoliciesPanel\">[password policies]</span>\n-        </div>\n-        <div id=\"sync\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"syncPoliciesPanel\">[sync policies]</span>\n-        </div>\n-      </div>\n-      <div id=\"notifications\">\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"notificationContainer\">\n-            <table class=\"ui-widget ui-widget-content table-hover\"\n-                   wicket:id=\"notificationTable\"/>\n-          </span>\n+        <div id=\"tabs\">\n+            <ul>\n+                <li class=\"tabs-selected\">\n+                    <a href=\"#layouts\"><span><wicket:message key=\"layouts\"/></span></a>\n+                </li>\n+                <li><a href=\"#policies\"><span><wicket:message key=\"policies\"/></span></a></li>\n+                <li><a href=\"#notifications\"><span><wicket:message key=\"notifications\"/></span></a></li>\n+                <li><a href=\"#securityQuestions\"><span><wicket:message key=\"securityQuestions\"/></span></a></li>\n+                <li><a href=\"#workflow\"><span><wicket:message key=\"workflow\"/></span></a></li>\n+                <li wicket:id=\"routeTab\"><a href=\"#routes\"><span><wicket:message key=\"routes\"/></span></a></li>\n+                <li><a href=\"#logs\"><span><wicket:message key=\"logs\"/></span></a></li>\n+            </ul>\n+            <div id=\"layouts\">\n+                <ul>\n+                    <li class=\"tabs-selected\">\n+                        <a href=\"#adminUser\"><span><wicket:message key=\"adminUser\"/></span></a>\n+                    </li>\n+                    <li><a href=\"#selfUser\"><span><wicket:message key=\"selfUser\"/></span></a></li>\n+                    <li><a href=\"#adminRole\"><span><wicket:message key=\"adminRole\"/></span></a></li>\n+                    <li><a href=\"#selfRole\"><span><wicket:message key=\"selfRole\"/></span></a></li>\n+                    <li><a href=\"#adminMembership\"><span><wicket:message key=\"adminMembership\"/></span></a></li>\n+                    <li><a href=\"#selfMembership\"><span><wicket:message key=\"selfMembership\"/></span></a></li>\n+                </ul>\n+                <div id=\"adminUser\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"adminUserLayoutPanel\">[admin user layout panel]</span>\n+                </div>\n+                <div id=\"selfUser\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"selfUserLayoutPanel\">[self user layout panel]</span>\n+                </div>\n+                <div id=\"adminRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"adminRoleLayoutPanel\">[admin role layout panel]</span>\n+                </div>\n+                <div id=\"selfRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"selfRoleLayoutPanel\">[self role layout panel]</span>\n+                </div>\n+                <div id=\"adminMembership\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"adminMembershipLayoutPanel\">[admin membership layout panel]</span>\n+                </div>\n+                <div id=\"selfMembership\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"selfMembershipLayoutPanel\">[self membership layout panel]</span>\n+                </div>\n+            </div>      \n+            <div id=\"policies\">\n+                <ul>\n+                    <li class=\"tabs-selected\">\n+                        <a href=\"#account\"><span><wicket:message key=\"account\"/></span></a>\n+                    </li>\n+                    <li><a href=\"#password\"><span><wicket:message key=\"password\"/></span></a></li>\n+                    <li><a href=\"#sync\"><span><wicket:message key=\"sync\"/></span></a></li>\n+                </ul>\n+                <div id=\"account\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"accountPoliciesPanel\">[account policies]</span>\n+                </div>\n+                <div id=\"password\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"passwordPoliciesPanel\">[password policies]</span>\n+                </div>\n+                <div id=\"sync\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <span wicket:id=\"syncPoliciesPanel\">[sync policies]</span>\n+                </div>\n+            </div>\n+            <div id=\"notifications\">\n+                <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                    <span wicket:id=\"notificationContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"notificationTable\"/>\n+                    </span>\n \n-          <span style=\"float:right\">\n-            <form wicket:id=\"notificationPaginatorForm\" style=\"display:inline\">\n-              <label><wicket:message key=\"displayRows\"/></label>\n-              <select class=\"text ui-widget-content ui-corner-all\"\n-                      wicket:id=\"rowsChooser\"/>\n-            </form>\n-          </span>\n-        </div>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"notificationPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n \n-        <div wicket:id=\"createNotificationWin\">[Show modal window for creating notification]</div>\n-        <div wicket:id=\"editNotificationWin\">[Show modal window for editing notification]</div>\n+                <div wicket:id=\"createNotificationWin\">[Show modal window for creating notification]</div>\n+                <div wicket:id=\"editNotificationWin\">[Show modal window for editing notification]</div>\n \n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-           wicket:id=\"createNotificationLink\">\n-          <wicket:message key=\"create\"/>\n-        </a>\n-      </div>\n-      <div id=\"securityQuestions\">\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"securityQuestionContainer\">\n-            <table class=\"ui-widget ui-widget-content table-hover\"\n-                   wicket:id=\"securityQuestionTable\"/>\n-          </span>\n-        </div>\n+                <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"createNotificationLink\">\n+                    <wicket:message key=\"create\"/>\n+                </a>\n+            </div>\n+            <div id=\"securityQuestions\">\n+                <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                    <span wicket:id=\"securityQuestionContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"securityQuestionTable\"/>\n+                    </span>\n+                </div>\n \n-        <div wicket:id=\"createSecurityQuestionWin\">[Show modal window for creating security questions]</div>\n-        <div wicket:id=\"editSecurityQuestionWin\">[Show modal window for editing security questions]</div>\n+                <div wicket:id=\"createSecurityQuestionWin\">[Show modal window for creating security questions]</div>\n+                <div wicket:id=\"editSecurityQuestionWin\">[Show modal window for editing security questions]</div>\n \n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-           wicket:id=\"createSecurityQuestionLink\">\n-          <wicket:message key=\"create\"/>\n-        </a>\n-      </div>\n-      <div id=\"workflow\">\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"noActivitiEnabledForUsers\"><i><wicket:message key=\"noActivitiEnabledForUsers\"/></i></span>\n-          <span wicket:id=\"workflowDefContainer\">\n-            <div style=\"float: left;\">\n-              <button wicket:id=\"activitiModeler\" style=\"width: 122px\">\n-                <div style=\"display: table-row;\">\n-                  <div style=\"display: table-cell\">\n-                    <img src=\"img/modeler.png\" alt=\"Activiti Modeler\" title=\"Activiti Modeler\"/>\n-                  </div>\n-                  <div style=\"display: table-cell;vertical-align:middle;font-size:62.5%;\">\n-                    Activiti Modeler\n-                  </div>\n-                </div>\n-              </button>\n+                <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"createSecurityQuestionLink\">\n+                    <wicket:message key=\"create\"/>\n+                </a>\n             </div>\n-            <div>\n-              <button wicket:id=\"xmlEditor\" style=\"width: 122px\">\n-                <div style=\"display: table-row;\">\n-                  <div style=\"display: table-cell\">\n-                    <img src=\"img/xml.png\" alt=\"XML editor\" title=\"XML editor\"/>\n-                  </div>\n-                  <div style=\"display: table-cell;vertical-align:middle;font-size:62.5%;\">                  \n-                    XML editor\n-                  </div>\n-                </div>\n-              </button>\n+            <div id=\"workflow\">\n+                <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                    <span wicket:id=\"noActivitiEnabledForUsers\"><i><wicket:message key=\"noActivitiEnabledForUsers\"/></i></span>\n+                    <span wicket:id=\"workflowDefContainer\">\n+                        <div style=\"float: left;\">\n+                            <button wicket:id=\"activitiModeler\" style=\"width: 122px\">\n+                                <div style=\"display: table-row;\">\n+                                    <div style=\"display: table-cell\">\n+                                        <img src=\"img/modeler.png\" alt=\"Activiti Modeler\" title=\"Activiti Modeler\"/>\n+                                    </div>\n+                                    <div style=\"display: table-cell;vertical-align:middle;font-size:62.5%;\">\n+                                        Activiti Modeler\n+                                    </div>\n+                                </div>\n+                            </button>\n+                        </div>\n+                        <div>\n+                            <button wicket:id=\"xmlEditor\" style=\"width: 122px\">\n+                                <div style=\"display: table-row;\">\n+                                    <div style=\"display: table-cell\">\n+                                        <img src=\"img/xml.png\" alt=\"XML editor\" title=\"XML editor\"/>\n+                                    </div>\n+                                    <div style=\"display: table-cell;vertical-align:middle;font-size:62.5%;\">                  \n+                                        XML editor\n+                                    </div>\n+                                </div>\n+                            </button>\n+                        </div>\n+                        <img wicket:id=\"workflowDefDiagram\" style=\"width: 100%;\"/>\n+                    </span>\n+                </div>\n             </div>\n-            <img wicket:id=\"workflowDefDiagram\" style=\"width: 100%;\"/>\n-          </span>\n-        </div>\n-      </div>\n-      <div id=\"logs\">\n-        <ul>\n-          <li class=\"tabs-selected\">\n-            <a href=\"#core\"><span>Core</span></a>\n-          </li>\n-          <li><a href=\"#console\"><span>Console</span></a></li>\n-        </ul>\n-        <div id=\"core\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-            <span wicket:id=\"coreLoggerContainer\">\n-              <table class=\"ui-widget ui-widget-content table-hover\">\n-                <thead class=\"ui-widget-header\">\n-                  <tr class=\"heaaders\">\n-                    <th><wicket:message key=\"logger\"/></th>\n-                    <th><wicket:message key=\"level\"/></th>\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  <tr wicket:id=\"corelogger\">\n-                    <td><span wicket:id=\"name\"/></td>\n-                    <td id=\"level\"><select wicket:id=\"level\"/></td>\n-                  </tr>\n-                </tbody>\n-              </table>\n-            </span>\n-          </div>\n-        </div>\n-        <div id=\"console\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-            <span wicket:id=\"consoleLoggerContainer\">\n-              <table class=\"ui-widget ui-widget-content table-hover\">\n-                <thead class=\"ui-widget-header\">\n-                  <tr class=\"heaaders\">\n-                    <th><wicket:message key=\"logger\"/></th>\n-                    <th><wicket:message key=\"level\"/></th>\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  <tr wicket:id=\"consolelogger\">\n-                    <td><span wicket:id=\"name\"/></td>\n-                    <td id=\"level\"><select wicket:id=\"level\"/></td>\n-                  </tr>\n-                </tbody>\n-              </table>\n-            </span>\n-          </div>\n-        </div>\n-      </div>\n-      <div>\n-        <div wicket:id=\"parameters\">\n-          <a style=\"position: absolute; top: 2px; right:50px;\" wicket:id=\"confLink\">\n-            <img src=\"img/actions/settings-icon.png\" width=\"30\" height=\"30\"\n-                 alt=\"Parameters\" title=\"title\" wicket:message=\"title:parameters\"/>\n-          </a>\n-        </div>\n-        <div wicket:id=\"syncopeConfWin\">[Show modal window for conf parameters]</div>        \n+            <div id=\"routes\">\n+                <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                    <span wicket:id=\"routesContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"routeTable\"/>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"editRouteWin\">[Show modal window for editing route]</div>\n+            </div>\n+            <div id=\"logs\">\n+                <ul>\n+                    <li class=\"tabs-selected\">\n+                        <a href=\"#core\"><span>Core</span></a>\n+                    </li>\n+                    <li><a href=\"#console\"><span>Console</span></a></li>\n+                </ul>\n+                <div id=\"core\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                        <span wicket:id=\"coreLoggerContainer\">\n+                            <table class=\"ui-widget ui-widget-content table-hover\">\n+                                <thead class=\"ui-widget-header\">\n+                                    <tr class=\"heaaders\">\n+                                        <th><wicket:message key=\"logger\"/></th>\n+                                        <th><wicket:message key=\"level\"/></th>\n+                                    </tr>\n+                                </thead>\n+                                <tbody>\n+                                    <tr wicket:id=\"corelogger\">\n+                                        <td><span wicket:id=\"name\"/></td>\n+                                        <td id=\"level\"><select wicket:id=\"level\"/></td>\n+                                    </tr>\n+                                </tbody>\n+                            </table>\n+                        </span>\n+                    </div>\n+                </div>\n+                <div id=\"console\" style=\"border-width: 1px;border-top-width: 0px;\">\n+                    <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                        <span wicket:id=\"consoleLoggerContainer\">\n+                            <table class=\"ui-widget ui-widget-content table-hover\">\n+                                <thead class=\"ui-widget-header\">\n+                                    <tr class=\"heaaders\">\n+                                        <th><wicket:message key=\"logger\"/></th>\n+                                        <th><wicket:message key=\"level\"/></th>\n+                                    </tr>\n+                                </thead>\n+                                <tbody>\n+                                    <tr wicket:id=\"consolelogger\">\n+                                        <td><span wicket:id=\"name\"/></td>\n+                                        <td id=\"level\"><select wicket:id=\"level\"/></td>\n+                                    </tr>\n+                                </tbody>\n+                            </table>\n+                        </span>\n+                    </div>\n+                </div>\n+            </div>\n+            <div>\n+                <div wicket:id=\"parameters\">\n+                    <a style=\"position: absolute; top: 2px; right:50px;\" wicket:id=\"confLink\">\n+                        <img src=\"img/actions/settings-icon.png\" width=\"30\" height=\"30\"\n+                             alt=\"Parameters\" title=\"title\" wicket:message=\"title:parameters\"/>\n+                    </a>\n+                </div>\n+                <div wicket:id=\"syncopeConfWin\">[Show modal window for conf parameters]</div>        \n \n-        <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"dbExportLink\">\n-          <img src=\"img/db_export.png\" width=\"30\" height=\"30\"\n-               alt=\"DB export\" title=\"title\" wicket:message=\"title:db_export\"/>\n-        </a>\n-      </div>    \n-    </div>\n-  </wicket:extend>\n+                <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"dbExportLink\">\n+                    <img src=\"img/db_export.png\" width=\"30\" height=\"30\"\n+                         alt=\"DB export\" title=\"title\" wicket:message=\"title:db_export\"/>\n+                </a>\n+            </div>    \n+        </div>\n+    </wicket:extend>\n </html>"},{"sha":"f59b50fdb9acd5a44e381b5a17da2ab48e6e81bd","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -45,3 +45,4 @@ adminRole=Administrator Role Form\n selfRole=Self Role Form\n adminMembership=Administrator Membership Form\n selfMembership=Self Membership Form\n+routes=Routes\n\\ No newline at end of file"},{"sha":"a237c2781d76ec9b1b55a49a25a8a9cb43878277","filename":"console/src/main/resources/org/apache/syncope/console/pages/RouteModalPage.html","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.html?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,49 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {         \n+        document.getElementById(\"routeDefForm\").elements[\"routeContent\"].value = editor.getValue();\n+      }\n+    </script>\n+  </wicket:head>\n+  <wicket:extend>\n+    <form wicket:id=\"routeDefForm\" id=\"routeDefForm\">\n+      <textarea wicket:id=\"routeContent\" id=\"routeContent\" name=\"routeContent\" style=\"width: 100%; height: 350px;\">\n+      </textarea>\n+      <div style=\"margin: 10px;\">\n+        <input type=\"submit\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"apply\"\n+               onclick=\"\"/>\n+      </div>\n+    </form>\n+    <script>\n+      window.onload = function(){\n+              var editor = CodeMirror.fromTextArea(document.getElementById(\"routeContent\"),{lineNumbers: true});\n+              editor.on(\"change\", updateTextArea);\n+      }    \n+    </script>\n+  </wicket:extend>\n+</html>"},{"sha":"8ac2655d736ee145c5ae88dffcf14fa984723720","filename":"console/src/main/resources/org/apache/syncope/console/pages/RouteModalPage.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.properties?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Edit route\n+id=id"},{"sha":"44663f7e5718c0176cedb04b6334463f5efeb06b","filename":"console/src/main/resources/org/apache/syncope/console/pages/RouteModalPage_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_it.properties?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Modifica le rotte\n+id=id"},{"sha":"a6395a0fdd83e98f2c91c02e27adf6a29ae5ab64","filename":"console/src/main/resources/org/apache/syncope/console/pages/RouteModalPage_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage_pt_BR.properties?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Editar rotas\n+id=id"},{"sha":"3ba193900c3dfee837038a5b412c8ef23b1cc8dc","filename":"core/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -117,6 +117,25 @@ under the License.\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>  \n+       \n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-spring</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.xml.bind</groupId>\n+      <artifactId>jaxb-api</artifactId>\n+      <version>2.2.7</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <version>2.2.7</version>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.springframework</groupId>"},{"sha":"5f63e0df5a3fecd693614194151b9c67eafed617","filename":"core/src/main/java/org/apache/syncope/core/init/CamelRouteLoader.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.init;\n+\n+import java.io.File;\n+import java.io.StringWriter;\n+import java.net.URL;\n+import javax.sql.DataSource;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.DataAccessException;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+@Component\n+public class CamelRouteLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(CamelRouteLoader.class);\n+\n+    @Autowired\n+    private RouteDAO routeDAO;\n+\n+    @Autowired\n+    private DataSource dataSource;\n+\n+    @Transactional\n+    public void load() {\n+\n+        //if(routeDAO.findAll().isEmpty()){\n+        URL url = getClass().getResource(\"/camelRoute.xml\");\n+\n+        File file = new File(url.getPath());\n+        String query = \"INSERT INTO CamelRoute(ID, NAME, ROUTECONTENT) VALUES (?, ?, ?)\";\n+        try {\n+\n+            DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+            Document doc = dBuilder.parse(file);\n+            doc.getDocumentElement().normalize();\n+\n+            JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+\n+            NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n+            for (int s = 0; s < listOfRoutes.getLength(); s++) {\n+                //getting the route node element\n+                Node routeEl = listOfRoutes.item(s);\n+                //crate an instance of CamelRoute Entity\n+                CamelRoute route = new CamelRoute();\n+                route.setName(((Element) routeEl).getAttribute(\"id\"));\n+                route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n+\n+                jdbcTemplate.update(query, new Object[] { s + 1, ((Element) routeEl).getAttribute(\"id\"), nodeToString(\n+                    listOfRoutes.item(s)) });\n+                LOG.info(\"Route Registration Successed\");\n+            }\n+        } catch (DataAccessException e) {\n+            LOG.error(\"While trying to perform {}\", query, e);\n+        } catch (Exception e) {\n+            LOG.error(\"Route Registration failed {}\", e.getMessage());\n+        }\n+        //}\n+    }\n+\n+    private String nodeToString(Node node) {\n+        StringWriter sw = new StringWriter();\n+        try {\n+            Transformer t = TransformerFactory.newInstance().newTransformer();\n+            t.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n+            t.transform(new DOMSource(node), new StreamResult(sw));\n+        } catch (TransformerException te) {\n+            System.out.println(\"nodeToString Transformer Exception\");\n+        }\n+        return sw.toString();\n+    }\n+}"},{"sha":"30c568efb9754e23517d239deab5b814b073ab1b","filename":"core/src/main/java/org/apache/syncope/core/init/ImplementationClassNamesLoader.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -114,7 +114,6 @@ public void load() {\n                     }\n \n                     // TODO: add push correlation rules management\n-\n                     if (interfaces.contains(PropagationActions.class) && !metadata.isAbstract()) {\n                         classNames.get(Type.PROPAGATION_ACTIONS).add(metadata.getClassName());\n                     }"},{"sha":"dc99e343f8a31e381058104bc104da0b25ee4380","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -50,6 +50,9 @@ public class SpringContextInitializer implements InitializingBean {\n     @Autowired\n     private WorkflowAdapterLoader workflowAdapterLoader;\n \n+    @Autowired\n+    private CamelRouteLoader routeLoader;\n+\n     @Override\n     public void afterPropertiesSet() throws Exception {\n         workflowAdapterLoader.load();\n@@ -59,6 +62,8 @@ public void afterPropertiesSet() throws Exception {\n         loggerLoader.load();\n         classNamesLoader.load();\n \n+        routeLoader.load();\n+\n         workflowAdapterLoader.init();\n     }\n }"},{"sha":"8942cda4d5085490289fbccb5d6eb0ef9deb3fbe","filename":"core/src/main/java/org/apache/syncope/core/persistence/SQLSchemaGenerator.java","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -60,7 +60,7 @@ private static List<File> findEntityClassFiles(final String base) {\n         }\n \n         @SuppressWarnings(\"unchecked\")\n-        Iterator<File> itor = FileUtils.iterateFiles(baseDir, new String[] {\"class\"}, true);\n+        Iterator<File> itor = FileUtils.iterateFiles(baseDir, new String[] { \"class\" }, true);\n         List<File> entityClasses = new ArrayList<File>();\n         while (itor.hasNext()) {\n             entityClasses.add(itor.next());\n@@ -127,7 +127,7 @@ private static String[] getFilePaths(final List<File> files) {\n         for (int i = 0; i < files.size(); i++) {\n             File file = files.get(i);\n \n-            args[ i] = file.getAbsolutePath();\n+            args[i] = file.getAbsolutePath();\n         }\n         return args;\n     }\n@@ -140,7 +140,6 @@ private static void mappingTool(final List<File> files,\n             final String connectionProperties) {\n \n         //extendRealmClasspath();\n-\n         Options opts = new Options();\n         opts.put(OPTION_PROPERTIES_FILE, persistenceXmlFile);\n         opts.put(OPTION_CONNECTION_DRIVER_NAME, connectionDriverName);\n@@ -156,16 +155,16 @@ private static void mappingTool(final List<File> files,\n         boolean ok = Configurations.runAgainstAllAnchors(opts,\n                 new Configurations.Runnable() {\n \n-            @Override\n-            public boolean run(final Options opts) throws IOException, SQLException {\n-                JDBCConfiguration conf = new JDBCConfigurationImpl();\n-                try {\n-                    return MappingTool.run(conf, args, opts);\n-                } finally {\n-                    conf.close();\n-                }\n-            }\n-        });\n+                    @Override\n+                    public boolean run(final Options opts) throws IOException, SQLException {\n+                        JDBCConfiguration conf = new JDBCConfigurationImpl();\n+                        try {\n+                            return MappingTool.run(conf, args, opts);\n+                        } finally {\n+                            conf.close();\n+                        }\n+                    }\n+                });\n \n         if (!ok) {\n             throw new IllegalStateException(\"The OpenJPA MappingTool detected an error!\");"},{"sha":"e3e71a1db5f0582da4c87e9780c9f96ba733160b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrValue.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -195,21 +195,21 @@ public <T> T getValue() {\n         return (T) (booleanValue != null\n                 ? getBooleanValue()\n                 : dateValue != null\n-                ? getDateValue()\n-                : doubleValue != null\n-                ? getDoubleValue()\n-                : longValue != null\n-                ? getLongValue()\n-                : binaryValue != null\n-                ? getBinaryValue()\n-                : stringValue);\n+                        ? getDateValue()\n+                        : doubleValue != null\n+                                ? getDoubleValue()\n+                                : longValue != null\n+                                        ? getLongValue()\n+                                        : binaryValue != null\n+                                                ? getBinaryValue()\n+                                                : stringValue);\n     }\n \n     public String getValueAsString() {\n         final AttributeSchemaType type = getAttribute() == null || getAttribute().getSchema() == null\n                 || getAttribute().getSchema().getType() == null\n-                ? AttributeSchemaType.String\n-                : getAttribute().getSchema().getType();\n+                        ? AttributeSchemaType.String\n+                        : getAttribute().getSchema().getType();\n \n         return getValueAsString(type);\n     }\n@@ -228,22 +228,23 @@ public String getValueAsString(final AttributeSchemaType type) {\n             case Long:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getLongValue().toString()\n-                        : DataFormat.format(getLongValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getLongValue().toString()\n+                                : DataFormat.format(getLongValue(), getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Double:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getDoubleValue().toString()\n-                        : DataFormat.format(getDoubleValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getDoubleValue().toString()\n+                                : DataFormat.format(getDoubleValue(), getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Date:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? DataFormat.format(getDateValue())\n-                        : DataFormat.format(getDateValue(), false, getAttribute().getSchema().getConversionPattern());\n+                                ? DataFormat.format(getDateValue())\n+                                : DataFormat.format(getDateValue(), false, getAttribute().getSchema().\n+                                        getConversionPattern());\n                 break;\n \n             case Binary:"},{"sha":"af2727aafa3a2f0e01bb41d65b23e6b8b7f83270","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -73,7 +73,7 @@ private String[] getExcludeFields() {\n             }\n         }\n \n-        return excludeFields.toArray(new String[]{});\n+        return excludeFields.toArray(new String[] {});\n     }\n \n     @Override"},{"sha":"33fff55b3b198fa81e4c7ff69dedb9c93c4d9b93","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/CamelRoute.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Lob;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Column;\n+\n+@Entity\n+public class CamelRoute {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    private String name;\n+\n+    @Lob\n+    private String routeContent;\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getRouteContent() {\n+        return routeContent;\n+    }\n+\n+    public void setRouteContent(String routeContent) {\n+        this.routeContent = routeContent;\n+    }\n+\n+}"},{"sha":"e35eefe5510b77e55f9b9f950c4f0a8d3dff2a65","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -323,7 +323,7 @@ public Set<ConnConfProperty> getConnInstanceConfiguration() {\n         return StringUtils.isBlank(jsonConf)\n                 ? Collections.<ConnConfProperty>emptySet()\n                 : new HashSet<ConnConfProperty>(\n-                Arrays.asList(POJOHelper.deserialize(jsonConf, ConnConfProperty[].class)));\n+                        Arrays.asList(POJOHelper.deserialize(jsonConf, ConnConfProperty[].class)));\n     }\n \n     public void setConnInstanceConfiguration(final Set<ConnConfProperty> properties) {"},{"sha":"f548b0055d1bbcd0bf86f5865cc06aef60df6575","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Notification.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -85,7 +85,7 @@ public class Notification extends AbstractBaseBean {\n     @NotNull\n     @Enumerated(EnumType.STRING)\n     private TraceLevel traceLevel;\n-    \n+\n     @Column(nullable = false)\n     @Basic\n     @Min(0)\n@@ -168,7 +168,8 @@ public List<String> getStaticRecipients() {\n     }\n \n     public boolean addStaticRecipient(String staticRecipient) {\n-        return staticRecipient != null && !staticRecipients.contains(staticRecipient) && staticRecipients.add(staticRecipient);\n+        return staticRecipient != null && !staticRecipients.contains(staticRecipient) && staticRecipients.add(\n+                staticRecipient);\n     }\n \n     public boolean removeStaticRecipient(String staticRecipient) {"},{"sha":"eff48627d076bab9fa438802274f24381ca8e839","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.persistence.beans;\n-"},{"sha":"3a783b926aa7e710eb15e22db6f9f841fdc967d6","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/ConnectorRegistry.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -40,4 +40,4 @@ public interface ConnectorRegistry {\n      * @param id Spring bean id\n      */\n     void unregisterConnector(String id);\n-}\n\\ No newline at end of file\n+}"},{"sha":"aa7f4f646118f7f668d9d99ffa71562fb70b4cb0","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RouteDAO.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+\n+public interface RouteDAO {\n+\n+    CamelRoute find(Long id);\n+\n+    List<CamelRoute> findAll();\n+\n+    CamelRoute save(CamelRoute route) throws InvalidEntityException;\n+\n+    void delete(Long id);\n+}"},{"sha":"7d30a0143c06841a95fca2d89a37d799ffd514af","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RouteDAOImpl.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao.impl;\n+\n+import java.util.List;\n+import javax.persistence.TypedQuery;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Repository\n+public class RouteDAOImpl extends AbstractDAOImpl implements RouteDAO {\n+\n+    @Override\n+    public CamelRoute find(final Long id) {\n+        return entityManager.find(CamelRoute.class, id);\n+    }\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public List<CamelRoute> findAll() {\n+        TypedQuery<CamelRoute> query = entityManager.createQuery(\"SELECT e FROM \" + CamelRoute.class.getSimpleName()\n+                + \" e\", CamelRoute.class);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public CamelRoute save(final CamelRoute route) throws InvalidEntityException {\n+        return entityManager.merge(route);\n+    }\n+\n+    @Override\n+    public void delete(Long id) {\n+        CamelRoute route = find(id);\n+        if (route != null) {\n+            entityManager.remove(route);\n+        }\n+\n+    }\n+\n+}"},{"sha":"d7e172b8e5037b514c9204aca91101007a61b108","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AbstractSyncTaskValidator.class)\n @Documented"},{"sha":"9088a44d93a7ad88680c76404d7fc02807113aa1","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -60,8 +60,8 @@ public boolean isValid(final AbstractSyncTask object, final ConstraintValidatorC\n                         isAssignable = object instanceof SyncTask\n                                 ? SyncActions.class.isAssignableFrom(actionsClass)\n                                 : object instanceof PushTask\n-                                ? PushActions.class.isAssignableFrom(actionsClass)\n-                                : false;\n+                                        ? PushActions.class.isAssignableFrom(actionsClass)\n+                                        : false;\n                     } catch (Exception e) {\n                         LOG.error(\"Invalid SyncActions specified\", e);\n                         isValid = false;"},{"sha":"f0131dd1c8b3381e16c627fb5296de17adc1468b","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValidator.class)\n @Documented"},{"sha":"b5efbca832f5d3de7134e24b7198b76f8be5f871","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrValueCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValueValidator.class)\n @Documented"},{"sha":"172d44ec90d1d8e2300a2236041145cd6fcce349","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ConnInstanceCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({ElementType.TYPE})\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ConnInstanceValidator.class)\n @Documented"},{"sha":"59be7fbdae5bd7c4e04e93ea11601074c0c3bcaf","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ExternalResourceValidator.class)\n @Documented"},{"sha":"8c10eb87903c5c16b9a4b80daebbe876281f5fea","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/NotificationCheck.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = NotificationValidator.class)\n @Documented\n@@ -38,4 +38,4 @@\n     Class<?>[] groups() default {};\n \n     Class<? extends Payload>[] payload() default {};\n-}\n\\ No newline at end of file\n+}"},{"sha":"ef55fb16d070edb866239427c0d6566bd15197d1","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PolicyCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PolicyValidator.class)\n @Documented"},{"sha":"ac0a0dedcca62c0cad49a6df3ca36f20a86aa42f","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PropagationTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PropagationTaskValidator.class)\n @Documented"},{"sha":"9f00b67a8762566d7edc00a4db446224d993464d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ReportCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ReportValidator.class)\n @Documented"},{"sha":"76f012a27e9c5a55ce22229de91dad79a4554ff9","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchedTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchedTaskValidator.class)\n @Documented"},{"sha":"e092ec9b03587ac8631d173a514382611674bf62","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaValidator.class)\n @Documented"},{"sha":"65def91f199f26ed572c9378c4f44b922c8a1e02","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaNameCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaNameValidator.class)\n @Documented"},{"sha":"ae7e282a9558e30c8478553d010a9211e899b7ed","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeRoleCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({ElementType.TYPE})\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SyncopeRoleValidator.class)\n @Documented"},{"sha":"5a709b7fa8d6242c14cd63e47b81b6fdd6cd270c","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeUserCheck.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -27,8 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-\n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SyncopeUserValidator.class)\n @Documented"},{"sha":"abf7b1d94ac92423e0859465bc26d572127d29cb","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyEvaluator.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -52,7 +52,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 final PasswordPolicySpec ppSpec = policy.getSpecification(PasswordPolicySpec.class);\n                 final PasswordPolicySpec evaluatedPPSpec = new PasswordPolicySpec();\n \n-                BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[]{\"schemasNotPermitted\"});\n+                BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[] { \"schemasNotPermitted\" });\n \n                 for (String schema : ppSpec.getSchemasNotPermitted()) {\n                     AbstractAttr attribute = attributable.getAttr(schema);\n@@ -65,7 +65,6 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 }\n \n                 // Password history verification and update\n-\n                 if (!(attributable instanceof SyncopeUser)) {\n                     LOG.error(\"Cannot check previous passwords. attributable is not a user object: {}\",\n                             attributable.getClass().getName());\n@@ -83,7 +82,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 final AccountPolicySpec spec = policy.getSpecification(AccountPolicySpec.class);\n                 final AccountPolicySpec accountPolicy = new AccountPolicySpec();\n \n-                BeanUtils.copyProperties(spec, accountPolicy, new String[]{\"schemasNotPermitted\"});\n+                BeanUtils.copyProperties(spec, accountPolicy, new String[] { \"schemasNotPermitted\" });\n \n                 for (String schema : spec.getSchemasNotPermitted()) {\n                     AbstractAttr attribute = attributable.getAttr(schema);"},{"sha":"e1e0890607e29d64769de4616fc751b5189cc2b8","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyPattern.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -43,4 +43,5 @@ public class PolicyPattern {\n     public static final Pattern FIRST_NON_ALPHANUMERIC = Pattern.compile(\"\\\\W.*\");\n \n     public static final Pattern LAST_NON_ALPHANUMERIC = Pattern.compile(\".*\\\\W\");\n+\n }"},{"sha":"e8c985d0ce4bbe93fd12071eba47a575e09e3999","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationReporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -44,7 +44,7 @@ void onSuccessOrSecondaryResourceFailures(String resourceName, PropagationTaskEx\n \n     /**\n      * Report propagation status after executions in case blocking failure (e.g. on primary resources).\n-     * \n+     *\n      * @param tasks propagation tasks performed before failure\n      */\n     void onPrimaryResourceFailure(List<PropagationTask> tasks);"},{"sha":"9ccb14670c114a4cdea3176b99497009a6cf0278","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DBPasswordPropagationActions.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -46,7 +46,7 @@\n  * cipher algorithm property of the DB Connector.\n  */\n public class DBPasswordPropagationActions extends DefaultPropagationActions {\n-    \n+\n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n@@ -59,12 +59,12 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n \n         if (AttributableType.USER == task.getSubjectType()) {\n             SyncopeUser user = userDAO.find(task.getSubjectId());\n-            \n+\n             if (user != null && user.getPassword() != null) {\n                 Attribute missing = AttributeUtil.find(\n                         PropagationTaskExecutor.MANDATORY_MISSING_ATTR_NAME,\n                         task.getAttributes());\n-                \n+\n                 ConnInstance connInstance = task.getResource().getConnector();\n                 if (missing != null && missing.getValue() != null && missing.getValue().size() == 1\n                         && missing.getValue().get(0).equals(OperationalAttributes.PASSWORD_NAME)\n@@ -86,7 +86,7 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n             }\n         }\n     }\n-    \n+\n     private String getCipherAlgorithm(ConnInstance connInstance) {\n         String cipherAlgorithm = CLEARTEXT;\n         for (Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n@@ -101,21 +101,21 @@ private String getCipherAlgorithm(ConnInstance connInstance) {\n         }\n         return cipherAlgorithm;\n     }\n-    \n+\n     private boolean cipherAlgorithmMatches(String connectorAlgorithm, CipherAlgorithm userAlgorithm) {\n         if (userAlgorithm == null) {\n             return false;\n         }\n-    \n+\n         if (connectorAlgorithm.equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         // Special check for \"SHA\" (user sync'd from LDAP)\n         if (\"SHA1\".equals(connectorAlgorithm) && \"SHA\".equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         return false;\n     }\n "},{"sha":"8fd4f1898b92895098e801f03f69f0c223e99bcf","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -75,7 +75,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     result,\n                     reporter instanceof DefaultPropagationReporter\n-                    ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n+                            ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);\n \n             auditManager.audit(\n@@ -85,7 +85,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     result,\n                     reporter instanceof DefaultPropagationReporter\n-                    ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n+                            ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);\n         }\n     }\n@@ -112,8 +112,8 @@ public int compare(final PropagationTask task1, final PropagationTask task2) {\n             return prop1 > prop2\n                     ? 1\n                     : prop1 == prop2\n-                    ? 0\n-                    : -1;\n+                            ? 0\n+                            : -1;\n         }\n     }\n }"},{"sha":"169c4e85f42424eabe2c489ec532c473329531e1","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -388,8 +388,8 @@ public List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n         PropagationByResource localPropByRes = binder.fillVirtual(subject, vAttrsToBeRemoved == null\n                 ? Collections.<String>emptySet()\n                 : vAttrsToBeRemoved, vAttrsToBeUpdated == null\n-                ? Collections.<AttributeMod>emptySet()\n-                : vAttrsToBeUpdated, AttributableUtil.getInstance(subject));\n+                        ? Collections.<AttributeMod>emptySet()\n+                        : vAttrsToBeUpdated, AttributableUtil.getInstance(subject));\n \n         // SYNCOPE-458 fill membership virtual attributes\n         if (subject instanceof SyncopeUser) {\n@@ -402,8 +402,8 @@ public List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n                                 ? Collections.<String>emptySet()\n                                 : membershipMod.getVirAttrsToRemove(),\n                                 membershipMod.getVirAttrsToUpdate() == null ? Collections.<AttributeMod>emptySet()\n-                                : membershipMod.getVirAttrsToUpdate(), AttributableUtil.getInstance(\n-                                AttributableType.MEMBERSHIP));\n+                                        : membershipMod.getVirAttrsToUpdate(), AttributableUtil.getInstance(\n+                                        AttributableType.MEMBERSHIP));\n                     }\n                 }\n             }"},{"sha":"92d1db5fddf032bc8da892137c67badb5b159f95","filename":"core/src/main/java/org/apache/syncope/core/propagation/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.propagation;\n-"},{"sha":"5986b8e7dfcf8c4e30621d58cf00695968cfcd0f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultRoleProvisioningManager.java","status":"added","additions":226,"deletions":0,"changes":226,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.RoleDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class DefaultRoleProvisioningManager implements RoleProvisioningManager {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleProvisioningManager.class);\n+\n+    @Autowired\n+    protected RoleWorkflowAdapter rwfAdapter;\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected RoleDAO roleDAO;\n+\n+    @Autowired\n+    protected RoleDataBinder binder;\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject) {\n+        return create(subject, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject, Set<String> excludedResources) {\n+\n+        WorkflowResult<Long> created = rwfAdapter.create(subject);\n+\n+        EntitlementUtil.extendAuthContext(created.getResult());\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, subject.getVirAttrs());\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        final RoleTO savedTO = binder.getRoleTO(created.getResult());\n+        savedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                created.getResult(), propagationReporter.getStatuses());\n+        return result;\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException {\n+\n+        WorkflowResult<Long> created = rwfAdapter.create((RoleTO) roleTO);\n+        AttributeTO roleOwner = roleTO.getAttrMap().get(StringUtils.EMPTY);\n+        if (roleOwner != null) {\n+            roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n+        }\n+\n+        EntitlementUtil.extendAuthContext(created.getResult());\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n+                roleTO.getVirAttrs(), excludedResources);\n+\n+        taskExecutor.execute(tasks);\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                created.getResult(), null);\n+        return result;\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod) {\n+\n+        return update(subjectMod, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources) {\n+\n+        WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n+                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate());\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult(), propagationReporter.getStatuses());\n+        return result;\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> delete(Long subjectId) {\n+\n+        final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n+\n+        final SyncopeRole syncopeRole = roleDAO.find(subjectId);\n+\n+        if (syncopeRole != null) {\n+            toBeDeprovisioned.add(syncopeRole);\n+\n+            final List<SyncopeRole> descendants = roleDAO.findDescendants(toBeDeprovisioned.get(0));\n+            if (descendants != null) {\n+                toBeDeprovisioned.addAll(descendants);\n+            }\n+        }\n+\n+        final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n+\n+        for (SyncopeRole role : toBeDeprovisioned) {\n+            // Generate propagation tasks for deleting users from role resources, if they are on those resources only\n+            // because of the reason being deleted (see SYNCOPE-357)\n+            for (WorkflowResult<Long> wfResult : binder.getUsersOnResourcesOnlyBecauseOfRole(role.getId())) {\n+                tasks.addAll(propagationManager.getUserDeleteTaskIds(wfResult));\n+            }\n+\n+            // Generate propagation tasks for deleting this role from resources\n+            tasks.addAll(propagationManager.getRoleDeleteTaskIds(role.getId()));\n+        }\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        try {\n+            rwfAdapter.delete(subjectId);\n+        } catch (RuntimeException e) {\n+            throw e;\n+        }\n+\n+        return propagationReporter.getStatuses();\n+    }\n+\n+    @Override\n+    public Long unlink(RoleMod subjectMod) {\n+        WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n+        return updated.getResult();\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> deprovision(final Long roleId, final Collection<String> resources) {\n+        final SyncopeRole role = binder.getRoleFromId(roleId);\n+\n+        final Set<String> noPropResourceName = role.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(\n+                resources), noPropResourceName);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+        return propagationReporter.getStatuses();\n+    }\n+\n+    @Override\n+    public Long link(RoleMod subjectMod) {\n+        return rwfAdapter.update(subjectMod).getResult();\n+    }\n+\n+}"},{"sha":"ff0544fea40c22600ef3038e1d1521408dced7d3","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultUserProvisioningManager.java","status":"added","additions":397,"deletions":0,"changes":397,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,397 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning;\n+\n+import java.util.AbstractMap;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.mod.MembershipMod;\n+import org.apache.syncope.common.mod.StatusMod;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.sync.SyncResult;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class DefaultUserProvisioningManager implements UserProvisioningManager {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserProvisioningManager.class);\n+\n+    @Autowired\n+    protected UserWorkflowAdapter uwfAdapter;\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected UserDataBinder binder;\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO) {\n+        return create(userTO, true, false, null, Collections.<String>emptySet());\n+    }\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n+        /* WorkflowResult<Map.Entry<Long, Boolean>> created;\n+         * try {\n+         * created = uwfAdapter.create(userTO,storePassword);\n+         * } catch (RuntimeException e) {\n+         * throw e;\n+         * }\n+         *\n+         * List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n+         * created, userTO.getPassword(), userTO.getVirAttrs(), userTO.getMemberships());\n+         *\n+         * PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+         * getBean(PropagationReporter.class);\n+         * try {\n+         * taskExecutor.execute(tasks, propagationReporter);\n+         * } catch (PropagationException e) {\n+         * LOG.error(\"Error propagation primary resource\", e);\n+         * propagationReporter.onPrimaryResourceFailure(tasks);\n+         * }\n+         *\n+         * Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+         * created.getResult().getKey(), propagationReporter.getStatuses());\n+         * return result; */\n+        return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+        WorkflowResult<Map.Entry<Long, Boolean>> created;\n+        try {\n+            created = uwfAdapter.create(userTO, disablePwdPolicyCheck, enabled, storePassword);\n+        } catch (RuntimeException e) {\n+            throw e;\n+        }\n+\n+        List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n+                created, userTO.getPassword(), userTO.getVirAttrs(), excludedResources, userTO.getMemberships());\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                created.getResult().getKey(), propagationReporter.getStatuses());\n+        return result;\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod) {\n+        return update(userMod, false);\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n+        try {\n+            updated = uwfAdapter.update(userMod);\n+        } catch (RuntimeException e) {\n+            throw e;\n+        }\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            final PropagationByResource propByResVirAttr = binder.fillVirtual(\n+                    updated.getResult().getKey().getId(),\n+                    userMod.getVirAttrsToRemove(),\n+                    userMod.getVirAttrsToUpdate());\n+            // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is\n+            // not required, take care also of membership virtual attributes\n+            boolean addOrUpdateMemberships = false;\n+            for (MembershipMod membershipMod : userMod.getMembershipsToAdd()) {\n+                if (!binder.fillMembershipVirtual(\n+                        updated.getResult().getKey().getId(),\n+                        membershipMod.getRole(),\n+                        null,\n+                        membershipMod.getVirAttrsToRemove(),\n+                        membershipMod.getVirAttrsToUpdate(),\n+                        false).isEmpty()) {\n+                    addOrUpdateMemberships = true;\n+                }\n+            }\n+            tasks.addAll(!propByResVirAttr.isEmpty() || addOrUpdateMemberships || removeMemberships\n+                    ? propagationManager.getUserUpdateTaskIds(updated, false, null)\n+                    : Collections.<PropagationTask>emptyList());\n+        }\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+        if (!tasks.isEmpty()) {\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n+            }\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        return result;\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> delete(final Long userId) {\n+\n+        return delete(userId, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources) {\n+        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(subjectId, excludedResources);\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        try {\n+            uwfAdapter.delete(subjectId);\n+        } catch (RuntimeException e) {\n+            throw e;\n+        }\n+\n+        return propagationReporter.getStatuses();\n+    }\n+\n+    @Override\n+    public Long unlink(UserMod userMod) {\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = uwfAdapter.update(userMod);\n+        return updated.getResult().getKey().getId();\n+    }\n+\n+    @Override\n+    public Long link(UserMod subjectMod) {\n+        return uwfAdapter.update(subjectMod).getResult().getKey().getId();\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod) {\n+        WorkflowResult<Long> updated;\n+        if (statusMod.isOnSyncope()) {\n+            updated = uwfAdapter.activate(user.getId(), statusMod.getToken());\n+        } else {\n+            updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+        }\n+\n+        List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod) {\n+        WorkflowResult<Long> updated;\n+        if (statusMod.isOnSyncope()) {\n+            updated = uwfAdapter.reactivate(user.getId());\n+        } else {\n+            updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+        }\n+\n+        List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod) {\n+        WorkflowResult<Long> updated;\n+        if (statusMod.isOnSyncope()) {\n+            updated = uwfAdapter.suspend(user.getId());\n+        } else {\n+            updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+        }\n+\n+        List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n+    }\n+\n+    public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statusMod) {\n+\n+        Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n+        resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                user, statusMod.getType() != StatusMod.ModType.SUSPEND, resourcesToBeExcluded);\n+        PropagationReporter propReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        return propReporter.getStatuses();\n+\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> deprovision(Long userId, Collection<String> resources) {\n+\n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n+        final Set<String> noPropResourceName = user.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks =\n+                propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n+        final PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        return propagationReporter.getStatuses();\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n+            final SyncResult result, Boolean enabled, Set<String> excludedResources) {\n+\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n+        try {\n+            updated = uwfAdapter.update(userMod);\n+        } catch (Exception e) {\n+            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", id, e);\n+\n+            result.setStatus(SyncResult.Status.FAILURE);\n+            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + e.getMessage());\n+\n+            updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                    new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false), new PropagationByResource(),\n+                    new HashSet<String>());\n+        }\n+\n+        if (enabled != null) {\n+            SyncopeUser user = userDAO.find(id);\n+\n+            WorkflowResult<Long> enableUpdate = null;\n+            if (user.isSuspended() == null) {\n+                enableUpdate = uwfAdapter.activate(id, null);\n+            } else if (enabled && user.isSuspended()) {\n+                enableUpdate = uwfAdapter.reactivate(id);\n+            } else if (!enabled && !user.isSuspended()) {\n+                enableUpdate = uwfAdapter.suspend(id);\n+            }\n+\n+            if (enableUpdate != null) {\n+                if (enableUpdate.getPropByRes() != null) {\n+                    updated.getPropByRes().merge(enableUpdate.getPropByRes());\n+                    updated.getPropByRes().purge();\n+                }\n+                updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n+            }\n+        }\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated, updated.getResult().getKey().\n+                getPassword() != null, excludedResources);\n+\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult().getKey().getId(),\n+                propagationReporter.getStatuses());\n+\n+    }\n+\n+    @Override\n+    public void innerSuspend(SyncopeUser user, boolean suspend) {\n+\n+        final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n+\n+        // propagate suspension if and only if it is required by policy\n+        if (suspend) {\n+            UserMod userMod = new UserMod();\n+            userMod.setId(updated.getResult());\n+\n+            final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                    new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                            new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n+                            updated.getPropByRes(), updated.getPerformedTasks()));\n+\n+            taskExecutor.execute(tasks);\n+        }\n+    }\n+\n+    @Override\n+    public void requestPasswordReset(Long id) {\n+        uwfAdapter.requestPasswordReset(id);\n+    }\n+\n+    @Override\n+    public void confirmPasswordReset(SyncopeUser user, String token, String password) {\n+\n+        uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n+        PropagationReporter propReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propReporter.onPrimaryResourceFailure(tasks);\n+        }\n+    }\n+}"},{"sha":"65f7f7d3b79a439c3ed7f35c0331515ab83e3f0f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/ProvisioningManager.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.common.mod.AbstractAttributableMod;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.PropagationStatus;\n+\n+public interface ProvisioningManager<T extends AbstractAttributableTO, M extends AbstractAttributableMod> {\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(T subject);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> update(M subjectMod);\n+\n+    public List<PropagationStatus> delete(Long subjectId);\n+\n+    public Long unlink(M subjectMod);\n+\n+    public Long link(M subjectMod);\n+\n+    public List<PropagationStatus> deprovision(Long user, Collection<String> resources);\n+\n+}"},{"sha":"53029ac4bef722be1326ee1430f489322087eab9","filename":"core/src/main/java/org/apache/syncope/core/provisioning/RoleProvisioningManager.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.core.provisioning;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.propagation.PropagationException;\n+\n+public interface RoleProvisioningManager extends ProvisioningManager<RoleTO, RoleMod> {\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final RoleTO roleTO, Set<String> excludedResources);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(final RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException;\n+\n+    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources);\n+\n+}"},{"sha":"c5b70a8f5864027488b1508f3e7dd085f935b955","filename":"core/src/main/java/org/apache/syncope/core/provisioning/UserProvisioningManager.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.core.provisioning;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.mod.StatusMod;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.sync.SyncResult;\n+\n+public interface UserProvisioningManager extends ProvisioningManager<UserTO, UserMod> {\n+\n+    public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod, final boolean removeMemberships);\n+\n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n+            final SyncResult result, Boolean enabled, Set<String> excludedResources);\n+\n+    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources);\n+\n+    public void innerSuspend(SyncopeUser user, boolean suspend);\n+\n+    public void requestPasswordReset(final Long id);\n+\n+    public void confirmPasswordReset(SyncopeUser user, final String token, final String password);\n+\n+}"},{"sha":"646c35003436564733d6784cc30e188d748fa2b9","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelDetector.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelDetector.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import java.io.InputStream;\n+import java.util.Properties;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ *\n+ * @author giacomolm\n+ */\n+public class CamelDetector {\n+    \n+    private static final Logger LOG = LoggerFactory.getLogger(CamelDetector.class);\n+\n+    private static final String PROVISIONING_PROPERTIES = \"/provisioning.properties\";\n+     \n+    private static String userPMClassName;\n+\n+    private static String rolePMClassName;\n+    \n+     /**\n+     * Read classpath:/provisioning.properties in order to determine the configured provisioning adapter class name.\n+     */\n+    static {\n+        Properties props = new Properties();\n+        InputStream propStream = null;\n+        try {\n+            propStream = ContentLoader.class.getResourceAsStream(PROVISIONING_PROPERTIES);\n+            props.load(propStream);\n+            userPMClassName = props.getProperty(\"userProvisioningManager\");\n+            rolePMClassName = props.getProperty(\"roleProvisioningManager\");\n+        } catch (Exception e) {\n+            LOG.error(\"Could not load workflow.properties\", e);\n+        } finally {\n+            IOUtils.closeQuietly(propStream);\n+        }\n+    }\n+    \n+    /**\n+     * Check if the configured user provisioning manager is Camel's.\n+     *\n+     * @return whether Activiti is configured for user workflow or not\n+     */\n+    public static boolean isCamelEnabledForUsers() {\n+        return userPMClassName != null && userPMClassName.equals(CamelUserProvisioningManager.class.getName());\n+    }\n+\n+    /**\n+     * Check if the configured role provisioning manager is Camel's.\n+     *\n+     * @return whether Activiti is configured for role workflow or not\n+     */\n+    public static boolean isCamelEnabledForRoles() {\n+        return rolePMClassName != null && rolePMClassName.equals(CamelRoleProvisioningManager.class.getName());\n+    }\n+}"},{"sha":"96f5227605807c25b8ef02d0b0947a2d24cc4cf0","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelRoleProvisioningManager.java","status":"added","additions":293,"deletions":0,"changes":293,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,293 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.PollingConsumer;\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.impl.DefaultExchange;\n+import org.apache.camel.impl.DefaultMessage;\n+import org.apache.camel.model.RoutesDefinition;\n+import org.apache.camel.spring.SpringCamelContext;\n+import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.RoleProvisioningManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class CamelRoleProvisioningManager implements RoleProvisioningManager {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(CamelRoleProvisioningManager.class);\n+\n+    private SpringCamelContext camelContext;\n+\n+    private RoutesDefinition routes;\n+\n+    protected Map<String, PollingConsumer> consumerMap;\n+\n+    protected List<String> knownUri;\n+\n+    @Autowired\n+    protected RouteDAO routeDAO;\n+\n+    @Autowired\n+    protected SyncopeCamelContext contextFactory;\n+\n+    public CamelRoleProvisioningManager() throws Exception {\n+        knownUri = new ArrayList<String>();\n+        consumerMap = new HashMap<String, PollingConsumer>();\n+    }\n+\n+    public void startContext() throws Exception {\n+        camelContext.start();\n+    }\n+\n+    public void stopContext() throws Exception {\n+        camelContext.stop();\n+    }\n+\n+    public SpringCamelContext getContext() {\n+        //ApplicationContext context = ApplicationContextProvider.getApplicationContext();\n+        //return context.getBean(\"camel-context\", DefaultCamelContext.class);        \n+        return contextFactory.getContext(routeDAO);\n+    }\n+\n+    public void changeRoute(String routePath) {\n+        try {\n+            camelContext.removeRouteDefinitions(routes.getRoutes());\n+            InputStream is = getClass().getResourceAsStream(routePath);\n+            routes = getContext().loadRoutesDefinition(is);\n+            camelContext.addRouteDefinitions(routes.getRoutes());\n+        } catch (Exception e) {\n+            // TODO Auto-generated catch block\n+            LOG.error(\"Unexpected error\", e);\n+        }\n+    }\n+\n+    protected void sendMessage(String uri, Object obj) {\n+        Exchange exc = new DefaultExchange(getContext());\n+        DefaultMessage m = new DefaultMessage();\n+        m.setBody(obj);\n+        exc.setIn(m);\n+        ProducerTemplate template = getContext().createProducerTemplate();\n+        template.send(uri, exc);\n+    }\n+\n+    protected void sendMessage(String uri, Object obj, Map<String, Object> properties) {\n+        Exchange exc = new DefaultExchange(getContext());\n+\n+        Iterator<Map.Entry<String, Object>> it = properties.entrySet().iterator();\n+        while (it.hasNext()) {\n+            Map.Entry<String, Object> property = it.next();\n+            exc.setProperty(property.getKey(), property.getValue());\n+            LOG.info(\"Added property {}\", property.getKey());\n+        }\n+\n+        DefaultMessage m = new DefaultMessage();\n+        m.setBody(obj);\n+        exc.setIn(m);\n+        ProducerTemplate template = getContext().createProducerTemplate();\n+        template.send(uri, exc);\n+    }\n+\n+    protected PollingConsumer getConsumer(final String uri) {\n+\n+        if (!knownUri.contains(uri)) {\n+            knownUri.add(uri);\n+            Endpoint endpoint = getContext().getEndpoint(uri);\n+            PollingConsumer pollingConsumer = null;\n+            try {\n+                pollingConsumer = endpoint.createPollingConsumer();\n+                consumerMap.put(uri, pollingConsumer);\n+                pollingConsumer.start();\n+            } catch (Exception ex) {\n+                LOG.error(\"Unexpected error in Consumer creation \", ex);\n+            }\n+            return pollingConsumer;\n+        } else {\n+            return consumerMap.get(uri);\n+        }\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject) {\n+\n+        return create(subject, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Set<String> excludedResources) {\n+\n+        String uri = \"direct:createRolePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:createRole\", roleTO, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException {\n+\n+        String uri = \"direct:createRoleSyncPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"roleOwnerMap\", roleOwnerMap);\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:createRoleSync\", roleTO, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod) {\n+\n+        return update(subjectMod, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources) {\n+\n+        String uri = \"direct:updateRolePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:updateRole\", subjectMod, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> delete(Long subjectId) {\n+\n+        String uri = \"direct:deleteRolePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:deleteRole\", subjectId);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(List.class);\n+    }\n+\n+    @Override\n+    public Long unlink(RoleMod subjectMod) {\n+        String uri = \"direct:unlinkRolePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:unlinkRole\", subjectMod);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    public Long link(RoleMod subjectMod) {\n+\n+        String uri = \"direct:linkRolePort\";\n+\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:linkRole\", subjectMod);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> deprovision(final Long roleId, Collection<String> resources) {\n+\n+        String uri = \"direct:deprovisionRolePort\";\n+\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"resources\", resources);\n+\n+        sendMessage(\"direct:deprovisionRole\", roleId, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(List.class);\n+    }\n+\n+}"},{"sha":"c65f8eb09d6f1c561476ec12404d34040073739a","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"added","additions":482,"deletions":0,"changes":482,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,482 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Reader;\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.PollingConsumer;\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.impl.DefaultExchange;\n+import org.apache.camel.impl.DefaultMessage;\n+import org.apache.camel.model.RoutesDefinition;\n+import org.apache.camel.spring.SpringCamelContext;\n+import org.apache.syncope.common.mod.StatusMod;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n+import org.apache.syncope.core.provisioning.UserProvisioningManager;\n+import org.apache.syncope.core.sync.SyncResult;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class CamelUserProvisioningManager implements UserProvisioningManager {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(CamelUserProvisioningManager.class);\n+\n+    private SpringCamelContext camelContext;\n+\n+    private RoutesDefinition routes;\n+\n+    protected Map<String, PollingConsumer> consumerMap;\n+\n+    protected List<String> knownUri;\n+\n+    @Autowired\n+    protected RouteDAO routeDAO;\n+\n+    @Autowired\n+    protected SyncopeCamelContext contextFactory;\n+\n+    public CamelUserProvisioningManager() throws Exception {\n+        knownUri = new ArrayList<String>();\n+        consumerMap = new HashMap<String, PollingConsumer>();\n+    }\n+\n+    public String readerToString(Reader reader, int size) throws IOException {\n+        StringBuffer content = new StringBuffer();\n+        char[] buffer = new char[size];\n+        int n;\n+\n+        while ((n = reader.read(buffer)) != -1) {\n+            content.append(buffer, 0, n);\n+        }\n+\n+        return content.toString();\n+    }\n+\n+    public void startContext() throws Exception {\n+        getContext().start();\n+    }\n+\n+    public void stopContext() throws Exception {\n+        camelContext.stop();\n+    }\n+\n+    public SpringCamelContext getContext() {\n+        //ApplicationContext context = ApplicationContextProvider.getApplicationContext();\n+        //return context.getBean(\"camel-context\", DefaultCamelContext.class);                    \n+        return contextFactory.getContext(routeDAO);\n+    }\n+\n+    protected List<CamelRoute> getRoutes() {\n+        return routeDAO.findAll();\n+    }\n+\n+    public void changeRoute(String routePath) {\n+        try {\n+            camelContext.removeRouteDefinitions(routes.getRoutes());\n+            InputStream is = getClass().getResourceAsStream(routePath);\n+            routes = getContext().loadRoutesDefinition(is);\n+            camelContext.addRouteDefinitions(routes.getRoutes());\n+        } catch (Exception e) {\n+            // TODO Auto-generated catch block\n+            LOG.error(\"Unexpected error\", e);\n+        }\n+    }\n+\n+    protected void sendMessage(String uri, Object obj) {\n+        Exchange exc = new DefaultExchange(getContext());\n+        DefaultMessage m = new DefaultMessage();\n+        m.setBody(obj);\n+        exc.setIn(m);\n+        ProducerTemplate template = getContext().createProducerTemplate();\n+        template.send(uri, exc);\n+    }\n+\n+    protected void sendMessage(String uri, Object obj, Map<String, Object> properties) {\n+        Exchange exc = new DefaultExchange(getContext());\n+\n+        Iterator<Map.Entry<String, Object>> it = properties.entrySet().iterator();\n+        while (it.hasNext()) {\n+            Map.Entry<String, Object> property = it.next();\n+            exc.setProperty(property.getKey(), property.getValue());\n+            LOG.info(\"Added property {}\", property.getKey());\n+        }\n+\n+        DefaultMessage m = new DefaultMessage();\n+        m.setBody(obj);\n+        exc.setIn(m);\n+        ProducerTemplate template = getContext().createProducerTemplate();\n+        template.send(uri, exc);\n+    }\n+\n+    protected PollingConsumer getConsumer(String uri) {\n+        if (!knownUri.contains(uri)) {\n+            knownUri.add(uri);\n+            Endpoint endpoint = getContext().getEndpoint(uri);\n+            PollingConsumer pollingConsumer = null;\n+            try {\n+                pollingConsumer = endpoint.createPollingConsumer();\n+                consumerMap.put(uri, pollingConsumer);\n+                pollingConsumer.start();\n+            } catch (Exception ex) {\n+                LOG.error(\"Unexpected error in Consumer creation \", ex);\n+            }\n+            return pollingConsumer;\n+        } else {\n+            return consumerMap.get(uri);\n+        }\n+    }\n+\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO) {\n+\n+        return create(userTO, true, false, null, Collections.<String>emptySet());\n+    }\n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n+\n+        return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+        String uri = \"direct:createPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"storePassword\", storePassword);\n+        props.put(\"disablePwdPolicyCheck\", disablePwdPolicyCheck);\n+        props.put(\"enabled\", enabled);\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:createUser\", userTO, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    /**\n+     *\n+     * @param userMod\n+     * @return\n+     * @throws RuntimeException if problems arise on workflow update\n+     */\n+    @Override\n+    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod) {\n+        return update(userMod, false);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n+        String uri = \"direct:updatePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"removeMemberships\", removeMemberships);\n+\n+        sendMessage(\"direct:updateUser\", userMod, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> delete(final Long userId) {\n+\n+        return delete(userId, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> delete(final Long userId, Set<String> excludedResources) {\n+        String uri = \"direct:deletePort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:deleteUser\", userId, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(List.class);\n+    }\n+\n+    @Override\n+    public Long unlink(final UserMod userMod) {\n+        String uri = \"direct:unlinkPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:unlinkUser\", userMod);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        o.getIn().setBody((o.getIn().getBody(UserMod.class).getId()));\n+        return o.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod) {\n+        String uri = \"direct:statusPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"token\", statusMod.getToken());\n+        props.put(\"user\", user);\n+        props.put(\"statusMod\", statusMod);\n+\n+        if (statusMod.isOnSyncope()) {\n+            sendMessage(\"direct:activateUser\", user.getId(), props);\n+        } else {\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n+            sendMessage(\"direct:statusUser\", updated, props);\n+        }\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod) {\n+        String uri = \"direct:statusPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"user\", user);\n+        props.put(\"statusMod\", statusMod);\n+\n+        if (statusMod.isOnSyncope()) {\n+            sendMessage(\"direct:reactivateUser\", user.getId(), props);\n+        } else {\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n+            sendMessage(\"direct:statusUser\", updated, props);\n+        }\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod) {\n+\n+        String uri = \"direct:statusPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"user\", user);\n+        props.put(\"statusMod\", statusMod);\n+\n+        if (statusMod.isOnSyncope()) {\n+            sendMessage(\"direct:suspendUser\", user.getId(), props);\n+        } else {\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n+            sendMessage(\"direct:statusUser\", updated, props);\n+        }\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    public Long link(UserMod subjectMod) {\n+        String uri = \"direct:linkPort\";\n+\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:linkUser\", subjectMod);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        o.getIn().setBody((o.getIn().getBody(UserMod.class).getId()));\n+        return o.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> deprovision(Long user, Collection<String> resources) {\n+        String uri = \"direct:deprovisionPort\";\n+\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"resources\", resources);\n+\n+        sendMessage(\"direct:deprovisionUser\", user, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return o.getIn().getBody(List.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(UserMod userMod, Long id, SyncResult result,\n+            Boolean enabled, Set<String> excludedResources) {\n+\n+        String uri = \"direct:updateSyncPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"id\", id);\n+        props.put(\"result\", result);\n+        props.put(\"enabled\", enabled);\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:updateSyncUser\", userMod, props);\n+\n+        Exchange o = pollingConsumer.receive();\n+        Exception e;\n+        if ((e = (Exception) o.getProperty(Exchange.EXCEPTION_CAUGHT)) != null) {\n+\n+            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", id, e);\n+\n+            result.setStatus(SyncResult.Status.FAILURE);\n+            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + e.getMessage());\n+\n+            WorkflowResult<Map.Entry<UserMod, Boolean>> updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                    new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false), new PropagationByResource(),\n+                    new HashSet<String>());\n+            sendMessage(\"direct:syncUserStatus\", updated, props);\n+            o = pollingConsumer.receive();\n+        }\n+\n+        return o.getIn().getBody(Map.Entry.class);\n+    }\n+\n+    @Override\n+    public void innerSuspend(SyncopeUser user, boolean suspend) {\n+\n+        String uri = \"direct:suspendWFPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"suspend\", suspend);\n+\n+        sendMessage(\"direct:suspendUserWF\", user, props);\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+    }\n+\n+    @Override\n+    public void requestPasswordReset(Long id) {\n+        String uri = \"direct:requestPwdResetPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        sendMessage(\"direct:requestPwdReset\", id);\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+    }\n+\n+    @Override\n+    public void confirmPasswordReset(SyncopeUser user, final String token, final String password) {\n+        String uri = \"direct:confirmPwdResetPort\";\n+        PollingConsumer pollingConsumer = getConsumer(uri);\n+\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(\"user\", user);\n+        props.put(\"userId\", user.getId());\n+        props.put(\"token\", token);\n+        props.put(\"password\", password);\n+\n+        sendMessage(\"direct:confirmPwdReset\", user, props);\n+        Exchange o = pollingConsumer.receive();\n+\n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+    }\n+\n+}"},{"sha":"2873735b372fa307e50f8146bed62926caf06c3f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"added","additions":139,"deletions":0,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.net.URLDecoder;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.logging.Level;\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBElement;\n+import javax.xml.bind.Unmarshaller;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.model.Constants;\n+import org.apache.camel.model.RouteDefinition;\n+import org.apache.camel.model.RoutesDefinition;\n+import org.apache.camel.spring.SpringCamelContext;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Node;\n+\n+@Component\n+public class SyncopeCamelContext {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeCamelContext.class);\n+\n+    private SpringCamelContext camelContext = null;\n+\n+    public SyncopeCamelContext() {\n+    }\n+\n+    public SpringCamelContext getContext(RouteDAO routeDAO) {\n+\n+        if (camelContext == null) {\n+            camelContext = new  SpringCamelContext(ApplicationContextProvider.getApplicationContext());\n+        }\n+        if (camelContext.getRouteDefinitions().isEmpty()) {\n+\n+            List<CamelRoute> crl = routeDAO.findAll();\n+            LOG.info(\"{} route(s) are going to be loaded \", crl.size());\n+            loadContext(routeDAO, crl);\n+\n+            try {\n+                camelContext.start();\n+            } catch (Exception ex) {\n+                LOG.error(\"Error during staring camel context {}\", ex);\n+            }\n+        }\n+\n+        return camelContext;\n+    }\n+\n+    public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl) {\n+\n+        try {\n+            DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+            JAXBContext jaxbContext = JAXBContext.newInstance(Constants.JAXB_CONTEXT_PACKAGES);\n+            Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();\n+            List<RouteDefinition> rds = new ArrayList<RouteDefinition>();\n+            for(int s = 0; s < crl.size(); s++){\n+                InputStream is = new ByteArrayInputStream(URLDecoder.decode(crl.get(s).getRouteContent(), \"UTF-8\").\n+                        getBytes());\n+                Document doc = dBuilder.parse(is);\n+                doc.getDocumentElement().normalize();\n+                Node routeEl = doc.getElementsByTagName(\"route\").item(0);\n+                JAXBElement<RouteDefinition> obj = unmarshaller.unmarshal(routeEl, RouteDefinition.class);\n+                //adding route definition to list                        \n+                rds.add(obj.getValue());\n+            }\n+            camelContext.addRouteDefinitions(rds);\n+        } catch (Exception ex) {\n+            LOG.error(\"Error during loading camel context {}\", ex);\n+        }\n+\n+    }\n+\n+    public void reloadContext(RouteDAO routeDAO) {\n+\n+        List<CamelRoute> crl = routeDAO.findAll();\n+        if (camelContext == null) {\n+            getContext(routeDAO);\n+        } else {\n+            if (!camelContext.getRouteDefinitions().isEmpty()) {\n+                for (Iterator<RouteDefinition> it = camelContext.getRouteDefinitions().iterator(); it.hasNext();) {\n+                    RouteDefinition ard = it.next();\n+                    it.remove();\n+                }\n+            }\n+\n+            loadContext(routeDAO, crl);\n+        }\n+    }\n+\n+    public void reloadContext(RouteDAO routeDAO, Long routeId) {\n+\n+        if (camelContext == null) {\n+            getContext(routeDAO);\n+        } else {\n+            if (!camelContext.getRouteDefinitions().isEmpty()) {\n+\n+                camelContext.getRouteDefinitions().remove(routeId.intValue());\n+                List<CamelRoute> crl = new ArrayList<CamelRoute>();\n+                crl.add(routeDAO.find(routeId));\n+                loadContext(routeDAO, crl);\n+            }\n+\n+        }\n+\n+    }\n+\n+    public List<RouteDefinition> getDefinitions() {\n+        return camelContext.getRouteDefinitions();\n+    }\n+}"},{"sha":"43daf1050059e82821ed4b8f379b7940779e813e","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleCreatePropagation.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultRoleCreatePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleCreatePropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n+        RoleTO subject = exchange.getProperty(\"subject\", RoleTO.class);\n+        @SuppressWarnings(\"unchecked\")\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        EntitlementUtil.extendAuthContext(created.getResult());\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, subject.getVirAttrs());\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                created.getResult(), propagationReporter.getStatuses());\n+\n+        exchange.getOut().setBody(result);\n+    }\n+\n+}"},{"sha":"296d99e10f583d32dd5d9ecb00b2b50351818891","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleCreateSyncPropagation.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,81 @@\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import java.util.AbstractMap;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.util.EntitlementUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultRoleCreateSyncPropagation implements Processor {\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleCreateSyncPropagation.class);\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void process(Exchange exchange) {\n+\n+        WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n+\n+        RoleTO actual = exchange.getProperty(\"subject\", RoleTO.class);\n+        Map<Long, String> roleOwnerMap = exchange.getProperty(\"roleOwnerMap\", Map.class);\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        AttributeTO roleOwner = actual.getAttrMap().get(StringUtils.EMPTY);\n+\n+        if (roleOwner != null) {\n+            roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n+        }\n+\n+        EntitlementUtil.extendAuthContext(created.getResult());\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n+                actual.getVirAttrs(), excludedResource);\n+\n+        taskExecutor.execute(tasks);\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                created.getResult(), Collections.<PropagationStatus>emptyList());\n+\n+        exchange.getOut().setBody(result);\n+    }\n+}"},{"sha":"1c001312283be49da7ef92e7952117a970c15c28","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleDeletePropagation.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.RoleDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultRoleDeletePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleDeletePropagation.class);\n+\n+    @Autowired\n+    protected RoleWorkflowAdapter rwfAdapter;\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected RoleDAO roleDAO;\n+\n+    @Autowired\n+    protected RoleDataBinder binder;\n+\n+    @Override\n+    public void process(Exchange exchange) throws Exception {\n+\n+        Long subjectId = exchange.getIn().getBody(Long.class);\n+\n+        final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n+\n+        final SyncopeRole syncopeRole = roleDAO.find(subjectId);\n+\n+        if (syncopeRole != null) {\n+            toBeDeprovisioned.add(syncopeRole);\n+\n+            final List<SyncopeRole> descendants = roleDAO.findDescendants(toBeDeprovisioned.get(0));\n+            if (descendants != null) {\n+                toBeDeprovisioned.addAll(descendants);\n+            }\n+        }\n+\n+        final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n+\n+        for (SyncopeRole role : toBeDeprovisioned) {\n+            // Generate propagation tasks for deleting users from role resources, if they are on those resources only\n+            // because of the reason being deleted (see SYNCOPE-357)\n+            for (WorkflowResult<Long> wfResult : binder.getUsersOnResourcesOnlyBecauseOfRole(role.getId())) {\n+                tasks.addAll(propagationManager.getUserDeleteTaskIds(wfResult));\n+            }\n+\n+            // Generate propagation tasks for deleting this role from resources\n+            tasks.addAll(propagationManager.getRoleDeleteTaskIds(role.getId()));\n+        }\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"e196187a5b86d5fc3a6ecf5cb1d3ae8c97108d1a","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleDeprovisionPropagation.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.RoleDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultRoleDeprovisionPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeprovisionPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected RoleDataBinder binder;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        Long roleId = exchange.getIn().getBody(Long.class);\n+        @SuppressWarnings(\"unchecked\")\n+        List<String> resources = exchange.getProperty(\"resources\", List.class);\n+\n+        final SyncopeRole role = binder.getRoleFromId(roleId);\n+\n+        final Set<String> noPropResourceName = role.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(\n+                resources), noPropResourceName);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.getOut().setBody(propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"6722a1567a20cba4f60a424762b083b291158e81","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleUpdatePropagation.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultRoleUpdatePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdatePropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected UserDataBinder binder;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n+        RoleMod subjectMod = exchange.getProperty(\"subjectMod\", RoleMod.class);\n+        @SuppressWarnings(\"unchecked\")\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n+                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate(), excludedResource);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult(), propagationReporter.getStatuses());\n+\n+        exchange.getOut().setBody(result);\n+    }\n+\n+}"},{"sha":"f3d9d74bd267e74c43e25833da6fecaa9ecb294f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserConfirmPwdResetPropagation.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.List;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserConfirmPwdResetPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserConfirmPwdResetPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+        SyncopeUser user = exchange.getProperty(\"user\", SyncopeUser.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n+        PropagationReporter propReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propReporter.onPrimaryResourceFailure(tasks);\n+        }\n+    }\n+}"},{"sha":"ed5b99031a8728ddbef9d758a7da9d3f2a5f7547","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserCreatePropagation.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserCreatePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserCreatePropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        if ((exchange.getIn().getBody() instanceof WorkflowResult)) {\n+\n+            @SuppressWarnings(\"unchecked\")\n+            WorkflowResult<Map.Entry<Long, Boolean>> created = (WorkflowResult) exchange.getIn().getBody();\n+            UserTO actual = exchange.getProperty(\"actual\", UserTO.class);\n+            @SuppressWarnings(\"unchecked\")\n+            Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+            List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n+                    created, actual.getPassword(), actual.getVirAttrs(), excludedResource, actual.getMemberships());\n+            PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                    getBean(PropagationReporter.class);\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource {}\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n+            }\n+\n+            Map.Entry<Long, List<PropagationStatus>> result =\n+                    new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(created.getResult().getKey(),\n+                            propagationReporter.getStatuses());\n+            exchange.getOut().setBody(result);\n+        }\n+    }\n+\n+}"},{"sha":"c3028ab06998d6d51477b26dd439ddc7d5b87b05","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserDeletePropagation.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserDeletePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeletePropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) throws Exception {\n+\n+        Long userId = (Long) exchange.getIn().getBody();\n+        LOG.info(\"UserId {} \", userId);\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        // Note here that we can only notify about \"delete\", not any other\n+        // task defined in workflow process definition: this because this\n+        // information could only be available after uwfAdapter.delete(), which\n+        // will also effectively remove user from db, thus making virtually\n+        // impossible by NotificationManager to fetch required user information\n+        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId, excludedResource);\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"caa9d90e748a9a3dc97ae2390fefa6905511ef2e","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserDeprovisionPropagation.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserDeprovisionPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeprovisionPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected UserDataBinder binder;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        Long userId = exchange.getIn().getBody(Long.class);\n+        @SuppressWarnings(\"unchecked\")\n+        List<String> resources = exchange.getProperty(\"resources\", List.class);\n+\n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n+        final Set<String> noPropResourceName = user.getResourceNames();\n+        noPropResourceName.removeAll(resources);\n+\n+        final List<PropagationTask> tasks =\n+                propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n+        final PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.getOut().setBody(propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"89e9dca7f410385ff122e0f552dc41b3b61c99a8","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserStatusPropagation.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.mod.StatusMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserStatusPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserStatusPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n+\n+        SyncopeUser user = exchange.getProperty(\"user\", SyncopeUser.class);\n+        StatusMod statusMod = exchange.getProperty(\"statusMod\", StatusMod.class);\n+\n+        Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n+        resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                user, statusMod.getType() != StatusMod.ModType.SUSPEND, resourcesToBeExcluded);\n+        PropagationReporter propReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult(), propReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n+    }\n+}"},{"sha":"1a9ecd3833999e42691f7324fe4f27651b85c788","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserUpdateInSyncPropagation.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserUpdateInSyncPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdateInSyncPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected UserDataBinder binder;\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated, updated.getResult().getKey().\n+                getPassword() != null, excludedResource);\n+\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n+    }\n+}"},{"sha":"c34a0bfe31821434c2e8c9b649f1877331a85c72","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserUpdatePropagation.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.mod.MembershipMod;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationReporter;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserUpdatePropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdatePropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected UserDataBinder binder;\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void process(Exchange exchange) {\n+\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+        UserMod actual = exchange.getProperty(\"actual\", UserMod.class);\n+        boolean removeMemberships = exchange.getProperty(\"removeMemberships\", boolean.class);\n+\n+        // SYNCOPE-501: check if there are memberships to be removed with virtual attributes assigned\n+            /* for (Long membershipId :\n+         * actual.getMembershipsToRemove()) {\n+         * if (!binder.fillMembershipVirtual(\n+         * null,\n+         * null,\n+         * membershipId,\n+         * Collections.<String>emptySet(),\n+         * Collections.<AttributeMod>emptySet(),\n+         * true).isEmpty()) {\n+         *\n+         * removeMemberships = true;\n+         * }\n+         * } */\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            final PropagationByResource propByResVirAttr = binder.fillVirtual(\n+                    updated.getResult().getKey().getId(),\n+                    actual.getVirAttrsToRemove(),\n+                    actual.getVirAttrsToUpdate());\n+            // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is\n+            // not required, take care also of membership virtual attributes\n+            boolean addOrUpdateMemberships = false;\n+            for (MembershipMod membershipMod : actual.getMembershipsToAdd()) {\n+                if (!binder.fillMembershipVirtual(\n+                        updated.getResult().getKey().getId(),\n+                        membershipMod.getRole(),\n+                        null,\n+                        membershipMod.getVirAttrsToRemove(),\n+                        membershipMod.getVirAttrsToUpdate(),\n+                        false).isEmpty()) {\n+\n+                    addOrUpdateMemberships = true;\n+                }\n+            }\n+            tasks.addAll(!propByResVirAttr.isEmpty() || addOrUpdateMemberships || removeMemberships\n+                    ? propagationManager.getUserUpdateTaskIds(updated, false, null)\n+                    : Collections.<PropagationTask>emptyList());\n+        }\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+\n+        if (!tasks.isEmpty()) {\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n+            }\n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n+    }\n+}"},{"sha":"dcc8af808fec50f5ca3177ef17d7921fdd623bdf","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserWFSuspendPropagation.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.AbstractMap.SimpleEntry;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DefaultUserWFSuspendPropagation implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultUserWFSuspendPropagation.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n+        Boolean suspend = exchange.getProperty(\"suspend\", Boolean.class);\n+\n+        if (suspend) {\n+            UserMod userMod = new UserMod();\n+            userMod.setId(updated.getResult());\n+\n+            final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                    new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                            new SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n+                            updated.getPropByRes(), updated.getPerformedTasks()));\n+\n+            taskExecutor.execute(tasks);\n+        }\n+    }\n+\n+}"},{"sha":"182913ba9fb37c168d881ad97110913c6b8a14a0","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/UserStatusOnSync.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processors;\n+\n+import java.util.Map;\n+import org.apache.camel.Processor;\n+import org.apache.camel.Exchange;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class UserStatusOnSync implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserStatusOnSync.class);\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    @Autowired\n+    protected UserWorkflowAdapter uwfAdapter;\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+\n+        Boolean enabled = exchange.getProperty(\"enabled\", Boolean.class);\n+        Long id = exchange.getProperty(\"id\", Long.class);\n+\n+        if (enabled != null) {\n+            SyncopeUser user = userDAO.find(id);\n+\n+            WorkflowResult<Long> enableUpdate = null;\n+            if (user.isSuspended() == null) {\n+                enableUpdate = uwfAdapter.activate(id, null);\n+            } else if (enabled && user.isSuspended()) {\n+                enableUpdate = uwfAdapter.reactivate(id);\n+            } else if (!enabled && !user.isSuspended()) {\n+                enableUpdate = uwfAdapter.suspend(id);\n+            }\n+\n+            if (enableUpdate != null) {\n+                if (enableUpdate.getPropByRes() != null) {\n+                    updated.getPropByRes().merge(enableUpdate.getPropByRes());\n+                    updated.getPropByRes().purge();\n+                }\n+                updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n+            }\n+        }\n+    }\n+}"},{"sha":"e2121f2e9bb378f9bf268f5bccc2cf579f1d7e23","filename":"core/src/main/java/org/apache/syncope/core/quartz/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.quartz;\n-"},{"sha":"e22fa92276e6be435fd075fb1ae7b6bd4243fd0a","filename":"core/src/main/java/org/apache/syncope/core/report/ReportletConfClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -25,7 +25,7 @@\n \n import org.apache.syncope.common.report.ReportletConf;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n public @interface ReportletConfClass {\n "},{"sha":"d6e5e4cd3421f4e86e8ffd42bf9f3effa8b64352","filename":"core/src/main/java/org/apache/syncope/core/report/cocoon/TextSerializer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -98,4 +98,4 @@ public static TextSerializer createPlainSerializer() {\n         serializer.setMethod(TXT);\n         return serializer;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"b02bef8770ddce950900b1e475bf1760b53991fc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -217,7 +217,7 @@ public List<EventCategoryTO> listAuditEvents() {\n             final String packageSearchPath =\n                     ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX\n                     + ClassUtils.convertClassNameToResourcePath(\n-                    SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n+                            SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n                     + \"/\" + \"**/*.class\";\n \n             final Resource[] resources = resourcePatternResolver.getResources(packageSearchPath);\n@@ -239,7 +239,7 @@ public List<EventCategoryTO> listAuditEvents() {\n                     }\n                 }\n             }\n-            \n+\n             //SYNCOPE-608\n             final EventCategoryTO authenticationControllerEvents = new EventCategoryTO();\n             authenticationControllerEvents.setCategory(\"AuthenticationController\");"},{"sha":"3a0f9d6620e3a2cabaed28fc86273a51f833beb6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":22,"deletions":89,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -26,6 +26,7 @@\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -34,6 +35,9 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.provisioning.ProvisioningManager;\n+import org.apache.syncope.core.provisioning.RoleProvisioningManager;\n import org.apache.syncope.common.reqres.BulkAction;\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.types.SubjectType;\n@@ -53,8 +57,6 @@\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.EntitlementUtil;\n-import org.apache.syncope.core.workflow.WorkflowResult;\n-import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -82,9 +84,6 @@ public class RoleController extends AbstractSubjectController<RoleTO, RoleMod> {\n     @Autowired\n     protected RoleDataBinder binder;\n \n-    @Autowired\n-    protected RoleWorkflowAdapter rwfAdapter;\n-\n     @Autowired\n     protected PropagationManager propagationManager;\n \n@@ -97,6 +96,9 @@ public class RoleController extends AbstractSubjectController<RoleTO, RoleMod> {\n     @Resource(name = \"anonymousUser\")\n     private String anonymousUser;\n \n+    @Resource(name = \"roleProvisioningManager\")\n+    protected RoleProvisioningManager provisioningManager;\n+\n     @PreAuthorize(\"hasAnyRole('ROLE_READ', T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n     @Transactional(readOnly = true)\n     @Override\n@@ -240,22 +242,9 @@ public RoleTO create(final RoleTO roleTO) {\n         /*\n          * Actual operations: workflow, propagation\n          */\n-        WorkflowResult<Long> created = rwfAdapter.create(actual);\n-\n-        EntitlementUtil.extendAuthContext(created.getResult());\n-\n-        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, actual.getVirAttrs());\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n-                PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n-\n-        final RoleTO savedTO = binder.getRoleTO(created.getResult());\n-        savedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        Map.Entry<Long, List<PropagationStatus>> created = provisioningManager.create(roleTO);\n+        final RoleTO savedTO = binder.getRoleTO(created.getKey());\n+        savedTO.getPropagationStatusTOs().addAll(created.getValue());\n         return savedTO;\n     }\n \n@@ -269,23 +258,10 @@ public RoleTO update(final RoleMod roleMod) {\n         RoleMod actual = attrTransformer.transform(roleMod);\n         LOG.debug(\"Transformed: {}\", actual);\n \n-        /*\n-         * Actual operations: workflow, propagation\n-         */\n-        WorkflowResult<Long> updated = rwfAdapter.update(actual);\n-\n-        List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n-                actual.getVirAttrsToRemove(), actual.getVirAttrsToUpdate());\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n-                PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n-        final RoleTO updatedTO = binder.getRoleTO(updated.getResult());\n-        updatedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(roleMod);\n+\n+        final RoleTO updatedTO = binder.getRoleTO(updated.getKey());\n+        updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return updatedTO;\n     }\n \n@@ -304,45 +280,12 @@ public RoleTO delete(final Long roleId) {\n             throw sce;\n         }\n \n-        final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n-\n-        final SyncopeRole syncopeRole = roleDAO.find(roleId);\n-\n-        if (syncopeRole != null) {\n-            final List<SyncopeRole> descendants = roleDAO.findDescendants(syncopeRole);\n-            if (descendants != null) {\n-                // among descendants there is also parent role syncopeRole (to delete)\n-                toBeDeprovisioned.addAll(descendants);\n-            }\n-        }\n-\n-        final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n-\n-        for (SyncopeRole role : toBeDeprovisioned) {\n-            // Generate propagation tasks for deleting users from role resources, if they are on those resources only\n-            // because of the reason being deleted (see SYNCOPE-357)\n-            for (WorkflowResult<Long> wfResult : binder.getUsersOnResourcesOnlyBecauseOfRole(role.getId())) {\n-                tasks.addAll(propagationManager.getUserDeleteTaskIds(wfResult));\n-            }\n-\n-            // Generate propagation tasks for deleting this role from resources\n-            tasks.addAll(propagationManager.getRoleDeleteTaskIds(role.getId()));\n-        }\n+        List<PropagationStatus> statuses = provisioningManager.delete(roleId);\n \n         RoleTO roleTO = new RoleTO();\n         roleTO.setId(roleId);\n \n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n-                PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n-        roleTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n-\n-        rwfAdapter.delete(roleId);\n+        roleTO.getPropagationStatusTOs().addAll(statuses);\n \n         return roleTO;\n     }\n@@ -374,7 +317,9 @@ public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n         roleMod.getResourcesToRemove().addAll(resources);\n-        return binder.getRoleTO(rwfAdapter.update(roleMod).getResult());\n+        final Long updatedResult = provisioningManager.unlink(roleMod);\n+\n+        return binder.getRoleTO(updatedResult);\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n@@ -384,7 +329,7 @@ public RoleTO link(final Long roleId, final Collection<String> resources) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n         roleMod.getResourcesToAdd().addAll(resources);\n-        return binder.getRoleTO(rwfAdapter.update(roleMod).getResult());\n+        return binder.getRoleTO(provisioningManager.link(roleMod));\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n@@ -414,22 +359,10 @@ public RoleTO assign(\n     public RoleTO deprovision(final Long roleId, final Collection<String> resources) {\n         final SyncopeRole role = binder.getRoleFromId(roleId);\n \n-        final Set<String> noPropResourceName = role.getResourceNames();\n-        noPropResourceName.removeAll(resources);\n-\n-        final List<PropagationTask> tasks =\n-                propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(resources), noPropResourceName);\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n-                PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(roleId, resources);\n \n         final RoleTO updatedTO = binder.getRoleTO(role);\n-        updatedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        updatedTO.getPropagationStatusTOs().addAll(statuses);\n         return updatedTO;\n     }\n "},{"sha":"f905f2ce77ec39714faf32db3d620852a48e9ac8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RouteController.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.controller;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.RouteDAO;\n+import org.apache.syncope.core.provisioning.camel.SyncopeCamelContext;\n+import org.apache.syncope.core.rest.data.RouteDataBinder;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Component\n+public class RouteController extends AbstractTransactionalController<RouteTO> {\n+\n+    private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(RouteDataBinder.class);\n+\n+    @Autowired\n+    private RouteDAO routeDao;\n+\n+    @Autowired\n+    private RouteDataBinder binder;\n+\n+    @Autowired\n+    private SyncopeCamelContext context;\n+\n+    @PreAuthorize(\"hasRole('ROUTE_LIST')\")\n+    @Transactional(readOnly = true)\n+    public List<RouteTO> listRoutes() {\n+        List<RouteTO> routes = new ArrayList<RouteTO>();\n+        Iterator it = routeDao.findAll().iterator();\n+        while (it.hasNext()) {\n+            routes.add(binder.getRouteTO((CamelRoute) it.next()));\n+        }\n+        return routes;\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROUTE_READ')\")\n+    @Transactional(readOnly = true)\n+    public RouteTO readRoute(Long id) {\n+        CamelRoute route = routeDao.find(id);\n+        if (route == null) {\n+            throw new NotFoundException(\"Route with id=\" + id);\n+        }\n+\n+        return binder.getRouteTO(route);\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROUTE_UPDATE')\")\n+    public void updateRoute(RouteTO routeTO) {\n+\n+        CamelRoute route = routeDao.find(routeTO.getId());\n+        if (route == null) {\n+            throw new NotFoundException(\"Route with id=\" + route.getId());\n+        }\n+        route.setRouteContent(routeTO.getRouteContent());\n+        routeDao.save(route);\n+        LOG.info(\"UPDATING ROUTE WITH ID {} \", routeTO.getId());\n+        LOG.info(\"NEW ROUTE CONTENT {} \", routeTO.getRouteContent());\n+        context.reloadContext(routeDao, routeTO.getId());\n+    }\n+\n+    @Override\n+    protected RouteTO resolveReference(Method method, Object... args) throws UnresolvedReferenceException {\n+        throw new UnresolvedReferenceException();\n+    }\n+\n+}"},{"sha":"0607a5fe9fa16e55c48e257ff2e4c21496573316","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":48,"deletions":146,"changes":194,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n+import java.io.FileNotFoundException;\n+import java.io.PrintStream;\n import java.lang.reflect.Method;\n import java.security.AccessControlException;\n import java.util.ArrayList;\n@@ -27,6 +29,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import javax.annotation.Resource;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.mod.UserMod;\n@@ -39,9 +42,9 @@\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.AttributeMod;\n-import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.types.SubjectType;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.common.to.PropagationStatus;\n+import org.apache.syncope.core.provisioning.UserProvisioningManager;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n@@ -50,17 +53,11 @@\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n-import org.apache.syncope.core.propagation.PropagationByResource;\n-import org.apache.syncope.core.propagation.PropagationException;\n-import org.apache.syncope.core.propagation.PropagationReporter;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.data.AttributableTransformer;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n-import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.EntitlementUtil;\n-import org.apache.syncope.core.workflow.WorkflowResult;\n-import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -91,9 +88,6 @@ public class UserController extends AbstractSubjectController<UserTO, UserMod> {\n     @Autowired\n     protected UserDataBinder binder;\n \n-    @Autowired\n-    protected UserWorkflowAdapter uwfAdapter;\n-\n     @Autowired\n     protected PropagationManager propagationManager;\n \n@@ -103,6 +97,9 @@ public class UserController extends AbstractSubjectController<UserTO, UserMod> {\n     @Autowired\n     protected AttributableTransformer attrTransformer;\n \n+    @Resource(name = \"userProvisioningManager\")\n+    protected UserProvisioningManager provisioningManager;\n+\n     @Transactional(readOnly = true)\n     public boolean isSelfRegAllowed() {\n         return confDAO.find(\"selfRegistration.allowed\", \"false\").getValues().get(0).getBooleanValue();\n@@ -215,24 +212,10 @@ protected UserTO doCreate(final UserTO userTO, final boolean storePassword) {\n         UserTO actual = attrTransformer.transform(userTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n-        /*\n-         * Actual operations: workflow, propagation, notification\n-         */\n-        WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(actual, storePassword);\n-\n-        List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n-                created, actual.getPassword(), actual.getVirAttrs(), actual.getMemberships());\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n+        Map.Entry<Long, List<PropagationStatus>> created = provisioningManager.create(actual, storePassword);\n \n-        final UserTO savedTO = binder.getUserTO(created.getResult().getKey());\n-        savedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        final UserTO savedTO = binder.getUserTO(created.getKey());\n+        savedTO.getPropagationStatusTOs().addAll(created.getValue());\n         return savedTO;\n     }\n \n@@ -255,6 +238,7 @@ public UserTO update(final UserMod userMod) {\n         UserMod actual = attrTransformer.transform(userMod);\n         LOG.debug(\"Transformed: {}\", actual);\n \n+        //CAMEL\n         // SYNCOPE-501: check if there are memberships to be removed with virtual attributes assigned\n         boolean removeMemberships = false;\n         for (Long membershipId : actual.getMembershipsToRemove()) {\n@@ -269,68 +253,30 @@ public UserTO update(final UserMod userMod) {\n                 removeMemberships = true;\n             }\n         }\n-        //Actual operations: workflow, propagation, notification\n-        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = uwfAdapter.update(actual);\n-\n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            final PropagationByResource propByResVirAttr = binder.fillVirtual(\n-                    updated.getResult().getKey().getId(),\n-                    actual.getVirAttrsToRemove(),\n-                    actual.getVirAttrsToUpdate());\n-            // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is\n-            // not required, take care also of membership virtual attributes\n-            boolean addOrUpdateMemberships = false;\n-            for (MembershipMod membershipMod : actual.getMembershipsToAdd()) {\n-                if (!binder.fillMembershipVirtual(\n-                        updated.getResult().getKey().getId(),\n-                        membershipMod.getRole(),\n-                        null,\n-                        membershipMod.getVirAttrsToRemove(),\n-                        membershipMod.getVirAttrsToUpdate(),\n-                        false).isEmpty()) {\n-\n-                    addOrUpdateMemberships = true;\n-                }\n-            }\n-            tasks.addAll(!propByResVirAttr.isEmpty() || addOrUpdateMemberships || removeMemberships\n-                    ? propagationManager.getUserUpdateTaskIds(updated, false, null)\n-                    : Collections.<PropagationTask>emptyList());\n-        }\n \n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                getBean(PropagationReporter.class);\n+        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(actual, removeMemberships);\n \n-        if (!tasks.isEmpty()) {\n-            try {\n-                taskExecutor.execute(tasks, propagationReporter);\n-            } catch (PropagationException e) {\n-                LOG.error(\"Error propagation primary resource\", e);\n-                propagationReporter.onPrimaryResourceFailure(tasks);\n-            }\n-        }\n-\n-        final UserTO updatedTO = binder.getUserTO(updated.getResult().getKey().getId());\n-        updatedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        final UserTO updatedTO = binder.getUserTO(updated.getKey());\n+        updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return updatedTO;\n     }\n \n-    protected WorkflowResult<Long> setStatusOnWfAdapter(final SyncopeUser user, final StatusMod statusMod) {\n-        WorkflowResult<Long> updated;\n+    protected Map.Entry<Long, List<PropagationStatus>> setStatusOnWfAdapter(final SyncopeUser user,\n+            final StatusMod statusMod) {\n+        Map.Entry<Long, List<PropagationStatus>> updated;\n \n         switch (statusMod.getType()) {\n             case SUSPEND:\n-                updated = uwfAdapter.suspend(user.getId());\n+                updated = provisioningManager.suspend(user, statusMod);\n                 break;\n \n             case REACTIVATE:\n-                updated = uwfAdapter.reactivate(user.getId());\n+                updated = provisioningManager.reactivate(user, statusMod);\n                 break;\n \n             case ACTIVATE:\n             default:\n-                updated = uwfAdapter.activate(user.getId(), statusMod.getToken());\n+                updated = provisioningManager.activate(user, statusMod);\n                 break;\n \n         }\n@@ -343,30 +289,9 @@ protected WorkflowResult<Long> setStatusOnWfAdapter(final SyncopeUser user, fina\n     public UserTO status(final StatusMod statusMod) {\n         SyncopeUser user = binder.getUserFromId(statusMod.getId());\n \n-        WorkflowResult<Long> updated;\n-        if (statusMod.isOnSyncope()) {\n-            updated = setStatusOnWfAdapter(user, statusMod);\n-        } else {\n-            updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n-        }\n-\n-        // Resources to exclude from propagation\n-        Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n-        resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n-\n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                user, statusMod.getType() != StatusMod.ModType.SUSPEND, resourcesToBeExcluded);\n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propReporter.onPrimaryResourceFailure(tasks);\n-        }\n-\n-        final UserTO savedTO = binder.getUserTO(updated.getResult());\n-        savedTO.getPropagationStatusTOs().addAll(propReporter.getStatuses());\n+        Map.Entry<Long, List<PropagationStatus>> updated = setStatusOnWfAdapter(user, statusMod);\n+        final UserTO savedTO = binder.getUserTO(updated.getKey());\n+        savedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return savedTO;\n     }\n \n@@ -388,7 +313,7 @@ public void requestPasswordReset(final String username, final String securityAns\n             throw SyncopeClientException.build(ClientExceptionType.InvalidSecurityAnswer);\n         }\n \n-        uwfAdapter.requestPasswordReset(user.getId());\n+        provisioningManager.requestPasswordReset(user.getId());\n     }\n \n     @PreAuthorize(\"isAnonymous() or hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n@@ -398,18 +323,7 @@ public void confirmPasswordReset(final String token, final String password) {\n         if (user == null) {\n             throw new NotFoundException(\"User with token \" + token);\n         }\n-\n-        uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n-\n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propReporter.onPrimaryResourceFailure(tasks);\n-        }\n+        provisioningManager.confirmPasswordReset(user, token, password);\n     }\n \n     @PreAuthorize(\"isAuthenticated() \"\n@@ -435,23 +349,7 @@ public UserTO delete(final Long userId) {\n             throw sce;\n         }\n \n-        // Note here that we can only notify about \"delete\", not any other\n-        // task defined in workflow process definition: this because this\n-        // information could only be available after uwfAdapter.delete(), which\n-        // will also effectively remove user from db, thus making virtually\n-        // impossible by NotificationManager to fetch required user information\n-        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId);\n-\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n-\n-        uwfAdapter.delete(userId);\n+        List<PropagationStatus> statuses = provisioningManager.delete(userId);\n \n         final UserTO deletedTO;\n         SyncopeUser deleted = userDAO.find(userId);\n@@ -461,7 +359,7 @@ public UserTO delete(final Long userId) {\n         } else {\n             deletedTO = binder.getUserTO(userId);\n         }\n-        deletedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        deletedTO.getPropagationStatusTOs().addAll(statuses);\n \n         return deletedTO;\n     }\n@@ -526,7 +424,9 @@ public UserTO unlink(final Long userId, final Collection<String> resources) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n         userMod.getResourcesToRemove().addAll(resources);\n-        return binder.getUserTO(uwfAdapter.update(userMod).getResult().getKey().getId());\n+        Long updatedId = provisioningManager.unlink(userMod);\n+\n+        return binder.getUserTO(updatedId);\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -536,7 +436,7 @@ public UserTO link(final Long userId, final Collection<String> resources) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n         userMod.getResourcesToAdd().addAll(resources);\n-        return binder.getUserTO(uwfAdapter.update(userMod).getResult().getKey().getId());\n+        return binder.getUserTO(provisioningManager.link(userMod));\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -578,22 +478,10 @@ public UserTO assign(\n     public UserTO deprovision(final Long userId, final Collection<String> resources) {\n         final SyncopeUser user = binder.getUserFromId(userId);\n \n-        final Set<String> noPropResourceName = user.getResourceNames();\n-        noPropResourceName.removeAll(resources);\n-\n-        final List<PropagationTask> tasks =\n-                propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n-        final PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(userId, resources);\n \n         final UserTO updatedUserTO = binder.getUserTO(user);\n-        updatedUserTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n+        updatedUserTO.getPropagationStatusTOs().addAll(statuses);\n         return updatedUserTO;\n     }\n \n@@ -646,4 +534,18 @@ protected UserTO resolveReference(final Method method, final Object... args) thr\n \n         throw new UnresolvedReferenceException();\n     }\n+\n+    public PrintStream getDefinition() throws FileNotFoundException {\n+        /* String result = \"\";\n+         * if(provisioningManager instanceof CamelUserProvisioningManager){\n+         * List l = ((CamelUserProvisioningManager)provisioningManager).getRoutes();\n+         * Iterator<CamelRoute> it = l.iterator();\n+         *\n+         * while(it.hasNext()){\n+         * result += it.next().getRouteContent();\n+         * }\n+         * }\n+         * return new PrintStream(result); */\n+        return null;\n+    }\n }"},{"sha":"2d5a43391c2ea58c036f0523a1a78ab3f2238d87","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -52,9 +52,9 @@ public class ReportDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(ReportDataBinder.class);\n \n-    private static final String[] IGNORE_REPORT_PROPERTIES = {\"id\", \"reportlets\", \"executions\"};\n+    private static final String[] IGNORE_REPORT_PROPERTIES = { \"id\", \"reportlets\", \"executions\" };\n \n-    private static final String[] IGNORE_REPORT_EXECUTION_PROPERTIES = {\"id\", \"report\", \"execResult\"};\n+    private static final String[] IGNORE_REPORT_EXECUTION_PROPERTIES = { \"id\", \"report\", \"execResult\" };\n \n     @Autowired\n     private ReportExecDAO reportExecDAO;\n@@ -65,7 +65,7 @@ public class ReportDataBinder {\n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public Set<Class<Reportlet>> getAllReportletClasses() {\n         Set<Class<Reportlet>> reportletClasses = new HashSet<Class<Reportlet>>();\n "},{"sha":"824bd5214043c8cca2120252a66c59849868fdb6","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RouteDataBinder.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.data;\n+\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.util.BeanUtils;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RouteDataBinder {\n+\n+    private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(RouteDataBinder.class);\n+\n+    public RouteTO getRouteTO(CamelRoute route) {\n+\n+        RouteTO routeTO = new RouteTO();\n+        BeanUtils.copyProperties(route, routeTO);\n+        return routeTO;\n+    }\n+}"},{"sha":"e625533805f59d3fda99f7425b83e0a77e8fb15b","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/QueryResourceInfoComparator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -55,8 +55,8 @@ public int compare(final OperationResourceInfo oper1, final OperationResourceInf\n         return op1Counter == op2Counter\n                 ? 0\n                 : op1Counter < op2Counter\n-                ? 1\n-                : -1;\n+                        ? 1\n+                        : -1;\n     }\n \n     /**"},{"sha":"f3a9edf6e38ac4d034d2483baac8ca1c92712180","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -202,8 +202,8 @@ private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n         if (iee != null) {\n             ClientExceptionType exType =\n                     iee.getEntityClassSimpleName().endsWith(\"Policy\")\n-                    ? ClientExceptionType.InvalidPolicy\n-                    : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\n+                            ? ClientExceptionType.InvalidPolicy\n+                            : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\n \n             ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);\n             builder.header(RESTHeaders.ERROR_CODE, exType.getHeaderValue());"},{"sha":"b0a6c8ed063ea8a17cdd77514e34fd8b581521b6","filename":"core/src/main/java/org/apache/syncope/core/security/AsymmetricCipher.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -35,6 +35,7 @@\n public class AsymmetricCipher {\n \n     final private static String xform = \"RSA/NONE/PKCS1Padding\";\n+\n     final private static String algorithm = \"RSA\";\n \n     public static byte[] encrypt(byte[] inpBytes, PublicKey key) throws Exception {"},{"sha":"3c1b6fa489b3b2596800bcf66e06fe7ee5b06b93","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -70,7 +70,7 @@ public List<SchemaTO> getSchemaNames(final Long connInstanceId, final ConnInstan\n             final boolean includeSpecial) {\n \n         connInstanceTO.setId(connInstanceId);\n-        \n+\n         List<String> schemaNames = controller.getSchemaNames(connInstanceTO, includeSpecial);\n         List<SchemaTO> result = new ArrayList<SchemaTO>(schemaNames.size());\n         for (String name : schemaNames) {"},{"sha":"020414d44dc9b1e2b87c3e1a0b11a5203722ab76","filename":"core/src/main/java/org/apache/syncope/core/services/PolicyServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -96,7 +96,7 @@ public <T extends AbstractPolicyTO> T readGlobal(final PolicyType type) {\n     @Override\n     public <T extends AbstractPolicyTO> void update(final Long policyId, final T policyTO) {\n         policyTO.setId(policyId);\n-        \n+\n         switch (policyTO.getType()) {\n             case ACCOUNT:\n             case GLOBAL_ACCOUNT:"},{"sha":"29359f89688d47d7ab2274779dededb33e71fe91","filename":"core/src/main/java/org/apache/syncope/core/services/RouteServiceImpl.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.services;\n+\n+import static org.apache.syncope.core.services.AbstractServiceImpl.OPTIONS_ALLOW;\n+\n+import java.util.List;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.services.RouteService;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.core.provisioning.camel.CamelDetector;\n+import org.apache.syncope.core.rest.controller.RouteController;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class RouteServiceImpl extends AbstractServiceImpl implements RouteService {\n+    \n+    @Override\n+    public Response getOptions(final SubjectType kind) {\n+        String key;\n+        String value;\n+        if (kind == SubjectType.USER) {\n+            key = RESTHeaders.CAMEL_USER_PROVISIONING_MANAGER;\n+            value = Boolean.toString(CamelDetector.isCamelEnabledForUsers());\n+        } else {\n+            key = RESTHeaders.CAMEL_ROLE_PROVISIONING_MANAGER;\n+            value = Boolean.toString(CamelDetector.isCamelEnabledForRoles());\n+        }\n+        Response.ResponseBuilder builder = Response.ok().header(HttpHeaders.ALLOW, OPTIONS_ALLOW);\n+        if (key != null && value != null) {\n+            builder.header(key, value);\n+        }\n+        return builder.build();\n+    }\n+\n+    @Autowired\n+    private RouteController controller;\n+\n+    @Override\n+    public List<RouteTO> getRoutes(SubjectType kind) {\n+\n+        return controller.listRoutes();\n+    }\n+\n+    @Override\n+    public RouteTO getRoute(SubjectType kind, Long id) {\n+\n+        return controller.readRoute(id);\n+    }\n+\n+    @Override\n+    public void importRoute(SubjectType kind,Long id, RouteTO route) {\n+        controller.updateRoute(route);\n+    }\n+\n+}"},{"sha":"7ab3691071524ce65336d89324a29805cb686cbe","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -61,8 +61,8 @@ public Response getOptions(final SubjectType kind) {\n     public Response exportDefinition(final SubjectType kind) {\n         final MediaType accept =\n                 messageContext.getHttpHeaders().getAcceptableMediaTypes().contains(MediaType.APPLICATION_JSON_TYPE)\n-                ? MediaType.APPLICATION_JSON_TYPE\n-                : MediaType.APPLICATION_XML_TYPE;\n+                        ? MediaType.APPLICATION_JSON_TYPE\n+                        : MediaType.APPLICATION_XML_TYPE;\n \n         StreamingOutput sout = new StreamingOutput() {\n \n@@ -104,13 +104,23 @@ public void write(final OutputStream os) throws IOException {\n     public void importDefinition(final SubjectType kind, final String definition) {\n         final MediaType contentType =\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\n-                ? MediaType.APPLICATION_JSON_TYPE\n-                : MediaType.APPLICATION_XML_TYPE;\n+                        ? MediaType.APPLICATION_JSON_TYPE\n+                        : MediaType.APPLICATION_XML_TYPE;\n \n         if (kind == SubjectType.USER) {\n             controller.importUserDefinition(contentType, definition);\n         } else {\n             controller.importRoleDefinition(contentType, definition);\n         }\n     }\n+\n+    @Override\n+    public Response getRoute(Long id) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n+    }\n+\n+    @Override\n+    public Response getRoutes() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n+    }\n }"},{"sha":"0a809bec82159023292dc2222b44af55d990b7f9","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -162,7 +162,8 @@ <T extends AbstractAttributableTO> SyncDelta beforeDelete(\n      * Action to be executed after each local user / role synchronization.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by 'beforeProvision/beforeUpdate/beforeDelete')\n+     * @param delta retrieved synchronization information (may be modified by\n+     * 'beforeProvision/beforeUpdate/beforeDelete')\n      * @param subject synchronized local user / role\n      * @param result global synchronization results at the current synchronization step\n      * @throws JobExecutionException in case of generic failure"},{"sha":"7f1986a9ef98c227d87c2672e64b93c408fd608c","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncResult.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -28,9 +28,12 @@\n import org.apache.syncope.common.types.TraceLevel;\n \n public class SyncResult {\n+\n     public enum Status {\n+\n         SUCCESS,\n         FAILURE\n+\n     }\n \n     private String message;\n@@ -115,8 +118,8 @@ public String getReportString(final TraceLevel level) {\n             // All\n             return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, id, name,\n                     StringUtils.isBlank(message)\n-                    ? \"\"\n-                    : \"with message: \" + message);\n+                            ? \"\"\n+                            : \"with message: \" + message);\n         }\n     }\n "},{"sha":"7036ab70fa905343f53fd425adfe8cbbd618f849","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -114,7 +114,6 @@ protected final void doHandle(final long subjectId)\n         String operation = null;\n \n         // Try to read remote object (user / group) BEFORE any actual operation\n-\n         final String accountId = MappingUtil.getAccountIdValue(\n                 subject, profile.getSyncTask().getResource(), getMapping().getAccountIdItem());\n "},{"sha":"26ff30b000226eaa6dd3a59a18b2b9d088cf1825","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -316,7 +316,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n             } catch (Exception e) {\n                 final String msg = String.\n                         format(\"Connector instance bean for resource %s and connInstance %s not found\",\n-                        syncTask.getResource(), syncTask.getResource().getConnector());\n+                                syncTask.getResource(), syncTask.getResource().getConnector());\n \n                 throw new JobExecutionException(msg, e);\n             }"},{"sha":"0c270042317a33e8af128e8a8158055fe8476ca6","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncopeResultHandler.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -18,13 +18,16 @@\n  */\n package org.apache.syncope.core.sync.impl;\n \n+import javax.annotation.Resource;\n import org.apache.syncope.core.sync.SyncProfile;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.notification.NotificationManager;\n import org.apache.syncope.core.persistence.beans.AbstractSyncTask;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.provisioning.RoleProvisioningManager;\n+import org.apache.syncope.core.provisioning.UserProvisioningManager;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.sync.AbstractSyncActions;\n@@ -40,7 +43,7 @@\n      * Logger.\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSyncopeResultHandler.class);\n-    \n+\n     /**\n      * User data binder.\n      */\n@@ -100,6 +103,12 @@\n      */\n     protected SyncProfile<T, A> profile;\n \n+    @Resource(name = \"userProvisioningManager\")\n+    protected UserProvisioningManager userProvisioningManager;\n+\n+    @Resource(name = \"roleProvisioningManager\")\n+    protected RoleProvisioningManager roleProvisioningManager;\n+\n     public void setProfile(final SyncProfile<T, A> profile) {\n         this.profile = profile;\n     }"},{"sha":"2304fa48788fef4c195f31ef29a6af6db4bdb4be","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPPasswordSyncActions.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -66,23 +66,23 @@ public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n \n         return delta;\n     }\n-    \n+\n     @Transactional(readOnly = true)\n     @Override\n     public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject,\n             final K subjectMod) throws JobExecutionException {\n-        \n+\n         if (subjectMod instanceof UserMod) {\n-            String modPassword = ((UserMod)subjectMod).getPassword();\n+            String modPassword = ((UserMod) subjectMod).getPassword();\n             parseEncodedPassword(modPassword);\n         }\n-        \n+\n         return delta;\n     }\n-    \n+\n     private void parseEncodedPassword(String password) {\n         if (password != null && password.startsWith(\"{\")) {\n             int closingBracketIndex = password.indexOf('}');"},{"sha":"4e83e66283d0bb41a214ea46a51ccf294fa405af","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RoleSyncResultHandler.java","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n@@ -85,22 +86,12 @@ protected AbstractSubjectTO create(\n \n         RoleTO roleTO = RoleTO.class.cast(subjectTO);\n \n-        WorkflowResult<Long> created = rwfAdapter.create(roleTO);\n-        AttributeTO roleOwner = roleTO.getAttrMap().get(StringUtils.EMPTY);\n-        if (roleOwner != null) {\n-            roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n-        }\n-\n-        EntitlementUtil.extendAuthContext(created.getResult());\n-\n-        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n-                roleTO.getVirAttrs(), Collections.singleton(profile.getSyncTask().getResource().getName()));\n-\n-        taskExecutor.execute(tasks);\n+        Map.Entry<Long, List<PropagationStatus>> created = roleProvisioningManager.createInSync(roleTO, roleOwnerMap,\n+                Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n-        roleTO = roleDataBinder.getRoleTO(created.getResult());\n+        roleTO = roleDataBinder.getRoleTO(created.getKey());\n \n-        result.setId(created.getResult());\n+        result.setId(created.getKey());\n         result.setName(getName(subjectTO));\n \n         return roleTO;\n@@ -135,25 +126,21 @@ protected AbstractSubjectTO update(\n \n         RoleMod roleMod = RoleMod.class.cast(subjectMod);\n \n-        final WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n+        Map.Entry<Long, List<PropagationStatus>> updated = roleProvisioningManager.update(roleMod);\n+\n+        //moved after role provisioning manager\n         String roleOwner = null;\n         for (AttributeMod attrMod : roleMod.getAttrsToUpdate()) {\n             if (attrMod.getSchema().isEmpty()) {\n                 roleOwner = attrMod.getValuesToBeAdded().iterator().next();\n             }\n         }\n         if (roleOwner != null) {\n-            roleOwnerMap.put(updated.getResult(), roleOwner);\n+            roleOwnerMap.put(updated.getKey(), roleOwner);\n         }\n \n-        List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n-                roleMod.getVirAttrsToRemove(),\n-                roleMod.getVirAttrsToUpdate(),\n-                Collections.singleton(profile.getSyncTask().getResource().getName()));\n-\n-        taskExecutor.execute(tasks);\n+        final RoleTO after = roleDataBinder.getRoleTO(updated.getKey());\n \n-        final RoleTO after = roleDataBinder.getRoleTO(updated.getResult());\n         result.setName(getName(after));\n \n         return after;\n@@ -183,6 +170,6 @@ protected void delete(final Long id) {\n             LOG.error(\"Could not propagate user \" + id, e);\n         }\n \n-        rwfAdapter.delete(id);\n+        roleProvisioningManager.delete(id);\n     }\n }"},{"sha":"680272635176240035b9eb0aabfd24b080a7c12c","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/UserSyncResultHandler.java","status":"modified","additions":54,"deletions":57,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.mod.AbstractSubjectMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n+import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n@@ -80,19 +81,13 @@ protected AbstractSubjectTO create(\n         UserTO userTO = UserTO.class.cast(subjectTO);\n \n         Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getSyncTask());\n-        WorkflowResult<Map.Entry<Long, Boolean>> created =\n-                uwfAdapter.create(userTO, true, enabled, true);\n-\n-        List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(created,\n-                userTO.getPassword(), userTO.getVirAttrs(),\n-                Collections.singleton(profile.getSyncTask().getResource().getName()),\n-                userTO.getMemberships());\n-\n-        taskExecutor.execute(tasks);\n+        //Delegate User Workflow Creation and its Propagation to provisioning manager\n+        Map.Entry<Long, List<PropagationStatus>> created = userProvisioningManager.create(userTO, true, true, enabled,\n+                Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n-        userTO = userDataBinder.getUserTO(created.getResult().getKey());\n+        userTO = userDataBinder.getUserTO(created.getKey());\n \n-        result.setId(created.getResult().getKey());\n+        result.setId(created.getKey());\n \n         return userTO;\n     }\n@@ -126,51 +121,53 @@ protected AbstractSubjectTO update(\n \n         final UserMod userMod = UserMod.class.cast(subjectMod);\n \n-        WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n-        try {\n-            updated = uwfAdapter.update(userMod);\n-        } catch (Exception e) {\n-            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", before.getId(), e);\n-\n-            result.setStatus(SyncResult.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\"\n-                    + ExceptionUtils.getRootCauseMessage(e));\n-\n-            updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n-                    new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false),\n-                    new PropagationByResource(),\n-                    new HashSet<String>());\n-        }\n-\n+        /* WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n+         * try {\n+         * updated = uwfAdapter.update(userMod);\n+         * } catch (Exception e) {\n+         * LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", before.getId(), e);\n+         *\n+         * result.setStatus(SyncResult.Status.FAILURE);\n+         * result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\"\n+         * + ExceptionUtils.getRootCauseMessage(e));\n+         *\n+         * updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+         * new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false),\n+         * new PropagationByResource(),\n+         * new HashSet<String>());\n+         * } */\n         final Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getSyncTask());\n-        if (enabled != null) {\n-            SyncopeUser user = userDAO.find(before.getId());\n-\n-            WorkflowResult<Long> enableUpdate = null;\n-            if (user.isSuspended() == null) {\n-                enableUpdate = uwfAdapter.activate(before.getId(), null);\n-            } else if (enabled && user.isSuspended()) {\n-                enableUpdate = uwfAdapter.reactivate(before.getId());\n-            } else if (!enabled && !user.isSuspended()) {\n-                enableUpdate = uwfAdapter.suspend(before.getId());\n-            }\n-\n-            if (enableUpdate != null) {\n-                if (enableUpdate.getPropByRes() != null) {\n-                    updated.getPropByRes().merge(enableUpdate.getPropByRes());\n-                    updated.getPropByRes().purge();\n-                }\n-                updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n-            }\n-        }\n-\n-        final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                updated, updated.getResult().getKey().getPassword() != null,\n-                Collections.singleton(profile.getSyncTask().getResource().getName()));\n-\n-        taskExecutor.execute(tasks);\n-\n-        return userDataBinder.getUserTO(updated.getResult().getKey().getId());\n+        /* if (enabled != null) {\n+         * SyncopeUser user = userDAO.find(before.getId());\n+         *\n+         * WorkflowResult<Long> enableUpdate = null;\n+         * if (user.isSuspended() == null) {\n+         * enableUpdate = uwfAdapter.activate(before.getId(), null);\n+         * } else if (enabled && user.isSuspended()) {\n+         * enableUpdate = uwfAdapter.reactivate(before.getId());\n+         * } else if (!enabled && !user.isSuspended()) {\n+         * enableUpdate = uwfAdapter.suspend(before.getId());\n+         * }\n+         *\n+         * if (enableUpdate != null) {\n+         * if (enableUpdate.getPropByRes() != null) {\n+         * updated.getPropByRes().merge(enableUpdate.getPropByRes());\n+         * updated.getPropByRes().purge();\n+         * }\n+         * updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n+         * }\n+         * }\n+         *\n+         * final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+         * updated, updated.getResult().getKey().getPassword() != null,\n+         * Collections.singleton(profile.getSyncTask().getResource().getName()));\n+         *\n+         * taskExecutor.execute(tasks); */\n+\n+        Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.updateInSync(userMod, before.getId(),\n+                result, enabled, Collections.singleton(profile.getSyncTask().getResource().getName()));\n+\n+        return userDataBinder.getUserTO(updated.getKey());\n     }\n \n     @Override\n@@ -191,8 +188,8 @@ protected void deprovision(\n     @Override\n     protected void delete(final Long id) {\n         try {\n-            taskExecutor.execute(\n-                    propagationManager.getUserDeleteTaskIds(id, profile.getSyncTask().getResource().getName()));\n+            userProvisioningManager.\n+                    delete(id, Collections.<String>singleton(profile.getSyncTask().getResource().getName()));\n         } catch (Exception e) {\n             // A propagation failure doesn't imply a synchronization failure.\n             // The propagation exception status will be reported into the propagation task execution."},{"sha":"0c148b19d8a8ed80198f63beb70d6c416ed96043","filename":"core/src/main/java/org/apache/syncope/core/util/AttributeDeserializer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -77,8 +77,8 @@ public Attribute deserialize(final JsonParser jp, final DeserializationContext c\n         return Uid.NAME.equals(name)\n                 ? new Uid(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n                 : Name.NAME.equals(name)\n-                ? new Name(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n-                : AttributeBuilder.build(name, values);\n+                        ? new Name(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n+                        : AttributeBuilder.build(name, values);\n     }\n \n }"},{"sha":"ccf2e86ca36dd7ad1336080510acb577bb7fa547","filename":"core/src/main/java/org/apache/syncope/core/util/ContentLoaderHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -57,16 +57,16 @@ private Object[] getParameters(final String tableName, final Attributes attrs) {\n         Map<String, Integer> colTypes = jdbcTemplate.query(\"SELECT * FROM \" + tableName,\n                 new ResultSetExtractor<Map<String, Integer>>() {\n \n-            @Override\n-            public Map<String, Integer> extractData(final ResultSet rs) throws SQLException, DataAccessException {\n-                Map<String, Integer> colTypes = new HashMap<String, Integer>();\n-                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n-                    colTypes.put(rs.getMetaData().getColumnName(i).toUpperCase(),\n-                            rs.getMetaData().getColumnType(i));\n-                }\n-                return colTypes;\n-            }\n-        });\n+                    @Override\n+                    public Map<String, Integer> extractData(final ResultSet rs) throws SQLException, DataAccessException {\n+                        Map<String, Integer> colTypes = new HashMap<String, Integer>();\n+                        for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n+                            colTypes.put(rs.getMetaData().getColumnName(i).toUpperCase(),\n+                                    rs.getMetaData().getColumnType(i));\n+                        }\n+                        return colTypes;\n+                    }\n+                });\n \n         Object[] parameters = new Object[attrs.getLength()];\n         for (int i = 0; i < attrs.getLength(); i++) {"},{"sha":"397d7b01f586b09ed76605ae32839df8b95168d6","filename":"core/src/main/java/org/apache/syncope/core/util/RouteManager.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.core.persistence.beans.CamelRoute;\n+\n+public class RouteManager {\n+\n+    private static List<CamelRoute> routelist;\n+\n+    public static void addElement(CamelRoute route) {\n+        if (routelist == null) {\n+            routelist = new ArrayList<CamelRoute>();\n+        }\n+        routelist.add(route);\n+    }\n+\n+    public static List<CamelRoute> getRoutes() {\n+        if (routelist == null) {\n+            routelist = new ArrayList<CamelRoute>();\n+        }\n+        return routelist;\n+    }\n+}"},{"sha":"b11d0a5ce88b90c91984667c9a990dbc4f1e9f5a","filename":"core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -23,21 +23,21 @@\n import org.apache.commons.lang3.RandomStringUtils;\n \n public class SecureRandomUtil {\n-    \n+\n     private static final SecureRandom RANDOM = new SecureRandom();\n \n     public static String generateRandomPassword(final int tokenLength) {\n         return RandomStringUtils.random(tokenLength, 0, 0, true, false, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomLetter() {\n         return RandomStringUtils.random(1, 0, 0, true, false, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomNumber() {\n         return RandomStringUtils.random(1, 0, 0, false, true, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomSpecialCharacter(char[] characters) {\n         return RandomStringUtils.random(1, 0, 0, false, false, characters, RANDOM);\n     }"},{"sha":"30a0324ab53b1140d62d5eb7e0d5480116538418","filename":"core/src/main/java/org/apache/syncope/core/util/SyncTokenDeserializer.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -42,19 +42,19 @@ public SyncToken deserialize(final JsonParser jp, final DeserializationContext c\n             value = node.isNull()\n                     ? null\n                     : node.isBoolean()\n-                    ? node.asBoolean()\n-                    : node.isDouble()\n-                    ? node.asDouble()\n-                    : node.isLong()\n-                    ? node.asLong()\n-                    : node.isInt()\n-                    ? node.asInt()\n-                    : node.asText();\n-            \n+                            ? node.asBoolean()\n+                            : node.isDouble()\n+                                    ? node.asDouble()\n+                                    : node.isLong()\n+                                            ? node.asLong()\n+                                            : node.isInt()\n+                                                    ? node.asInt()\n+                                                    : node.asText();\n+\n             if (value instanceof String) {\n-                byte[] bytes = ((String)value).getBytes();\n+                byte[] bytes = ((String) value).getBytes();\n                 if (Base64.isBase64(bytes)) {\n-                   value = Base64.decode(bytes);\n+                    value = Base64.decode(bytes);\n                 }\n             }\n         }"},{"sha":"2f033f26241d5dbdd44b922c907e27884b7d238e","filename":"core/src/main/java/org/apache/syncope/core/util/jexl/JexlUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -134,8 +134,8 @@ public static JexlContext addFieldsToContext(final Object attributable, final Je\n                         context.set(fieldName, fieldValue == null\n                                 ? \"\"\n                                 : (type.equals(Date.class)\n-                                ? DataFormat.format((Date) fieldValue, false)\n-                                : fieldValue));\n+                                        ? DataFormat.format((Date) fieldValue, false)\n+                                        : fieldValue));\n \n                         LOG.debug(\"Add field {} with value {}\", fieldName, fieldValue);\n "},{"sha":"512a240c765824d11bd09141291b1ecf51a2e8f0","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowUserSuspender.java","status":"modified","additions":6,"deletions":23,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -21,12 +21,14 @@\n import java.util.AbstractMap.SimpleEntry;\n import java.util.List;\n import java.util.Map;\n+import javax.annotation.Resource;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.policy.UserSuspender;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n+import org.apache.syncope.core.provisioning.UserProvisioningManager;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -38,14 +40,8 @@ public class WorkflowUserSuspender implements UserSuspender {\n \n     private static final Logger LOG = LoggerFactory.getLogger(WorkflowUserSuspender.class);\n \n-    @Autowired\n-    private UserWorkflowAdapter uwfAdapter;\n-\n-    @Autowired\n-    private PropagationManager propagationManager;\n-\n-    @Autowired\n-    private PropagationTaskExecutor taskExecutor;\n+    @Resource(name = \"userProvisioningManager\")\n+    protected UserProvisioningManager provisioningManager;\n \n     @Override\n     public void suspend(final SyncopeUser user, final boolean suspend) {\n@@ -55,21 +51,8 @@ public void suspend(final SyncopeUser user, final boolean suspend) {\n             // reduce failed logins number to avoid multiple request\n             user.setFailedLogins(user.getFailedLogins() - 1);\n \n-            // disable user\n-            final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n-\n-            // propagate suspension if and only if it is required by policy\n-            if (suspend) {\n-                UserMod userMod = new UserMod();\n-                userMod.setId(updated.getResult());\n-\n-                final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                        new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n-                                new SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n-                                updated.getPropByRes(), updated.getPerformedTasks()));\n-\n-                taskExecutor.execute(tasks);\n-            }\n+            // disable user and propagate suspension if and only if it is required by policy          \n+            provisioningManager.innerSuspend(user, suspend);\n         } catch (Exception e) {\n             LOG.error(\"Error during user suspension\", e);\n         }"},{"sha":"b45953629b95084916777bab28967081bfb34c06","filename":"core/src/main/java/org/apache/syncope/core/workflow/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.workflow;\n-"},{"sha":"b222100ca1c2912b74a36e1a64bb23eff0c64c18","filename":"core/src/main/java/org/apache/syncope/core/workflow/role/AbstractRoleWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -30,7 +30,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public abstract class AbstractRoleWorkflowAdapter implements RoleWorkflowAdapter {\n \n     @Autowired"},{"sha":"8fbc25cc6990d8b7b4fe7be2e0cf98393c060891","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/AbstractUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.core.workflow.user;\n \n import java.util.Map;\n-import java.util.Map.Entry;\n import org.apache.syncope.common.mod.UserMod;\n-import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n@@ -61,13 +59,6 @@ public Class<? extends WorkflowInstanceLoader> getLoaderClass() {\n         return null;\n     }\n \n-    @Override\n-    public WorkflowResult<Entry<Long, Boolean>> create(final UserTO userTO, final boolean storePassword)\n-            throws UnauthorizedRoleException, WorkflowException {\n-\n-        return create(userTO, false, storePassword);\n-    }\n-\n     protected abstract WorkflowResult<Long> doActivate(SyncopeUser user, String token) throws WorkflowException;\n \n     @Override\n@@ -126,7 +117,7 @@ public void requestPasswordReset(final Long userId) throws UnauthorizedRoleExcep\n         doRequestPasswordReset(dataBinder.getUserFromId(userId));\n     }\n \n-    protected abstract void doConfirmPasswordReset(SyncopeUser user, String token, String password) \n+    protected abstract void doConfirmPasswordReset(SyncopeUser user, String token, String password)\n             throws WorkflowException;\n \n     @Override"},{"sha":"21573019e04ebdb0ffd9c723d4fec8ede81534f4","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -228,4 +228,10 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n \n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n+\n+    @Override\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws\n+            UnauthorizedRoleException, WorkflowException {\n+        return create(userTO, false, true);\n+    }\n }"},{"sha":"0d48227b559526ae530759c1c1ffe69a44ecaf30","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/UserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -152,7 +152,7 @@ WorkflowResult<Map.Entry<UserMod, Boolean>> update(UserMod userMod)\n      * @throws UnauthorizedRoleException authorization exception\n      * @throws WorkflowException workflow exception\n      */\n-    void confirmPasswordReset(Long userId, String token, String password) \n+    void confirmPasswordReset(Long userId, String token, String password)\n             throws UnauthorizedRoleException, WorkflowException;\n \n     /**"},{"sha":"adeb9f80b785c95e13362d46b753cb85a96a3c7b","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -883,4 +883,10 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n \n         return new WorkflowResult<UserMod>(userMod, propByRes, postTasks);\n     }\n+\n+    @Override\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws\n+            UnauthorizedRoleException, WorkflowException {\n+        return create(userTO, false, storePassword);\n+    }\n }"},{"sha":"f6702589222f174211e36ae80f80f414a55bf650","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeGroupManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -106,7 +106,7 @@ public void insertGroup(final Group group) {\n     public void updateGroup(final Group updatedGroup) {\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     @Override\n     public boolean isNewGroup(final Group group) {\n         throw new UnsupportedOperationException();"},{"sha":"9285ed9f7bba2f9c6a69be575cff48d7c12cbe84","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeUserManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -121,7 +121,7 @@ public boolean isNewUser(final User user) {\n     public void updateUser(final User updatedUser) {\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     @Override\n     public Picture getUserPicture(final String string) {\n         throw new UnsupportedOperationException();"},{"sha":"7cebf73771b9035a4bcb18ebd265816f87206544","filename":"core/src/main/resources/camelRoute.xml","status":"added","additions":468,"deletions":0,"changes":468,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,468 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://camel.apache.org/schema/spring\n+                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n+ \n+  <!--\n+      The default routes define each task involved in user creation:\n+      main operations consist in user workflow creation and its propagation.         \n+  -->\n+  <routeContext id=\"defaultRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">    \n+        \n+    <!--\n+        CREATE USER\n+        This is the entry point of the route and is involved in accepting\n+        the UserTO. When it arrives, the user workflow is created. If the\n+        creation is successfull, the result is sent to propagation, otherwise\n+        if an exception was raised, the exception has to be returned to the\n+        caller. The property actual allows to store the received UserTO in\n+        order to use it later.\n+    -->\n+        \n+    <route id=\"createUser\">\n+      <from uri=\"direct:createUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"create(${body},${property.disablePwdPolicyCheck},\n+                                 ${property.enabled},${property.storePassword})\"/>\n+        <process ref=\"defaultUserCreatePropagation\" />\n+        <to uri=\"direct:createPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+        \n+    <!--\n+        The propagation route deals with propagation of created user. In this\n+        case we used a custom processor to perform this task: it means that\n+        a custom java class contains the propagation strategy.\n+    -->\n+       \n+    <!--\n+        UPDATE USER\n+    -->\n+    <route id=\"updateUser\">\n+      <from uri=\"direct:updateUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultUserUpdatePropagation\" />\n+        <to uri=\"direct:updatePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updatePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+\n+                \n+    <!--\n+        UPDATE SYNC USER\n+    -->\n+    <route id=\"updateSyncUser\">\n+      <from uri=\"direct:updateSyncUser\"/>            \n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <to uri=\"direct:syncUserStatus\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <route id=\"syncUserStatus\">\n+      <from uri=\"direct:syncUserStatus\"/>\n+      <process ref=\"userStatusOnSync\" />\n+      <process ref=\"defaultUserUpdateInSyncPropagation\" />\n+      <to uri=\"direct:updateSyncPort\"/>\n+    </route>\n+    <!--\n+        DELETE USER\n+    -->\n+    <route id=\"deleteUser\">\n+      <from uri=\"direct:deleteUser\"/>\n+      <doTry>\n+        <process ref=\"defaultUserDeletePropagation\" />\n+        <bean ref=\"uwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deletePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deletePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkUser\">\n+      <from uri=\"direct:unlinkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        LINK USER\n+    -->\n+        \n+    <route id=\"linkUser\">\n+      <from uri=\"direct:linkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!-- \n+        ACTIVATE USER\n+    -->\n+    <route id=\"activateUser\">\n+      <from uri=\"direct:activateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${property.token})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        REACTIVATE USER\n+    -->\n+    <route id=\"reactivateUser\">\n+      <from uri=\"direct:reactivateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        SUSPEND USER\n+    -->\n+    <route id=\"suspendUser\">\n+      <from uri=\"direct:suspendUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+        \n+    <!-- \n+        STATUS PROPAGATION\n+    -->\n+        \n+    <route id=\"statusUser\">\n+      <from uri=\"direct:statusUser\"/>            \n+      <process ref=\"defaultUserStatusPropagation\" />\n+      <to uri=\"direct:statusPort\"/>              \n+    </route>\n+        \n+        \n+    <!--\n+        DEPROVISION USER\n+    -->\n+    <route id=\"deprovisionUser\">\n+      <from uri=\"direct:deprovisionUser\"/>            \n+      <process ref=\"defaultUserDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionPort\"/>              \n+    </route>\n+        \n+    <!--\n+        CREATE ROLE\n+    -->\n+        \n+    <route id=\"createRole\">\n+      <from uri=\"direct:createRole\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreatePropagation\" />\n+        <to uri=\"direct:createRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+               \n+    <!--\n+        CREATE ROLE SYNC\n+    -->\n+    <route id=\"createRoleSync\">\n+      <from uri=\"direct:createRoleSync\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreateSyncPropagation\" />\n+        <to uri=\"direct:createRoleSyncPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRoleSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+        \n+         \n+    <!--\n+        UPDATE ROLE\n+    -->\n+    <route id=\"updateRole\">\n+      <from uri=\"direct:updateRole\"/>\n+      <setProperty propertyName=\"subjectMod\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultRoleUpdatePropagation\" />\n+        <to uri=\"direct:updateRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+               \n+    <!--\n+        DELETE ROLE\n+    -->\n+    <route id=\"deleteRole\">\n+      <from uri=\"direct:deleteRole\"/>\n+      <doTry>\n+        <process ref=\"defaultRoleDeletePropagation\" />\n+        <bean ref=\"rwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deleteRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deleteRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkRole\">\n+      <from uri=\"direct:unlinkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        LINK USER\n+    -->\n+        \n+    <route id=\"linkRole\">\n+      <from uri=\"direct:linkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        DEPROVISION ROLE\n+    -->\n+    <route id=\"deprovisionRole\">\n+      <from uri=\"direct:deprovisionRole\"/>            \n+      <process ref=\"defaultRoleDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionRolePort\"/>              \n+    </route>\n+        \n+    <!--\n+        SUSPEND USER AFTER POLICY VIOLATION\n+    -->\n+        \n+    <route id=\"suspendUserWF\">\n+      <from uri=\"direct:suspendUserWF\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <process ref=\"defaultUserWFSuspendPropagation\"/>\n+        <to uri=\"direct:suspendWFPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:suspendWFPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+        \n+    <!--\n+        REQUEST PASSWORD RESET ROUTE\n+    -->\n+        \n+    <route id=\"requestPwdReset\">\n+      <from uri=\"direct:requestPwdReset\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"requestPasswordReset(${body})\"/>\n+        <to uri=\"direct:requestPwdResetPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:requestPwdResetPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+    <!--\n+        CONFIRM PASSWORD RESET\n+    -->\n+    <route id=\"confirmPwdReset\">\n+      <from uri=\"direct:confirmPwdReset\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"confirmPasswordReset(${property.userId},${property.token},${property.password})\"/>\n+        <process ref=\"defaultUserConfirmPwdResetPropagation\" />\n+        <to uri=\"direct:confirmPwdResetPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:confirmPwdResetPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+  </routeContext>\n+  <bean id=\"defaultUserCreatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserCreatePropagation\"/>\n+  <bean id=\"defaultUserUpdatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserUpdatePropagation\"/>    \n+  <bean id=\"userStatusOnSync\" class=\"org.apache.syncope.core.provisioning.camel.processors.UserStatusOnSync\"/>\n+  <bean id=\"defaultUserUpdateInSyncPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserUpdateInSyncPropagation\"/>\n+  <bean id=\"defaultUserDeletePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserDeletePropagation\"/>    \n+  <bean id=\"defaultUserDeprovisionPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserDeprovisionPropagation\"/>    \n+  <bean id=\"defaultUserWFSuspendPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserWFSuspendPropagation\"/>\n+  <bean id=\"defaultUserStatusPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserStatusPropagation\"/>\n+  <bean id=\"defaultUserConfirmPwdResetPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserConfirmPwdResetPropagation\"/>\n+  <bean id=\"defaultRoleCreatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleCreatePropagation\"/>\n+  <bean id=\"defaultRoleCreateSyncPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleCreateSyncPropagation\"/>\n+  <bean id=\"defaultRoleUpdatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleUpdatePropagation\"/>\n+  <bean id=\"defaultRoleDeletePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleDeletePropagation\"/>    \n+  <bean id=\"defaultRoleDeprovisionPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleDeprovisionPropagation\"/>            \n+</beans>"},{"sha":"683ce46e5e98cba5bd9c21f352e905063bd00a50","filename":"core/src/main/resources/content.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -179,5 +179,8 @@ under the License.\n   <Entitlement name=\"SECURITY_QUESTION_CREATE\"/>\n   <Entitlement name=\"SECURITY_QUESTION_UPDATE\"/>\n   <Entitlement name=\"SECURITY_QUESTION_DELETE\"/>\n+  <Entitlement name=\"ROUTE_UPDATE\"/>\n+  <Entitlement name=\"ROUTE_LIST\"/>\n+  <Entitlement name=\"ROUTE_READ\"/>\n \n </dataset>"},{"sha":"9742039b3c223439789d109a648c5fa14d3b5187","filename":"core/src/main/resources/coreContext.xml","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -20,13 +20,16 @@ under the License.\n <beans xmlns=\"http://www.springframework.org/schema/beans\" \n        xmlns:context=\"http://www.springframework.org/schema/context\"\n        xmlns:task=\"http://www.springframework.org/schema/task\"\n+       xmlns:camel=\"http://camel.apache.org/schema/spring\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/task\n-                           http://www.springframework.org/schema/task/spring-task.xsd\">\n+                           http://www.springframework.org/schema/task/spring-task.xsd\n+                           http://camel.apache.org/schema/spring\n+                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n \n   <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"order\" value=\"1\"/>\n@@ -40,6 +43,7 @@ under the License.\n         <value>file:${conf.directory}/connid.properties</value>\n         <value>file:${conf.directory}/workflow.properties</value>\n         <value>file:${conf.directory}/mail.properties</value>\n+        <value>file:${conf.directory}/provisioning.properties</value>\n       </list>\n     </property>\n   </bean>\n@@ -52,6 +56,7 @@ under the License.\n         <value>classpath:connid.properties</value>\n         <value>classpath:workflow.properties</value>\n         <value>classpath:mail.properties</value>\n+        <value>classpath:provisioning.properties</value>\n       </list>\n     </property>\n   </bean>\n@@ -72,6 +77,7 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.core.workflow\">\n     <context:exclude-filter type=\"regex\" expression=\".*\\.activiti\\..*\"/>\n   </context:component-scan>\n+  <context:component-scan base-package=\"org.apache.syncope.core.provisioning\"/>\n \n   <bean id=\"nonJPAdbInitializer\" class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n     <property name=\"dataSource\" ref=\"dataSource\"/>\n@@ -145,4 +151,8 @@ under the License.\n     <constructor-arg value=\"60\"/>\n     <constructor-arg value=\"5000\"/>\n   </bean>\n+  <!-- Camel Context Beans Definition -->   \n+  <bean id=\"userProvisioningManager\" class=\"${userProvisioningManager}\"/>\n+  <bean id=\"roleProvisioningManager\" class=\"${roleProvisioningManager}\"/>\n+  <bean id=\"routeController\" class=\"org.apache.syncope.core.rest.controller.RouteController\"/>\n </beans>"},{"sha":"8fe48641cbdb2d74b6bfc7fc0f6c42238b838c43","filename":"core/src/main/resources/persistenceContextEMFactory.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -37,8 +37,8 @@ under the License.\n     <property name=\"jpaPropertyMap\">\n       <map>\n         <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>\n-        <entry key=\"openjpa.ConnectionFactoryProperties\" \n-               value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n+ <entry key=\"openjpa.ConnectionFactoryProperties\" \n+        value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n                 \n         <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n         <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>"},{"sha":"b55bd0645626204239acf8c0459718f560dee8e8","filename":"core/src/main/resources/provisioning.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+userProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelUserProvisioningManager\n+roleProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelRoleProvisioningManager"},{"sha":"c123d514fff660a69ebf0554bbad1535e31942ea","filename":"core/src/main/resources/report/staticReportlet2fo.xsl","status":"modified","additions":49,"deletions":49,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -23,62 +23,62 @@ under the License.\n                 xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n                 version=\"1.0\">\n \n-    <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n \n-        <fo:block font-size=\"14pt\" font-weight=\"bold\" space-after=\"0.5cm\">Reportlet: \n-            <xsl:value-of select=\"@name\"/>\n-        </fo:block>\n+    <fo:block font-size=\"14pt\" font-weight=\"bold\" space-after=\"0.5cm\">Reportlet: \n+      <xsl:value-of select=\"@name\"/>\n+    </fo:block>\n \n-        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">String value: \n-                <xsl:value-of select=\"string/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">String value: \n+        <xsl:value-of select=\"string/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Long value: \n-                <xsl:value-of select=\"long/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Long value: \n+        <xsl:value-of select=\"long/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Double value: \n-                <xsl:value-of select=\"double/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Double value: \n+        <xsl:value-of select=\"double/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Date value: \n-                <xsl:value-of select=\"date/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Date value: \n+        <xsl:value-of select=\"date/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Enum value: \n-                <xsl:value-of select=\"enum/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Enum value: \n+        <xsl:value-of select=\"enum/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(list) &gt; 0\">\n-            <fo:block font-size=\"11pt\">List values:</fo:block>\n+    <xsl:if test=\"string-length(list) &gt; 0\">\n+      <fo:block font-size=\"11pt\">List values:</fo:block>\n             \n-            <fo:list-block provisional-label-separation=\"4mm\" provisional-distance-between-starts=\"2mm\">\n-                <xsl:for-each select=\"list/string\">\n-                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-                        <fo:list-item>\n-                            <fo:list-item-label end-indent=\"label-end()\">\n-                                <fo:block>&#x2022;</fo:block>\n-                            </fo:list-item-label>\n-                            <fo:list-item-body start-indent=\"body-start()\">\n-                                <fo:block>\n-                                    <xsl:value-of select=\"text()\"/>\n-                                </fo:block>\n-                            </fo:list-item-body>\n-                        </fo:list-item>\n-                    </xsl:if>\n-                </xsl:for-each>\n-            </fo:list-block>\n-        </xsl:if>\n+      <fo:list-block provisional-label-separation=\"4mm\" provisional-distance-between-starts=\"2mm\">\n+        <xsl:for-each select=\"list/string\">\n+          <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <fo:list-item>\n+              <fo:list-item-label end-indent=\"label-end()\">\n+                <fo:block>&#x2022;</fo:block>\n+              </fo:list-item-label>\n+              <fo:list-item-body start-indent=\"body-start()\">\n+                <fo:block>\n+                  <xsl:value-of select=\"text()\"/>\n+                </fo:block>\n+              </fo:list-item-body>\n+            </fo:list-item>\n+          </xsl:if>\n+        </xsl:for-each>\n+      </fo:list-block>\n+    </xsl:if>\n         \n-    </xsl:template>\n+  </xsl:template>\n </xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"da0ba8590e0a0d569bd72423fbd7c95c5f3595a6","filename":"core/src/main/resources/report/staticReportlet2html.xsl","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -22,53 +22,53 @@ under the License.\n <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n                 version=\"1.0\">\n \n-    <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n-        <h2>Reportlet: \n-            <xsl:value-of select=\"@name\"/>\n-        </h2>\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n+    <h2>Reportlet: \n+      <xsl:value-of select=\"@name\"/>\n+    </h2>\n         \n-        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-            <p>String value:                 \n-                <xsl:value-of select=\"string/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+      <p>String value:                 \n+        <xsl:value-of select=\"string/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n-            <p>Long value: \n-                <xsl:value-of select=\"long/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+      <p>Long value: \n+        <xsl:value-of select=\"long/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n-            <p>Double value: \n-                <xsl:value-of select=\"double/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+      <p>Double value: \n+        <xsl:value-of select=\"double/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n-            <p>Date value: \n-                <xsl:value-of select=\"date/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+      <p>Date value: \n+        <xsl:value-of select=\"date/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n-            <p>Enum value: \n-                <xsl:value-of select=\"enum/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+      <p>Enum value: \n+        <xsl:value-of select=\"enum/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(list) &gt; 0\">\n-            <p>List values:</p>\n+    <xsl:if test=\"string-length(list) &gt; 0\">\n+      <p>List values:</p>\n             \n-            <ul>\n-                <xsl:for-each select=\"list/string\">\n-                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-                        <li>\n-                            <xsl:value-of select=\"text()\"/>\n-                        </li>\n-                    </xsl:if>\n-                </xsl:for-each>\n-            </ul>\n-        </xsl:if>\n-    </xsl:template>\n+      <ul>\n+        <xsl:for-each select=\"list/string\">\n+          <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <li>\n+              <xsl:value-of select=\"text()\"/>\n+            </li>\n+          </xsl:if>\n+        </xsl:for-each>\n+      </ul>\n+    </xsl:if>\n+  </xsl:template>\n </xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"751cb4c680dbcc65ab689c03fab317c600b12b0e","filename":"core/src/main/resources/report/userReportlet2html.xsl","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -157,9 +157,9 @@ under the License.\n         </xsl:otherwise>\n       </xsl:choose>\n       <xsl:if test=\"string-length(resources) &gt; 0\">\n-          <xsl:call-template name=\"resources\">\n-              <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n-          </xsl:call-template>\n+        <xsl:call-template name=\"resources\">\n+          <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n+        </xsl:call-template>\n       </xsl:if>\n       <hr/>\n     </xsl:for-each>"},{"sha":"44cdfa4d3393e78915ec280750c8757b70a57b97","filename":"core/src/main/resources/roleRoute.xml","status":"added","additions":174,"deletions":0,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,174 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://camel.apache.org/schema/spring\n+                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n+ \n+  <!--\n+      The default routes define each task involved in user creation:\n+      main operations consist in user workflow creation and its propagation.         \n+  -->\n+  <routeContext id=\"defaultRoleRoutes\" xmlns=\"http://camel.apache.org/schema/spring\"> \n+    <!--\n+        CREATE ROLE\n+    -->\n+        \n+    <route id=\"createRole\">\n+      <from uri=\"direct:createRole\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreatePropagation\" />\n+        <to uri=\"direct:createRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+               \n+    <!--\n+        CREATE ROLE SYNC\n+    -->\n+    <route id=\"createRoleSync\">\n+      <from uri=\"direct:createRoleSync\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreateSyncPropagation\" />\n+        <to uri=\"direct:createRoleSyncPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRoleSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+        \n+         \n+    <!--\n+        UPDATE ROLE\n+    -->\n+    <route id=\"updateRole\">\n+      <from uri=\"direct:updateRole\"/>\n+      <setProperty propertyName=\"subjectMod\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultRoleUpdatePropagation\" />\n+        <to uri=\"direct:updateRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+               \n+    <!--\n+        DELETE ROLE\n+    -->\n+    <route id=\"deleteRole\">\n+      <from uri=\"direct:deleteRole\"/>\n+      <doTry>\n+        <process ref=\"defaultRoleDeletePropagation\" />\n+        <bean ref=\"rwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deleteRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deleteRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkRole\">\n+      <from uri=\"direct:unlinkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        LINK USER\n+    -->\n+        \n+    <route id=\"linkRole\">\n+      <from uri=\"direct:linkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        DEPROVISION ROLE\n+    -->\n+    <route id=\"deprovisionRole\">\n+      <from uri=\"direct:deprovisionRole\"/>            \n+      <process ref=\"defaultRoleDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionRolePort\"/>              \n+    </route>\n+  </routeContext>\n+</beans>"},{"sha":"763996d447c3ef226585e06eb2545e9c9560975e","filename":"core/src/main/resources/userRoute.xml","status":"added","additions":263,"deletions":0,"changes":263,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -0,0 +1,263 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://camel.apache.org/schema/spring\n+                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n+ \n+  <!--\n+      The default routes define each task involved in user creation:\n+      main operations consist in user workflow creation and its propagation.         \n+  -->\n+  <routeContext id=\"defaultUserRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">  \t\n+    <route id=\"createUser\">\n+      <from uri=\"direct:createUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" \n+              method=\"create(${body},${property.disablePwdPolicyCheck},\n+                                 ${property.enabled},${property.storePassword})\"/>\n+        <process ref=\"defaultUserCreatePropagation\" />\n+        <to uri=\"direct:createPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n+        \n+    <!--\n+        The propagation route deals with propagation of created user. In this\n+        case we used a custom processor to perform this task: it means that\n+        a custom java class contains the propagation strategy.\n+    -->\n+       \n+    <!--\n+        UPDATE USER\n+    -->\n+    <route id=\"updateUser\">\n+      <from uri=\"direct:updateUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultUserUpdatePropagation\" />\n+        <to uri=\"direct:updatePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updatePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+\n+                \n+    <!--\n+        UPDATE SYNC USER\n+    -->\n+    <route id=\"updateSyncUser\">\n+      <from uri=\"direct:updateSyncUser\"/>            \n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <to uri=\"direct:syncUserStatus\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <route id=\"syncUserStatus\">\n+      <from uri=\"direct:syncUserStatus\"/>\n+      <process ref=\"userStatusOnSync\" />\n+      <process ref=\"defaultUserUpdateSyncPropagation\" />\n+      <to uri=\"direct:updateSyncPort\"/>\n+    </route>\n+    <!--\n+        DELETE USER\n+    -->\n+    <route id=\"deleteUser\">\n+      <from uri=\"direct:deleteUser\"/>\n+      <doTry>\n+        <process ref=\"defaultUserDeletePropagation\" />\n+        <bean ref=\"uwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deletePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deletePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n+        \n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkUser\">\n+      <from uri=\"direct:unlinkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!--\n+        LINK USER\n+    -->\n+        \n+    <route id=\"linkUser\">\n+      <from uri=\"direct:linkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n+        \n+    <!-- \n+        ACTIVATE USER\n+    -->\n+    <route id=\"activateUser\">\n+      <from uri=\"direct:activateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${property.token})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        REACTIVATE USER\n+    -->\n+    <route id=\"reactivateUser\">\n+      <from uri=\"direct:reactivateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        SUSPEND USER\n+    -->\n+    <route id=\"suspendUser\">\n+      <from uri=\"direct:suspendUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+        \n+    <!-- \n+        STATUS PROPAGATION\n+    -->\n+        \n+    <route id=\"statusUser\">\n+      <from uri=\"direct:statusUser\"/>            \n+      <process ref=\"defaultUserStatusPropagation\" />\n+      <to uri=\"direct:statusPort\"/>              \n+    </route>\n+        \n+        \n+    <!--\n+        DEPROVISION USER\n+    -->\n+    <route id=\"deprovisionUser\">\n+      <from uri=\"direct:deprovisionUser\"/>            \n+      <process ref=\"defaultUserDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionPort\"/>              \n+    </route>\n+\n+\n+\n+    <route id=\"suspendUserWF\">\n+      <from uri=\"direct:suspendUserWF\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <process ref=\"defaultUserWFSuspendPropagation\"/>\n+        <to uri=\"direct:suspendWFPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:suspendWFPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+\n+  </routeContext>\n+</beans>"},{"sha":"e238b991ee45175b9a2dea176ae2b45378607256","filename":"core/src/main/resources/wadl2html/index.xsl","status":"modified","additions":40,"deletions":40,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -48,50 +48,50 @@\n \n         <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/themes/base/minified/jquery-ui.min.css\"/>\n         <style>\n-body {\n-  font-family: \"Verdana,Arial,sans-serif\";\n-  font-size: 0.9em;\n-}\n+          body {\n+          font-family: \"Verdana,Arial,sans-serif\";\n+          font-size: 0.9em;\n+          }\n \n-table {\n-  font-family: \"Verdana,Arial,sans-serif\";\n-  font-size: 0.9em;\n-  border-width: 1px;\n-  border-color: #666666;\n-  border-collapse: collapse;\n-}\n-table th {\n-  border-width: 1px;\n-  padding: 8px;\n-  border-style: solid;\n-  border-color: #666666;\n-  background-color: #dedede;\n-}\n-td {\n-  border-width: 1px;\n-  padding: 8px;\n-  border-style: solid;\n-  border-color: #666666;\n-  background-color: #ffffff;\n-  vertical-align: top;\n-}\n+          table {\n+          font-family: \"Verdana,Arial,sans-serif\";\n+          font-size: 0.9em;\n+          border-width: 1px;\n+          border-color: #666666;\n+          border-collapse: collapse;\n+          }\n+          table th {\n+          border-width: 1px;\n+          padding: 8px;\n+          border-style: solid;\n+          border-color: #666666;\n+          background-color: #dedede;\n+          }\n+          td {\n+          border-width: 1px;\n+          padding: 8px;\n+          border-style: solid;\n+          border-color: #666666;\n+          background-color: #ffffff;\n+          vertical-align: top;\n+          }\n \n-.methods {\n-  padding: 5px;\n-}\n+          .methods {\n+          padding: 5px;\n+          }\n \n-.representation-label {\n-  font-weight: bold;\n-  width: 80px;\n-}\n+          .representation-label {\n+          font-weight: bold;\n+          width: 80px;\n+          }\n \n-.ui-widget { font-size: 0.9em; }\n-.ui-tabs-vertical { width: 60em; }\n-.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 15em; }\n-.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n-.ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n-.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n-.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n+          .ui-widget { font-size: 0.9em; }\n+          .ui-tabs-vertical { width: 60em; }\n+          .ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 15em; }\n+          .ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n+          .ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n+          .ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n+          .ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n         </style>\n         \n         <script src=\"{$contextPath}/webjars/jquery/${jquery.version}/jquery.min.js\">"},{"sha":"ff0c09985580d793378608aa5e65cd402a501b05","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/DerSchemaTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -79,7 +79,6 @@ public void delete() {\n         assertNull(\"delete did not work\", actual);\n \n         // ------------- //\n-\n         RDerSchema rderiveddata = derSchemaDAO.find(\"rderiveddata\", RDerSchema.class);\n         assertNotNull(rderiveddata);\n "},{"sha":"ca8b638b4cba70db643033be5c2488ee45136422","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -41,7 +41,7 @@ public class EntitlementTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n-        assertEquals(\"did not get expected number of entitlements \", 86, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 89, list.size());\n     }\n \n     @Test"},{"sha":"86e725c918bf2f730cb543b4be1c9e1a26b72427","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SecurityQuestionTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -52,7 +52,7 @@ public void findAll() {\n     public void save() {\n         SecurityQuestion securityQuestion = new SecurityQuestion();\n         securityQuestion.setContent(\"What is your favorite pet's name?\");\n-        \n+\n         SecurityQuestion actual = securityQuestionDAO.save(securityQuestion);\n         assertNotNull(actual);\n         assertNotNull(actual.getId());"},{"sha":"efae722a47d7221c78c97e03df9a446ace2c351d","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirSchemaTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -77,7 +77,6 @@ public void delete() {\n         assertNull(\"delete did not work\", actual);\n \n         // ------------- //\n-\n         RVirSchema rvirtualdata = virSchemaDAO.find(\"rvirtualdata\", RVirSchema.class);\n         assertNotNull(rvirtualdata);\n "},{"sha":"4dbf80486a9c257b648fe63cf2ed6569db49363f","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnectorTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -709,13 +709,13 @@ public void bulkAction() {\n \n     @Test\n     public void issueSYNCOPE605() {\n-        \n+\n         ConnInstanceTO connectorInstanceTO = connectorService.read(103L);\n         assertTrue(connectorInstanceTO.getCapabilities().isEmpty());\n-        \n+\n         connectorInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n         connectorService.update(connectorInstanceTO.getId(), connectorInstanceTO);\n-        \n+\n         ConnInstanceTO updatedCapabilities = connectorService.read(connectorInstanceTO.getId());\n         assertNotNull(updatedCapabilities.getCapabilities());\n         assertTrue(updatedCapabilities.getCapabilities().size() == 1);"},{"sha":"3008350c569b747261b3ac7049615d595c60c3fb","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -44,7 +44,7 @@ private NotificationTO buildNotificationTO() {\n         NotificationTO notificationTO = new NotificationTO();\n         notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n         notificationTO.getEvents().add(\"create\");\n-        \n+\n         notificationTO.setUserAbout(SyncopeClient.getUserSearchConditionBuilder().\n                 is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query());\n "},{"sha":"01005380747cd787aaef44a3906f2e758e8af056","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -227,12 +227,12 @@ public void issueSYNCOPE466() {\n     public void issueSYNCOPE553() {\n         AccountPolicyTO policy = new AccountPolicyTO(false);\n         policy.setDescription(\"SYNCOPE553\");\n-        \n+\n         final AccountPolicySpec accountPolicySpec = new AccountPolicySpec();\n         accountPolicySpec.setMinLength(3);\n         accountPolicySpec.setMaxLength(8);\n         policy.setSpecification(accountPolicySpec);\n-        \n+\n         policy = createPolicy(policy);\n         assertNotNull(policy);\n     }"},{"sha":"e4b915f1d96433fa713323cab82b11b1d4db888a","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -507,7 +507,7 @@ public void issueSYNCOPE368() {\n         item.setExtAttrName(\"cn\");\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setAccountIdItem(item);\n-            \n+\n         item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.RoleOwnerSchema);\n         item.setExtAttrName(\"owner\");"},{"sha":"987a42ddf07e3b64e7c2f7ad2815090ef6ed7f51","filename":"core/src/test/resources/content.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -1118,6 +1118,9 @@ under the License.\n   <Entitlement name=\"ROLE_12\"/>\n   <Entitlement name=\"ROLE_13\"/>\n   <Entitlement name=\"ROLE_14\"/>\n+  <Entitlement name=\"ROUTE_UPDATE\"/>\n+  <Entitlement name=\"ROUTE_LIST\"/>\n+  <Entitlement name=\"ROUTE_READ\"/>\n \n   <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"1\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"advanced\" role_id=\"1\"/>"},{"sha":"cca061abb42fcc21a154d32f6b4bf6d8c82aaf64","filename":"pom.xml","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6d48fd9ec9704f3ee9e971928da7fcd93e4411d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=f6d48fd9ec9704f3ee9e971928da7fcd93e4411d","patch":"@@ -335,8 +335,9 @@ under the License.\n     <activiti.version>5.16.4</activiti.version>\n \n     <aspectj.version>1.8.4</aspectj.version>\n-\n-    <cxf.version>3.0.3</cxf.version>\t\n+    \n+    <cxf.version>3.0.3</cxf.version>\n+    <camel.version>2.14.1</camel.version>\t\n     <spring.version>4.0.9.RELEASE</spring.version>\n     <spring-security.version>3.2.5.RELEASE</spring-security.version>\n     <jackson.version>2.4.4</jackson.version>\n@@ -716,6 +717,19 @@ under the License.\n         <version>${cxf.version}</version>\n       </dependency>      \n       <!-- /CXF -->\n+      \n+      <!-- Camel -->\n+      <dependency>\n+        <groupId>org.apache.camel</groupId>\n+        <artifactId>camel-core</artifactId>\n+        <version>${camel.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.camel</groupId>\n+       <artifactId>camel-spring</artifactId>\n+       <version>${camel.version}</version>\n+      </dependency>\n+      <!-- /Camel -->\n \n       <dependency>\n         <groupId>com.fasterxml.jackson.core</groupId>"}]}