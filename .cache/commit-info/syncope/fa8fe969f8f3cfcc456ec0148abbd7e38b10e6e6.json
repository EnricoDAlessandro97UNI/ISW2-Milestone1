{"sha":"fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZhOGZlOTY5ZjhmM2NmY2M0NTZlYzAxNDhhYmJkN2UzOGIxMGU2ZTY=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-30T10:00:17Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-30T10:00:17Z"},"message":"[SYNCOPE-231] Fixed JAXRS ConnectorTestITCaseJAXRS\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440324 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91809b923a95ab71d029f0a5978f9c19c3dcb754","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91809b923a95ab71d029f0a5978f9c19c3dcb754"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"0863b01dc5b34b33e64c590d16d91a0b6630399b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0863b01dc5b34b33e64c590d16d91a0b6630399b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0863b01dc5b34b33e64c590d16d91a0b6630399b"}],"stats":{"total":28,"additions":25,"deletions":3},"files":[{"sha":"99d93cc16718aadf2508e427e9020b91d2140479","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":25,"deletions":3,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -28,7 +32,9 @@\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n+\n import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.MappingItemTO;\n@@ -83,7 +89,10 @@ public static void init()\n     public void createWithException() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n-        connectorService.create(connectorTO);\n+        Response response = connectorService.create(connectorTO);\n+        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+            throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n+        }\n     }\n \n     @Test\n@@ -134,6 +143,10 @@ public void create() {\n         connectorTO.addCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n \n         Response response = connectorService.create(connectorTO);\n+        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+            throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n+        }\n+\n         ConnInstanceTO actual = getObject(response, ConnInstanceTO.class, connectorService);\n \n         assertNotNull(actual);\n@@ -269,6 +282,10 @@ public void issueSYNCOPE10() {\n         // Create a new connector instance.\n         // ----------------------------------\n         Response response = connectorService.create(connInstanceTO);\n+        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+            throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n+        }\n+\n         connInstanceTO = getObject(response, ConnInstanceTO.class, connectorService);\n \n         assertNotNull(connInstanceTO);\n@@ -565,7 +582,8 @@ public void issueSYNCOPE112() {\n         keyColumnSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(keyColumnSchema);\n-        servicename.setValues(Collections.singletonList(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\"));\n+        servicename\n+                .setValues(Collections.singletonList(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\"));\n         servicename.setOverridable(false);\n \n         conf.add(endpoint);\n@@ -579,6 +597,10 @@ public void issueSYNCOPE112() {\n             assertFalse(connectorService.validate(connectorTO));\n \n             Response response = connectorService.create(connectorTO);\n+            if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+                throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n+            }\n+\n             connectorTO = getObject(response, ConnInstanceTO.class, configurationService);\n             assertNotNull(connectorTO);\n             // ----------------------------------------"}]}