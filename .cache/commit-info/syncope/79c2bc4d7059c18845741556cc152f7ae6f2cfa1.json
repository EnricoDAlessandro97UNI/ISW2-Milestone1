{"sha":"79c2bc4d7059c18845741556cc152f7ae6f2cfa1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc5YzJiYzRkNzA1OWMxODg0NTc0MTU1NmNjMTUyZjdhZTZmMmNmYTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-08-09T16:10:41Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-08-09T16:10:41Z"},"message":"[SYNCOPE-410] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1512372 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3d15e01076b1ce6c29c554468de8b03da44cf986","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3d15e01076b1ce6c29c554468de8b03da44cf986"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/79c2bc4d7059c18845741556cc152f7ae6f2cfa1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79c2bc4d7059c18845741556cc152f7ae6f2cfa1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79c2bc4d7059c18845741556cc152f7ae6f2cfa1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"124d19b4bca6ce23eeb0169d6ec65ffd538cc820","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/124d19b4bca6ce23eeb0169d6ec65ffd538cc820","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/124d19b4bca6ce23eeb0169d6ec65ffd538cc820"},{"sha":"cfea4511649744c9088b3aee67a20b81d86625df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfea4511649744c9088b3aee67a20b81d86625df","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cfea4511649744c9088b3aee67a20b81d86625df"}],"stats":{"total":158,"additions":143,"deletions":15},"files":[{"sha":"22359cf4db2dc8df6ef43be4ff1eb6e018eaf923","filename":"common/src/main/java/org/apache/syncope/common/types/AccountPolicySpec.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -43,6 +43,11 @@ public class AccountPolicySpec extends AbstractPolicySpec {\n      */\r\n     private int minLength;\r\n \r\n+    /**\r\n+     * Pattern (regular expression) that must match.\r\n+     */\r\n+    private String pattern;\r\n+\r\n     /**\r\n      * Substrings not permitted.\r\n      */\r\n@@ -120,6 +125,14 @@ public void setMinLength(final int minLength) {\n         this.minLength = minLength;\r\n     }\r\n \r\n+    public String getPattern() {\r\n+        return pattern;\r\n+    }\r\n+\r\n+    public void setPattern(final String pattern) {\r\n+        this.pattern = pattern;\r\n+    }\r\n+\r\n     @XmlElementWrapper(name = \"prefixesNotPermitted\")\r\n     @XmlElement(name = \"prefix\")\r\n     @JsonProperty(\"prefixesNotPermitted\")\r"},{"sha":"41f471f3532e372d9eee83b66b3c9e856cfabfd5","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -93,6 +93,7 @@ protected List<String> load() {\n     };\n \n     final IModel<List<String>> correlationRules = new LoadableDetachableModel<List<String>>() {\n+\n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n@@ -151,7 +152,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n \n                         item.add(getActivationControl(\n                                 component,\n-                                propDesc.getReadMethod().invoke(policy, new Object[]{}) != null,\n+                                propDesc.getReadMethod().invoke(policy, new Object[] {}) != null,\n                                 null,\n                                 null));\n \n@@ -169,7 +170,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n \n                         item.add(getActivationControl(\n                                 component,\n-                                (Enum<?>) propDesc.getReadMethod().invoke(policy, new Object[]{}) != null,\n+                                (Enum<?>) propDesc.getReadMethod().invoke(policy, new Object[] {}) != null,\n                                 values[0],\n                                 values[0]));\n \n@@ -197,7 +198,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n                             }\n \n                             Collection collection =\n-                                    (Collection) propDesc.getReadMethod().invoke(policy, new Object[]{});\n+                                    (Collection) propDesc.getReadMethod().invoke(policy, new Object[] {});\n \n                             if (collection == null) {\n                                 collection = new ArrayList();\n@@ -225,7 +226,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n                             reinitializedValue.add(\"\");\n \n                             item.add(getActivationControl(component,\n-                                    !((Collection) propDesc.getReadMethod().invoke(policy, new Object[]{})).isEmpty(),\n+                                    !((Collection) propDesc.getReadMethod().invoke(policy, new Object[] {})).isEmpty(),\n                                     new ArrayList<String>(), (Serializable) reinitializedValue));\n                         }\n                     } else if (field.getType().equals(int.class) || field.getType().equals(Integer.class)) {\n@@ -235,7 +236,15 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n                         item.add(component);\n \n                         item.add(getActivationControl(component,\n-                                (Integer) propDesc.getReadMethod().invoke(policy, new Object[]{}) > 0, 0, 0));\n+                                (Integer) propDesc.getReadMethod().invoke(policy, new Object[] {}) > 0, 0, 0));\n+                    } else if (field.getType().equals(String.class)) {\n+                        component = new AjaxTextFieldPanel(\"field\", field.getName(),\n+                                new PropertyModel(policy, field.getName()));\n+\n+                        item.add(component);\n+\n+                        item.add(getActivationControl(component,\n+                                propDesc.getReadMethod().invoke(policy, new Object[] {}) != null, null, null));\n                     } else {\n                         item.add(new AjaxCheckBoxPanel(\"check\", field.getName(), new Model()));\n                         item.add(new Label(\"field\", new Model(null)));"},{"sha":"20d653961b6c4c3d80a38a3d111668b900bd9c81","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -57,6 +57,7 @@ mustntEndWithAlpha=Mustn't end with alphanumeric character\n #-----------------------------\n allUpperCase=All upper case\n allLowerCase=All lower case\n+pattern=Pattern (regex)\n propagateSuspension=Propagate suspension\n permittedLoginRetries=Maximum number of subsequent failed logins\n #-----------------------------"},{"sha":"ed457115587c83e2996c82f0630bcf8ffef80e86","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -55,6 +55,7 @@ mustntEndWithAlpha=Non deve terminare con un carattere alfanumerico\n #-----------------------------\n allUpperCase=Tutte maiuscole\n allLowerCase=Tutte minuscole\n+pattern=Pattern (regex)\n propagateSuspension=Propagare sospensione\n permittedLoginRetries=Numero massimo di login consecutivi falliti\n #-----------------------------"},{"sha":"a746c47123b1d9c16a8d580a60ca9d667112355b","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -57,6 +57,7 @@ mustntEndWithAlpha=N\\u00E3o precisa terminar com um caracter alfanum\\u00E9rico\n #-----------------------------\n allUpperCase=Todos em letras mai\\u00FAsculas\n allLowerCase=todos em letras min\\u00FAsculas\n+pattern=Pattern (regex)\n propagateSuspension=Suspender propaga\\u00E7\\u00E3o\n permittedLoginRetries=N\\u00FAmero m\\u00E1ximo de subsequentes falhas de login\n #-----------------------------"},{"sha":"ae051faaa59377f00caf8a51c624217e8cced2d2","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.policy;\n \n import java.util.regex.Pattern;\n+\n import org.apache.syncope.common.types.AccountPolicySpec;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -28,11 +29,7 @@\n @Component\n public class AccountPolicyEnforcer extends PolicyEnforcer<AccountPolicySpec, SyncopeUser> {\n \n-    private static final Pattern PATTERN = Pattern.compile(\"[a-zA-Z0-9-_@. ]+\");\n-\n-    private static final Pattern LCPATTERN = Pattern.compile(\"[a-z0-9-_@. ]+\");\n-\n-    private static final Pattern UCPATTERN = Pattern.compile(\"[A-Z0-9-_@. ]+\");\n+    private static final Pattern DEFAULT_PATTERN = Pattern.compile(\"[a-zA-Z0-9-_@. ]+\");\n \n     @Autowired(required = false)\n     private UserSuspender userSuspender;\n@@ -69,12 +66,18 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n             }\n         }\n \n-        // check syntax\n-        if ((policy.isAllLowerCase() && !LCPATTERN.matcher(user.getUsername()).matches())\n-                || (policy.isAllUpperCase() && !UCPATTERN.matcher(user.getUsername()).matches())\n-                || !PATTERN.matcher(user.getUsername()).matches()) {\n+        // check case\n+        if (policy.isAllUpperCase() && !user.getUsername().equals(user.getUsername().toUpperCase())) {\n+            throw new AccountPolicyException(\"No lowercase characters permitted\");\n+        }\n+        if (policy.isAllLowerCase() && !user.getUsername().equals(user.getUsername().toLowerCase())) {\n+            throw new AccountPolicyException(\"No uppercase characters permitted\");\n+        }\n \n-            throw new AccountPolicyException(\"Invalid username syntax\");\n+        // check pattern\n+        Pattern pattern = (policy.getPattern() == null) ? DEFAULT_PATTERN : Pattern.compile(policy.getPattern());\n+        if (!pattern.matcher(user.getUsername()).matches()) {\n+            throw new AccountPolicyException(\"Username does not match pattern\");\n         }\n \n         // check prefix"},{"sha":"97b9d99a0ce1754d19ce49704ba8c6613326d1c0","filename":"core/src/test/java/org/apache/syncope/core/policy/AccountPolicyEnforcerTest.java","status":"added","additions":100,"deletions":0,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79c2bc4d7059c18845741556cc152f7ae6f2cfa1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcerTest.java?ref=79c2bc4d7059c18845741556cc152f7ae6f2cfa1","patch":"@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.policy;\n+\n+import static org.junit.Assert.fail;\n+\n+import org.apache.syncope.common.types.AccountPolicySpec;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AccountPolicyEnforcerTest {\n+\n+    private AccountPolicyEnforcer enforcer;\n+\n+    private AccountPolicySpec spec;\n+\n+    private SyncopeUser user;\n+\n+    @Before\n+    public void setUp() {\n+        enforcer = new AccountPolicyEnforcer();\n+        spec = new AccountPolicySpec();\n+        user = new SyncopeUser();\n+    }\n+\n+    @Test\n+    public void testAllUpperCase() throws Exception {\n+        spec.setAllUpperCase(true);\n+\n+        user.setUsername(\"ABC123XYZ\");\n+        enforcer.enforce(spec, null, user);\n+\n+        user.setUsername(\"ABC123xYZ\");\n+        try {\n+            enforcer.enforce(spec, null, user);\n+            fail();\n+        } catch (AccountPolicyException e) {\n+        }\n+    }\n+\n+    @Test\n+    public void testAllLowerCase() throws Exception {\n+        spec.setAllLowerCase(true);\n+\n+        user.setUsername(\"abc123xyz\");\n+        enforcer.enforce(spec, null, user);\n+\n+        user.setUsername(\"abc123xYz\");\n+        try {\n+            enforcer.enforce(spec, null, user);\n+            fail();\n+        } catch (AccountPolicyException e) {\n+        }\n+    }\n+\n+    @Test\n+    public void testDefaultPattern() throws Exception {\n+        user.setUsername(\"abc123xyz\");\n+        enforcer.enforce(spec, null, user);\n+\n+        user.setUsername(\"abc123xYz+\");\n+        try {\n+            enforcer.enforce(spec, null, user);\n+            fail();\n+        } catch (AccountPolicyException e) {\n+        }\n+    }\n+\n+    @Test\n+    public void testExplicitPattern() throws Exception {\n+        spec.setPattern(\"[a-zA-Z0-9-_@.+ ]+\");\n+\n+        user.setUsername(\"abc123xYz+\");\n+        enforcer.enforce(spec, null, user);\n+\n+        user.setUsername(\"abc123xYz+/\");\n+        try {\n+            enforcer.enforce(spec, null, user);\n+            fail();\n+        } catch (AccountPolicyException e) {\n+        }\n+    }\n+}"}]}