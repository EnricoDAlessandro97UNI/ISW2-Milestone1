{"sha":"8557d2acf267792329b03d3dcbffad8bdbf4c547","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1NTdkMmFjZjI2Nzc5MjMyOWIwM2QzZGNiZmZhZDhiZGJmNGM1NDc=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-08T16:50:32Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-08T16:50:32Z"},"message":"[SYNCOPE-156] Added new AjaxSpinnerFieldPanel","tree":{"sha":"283cb722a41975e1a1af72470613f60d07df29c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/283cb722a41975e1a1af72470613f60d07df29c7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8557d2acf267792329b03d3dcbffad8bdbf4c547","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8557d2acf267792329b03d3dcbffad8bdbf4c547","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8557d2acf267792329b03d3dcbffad8bdbf4c547","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8557d2acf267792329b03d3dcbffad8bdbf4c547/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"61a15b0c6c295d5a7abc3027f8f7680781ba3263","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/61a15b0c6c295d5a7abc3027f8f7680781ba3263","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/61a15b0c6c295d5a7abc3027f8f7680781ba3263"}],"stats":{"total":408,"additions":268,"deletions":140},"files":[{"sha":"fee845b21232162e95d3293bfc5dba484b616f5a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorDetailsPanel.java","status":"modified","additions":13,"deletions":25,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -26,8 +26,8 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n@@ -121,53 +121,41 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             model.getObject().setPoolConf(new ConnPoolConfTO());\n         }\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n                 \"connRequestTimeout\",\n                 \"connRequestTimeout\",\n                 Integer.class,\n-                new PropertyModel<Integer>(model, \"connRequestTimeout\"),\n-                0,\n-                Integer.MAX_VALUE));\n+                new PropertyModel<Integer>(model, \"connRequestTimeout\")));\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n                 \"poolMaxObjects\",\n                 \"poolMaxObjects\",\n                 Integer.class,\n-                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxObjects\"),\n-                0,\n-                Integer.MAX_VALUE));\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxObjects\")));\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n                 \"poolMinIdle\",\n                 \"poolMinIdle\",\n                 Integer.class,\n-                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"minIdle\"),\n-                0,\n-                Integer.MAX_VALUE));\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"minIdle\")));\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n                 \"poolMaxIdle\",\n                 \"poolMaxIdle\",\n                 Integer.class,\n-                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxIdle\"),\n-                0,\n-                Integer.MAX_VALUE));\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxIdle\")));\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Long>().setMin(0L).setMax(Long.MAX_VALUE).build(\n                 \"poolMaxWait\",\n                 \"poolMaxWait\",\n                 Long.class,\n-                new PropertyModel<Long>(model.getObject().getPoolConf(), \"maxWait\"),\n-                0L,\n-                Long.MAX_VALUE));\n+                new PropertyModel<Long>(model.getObject().getPoolConf(), \"maxWait\")));\n \n-        add(new SpinnerFieldPanel<>(\n+        add(new AjaxSpinnerFieldPanel.Builder<Long>().setMin(0L).setMax(Long.MAX_VALUE).build(\n                 \"poolMinEvictableIdleTime\",\n                 \"poolMinEvictableIdleTime\",\n                 Long.class,\n-                new PropertyModel<Long>(model.getObject().getPoolConf(), \"minEvictableIdleTimeMillis\"),\n-                0L,\n-                Long.MAX_VALUE));\n+                new PropertyModel<Long>(model.getObject().getPoolConf(), \"minEvictableIdleTimeMillis\")));\n     }\n \n     private List<String> getVersions(final ConnInstanceTO connInstanceTO, final List<ConnBundleTO> bundles) {"},{"sha":"c3795a11336d4c5f8adb95ce34f731098904f122","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -24,10 +24,10 @@\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n@@ -57,8 +57,8 @@ public ParametersCreateWizardAttrStep(final ParametersCreateWizardPanel.Paramete\n         schema.setRequired(true);\n         content.add(schema);\n \n-        final LoadableDetachableModel<List<PlainSchemaTO>> loadableDetachableModel\n-                = new LoadableDetachableModel<List<PlainSchemaTO>>() {\n+        final LoadableDetachableModel<List<PlainSchemaTO>> loadableDetachableModel =\n+                new LoadableDetachableModel<List<PlainSchemaTO>>() {\n \n             private static final long serialVersionUID = 7172461137064525667L;\n \n@@ -83,7 +83,7 @@ protected void populateItem(final ListItem<PlainSchemaTO> item) {\n         content.add(listView);\n     }\n \n-    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSchemaTO plainSchemaTO) {\n \n         final String valueHeaderName = getString(\"values\");\n@@ -153,11 +153,13 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new SpinnerFieldPanel<>(id, valueHeaderName, Long.class, new Model<Long>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n+                        .build(id, valueHeaderName, Long.class, new Model<Long>());\n                 break;\n \n             case Double:\n-                panel = new SpinnerFieldPanel<>(id, valueHeaderName, Double.class, new Model<Double>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>()\n+                        .build(id, valueHeaderName, Double.class, new Model<Double>());\n                 break;\n \n             default:"},{"sha":"ff5684880ed42dff41337e11b9409effd15bbc5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -25,10 +25,10 @@\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -67,7 +67,7 @@ public ParametersDetailsPanel(final String id, final AttrTO attrTO) {\n         form.add(getFieldPanel(\"panel\", attrTO));\n     }\n \n-    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private Panel getFieldPanel(final String id, final AttrTO attrTO) {\n \n         final String valueHeaderName = getString(\"values\");\n@@ -140,11 +140,13 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new SpinnerFieldPanel<>(id, valueHeaderName, Long.class, new Model<Long>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n+                        .build(id, valueHeaderName, Long.class, new Model<Long>());\n                 break;\n \n             case Double:\n-                panel = new SpinnerFieldPanel<>(id, valueHeaderName, Double.class, new Model<Double>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>()\n+                        .build(id, valueHeaderName, Double.class, new Model<Double>());\n                 break;\n \n             default:"},{"sha":"06055f46fec51eddd603226b6b94c154f580a2fe","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -22,9 +22,9 @@\n import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.client.console.wizards.any.AnnotatedBeanPanel;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -66,7 +66,7 @@ public ResourceDetailsPanel(\n                 new PropertyModel<Boolean>(model, \"enforceMandatoryCondition\"),\n                 false));\n \n-        container.add(new SpinnerFieldPanel<>(\n+        container.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n                 \"propagationPriority\",\n                 \"propagationPriority\",\n                 Integer.class,"},{"sha":"32ae007f3a998cf4ff6cdb2bd5eb62ef8d2d01e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.java","status":"added","additions":219,"deletions":0,"changes":219,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -0,0 +1,219 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import com.googlecode.wicket.jquery.core.Options;\n+import com.googlecode.wicket.jquery.ui.JQueryUIBehavior;\n+import com.googlecode.wicket.jquery.ui.form.spinner.AjaxSpinner;\n+import com.googlecode.wicket.jquery.ui.form.spinner.SpinnerAdapter;\n+import com.googlecode.wicket.jquery.ui.form.spinner.SpinnerBehavior;\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.springframework.util.StringUtils;\n+\n+public final class AjaxSpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n+\n+    private static final long serialVersionUID = 6413819574530703577L;\n+\n+    private Class<T> reference;\n+\n+    private IModel<T> model;\n+\n+    private Options options;\n+\n+    private AjaxSpinnerFieldPanel(\n+            final String id,\n+            final String name,\n+            final Class<T> reference,\n+            final IModel<T> model,\n+            final Options options) {\n+\n+        super(id, name, model);\n+        init(name, reference, model, options);\n+    }\n+\n+    private void init(\n+            final String name, final Class<T> reference,\n+            final IModel<T> model, final Options options) {\n+\n+        field = new AjaxSpinner<T>(\"spinner\", model, options, reference) {\n+\n+            private static final long serialVersionUID = -3624755213720060594L;\n+\n+            @Override\n+            public JQueryUIBehavior newWidgetBehavior(final String selector) {\n+                SpinnerBehavior behavior = new SpinnerBehavior(selector, new SpinnerAdapter());\n+                behavior.setOptions(options);\n+                return behavior;\n+            }\n+        };\n+\n+        add(field);\n+\n+        this.name = name;\n+        this.model = model;\n+        this.reference = reference;\n+        this.options = options;\n+    }\n+\n+    @Override\n+    public AjaxSpinnerFieldPanel<T> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public T getObject() {\n+                T value = null;\n+\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                    value = reference.equals(Integer.class)\n+                            ? reference.cast(NumberUtils.toInt(list.get(0).toString()))\n+                            : reference.equals(Long.class)\n+                            ? reference.cast(NumberUtils.toLong(list.get(0).toString()))\n+                            : reference.equals(Short.class)\n+                            ? reference.cast(NumberUtils.toShort(list.get(0).toString()))\n+                            : reference.equals(Float.class)\n+                            ? reference.cast(NumberUtils.toFloat(list.get(0).toString()))\n+                            : reference.equals(byte.class)\n+                            ? reference.cast(NumberUtils.toByte(list.get(0).toString()))\n+                            : reference.cast(NumberUtils.toDouble(list.get(0).toString()));\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            public void setObject(final T object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(object.toString());\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public AjaxSpinnerFieldPanel<T> setNewModel(final ListItem item) {\n+        field.setModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public T getObject() {\n+                T number = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        number = reference.equals(Integer.class)\n+                                ? reference.cast(Integer.valueOf((String) obj))\n+                                : reference.equals(Long.class)\n+                                ? reference.cast(Long.valueOf((String) obj))\n+                                : reference.equals(Short.class)\n+                                ? reference.cast(Short.valueOf((String) obj))\n+                                : reference.equals(Float.class)\n+                                ? reference.cast(Float.valueOf((String) obj))\n+                                : reference.equals(byte.class)\n+                                ? reference.cast(Byte.valueOf((String) obj))\n+                                : reference.cast(Double.valueOf((String) obj));\n+                    } else if (obj instanceof Number) {\n+                        // Don't parse anything\n+                        number = reference.cast(obj);\n+                    }\n+                }\n+\n+                return number;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final T object) {\n+                item.setModelObject(object == null ? null : object.toString());\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public AjaxSpinnerFieldPanel<T> clone() {\n+        final AjaxSpinnerFieldPanel<T> panel = new AjaxSpinnerFieldPanel<>(getId(), name, reference, model, options);\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+\n+    public static class Builder<T extends Number> {\n+\n+        protected T step;\n+\n+        protected T min;\n+\n+        protected T max;\n+\n+        public Builder() {\n+        }\n+\n+        public Builder<T> setMin(final T min) {\n+            this.min = min;\n+            return this;\n+        }\n+\n+        public Builder<T> setMax(final T max) {\n+            this.max = max;\n+            return this;\n+        }\n+\n+        public Builder<T> setStep(final T step) {\n+            this.step = step;\n+            return this;\n+        }\n+\n+        public AjaxSpinnerFieldPanel<T> build(\n+                final String id,\n+                final String name,\n+                final Class<T> reference,\n+                final IModel<T> model) {\n+\n+            final Options options = new Options();\n+            options.set(\"min\", min);\n+            options.set(\"max\", max);\n+            options.set(\"step\", step);\n+\n+            return new AjaxSpinnerFieldPanel<>(id, name, reference, model, options);\n+        }\n+    }\n+\n+}"},{"sha":"3d923c6f36cdb42563a16eb2b3cbf6a8d9ce9f3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.java","status":"removed","additions":0,"deletions":97,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a15b0c6c295d5a7abc3027f8f7680781ba3263/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a15b0c6c295d5a7abc3027f8f7680781ba3263/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java?ref=61a15b0c6c295d5a7abc3027f8f7680781ba3263","patch":"@@ -1,97 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.spinner.Spinner;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.spinner.SpinnerConfig;\n-import org.apache.wicket.model.IModel;\n-\n-public class SpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n-\n-    private static final long serialVersionUID = 6413819574530703577L;\n-\n-    private Class<T> reference;\n-\n-    private IModel<T> model;\n-\n-    private SpinnerConfig conf;\n-\n-    public SpinnerFieldPanel(\n-            final String id,\n-            final String name,\n-            final Class<T> reference,\n-            final IModel<T> model,\n-            final T min, final T max) {\n-        super(id, name, model);\n-\n-        final SpinnerConfig config = new SpinnerConfig();\n-        config.withMax(max);\n-        config.withMin(min);\n-\n-        init(name, reference, model, config);\n-    }\n-\n-    public SpinnerFieldPanel(\n-            final String id,\n-            final String name,\n-            final Class<T> reference,\n-            final IModel<T> model) {\n-        this(id, name, reference, model, new SpinnerConfig());\n-    }\n-\n-    public SpinnerFieldPanel(\n-            final String id,\n-            final String name,\n-            final Class<T> reference,\n-            final IModel<T> model,\n-            final SpinnerConfig conf) {\n-\n-        super(id, name, model);\n-        init(name, reference, model, conf);\n-    }\n-\n-    private void init(final String name, final Class<T> reference, final IModel<T> model, final SpinnerConfig conf) {\n-        field = new Spinner<>(\"spinner\", model, conf);\n-        add(field);\n-\n-        this.name = name;\n-        this.model = model;\n-        this.conf = conf;\n-        this.reference = reference;\n-\n-        this.conf.withMouseWheel(true);\n-        this.conf.withVerticalbuttons(true);\n-    }\n-\n-    @Override\n-    public SpinnerFieldPanel<T> clone() {\n-        SpinnerFieldPanel<T> panel = new SpinnerFieldPanel<T>(getId(), name, reference, model, conf);\n-\n-        panel.setRequired(isRequired());\n-        panel.setReadOnly(isReadOnly());\n-        panel.setTitle(title);\n-\n-        if (isRequiredLabelAdded) {\n-            panel.addRequiredLabel();\n-        }\n-\n-        return panel;\n-    }\n-\n-}"},{"sha":"1d173aa92b954deb1e3e2a044fcc9e22425ecd4f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -28,10 +28,10 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -102,7 +102,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n             if (ClassUtils.isAssignable(Number.class, propertySchemaClass)) {\n                 @SuppressWarnings(\"unchecked\")\n                 Class<Number> numberClass = (Class<Number>) propertySchemaClass;\n-                field = new SpinnerFieldPanel<>(\n+                field = new AjaxSpinnerFieldPanel.Builder<>().build(\n                         \"panel\", label.getDefaultModelObjectAsString(), numberClass, new Model<Number>());\n \n                 required = property.getSchema().isRequired();"},{"sha":"52f9fb85d0ab0c39734fa16159d8ab0034a10783","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -35,11 +35,11 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -238,15 +238,17 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new SpinnerFieldPanel<>(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n+                        .build(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             case Double:\n-                panel = new SpinnerFieldPanel<>(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().setStep(0.1)\n+                        .build(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n \n                 if (required) {\n                     panel.addRequiredLabel();"},{"sha":"56c60a8199f26318ba57e2e57034dc3ba7fe2bf7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.html","status":"renamed","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8557d2acf267792329b03d3dcbffad8bdbf4c547/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html?ref=8557d2acf267792329b03d3dcbffad8bdbf4c547","patch":"@@ -17,11 +17,23 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style type=\"text/css\">\n+      .input-group .ui-spinner {\n+        width: 100%;\n+      }\n+      .ui-state-default .ui-icon {\n+        background-image: url(\"../../webjars/jquery-ui/${jquery-ui.version}/images/ui-icons_222222_256x240.png\");\n+      }\n+    </style>\n+  </wicket:head>\n   <wicket:extend>\n     <wicket:enclosure child=\"field-label\">\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n       <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n-    <input wicket:id=\"spinner\"/>\n+    <fieldset class=\"input-group\">\n+      <input wicket:id=\"spinner\"/>\n+    </fieldset>\n   </wicket:extend>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.html"}]}