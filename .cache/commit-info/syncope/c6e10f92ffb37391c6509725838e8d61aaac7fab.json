{"sha":"c6e10f92ffb37391c6509725838e8d61aaac7fab","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2ZTEwZjkyZmZiMzczOTFjNjUwOTcyNTgzOGU4ZDYxYWFhYzdmYWI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-03-07T14:01:20Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-03-07T14:01:20Z"},"message":"[SYNCOPE-1034] fixes type extension model object handling","tree":{"sha":"467687db272713fe4419b5a01e514ebeadb783eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/467687db272713fe4419b5a01e514ebeadb783eb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c6e10f92ffb37391c6509725838e8d61aaac7fab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6e10f92ffb37391c6509725838e8d61aaac7fab","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6e10f92ffb37391c6509725838e8d61aaac7fab","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6e10f92ffb37391c6509725838e8d61aaac7fab/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2"}],"stats":{"total":50,"additions":36,"deletions":14},"files":[{"sha":"2eefdfc18894e11b06f4e5c62e851752d0c80231","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6e10f92ffb37391c6509725838e8d61aaac7fab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6e10f92ffb37391c6509725838e8d61aaac7fab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=c6e10f92ffb37391c6509725838e8d61aaac7fab","patch":"@@ -198,4 +198,22 @@ public IModel<TypeExtensionTO> model(final TypeExtensionTO object) {\n         }\n \n     }\n+\n+    @Override\n+    protected void customActionCallback(final AjaxRequestTarget target) {\n+        // change modal foter visibility\n+        send(TypeExtensionDirectoryPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+    }\n+\n+    @Override\n+    protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n+        // change modal foter visibility\n+        send(TypeExtensionDirectoryPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+    }\n+\n+    @Override\n+    protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+        // change modal foter visibility\n+        send(TypeExtensionDirectoryPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n+    }\n }"},{"sha":"fc69e2665be185e8453673beabf3d7cbf8ea0e71","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/TypeExtensionWizardBuilder.java","status":"modified","additions":18,"deletions":14,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6e10f92ffb37391c6509725838e8d61aaac7fab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6e10f92ffb37391c6509725838e8d61aaac7fab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java?ref=c6e10f92ffb37391c6509725838e8d61aaac7fab","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n@@ -65,32 +67,34 @@ public TypeExtensionWizardBuilder(\n \n     @Override\n     protected WizardModel buildModelSteps(final TypeExtensionTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new Details(modelObject.getAnyType()));\n+        wizardModel.add(new Details(modelObject));\n         return wizardModel;\n     }\n-\n+    \n     @Override\n-    protected void onCancelInternal(final TypeExtensionTO modelObject) {\n-        this.groupTO.getTypeExtensions().remove(modelObject);\n+    protected Serializable onApplyInternal(final TypeExtensionTO modelObject) {\n+        final List<TypeExtensionTO> typeExtensions\n+                = ListUtils.select(groupTO.getTypeExtensions(), new Predicate<TypeExtensionTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final TypeExtensionTO object) {\n+                        return !object.getAnyType().equals(modelObject.getAnyType());\n+                    }\n+                });\n+        typeExtensions.add(modelObject);\n+        groupTO.getTypeExtensions().clear();\n+        groupTO.getTypeExtensions().addAll(typeExtensions);\n+        return groupTO;\n     }\n \n     public class Details extends WizardStep {\n \n         private static final long serialVersionUID = 6472869166547883903L;\n \n-        public Details(final String anyType) {\n+        public Details(final TypeExtensionTO typeExtensionTO) {\n             super();\n             setOutputMarkupId(true);\n \n-            TypeExtensionTO typeExtensionTO;\n-            if (groupTO.getTypeExtension(anyType) == null) {\n-                typeExtensionTO = new TypeExtensionTO();\n-                typeExtensionTO.setAnyType(anyType);\n-                groupTO.getTypeExtensions().add(typeExtensionTO);\n-            } else {\n-                typeExtensionTO = groupTO.getTypeExtension(anyType);\n-            }\n-\n             add(new Label(\"anyType.label\", anyTypeLabel));\n \n             if (typeExtensionTO.getAnyType() == null) {"}]}