{"sha":"ba18d4055a472a30647a47d65939c30de6d8294e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJhMThkNDA1NWE0NzJhMzA2NDdhNDdkNjU5MzljMzBkZTZkODI5NGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-06T15:52:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-06T15:52:13Z"},"message":"[SYNCOPE-620] Extensions are now handled by console, ad Camel is the first sample","tree":{"sha":"51a06ab31cb98a5ad191357d4f704b7db561c05d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/51a06ab31cb98a5ad191357d4f704b7db561c05d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ba18d4055a472a30647a47d65939c30de6d8294e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba18d4055a472a30647a47d65939c30de6d8294e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ba18d4055a472a30647a47d65939c30de6d8294e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba18d4055a472a30647a47d65939c30de6d8294e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"20d29ba9900f29d1a26a1b1fad703bc32e947198","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20d29ba9900f29d1a26a1b1fad703bc32e947198","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/20d29ba9900f29d1a26a1b1fad703bc32e947198"}],"stats":{"total":1037,"additions":860,"deletions":177},"files":[{"sha":"c499d605a83dd3966c5a0e2207329910571b2541","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/BinaryPreview.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBinaryPreview.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.preview;\n+package org.apache.syncope.client.console;\n \n import java.lang.annotation.Documented;\n import java.lang.annotation.ElementType;","previous_filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/preview/BinaryPreview.java"},{"sha":"55749267d7c76ed7d357721672b27f27a71bbabf","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/ExtensionPanel.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FExtensionPanel.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface ExtensionPanel {\n+\n+    public String value();\n+\n+}"},{"sha":"ac44d43ebad6e69295fece056e6c6bc5a7733adf","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/SyncopeApplication.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.XMLRolesReader;\n import org.apache.syncope.client.console.pages.Configuration;\n@@ -160,70 +161,70 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n         page.add(infoLink);\n \n-        BookmarkablePageLink<Page> schemaLink = new BookmarkablePageLink<Page>(\"schema\", Schema.class);\n+        BookmarkablePageLink<Page> schemaLink = new BookmarkablePageLink<>(\"schema\", Schema.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 schemaLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Schema\", \"list\"));\n         page.add(schemaLink);\n         schemaLink.add(new Image(\"schemaIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"schema\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"schema\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> usersLink = new BookmarkablePageLink<Page>(\"users\", Users.class);\n+        BookmarkablePageLink<Page> usersLink = new BookmarkablePageLink<>(\"users\", Users.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 usersLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Users\", \"list\"));\n         page.add(usersLink);\n         usersLink.add(new Image(\"usersIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"users\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"users\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> rolesLink = new BookmarkablePageLink<Page>(\"roles\", Roles.class);\n+        BookmarkablePageLink<Page> rolesLink = new BookmarkablePageLink<>(\"roles\", Roles.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 rolesLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Roles\", \"list\"));\n         page.add(rolesLink);\n         rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"roles\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"roles\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> resourcesLink = new BookmarkablePageLink<Page>(\"resources\", Resources.class);\n+        BookmarkablePageLink<Page> resourcesLink = new BookmarkablePageLink<>(\"resources\", Resources.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 resourcesLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Resources\", \"list\"));\n         page.add(resourcesLink);\n         resourcesLink.add(new Image(\"resourcesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"resources\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"resources\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> todoLink = new BookmarkablePageLink<Page>(\"todo\", Todo.class);\n+        BookmarkablePageLink<Page> todoLink = new BookmarkablePageLink<>(\"todo\", Todo.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 todoLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Approval\", \"list\"));\n         page.add(todoLink);\n         todoLink.add(new Image(\"todoIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"todo\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"todo\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> reportLink = new BookmarkablePageLink<Page>(\"reports\", Reports.class);\n+        BookmarkablePageLink<Page> reportLink = new BookmarkablePageLink<>(\"reports\", Reports.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 reportLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Reports\", \"list\"));\n         page.add(reportLink);\n         reportLink.add(new Image(\"reportsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"reports\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"reports\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> configurationLink = new BookmarkablePageLink<Page>(\"configuration\",\n+        BookmarkablePageLink<Page> configurationLink = new BookmarkablePageLink<>(\"configuration\",\n                 Configuration.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 configurationLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Configuration\", \"list\"));\n         page.add(configurationLink);\n         configurationLink.add(new Image(\"configurationIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"configuration\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"configuration\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> taskLink = new BookmarkablePageLink<Page>(\"tasks\", Tasks.class);\n+        BookmarkablePageLink<Page> taskLink = new BookmarkablePageLink<>(\"tasks\", Tasks.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 taskLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Tasks\", \"list\"));\n         page.add(taskLink);\n         taskLink.add(new Image(\"tasksIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"tasks\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"tasks\" + Constants.PNG_EXT)));\n \n         page.add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n     }"},{"sha":"98e47c0fa14717c388eee4b0878518cf92b0aded","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtil.java","status":"renamed","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtil.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -16,45 +16,47 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.preview;\n+package org.apache.syncope.client.console.commons;\n \n import java.lang.reflect.InvocationTargetException;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.init.BinaryPreviewersLoader;\n+import org.apache.syncope.client.console.init.ImplementationClassNamesLoader;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.wicket.Component;\n import org.apache.wicket.util.crypt.Base64;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.util.ClassUtils;\n \n @org.springframework.stereotype.Component\n public class PreviewUtil {\n \n     @Autowired\n-    private BinaryPreviewersLoader previewPanelClassInitializer;\n+    private ImplementationClassNamesLoader implementationClassNamesLoader;\n \n-    public Component getPreviewer(final String mimeType, final String file) throws ClassNotFoundException,\n-            NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n+    public Component getPreviewer(final String mimeType, final String file)\n+            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n \n         final Class<? extends AbstractBinaryPreviewer> previewer = StringUtils.isBlank(file)\n                 ? null\n-                : previewPanelClassInitializer.getClass(mimeType);\n+                : implementationClassNamesLoader.getPreviewerClass(mimeType);\n \n         return previewer == null\n                 ? null\n-                : ((AbstractBinaryPreviewer) Class.forName(previewer.getName()).\n-                getConstructor(String.class, String.class, byte[].class).newInstance(\n-                        new Object[] { \"previewer\", mimeType, Base64.decodeBase64(file) })).preview();\n+                : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n+                newInstance(new Object[] { \"previewer\", mimeType, Base64.decodeBase64(file) }).\n+                preview();\n     }\n \n-    public Component getPreviewer(final String mimeType, final byte[] file) throws ClassNotFoundException,\n-            NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n+    public Component getPreviewer(final String mimeType, final byte[] file)\n+            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n \n-        final Class<? extends AbstractBinaryPreviewer> previewer = previewPanelClassInitializer.getClass(mimeType);\n+        final Class<? extends AbstractBinaryPreviewer> previewer =\n+                implementationClassNamesLoader.getPreviewerClass(mimeType);\n \n         return previewer == null\n                 ? null\n-                : ((AbstractBinaryPreviewer) Class.forName(previewer.getName()).\n-                getConstructor(String.class, String.class, byte[].class).newInstance(\n-                        new Object[] { \"previewer\", mimeType, file })).preview();\n+                : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n+                newInstance(new Object[] { \"previewer\", mimeType, file }).\n+                preview();\n     }\n }","previous_filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/preview/PreviewUtil.java"},{"sha":"fd5bc35f728b7b432637bd9c1446167e2ab34be2","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/init/BinaryPreviewersLoader.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20d29ba9900f29d1a26a1b1fad703bc32e947198/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FBinaryPreviewersLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20d29ba9900f29d1a26a1b1fad703bc32e947198/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FBinaryPreviewersLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FBinaryPreviewersLoader.java?ref=20d29ba9900f29d1a26a1b1fad703bc32e947198","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.init;\n-\n-import java.util.List;\n-import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.syncope.client.console.preview.BinaryPreview;\n-import org.apache.syncope.client.console.preview.PreviewerClassScanner;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class BinaryPreviewersLoader implements SyncopeConsoleLoader {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(BinaryPreviewersLoader.class);\n-\n-    @Autowired\n-    private PreviewerClassScanner classScanner;\n-\n-    private List<Class<? extends AbstractBinaryPreviewer>> classes;\n-\n-    @Override\n-    public Integer getPriority() {\n-        return 0;\n-    }\n-\n-    @Override\n-    public void load() {\n-        classes = classScanner.getComponentClasses();\n-    }\n-\n-    public List<Class<? extends AbstractBinaryPreviewer>> getClasses() {\n-        LOG.debug(\"Returning loaded classes: {}\", classes);\n-        return classes;\n-    }\n-\n-    public Class<? extends AbstractBinaryPreviewer> getClass(final String mimeType) {\n-        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n-        Class<? extends AbstractBinaryPreviewer> previewer = null;\n-        for (Class<? extends AbstractBinaryPreviewer> candidate : classes) {\n-            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n-            if (ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n-                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n-                previewer = candidate;\n-            }\n-        }\n-        return previewer;\n-    }\n-}"},{"sha":"0ff7282d2e3af3ab444684faf80f5a5c1eac31fc","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/init/ImplementationClassNamesLoader.java","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FImplementationClassNamesLoader.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.AbstractExtensionPanel;\n+import org.apache.syncope.client.console.BinaryPreview;\n+import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AssignableTypeFilter;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n+\n+@Component\n+public class ImplementationClassNamesLoader implements SyncopeConsoleLoader {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(ImplementationClassNamesLoader.class);\n+\n+    private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n+\n+    private List<Class<? extends AbstractExtensionPanel>> extPanels;\n+\n+    @Override\n+    public Integer getPriority() {\n+        return 0;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void load() {\n+        previewers = new ArrayList<>();\n+        extPanels = new ArrayList<>();\n+\n+        ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractExtensionPanel.class));\n+\n+        for (BeanDefinition bd : scanner.findCandidateComponents(StringUtils.EMPTY)) {\n+            try {\n+                Class<?> clazz = ClassUtils.resolveClassName(\n+                        bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+                boolean isAbsractClazz = Modifier.isAbstract(clazz.getModifiers());\n+\n+                if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                } else if (AbstractExtensionPanel.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    extPanels.add((Class<? extends AbstractExtensionPanel>) clazz);\n+                }\n+\n+            } catch (Throwable t) {\n+                LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n+            }\n+        }\n+        previewers = Collections.unmodifiableList(previewers);\n+        extPanels = Collections.unmodifiableList(extPanels);\n+\n+        LOG.debug(\"Binary previewers found: {}\", previewers);\n+        LOG.debug(\"Extension panels found: {}\", extPanels);\n+    }\n+\n+    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n+        Class<? extends AbstractBinaryPreviewer> previewer = null;\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n+            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n+            if (ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n+                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n+                previewer = candidate;\n+            }\n+        }\n+        return previewer;\n+    }\n+\n+    public List<Class<? extends AbstractBinaryPreviewer>> getPreviewerClasses() {\n+        return previewers;\n+    }\n+\n+    public List<Class<? extends AbstractExtensionPanel>> getExtPanelClasses() {\n+        return extPanels;\n+    }\n+\n+}"},{"sha":"c6774f2c92dbe3d2f5bafa21a5b63ae0dff484ac","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/pages/Configuration.java","status":"modified","additions":69,"deletions":10,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import static org.apache.syncope.client.console.pages.AbstractBasePage.LOG;\n+\n import java.io.File;\n import java.io.Serializable;\n import java.util.ArrayList;\n@@ -28,11 +30,15 @@\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.core.LoggerContext;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.apache.syncope.client.console.ExtensionPanel;\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.PreferenceManager;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.init.ImplementationClassNamesLoader;\n+import org.apache.syncope.client.console.panels.AbstractExtensionPanel;\n+import org.apache.syncope.client.console.panels.JQueryUITabbedPanel;\n import org.apache.syncope.client.console.panels.LayoutsPanel;\n import org.apache.syncope.client.console.panels.PoliciesPanel;\n import org.apache.syncope.client.console.rest.LoggerRestClient;\n@@ -51,6 +57,7 @@\n import org.apache.syncope.common.lib.types.LoggerLevel;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -64,6 +71,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n@@ -73,6 +81,7 @@\n import org.apache.wicket.markup.html.link.Link;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.PropertyListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n@@ -85,6 +94,7 @@\n import org.apache.wicket.request.resource.DynamicImageResource;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.util.ClassUtils;\n import org.springframework.web.context.support.WebApplicationContextUtils;\n \n /**\n@@ -121,6 +131,9 @@ public class Configuration extends BasePage {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n+    @SpringBean\n+    private ImplementationClassNamesLoader implementationClassNamesLoader;\n+\n     private final ModalWindow syncopeConfWin;\n \n     private final ModalWindow createNotificationWin;\n@@ -140,6 +153,14 @@ public class Configuration extends BasePage {\n     public Configuration() {\n         super();\n \n+        // Layouts\n+        add(new LayoutsPanel(\"adminUserLayoutPanel\", AttrLayoutType.ADMIN_USER, feedbackPanel));\n+        add(new LayoutsPanel(\"selfUserLayoutPanel\", AttrLayoutType.SELF_USER, feedbackPanel));\n+        add(new LayoutsPanel(\"adminRoleLayoutPanel\", AttrLayoutType.ADMIN_ROLE, feedbackPanel));\n+        add(new LayoutsPanel(\"selfRoleLayoutPanel\", AttrLayoutType.SELF_ROLE, feedbackPanel));\n+        add(new LayoutsPanel(\"adminMembershipLayoutPanel\", AttrLayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n+        add(new LayoutsPanel(\"selfMembershipLayoutPanel\", AttrLayoutType.SELF_MEMBERSHIP, feedbackPanel));\n+\n         add(syncopeConfWin = new ModalWindow(\"syncopeConfWin\"));\n         syncopeConfWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         syncopeConfWin.setInitialHeight(SYNCOPECONF_WIN_HEIGHT);\n@@ -190,7 +211,7 @@ public Configuration() {\n         }\n \n         BookmarkablePageLink<Void> activitiModeler =\n-                new BookmarkablePageLink<Void>(\"activitiModeler\", ActivitiModelerPopupPage.class);\n+                new BookmarkablePageLink<>(\"activitiModeler\", ActivitiModelerPopupPage.class);\n         activitiModeler.setPopupSettings(new VeilPopupSettings().setHeight(600).setWidth(800));\n         MetaDataRoleAuthorizationStrategy.authorize(activitiModeler, ENABLE,\n                 xmlRolesReader.getEntitlement(\"Configuration\", \"workflowDefRead\"));\n@@ -260,12 +281,8 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n                 consoleLoggerContainer, ENABLE, xmlRolesReader.getEntitlement(\"Configuration\", \"logList\"));\n         add(consoleLoggerContainer);\n \n-        add(new LayoutsPanel(\"adminUserLayoutPanel\", AttrLayoutType.ADMIN_USER, feedbackPanel));\n-        add(new LayoutsPanel(\"selfUserLayoutPanel\", AttrLayoutType.SELF_USER, feedbackPanel));\n-        add(new LayoutsPanel(\"adminRoleLayoutPanel\", AttrLayoutType.ADMIN_ROLE, feedbackPanel));\n-        add(new LayoutsPanel(\"selfRoleLayoutPanel\", AttrLayoutType.SELF_ROLE, feedbackPanel));\n-        add(new LayoutsPanel(\"adminMembershipLayoutPanel\", AttrLayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n-        add(new LayoutsPanel(\"selfMembershipLayoutPanel\", AttrLayoutType.SELF_MEMBERSHIP, feedbackPanel));\n+        // Extension panels\n+        setupExtPanels();\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n@@ -401,7 +418,7 @@ public void onClick(final AjaxRequestTarget target) {\n         });\n \n         final AjaxFallbackDefaultDataTable<NotificationTO, String> notificationTable =\n-                new AjaxFallbackDefaultDataTable<NotificationTO, String>(\n+                new AjaxFallbackDefaultDataTable<>(\n                         \"notificationTable\", notificationCols, new NotificationProvider(), notificationPaginatorRows);\n \n         notificationContainer = new WebMarkupContainer(\"notificationContainer\");\n@@ -533,7 +550,7 @@ public void onClick(final AjaxRequestTarget target) {\n         });\n \n         final AjaxFallbackDefaultDataTable<SecurityQuestionTO, String> securityQuestionTable =\n-                new AjaxFallbackDefaultDataTable<SecurityQuestionTO, String>(\"securityQuestionTable\",\n+                new AjaxFallbackDefaultDataTable<>(\"securityQuestionTable\",\n                         securityQuestionCols, new SecurityQuestionProvider(), 50);\n \n         securityQuestionContainer = new WebMarkupContainer(\"securityQuestionContainer\");\n@@ -572,6 +589,48 @@ public Page createPage() {\n         add(createSecurityQuestionLink);\n     }\n \n+    private void setupExtPanels() {\n+        List<AbstractTab> tabs = new ArrayList<>();\n+        int index = 0;\n+        for (final Class<? extends AbstractExtensionPanel> clazz\n+                : implementationClassNamesLoader.getExtPanelClasses()) {\n+\n+            String title = clazz.getAnnotation(ExtensionPanel.class) == null\n+                    ? \"Extension \" + index\n+                    : clazz.getAnnotation(ExtensionPanel.class).value();\n+            tabs.add(new AbstractTab(new Model<>(title)) {\n+\n+                private static final long serialVersionUID = -5861786415855103549L;\n+\n+                @Override\n+                public WebMarkupContainer getPanel(final String panelId) {\n+                    Panel panel;\n+\n+                    try {\n+                        panel = ClassUtils.getConstructorIfAvailable(clazz, String.class, PageReference.class).\n+                                newInstance(panelId, Configuration.this.getPageReference());\n+                    } catch (Exception e) {\n+                        panel = new Panel(panelId) {\n+\n+                            private static final long serialVersionUID = 5538299138211283825L;\n+\n+                        };\n+\n+                        LOG.error(\"Could not instantiate {}\", clazz.getName(), e);\n+                    }\n+\n+                    return panel;\n+                }\n+            });\n+\n+            index++;\n+        }\n+\n+        JQueryUITabbedPanel<AbstractTab> extPanels = new JQueryUITabbedPanel<>(\"extPanels\", tabs);\n+        extPanels.setVisible(!tabs.isEmpty());\n+        add(extPanels);\n+    }\n+\n     private class NotificationProvider extends SortableDataProvider<NotificationTO, String> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n@@ -581,7 +640,7 @@ private class NotificationProvider extends SortableDataProvider<NotificationTO,\n         public NotificationProvider() {\n             //Default sorting\n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<NotificationTO>(this);\n+            comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override"},{"sha":"c47edcd967c07542c36143106d2f3ae28278a7ef","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/pages/Schema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -148,13 +148,13 @@ public Schema() {\n         for (final AttributableType attrType : AttributableType.values()) {\n             final String attrTypeAsString = attrType.name().toLowerCase();\n \n-            List<ITab> tabs = new ArrayList<ITab>();\n+            List<ITab> tabs = new ArrayList<>();\n \n             for (final SchemaType schemaType : SchemaType.values()) {\n                 if (attrType != AttributableType.CONFIGURATION || schemaType == SchemaType.PLAIN) {\n                     final String schemaTypeAsString = schemaType.name().toLowerCase();\n \n-                    tabs.add(new AbstractTab(new Model<String>(getString(schemaTypeAsString))) {\n+                    tabs.add(new AbstractTab(new Model<>(getString(schemaTypeAsString))) {\n \n                         private static final long serialVersionUID = -5861786415855103549L;\n "},{"sha":"a785e9f882995fe0ef8a31830edd58447a651467","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractExtensionPanel.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.commons.XMLRolesReader;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public abstract class AbstractExtensionPanel extends Panel {\n+\n+    private static final long serialVersionUID = 4627828052717627159L;\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    protected PageReference pageref;\n+\n+    public AbstractExtensionPanel(final String id, final PageReference pageref) {\n+        super(id);\n+        this.pageref = pageref;\n+    }\n+}"},{"sha":"4faea4ea5133f122412dcaacf6991bf9e0f38516","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/panels/StatusPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -111,8 +111,8 @@ public <T extends AbstractAttributableTO> StatusPanel(\n \n         connObjects = statusUtils.getConnectorObjects(subject);\n \n-        final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n-        initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(connObjects.size() + 1);\n+        final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n+        initialStatusBeanMap = new LinkedHashMap<>(connObjects.size() + 1);\n \n         final StatusBean syncope = new StatusBean(subject, \"syncope\");\n "},{"sha":"a70f9cfcfa4ea0da9f08b0027727aace029b66e1","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/preview/PreviewerClassScanner.java","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20d29ba9900f29d1a26a1b1fad703bc32e947198/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpreview%2FPreviewerClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20d29ba9900f29d1a26a1b1fad703bc32e947198/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpreview%2FPreviewerClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpreview%2FPreviewerClassScanner.java?ref=20d29ba9900f29d1a26a1b1fad703bc32e947198","patch":"@@ -1,48 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.preview;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n-import org.springframework.beans.factory.config.BeanDefinition;\n-import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n-import org.springframework.core.type.filter.AnnotationTypeFilter;\n-import org.springframework.stereotype.Component;\n-import org.springframework.util.ClassUtils;\n-\n-@Component\n-public class PreviewerClassScanner extends ClassPathScanningCandidateComponentProvider {\n-\n-    public PreviewerClassScanner() {\n-        super(false);\n-        addIncludeFilter(new AnnotationTypeFilter(BinaryPreview.class));\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public final List<Class<? extends AbstractBinaryPreviewer>> getComponentClasses() {\n-        List<Class<? extends AbstractBinaryPreviewer>> classes = new ArrayList<>();\n-        for (BeanDefinition candidate : findCandidateComponents(StringUtils.EMPTY)) {\n-            classes.add((Class<AbstractBinaryPreviewer>) ClassUtils.resolveClassName(candidate.getBeanClassName(),\n-                    ClassUtils.getDefaultClassLoader()));\n-        }\n-        return classes;\n-    }\n-}"},{"sha":"949cc8339978bbfee396aaee124f44d0d87c1d00","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -22,7 +22,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.preview.PreviewUtil;\n+import org.apache.syncope.client.console.commons.PreviewUtil;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BaseModalPage;"},{"sha":"61589d7adb71f4dac03e26cd35c065961b60ed6d","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -24,7 +24,7 @@\n import javax.naming.ldap.LdapName;\n import javax.naming.ldap.Rdn;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.preview.BinaryPreview;\n+import org.apache.syncope.client.console.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;"},{"sha":"35e442eba71bf02f655337f2a2f7db31aec92c3d","filename":"syncope620/client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n-import org.apache.syncope.client.console.preview.BinaryPreview;\n+import org.apache.syncope.client.console.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n import org.apache.wicket.markup.html.image.NonCachingImage;"},{"sha":"4610abfdee635f598e892da494bcf4c6ee167220","filename":"syncope620/client/console/src/main/resources/authorizations.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -317,7 +317,7 @@ under the License.\n       <entitlement>POLICY_UPDATE</entitlement>\n     </action>\n   </page>\n-  <page id=\"Routes\">\n+  <page id=\"CamelRoutes\">\n     <action id=\"list\">\n       <entitlement>ROUTE_LIST</entitlement>\n     </action>"},{"sha":"fbab64bb255a54fed3b82af0d3666ef43c73b4b0","filename":"syncope620/client/console/src/main/resources/consoleContext.xml","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -25,9 +25,7 @@ under the License.\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\">\n \n-  <context:component-scan base-package=\"org.apache.syncope.client.console.rest\"/>\n-  <context:component-scan base-package=\"org.apache.syncope.client.console.init\"/>\n-  <context:component-scan base-package=\"org.apache.syncope.client.console.preview\"/>\n+  <context:component-scan base-package=\"org.apache.syncope.client.console\"/>\n \n   <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"order\" value=\"1\"/>"},{"sha":"931bf2b642ce428056ff73da4eaf77e85850a533","filename":"syncope620/client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -39,6 +39,7 @@\n         <li><a href=\"#securityQuestions\"><span><wicket:message key=\"securityQuestions\"/></span></a></li>\n         <li><a href=\"#workflow\"><span><wicket:message key=\"workflow\"/></span></a></li>\n         <li><a href=\"#logs\"><span><wicket:message key=\"logs\"/></span></a></li>\n+        <li><a href=\"#ext\"><span><wicket:message key=\"ext\"/></span></a></li>\n       </ul>\n       <div id=\"layouts\">\n         <ul>\n@@ -208,6 +209,8 @@\n           </div>\n         </div>\n       </div>\n+      <div id=\"ext\" wicket:id=\"extPanels\">\n+      </div>\n       <div>\n         <div wicket:id=\"parameters\">\n           <a style=\"position: absolute; top: 2px; right:50px;\" wicket:id=\"confLink\">"},{"sha":"19d534fe7fd87f5507c159f6c78e2af9545a3049","filename":"syncope620/client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -45,3 +45,4 @@ adminRole=Administrator Role Form\n selfRole=Self Role Form\n adminMembership=Administrator Membership Form\n selfMembership=Self Membership Form\n+ext=Extensions"},{"sha":"0f1376133dcdea94cd4cf7c51b0561bd5276c886","filename":"syncope620/client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -45,3 +45,4 @@ adminRole=Form Amministrazione Ruolo\n selfRole=Form Ruolo\n adminMembership=Form Amministrazione Membership\n selfMembership=Form Membership\n+ext=Estensioni"},{"sha":"63f19b75df69a8775fc8b66f6b5f06f0fa6de50f","filename":"syncope620/client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fclient%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -45,3 +45,4 @@ adminRole=Forma Fun\\u00e7\\u00e3o de administra\\u00e7\\u00e3o\n selfRole=Form Fun\\u00e7\\u00e3o\n adminMembership=Forma de membro de administra\\u00e7\\u00e3o\n selfMembership=Forma Membro\n+ext=Extens\\u00f5es"},{"sha":"8ee8173817a9594cc438ba17eab7900f8702e87a","filename":"syncope620/ext/camel/client-console/pom.xml","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fpom.xml?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-camel</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Extensions: Camel Client Console</name>\n+  <description>Apache Syncope Extensions: Camel Client Console</description>\n+  <groupId>org.apache.syncope.ext.camel</groupId>\n+  <artifactId>syncope-ext-camel-client-console</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-pmd-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"8650e07cb3c554b0868c67978e25af0d6b9229c3","filename":"syncope620/ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRouteModalPage.java","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.CamelRouteRestClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.CamelRouteTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class CamelRouteModalPage extends BaseModalPage {\n+\n+    private static final long serialVersionUID = -1438441210568592931L;\n+\n+    @SpringBean\n+    private CamelRouteRestClient restClient;\n+\n+    public CamelRouteModalPage(final PageReference pageRef, final ModalWindow window,\n+            final CamelRouteTO routeTO, final boolean createFlag) {\n+\n+        Form<CamelRouteTO> routeForm = new Form<>(\"routeDefForm\");\n+\n+        final TextArea<String> routeDefArea =\n+                new TextArea<>(\"content\", new PropertyModel<String>(routeTO, \"content\"));\n+\n+        routeForm.add(routeDefArea);\n+        routeForm.setModel(new CompoundPropertyModel<>(routeTO));\n+\n+        AjaxButton submit =\n+                new IndicatingAjaxButton(APPLY, new Model<>(getString(SUBMIT)), routeForm) {\n+\n+                    private static final long serialVersionUID = -958724007591692537L;\n+\n+                    @Override\n+                    protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            restClient.update(routeTO.getKey(), ((CamelRouteTO) form.getModelObject()).getContent());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+\n+                            Configuration callerPage = (Configuration) pageRef.getPage();\n+                            callerPage.setModalResult(true);\n+                            window.close(target);\n+                        } catch (SyncopeClientException scee) {\n+                            error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n+                        }\n+                        target.add(feedbackPanel);\n+                    }\n+\n+                    @Override\n+                    protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                        target.add(feedbackPanel);\n+                    }\n+\n+                };\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                xmlRolesReader.getEntitlement(\"CamelRoutes\", \"update\"));\n+        routeForm.add(submit);\n+\n+        this.add(routeForm);\n+    }\n+}"},{"sha":"e96dab5887d81ff56f4adfd1b0376a0668c37ac3","filename":"syncope620/ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutePanel.java","status":"added","additions":181,"deletions":0,"changes":181,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,181 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.ExtensionPanel;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.CamelRouteModalPage;\n+import org.apache.syncope.client.console.rest.CamelRouteRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.to.CamelRouteTO;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+@ExtensionPanel(\"Camel routes\")\n+public class CamelRoutePanel extends AbstractExtensionPanel {\n+\n+    private static final long serialVersionUID = 1965360932245590233L;\n+\n+    private static final int CAMELROUTE_WIN_HEIGHT = 480;\n+\n+    private static final int CAMELROUTE_WIN_WIDTH = 800;\n+\n+    @SpringBean\n+    private CamelRouteRestClient restClient;\n+\n+    private ModalWindow editCamelRouteWin;\n+\n+    public CamelRoutePanel(final String id, final PageReference pageref) {\n+        super(id, pageref);\n+\n+        editCamelRouteWin = new ModalWindow(\"editCamelRouteWin\");\n+        editCamelRouteWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editCamelRouteWin.setInitialHeight(CAMELROUTE_WIN_HEIGHT);\n+        editCamelRouteWin.setInitialWidth(CAMELROUTE_WIN_WIDTH);\n+        editCamelRouteWin.setCookieName(\"editCamelRouteWin-modal\");\n+        add(editCamelRouteWin);\n+\n+        List<IColumn<CamelRouteTO, String>> routeCols = new ArrayList<>();\n+        routeCols.add(new PropertyColumn<CamelRouteTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        routeCols.add(new AbstractColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<CamelRouteTO>> cellItem, final String componentId,\n+                    final IModel<CamelRouteTO> model) {\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, pageref);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        editCamelRouteWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new CamelRouteModalPage(pageref, editCamelRouteWin,\n+                                        restClient.read(model.getObject().getKey()), false);\n+                            }\n+\n+                        });\n+\n+                        editCamelRouteWin.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, \"CamelRoutes\");\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        final AjaxFallbackDefaultDataTable<CamelRouteTO, String> routeTable =\n+                new AjaxFallbackDefaultDataTable<>(\"camelRouteTable\", routeCols, new CamelRouteProvider(), 50);\n+\n+        WebMarkupContainer routeContainer = new WebMarkupContainer(\"camelRoutesContainer\");\n+        routeContainer.add(routeTable);\n+        routeContainer.setOutputMarkupId(true);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                routeContainer, ENABLE, xmlRolesReader.getEntitlement(\"CamelRoutes\", \"list\"));\n+        add(routeContainer);\n+    }\n+\n+    private class CamelRouteProvider extends SortableDataProvider<CamelRouteTO, String> {\n+\n+        private static final long serialVersionUID = -2917236020432105949L;\n+\n+        private final SortableDataProviderComparator<CamelRouteTO> comparator;\n+\n+        public CamelRouteProvider() {\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<? extends CamelRouteTO> iterator(final long first, final long count) {\n+            List<CamelRouteTO> list = new ArrayList<>();\n+            if (restClient.isCamelEnabledFor(SubjectType.USER)) {\n+                list.addAll(restClient.list(SubjectType.USER));\n+            }\n+            if (restClient.isCamelEnabledFor(SubjectType.ROLE)) {\n+                list.addAll(restClient.list(SubjectType.ROLE));\n+            }\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return (restClient.isCamelEnabledFor(SubjectType.USER)\n+                    ? restClient.list(SubjectType.USER).size()\n+                    : 0)\n+                    + (restClient.isCamelEnabledFor(SubjectType.ROLE)\n+                            ? restClient.list(SubjectType.ROLE).size()\n+                            : 0);\n+        }\n+\n+        @Override\n+        public IModel<CamelRouteTO> model(final CamelRouteTO route) {\n+            return new AbstractReadOnlyModel<CamelRouteTO>() {\n+\n+                private static final long serialVersionUID = 774694801558497248L;\n+\n+                @Override\n+                public CamelRouteTO getObject() {\n+                    return route;\n+                }\n+            };\n+        }\n+    }\n+\n+}"},{"sha":"509f2086d8932b8cf60f8dc7105a7d5a164ab5fc","filename":"syncope620/ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRouteRestClient.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRouteRestClient.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.to.CamelRouteTO;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.common.rest.api.service.CamelRouteService;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class CamelRouteRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2018208424159468912L;\n+\n+    public List<CamelRouteTO> list(final SubjectType subject) {\n+        return getService(CamelRouteService.class).list(subject);\n+    }\n+\n+    public CamelRouteTO read(final String key) {\n+        return getService(CamelRouteService.class).read(key);\n+    }\n+\n+    public void update(final String key, final String content) {\n+        CamelRouteTO routeTO = read(key);\n+        routeTO.setContent(content);\n+        getService(CamelRouteService.class).update(key, routeTO);\n+    }\n+\n+    public boolean isCamelEnabledFor(final SubjectType subjectType) {\n+        return subjectType == SubjectType.USER\n+                ? SyncopeSession.get().getSyncopeTO().getUserProvisioningManager().indexOf(\"Camel\") != -1\n+                : SyncopeSession.get().getSyncopeTO().getRoleProvisioningManager().indexOf(\"Camel\") != -1;\n+\n+    }\n+}"},{"sha":"63ae4f4fcef98718384014904ce56c517222bc6d","filename":"syncope620/ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage.html","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.html?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,66 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {\n+        document.getElementById(\"routeDefForm\").elements[\"content\"].value = editor.getValue();\n+      }\n+    </script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        padding: 1%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <div style=\"padding: 1%;\">\n+      <div class=\"w_content_3\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <wicket:message key=\"title\"/>\n+        </p>\n+        <form wicket:id=\"routeDefForm\" id=\"routeDefForm\">\n+          <textarea wicket:id=\"content\" id=\"content\" name=\"content\" style=\"width: 100%; height: 350px;\">\n+          </textarea>\n+          <div style=\"margin: 10px;\">\n+            <input type=\"submit\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"apply\"\n+                   onclick=\"\"/>\n+          </div>\n+        </form>\n+      </div>\n+    </div>\n+    <script>\n+      window.onload = function () {\n+        var editor = CodeMirror.fromTextArea(document.getElementById(\"content\"), {lineNumbers: true});\n+        editor.on(\"change\", updateTextArea);\n+      }\n+    </script>\n+  </wicket:extend>\n+</html>"},{"sha":"8273ee08c79ff878fafad20c57a2d15940e84809","filename":"syncope620/ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Camel route"},{"sha":"cc9b27574810c7a51b3a297053eb362991bbde6f","filename":"syncope620/ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_it.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Rotta di Camel"},{"sha":"eceba575957ddf6aa62bfb3c24c242ae8d32b6d0","filename":"syncope620/ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage_pt_BR.properties?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Rota de Camel"},{"sha":"f1ba45567cc3d240f51542d7b68ec9806ffcedbf","filename":"syncope620/ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutePanel.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.html?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+      <span wicket:id=\"camelRoutesContainer\">\n+        <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"camelRouteTable\"/>\n+      </span>\n+    </div>\n+    <div wicket:id=\"editCamelRouteWin\">[Show modal window for editing Camel route]</div>\n+  </wicket:panel>\n+</html>"},{"sha":"3cee0b99f0882af0534470e63fd84b033e4e8de9","filename":"syncope620/ext/camel/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fext%2Fcamel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fext%2Fcamel%2Fpom.xml?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -42,6 +42,7 @@ under the License.\n     <module>logic</module>\n     <module>rest-api</module>\n     <module>rest-cxf</module>\n+    <module>client-console</module>\n   </modules>\n \n </project>"},{"sha":"f893bb8611006463e0e31947d6514ff54a78d268","filename":"syncope620/fit/console-reference/pom.xml","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Ffit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Ffit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Ffit%2Fconsole-reference%2Fpom.xml?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -50,7 +50,12 @@ under the License.\n       <groupId>javax.servlet</groupId>\n       <artifactId>jstl</artifactId>\n     </dependency>\n-    \n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>    \n     <dependency>\n       <groupId>org.apache.syncope.client</groupId>\n       <artifactId>syncope-client-console</artifactId>\n@@ -468,6 +473,9 @@ under the License.\n                   <resource>\n                     <directory>${basedir}/../../client/console/target/classes</directory>\n                   </resource>\n+                  <resource>\n+                    <directory>${basedir}/../../ext/camel/client-console/target/classes</directory>\n+                  </resource>\n                 </resources>\n               </classpath>\n               \n@@ -478,6 +486,10 @@ under the License.\n                     <target>/</target>\n                     <directory>${basedir}/../../client/console/target/classes/META-INF/resources/</directory>\n                   </resource>\n+                  <resource>\n+                    <target>/</target>\n+                    <directory>${basedir}/../../ext/camel/client-console/target/classes</directory>\n+                  </resource>\n                 </resources>\n               </web>\n     "},{"sha":"388beab49fba60e00423e7ec7aa6cb2c940661fd","filename":"syncope620/server/logic/src/main/java/org/apache/syncope/server/logic/init/ImplementationClassNamesLoader.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fserver%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fserver%2Flogic%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba18d4055a472a30647a47d65939c30de6d8294e/syncope620%2Fserver%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fserver%2Flogic%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fserver%2Flogic%2Finit%2FImplementationClassNamesLoader.java?ref=ba18d4055a472a30647a47d65939c30de6d8294e","patch":"@@ -39,7 +39,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n-import org.springframework.core.type.classreading.CachingMetadataReaderFactory;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n@@ -77,8 +76,6 @@ public Integer getPriority() {\n \n     @Override\n     public void load() {\n-        CachingMetadataReaderFactory factory = new CachingMetadataReaderFactory();\n-\n         classNames = new EnumMap<>(Type.class);\n         for (Type type : Type.values()) {\n             classNames.put(type, new HashSet<String>());\n@@ -128,7 +125,6 @@ public void load() {\n                 /* if (PushCorrelationRule.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                  * classNames.get(Type.PUSH_CORRELATION_RULES).add(metadata.getClassName());\n                  * } */\n-                \n                 if (PropagationActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                     classNames.get(Type.PROPAGATION_ACTIONS).add(bd.getBeanClassName());\n                 }"}]}