{"sha":"d729b206354b17a711e54e3ad9341cef803b961c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ3MjliMjA2MzU0YjE3YTcxMWU1NGUzYWQ5MzQxY2VmODAzYjk2MWM=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-02-29T14:39:10Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-02-29T14:39:52Z"},"message":"[SYNCOPE-719] enduser now supports 'mustChangePassword' state","tree":{"sha":"3f82ab3c707e43532530249d344894340d56c0dc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3f82ab3c707e43532530249d344894340d56c0dc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d729b206354b17a711e54e3ad9341cef803b961c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d729b206354b17a711e54e3ad9341cef803b961c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d729b206354b17a711e54e3ad9341cef803b961c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d729b206354b17a711e54e3ad9341cef803b961c/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"e77308ccd7bd3a8eab29322fd05215d9c252fa91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e77308ccd7bd3a8eab29322fd05215d9c252fa91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e77308ccd7bd3a8eab29322fd05215d9c252fa91"}],"stats":{"total":303,"additions":269,"deletions":34},"files":[{"sha":"2c6f3488f4c344b35e272b985eca40896fa2c1aa","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.client.enduser.resources.SyncopeAnyTypeResource;\n import org.apache.syncope.client.enduser.resources.SyncopeGroupResource;\n import org.apache.syncope.client.enduser.resources.SyncopeResourceResource;\n+import org.apache.syncope.client.enduser.resources.UserSelfChangePassword;\n import org.apache.syncope.client.enduser.resources.UserSelfConfirmPasswordReset;\n import org.apache.syncope.client.enduser.resources.UserSelfCreateResource;\n import org.apache.syncope.client.enduser.resources.UserSelfPasswordReset;\n@@ -207,6 +208,16 @@ public IResource getResource() {\n             }\n         });\n \n+        mountResource(\"/api/self/changePassword\", new ResourceReference(\"userSelfChangePassword\") {\n+\n+            private static final long serialVersionUID = -128426276529456602L;\n+\n+            @Override\n+            public IResource getResource() {\n+                return new UserSelfChangePassword();\n+            }\n+        });\n+\n         mountResource(\"/api/schemas\", new ResourceReference(\"schemas\") {\n \n             private static final long serialVersionUID = -128426276529456602L;"},{"sha":"e827618bce20739d5302df03648a46350724c4ae","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfChangePassword.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.rest.api.service.UserSelfService;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class UserSelfChangePassword extends AbstractBaseResource {\n+\n+    private static final long serialVersionUID = -2721621682300247583L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserSelfChangePassword.class);\n+\n+    private final UserSelfService userSelfService;\n+\n+    public UserSelfChangePassword() {\n+        userSelfService = SyncopeEnduserSession.get().getService(UserSelfService.class);\n+    }\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n+\n+        AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n+\n+        try {\n+            HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+            if (!xsrfCheck(request)) {\n+                LOG.error(\"XSRF TOKEN does not match\");\n+                response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n+                return response;\n+            }\n+\n+            Map<String, String[]> parameters = request.getParameterMap();\n+\n+            if (parameters.get(\"newPassword\") == null || parameters.get(\"newPassword\").length == 0) {\n+                throw new Exception(\"A new correct password should be provided\");\n+            }\n+            userSelfService.changePassword(parameters.get(\"newPassword\")[0]);\n+\n+            final String responseMessage = new StringBuilder().append(\"Password changed correctly\").toString();\n+\n+            response.setWriteCallback(new WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(responseMessage);\n+                }\n+            });\n+\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+\n+        } catch (final Exception e) {\n+            LOG.error(\"Error while updating user\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+        return response;\n+    }\n+\n+}"},{"sha":"1c369f53ac43ac0ad62b438b40cd704c67f55212","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -183,6 +183,10 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider',\n             .state('confirmpasswordreset', {\n               url: '/confirmpasswordreset?token',\n               templateUrl: 'views/confirmpasswordreset.html'\n+            })\n+            .state('mustchangepassword', {\n+              url: '/mustchangepassword',\n+              templateUrl: 'views/mustchangepassword.html'\n             });\n \n     // catch all other routes\n@@ -380,19 +384,19 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $scope.$on('hideErrorMessage', function (event, popupMessage) {\n         $scope.hideError(popupMessage, $scope.notification);\n       });\n-      \n+\n       //wizard active element\n       $scope.wizard = {\n-        \"credentials\" : {url : \"/credentials\", templateUrl: \"views/user-credentials.html\"},\n-        \"groups\" : {url : \"/groups\", templateUrl: \"views/user-groups.html\"}, \n-        \"plainSchemas\" : {url : \"/plainSchemas\", templateUrl: \"views/user-plain-schemas.html\"},\n-        \"derivedSchemas\" : {url : \"/derivedSchemas\", templateUrl: \"views/user-derived-schemas.html\"}, \n-        \"virtualSchemas\" : {url : \"/virtualSchemas\", templateUrl: \"views/user-virtual-schemas.html\"},\n-        \"resources\" : {url : \"/resources\", templateUrl: \"views/user-resources.html\"}, \n-        \"finish\" : {url : \"/finish\", templateUrl: \"views/user-form-finish.html\"}\n+        \"credentials\": {url: \"/credentials\", templateUrl: \"views/user-credentials.html\"},\n+        \"groups\": {url: \"/groups\", templateUrl: \"views/user-groups.html\"},\n+        \"plainSchemas\": {url: \"/plainSchemas\", templateUrl: \"views/user-plain-schemas.html\"},\n+        \"derivedSchemas\": {url: \"/derivedSchemas\", templateUrl: \"views/user-derived-schemas.html\"},\n+        \"virtualSchemas\": {url: \"/virtualSchemas\", templateUrl: \"views/user-virtual-schemas.html\"},\n+        \"resources\": {url: \"/resources\", templateUrl: \"views/user-resources.html\"},\n+        \"finish\": {url: \"/finish\", templateUrl: \"views/user-form-finish.html\"}\n       };\n-      \n-      \n+\n+\n     }\n   }]);\n app.factory('AuthenticationHelper', ['$q', '$rootScope',"},{"sha":"ce100571d31ce71d615fd09f2840f21450b2cac4","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":63,"deletions":24,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -218,6 +218,20 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n+      var initProperties = function () {\n+        initRealms();\n+        //retrieve security available questions\n+        initSecurityQuestions();\n+        //initialize available groups\n+        initGroups();\n+        //initialize available auxiliary classes\n+        initAuxClasses();\n+        // initialize user attributes starting from any object schemas\n+        initUserSchemas();\n+        // initialize available resources\n+        initResources();\n+      };\n+\n       var readUser = function () {\n         UserSelfService.read().then(function (response) {\n           $scope.user = UserUtil.getUnwrappedUser(response);\n@@ -239,6 +253,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           for (var index in $scope.user.auxClasses) {\n             $scope.$emit(\"auxClassAdded\", $scope.user.auxClasses[index]);\n           }\n+          if ($scope.user.mustChangePassword) {\n+            $location.path('/mustchangepassword')\n+          }\n+          else {\n+            initProperties();\n+          }\n         }, function (e) {\n           console.log(\"Error during user read \", e);\n         });\n@@ -275,6 +295,17 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n       };\n \n+      //Event management\n+      $scope.$on('auxClassAdded', function (event, auxClass) {\n+        if (auxClass)\n+          initUserSchemas(auxClass);\n+      });\n+\n+      $scope.$on('auxClassRemoved', function (event, auxClass) {\n+        if (auxClass)\n+          removeUserSchemas(auxClass);\n+      });\n+\n       if ($scope.createMode) {\n \n         $scope.user = {\n@@ -295,34 +326,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         for (var index in $scope.dynamicForm.selectedAuxClasses) {\n           initUserSchemas($scope.dynamicForm.selectedAuxClasses[index]);\n         }\n+        initProperties();\n       } else {\n         // read user from syncope core\n         readUser();\n       }\n \n-      initRealms();\n-      //retrieve security available questions\n-      initSecurityQuestions();\n-      //initialize available groups\n-      initGroups();\n-      //initialize available auxiliary classes\n-      initAuxClasses();\n-      // initialize user attributes starting from any object schemas\n-      initUserSchemas();\n-      // initialize available resources\n-      initResources();\n-\n-      //Event management\n-      $scope.$on('auxClassAdded', function (event, auxClass) {\n-        if (auxClass)\n-          initUserSchemas(auxClass);\n-      });\n-\n-      $scope.$on('auxClassRemoved', function (event, auxClass) {\n-        if (auxClass)\n-          removeUserSchemas(auxClass);\n-      });\n-\n     };\n \n     $scope.saveUser = function (user) {\n@@ -441,10 +450,40 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n       }\n     };\n-    $scope.logout = function () {\n+\n+    $scope.changePassword = function (user, event) {\n+\n+      //getting the enclosing form in order to access to its controller                \n+      var currentForm = GenericUtil.getEnclosingFormController(event.target, $scope);\n+      if (currentForm != null) {\n+        //check if password and confirmPassword are equals using angular built-in validation\n+        if (ValidationExecutor.validate(currentForm, $scope)) {\n+          if (user && user.password) {\n+            UserSelfService.changePassword({\"newPassword\": user.password}).then(function (data) {\n+              $scope.logout(data);\n+            }, function (response) {\n+              var errorMessage;\n+              // parse error response \n+              if (response !== undefined) {\n+                errorMessage = response.split(\"ErrorMessage{{\")[1];\n+                errorMessage = errorMessage.split(\"}}\")[0];\n+                $scope.showError(\"An error occured during password change: \" + errorMessage, $scope.notification);\n+              }\n+            });\n+          } else {\n+            $scope.showError(\"You should use a valid and non-empty password\", $scope.notification);\n+          }\n+        }\n+      }\n+    };\n+\n+    $scope.logout = function (message) {\n       AuthService.logout().then(function (response) {\n         console.log(\"Logout successfully\");\n         $location.path('/self');\n+        if (message) {\n+          $scope.showSuccess(message, $scope.notification);\n+        }\n       }, function (response) {\n         console.log(\"Logout failed: \", response);\n       });"},{"sha":"503d9dcc2b043a5275dabc8466113abbb7d1e290","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/userSelfService.js","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -102,6 +102,26 @@ angular.module('login')\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n+            userSelfService.changePassword = function (body) {\n+              return $http\n+                      .post('/syncope-enduser/api/self/changePassword', body,\n+                              {\n+                                headers: {\n+                                  'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n+                                },\n+                                transformRequest: function (obj) {\n+                                  var str = [];\n+                                  for (var p in obj)\n+                                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n+                                  return str.join(\"&\");\n+                                }\n+                              })\n+                      .then(function (response) {\n+                        return response.data || response.statusText;\n+                      }, function (response) {\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n             return userSelfService;\n           }]);\n "},{"sha":"a06966cf9b4ec0c6b2a6bc645e1c4be6b2917a9a","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/mustchangepassword.html","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fmustchangepassword.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d729b206354b17a711e54e3ad9341cef803b961c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fmustchangepassword.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fmustchangepassword.html?ref=d729b206354b17a711e54e3ad9341cef803b961c","patch":"@@ -0,0 +1,74 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<div ng-cloak class=\"container\">\n+  <div ng-controller=\"UserController\" style=\"box-sizing: border-box; \">\n+\n+    <div id=\"form-container\" class=\"col-md-6 col-md-offset-3\" style=\"box-sizing: border-box; background-color: #F7F7F7;\">\n+\n+      <div>\n+        <div class=\"page-header\" style=\"text-align: left; font-weight: 700;\">\n+          <span>Password change required</span>\n+        </div>\n+        <div class=\"breadcrumb-header text-center\">\n+\n+          <div class=\"row\">            \n+            <div id=\"status-buttons\" class=\"btn-group btn-breadcrumb\">\n+              <a class=\"btn btn-default\" ng-click=\"logout()\"><i class=\"glyphicon glyphicon-off\"style=\"color:red\"></i></a>\n+              <!--add class breadcrumb-disabled-link to buttons to prevent click-->\n+              <a ui-sref-active=\"active\" class=\"btn btn-default\">Password change</a>\n+            </div>\n+          </div>\n+        </div>\n+        <form class=\"signup-form\" name=\"changePasswordForm\" ng-submit=\"changePassword(user, $event)\" novalidate>\n+\n+          <div id=\"form-views\" ui-view>\n+            <div id=\"attribute\" class=\"form-group\">\n+              <label for=\"user.password\">Password</label>\n+              <input type=\"password\" class=\"form-control\" name=\"password\" ng-model=\"user.password\" placeholder=\"password\">\n+            </div>\n+\n+            <div id=\"attribute\" class=\"form-group\">\n+              <label for=\"confirmPassword\">Confirm Password</label>\n+              <input name=\"password\" type=\"password\" class=\"form-control\" equals=\"user.password\" ng-model=\"confirmPassword.value\"\n+                     placeholder=\"confirm password\" validate=\"true\">\n+              <validation-message name=\"password\"/>\n+            </div>\n+\n+            <div id=\"attribute\" class=\"form-group\">\n+              <div class=\"suggestions\">\n+                Password Strength: \n+                <span ng-if=\"passStrength < 50\">Not secure!</span>\n+                <span ng-if=\"passStrength >= 50 && passStrength <= 82\">Secure, but you could do better!</span>\n+                <span ng-if=\"passStrength > 82\">Very Good!</span>\n+              </div>\n+              <div ng-password-strength=\"user.password\" strength=\"passStrength\" inner-class=\"progress-bar\" inner-class-prefix=\"progress-bar-\">\n+              </div>\n+            </div>\n+            <div id=\"attribute\" class=\"form-group row\">\n+              <button id=\"resetpassword\" type=\"submit\" class=\"btn btn-default pull-right\">Submit</button>\n+              <div class=\"pull-left\">\n+                <a id=\"cancel\" href=\"#/self\" class=\"btn btn-danger\">Cancel</a>\n+              </div>\n+            </div>\n+          </div>\n+        </form>\n+      </div>\n+    </div>\n+  </div>\n+</div>"}]}