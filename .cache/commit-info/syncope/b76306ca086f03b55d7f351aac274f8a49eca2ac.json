{"sha":"b76306ca086f03b55d7f351aac274f8a49eca2ac","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI3NjMwNmNhMDg2ZjAzYjU1ZDdmMzUxYWFjMjc0ZjhhNDllY2EyYWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-08-31T10:50:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-08-31T10:53:53Z"},"message":"Upgrading Flowable","tree":{"sha":"8829c7b3dab98a328bfa3b3d92441326868607cf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8829c7b3dab98a328bfa3b3d92441326868607cf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b76306ca086f03b55d7f351aac274f8a49eca2ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b76306ca086f03b55d7f351aac274f8a49eca2ac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b76306ca086f03b55d7f351aac274f8a49eca2ac","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b76306ca086f03b55d7f351aac274f8a49eca2ac/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d184ceaadd05872fc027a335a76f2222ee5ac14c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d184ceaadd05872fc027a335a76f2222ee5ac14c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d184ceaadd05872fc027a335a76f2222ee5ac14c"}],"stats":{"total":17,"additions":9,"deletions":8},"files":[{"sha":"f7236ff139a9115913e5afd91df0c9dfdd7784d8","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b76306ca086f03b55d7f351aac274f8a49eca2ac/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b76306ca086f03b55d7f351aac274f8a49eca2ac/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=b76306ca086f03b55d7f351aac274f8a49eca2ac","patch":"@@ -473,7 +473,7 @@ public UserRequestForm getForm(final String userKey, final String taskId) {\n \n         return adminUser.equals(authUser)\n                 ? getForm(getTask(taskId))\n-                : getForm(query.taskCandidateOrAssigned(authUser).singleResult());\n+                : getForm(query.or().taskCandidateUser(authUser).taskAssignee(authUser).endOr().singleResult());\n     }\n \n     @Transactional(readOnly = true)\n@@ -482,7 +482,7 @@ public Pair<Integer, List<UserRequestForm>> getForms(\n             final String userKey,\n             final int page,\n             final int size,\n-            final List<OrderByClause> orderByClauses) {\n+            final List<OrderByClause> ob) {\n \n         TaskQuery query = engine.getTaskService().createTaskQuery().taskWithFormKey();\n         if (userKey != null) {\n@@ -491,8 +491,8 @@ public Pair<Integer, List<UserRequestForm>> getForms(\n \n         String authUser = AuthContextUtils.getUsername();\n         return adminUser.equals(authUser)\n-                ? getForms(query, page, size, orderByClauses)\n-                : getForms(query.taskCandidateOrAssigned(authUser), page, size, orderByClauses);\n+                ? getForms(query, page, size, ob)\n+                : getForms(query.or().taskCandidateUser(authUser).taskAssignee(authUser).endOr(), page, size, ob);\n     }\n \n     protected Pair<Integer, List<UserRequestForm>> getForms(\n@@ -580,7 +580,8 @@ public UserRequestForm claimForm(final String taskId) {\n         String authUser = AuthContextUtils.getUsername();\n         if (!adminUser.equals(authUser)) {\n             List<Task> tasksForUser = engine.getTaskService().createTaskQuery().\n-                    taskWithFormKey().taskId(taskId).taskCandidateOrAssigned(authUser).list();\n+                    taskWithFormKey().taskId(taskId).\n+                    or().taskCandidateUser(authUser).taskAssignee(authUser).endOr().list();\n             if (tasksForUser.isEmpty()) {\n                 throw new WorkflowException(\n                         new IllegalArgumentException(authUser + \" is not candidate nor assignee of task \" + taskId));"},{"sha":"425fe879a80dad6a4d84a29ae5efd888d2f3aca7","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/DomainProcessEngineFactoryBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b76306ca086f03b55d7f351aac274f8a49eca2ac/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b76306ca086f03b55d7f351aac274f8a49eca2ac/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java?ref=b76306ca086f03b55d7f351aac274f8a49eca2ac","patch":"@@ -27,9 +27,9 @@\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.flowable.common.engine.impl.cfg.SpringBeanFactoryProxyMap;\n import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.impl.el.ProcessExpressionManager;\n import org.flowable.engine.impl.util.EngineServiceUtil;\n import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n-import org.flowable.spring.SpringExpressionManager;\n import org.flowable.spring.SpringProcessEngineConfiguration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -79,7 +79,7 @@ private ProcessEngine build(final String domain, final DataSource datasource) {\n             conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n         }\n         if (conf.getExpressionManager() == null) {\n-            conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n+            conf.setExpressionManager(new ProcessExpressionManager(conf.getBeans()));\n         }\n         if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n             SpringIdmEngineConfiguration spiec = ctx.getBean(SpringIdmEngineConfiguration.class);"},{"sha":"10bfe9c436a4602c3a61926940604454db193cf2","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b76306ca086f03b55d7f351aac274f8a49eca2ac/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b76306ca086f03b55d7f351aac274f8a49eca2ac/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=b76306ca086f03b55d7f351aac274f8a49eca2ac","patch":"@@ -426,7 +426,7 @@ under the License.\n \n     <groovy.version>4.0.0-alpha-3</groovy.version>\n \n-    <flowable.version>6.6.0</flowable.version>\n+    <flowable.version>6.7.0</flowable.version>\n \n     <camel.version>3.11.1</camel.version>\n "}]}