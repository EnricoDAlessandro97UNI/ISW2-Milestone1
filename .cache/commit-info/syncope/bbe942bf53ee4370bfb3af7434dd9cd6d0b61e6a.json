{"sha":"bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJiZTk0MmJmNTNlZTQzNzBiZmIzYWY3NDM0ZGQ5Y2Q2ZDBiNjFlNmE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-05-11T15:01:28Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-05-11T15:01:28Z"},"message":"added virtual schema on the console. It must be implemented virtual attributes ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246942 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0e839fbc611804c73ac626b576644b1289a01b7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0e839fbc611804c73ac626b576644b1289a01b7f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/comments","author":null,"committer":null,"parents":[{"sha":"455805edffd32a916d863c2229f0f026330dba92","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/455805edffd32a916d863c2229f0f026330dba92","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/455805edffd32a916d863c2229f0f026330dba92"}],"stats":{"total":3926,"additions":2154,"deletions":1772},"files":[{"sha":"802e3687034c7e16bf535aa76740415eff0ef322","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -27,18 +27,27 @@ public final class Constants {\n     public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS =\n             \"user.derived.schema.paginator.rows\";\n \n+    public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS =\n+            \"user.virtual.schema.paginator.rows\";\n+\n     public static final String PREF_ROLE_SCHEMA_PAGINATOR_ROWS =\n             \"role.schema.paginator.rows\";\n \n     public static final String PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS =\n             \"role.derived.schema.paginator.rows\";\n \n+    public static final String PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS =\n+            \"role.virtual.schema.paginator.rows\";\n+\n     public static final String PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS =\n             \"membership.schema.paginator.rows\";\n \n     public static final String PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS =\n             \"membership.derived.aschema.paginator.rows\";\n \n+    public static final String PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS =\n+            \"membership.virtual.aschema.paginator.rows\";\n+\n     public static final String PREF_USERS_PAGINATOR_ROWS =\n             \"users.paginator.rows\";\n \n@@ -66,6 +75,12 @@ public final class Constants {\n \n     public static final String ENGLISH_DATE_FORMAT = \"MM/dd/yyyy hh:mm:ss\";\n \n+    public static final String[] SCHEMA_FIELDS = {\"name\", \"type\"};\n+\n+    public static final String[] VIRTUAL_SCHEMA_FIELDS = {\"name\"};\n+\n+    public static final String[] DERIVED_SCHEMA_FIELDS = {\"name\", \"expression\"};\n+\n     private Constants() {\n     }\n }"},{"sha":"05d896647f55f8591cf4b93d093197f0e9cc31c6","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchemaModalPage.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.client.AbstractBaseBean;\n+\n+/**\n+ * Modal window with Schema form.\n+ */\n+abstract public class AbstractSchemaModalPage extends BaseModalPage {\n+\n+    @SpringBean\n+    protected SchemaRestClient restClient;\n+\n+    protected String kind;\n+\n+    public AbstractSchemaModalPage(String kind) {\n+        this.kind = kind;\n+    }\n+\n+    abstract public void setSchemaModalPage(\n+            final BasePage basePage,\n+            final ModalWindow window,\n+            AbstractBaseBean schema,\n+            final boolean createFlag);\n+\n+    public String getKind() {\n+        return kind;\n+    }\n+}"},{"sha":"8dd9006e8fdb01b59b38c1853b43fce80217e738","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":27,"deletions":64,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -17,92 +17,63 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.to.DerivedSchemaTO;\n-import org.syncope.console.rest.SchemaRestClient;\n \n /**\n  * Modal window with Schema form.\n  */\n-public class DerivedSchemaModalPage extends BaseModalPage {\n-\n-    public enum Entity {\n-\n-        USER, ROLE, MEMBERSHIP\n-\n-    };\n-    private TextField name;\n-\n-    private TextField expression;\n+public class DerivedSchemaModalPage extends AbstractSchemaModalPage {\n \n-    private AjaxButton submit;\n-\n-    private Entity entity;\n-\n-    @SpringBean\n-    private SchemaRestClient restClient;\n+    public DerivedSchemaModalPage(String kind) {\n+        super(kind);\n+    }\n \n-    public DerivedSchemaModalPage(final Schema basePage,\n+    @Override\n+    public void setSchemaModalPage(\n+            final BasePage basePage,\n             final ModalWindow window,\n-            DerivedSchemaTO schema,\n+            AbstractBaseBean schema,\n             final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new DerivedSchemaTO();\n         }\n \n-        Form schemaForm = new Form(\"SchemaForm\");\n+        final Form schemaForm = new Form(\"SchemaForm\");\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        name = new TextField(\"name\");\n+        final TextField name = new TextField(\"name\");\n         name.setRequired(true);\n \n-        expression = new TextField(\"expression\");\n+        final TextField expression = new TextField(\"expression\");\n         expression.setRequired(true);\n \n         name.setEnabled(createFlag);\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(\n-                getString(\"submit\"))) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n+                \"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                if (getEntity() == Entity.USER) {\n-\n-                    if (createFlag) {\n-                        restClient.createUserDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    } else {\n-                        restClient.updateUserDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    }\n-                } else if (getEntity() == Entity.ROLE) {\n-                    if (createFlag) {\n-                        restClient.createRoleDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    } else {\n-                        restClient.updateRoleDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    }\n-                } else if (getEntity() == Entity.MEMBERSHIP) {\n-                    if (createFlag) {\n-                        restClient.createMembershipDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    } else {\n-                        restClient.updateMembershipDerivedSchema(\n-                                (DerivedSchemaTO) form.getDefaultModelObject());\n-                    }\n+                if (createFlag) {\n+                    restClient.createDerivedSchema(kind,\n+                            (DerivedSchemaTO) form.getDefaultModelObject());\n+                } else {\n+                    restClient.updateDerivedSchema(kind,\n+                            (DerivedSchemaTO) form.getDefaultModelObject());\n                 }\n-                basePage.setOperationResult(true);\n+\n+                Schema callerPage = (Schema) basePage;\n+                callerPage.setOperationResult(true);\n \n                 window.close(target);\n             }\n@@ -125,8 +96,8 @@ protected void onError(final AjaxRequestTarget target,\n                     \"update\");\n         }\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n         schemaForm.add(expression);\n@@ -135,12 +106,4 @@ protected void onError(final AjaxRequestTarget target,\n \n         add(schemaForm);\n     }\n-\n-    public Entity getEntity() {\n-        return entity;\n-    }\n-\n-    public void setEntity(Entity entity) {\n-        this.entity = entity;\n-    }\n }"},{"sha":"d4fe013c5b232a64d15d34a38a93af2a74cc8168","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":140,"deletions":41,"changes":181,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -284,6 +284,71 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n+\n+        //--------------------------------\n+\n+        add(form);\n+    }\n+\n+    public List<AttributeTO> getMembershipAttributes() {\n+\n+        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n+\n+        AttributeTO attribute;\n+\n+        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n+\n+            attribute = new AttributeTO();\n+            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n+            attribute.setValues(new ArrayList<String>());\n+\n+            for (String value : schemaWrapper.getValues()) {\n+                attribute.getValues().add(value);\n+            }\n+\n+            attributes.add(attribute);\n+        }\n+\n+        return attributes;\n+    }\n+\n+    public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n+        schemaWrappers = new ArrayList<SchemaWrapper>();\n+        SchemaWrapper schemaWrapper;\n+\n+        List<SchemaTO> schemas = schemaRestClient.getSchemas(\"membership\");\n+\n+        boolean found = false;\n+\n+        if (create) {\n+            for (SchemaTO schema : schemas) {\n+                schemaWrapper = new SchemaWrapper(schema);\n+                schemaWrappers.add(schemaWrapper);\n+            }\n+        } else {\n+            for (SchemaTO schema : schemas) {\n+                for (AttributeTO attribute : membershipTO.getAttributes()) {\n+                    if (schema.getName().equals(attribute.getSchema())) {\n+                        schemaWrapper = new SchemaWrapper(schema);\n+                        schemaWrapper.setValues(attribute.getValues());\n+                        schemaWrappers.add(schemaWrapper);\n+                        found = true;\n+                    }\n+                }\n+                if (!found) {\n+                    schemaWrapper = new SchemaWrapper(schema);\n+                    schemaWrappers.add(schemaWrapper);\n+                } else {\n+                    found = false;\n+                }\n+            }\n+        }\n+    }\n+\n+    private void setDerivedAttributeContainer(\n+            final Form form,\n+            final MembershipTO membershipTO,\n+            final IModel<List<String>> derivedSchemaNames) {\n         final WebMarkupContainer derivedAttributesContainer =\n                 new WebMarkupContainer(\"derivedAttributesContainer\");\n         derivedAttributesContainer.setOutputMarkupId(true);\n@@ -370,63 +435,97 @@ public CharSequence preDecorateScript(\n         };\n         derivedAttributes.setReuseItems(true);\n         derivedAttributesContainer.add(derivedAttributes);\n-        //--------------------------------\n-\n-        add(form);\n     }\n \n-    public List<AttributeTO> getMembershipAttributes() {\n+    private void setVirtualAttributeContainer(\n+            final Form form,\n+            final MembershipTO membershipTO,\n+            final IModel<List<String>> virtualSchemaNames) {\n+        final WebMarkupContainer virtualAttributesContainer =\n+                new WebMarkupContainer(\"virtualAttributesContainer\");\n+        virtualAttributesContainer.setOutputMarkupId(true);\n+        form.add(virtualAttributesContainer);\n \n-        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n-\n-        AttributeTO attribute;\n+        AjaxButton addVirtualAttributeBtn = new IndicatingAjaxButton(\n+                \"addVirtualAttributeBtn\",\n+                new Model(getString(\"addVirtualAttributeBtn\"))) {\n \n-        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-\n-            attribute = new AttributeTO();\n-            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new ArrayList<String>());\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n \n-            for (String value : schemaWrapper.getValues()) {\n-                attribute.getValues().add(value);\n+                membershipTO.getVirtualAttributes().add(new AttributeTO());\n+                target.addComponent(virtualAttributesContainer);\n             }\n+        };\n+        addVirtualAttributeBtn.setDefaultFormProcessing(false);\n+        form.add(addVirtualAttributeBtn);\n \n-            attributes.add(attribute);\n-        }\n+        ListView<AttributeTO> virtualAttributes = new ListView<AttributeTO>(\n+                \"virtualAttributes\", membershipTO.getVirtualAttributes()) {\n \n-        return attributes;\n-    }\n+            @Override\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO virtualAttributeTO = item.getModelObject();\n \n-    public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-        SchemaWrapper schemaWrapper;\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n \n-        List<SchemaTO> schemas = schemaRestClient.getSchemas(\"membership\");\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        membershipTO.getVirtualAttributes().remove(\n+                                virtualAttributeTO);\n+                        item.getParent().removeAll();\n+                        target.addComponent(virtualAttributesContainer);\n+                    }\n \n-        boolean found = false;\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n \n-        if (create) {\n-            for (SchemaTO schema : schemas) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            }\n-        } else {\n-            for (SchemaTO schema : schemas) {\n-                for (AttributeTO attribute : membershipTO.getAttributes()) {\n-                    if (schema.getName().equals(attribute.getSchema())) {\n-                        schemaWrapper = new SchemaWrapper(schema);\n-                        schemaWrapper.setValues(attribute.getValues());\n-                        schemaWrappers.add(schemaWrapper);\n-                        found = true;\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n                     }\n+                });\n+\n+                final DropDownChoice<String> virtualSchemaChoice =\n+                        new DropDownChoice<String>(\n+                        \"schema\",\n+                        new PropertyModel<String>(virtualAttributeTO, \"schema\"),\n+                        virtualSchemaNames);\n+\n+                virtualSchemaChoice.setOutputMarkupId(true);\n+\n+                if (virtualAttributeTO.getSchema() != null) {\n+                    item.add(virtualSchemaChoice.setEnabled(Boolean.FALSE));\n+                } else {\n+                    item.add(virtualSchemaChoice.setRequired(true));\n                 }\n-                if (!found) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n-                    schemaWrappers.add(schemaWrapper);\n+\n+                final List<String> values = virtualAttributeTO.getValues();\n+\n+                if (values == null || values.isEmpty()) {\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(null)).setVisible(Boolean.FALSE));\n                 } else {\n-                    found = false;\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(values.get(0))).setEnabled(\n+                            Boolean.FALSE));\n                 }\n             }\n-        }\n+        };\n+        virtualAttributes.setReuseItems(true);\n+        virtualAttributesContainer.add(virtualAttributes);\n     }\n }"},{"sha":"8bb40a6c75a4637db496ca1431638343df5c546d","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":199,"deletions":85,"changes":284,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -130,6 +130,15 @@ protected List<String> load() {\n                     }\n                 };\n \n+        final IModel<List<String>> virtualSchemaNames =\n+                new LoadableDetachableModel<List<String>>() {\n+\n+                    @Override\n+                    protected List<String> load() {\n+                        return schemaRestClient.getVirtualSchemaNames(\"role\");\n+                    }\n+                };\n+\n         final ListView roleAttributesView = new ListView(\"roleSchemas\",\n                 schemaWrappers) {\n \n@@ -297,92 +306,13 @@ public CharSequence preDecorateScript(\n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        final WebMarkupContainer derivedAttributesContainer =\n-                new WebMarkupContainer(\"derivedAttributesContainer\");\n-\n-        derivedAttributesContainer.setOutputMarkupId(true);\n-        form.add(derivedAttributesContainer);\n-\n-        AjaxButton addDerivedAttributeBtn = new IndicatingAjaxButton(\n-                \"addDerivedAttributeBtn\",\n-                new Model(getString(\"addDerivedAttributeBtn\"))) {\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                roleTO.getDerivedAttributes().add(new AttributeTO());\n-                target.addComponent(derivedAttributesContainer);\n-            }\n-        };\n-        addDerivedAttributeBtn.setDefaultFormProcessing(false);\n-        form.add(addDerivedAttributeBtn);\n-\n-        ListView<AttributeTO> derivedAttributes = new ListView<AttributeTO>(\n-                \"derivedAttributes\", roleTO.getDerivedAttributes()) {\n-\n-            @Override\n-            protected void populateItem(final ListItem<AttributeTO> item) {\n-                final AttributeTO derivedAttributeTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        roleTO.getDerivedAttributes().remove(derivedAttributeTO);\n-                        item.getParent().removeAll();\n-                        target.addComponent(derivedAttributesContainer);\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n-\n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n-                            }\n-                        };\n-                    }\n-                });\n-\n-                final DropDownChoice<String> derivedSchemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(derivedAttributeTO, \"schema\"),\n-                        derivedSchemaNames);\n-\n-                derivedSchemaChoice.setOutputMarkupId(true);\n-\n-                if (derivedAttributeTO.getSchema() != null) {\n-                    item.add(derivedSchemaChoice.setEnabled(Boolean.FALSE));\n-                } else {\n-                    item.add(derivedSchemaChoice.setRequired(true));\n-                }\n-\n-                final List<String> values = derivedAttributeTO.getValues();\n+        setDerivedAttributeContainer(form, roleTO, derivedSchemaNames);\n+        //--------------------------------\n \n-                if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(null)).setVisible(Boolean.FALSE));\n-                } else {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(values.get(0))).setEnabled(\n-                            Boolean.FALSE));\n-                }\n-            }\n-        };\n-        derivedAttributes.setReuseItems(true);\n-        derivedAttributesContainer.add(derivedAttributes);\n+        //--------------------------------\n+        // Virtual attributes container\n+        //--------------------------------\n+        setVirtualAttributeContainer(form, roleTO, virtualSchemaNames);\n         //--------------------------------\n \n         ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n@@ -803,4 +733,188 @@ public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n             }\n         }\n     }\n+\n+    private void setDerivedAttributeContainer(\n+            final Form form,\n+            final RoleTO roleTO,\n+            final IModel<List<String>> derivedSchemaNames) {\n+        final WebMarkupContainer derivedAttributesContainer =\n+                new WebMarkupContainer(\"derivedAttributesContainer\");\n+\n+        derivedAttributesContainer.setOutputMarkupId(true);\n+        form.add(derivedAttributesContainer);\n+\n+        AjaxButton addDerivedAttributeBtn = new IndicatingAjaxButton(\n+                \"addDerivedAttributeBtn\",\n+                new Model(getString(\"addDerivedAttributeBtn\"))) {\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                roleTO.getDerivedAttributes().add(new AttributeTO());\n+                target.addComponent(derivedAttributesContainer);\n+            }\n+        };\n+        addDerivedAttributeBtn.setDefaultFormProcessing(false);\n+        form.add(addDerivedAttributeBtn);\n+\n+        ListView<AttributeTO> derivedAttributes = new ListView<AttributeTO>(\n+                \"derivedAttributes\", roleTO.getDerivedAttributes()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO derivedAttributeTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        roleTO.getDerivedAttributes().remove(derivedAttributeTO);\n+                        item.getParent().removeAll();\n+                        target.addComponent(derivedAttributesContainer);\n+                    }\n+\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n+\n+                final DropDownChoice<String> derivedSchemaChoice =\n+                        new DropDownChoice<String>(\n+                        \"schema\",\n+                        new PropertyModel<String>(derivedAttributeTO, \"schema\"),\n+                        derivedSchemaNames);\n+\n+                derivedSchemaChoice.setOutputMarkupId(true);\n+\n+                if (derivedAttributeTO.getSchema() != null) {\n+                    item.add(derivedSchemaChoice.setEnabled(Boolean.FALSE));\n+                } else {\n+                    item.add(derivedSchemaChoice.setRequired(true));\n+                }\n+\n+                final List<String> values = derivedAttributeTO.getValues();\n+\n+                if (values == null || values.isEmpty()) {\n+                    item.add(new TextField(\n+                            \"derivedAttributeValue\",\n+                            new Model(null)).setVisible(Boolean.FALSE));\n+                } else {\n+                    item.add(new TextField(\n+                            \"derivedAttributeValue\",\n+                            new Model(values.get(0))).setEnabled(\n+                            Boolean.FALSE));\n+                }\n+            }\n+        };\n+        derivedAttributes.setReuseItems(true);\n+        derivedAttributesContainer.add(derivedAttributes);\n+    }\n+\n+    private void setVirtualAttributeContainer(\n+            final Form form,\n+            final RoleTO roleTO,\n+            final IModel<List<String>> virtualSchemaNames) {\n+        final WebMarkupContainer virtualAttributesContainer =\n+                new WebMarkupContainer(\"virtualAttributesContainer\");\n+\n+        virtualAttributesContainer.setOutputMarkupId(true);\n+        form.add(virtualAttributesContainer);\n+\n+        AjaxButton addVirtualAttributeBtn = new IndicatingAjaxButton(\n+                \"addVirtualAttributeBtn\",\n+                new Model(getString(\"addVirtualAttributeBtn\"))) {\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                roleTO.getVirtualAttributes().add(new AttributeTO());\n+                target.addComponent(virtualAttributesContainer);\n+            }\n+        };\n+        addVirtualAttributeBtn.setDefaultFormProcessing(false);\n+        form.add(addVirtualAttributeBtn);\n+\n+        ListView<AttributeTO> virtualAttributes = new ListView<AttributeTO>(\n+                \"virtualAttributes\", roleTO.getVirtualAttributes()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO virtualAttributeTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        roleTO.getVirtualAttributes().remove(virtualAttributeTO);\n+                        item.getParent().removeAll();\n+                        target.addComponent(virtualAttributesContainer);\n+                    }\n+\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n+\n+                final DropDownChoice<String> virtualSchemaChoice =\n+                        new DropDownChoice<String>(\n+                        \"schema\",\n+                        new PropertyModel<String>(virtualAttributeTO, \"schema\"),\n+                        virtualSchemaNames);\n+\n+                virtualSchemaChoice.setOutputMarkupId(true);\n+\n+                if (virtualAttributeTO.getSchema() != null) {\n+                    item.add(virtualSchemaChoice.setEnabled(Boolean.FALSE));\n+                } else {\n+                    item.add(virtualSchemaChoice.setRequired(true));\n+                }\n+\n+                final List<String> values = virtualAttributeTO.getValues();\n+\n+                if (values == null || values.isEmpty()) {\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(null)).setVisible(Boolean.FALSE));\n+                } else {\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(values.get(0))).setEnabled(\n+                            Boolean.FALSE));\n+                }\n+            }\n+        };\n+        virtualAttributes.setReuseItems(true);\n+        virtualAttributesContainer.add(virtualAttributes);\n+    }\n }"},{"sha":"685a8e7bd5a622c3cd78ba6394ef118f9b90c6a7","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":753,"deletions":997,"changes":1750,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -41,12 +41,13 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.to.SchemaTO;\n+import org.syncope.client.to.VirtualSchemaTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n-import org.syncope.console.pages.DerivedSchemaModalPage.Entity;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -71,6 +72,13 @@ private enum SchemaDerivedType {\n         MembershipDerivedSchema\n     };\n \n+    private enum SchemaVirtualType {\n+\n+        RoleVirtualSchema,\n+        UserVirtualSchema,\n+        MembershipVirtualSchema\n+    };\n+\n     private static final int WIN_WIDTH = 400;\n \n     private static final int WIN_HEIGHT = 200;\n@@ -89,6 +97,10 @@ private enum SchemaDerivedType {\n \n     private final ModalWindow editUserDerivedSchemaWin;\n \n+    private final ModalWindow createUserVirtualSchemaWin;\n+\n+    private final ModalWindow editUserVirtualSchemaWin;\n+\n     private final ModalWindow createRoleSchemaWin;\n \n     private final ModalWindow editRoleSchemaWin;\n@@ -97,6 +109,10 @@ private enum SchemaDerivedType {\n \n     private final ModalWindow editRoleDerivedSchemaWin;\n \n+    private final ModalWindow createRoleVirtualSchemaWin;\n+\n+    private final ModalWindow editRoleVirtualSchemaWin;\n+\n     private final ModalWindow createMembershipSchemaWin;\n \n     private final ModalWindow editMembershipSchemaWin;\n@@ -105,30 +121,46 @@ private enum SchemaDerivedType {\n \n     private final ModalWindow editMembershipDerivedSchemaWin;\n \n-    private WebMarkupContainer userSchemaContainer;\n+    private final ModalWindow createMembershipVirtualSchemaWin;\n+\n+    private final ModalWindow editMembershipVirtualSchemaWin;\n \n-    private WebMarkupContainer userDerivedSchemaContainer;\n+    private WebMarkupContainer userSchemasContainer;\n+\n+    private WebMarkupContainer userDerivedSchemasContainer;\n+\n+    private WebMarkupContainer userVirtualSchemasContainer;\n \n     private WebMarkupContainer roleSchemasContainer;\n \n     private WebMarkupContainer roleDerivedSchemasContainer;\n \n+    private WebMarkupContainer roleVirtualSchemasContainer;\n+\n     private WebMarkupContainer membershipSchemaContainer;\n \n     private WebMarkupContainer membershipDerivedSchemaContainer;\n \n+    private WebMarkupContainer membershipVirtualSchemaContainer;\n+\n     private int userSchemaPageRows;\n \n     private int userDerSchemaPageRows;\n \n+    private int userVirSchemaPageRows;\n+\n     private int rolePageRows;\n \n     private int roleDerPageRows;\n \n+    private int roleVirPageRows;\n+\n     private int membershipPageRows;\n \n     private int membershipDerPageRows;\n \n+    private int membershipVirPageRows;\n+\n     /*\n     Response flag set by the Modal Window after the operation is completed\n      */\n@@ -137,23 +169,61 @@ private enum SchemaDerivedType {\n     public Schema(PageParameters parameters) {\n         super(parameters);\n \n+        userSchemasContainer =\n+                new WebMarkupContainer(\"userSchemasContainer\");\n+\n+        userDerivedSchemasContainer =\n+                new WebMarkupContainer(\"userDerivedSchemasContainer\");\n+\n+        userVirtualSchemasContainer =\n+                new WebMarkupContainer(\"userVirtualSchemasContainer\");\n+\n+        roleSchemasContainer =\n+                new WebMarkupContainer(\"roleSchemasContainer\");\n+\n+        roleDerivedSchemasContainer =\n+                new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n+\n+        roleVirtualSchemasContainer =\n+                new WebMarkupContainer(\"roleVirtualSchemasContainer\");\n+\n+        membershipSchemaContainer =\n+                new WebMarkupContainer(\"membershipSchemaContainer\");\n+\n+        membershipDerivedSchemaContainer =\n+                new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n+\n+        membershipVirtualSchemaContainer =\n+                new WebMarkupContainer(\"membershipVirtualSchemaContainer\");\n+\n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n         add(createRoleDerivedSchemaWin = new ModalWindow(\n                 \"createRoleDerivedSchemaWin\"));\n \n+        add(createRoleVirtualSchemaWin = new ModalWindow(\n+                \"createRoleVirtualSchemaWin\"));\n+\n         add(editRoleDerivedSchemaWin = new ModalWindow(\n                 \"editRoleDerivedSchemaWin\"));\n \n+        add(editRoleVirtualSchemaWin = new ModalWindow(\n+                \"editRoleVirtualSchemaWin\"));\n+\n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n \n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n \n         add(createUserDerivedSchemaWin = new ModalWindow(\n                 \"createUserDerSchemaWin\"));\n+        add(createUserVirtualSchemaWin = new ModalWindow(\n+                \"createUserVirSchemaWin\"));\n+\n         add(editUserDerivedSchemaWin = new ModalWindow(\n                 \"editUserDerSchemaWin\"));\n+        add(editUserVirtualSchemaWin = new ModalWindow(\n+                \"editUserVirSchemaWin\"));\n \n         add(createMembershipSchemaWin = new ModalWindow(\n                 \"createMembershipSchemaWin\"));\n@@ -162,8 +232,13 @@ public Schema(PageParameters parameters) {\n \n         add(createMembershipDerivedSchemaWin = new ModalWindow(\n                 \"createMembershipDerSchemaWin\"));\n+        add(createMembershipVirtualSchemaWin = new ModalWindow(\n+                \"createMembershipVirSchemaWin\"));\n+\n         add(editMembershipDerivedSchemaWin = new ModalWindow(\n                 \"editMembershipDerSchemaWin\"));\n+        add(editMembershipVirtualSchemaWin = new ModalWindow(\n+                \"editMembershipVirSchemaWin\"));\n \n         rolePageRows = prefMan.getPaginatorRows(\n                 getWebRequestCycle().getWebRequest(),\n@@ -173,6 +248,10 @@ public Schema(PageParameters parameters) {\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n \n+        roleVirPageRows = prefMan.getPaginatorRows(\n+                getWebRequestCycle().getWebRequest(),\n+                Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS);\n+\n         userSchemaPageRows = prefMan.getPaginatorRows(\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS);\n@@ -181,6 +260,10 @@ public Schema(PageParameters parameters) {\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n \n+        userVirSchemaPageRows = prefMan.getPaginatorRows(\n+                getWebRequestCycle().getWebRequest(),\n+                Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS);\n+\n         membershipPageRows = prefMan.getPaginatorRows(\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n@@ -189,6 +272,10 @@ public Schema(PageParameters parameters) {\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n+        membershipVirPageRows = prefMan.getPaginatorRows(\n+                getWebRequestCycle().getWebRequest(),\n+                Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS);\n+\n         final String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n                 \"Schema\", \"create\");\n \n@@ -198,1192 +285,861 @@ public Schema(PageParameters parameters) {\n         final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\n                 \"Schema\", \"delete\");\n \n-        List<IColumn> rolesColumns = new ArrayList<IColumn>();\n-\n-        rolesColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n+        List<IColumn> rolesColumns = getColumnsForSchema(\n+                roleSchemasContainer,\n+                editRoleSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                Constants.SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedCreateRoles);\n \n-        rolesColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n-                \"type\", \"type\"));\n+        final AjaxFallbackDefaultDataTable tableRoles =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n+                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n \n-        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\"))) {\n+        add(getPaginatorForm(\n+                roleSchemasContainer,\n+                tableRoles,\n+                \"RolesPaginatorForm\",\n+                \"rolePageRows\",\n+                Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS,\n+                rolePageRows));\n+\n+        List<IColumn> columnsRolesDer = getColumnsForSchema(\n+                roleDerivedSchemasContainer,\n+                editRoleDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                Constants.DERIVED_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SchemaTO> model) {\n+        final AjaxFallbackDefaultDataTable tableRolesDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.RoleDerivedSchema),\n+                roleDerPageRows);\n \n-                final SchemaTO schemaTO = model.getObject();\n+        add(getPaginatorForm(\n+                roleDerivedSchemasContainer,\n+                tableRolesDer,\n+                \"RolesDerPaginatorForm\",\n+                \"roleDerPageRows\",\n+                Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS,\n+                roleDerPageRows));\n+\n+        List<IColumn> columnsRolesVir = getColumnsForSchema(\n+                roleVirtualSchemasContainer,\n+                editRoleVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                Constants.VIRTUAL_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableRolesVir =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesVir,\n+                new VirtualSchemaProvider(SchemaVirtualType.RoleVirtualSchema),\n+                roleVirPageRows);\n+\n+        add(getPaginatorForm(\n+                roleVirtualSchemasContainer,\n+                tableRolesVir,\n+                \"RolesVirPaginatorForm\",\n+                \"roleVirPageRows\",\n+                Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS,\n+                roleVirPageRows));\n+\n+        List<IColumn> userColumns = getColumnsForSchema(\n+                userSchemasContainer,\n+                editUserSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                Constants.SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedCreateRoles);\n \n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n+        final AjaxFallbackDefaultDataTable tableUsers =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n+                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editRoleSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+        tableUsers.setMarkupId(\"tableUsers\");\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        SchemaModalPage window =\n-                                                new SchemaModalPage(\n-                                                Schema.this, editRoleSchemaWin,\n-                                                schemaTO, false);\n-                                        window.setEntity(\n-                                                SchemaModalPage.Entity.ROLE);\n-                                        return window;\n-                                    }\n-                                });\n+        add(getPaginatorForm(\n+                userSchemasContainer,\n+                tableUsers,\n+                \"UsersPaginatorForm\",\n+                \"userSchemaPageRows\",\n+                Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS,\n+                userSchemaPageRows));\n+\n+        List<IColumn> columnsUsersDer = getColumnsForSchema(\n+                userDerivedSchemasContainer,\n+                editUserDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                Constants.DERIVED_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n \n-                        editRoleSchemaWin.show(target);\n-                    }\n-                };\n+        final AjaxFallbackDefaultDataTable tableUsersDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.UserDerivedSchema),\n+                userDerSchemaPageRows);\n \n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n-                panel.add(editLink);\n+        add(getPaginatorForm(\n+                userDerivedSchemasContainer,\n+                tableUsersDer,\n+                \"UsersDerPaginatorForm\",\n+                \"userDerSchemaPageRows\",\n+                Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n+                userDerSchemaPageRows));\n+\n+        List<IColumn> columnsUsersVir = getColumnsForSchema(\n+                userVirtualSchemasContainer,\n+                editUserVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                Constants.VIRTUAL_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableUsersVir =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersVir,\n+                new VirtualSchemaProvider(SchemaVirtualType.UserVirtualSchema),\n+                userVirSchemaPageRows);\n+\n+        add(getPaginatorForm(\n+                userVirtualSchemasContainer,\n+                tableUsersVir,\n+                \"UsersVirPaginatorForm\",\n+                \"userVirSchemaPageRows\",\n+                Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS,\n+                userVirSchemaPageRows));\n+\n+        List<IColumn> membershipsColumns = getColumnsForSchema(\n+                membershipSchemaContainer,\n+                editMembershipSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                Constants.SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedCreateRoles);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+        final AjaxFallbackDefaultDataTable tableMemberships =\n+                new AjaxFallbackDefaultDataTable(\n+                \"datatable\", membershipsColumns,\n+                new SchemaProvider(SchemaType.MembershipSchema),\n+                membershipPageRows);\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        add(getPaginatorForm(\n+                membershipSchemaContainer,\n+                tableMemberships,\n+                \"MembershipPaginatorForm\",\n+                \"membershipPageRows\",\n+                Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n+                membershipPageRows));\n+\n+        List<IColumn> columnsMembershipsDer = getColumnsForSchema(\n+                membershipDerivedSchemaContainer,\n+                editMembershipDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                Constants.DERIVED_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n \n-        rolesColumns.add(new AbstractColumn<SchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n+        final AjaxFallbackDefaultDataTable tableMembershipsDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsDer,\n+                new DerivedSchemaProvider(\n+                SchemaDerivedType.MembershipDerivedSchema),\n+                membershipDerPageRows);\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SchemaTO> model) {\n+        add(getPaginatorForm(\n+                membershipDerivedSchemaContainer,\n+                tableMembershipsDer,\n+                \"MembershipDerPaginatorForm\",\n+                \"membershipDerPageRows\",\n+                Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n+                membershipDerPageRows));\n+\n+        List<IColumn> columnsMembershipsVir = getColumnsForSchema(\n+                membershipVirtualSchemaContainer,\n+                editMembershipVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                Constants.VIRTUAL_SCHEMA_FIELDS,\n+                allowedReadRoles,\n+                allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableMembershipsVir =\n+                new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsVir,\n+                new VirtualSchemaProvider(\n+                SchemaVirtualType.MembershipVirtualSchema),\n+                membershipVirPageRows);\n+\n+        add(getPaginatorForm(\n+                membershipVirtualSchemaContainer,\n+                tableMembershipsVir,\n+                \"MembershipVirPaginatorForm\",\n+                \"membershipVirPageRows\",\n+                Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS,\n+                membershipVirPageRows));\n \n-                final SchemaTO schemaTO = model.getObject();\n+        roleSchemasContainer.add(tableRoles);\n+        roleSchemasContainer.setOutputMarkupId(true);\n \n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n+        roleDerivedSchemasContainer.add(tableRolesDer);\n+        roleDerivedSchemasContainer.setOutputMarkupId(true);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteRoleSchema(schemaTO.getName());\n+        roleVirtualSchemasContainer.add(tableRolesVir);\n+        roleVirtualSchemasContainer.setOutputMarkupId(true);\n \n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n+        userSchemasContainer.add(tableUsers);\n+        userSchemasContainer.setOutputMarkupId(true);\n \n-                        target.addComponent(roleSchemasContainer);\n-                    }\n-                };\n+        userDerivedSchemasContainer.add(tableUsersDer);\n+        userDerivedSchemasContainer.setOutputMarkupId(true);\n \n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+        userVirtualSchemasContainer.add(tableUsersVir);\n+        userVirtualSchemasContainer.setOutputMarkupId(true);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n+        membershipSchemaContainer.add(tableMemberships);\n+        membershipSchemaContainer.setOutputMarkupId(true);\n \n-                panel.add(deleteLink);\n+        membershipDerivedSchemaContainer.add(tableMembershipsDer);\n+        membershipDerivedSchemaContainer.setOutputMarkupId(true);\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        membershipVirtualSchemaContainer.add(tableMembershipsVir);\n+        membershipVirtualSchemaContainer.setOutputMarkupId(true);\n \n+        add(roleSchemasContainer);\n+        add(roleDerivedSchemasContainer);\n+        add(roleVirtualSchemasContainer);\n \n-        final AjaxFallbackDefaultDataTable tableRoles =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n-                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n+        add(userSchemasContainer);\n+        add(userDerivedSchemasContainer);\n+        add(userVirtualSchemasContainer);\n \n-        Form rolesPaginatorForm = new Form(\"RolesPaginatorForm\");\n+        add(membershipSchemaContainer);\n+        add(membershipDerivedSchemaContainer);\n+        add(membershipVirtualSchemaContainer);\n \n-        final DropDownChoice rowsRoleChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"rolePageRows\"),\n-                prefMan.getPaginatorChoices());\n+        createUserSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createUserSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createUserSchemaWin.setPageMapName(\"modal-1\");\n+        createUserSchemaWin.setCookieName(\"modal-1\");\n+        createUserSchemaWin.setMarkupId(\"createUserSchemaWin\");\n \n-        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        editUserSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editUserSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editUserSchemaWin.setPageMapName(\"modal-2\");\n+        editUserSchemaWin.setCookieName(\"modal-2\");\n+        editUserSchemaWin.setMarkupId(\"editUserSchemaWin\");\n \n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequestCycle().getWebRequest(),\n-                        getWebRequestCycle().getWebResponse(),\n-                        Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS,\n-                        String.valueOf(rolePageRows));\n-                tableRoles.setRowsPerPage(rolePageRows);\n-\n-                target.addComponent(roleSchemasContainer);\n-            }\n-        });\n+        createUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createUserDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createUserDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createUserDerivedSchemaWin.setPageMapName(\"modal-3\");\n+        createUserDerivedSchemaWin.setCookieName(\"modal-3\");\n \n-        rolesPaginatorForm.add(rowsRoleChooser);\n-        add(rolesPaginatorForm);\n+        editUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editUserDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editUserDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        editUserDerivedSchemaWin.setPageMapName(\"modal-4\");\n+        editUserDerivedSchemaWin.setCookieName(\"modal-4\");\n \n-        List<IColumn> columnsRolesDer = new ArrayList<IColumn>();\n+        createUserVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createUserVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createUserVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createUserVirtualSchemaWin.setPageMapName(\"modal-5\");\n+        createUserVirtualSchemaWin.setCookieName(\"modal-5\");\n \n-        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n+        editUserVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editUserVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editUserVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        editUserVirtualSchemaWin.setPageMapName(\"modal-6\");\n+        editUserVirtualSchemaWin.setCookieName(\"modal-7\");\n \n-        columnsRolesDer.add(new PropertyColumn(\n-                new Model(getString(\"expression\")),\n-                \"expression\", \"expression\"));\n+        createRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createRoleSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createRoleSchemaWin.setPageMapName(\"modal-7\");\n+        createRoleSchemaWin.setCookieName(\"modal-7\");\n \n-        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"edit\"))) {\n+        editRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editRoleSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editRoleSchemaWin.setPageMapName(\"modal-8\");\n+        editRoleSchemaWin.setCookieName(\"modal-8\");\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n+        createRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createRoleDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createRoleDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createRoleDerivedSchemaWin.setPageMapName(\"modal-9\");\n+        createRoleDerivedSchemaWin.setCookieName(\"modal-9\");\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n+        editRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editRoleDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editRoleDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        editRoleDerivedSchemaWin.setPageMapName(\"modal-10\");\n+        editRoleDerivedSchemaWin.setCookieName(\"modal-10\");\n \n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n+        createRoleVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createRoleVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createRoleVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createRoleVirtualSchemaWin.setPageMapName(\"modal-11\");\n+        createRoleVirtualSchemaWin.setCookieName(\"modal-11\");\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n+        editRoleVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editRoleVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editRoleVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        editRoleVirtualSchemaWin.setPageMapName(\"modal-12\");\n+        editRoleVirtualSchemaWin.setCookieName(\"modal-12\");\n \n-                        editRoleDerivedSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+        createMembershipSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createMembershipSchemaWin.setPageMapName(\"modal-13\");\n+        createMembershipSchemaWin.setCookieName(\"modal-13\");\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage form =\n-                                                new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editRoleDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        form.setEntity(Entity.ROLE);\n-                                        return form;\n-                                    }\n-                                });\n+        editMembershipSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editMembershipSchemaWin.setPageMapName(\"modal-14\");\n+        editMembershipSchemaWin.setCookieName(\"modal-14\");\n \n-                        editRoleDerivedSchemaWin.show(target);\n-                    }\n-                };\n+        createMembershipDerivedSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createMembershipDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createMembershipDerivedSchemaWin.setPageMapName(\"modal-15\");\n+        createMembershipDerivedSchemaWin.setCookieName(\"modal-15\");\n \n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+        editMembershipSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editMembershipSchemaWin.setPageMapName(\"modal-16\");\n+        editMembershipSchemaWin.setCookieName(\"modal-16\");\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+        createMembershipVirtualSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        createMembershipVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        createMembershipVirtualSchemaWin.setPageMapName(\"modal-17\");\n+        createMembershipVirtualSchemaWin.setCookieName(\"modal-17\");\n \n-                panel.add(editLink);\n+        editMembershipVirtualSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n+        editMembershipVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n+        editMembershipVirtualSchemaWin.setPageMapName(\"modal-18\");\n+        editMembershipVirtualSchemaWin.setCookieName(\"modal-18\");\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        setWindowClosedCallback(createUserSchemaWin, userSchemasContainer);\n+        \n+        setWindowClosedCallback(editUserSchemaWin, userSchemasContainer);\n \n-        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n+        setWindowClosedCallback(createUserDerivedSchemaWin,\n+                userDerivedSchemasContainer);\n+        \n+        setWindowClosedCallback(createUserVirtualSchemaWin,\n+                userVirtualSchemasContainer);\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n+        setWindowClosedCallback(editUserDerivedSchemaWin,\n+                userDerivedSchemasContainer);\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n+        setWindowClosedCallback(editUserVirtualSchemaWin,\n+                userVirtualSchemasContainer);\n \n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n+        setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteRoleDerivedSchema(schemaTO.getName());\n+        setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n \n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n+        setWindowClosedCallback(createRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n \n-                        target.addComponent(roleDerivedSchemasContainer);\n-                    }\n-                };\n+        setWindowClosedCallback(createRoleVirtualSchemaWin,\n+                roleVirtualSchemasContainer);\n \n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+        setWindowClosedCallback(editRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n+        setWindowClosedCallback(editRoleVirtualSchemaWin,\n+                roleVirtualSchemasContainer);\n \n-                panel.add(deleteLink);\n+        setWindowClosedCallback(createMembershipSchemaWin,\n+                membershipSchemaContainer);\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        setWindowClosedCallback(editMembershipSchemaWin,\n+                membershipSchemaContainer);\n \n+        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n+        \n+        setWindowClosedCallback(createMembershipVirtualSchemaWin,\n+                membershipVirtualSchemaContainer);\n \n-        final AjaxFallbackDefaultDataTable tableRolesDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.RoleDerivedSchema),\n-                roleDerPageRows);\n+        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n \n-        Form rolesDerPaginatorForm = new Form(\"RolesDerPaginatorForm\");\n+        setWindowClosedCallback(editMembershipVirtualSchemaWin,\n+                membershipVirtualSchemaContainer);\n+\n+        add(getCreateSchemaWindow(\n+                createRoleSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                \"createRoleSchemaWinLink\",\n+                \"createRoleSchemaWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createRoleDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                \"createRoleDerivedSchemaWinLink\",\n+                \"createRoleDerivedSchemaWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createRoleVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.role,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                \"createRoleVirtualSchemaWinLink\",\n+                \"createRoleVirtualSchemaWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createUserSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                \"createUserSchemaWinLink\",\n+                \"createUserSchemaModalWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createUserDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                \"createUserDerSchemaWinLink\",\n+                \"createUserDerSchemaModalWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createUserVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.user,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                \"createUserVirSchemaWinLink\",\n+                \"createUserVirSchemaModalWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createMembershipSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.NORMAL,\n+                \"createMembershipSchemaWinLink\",\n+                \"createMembershipSchemaModalWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createMembershipDerivedSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.DERIVED,\n+                \"createMembershipDerSchemaWinLink\",\n+                \"createMembershipDerivedSchemaWin\",\n+                allowedCreateRoles));\n+\n+        add(getCreateSchemaWindow(\n+                createMembershipVirtualSchemaWin,\n+                SchemaModalPageFactory.Entity.membership,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                \"createMembershipVirSchemaWinLink\",\n+                \"createMembershipVirtualSchemaWin\",\n+                allowedCreateRoles));\n+    }\n \n-        DropDownChoice rowsRolesDerChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"roleDerPageRows\"),\n-                prefMan.getPaginatorChoices());\n+    /**\n+     * Set a WindowClosedCallback for a ModalWindow instance.\n+     * @param window\n+     * @param container\n+     */\n+    public void setWindowClosedCallback(final ModalWindow window,\n+            final WebMarkupContainer container) {\n \n-        rowsRolesDerChooser.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        window.setWindowClosedCallback(\n+                new ModalWindow.WindowClosedCallback() {\n \n                     @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        prefMan.set(getWebRequestCycle().getWebRequest(),\n-                                getWebRequestCycle().getWebResponse(),\n-                                Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS,\n-                                String.valueOf(roleDerPageRows));\n-                        tableRolesDer.setRowsPerPage(roleDerPageRows);\n-\n-                        target.addComponent(roleDerivedSchemasContainer);\n+                    public void onClose(final AjaxRequestTarget target) {\n+                        target.addComponent(container);\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n                 });\n+    }\n \n-        rolesDerPaginatorForm.add(rowsRolesDerChooser);\n-        add(rolesDerPaginatorForm);\n+    public void setOperationResult(boolean operationResult) {\n+        this.operationResult = operationResult;\n+    }\n \n-        List<IColumn> userColumns = new ArrayList<IColumn>();\n+    private class SchemaProvider extends SortableDataProvider<SchemaTO> {\n \n-        userColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n+        private final SortableDataProviderComparator<SchemaTO> comparator;\n \n-        userColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n-                \"type\", \"type\"));\n+        private final SchemaType schemaType;\n \n-        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"edit\"))) {\n+        public SchemaProvider(final SchemaType schemaType) {\n+            super();\n+            this.schemaType = schemaType;\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SchemaTO> model) {\n+            //Default sorting\n+            setSort(\"name\", true);\n \n-                final SchemaTO schemaTO = model.getObject();\n+            comparator = new SortableDataProviderComparator<SchemaTO>(this);\n+        }\n \n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n+        @Override\n+        public Iterator<SchemaTO> iterator(final int first, final int count) {\n+            List<SchemaTO> list = getSchemaDB();\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n+            Collections.sort(list, comparator);\n \n-                        editUserSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+            return list.subList(first, first + count).iterator();\n+        }\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        SchemaModalPage form =\n-                                                new SchemaModalPage(\n-                                                Schema.this, editUserSchemaWin,\n-                                                schemaTO, false);\n-                                        form.setEntity(\n-                                                SchemaModalPage.Entity.USER);\n-                                        return form;\n-                                    }\n-                                });\n+        @Override\n+        public int size() {\n+            return getSchemaDB().size();\n+        }\n \n-                        editUserSchemaWin.show(target);\n-                    }\n-                };\n+        @Override\n+        public IModel<SchemaTO> model(final SchemaTO object) {\n+            return new CompoundPropertyModel<SchemaTO>(object);\n+        }\n \n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+        private List<SchemaTO> getSchemaDB() {\n+            List<SchemaTO> list;\n+            switch (schemaType) {\n+                case UserSchema:\n+                    list = restClient.getSchemas(\"user\");\n+                    break;\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+                case RoleSchema:\n+                    list = restClient.getSchemas(\"role\");\n+                    break;\n \n-                panel.add(editLink);\n+                case MembershipSchema:\n+                    list = restClient.getSchemas(\"membership\");\n+                    break;\n \n-                cellItem.add(panel);\n+                default:\n+                    list = Collections.EMPTY_LIST;\n             }\n-        });\n-\n-        userColumns.add(new AbstractColumn<SchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SchemaTO> model) {\n-\n-                final SchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteUserSchema(schemaTO.getName());\n \n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n+            return list;\n+        }\n+    }\n \n-                        target.addComponent(userSchemaContainer);\n-                    }\n-                };\n+    private class DerivedSchemaProvider\n+            extends SortableDataProvider<DerivedSchemaTO> {\n \n+        private SortableDataProviderComparator<DerivedSchemaTO> comparator;\n \n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+        private SchemaDerivedType schema;\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n+        public DerivedSchemaProvider(final SchemaDerivedType schema) {\n+            super();\n+            this.schema = schema;\n \n-                panel.add(deleteLink);\n+            //Default sorting\n+            setSort(\"name\", true);\n+            comparator =\n+                    new SortableDataProviderComparator<DerivedSchemaTO>(this);\n+        }\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        @Override\n+        public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n+            List<DerivedSchemaTO> list = getDerivedSchemaDB();\n \n+            Collections.sort(list, comparator);\n \n-        final AjaxFallbackDefaultDataTable tableUsers =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n-                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n+            return list.subList(first, first + count).iterator();\n+        }\n \n-        tableUsers.setMarkupId(\"tableUsers\");\n+        @Override\n+        public int size() {\n+            return getDerivedSchemaDB().size();\n+        }\n \n-        Form usersPaginatorForm = new Form(\"UsersPaginatorForm\");\n+        @Override\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO object) {\n+            return new CompoundPropertyModel<DerivedSchemaTO>(object);\n+        }\n \n-        final DropDownChoice usersRowsChooser = new DropDownChoice(\n-                \"rowsChooser\", new PropertyModel(this, \"userSchemaPageRows\"),\n-                prefMan.getPaginatorChoices());\n+        private List<DerivedSchemaTO> getDerivedSchemaDB() {\n \n-        usersRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+            List<DerivedSchemaTO> list = null;\n \n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequestCycle().getWebRequest(),\n-                        getWebRequestCycle().getWebResponse(),\n-                        Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS,\n-                        String.valueOf(userSchemaPageRows));\n-                tableUsers.setRowsPerPage(userSchemaPageRows);\n-\n-                target.addComponent(userSchemaContainer);\n+            if (schema == SchemaDerivedType.RoleDerivedSchema) {\n+                list = restClient.getDerivedSchemas(\"role\");\n+            } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n+                list = restClient.getDerivedSchemas(\"user\");\n+            } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n+                list = restClient.getDerivedSchemas(\"membership\");\n             }\n-        });\n-\n-        usersPaginatorForm.add(usersRowsChooser);\n-        add(usersPaginatorForm);\n-\n-        List<IColumn> columnsUsersDer = new ArrayList<IColumn>();\n-\n-        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n-\n-        columnsUsersDer.add(new PropertyColumn(\n-                new Model(getString(\"expression\")),\n-                \"expression\", \"expression\"));\n-\n-        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"edit\"))) {\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n-\n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editUserDerivedSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage window =\n-                                                new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editUserDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        window.setEntity(Entity.USER);\n-                                        return window;\n-                                    }\n-                                });\n-\n-                        editUserDerivedSchemaWin.show(target);\n-                    }\n-                };\n-\n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+            return list;\n+        }\n+    }\n \n-                panel.add(editLink);\n+    private class VirtualSchemaProvider\n+            extends SortableDataProvider<VirtualSchemaTO> {\n \n-                cellItem.add(panel);\n-            }\n-        });\n+        private SortableDataProviderComparator<VirtualSchemaTO> comparator;\n \n-        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n+        private SchemaVirtualType schema;\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n+        public VirtualSchemaProvider(final SchemaVirtualType schema) {\n+            super();\n+            this.schema = schema;\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n+            //Default sorting\n+            setSort(\"name\", true);\n+            comparator =\n+                    new SortableDataProviderComparator<VirtualSchemaTO>(this);\n+        }\n \n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n+        @Override\n+        public Iterator<VirtualSchemaTO> iterator(int first, int count) {\n+            List<VirtualSchemaTO> list = getVirtualSchemaDB();\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteUserDerivedSchema(schemaTO.getName());\n+            Collections.sort(list, comparator);\n \n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n+            return list.subList(first, first + count).iterator();\n+        }\n \n-                        target.addComponent(userDerivedSchemaContainer);\n-                    }\n-                };\n+        @Override\n+        public int size() {\n+            return getVirtualSchemaDB().size();\n+        }\n \n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+        @Override\n+        public IModel<VirtualSchemaTO> model(final VirtualSchemaTO object) {\n+            return new CompoundPropertyModel<VirtualSchemaTO>(object);\n+        }\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n+        private List<VirtualSchemaTO> getVirtualSchemaDB() {\n \n-                panel.add(deleteLink);\n+            List<VirtualSchemaTO> list = null;\n \n-                cellItem.add(panel);\n+            if (schema == SchemaVirtualType.RoleVirtualSchema) {\n+                list = restClient.getVirtualSchemas(\"role\");\n+            } else if (schema == SchemaVirtualType.UserVirtualSchema) {\n+                list = restClient.getVirtualSchemas(\"user\");\n+            } else if (schema == SchemaVirtualType.MembershipVirtualSchema) {\n+                list = restClient.getVirtualSchemas(\"membership\");\n             }\n-        });\n-\n-        final AjaxFallbackDefaultDataTable tableUsersDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.UserDerivedSchema),\n-                userDerSchemaPageRows);\n-\n-        Form usersDerPaginatorForm = new Form(\"UsersDerPaginatorForm\");\n-\n-        final DropDownChoice usersDerRowsChooser = new DropDownChoice(\n-                \"rowsChooser\",\n-                new PropertyModel(this, \"userDerSchemaPageRows\"),\n-                prefMan.getPaginatorChoices());\n-\n-        usersDerRowsChooser.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        prefMan.set(getWebRequestCycle().getWebRequest(),\n-                                getWebRequestCycle().getWebResponse(),\n-                                Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n-                                String.valueOf(userDerSchemaPageRows));\n-                        tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n-\n-                        target.addComponent(userDerivedSchemaContainer);\n-                    }\n-                });\n-\n-        usersDerPaginatorForm.add(usersDerRowsChooser);\n-        add(usersDerPaginatorForm);\n \n-        List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n-\n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n+            return list;\n+        }\n+    }\n \n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n-                \"type\", \"type\"));\n+    private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n+            final WebMarkupContainer webContainer,\n+            final ModalWindow modalWindow,\n+            final SchemaModalPageFactory.Entity entity,\n+            final SchemaModalPageFactory.SchemaType schemaType,\n+            final String[] fields,\n+            final String readPermissions,\n+            final String deletePermissions) {\n+\n+        List<IColumn> columns = new ArrayList<IColumn>();\n+\n+        for (String field : fields) {\n+            columns.add(\n+                    new PropertyColumn(new Model(getString(field)),\n+                    field,\n+                    field));\n+        }\n \n-        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\"))) {\n+        columns.add(new AbstractColumn<AbstractBaseBean>(\n+                new Model<String>(getString(\"edit\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final Item<ICellPopulator<AbstractBaseBean>> cellItem,\n                     final String componentId,\n-                    final IModel<SchemaTO> model) {\n+                    final IModel<AbstractBaseBean> model) {\n \n-                final SchemaTO schemaTO = model.getObject();\n+                final AbstractBaseBean schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n-                        editMembershipSchemaWin.setPageCreator(\n+                        modalWindow.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n                                     @Override\n                                     public Page createPage() {\n-                                        SchemaModalPage form =\n-                                                new SchemaModalPage(\n+                                        AbstractSchemaModalPage page =\n+                                                SchemaModalPageFactory.getSchemaModalPage(entity, schemaType);\n+\n+                                        page.setSchemaModalPage(\n                                                 Schema.this,\n-                                                editMembershipSchemaWin,\n-                                                schemaTO, false);\n-                                        form.setEntity(\n-                                                SchemaModalPage.Entity.MEMBERSHIP);\n-                                        return form;\n+                                                modalWindow,\n+                                                schemaTO,\n+                                                false);\n+\n+                                        return page;\n                                     }\n                                 });\n \n-                        editMembershipSchemaWin.show(target);\n+                        modalWindow.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+                MetaDataRoleAuthorizationStrategy.authorize(\n+                        panel, ENABLE, readPermissions);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        membershipsColumns.add(new AbstractColumn<SchemaTO>(\n+        columns.add(new AbstractColumn<AbstractBaseBean>(\n                 new Model<String>(getString(\"delete\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final Item<ICellPopulator<AbstractBaseBean>> cellItem,\n                     final String componentId,\n-                    final IModel<SchemaTO> model) {\n+                    final IModel<AbstractBaseBean> model) {\n \n-                final SchemaTO schemaTO = model.getObject();\n+                final AbstractBaseBean schemaTO = model.getObject();\n \n                 AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n                         \"deleteLink\") {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteMemberhipSchema(schemaTO.getName());\n+\n+                        switch (schemaType) {\n+                            case DERIVED:\n+                                restClient.deleteDerivedSchema(\n+                                        entity.toString(),\n+                                        ((DerivedSchemaTO) schemaTO).getName());\n+                                break;\n+                            case VIRTUAL:\n+                                restClient.deleteVirtualSchema(\n+                                        entity.toString(),\n+                                        ((VirtualSchemaTO) schemaTO).getName());\n+                                break;\n+                            default:\n+                                restClient.deleteSchema(\n+                                        entity.toString(),\n+                                        ((SchemaTO) schemaTO).getName());\n+                                break;\n+                        }\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n-                        target.addComponent(membershipSchemaContainer);\n+                        target.addComponent(webContainer);\n                     }\n                 };\n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n+                MetaDataRoleAuthorizationStrategy.authorize(\n+                        panel, ENABLE, deletePermissions);\n \n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n+        return columns;\n+    }\n \n-        final AjaxFallbackDefaultDataTable tableMemberships =\n-                new AjaxFallbackDefaultDataTable(\n-                \"datatable\", membershipsColumns,\n-                new SchemaProvider(SchemaType.MembershipSchema),\n-                membershipPageRows);\n+    private Form getPaginatorForm(\n+            final WebMarkupContainer webContainer,\n+            final AjaxFallbackDefaultDataTable dataTable,\n+            final String formname,\n+            final String rowname,\n+            final String rowsPerPagePrefName,\n+            final int rowsPerPagePrefValue) {\n \n-        Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n+        Form usersPaginatorForm = new Form(formname);\n \n-        final DropDownChoice membershipRowsChooser = new DropDownChoice(\n+        final DropDownChoice usersRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this, \"membershipPageRows\"),\n+                new PropertyModel(this, rowname),\n                 prefMan.getPaginatorChoices());\n \n-        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n-                \"onchange\") {\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequestCycle().getWebRequest(),\n-                        getWebRequestCycle().getWebResponse(),\n-                        Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n-                        String.valueOf(membershipPageRows));\n-                tableMemberships.setRowsPerPage(membershipPageRows);\n-\n-                target.addComponent(membershipSchemaContainer);\n-            }\n-        });\n-\n-        membershipPaginatorForm.add(membershipRowsChooser);\n-        add(membershipPaginatorForm);\n+        usersRowsChooser.add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-        List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        prefMan.set(getWebRequestCycle().getWebRequest(),\n+                                getWebRequestCycle().getWebResponse(),\n+                                rowsPerPagePrefName,\n+                                String.valueOf(rowsPerPagePrefValue));\n+                        dataTable.setRowsPerPage(rowsPerPagePrefValue);\n \n-        columnsMembershipsDer.add(new PropertyColumn(\n-                new Model(getString(\"name\")), \"name\", \"name\"));\n+                        target.addComponent(webContainer);\n+                    }\n+                });\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n-                \"expression\")), \"expression\", \"expression\"));\n+        usersPaginatorForm.add(usersRowsChooser);\n \n-        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"edit\"))) {\n+        return usersPaginatorForm;\n+    }\n \n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n+    private <T extends AbstractSchemaModalPage> AjaxLink getCreateSchemaWindow(\n+            final ModalWindow createSchemaWin,\n+            final SchemaModalPageFactory.Entity entity,\n+            final SchemaModalPageFactory.SchemaType schemaType,\n+            final String winLinkName,\n+            final String winName,\n+            final String createPermissions) {\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n+        AjaxLink createSchemaWinLink = new IndicatingAjaxLink(winLinkName) {\n \n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n \n-                    @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                createSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n \n-                        editMembershipDerivedSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                            public Page createPage() {\n+                                AbstractSchemaModalPage page =\n+                                        SchemaModalPageFactory.getSchemaModalPage(entity, schemaType);\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage window =\n-                                                new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editMembershipDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        window.setEntity(Entity.MEMBERSHIP);\n-                                        return window;\n-                                    }\n-                                });\n+                                page.setSchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(winName),\n+                                        null,\n+                                        true);\n \n-                        editMembershipDerivedSchemaWin.show(target);\n-                    }\n-                };\n+                                return page;\n+                            }\n+                        });\n \n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                createSchemaWin.show(target);\n+            }\n+        };\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedReadRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                createSchemaWinLink, ENABLE, createPermissions);\n \n-                panel.add(editLink);\n-\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DerivedSchemaTO> model) {\n-\n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        restClient.deleteMembershipDerivedSchema(\n-                                schemaTO.getName());\n-\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-\n-                        target.addComponent(membershipDerivedSchemaContainer);\n-                    }\n-                };\n-\n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n-\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        allowedDeleteRoles);\n-\n-                panel.add(deleteLink);\n-\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        final AjaxFallbackDefaultDataTable tableMembershipsDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\",\n-                columnsMembershipsDer,\n-                new DerivedSchemaProvider(\n-                SchemaDerivedType.MembershipDerivedSchema),\n-                membershipDerPageRows);\n-\n-        Form membershipDerPaginatorForm =\n-                new Form(\"MembershipDerPaginatorForm\");\n-\n-        final DropDownChoice membershipDerRowsChooser = new DropDownChoice(\n-                \"rowsChooser\",\n-                new PropertyModel(this, \"membershipDerPageRows\"),\n-                prefMan.getPaginatorChoices());\n-\n-        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n-                \"onchange\") {\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequestCycle().getWebRequest(),\n-                        getWebRequestCycle().getWebResponse(),\n-                        Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n-                        String.valueOf(membershipDerPageRows));\n-\n-                tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n-\n-                target.addComponent(membershipDerivedSchemaContainer);\n-            }\n-        });\n-\n-        membershipDerPaginatorForm.add(membershipDerRowsChooser);\n-        add(membershipDerPaginatorForm);\n-\n-        roleSchemasContainer = new WebMarkupContainer(\"roleSchemasContainer\");\n-        roleSchemasContainer.add(tableRoles);\n-        roleSchemasContainer.setOutputMarkupId(true);\n-\n-        roleDerivedSchemasContainer = new WebMarkupContainer(\n-                \"roleDerivedSchemasContainer\");\n-        roleDerivedSchemasContainer.add(tableRolesDer);\n-        roleDerivedSchemasContainer.setOutputMarkupId(true);\n-\n-        userSchemaContainer = new WebMarkupContainer(\"userSchemaContainer\");\n-        userSchemaContainer.add(tableUsers);\n-        userSchemaContainer.setOutputMarkupId(true);\n-\n-        userDerivedSchemaContainer = new WebMarkupContainer(\n-                \"userDerivedSchemaContainer\");\n-        userDerivedSchemaContainer.add(tableUsersDer);\n-        userDerivedSchemaContainer.setOutputMarkupId(true);\n-\n-        membershipSchemaContainer = new WebMarkupContainer(\n-                \"membershipSchemaContainer\");\n-        membershipSchemaContainer.add(tableMemberships);\n-        membershipSchemaContainer.setOutputMarkupId(true);\n-\n-        membershipDerivedSchemaContainer = new WebMarkupContainer(\n-                \"membershipDerivedSchemaContainer\");\n-        membershipDerivedSchemaContainer.add(tableMembershipsDer);\n-        membershipDerivedSchemaContainer.setOutputMarkupId(true);\n-\n-        add(roleSchemasContainer);\n-        add(roleDerivedSchemasContainer);\n-\n-        add(userSchemaContainer);\n-        add(userDerivedSchemaContainer);\n-\n-        add(membershipSchemaContainer);\n-        add(membershipDerivedSchemaContainer);\n-\n-        createUserSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createUserSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createUserSchemaWin.setPageMapName(\"modal-1\");\n-        createUserSchemaWin.setCookieName(\"modal-1\");\n-        createUserSchemaWin.setMarkupId(\"createUserSchemaWin\");\n-\n-        editUserSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editUserSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editUserSchemaWin.setPageMapName(\"modal-2\");\n-        editUserSchemaWin.setCookieName(\"modal-2\");\n-        editUserSchemaWin.setMarkupId(\"editUserSchemaWin\");\n-\n-        createUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createUserDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createUserDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        createUserDerivedSchemaWin.setPageMapName(\"modal-3\");\n-        createUserDerivedSchemaWin.setCookieName(\"modal-3\");\n-\n-        editUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editUserDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editUserDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        editUserDerivedSchemaWin.setPageMapName(\"modal-4\");\n-        editUserDerivedSchemaWin.setCookieName(\"modal-4\");\n-\n-        createRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createRoleSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createRoleSchemaWin.setPageMapName(\"modal-5\");\n-        createRoleSchemaWin.setCookieName(\"modal-5\");\n-\n-        editRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editRoleSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editRoleSchemaWin.setPageMapName(\"modal-6\");\n-        editRoleSchemaWin.setCookieName(\"modal-6\");\n-\n-        createRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createRoleDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createRoleDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        createRoleDerivedSchemaWin.setPageMapName(\"modal-7\");\n-        createRoleDerivedSchemaWin.setCookieName(\"modal-7\");\n-\n-        editRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editRoleDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editRoleDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        editRoleDerivedSchemaWin.setPageMapName(\"modal-8\");\n-        editRoleDerivedSchemaWin.setCookieName(\"modal-8\");\n-\n-        createMembershipSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createMembershipSchemaWin.setPageMapName(\"modal-9\");\n-        createMembershipSchemaWin.setCookieName(\"modal-9\");\n-\n-        editMembershipSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editMembershipSchemaWin.setPageMapName(\"modal-10\");\n-        editMembershipSchemaWin.setCookieName(\"modal-10\");\n-\n-        createMembershipDerivedSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n-        createMembershipDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        createMembershipDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        createMembershipDerivedSchemaWin.setPageMapName(\"modal-11\");\n-        createMembershipDerivedSchemaWin.setCookieName(\"modal-11\");\n-\n-        editMembershipDerivedSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n-        editMembershipDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n-        editMembershipDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n-        editMembershipDerivedSchemaWin.setPageMapName(\"modal-12\");\n-        editMembershipDerivedSchemaWin.setCookieName(\"modal-12\");\n-\n-        setWindowClosedCallback(createUserSchemaWin, userSchemaContainer);\n-        setWindowClosedCallback(editUserSchemaWin, userSchemaContainer);\n-\n-        setWindowClosedCallback(createUserDerivedSchemaWin,\n-                userDerivedSchemaContainer);\n-        setWindowClosedCallback(editUserDerivedSchemaWin,\n-                userDerivedSchemaContainer);\n-\n-        setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n-        setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n-\n-        setWindowClosedCallback(createRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n-        setWindowClosedCallback(editRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n-\n-        setWindowClosedCallback(createMembershipSchemaWin,\n-                membershipSchemaContainer);\n-        setWindowClosedCallback(editMembershipSchemaWin,\n-                membershipSchemaContainer);\n-\n-        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n-        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n-\n-        AjaxLink createRoleSchemaWinLink = new IndicatingAjaxLink(\n-                \"createRoleSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-\n-                createRoleSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            @Override\n-                            public Page createPage() {\n-                                SchemaModalPage form = new SchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\"createRoleSchemaWin\"),\n-                                        null,\n-                                        true);\n-                                form.setEntity(SchemaModalPage.Entity.ROLE);\n-                                return form;\n-                            }\n-                        });\n-\n-                createRoleSchemaWin.show(target);\n-            }\n-        };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleSchemaWinLink,\n-                ENABLE,\n-                allowedCreateRoles);\n-\n-        add(createRoleSchemaWinLink);\n-\n-\n-        AjaxLink createRoleDerivedSchemaWinLink = new IndicatingAjaxLink(\n-                \"createRoleDerivedSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                createRoleDerivedSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            @Override\n-                            public Page createPage() {\n-                                DerivedSchemaModalPage form =\n-                                        new DerivedSchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\n-                                        \"createRoleDerivedSchemaWin\"),\n-                                        null, true);\n-                                form.setEntity(\n-                                        DerivedSchemaModalPage.Entity.ROLE);\n-                                return form;\n-                            }\n-                        });\n-\n-                createRoleDerivedSchemaWin.show(target);\n-            }\n-        };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                createRoleDerivedSchemaWinLink, ENABLE,\n-                allowedCreateRoles);\n-\n-        add(createRoleDerivedSchemaWinLink);\n-\n-        AjaxLink createUserSchemaWinLink = new IndicatingAjaxLink(\n-                \"createUserSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                createUserSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            public Page createPage() {\n-                                SchemaModalPage form = new SchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\"createUserSchemaWin\"),\n-                                        null,\n-                                        true);\n-                                form.setEntity(SchemaModalPage.Entity.USER);\n-                                return form;\n-                            }\n-                        });\n-\n-                createUserSchemaWin.show(target);\n-            }\n-        };\n-\n-        add(createUserSchemaWinLink);\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createUserSchemaWinLink,\n-                ENABLE,\n-                allowedCreateRoles);\n-\n-        AjaxLink createUserDerSchemaWinLink = new IndicatingAjaxLink(\n-                \"createUserDerSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                createUserDerivedSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            @Override\n-                            public Page createPage() {\n-                                DerivedSchemaModalPage form =\n-                                        new DerivedSchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\n-                                        \"createUserDerSchemaModalWin\"),\n-                                        null, true);\n-                                form.setEntity(Entity.USER);\n-\n-                                return form;\n-                            }\n-                        });\n-\n-                createUserDerivedSchemaWin.show(target);\n-            }\n-        };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createUserDerSchemaWinLink,\n-                ENABLE, allowedCreateRoles);\n-\n-        add(createUserDerSchemaWinLink);\n-\n-\n-        AjaxLink createMembershipSchemaWinLink = new IndicatingAjaxLink(\n-                \"createMembershipSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                createMembershipSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            @Override\n-                            public Page createPage() {\n-                                SchemaModalPage form = new SchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\n-                                        \"createMembershipSchemaModalWin\"),\n-                                        null, true);\n-                                form.setEntity(\n-                                        SchemaModalPage.Entity.MEMBERSHIP);\n-                                return form;\n-                            }\n-                        });\n-\n-                createMembershipSchemaWin.show(target);\n-            }\n-        };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                createMembershipSchemaWinLink,\n-                ENABLE, allowedCreateRoles);\n-\n-        add(createMembershipSchemaWinLink);\n-\n-        AjaxLink createMembershipDerSchemaWinLink = new IndicatingAjaxLink(\n-                \"createMembershipDerSchemaWinLink\") {\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                createMembershipDerivedSchemaWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            @Override\n-                            public Page createPage() {\n-                                DerivedSchemaModalPage form =\n-                                        new DerivedSchemaModalPage(\n-                                        Schema.this,\n-                                        new ModalWindow(\n-                                        \"createMembershipDerivedSchemaWin\"),\n-                                        null, true);\n-                                form.setEntity(Entity.MEMBERSHIP);\n-\n-                                return form;\n-                            }\n-                        });\n-\n-                createMembershipDerivedSchemaWin.show(target);\n-            }\n-        };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                createMembershipDerSchemaWinLink,\n-                ENABLE, allowedCreateRoles);\n-\n-        add(createMembershipDerSchemaWinLink);\n-    }\n-\n-    /**\n-     * Set a WindowClosedCallback for a ModalWindow instance.\n-     * @param window\n-     * @param container\n-     */\n-    public void setWindowClosedCallback(final ModalWindow window,\n-            final WebMarkupContainer container) {\n-\n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.addComponent(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.addComponent(feedbackPanel);\n-                            operationResult = false;\n-                        }\n-                    }\n-                });\n-    }\n-\n-    public void setOperationResult(boolean operationResult) {\n-        this.operationResult = operationResult;\n-    }\n-\n-    private class SchemaProvider extends SortableDataProvider<SchemaTO> {\n-\n-        private final SortableDataProviderComparator<SchemaTO> comparator;\n-\n-        private final SchemaType schemaType;\n-\n-        public SchemaProvider(final SchemaType schemaType) {\n-            super();\n-            this.schemaType = schemaType;\n-\n-            //Default sorting\n-            setSort(\"name\", true);\n-\n-            comparator = new SortableDataProviderComparator<SchemaTO>(this);\n-        }\n-\n-        @Override\n-        public Iterator<SchemaTO> iterator(final int first, final int count) {\n-            List<SchemaTO> list = getSchemaDB();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList(first, first + count).iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return getSchemaDB().size();\n-        }\n-\n-        @Override\n-        public IModel<SchemaTO> model(final SchemaTO object) {\n-            return new CompoundPropertyModel<SchemaTO>(object);\n-        }\n-\n-        private List<SchemaTO> getSchemaDB() {\n-            List<SchemaTO> list;\n-            switch (schemaType) {\n-                case UserSchema:\n-                    list = restClient.getSchemas(\"user\");\n-                    break;\n-\n-                case RoleSchema:\n-                    list = restClient.getSchemas(\"role\");\n-                    break;\n-\n-                case MembershipSchema:\n-                    list = restClient.getSchemas(\"membership\");\n-                    break;\n-\n-                default:\n-                    list = Collections.EMPTY_LIST;\n-            }\n-\n-            return list;\n-        }\n-    }\n-\n-    private class DerivedSchemaProvider\n-            extends SortableDataProvider<DerivedSchemaTO> {\n-\n-        private SortableDataProviderComparator<DerivedSchemaTO> comparator;\n-\n-        private SchemaDerivedType schema;\n-\n-        public DerivedSchemaProvider(final SchemaDerivedType schema) {\n-            super();\n-            this.schema = schema;\n-\n-            //Default sorting\n-            setSort(\"name\", true);\n-            comparator =\n-                    new SortableDataProviderComparator<DerivedSchemaTO>(this);\n-        }\n-\n-        @Override\n-        public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n-            List<DerivedSchemaTO> list = getDerivedSchemaDB();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList(first, first + count).iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return getDerivedSchemaDB().size();\n-        }\n-\n-        @Override\n-        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO object) {\n-            return new CompoundPropertyModel<DerivedSchemaTO>(object);\n-        }\n-\n-        private List<DerivedSchemaTO> getDerivedSchemaDB() {\n-\n-            List<DerivedSchemaTO> list = null;\n-\n-            if (schema == SchemaDerivedType.RoleDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"role\");\n-            } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"user\");\n-            } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"membership\");\n-            }\n-\n-            return list;\n-        }\n+        return createSchemaWinLink;\n     }\n }"},{"sha":"04ce8f8aa3e06b14cf2bc8c0effd63ee133ab1e3","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":50,"deletions":101,"changes":151,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -31,114 +31,91 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.string.Strings;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.types.SchemaType;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.form.CheckBox;\n+import org.syncope.client.AbstractBaseBean;\n \n /**\n  * Modal window with Schema form.\n  */\n-public class SchemaModalPage extends BaseModalPage {\n+public class SchemaModalPage extends AbstractSchemaModalPage {\n \n-    public enum Entity {\n-\n-        USER, ROLE, MEMBERSHIP\n-\n-    };\n-    private TextField name;\n-\n-    private TextField conversionPattern;\n-\n-    private DropDownChoice validatorClass;\n-\n-    private DropDownChoice type;\n-\n-    private DropDownChoice action;\n-\n-    private AutoCompleteTextField mandatoryCondition;\n-\n-    private CheckBox virtual;\n-\n-    private CheckBox multivalue;\n-\n-    private CheckBox readonly;\n-\n-    private CheckBox uniqueConstraint;\n-\n-    private AjaxButton submit;\n-\n-    private Entity entity;\n-\n-    @SpringBean\n-    private SchemaRestClient restClient;\n+    public SchemaModalPage(String kind) {\n+        super(kind);\n+    }\n \n-    public SchemaModalPage(final BasePage basePage, final ModalWindow window,\n-            SchemaTO schema, final boolean createFlag) {\n+    @Override\n+    public void setSchemaModalPage(\n+            final BasePage basePage,\n+            final ModalWindow window,\n+            AbstractBaseBean schema,\n+            final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new SchemaTO();\n         }\n \n-        Form schemaForm = new Form(\"SchemaForm\");\n+        final Form schemaForm = new Form(\"SchemaForm\");\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        name = new TextField(\"name\");\n+        final TextField name = new TextField(\"name\");\n         name.setRequired(true);\n \n         name.setEnabled(createFlag);\n \n-        conversionPattern = new TextField(\"conversionPattern\");\n+        final TextField conversionPattern = new TextField(\"conversionPattern\");\n \n-        ArrayList<String> validatorsList = new ArrayList<String>();\n+        final ArrayList<String> validatorsList = new ArrayList<String>();\n         validatorsList.add(\"org.syncope.core.persistence.validation\"\n                 + \".AlwaysTrueValidator\");\n         validatorsList.add(\"org.syncope.core.persistence.validation\"\n                 + \".EmailAddressValidator\");\n \n-        validatorClass = new DropDownChoice(\"validatorClass\",\n-                new PropertyModel(schema, \"validatorClass\"), validatorsList);\n+        final DropDownChoice validatorClass = new DropDownChoice(\n+                \"validatorClass\",\n+                new PropertyModel(schema, \"validatorClass\"),\n+                validatorsList);\n \n-        type = new DropDownChoice(\"type\", Arrays.asList(SchemaType.values()));\n+        final DropDownChoice type = new DropDownChoice(\n+                \"type\", Arrays.asList(SchemaType.values()));\n         type.setRequired(true);\n \n-        mandatoryCondition = new AutoCompleteTextField(\"mandatoryCondition\") {\n-\n-            @Override\n-            protected Iterator getChoices(String input) {\n-                List<String> choices = new ArrayList<String>();\n+        final AutoCompleteTextField mandatoryCondition =\n+                new AutoCompleteTextField(\"mandatoryCondition\") {\n \n-                if (Strings.isEmpty(input)) {\n-                    choices = Collections.emptyList();\n-                    return choices.iterator();\n-                }\n+                    @Override\n+                    protected Iterator getChoices(String input) {\n+                        List<String> choices = new ArrayList<String>();\n \n-                if (\"true\".startsWith(input.toLowerCase())) {\n-                    choices.add(\"true\");\n-                } else if (\"false\".startsWith(input.toLowerCase())) {\n-                    choices.add(\"false\");\n-                }\n+                        if (Strings.isEmpty(input)) {\n+                            choices = Collections.emptyList();\n+                            return choices.iterator();\n+                        }\n \n+                        if (\"true\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"true\");\n+                        } else if (\"false\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"false\");\n+                        }\n \n-                return choices.iterator();\n-            }\n-        };\n \n-        virtual = new CheckBox(\"virtual\");\n+                        return choices.iterator();\n+                    }\n+                };\n \n-        multivalue = new CheckBox(\"multivalue\");\n+        final CheckBox multivalue = new CheckBox(\"multivalue\");\n \n-        readonly = new CheckBox(\"readonly\");\n+        final CheckBox readonly = new CheckBox(\"readonly\");\n \n-        uniqueConstraint = new CheckBox(\"uniqueConstraint\");\n+        final CheckBox uniqueConstraint = new CheckBox(\"uniqueConstraint\");\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(\n-                getString(\"submit\"))) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\n+                \"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -150,31 +127,12 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                     return;\n                 }\n \n-                if (getEntity() == Entity.USER) {\n-\n-                    if (createFlag) {\n-                        restClient.createUserSchema(schemaTO);\n-                    } else {\n-                        restClient.updateUserSchema(schemaTO);\n-                    }\n-\n-                } else if (getEntity() == Entity.ROLE) {\n-\n-                    if (createFlag) {\n-                        restClient.createRoleSchema(schemaTO);\n-                    } else {\n-                        restClient.updateRoleSchema(schemaTO);\n-                    }\n-\n-                } else if (getEntity() == Entity.MEMBERSHIP) {\n-\n-                    if (createFlag) {\n-                        restClient.createMemberhipSchema(schemaTO);\n-                    } else {\n-                        restClient.updateMemberhipSchema(schemaTO);\n-                    }\n-\n+                if (createFlag) {\n+                    restClient.createSchema(kind, schemaTO);\n+                } else {\n+                    restClient.updateSchema(kind, schemaTO);\n                 }\n+\n                 Schema callerPage = (Schema) basePage;\n                 callerPage.setOperationResult(true);\n \n@@ -197,15 +155,14 @@ protected void onError(AjaxRequestTarget target, Form form) {\n                     \"update\");\n         }\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n         schemaForm.add(conversionPattern);\n         schemaForm.add(validatorClass);\n         schemaForm.add(type);\n         schemaForm.add(mandatoryCondition);\n-        schemaForm.add(virtual);\n         schemaForm.add(multivalue);\n         schemaForm.add(readonly);\n         schemaForm.add(uniqueConstraint);\n@@ -214,12 +171,4 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         add(schemaForm);\n     }\n-\n-    public Entity getEntity() {\n-        return entity;\n-    }\n-\n-    public void setEntity(Entity entity) {\n-        this.entity = entity;\n-    }\n }"},{"sha":"9211ed1b81d7e5cda287ea580576a67d390321a4","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPageFactory.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPageFactory.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.console.rest.SchemaRestClient;\n+\n+/**\n+ * Modal window with Schema form.\n+ */\n+abstract public class SchemaModalPageFactory extends BaseModalPage {\n+\n+    @SpringBean\n+    protected SchemaRestClient restClient;\n+\n+    public enum Entity {\n+\n+        user, role, membership\n+    };\n+\n+    public enum SchemaType {\n+\n+        NORMAL, DERIVED, VIRTUAL\n+    };\n+\n+    public static AbstractSchemaModalPage getSchemaModalPage(\n+            Entity entity, SchemaType schemaType) {\n+\n+        AbstractSchemaModalPage page;\n+\n+        switch (schemaType) {\n+            case DERIVED:\n+                page = new DerivedSchemaModalPage(entity.toString());\n+                break;\n+            case VIRTUAL:\n+                page = new VirtualSchemaModalPage(entity.toString());\n+                break;\n+            default:\n+                page = new SchemaModalPage(entity.toString());\n+                break;\n+        }\n+\n+        return page;\n+    }\n+}"},{"sha":"30a5bcb08b9dc5e6aa7c9a1102534bfae1355060","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":198,"deletions":84,"changes":282,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -157,6 +157,16 @@ protected List<String> load() {\n                     }\n                 };\n \n+\n+        final IModel<List<String>> virtualSchemaNames =\n+                new LoadableDetachableModel<List<String>>() {\n+\n+                    @Override\n+                    protected List<String> load() {\n+                        return schemaRestClient.getDerivedSchemaNames(\"user\");\n+                    }\n+                };\n+\n         final ListView userAttributesView =\n                 new ListView(\"userSchemas\", schemaWrappers) {\n \n@@ -326,91 +336,13 @@ protected void onSubmit(AjaxRequestTarget target,\n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        final WebMarkupContainer derivedAttributesContainer =\n-                new WebMarkupContainer(\"derivedAttributesContainer\");\n-        derivedAttributesContainer.setOutputMarkupId(true);\n-        userForm.add(derivedAttributesContainer);\n-\n-        AjaxButton addDerivedAttributeBtn = new IndicatingAjaxButton(\n-                \"addDerivedAttributeBtn\",\n-                new Model(getString(\"addDerivedAttributeBtn\"))) {\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                userTO.getDerivedAttributes().add(new AttributeTO());\n-                target.addComponent(derivedAttributesContainer);\n-            }\n-        };\n-        addDerivedAttributeBtn.setDefaultFormProcessing(false);\n-        userForm.add(addDerivedAttributeBtn);\n-\n-        ListView<AttributeTO> derivedAttributes = new ListView<AttributeTO>(\n-                \"derivedAttributes\", userTO.getDerivedAttributes()) {\n-\n-            @Override\n-            protected void populateItem(final ListItem<AttributeTO> item) {\n-                final AttributeTO derivedAttributeTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        userTO.getDerivedAttributes().remove(derivedAttributeTO);\n-                        item.getParent().removeAll();\n-                        target.addComponent(derivedAttributesContainer);\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n-\n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n-                            }\n-                        };\n-                    }\n-                });\n-\n-                final DropDownChoice<String> derivedSchemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(derivedAttributeTO, \"schema\"),\n-                        derivedSchemaNames);\n-\n-                derivedSchemaChoice.setOutputMarkupId(true);\n-\n-                if (derivedAttributeTO.getSchema() != null) {\n-                    item.add(derivedSchemaChoice.setEnabled(Boolean.FALSE));\n-                } else {\n-                    item.add(derivedSchemaChoice.setRequired(true));\n-                }\n-\n-                final List<String> values = derivedAttributeTO.getValues();\n+        setDerivedAttributeContainer(userForm, userTO, derivedSchemaNames);\n+        //--------------------------------\n \n-                if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(null)).setVisible(Boolean.FALSE));\n-                } else {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(values.get(0))).setEnabled(\n-                            Boolean.FALSE));\n-                }\n-            }\n-        };\n-        derivedAttributes.setReuseItems(true);\n-        derivedAttributesContainer.add(derivedAttributes);\n+        //--------------------------------\n+        // Virtual attributes container\n+        //--------------------------------\n+        setVirtualAttributeContainer(userForm, userTO, derivedSchemaNames);\n         //--------------------------------\n \n         ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n@@ -1104,4 +1036,186 @@ private void searchAndDropMembership(final MembershipTO oldMembership,\n             userMod.addMembershipToBeRemoved(oldMembership.getId());\n         }\n     }\n+\n+    private void setDerivedAttributeContainer(\n+            final Form userForm,\n+            final UserTO userTO,\n+            final IModel<List<String>> derivedSchemaNames) {\n+        final WebMarkupContainer derivedAttributesContainer =\n+                new WebMarkupContainer(\"derivedAttributesContainer\");\n+        derivedAttributesContainer.setOutputMarkupId(true);\n+        userForm.add(derivedAttributesContainer);\n+\n+        AjaxButton addDerivedAttributeBtn = new IndicatingAjaxButton(\n+                \"addDerivedAttributeBtn\",\n+                new Model(getString(\"addDerivedAttributeBtn\"))) {\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                userTO.getDerivedAttributes().add(new AttributeTO());\n+                target.addComponent(derivedAttributesContainer);\n+            }\n+        };\n+        addDerivedAttributeBtn.setDefaultFormProcessing(false);\n+        userForm.add(addDerivedAttributeBtn);\n+\n+        ListView<AttributeTO> derivedAttributes = new ListView<AttributeTO>(\n+                \"derivedAttributes\", userTO.getDerivedAttributes()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO derivedAttributeTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        userTO.getDerivedAttributes().remove(derivedAttributeTO);\n+                        item.getParent().removeAll();\n+                        target.addComponent(derivedAttributesContainer);\n+                    }\n+\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n+\n+                final DropDownChoice<String> derivedSchemaChoice =\n+                        new DropDownChoice<String>(\n+                        \"schema\",\n+                        new PropertyModel<String>(derivedAttributeTO, \"schema\"),\n+                        derivedSchemaNames);\n+\n+                derivedSchemaChoice.setOutputMarkupId(true);\n+\n+                if (derivedAttributeTO.getSchema() != null) {\n+                    item.add(derivedSchemaChoice.setEnabled(Boolean.FALSE));\n+                } else {\n+                    item.add(derivedSchemaChoice.setRequired(true));\n+                }\n+\n+                final List<String> values = derivedAttributeTO.getValues();\n+\n+                if (values == null || values.isEmpty()) {\n+                    item.add(new TextField(\n+                            \"derivedAttributeValue\",\n+                            new Model(null)).setVisible(Boolean.FALSE));\n+                } else {\n+                    item.add(new TextField(\n+                            \"derivedAttributeValue\",\n+                            new Model(values.get(0))).setEnabled(\n+                            Boolean.FALSE));\n+                }\n+            }\n+        };\n+        derivedAttributes.setReuseItems(true);\n+        derivedAttributesContainer.add(derivedAttributes);\n+    }\n+\n+    private void setVirtualAttributeContainer(\n+            final Form userForm,\n+            final UserTO userTO,\n+            final IModel<List<String>> virtualSchemaNames) {\n+        final WebMarkupContainer virtualAttributesContainer =\n+                new WebMarkupContainer(\"virtualAttributesContainer\");\n+        virtualAttributesContainer.setOutputMarkupId(true);\n+        userForm.add(virtualAttributesContainer);\n+\n+        AjaxButton addVirtualAttributeBtn = new IndicatingAjaxButton(\n+                \"addVirtualAttributeBtn\",\n+                new Model(getString(\"addVirtualAttributeBtn\"))) {\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                userTO.getVirtualAttributes().add(new AttributeTO());\n+                target.addComponent(virtualAttributesContainer);\n+            }\n+        };\n+        addVirtualAttributeBtn.setDefaultFormProcessing(false);\n+        userForm.add(addVirtualAttributeBtn);\n+\n+        ListView<AttributeTO> virtulaAttributes = new ListView<AttributeTO>(\n+                \"virtualAttributes\", userTO.getVirtualAttributes()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO virtualAttributeTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        userTO.getVirtualAttributes().remove(virtualAttributeTO);\n+                        item.getParent().removeAll();\n+                        target.addComponent(virtualAttributesContainer);\n+                    }\n+\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n+\n+                final DropDownChoice<String> virtualSchemaChoice =\n+                        new DropDownChoice<String>(\n+                        \"schema\",\n+                        new PropertyModel<String>(virtualAttributeTO, \"schema\"),\n+                        virtualSchemaNames);\n+\n+                virtualSchemaChoice.setOutputMarkupId(true);\n+\n+                if (virtualAttributeTO.getSchema() != null) {\n+                    item.add(virtualSchemaChoice.setEnabled(Boolean.FALSE));\n+                } else {\n+                    item.add(virtualSchemaChoice.setRequired(true));\n+                }\n+\n+                final List<String> values = virtualAttributeTO.getValues();\n+\n+                if (values == null || values.isEmpty()) {\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(null)).setVisible(Boolean.FALSE));\n+                } else {\n+                    item.add(new TextField(\n+                            \"virtualAttributeValue\",\n+                            new Model(values.get(0))).setEnabled(\n+                            Boolean.FALSE));\n+                }\n+            }\n+        };\n+        virtulaAttributes.setReuseItems(true);\n+        virtualAttributesContainer.add(virtulaAttributes);\n+    }\n }"},{"sha":"27f6ade02d27f72deefeb908c8dda75d6bddbc24","filename":"console/src/main/java/org/syncope/console/pages/VirtualSchemaModalPage.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.syncope.client.AbstractBaseBean;\n+import org.syncope.client.to.VirtualSchemaTO;\n+\n+/**\n+ * Modal window with Schema form.\n+ */\n+public class VirtualSchemaModalPage extends AbstractSchemaModalPage {\n+\n+    public VirtualSchemaModalPage(String kind) {\n+        super(kind);\n+    }\n+\n+    @Override\n+    public void setSchemaModalPage(\n+            final BasePage basePage,\n+            final ModalWindow window,\n+            AbstractBaseBean schema,\n+            final boolean createFlag) {\n+\n+        if (schema == null) {\n+            schema = new VirtualSchemaTO();\n+        }\n+\n+        final Form schemaForm = new Form(\"SchemaForm\");\n+\n+        schemaForm.setModel(new CompoundPropertyModel(schema));\n+\n+        final TextField name = new TextField(\"name\");\n+        name.setRequired(true);\n+\n+        name.setEnabled(createFlag);\n+\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n+                \"submit\", new Model(getString(\"submit\"))) {\n+\n+            @Override\n+            protected void onSubmit(AjaxRequestTarget target, Form form) {\n+\n+                if (createFlag) {\n+                    restClient.createVirtualSchema(kind,\n+                            (VirtualSchemaTO) form.getDefaultModelObject());\n+                } else {\n+                    restClient.updateVirtualSchema(kind,\n+                            (VirtualSchemaTO) form.getDefaultModelObject());\n+                }\n+\n+                Schema callerPage = (Schema) basePage;\n+                callerPage.setOperationResult(true);\n+\n+                window.close(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                target.addComponent(feedbackPanel);\n+            }\n+        };\n+\n+        String allowedRoles;\n+\n+        if (createFlag) {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"create\");\n+        } else {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"update\");\n+        }\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, allowedRoles);\n+\n+        schemaForm.add(name);\n+\n+        schemaForm.add(submit);\n+\n+        add(schemaForm);\n+    }\n+}"},{"sha":"ef295debf8375713c2d1befc238741ff66b04e2b","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":83,"deletions":237,"changes":320,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -21,6 +21,7 @@\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.to.SchemaTO;\n+import org.syncope.client.to.VirtualSchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -92,6 +93,26 @@ public List<DerivedSchemaTO> getDerivedSchemas(String kind) {\n         return userDerivedSchemas;\n     }\n \n+    /**\n+     * Get derived schemas.\n+     * @return List of derived schemas.\n+     */\n+    public List<VirtualSchemaTO> getVirtualSchemas(String kind) {\n+\n+        List<VirtualSchemaTO> userVirtualSchemas = null;\n+\n+        try {\n+            userVirtualSchemas = Arrays.asList(\n+                    restTemplate.getForObject(\n+                    baseURL + \"virtualSchema/\" + kind + \"/list.json\",\n+                    VirtualSchemaTO[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting all user derived schemas\", e);\n+        }\n+\n+        return userVirtualSchemas;\n+    }\n+\n     /**\n      * Get derived schema names.\n      * @return List of derived schema names.\n@@ -117,14 +138,39 @@ public List<String> getDerivedSchemaNames(String kind) {\n         return userDerivedSchemasNames;\n     }\n \n+    /**\n+     * Get virtual schema names.\n+     * @return List of virtual schema names.\n+     */\n+    public List<String> getVirtualSchemaNames(String kind) {\n+\n+        final List<String> userVirtualSchemasNames = new ArrayList<String>();\n+\n+        try {\n+            final List<VirtualSchemaTO> userVirtualSchemas =\n+                    Arrays.asList(restTemplate.getForObject(baseURL\n+                    + \"virtualSchema/\" + kind + \"/list.json\",\n+                    VirtualSchemaTO[].class));\n+\n+            for (VirtualSchemaTO schemaTO : userVirtualSchemas) {\n+                userVirtualSchemasNames.add(schemaTO.getName());\n+            }\n+\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting all user derived schema names\", e);\n+        }\n+\n+        return userVirtualSchemasNames;\n+    }\n+\n     /**\n      * Create new user schema.\n      * @param schemaTO\n      */\n-    public void createUserSchema(SchemaTO schemaTO) {\n+    public void createSchema(String kind, SchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"schema/user/create\", schemaTO, SchemaTO.class);\n+                    + \"schema/\" + kind + \"/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While creating a user schema\", e);\n         }\n@@ -135,13 +181,14 @@ public void createUserSchema(SchemaTO schemaTO) {\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public SchemaTO readUserSchema(String name) {\n+    public SchemaTO readSchema(String kind, String name) {\n         SchemaTO schema = null;\n \n         try {\n             schema = restTemplate.getForObject(\n                     baseURL\n-                    + \"schema/user/read/\" + name + \".json\", SchemaTO.class);\n+                    + \"schema/\" + kind + \"/read/\" + name + \".json\",\n+                    SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a user schema\", e);\n         }\n@@ -152,10 +199,10 @@ public SchemaTO readUserSchema(String name) {\n      * Update an already existent user schema.\n      * @param schemaTO updated\n      */\n-    public void updateUserSchema(SchemaTO schemaTO) {\n+    public void updateSchema(String kind, SchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"schema/user/update\", schemaTO, SchemaTO.class);\n+                    + \"schema/\" + kind + \"/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While updating a user schema\", e);\n         }\n@@ -166,10 +213,10 @@ public void updateUserSchema(SchemaTO schemaTO) {\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public void deleteUserSchema(String name) {\n+    public void deleteSchema(String kind, String name) {\n         try {\n             restTemplate.delete(baseURL\n-                    + \"schema/user/delete/\" + name + \".json\");\n+                    + \"schema/\" + kind + \"/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While deleting a user schema\", e);\n         }\n@@ -179,132 +226,27 @@ public void deleteUserSchema(String name) {\n      * Create new derived user schema.\n      * @param schemaTO\n      */\n-    public void createUserDerivedSchema(DerivedSchemaTO schemaTO) {\n+    public void createDerivedSchema(String kind, DerivedSchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/user/create\", schemaTO,\n+                    + \"derivedSchema/\" + kind + \"/create\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While creating a derived user schema\", e);\n         }\n     }\n \n     /**\n-     * Load an already existent user derived schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return DerivedSchemaTO\n-     */\n-    public DerivedSchemaTO readUserDerivedSchema(String name) {\n-        DerivedSchemaTO derivedSchemaTO = null;\n-        try {\n-            derivedSchemaTO = restTemplate.getForObject(\n-                    baseURL\n-                    + \"derivedSchema/user/read/\" + name + \".json\",\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a derived user schema\", e);\n-        }\n-        return derivedSchemaTO;\n-    }\n-\n-    /**\n-     * Update an already existent user derived schema.\n-     * @param schemaTO updated\n-     */\n-    public void updateUserDerivedSchema(DerivedSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/user/update\", schemaTO,\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a derived user schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Delete an already existent user derived schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n-    public void deleteUserDerivedSchema(String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"derivedSchema/user/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a derived user schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Create new user schema.\n-     * @param schemaTO\n-     */\n-    public void createRoleSchema(SchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"schema/role/create\", schemaTO, SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a role schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Load an already existent user schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n-    public SchemaTO readRoleSchema(String name) {\n-        SchemaTO schema = null;\n-\n-        try {\n-            schema = restTemplate.getForObject(\n-                    baseURL\n-                    + \"schema/role/read/\" + name + \".json\", SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a role schema\", e);\n-        }\n-        return schema;\n-    }\n-\n-    /**\n-     * Update an already existent user schema.\n-     * @param schemaTO updated\n-     */\n-    public void updateRoleSchema(SchemaTO schemaTO) {\n-        try {\n-            SchemaTO updatedTO = restTemplate.postForObject(\n-                    baseURL\n-                    + \"schema/role/update\", schemaTO, SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a role schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Delete an already existent user schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n-    public void deleteRoleSchema(String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"schema/role/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a role schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Create new user schema.\n+     * Create new derived user schema.\n      * @param schemaTO\n      */\n-    public void createRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n+    public void createVirtualSchema(String kind, VirtualSchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/role/create\", schemaTO,\n-                    DerivedSchemaTO.class);\n+                    + \"virtualSchema/\" + kind + \"/create\", schemaTO,\n+                    VirtualSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a role derived schema\", e);\n+            LOG.error(\"While creating a derived user schema\", e);\n         }\n     }\n \n@@ -313,16 +255,15 @@ public void createRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n      * @param name (e.g.:surname)\n      * @return DerivedSchemaTO\n      */\n-    public DerivedSchemaTO readRoleDerivedSchema(String name) {\n+    public DerivedSchemaTO readDerivedSchema(String kind, String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n-\n         try {\n             derivedSchemaTO = restTemplate.getForObject(\n                     baseURL\n-                    + \"derivedSchema/role/read/\" + name + \".json\",\n+                    + \"derivedSchema/\" + kind + \"/read/\" + name + \".json\",\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a role derived schema\", e);\n+            LOG.error(\"While reading a derived user schema\", e);\n         }\n         return derivedSchemaTO;\n     }\n@@ -331,88 +272,55 @@ public DerivedSchemaTO readRoleDerivedSchema(String name) {\n      * Update an already existent user derived schema.\n      * @param schemaTO updated\n      */\n-    public void updateRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n-\n+    public void updateDerivedSchema(String kind, DerivedSchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/role/update\", schemaTO,\n+                    + \"derivedSchema/\" + kind + \"/update\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a role derived schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Delete an already existent user derived schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n-    public void deleteRoleDerivedSchema(String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"derivedSchema/role/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a role derived schema\", e);\n+            LOG.error(\"While updating a derived user schema\", e);\n         }\n     }\n \n     /**\n-     * Create new membership schema.\n-     * @param schemaTO\n+     * Update an already existent user derived schema.\n+     * @param schemaTO updated\n      */\n-    public void createMemberhipSchema(SchemaTO schemaTO) {\n+    public void updateVirtualSchema(String kind, VirtualSchemaTO schemaTO) {\n         try {\n             restTemplate.postForObject(baseURL\n-                    + \"schema/membership/create\", schemaTO, SchemaTO.class);\n+                    + \"virtualSchema/\" + kind + \"/update\", schemaTO,\n+                    VirtualSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a membership schema\", e);\n+            LOG.error(\"While updating a derived user schema\", e);\n         }\n     }\n \n     /**\n-     * Load an already existent membership schema by its name.\n+     * Delete an already existent user derived schema by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public SchemaTO readMemberhipSchema(String name) {\n-        SchemaTO schema = null;\n-\n-        try {\n-            schema = restTemplate.getForObject(\n-                    baseURL\n-                    + \"schema/membership/read/\" + name + \".json\",\n-                    SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a membership schema\", e);\n-        }\n-        return schema;\n-    }\n-\n-    /**\n-     * Update an already existent membership schema.\n-     * @param schemaTO updated\n-     */\n-    public void updateMemberhipSchema(SchemaTO schemaTO) {\n+    public void deleteDerivedSchema(String kind, String name) {\n         try {\n-            SchemaTO updatedTO = restTemplate.postForObject(\n-                    baseURL\n-                    + \"schema/membership/update\", schemaTO, SchemaTO.class);\n+            restTemplate.delete(baseURL\n+                    + \"derivedSchema/\" + kind + \"/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a membership schema\", e);\n+            LOG.error(\"While deleting a derived user schema\", e);\n         }\n     }\n \n     /**\n-     * Delete an already existent membership schema by its name.\n+     * Delete an already existent user derived schema by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public void deleteMemberhipSchema(String name) {\n+    public void deleteVirtualSchema(String kind, String name) {\n         try {\n             restTemplate.delete(baseURL\n-                    + \"schema/membership/delete/\" + name + \".json\");\n+                    + \"virtualSchema/\" + kind + \"/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a membership schema\", e);\n+            LOG.error(\"While deleting a role derived schema\", e);\n         }\n     }\n \n@@ -431,66 +339,4 @@ public Set<String> getAllValidatorClasses() {\n         }\n         return validators;\n     }\n-\n-    /**\n-     * Create new membership schema.\n-     * @param schemaTO\n-     */\n-    public void createMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/membership/create\", schemaTO,\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a membership derived schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Load an already existent membership derived schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return DerivedSchemaTO\n-     */\n-    public DerivedSchemaTO readMembershipDerivedSchema(String name) {\n-        DerivedSchemaTO derivedSchemaTO = null;\n-\n-        try {\n-            derivedSchemaTO = restTemplate.getForObject(\n-                    baseURL\n-                    + \"derivedSchema/membership/read/\" + name + \".json\",\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a membership derived schema\", e);\n-        }\n-        return derivedSchemaTO;\n-    }\n-\n-    /**\n-     * Update an already existent membership derived schema.\n-     * @param schemaTO updated\n-     */\n-    public void updateMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n-\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/membership/update\", schemaTO,\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a membership derived schema\", e);\n-        }\n-    }\n-\n-    /**\n-     * Delete an already existent membership derived schema by its name.\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n-    public void deleteMembershipDerivedSchema(String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"derivedSchema/membership/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a membership derived schema\", e);\n-        }\n-    }\n }"},{"sha":"648a6cc127eb414cf0ed20cc6576be86423307de","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -38,6 +38,9 @@\n         <script type=\"text/javascript\">\n             $(document).ready(function() {\n                 $(\"#tabs\").tabs();\n+                $(\"#user\").tabs();\n+                $(\"#role\").tabs();\n+                $(\"#membership\").tabs();\n             });\n \n             /** Add rollover effect to tables supporting Ajax events (live)*/"},{"sha":"853f0d81e796f90c83d8223ee5b01736b9e013b3","filename":"console/src/main/resources/org/syncope/console/pages/DerivedSchemaModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -5,4 +5,4 @@ expression=Expression\n existing_schemas=Schemi presenti:\n edit_attribute=Modifica attributo\n attributes=Attributi derivati\n-title=Derived Schema\n+title=Schema Derivato"},{"sha":"6e3ee2581e3f714f820f709b6b9eb35ef3dcecb4","filename":"console/src/main/resources/org/syncope/console/pages/MembershipModalPage.html","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -19,6 +19,7 @@\n         <ul>\n             <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n             <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+            <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n             <table style=\"font-size:1em\" width=\"100%\" wicket:id=\"container\">\n@@ -82,6 +83,47 @@\n                 </tbody>\n             </table>\n         </div>\n+\n+        <div id=\"tabs-3\">\n+            <table id=\"virtualAttributes\"\n+                   class=\"ui-widget ui-widget-content ui-corner-all\"\n+                   style=\"font-size: 1em;margin-top:2px;\"\n+                   width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+                <thead>\n+                    <tr class=\"ui-widget-header\">\n+                        <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n+                <th><wicket:message key=\"virtualAttributeName\"/></th>\n+                <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+                </tr>\n+                </thead>\n+\n+                <tfoot>\n+                    <tr>\n+                        <td>\n+                            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                                   wicket:id=\"addVirtualAttributeBtn\" />\n+                        </td>\n+                    </tr>\n+                </tfoot>\n+\n+                <tbody wicket:id=\"virtualAttributesContainer\">\n+                    <tr wicket:id=\"virtualAttributes\">\n+                        <td align=\"center\" valign=\"middle\">\n+                            <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                        </td>\n+\n+                        <td>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    style=\"width:100%\" wicket:id=\"schema\"/>\n+                        </td>\n+\n+                        <td align=\"center\" valign=\"middle\">\n+                            <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"virtualAttributeValue\"/>\n+                        </td>\n+                    </tr>\n+                </tbody>\n+            </table>\n+        </div>\n     </div>\n     <div>\n         &nbsp;"},{"sha":"557500d3d23cf155c9ccfc621fcee30337322414","filename":"console/src/main/resources/org/syncope/console/pages/MembershipModalPage.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -1,5 +1,6 @@\n tab1=Attributes\n tab2=Derived attributes\n+tab3=Virtual attributes\n title=Roles\n add=+\n drop=-\n@@ -10,3 +11,9 @@ derivedAttributeToBeRemoved=Delete\n derivedAttributeName=Name\n derivedAttributeValue=Derived value\n addDerivedAttributeBtn=Add\n+\n+virtualAttributes=Virtual Attributes\n+virtualAttributeToBeRemoved=Delete\n+virtualAttributeName=Name\n+virtualAttributeValue=Virtual value\n+addVirtualAttributeBtn=Add"},{"sha":"10a6ab64dc65a0a3f39c60205f095cbd624874dc","filename":"console/src/main/resources/org/syncope/console/pages/MembershipModalPage_it.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -1,5 +1,6 @@\n tab1=Attributi\n tab2=Attributi derivati\n+tab3=Attributi virtuali\n title=Ruoli\n add=+\n drop=-\n@@ -10,3 +11,9 @@ derivedAttributeToBeRemoved=Elimina\n derivedAttributeName=Nome\n derivedAttributeValue=Valore derivato\n addDerivedAttributeBtn=Aggiungi\n+\n+virtualAttributes=Attributi virtuali\n+virtualAttributeToBeRemoved=Elimina\n+virtualAttributeName=Nome\n+virtualAttributeValue=Valore virtuale\n+addVirtualAttributeBtn=Aggiungi"},{"sha":"89cc72cf016e2530008ec8df25ee0862b17bf35e","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.html","status":"modified","additions":47,"deletions":1,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -23,6 +23,9 @@\n         #tabs-4 table{\n             font-size: 1.1em;\n         }\n+        #tabs-5 table{\n+            font-size: 1.1em;\n+        }\n     </style>\n </wicket:head>\n \n@@ -38,6 +41,7 @@\n                     <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n                     <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n                     <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+                    <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n                 </ul>\n                 <div id=\"tabs-1\">\n                     <table class=\"stripedTable\" style=\"font-size: 1em;border: none\" width=\"100%\" wicket:id=\"container\">\n@@ -113,9 +117,51 @@\n                 </div>\n \n                 <div id=\"tabs-3\">\n-                    <span wicket:id=\"resourcesPalette\"/>\n+                    <table id=\"virtualAttributes\"\n+                           class=\"ui-widget ui-widget-content ui-corner-all\"\n+                           style=\"font-size: 1em;margin-top:2px;\"\n+                           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+                        <thead>\n+                            <tr class=\"ui-widget-header\">\n+                                <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n+                        <th><wicket:message key=\"virtualAttributeName\"/></th>\n+                        <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+                        </tr>\n+                        </thead>\n+\n+                        <tfoot>\n+                            <tr>\n+                                <td>\n+                                    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                                           wicket:id=\"addVirtualAttributeBtn\" />\n+                                </td>\n+                            </tr>\n+                        </tfoot>\n+\n+                        <tbody wicket:id=\"virtualAttributesContainer\">\n+                            <tr wicket:id=\"virtualAttributes\">\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                                </td>\n+\n+                                <td>\n+                                    <select class=\"text ui-widget-content ui-corner-all\"\n+                                            style=\"width:100%\" wicket:id=\"schema\"/>\n+                                </td>\n+\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"virtualAttributeValue\"/>\n+                                </td>\n+                            </tr>\n+                        </tbody>\n+                    </table>\n+\n                 </div>\n+\n                 <div id=\"tabs-4\">\n+                    <span wicket:id=\"resourcesPalette\"/>\n+                </div>\n+                <div id=\"tabs-5\">\n                     <span wicket:id=\"entitlementsPalette\"/>\n                 </div>\n             </div>"},{"sha":"72cc99bdb6d13982cfe4f4603935d9a6aed7df47","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.properties","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -2,8 +2,9 @@ required_alert=All form fields are required.\n title=Role\n tab1=Attributes\n tab2=Derived attributes\n-tab3=Resources\n-tab4=Entitlements\n+tab3=Virtual attributes\n+tab4=Resources\n+tab5=Entitlements\n add=+\n drop=-\n error=Generic error occurred during the operation\n@@ -17,3 +18,9 @@ derivedAttributeToBeRemoved=Delete\n derivedAttributeName=Name\n derivedAttributeValue=Derived value\n addDerivedAttributeBtn=Add\n+\n+virtuyalAttributes=Virtual Attributes\n+virtualAttributeToBeRemoved=Delete\n+virtualAttributeName=Name\n+virtualAttributeValue=Virtual value\n+addVirtualAttributeBtn=Add"},{"sha":"965308c003712d700ac32ce6ebd5780b16a38e28","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage_it.properties","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -2,8 +2,9 @@ required_alert=All form fields are required.\n title=Ruolo\n tab1=Attributi\n tab2=Attributi derivati\n-tab3=Risorse\n-tab4=Entitlement\n+tab3=Attributi virtuali\n+tab4=Risorse\n+tab5=Entitlement\n add=+\n drop=-\n name=Nome\n@@ -17,3 +18,9 @@ derivedAttributeToBeRemoved=Elimina\n derivedAttributeName=Nome\n derivedAttributeValue=Valore derivato\n addDerivedAttributeBtn=Aggiungi\n+\n+virtuyalAttributes=Attributi virtuali\n+virtualAttributeToBeRemoved=Elimina\n+virtualAttributeName=Nome\n+virtualAttributeValue=Valore virtuale\n+addVirtualAttributeBtn=Aggiungi"},{"sha":"ab6903b484ad5c1d00f2295e62466a18669abcd8","filename":"console/src/main/resources/org/syncope/console/pages/Schema.html","status":"modified","additions":223,"deletions":135,"changes":358,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -16,162 +16,250 @@\n \n     <div id=\"tabs\">\n         <ul>\n-            <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-            <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-            <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-            <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-            <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-            <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n+            <li class=\"tabs-selected\"><a href=\"#user\"><span><wicket:message key=\"user\"/></span></a></li>\n+            <li><a href=\"#role\"><span><wicket:message key=\"role\"/></span></a></li>\n+            <li><a href=\"#membership\"><span><wicket:message key=\"membership\"/></span></a></li>\n         </ul>\n \n-        <div id=\"tabs-1\">\n-\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"userSchemaContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"UsersPaginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n+        <div id=\"user\">\n+            <ul>\n+                <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+                <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+                <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+            </ul>\n+            <div id=\"tabs-1\">\n+\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"userSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"UsersPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+\n+                <div wicket:id=\"createUserSchemaWin\">\n+                    [Show modal window for creating schema]\n+                </div>\n+                <div wicket:id=\"editUserSchemaWin\">\n+                    [Show modal window for editing schema]\n+                </div>\n+\n+                <a wicket:id=\"createUserSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n+\n             </div>\n+            <div id=\"tabs-2\">\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"userDerivedSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"UsersDerPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"createUserDerSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editUserDerSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <div wicket:id=\"createUserSchemaWin\">\n-                [Show modal window for creating schema]\n+                <a wicket:id=\"createUserDerSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n             </div>\n-            <div wicket:id=\"editUserSchemaWin\">\n-                [Show modal window for editing schema]\n+            <div id=\"tabs-3\">\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"userVirtualSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"UsersVirPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"createUserVirSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editUserVirSchemaWin\">[Show modal window for editing schema]</div>\n+\n+                <a wicket:id=\"createUserVirSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n             </div>\n+        </div>\n+        <div id=\"role\">\n+            <ul>\n+                <li class=\"tabs-selected\"><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+                <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n+                <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n+            </ul>\n+            <div id=\"tabs-4\">\n \n-            <a wicket:id=\"createUserSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>\n-            </a>\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"roleSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n \n-        </div>\n-        <div id=\"tabs-2\">\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"userDerivedSchemaContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"UsersDerPaginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n-            </div>\n-            <div wicket:id=\"createUserDerSchemaWin\">[Show modal window for creating schema]</div>\n-            <div wicket:id=\"editUserDerSchemaWin\">[Show modal window for editing schema]</div>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"RolesPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n \n-            <a wicket:id=\"createUserDerSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>\n-            </a>\n-        </div>\n-        <div id=\"tabs-3\">\n-\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"roleSchemasContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"RolesPaginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n+                <div wicket:id=\"createRoleSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editRoleSchemaWin\">[Show modal window for editing schema]</div>\n+\n+                <a wicket:id=\"createRoleSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n             </div>\n+            <div id=\"tabs-5\">\n \n-            <div wicket:id=\"createRoleSchemaWin\">[Show modal window for creating schema]</div>\n-            <div wicket:id=\"editRoleSchemaWin\">[Show modal window for editing schema]</div>\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"roleDerivedSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"RolesDerPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+\n+                <div wicket:id=\"createRoleDerivedSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editRoleDerivedSchemaWin\">[Show modal window for editing schema]</div>\n+\n+                <a wicket:id=\"createRoleDerivedSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n \n-            <a wicket:id=\"createRoleSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>\n-            </a>\n-        </div>\n-        <div id=\"tabs-4\">\n-\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"roleDerivedSchemasContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"RolesDerPaginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n             </div>\n+            <div id=\"tabs-6\">\n+\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"roleVirtualSchemasContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"RolesVirPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n \n-            <div wicket:id=\"createRoleDerivedSchemaWin\">[Show modal window for creating schema]</div>\n-            <div wicket:id=\"editRoleDerivedSchemaWin\">[Show modal window for editing schema]</div>\n+                <div wicket:id=\"createRoleVirtualSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editRoleVirtualSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createRoleDerivedSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>\n-            </a>\n+                <a wicket:id=\"createRoleVirtualSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n \n+            </div>\n         </div>\n-        <div id=\"tabs-5\">\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"membershipSchemaContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"MembershipPaginatorForm\"\n-                          style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n+        <div id=\"membership\">\n+            <ul>\n+                <li class=\"tabs-selected\"><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n+                <li><a href=\"#tabs-8\"><span><wicket:message key=\"tab8\"/></span></a></li>\n+                <li><a href=\"#tabs-9\"><span><wicket:message key=\"tab9\"/></span></a></li>\n+            </ul>\n+            <div id=\"tabs-7\">\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"membershipSchemaContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"MembershipPaginatorForm\"\n+                              style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"createMembershipSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editMembershipSchemaWin\">[Show modal window for editing schema]</div>\n+\n+                <a wicket:id=\"createMembershipSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n             </div>\n-            <div wicket:id=\"createMembershipSchemaWin\">[Show modal window for creating schema]</div>\n-            <div wicket:id=\"editMembershipSchemaWin\">[Show modal window for editing schema]</div>\n+            <div id=\"tabs-8\">\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"membershipDerivedSchemaContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"MembershipDerPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"createMembershipDerSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editMembershipDerSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createMembershipSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>\n-            </a>\n-        </div>\n-        <div id=\"tabs-6\">\n-            <div id=\"users-contain\" class=\"ui-widget\">\n-                <span wicket:id=\"membershipDerivedSchemaContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"MembershipDerPaginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n+                <a wicket:id=\"createMembershipDerSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n             </div>\n-            <div wicket:id=\"createMembershipDerSchemaWin\">[Show modal window for creating schema]</div>\n-            <div wicket:id=\"editMembershipDerSchemaWin\">[Show modal window for editing schema]</div>\n+            <div id=\"tabs-9\">\n+                <div id=\"users-contain\" class=\"ui-widget\">\n+                    <span wicket:id=\"membershipVirtualSchemaContainer\">\n+                        <table class=\"ui-widget ui-widget-content table-hover\"\n+                               wicket:id=\"datatable\"/>\n+                    </span>\n+                    <span style=\"float:right\">\n+                        <form wicket:id=\"MembershipVirPaginatorForm\" style=\"display:inline\">\n+                            <label><wicket:message key=\"displayRows\"/></label>\n+                            <select class=\"text ui-widget-content ui-corner-all\"\n+                                    wicket:id=\"rowsChooser\"/>\n+                        </form>\n+                    </span>\n+                </div>\n+                <div wicket:id=\"createMembershipVirSchemaWin\">[Show modal window for creating schema]</div>\n+                <div wicket:id=\"editMembershipVirSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createMembershipDerSchemaWinLink\"\n-               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-                <wicket:message key=\"create_attribute\"/>    \n-            </a>\n+                <a wicket:id=\"createMembershipVirSchemaWinLink\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+                    <wicket:message key=\"create_attribute\"/>\n+                </a>\n+            </div>\n         </div>\n     </div>\n "},{"sha":"839a650503677d1392adea5d39f7f68dac9747b6","filename":"console/src/main/resources/org/syncope/console/pages/Schema.properties","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -1,9 +1,15 @@\n-tab1=User attributes\n-tab2=User derived attributes\n-tab3=Role attributes\n-tab4=Role derived attributes\n-tab5=Membership attributes\n-tab6=Membership derived attributes\n+user=User\n+role=Role\n+membership=Membership\n+tab1=Attributes\n+tab2=Derived attributes\n+tab3=Virtual attributes\n+tab4=Attributes\n+tab5=Derived attributes\n+tab6=Virtual attributes\n+tab7=Attributes\n+tab8=Derived attributes\n+tab9=Virtual attributes\n create_attribute=Create new attribute\n required_alert=All fields are required\n mandatory=Mandatory"},{"sha":"0469d406197489931c397f43455d26bbe341d6b1","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -51,9 +51,6 @@\n                 <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n                        id=\"mandatoryCondition\" wicket:id=\"mandatoryCondition\"/>\n \n-                <label for=\"virtual\" class=\"onerowlabel\"><wicket:message key=\"virtual\"/></label>\n-                <input type=\"checkbox\" id=\"virtual\" wicket:id=\"virtual\" class=\"onerowcheckbox\"/>\n-\n                 <label for=\"multivalue\" class=\"onerowlabel\"><wicket:message key=\"multivalue\"/></label>\n                 <input type=\"checkbox\" id=\"multivalue\" wicket:id=\"multivalue\" class=\"onerowcheckbox\"/>\n "},{"sha":"dad4af09f0cb49de29589d57b972883712ba6f84","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -7,7 +7,6 @@ required_alert=All form fields are required.\n mandatoryCondition=Mandatory condition\n uniqueConstraint=Unique constraint\n multivalue=Multivalue\n-virtual=Virtual\n multivalueAndUniqueConstr.validation='Multivalue' and 'Unique constraint' options can't be both checked\n name=Name\n type=Type"},{"sha":"2d285ac0631e9c6b939ef31cbbb66586ace96f1c","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -6,7 +6,6 @@ create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti\n mandatoryCondition=Vincolo d'obbligatoriet\\u00e0\n multivalue=Multivalore\n-virtual=Virtuale\n name=Nome\n type=Tipo\n validatorClass=Validatore"},{"sha":"69e90df1c61ceffbdfdbebafe0a2ba09a8a6830b","filename":"console/src/main/resources/org/syncope/console/pages/Schema_it.properties","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -1,9 +1,15 @@\n-tab1=Attributi utente\n-tab2=Attributi derivati utente\n-tab3=Attributi ruolo\n-tab4=Attributi derivati ruolo\n-tab5=Attributi membership\n-tab6=Attributi derivati membership\n+user=Utente\n+role=Ruolo\n+membership=Membership\n+tab1=Attributi\n+tab2=Attributi derivati\n+tab3=Attributi virtuali\n+tab4=Attributi\n+tab5=Attributi derivati\n+tab6=Attributi virtuali\n+tab7=Attributi\n+tab8=Attributi derivati\n+tab9=Attributi virtuali\n create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti.\n mandatory=Obbligatorio"},{"sha":"e4f8be720872d1dc6ac764aaecca880269cb168a","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.html","status":"modified","additions":47,"deletions":1,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -42,6 +42,10 @@\n         #tabs-4 table{\n             font-size: 1.1em;\n         }\n+\n+        #tabs-5 table{\n+            font-size: 1.1em;\n+        }\n     </style>\n </wicket:head>\n \n@@ -58,6 +62,7 @@\n                     <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n                     <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n                     <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+                    <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab5\"/></span></a></li>\n                 </ul>\n                 <div id=\"tabs-1\">\n                     <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" wicket:id=\"container\" width=\"100%\">\n@@ -133,12 +138,53 @@\n                 </div>\n \n                 <div id=\"tabs-3\">\n+                    <table id=\"virtualAttributes\"\n+                           class=\"ui-widget ui-widget-content ui-corner-all\"\n+                           style=\"font-size: 1em;margin-top:2px;\"\n+                           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+                        <thead>\n+                            <tr class=\"ui-widget-header\">\n+                                <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n+                        <th><wicket:message key=\"virtualAttributeName\"/></th>\n+                        <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+                        </tr>\n+                        </thead>\n \n-                    <span wicket:id=\"resourcesPalette\"/>\n+                        <tfoot>\n+                            <tr>\n+                                <td>\n+                                    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                                           wicket:id=\"addVirtualAttributeBtn\" />\n+                                </td>\n+                            </tr>\n+                        </tfoot>\n \n+                        <tbody wicket:id=\"virtualAttributesContainer\">\n+                            <tr wicket:id=\"virtualAttributes\">\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                                </td>\n+\n+                                <td>\n+                                    <select class=\"text ui-widget-content ui-corner-all\"\n+                                            style=\"width:100%\" wicket:id=\"schema\"/>\n+                                </td>\n+\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"virtualAttributeValue\"/>\n+                                </td>\n+                            </tr>\n+                        </tbody>\n+                    </table>\n                 </div>\n \n                 <div id=\"tabs-4\">\n+\n+                    <span wicket:id=\"resourcesPalette\"/>\n+\n+                </div>\n+\n+                <div id=\"tabs-5\">\n                     <p class=\"ui-widget ui-corner-all ui-widget-header\">\n                     <wicket:message key=\"membership_availability\"/>\n                     </p>"},{"sha":"b23d79aa4ae9b66e048a99efae30dcc8be580753","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.properties","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -5,8 +5,9 @@ firstname=Firstname\n surname=Surname\n tab1=Attributes\n tab2=Derived attributes\n-tab3=Resources\n-tab4=Roles\n+tab3=Virtual attributes\n+tab4=Resources\n+tab5=Roles\n add=+\n drop=-\n resources=Resources transfer\n@@ -26,3 +27,9 @@ derivedAttributeToBeRemoved=Delete\n derivedAttributeName=Name\n derivedAttributeValue=Derived value\n addDerivedAttributeBtn=Add\n+\n+virtualAttributes=Virtual Attributes\n+virtualAttributeToBeRemoved=Delete\n+virtualAttributeName=Name\n+virtualAttributeValue=Virtual value\n+addVirtualAttributeBtn=Add"},{"sha":"473d10f21e35a830dd0e68755e076f2816aa90a1","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage_it.properties","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -5,8 +5,9 @@ firstname=Nome\n surname=Cognome\n tab1=Attributi\n tab2=Attributi derivati\n-tab3=Risorse\n-tab4=Ruoli\n+tab3=Attributi virtuali\n+tab4=Risorse\n+tab5=Ruoli\n add=+\n drop=-\n resources=Associazione risorse\n@@ -27,3 +28,9 @@ derivedAttributeName=Nome\n derivedAttributeValue=Valore derivato\n addDerivedAttributeBtn=Aggiungi\n \n+virtualAttributes=Attributi virtual\n+virtualAttributeToBeRemoved=Elimina\n+virtualAttributeName=Nome\n+virtualAttributeValue=Valore virtuale\n+addVirtualAttributeBtn=Aggiungi\n+"},{"sha":"1f509eaa28aeebedb4df3ce82a811160c4e3df57","filename":"console/src/main/resources/org/syncope/console/pages/VirtualSchemaModalPage.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,26 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:extend>\n+    <div id=\"dialog-form\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+        <form wicket:id=\"SchemaForm\">\n+            <fieldset>\n+                <label for=\"name\"><wicket:message key=\"name\"/></label>\n+                <input type=\"text\" id=\"name\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"name\" />\n+                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n+            </fieldset>\n+        </form>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"ba178cfae633f770ce270a34f176061cf911d098","filename":"console/src/main/resources/org/syncope/console/pages/VirtualSchemaModalPage.properties","status":"added","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,7 @@\n+create_attribute=Create new attribute\n+required_alert=All form fields are required.\n+name=Name\n+existing_schemas=Existing Schemas:\n+edit_attribute=Edit attribute\n+attributes=Virtual attributes\n+title=Virtual Schema"},{"sha":"2c2a6a9a3abeb17e2a55a1df7221cb517681ac17","filename":"console/src/main/resources/org/syncope/console/pages/VirtualSchemaModalPage_it.properties","status":"added","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties?ref=bbe942bf53ee4370bfb3af7434dd9cd6d0b61e6a","patch":"@@ -0,0 +1,7 @@\n+create_attribute=Crea nuovo attributo\n+required_alert=Tutti i campi sono richiesti.\n+name=Nome\n+existing_schemas=Schemi presenti:\n+edit_attribute=Modifica attributo\n+attributes=Attributi virtuali\n+title=Schema Virtuale"}]}