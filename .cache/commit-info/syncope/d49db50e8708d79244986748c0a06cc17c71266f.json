{"sha":"d49db50e8708d79244986748c0a06cc17c71266f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0OWRiNTBlODcwOGQ3OTI0NDk4Njc0OGMwYTA2Y2MxN2M3MTI2NmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-27T09:17:15Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-27T10:04:51Z"},"message":"Bulk upgrade: jackson, elasticsearch, commons-io, commons-codec, swagger-jaxrs, bootstrap-fileinput, pdfbox, greenmail","tree":{"sha":"84a6dc65ae7e09acca5c9757aa620269d4f9a10d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/84a6dc65ae7e09acca5c9757aa620269d4f9a10d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d49db50e8708d79244986748c0a06cc17c71266f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d49db50e8708d79244986748c0a06cc17c71266f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d49db50e8708d79244986748c0a06cc17c71266f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d49db50e8708d79244986748c0a06cc17c71266f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"105631375db60c2e4956d7d6a16dbcb4884cfc4c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/105631375db60c2e4956d7d6a16dbcb4884cfc4c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/105631375db60c2e4956d7d6a16dbcb4884cfc4c"}],"stats":{"total":242,"additions":78,"deletions":164},"files":[{"sha":"cdf83b1228fb330b3af8b1307456c29f37a29c4d","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -29,7 +29,6 @@\n import javax.sql.DataSource;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n-import org.apache.commons.io.IOUtils;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.commands.migrate.MigrateCommand;\n import org.apache.syncope.core.persistence.jpa.content.ContentLoaderHandler;\n@@ -48,16 +47,12 @@ public class MigrateTest {\n     @BeforeAll\n     public static void before() {\n         Properties props = new Properties();\n-        InputStream propStream = null;\n-        try {\n-            propStream = MigrateTest.class.getResourceAsStream(\"/test.properties\");\n+        try (InputStream propStream = MigrateTest.class.getResourceAsStream(\"/test.properties\")) {\n             props.load(propStream);\n \n             BASE_PATH = props.getProperty(\"testClasses\");\n         } catch (IOException e) {\n             fail(e.getMessage());\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n         assertNotNull(BASE_PATH);\n     }\n@@ -80,14 +75,10 @@ public void conf() throws Exception {\n \n         // 3. attempt to set initial content from the migrated MasterContent.xml\n         SAXParserFactory factory = SAXParserFactory.newInstance();\n-        InputStream in = null;\n-        try {\n-            in = new FileInputStream(args[3]);\n+        try (InputStream in = new FileInputStream(args[3])) {\n \n             SAXParser parser = factory.newSAXParser();\n             parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT, false));\n-        } finally {\n-            IOUtils.closeQuietly(in);\n         }\n     }\n }"},{"sha":"f8dc13df20eccea862c71c1403f58d1f3838f2d1","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/FilesystemResource.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -62,14 +62,10 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    InputStream resourceIS = null;\n-                    try {\n-                        resourceIS = Files.newInputStream(new File(baseDir, subPath).toPath());\n+                    try (InputStream resourceIS = Files.newInputStream(new File(baseDir, subPath).toPath())) {\n                         IOUtils.copy(resourceIS, attributes.getResponse().getOutputStream());\n                     } catch (IOException e) {\n                         LOG.error(\"Could not read from {}\", baseDir.getAbsolutePath() + subPath, e);\n-                    } finally {\n-                        IOUtils.closeQuietly(resourceIS);\n                     }\n                 }\n             });"},{"sha":"90e49aedab3ab676e2c5255cead5be23840821d4","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -19,10 +19,8 @@\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n import java.io.ByteArrayInputStream;\n-import java.security.cert.CertificateException;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;\n-import javax.naming.InvalidNameException;\n import javax.naming.ldap.LdapName;\n import javax.naming.ldap.Rdn;\n import org.apache.commons.lang3.StringUtils;\n@@ -31,7 +29,6 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.util.io.IOUtils;\n \n @BinaryPreview(mimeTypes = { \"application/x-x509-ca-cert\", \"application/x-x509-user-cert\", \"application/pkix-cert\" })\n public class BinaryCertPreviewer extends AbstractBinaryPreviewer {\n@@ -44,14 +41,13 @@ public BinaryCertPreviewer(final String id, final String mimeType) {\n \n     @Override\n     public Component preview(final byte[] uploadedBytes) {\n-        Label commonNameLabel = new Label(\"certCommonName\", new Model<String>());\n+        Label commonNameLabel = new Label(\"certCommonName\", new Model<>());\n         if (uploadedBytes.length == 0) {\n             LOG.info(\"Enpty certificate\");\n             return commonNameLabel;\n         }\n \n-        ByteArrayInputStream certificateStream = new ByteArrayInputStream(uploadedBytes);\n-        try {\n+        try (ByteArrayInputStream certificateStream = new ByteArrayInputStream(uploadedBytes)) {\n             X509Certificate certificate = (X509Certificate) CertificateFactory.getInstance(\"X.509\").\n                     generateCertificate(certificateStream);\n \n@@ -67,12 +63,11 @@ public Component preview(final byte[] uploadedBytes) {\n                 }\n             }\n             commonNameLabel.setDefaultModelObject(commonNameBuilder.toString());\n-        } catch (CertificateException | InvalidNameException e) {\n+        } catch (Exception e) {\n             LOG.error(\"Error evaluating certificate file\", e);\n             commonNameLabel.setDefaultModelObject(getString(Constants.ERROR));\n-        } finally {\n-            IOUtils.closeQuietly(certificateStream);\n         }\n+\n         return this.addOrReplace(commonNameLabel);\n     }\n }"},{"sha":"23aa4ef35791c47637284dc38b7ee264cba3c198","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryPDFPreviewer.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -23,6 +23,7 @@\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.Serializable;\n import org.apache.pdfbox.cos.COSObject;\n import org.apache.pdfbox.io.MemoryUsageSetting;\n@@ -38,7 +39,6 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.request.resource.DynamicImageResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.apache.wicket.util.io.IOUtils;\n import org.apache.wicket.util.time.Time;\n \n @BinaryPreview(mimeTypes = { \"application/pdf\" })\n@@ -62,9 +62,9 @@ public BinaryPDFPreviewer(final String id, final String mimeType) {\n     public Component preview(final byte[] uploadedBytes) {\n         firstPage = null;\n \n-        PDDocument document = null;\n-        try {\n-            document = PDDocument.load(new ByteArrayInputStream(uploadedBytes), MemoryUsageSetting.setupTempFileOnly());\n+        try (InputStream bais = new ByteArrayInputStream(uploadedBytes);\n+                PDDocument document = PDDocument.load(bais, MemoryUsageSetting.setupTempFileOnly())) {\n+\n             document.setResourceCache(new DefaultResourceCache() {\n \n                 @Override\n@@ -79,8 +79,6 @@ public void put(final COSObject indirect, final PDXObject xobject) throws IOExce\n             }\n         } catch (IOException e) {\n             LOG.error(\"While generating thumbnail from first page\", e);\n-        } finally {\n-            IOUtils.closeQuietly(document);\n         }\n \n         Fragment fragment;"},{"sha":"534a5373f98b18de7cf70a7bb6da2cbc80da9927","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -209,9 +209,9 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n             final ReportExecExportFormat format) {\n \n         // streaming SAX handler from a compressed byte array stream\n-        ByteArrayInputStream bais = new ByteArrayInputStream(reportExec.getExecResult());\n-        ZipInputStream zis = new ZipInputStream(bais);\n-        try {\n+        try (ByteArrayInputStream bais = new ByteArrayInputStream(reportExec.getExecResult());\n+                ZipInputStream zis = new ZipInputStream(bais)) {\n+\n             // a single ZipEntry in the ZipInputStream (see ReportJob)\n             zis.getNextEntry();\n \n@@ -272,9 +272,6 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n             LOG.debug(\"Result of {} successfully exported as {}\", reportExec, format);\n         } catch (Exception e) {\n             LOG.error(\"While exporting content\", e);\n-        } finally {\n-            IOUtils.closeQuietly(zis);\n-            IOUtils.closeQuietly(bais);\n         }\n     }\n "},{"sha":"405903341a49c8661bcf6b4648218f21f4c9a7d6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -26,7 +26,6 @@\n import javax.sql.DataSource;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n-import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n@@ -97,15 +96,11 @@ private void loadDefaultContent(\n             throws Exception {\n \n         SAXParserFactory factory = SAXParserFactory.newInstance();\n-        InputStream in = null;\n-        try {\n-            in = contentXML.getResource().getInputStream();\n+        try (InputStream in = contentXML.getResource().getInputStream()) {\n \n             SAXParser parser = factory.newSAXParser();\n             parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT, true));\n             LOG.debug(\"[{}] Default content successfully loaded\", domain);\n-        } finally {\n-            IOUtils.closeQuietly(in);\n         }\n     }\n "},{"sha":"7a9cfc73d5ec363e7be71b668695319c6583caf0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJobDelegate.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -31,7 +31,6 @@\n import javax.xml.transform.sax.SAXTransformerFactory;\n import javax.xml.transform.sax.TransformerHandler;\n import javax.xml.transform.stream.StreamResult;\n-import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.types.ReportExecStatus;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n@@ -163,8 +162,8 @@ public void execute(final String reportKey) throws JobExecutionException {\n         } finally {\n             try {\n                 zos.closeEntry();\n-                IOUtils.closeQuietly(zos);\n-                IOUtils.closeQuietly(baos);\n+                zos.close();\n+                baos.close();\n             } catch (IOException e) {\n                 LOG.error(\"While closing StreamResult's backend\", e);\n             }"},{"sha":"c7191da8aa03a59e30c4f8d2a06766369471585b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -103,13 +103,10 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n         } else if (\"/syncope.wadl\".equals(request.getServletPath())) {\n             response.setContentType(MediaType.APPLICATION_XML);\n \n-            InputStream in = new ByteArrayInputStream(wadl.getBytes());\n-            OutputStream out = response.getOutputStream();\n-            try {\n+            try (InputStream in = new ByteArrayInputStream(wadl.getBytes());\n+                    OutputStream out = response.getOutputStream()) {\n+\n                 IOUtils.copy(in, out);\n-            } finally {\n-                IOUtils.closeQuietly(in);\n-                IOUtils.closeQuietly(out);\n             }\n         } else {\n             throw new ServerException(\"URL not supported: \" + request.getRequestURI());"},{"sha":"8c04545c567ca4cbeaa1a8536340c2e1b8ff5411","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableDefinitionLoader.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -56,14 +56,10 @@ public Integer getPriority() {\n     public void load() {\n         byte[] wfDef = new byte[0];\n \n-        InputStream wfIn = null;\n-        try {\n-            wfIn = userWorkflowDef.getResource().getInputStream();\n+        try (InputStream wfIn = userWorkflowDef.getResource().getInputStream()) {\n             wfDef = IOUtils.toByteArray(wfIn);\n         } catch (IOException e) {\n             LOG.error(\"While loading \" + userWorkflowDef.getResource().getFilename(), e);\n-        } finally {\n-            IOUtils.closeQuietly(wfIn);\n         }\n \n         for (Map.Entry<String, ProcessEngine> entry : dpEngine.getEngines().entrySet()) {"},{"sha":"9d0ac9febb05cbb119902d651431608db9a50d2c","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableDeployUtils.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -26,7 +26,6 @@\n import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n-import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.flowable.bpmn.converter.BpmnXMLConverter;\n import org.flowable.bpmn.model.BpmnModel;\n@@ -54,13 +53,11 @@ public static Deployment deployDefinition(\n     }\n \n     public static void deployModel(final ProcessEngine engine, final ProcessDefinition procDef) {\n-        InputStream bpmnStream = null;\n-        InputStreamReader isr = null;\n         XMLStreamReader xtr = null;\n-        try {\n-            bpmnStream = engine.getRepositoryService().getResourceAsStream(\n-                    procDef.getDeploymentId(), procDef.getResourceName());\n-            isr = new InputStreamReader(bpmnStream);\n+        try (InputStream bpmnStream = engine.getRepositoryService().\n+                getResourceAsStream(procDef.getDeploymentId(), procDef.getResourceName());\n+                InputStreamReader isr = new InputStreamReader(bpmnStream)) {\n+\n             xtr = XMLInputFactory.newInstance().createXMLStreamReader(isr);\n             BpmnModel bpmnModel = new BpmnXMLConverter().convertToBpmnModel(xtr);\n \n@@ -86,8 +83,6 @@ public static void deployModel(final ProcessEngine engine, final ProcessDefiniti\n                     // ignore\n                 }\n             }\n-            IOUtils.closeQuietly(isr);\n-            IOUtils.closeQuietly(bpmnStream);\n         }\n     }\n "},{"sha":"69c1b30ddc62ed4c0b90cf94bfa23eaaa4a26ef7","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -868,14 +868,10 @@ protected void exportProcessModel(final String key, final OutputStream os) {\n     }\n \n     protected void exportProcessResource(final String deploymentId, final String resourceName, final OutputStream os) {\n-        InputStream procDefIS = engine.getRepositoryService().\n-                getResourceAsStream(deploymentId, resourceName);\n-        try {\n+        try (InputStream procDefIS = engine.getRepositoryService().getResourceAsStream(deploymentId, resourceName)) {\n             IOUtils.copy(procDefIS, os);\n         } catch (IOException e) {\n             LOG.error(\"While exporting {}\", resourceName, e);\n-        } finally {\n-            IOUtils.closeQuietly(procDefIS);\n         }\n     }\n "},{"sha":"ff3aae0c74d1669899f48f5cd5e41d487cbf3cd7","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -92,16 +92,12 @@ private void loadContext(final Collection<String> routes) {\n             Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();\n             List<RouteDefinition> routeDefs = new ArrayList<>();\n             for (String route : routes) {\n-                InputStream input = null;\n-                try {\n-                    input = IOUtils.toInputStream(route, StandardCharsets.UTF_8);\n+                try (InputStream input = IOUtils.toInputStream(route, StandardCharsets.UTF_8)) {\n                     LSInput lsinput = domImpl.createLSInput();\n                     lsinput.setByteStream(input);\n \n                     Node routeElement = parser.parse(lsinput).getDocumentElement();\n                     routeDefs.add(unmarshaller.unmarshal(routeElement, RouteDefinition.class).getValue());\n-                } finally {\n-                    IOUtils.closeQuietly(input);\n                 }\n             }\n             camelContext.addRouteDefinitions(routeDefs);"},{"sha":"dbba1d856c4fa51507ebbab28e0d1e760293dd0b","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchClientFactoryBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -22,7 +22,7 @@\n import java.util.Map;\n import org.elasticsearch.client.Client;\n import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.common.transport.InetSocketTransportAddress;\n+import org.elasticsearch.common.transport.TransportAddress;\n import org.elasticsearch.transport.client.PreBuiltTransportClient;\n import org.springframework.beans.factory.DisposableBean;\n import org.springframework.beans.factory.FactoryBean;\n@@ -54,7 +54,7 @@ public Client getObject() throws Exception {\n \n                 for (Map.Entry<String, Integer> entry : addresses.entrySet()) {\n                     tClient.addTransportAddress(\n-                            new InetSocketTransportAddress(InetAddress.getByName(entry.getKey()), entry.getValue()));\n+                            new TransportAddress(InetAddress.getByName(entry.getKey()), entry.getValue()));\n                 }\n \n                 client = tClient;"},{"sha":"9f0d783a491cd12e4ae9daf2457bb323ac1b014f","filename":"fit/build-tools/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -112,11 +112,6 @@ under the License.\n       <artifactId>spring-web</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>commons-io</groupId>\n-      <artifactId>commons-io</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>com.h2database</groupId>\n       <artifactId>h2</artifactId>"},{"sha":"460b23f905650dfc23a1c895826544aa27c72751","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/LdifInputStreamLoader.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -20,7 +20,6 @@\n \n import java.io.InputStream;\n import java.util.List;\n-import org.apache.commons.io.IOUtils;\n import org.apache.directory.api.ldap.model.entry.DefaultEntry;\n import org.apache.directory.api.ldap.model.entry.Entry;\n import org.apache.directory.api.ldap.model.entry.Modification;\n@@ -120,7 +119,7 @@ public int execute() {\n                     }\n                 }\n             } finally {\n-                IOUtils.closeQuietly(ldif);\n+                ldif.close();\n             }\n         } catch (Exception ioe) {\n             LOG.error(I18n.err(I18n.ERR_174), ioe);"},{"sha":"0aea1dbe492c9b45c3352cbbd5da9d6857440485","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -38,7 +38,6 @@\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -248,9 +247,7 @@ public abstract class AbstractITCase {\n \n     @BeforeAll\n     public static void securitySetup() {\n-        InputStream propStream = null;\n-        try {\n-            propStream = Encryptor.class.getResourceAsStream(\"/security.properties\");\n+        try (InputStream propStream = Encryptor.class.getResourceAsStream(\"/security.properties\")) {\n             Properties props = new Properties();\n             props.load(propStream);\n \n@@ -260,8 +257,6 @@ public static void securitySetup() {\n             JWT_ISSUER = props.getProperty(\"jwtIssuer\");\n         } catch (Exception e) {\n             LOG.error(\"Could not read secretKey\", e);\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n \n         assertNotNull(ANONYMOUS_UNAME);"},{"sha":"5fb9c524327cdeee20399b61c5852dfafab04e64","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -55,10 +55,8 @@ public class CLIITCase extends AbstractITCase {\n     @BeforeAll\n     public static void install() {\n         Properties props = new Properties();\n-        InputStream propStream = null;\n         Process process = null;\n-        try {\n-            propStream = CLIITCase.class.getResourceAsStream(\"/cli-test.properties\");\n+        try (InputStream propStream = CLIITCase.class.getResourceAsStream(\"/cli-test.properties\")) {\n             props.load(propStream);\n \n             File workDir = new File(props.getProperty(\"cli-work.dir\"));\n@@ -75,7 +73,6 @@ public static void install() {\n         } catch (IOException | InterruptedException e) {\n             fail(e.getMessage());\n         } finally {\n-            IOUtils.closeQuietly(propStream);\n             if (process != null) {\n                 process.destroy();\n             }"},{"sha":"348e073bdacea9b41b9e20646552cd684cf640cf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractNotificationTaskITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractNotificationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractNotificationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractNotificationTaskITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -29,7 +29,6 @@\n import javax.mail.Message;\n import javax.mail.Session;\n import javax.mail.Store;\n-import org.apache.commons.io.IOUtils;\n import org.junit.jupiter.api.AfterAll;\n import org.junit.jupiter.api.BeforeAll;\n \n@@ -48,14 +47,10 @@ public abstract class AbstractNotificationTaskITCase extends AbstractTaskITCase\n     @BeforeAll\n     public static void startGreenMail() {\n         Properties props = new Properties();\n-        InputStream propStream = null;\n-        try {\n-            propStream = ExceptionMapperITCase.class.getResourceAsStream(\"/mail.properties\");\n+        try (InputStream propStream = ExceptionMapperITCase.class.getResourceAsStream(\"/mail.properties\")) {\n             props.load(propStream);\n         } catch (Exception e) {\n             LOG.error(\"Could not load /mail.properties\", e);\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n \n         SMTP_HOST = props.getProperty(\"smtpHost\");"},{"sha":"0ac46928ba2c3098d52830fda0724b9d800d6b81","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -39,7 +39,6 @@\n import java.util.UUID;\n import java.util.stream.Collectors;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -79,10 +78,8 @@ public class ConnectorITCase extends AbstractITCase {\n \n     @BeforeAll\n     public static void setUpConnIdBundles() throws IOException {\n-        InputStream propStream = null;\n-        try {\n+        try (InputStream propStream = ConnectorITCase.class.getResourceAsStream(\"/connid.properties\")) {\n             Properties props = new Properties();\n-            propStream = ConnectorITCase.class.getResourceAsStream(\"/connid.properties\");\n             props.load(propStream);\n \n             for (String location : props.getProperty(\"connid.locations\").split(\",\")) {\n@@ -97,8 +94,6 @@ public static void setUpConnIdBundles() throws IOException {\n             testJDBCURL = props.getProperty(\"testdb.url\");\n         } catch (Exception e) {\n             LOG.error(\"Could not load /connid.properties\", e);\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n         assertNotNull(connectorServerLocation);\n         assertNotNull(connIdSoapVersion);"},{"sha":"b99d16de1e1bab5a64a5691eb3873e64afd3e5b1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -24,7 +24,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n-import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -43,14 +42,10 @@ public class ExceptionMapperITCase extends AbstractITCase {\n \n     @BeforeAll\n     public static void setUpErrorMessages() throws IOException {\n-        InputStream propStream = null;\n-        try {\n-            propStream = ExceptionMapperITCase.class.getResourceAsStream(\"/errorMessages.properties\");\n+        try (InputStream propStream = ExceptionMapperITCase.class.getResourceAsStream(\"/errorMessages.properties\")) {\n             ERROR_MESSAGES.load(propStream);\n         } catch (Exception e) {\n             LOG.error(\"Could not load /errorMessages.properties\", e);\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n     }\n "},{"sha":"8c1c900e4ff16f5b574c54a6d404754aa36ae6f2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -34,7 +34,6 @@\n import javax.ws.rs.core.Response;\n import javax.xml.ws.WebServiceException;\n import org.apache.commons.io.FileUtils;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n@@ -246,10 +245,8 @@ public void listAuditEvents() {\n \n     @Test\n     public void customAuditAppender() throws IOException, InterruptedException {\n-        InputStream propStream = null;\n-        try {\n+        try (InputStream propStream = getClass().getResourceAsStream(\"/core-test.properties\")) {\n             Properties props = new Properties();\n-            propStream = getClass().getResourceAsStream(\"/core-test.properties\");\n             props.load(propStream);\n \n             String auditFilePath = props.getProperty(\"test.log.dir\")\n@@ -321,8 +318,6 @@ public void customAuditAppender() throws IOException, InterruptedException {\n             assertTrue(StringUtils.isEmpty(FileUtils.readFileToString(auditTempFile, Charset.defaultCharset())));\n         } catch (IOException e) {\n             fail(\"Unable to read/write log files\" + e.getMessage());\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n         }\n     }\n "},{"sha":"df0afdd1ba6cd05ef0229af58ae27d7328103e5e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -192,9 +192,15 @@ public void fromCSV() throws Exception {\n         } catch (IOException e) {\n             fail(e.getMessage());\n         } finally {\n-            IOUtils.closeQuietly(propStream);\n-            IOUtils.closeQuietly(srcStream);\n-            IOUtils.closeQuietly(dstStream);\n+            if (propStream != null) {\n+                propStream.close();\n+            }\n+            if (srcStream != null) {\n+                srcStream.close();\n+            }\n+            if (dstStream != null) {\n+                dstStream.close();\n+            }\n         }\n \n         // -----------------------------"},{"sha":"07e33e375595de6f2705c52d99b3be71db000f19","filename":"installer/src/main/java/org/apache/syncope/installer/processes/BaseProcess.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -22,7 +22,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n-import org.apache.commons.io.IOUtils;\n \n public abstract class BaseProcess {\n \n@@ -31,14 +30,10 @@ public abstract class BaseProcess {\n     protected String syncopeInstallDir;\n \n     static {\n-        InputStream input = null;\n-        try {\n-            input = BaseProcess.class.getResourceAsStream(\"/installer.properties\");\n+        try (InputStream input = BaseProcess.class.getResourceAsStream(\"/installer.properties\")) {\n             PROPERTIES.load(input);\n         } catch (IOException e) {\n             // ignore\n-        } finally {\n-            IOUtils.closeQuietly(input);\n         }\n     }\n "},{"sha":"f84538b61e04923dcbeb8cda2413582d82392858","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java","status":"modified","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -37,7 +37,6 @@\n import javax.xml.transform.dom.DOMSource;\n import javax.xml.transform.stream.StreamResult;\n import org.apache.commons.io.FileUtils;\n-import org.apache.commons.io.IOUtils;\n import org.w3c.dom.Document;\n \n public class FileSystemUtils {\n@@ -135,20 +134,17 @@ public void appendToFile(final File file, final String content) {\n     }\n \n     public static void writeXML(final Document doc, final OutputStream out) throws IOException, TransformerException {\n-        try {\n-            final TransformerFactory factory = TransformerFactory.newInstance();\n-            factory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);\n-            final Transformer transformer = factory.newTransformer();\n-            transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"no\");\n-            transformer.setOutputProperty(OutputKeys.METHOD, \"xml\");\n-            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n-            transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n-            transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n-            transformer.transform(new DOMSource(doc),\n-                    new StreamResult(new OutputStreamWriter(out, Charset.forName(\"UTF-8\"))));\n-        } finally {\n-            IOUtils.closeQuietly(out);\n-        }\n+        final TransformerFactory factory = TransformerFactory.newInstance();\n+        factory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);\n+        final Transformer transformer = factory.newTransformer();\n+        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"no\");\n+        transformer.setOutputProperty(OutputKeys.METHOD, \"xml\");\n+        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n+        transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n+        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n+        transformer.transform(new DOMSource(doc),\n+                new StreamResult(new OutputStreamWriter(out, Charset.forName(\"UTF-8\"))));\n+        out.close();\n     }\n \n     public static void delete(final File file) {"},{"sha":"a9ea33b2677ab05c54223c0a0603753f0949967b","filename":"pom.xml","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d49db50e8708d79244986748c0a06cc17c71266f/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d49db50e8708d79244986748c0a06cc17c71266f/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d49db50e8708d79244986748c0a06cc17c71266f","patch":"@@ -367,13 +367,13 @@ under the License.\n \n     <cxf.version>3.2.1</cxf.version>\n \n-    <jackson.version>2.9.1</jackson.version>\n+    <jackson.version>2.9.2</jackson.version>\n \n     <spring.version>5.0.1.RELEASE</spring.version>\n     <spring-security.version>4.2.3.RELEASE</spring-security.version>\n \n     <openjpa.version>3.0.0-SNAPSHOT</openjpa.version>\n-    <hikaricp.version>2.7.2</hikaricp.version>\n+    <hikaricp.version>2.7.4</hikaricp.version>\n     <bval.version>1.1.2</bval.version>\n \n     <jasypt.version>1.9.2</jasypt.version>\n@@ -386,17 +386,17 @@ under the License.\n \n     <flowable.version>6.2.0</flowable.version>\n \n-    <camel.version>2.19.3</camel.version>\t\n+    <camel.version>2.20.1</camel.version>\t\n \n     <slf4j.version>1.7.25</slf4j.version>\n     <opensaml.version>3.3.0</opensaml.version>\n \n-    <elasticsearch.version>5.6.2</elasticsearch.version>\n+    <elasticsearch.version>6.0.0</elasticsearch.version>\n \n     <log4j.version>2.10.0</log4j.version>\n     <disruptor.version>3.3.7</disruptor.version>\n \n-    <commons-io.version>2.5</commons-io.version>\n+    <commons-io.version>2.6</commons-io.version>\n     <commons-email.version>1.5</commons-email.version>\n     <commons-jexl.version>3.1</commons-jexl.version>\n     <commons-lang.version>3.7</commons-lang.version>\n@@ -415,7 +415,7 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n     <flowable-modeler.directory>${project.build.directory}/flowable-modeler</flowable-modeler.directory>    \n \n-    <swagger-core.version>1.5.16</swagger-core.version>    \n+    <swagger-core.version>1.5.17</swagger-core.version>    \n     <swagger-ui.version>2.2.10</swagger-ui.version>\n     <guava.version>20.0</guava.version>\n \n@@ -426,7 +426,7 @@ under the License.\n     \n     <bootstrap.version>3.3.7</bootstrap.version>\n     <bootstrap-select.version>1.12.2</bootstrap-select.version>\n-    <bootstrap-fileinput.version>4.4.2</bootstrap-fileinput.version>\n+    <bootstrap-fileinput.version>4.4.6</bootstrap-fileinput.version>\n     <bootbox.version>4.4.0</bootbox.version>\n     <font-awesome.version>4.7.0</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n@@ -1240,7 +1240,7 @@ under the License.\n       <dependency>\n         <groupId>org.apache.pdfbox</groupId>\n         <artifactId>pdfbox</artifactId>\n-        <version>2.0.7</version>\n+        <version>2.0.8</version>\n       </dependency>\n       \n       <dependency>\n@@ -1587,7 +1587,7 @@ under the License.\n       <dependency>\n         <groupId>com.icegreen</groupId>\n         <artifactId>greenmail</artifactId>\n-        <version>1.5.5</version>\n+        <version>1.5.6</version>\n         <scope>test</scope>\n         <exclusions>\n           <exclusion>\n@@ -2216,24 +2216,24 @@ under the License.\n             <link>http://www.slf4j.org/api/</link>\n             <link>http://connid.tirasa.net/apidocs/1.4/</link>\n             <link>http://cxf.apache.org/javadoc/latest-3.2.x/</link>\n-            <link>http://fasterxml.github.io/jackson-core/javadoc/2.8/</link>\n-            <link>http://fasterxml.github.io/jackson-databind/javadoc/2.8/</link>\n-            <link>http://fasterxml.github.io/jackson-annotations/javadoc/2.8/</link>\n-            <link>http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/</link>\n-            <link>http://fasterxml.github.io/jackson-dataformat-yaml/javadoc/2.8/</link>\n-            <link>http://fasterxml.github.io/jackson-datatype-joda/javadoc/2.8/</link>\n-            <link>http://www.javadoc.io/doc/org.apache.camel/camel-core/2.18.3/</link>\n-            <link>http://www.javadoc.io/doc/org.apache.camel/camel-spring/2.18.3/</link>\n-            <link>https://ci.apache.org/projects/wicket/apidocs/7.x/</link>\n+            <link>http://fasterxml.github.io/jackson-core/javadoc/2.9/</link>\n+            <link>http://fasterxml.github.io/jackson-databind/javadoc/2.9/</link>\n+            <link>http://fasterxml.github.io/jackson-annotations/javadoc/2.9/</link>\n+            <link>http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/</link>\n+            <link>http://fasterxml.github.io/jackson-dataformat-yaml/javadoc/2.9/</link>\n+            <link>http://fasterxml.github.io/jackson-datatype-joda/javadoc/2.9/</link>\n+            <link>http://www.javadoc.io/doc/org.apache.camel/camel-core/2.20.1/</link>\n+            <link>http://www.javadoc.io/doc/org.apache.camel/camel-spring/2.20.1/</link>\n+            <link>https://ci.apache.org/projects/wicket/apidocs/8.x/</link>\n             <link>https://commons.apache.org/proper/commons-lang/javadocs/api-release/</link>\n-            <link>https://commons.apache.org/proper/commons-io/javadocs/api-2.5/</link>\n+            <link>https://commons.apache.org/proper/commons-io/javadocs/api-2.6/</link>\n             <link>https://commons.apache.org/proper/commons-jexl/apidocs/</link>\n-            <link>http://docs.spring.io/spring/docs/4.3.x/javadoc-api/</link>\n+            <link>http://docs.spring.io/spring/docs/5.0.x/javadoc-api/</link>\n             <link>http://docs.spring.io/spring-security/site/docs/4.2.x/apidocs/</link>\n             <link>http://www.flowable.org/docs/javadocs/</link>\n             <link>https://build.shibboleth.net/nexus/service/local/repositories/releases/archive/org/opensaml/opensaml-saml-api/3.3.0/opensaml-saml-api-3.3.0-javadoc.jar/!/index.html</link>\n             <link>https://build.shibboleth.net/nexus/service/local/repositories/releases/archive/org/opensaml/opensaml-core/3.3.0/opensaml-core-3.3.0-javadoc.jar/!/index.html</link>\n-            <link>https://www.javadoc.io/doc/org.elasticsearch/elasticsearch/5.6.2</link>\n+            <link>https://www.javadoc.io/doc/org.elasticsearch/elasticsearch/6.0.0</link>\n           </links>\n         </configuration>\n         <reportSets>"}]}