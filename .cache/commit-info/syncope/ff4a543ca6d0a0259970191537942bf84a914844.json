{"sha":"ff4a543ca6d0a0259970191537942bf84a914844","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZmNGE1NDNjYTZkMGEwMjU5OTcwMTkxNTM3OTQyYmY4NGE5MTQ4NDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-08T08:05:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-08T08:05:44Z"},"message":"Making report testing more reliable\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1443864 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"459f432f0455c22240c3efcb95d6663ca85298b7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/459f432f0455c22240c3efcb95d6663ca85298b7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ff4a543ca6d0a0259970191537942bf84a914844","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff4a543ca6d0a0259970191537942bf84a914844","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ff4a543ca6d0a0259970191537942bf84a914844","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff4a543ca6d0a0259970191537942bf84a914844/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cfc82fcb81afea03c249cf5e489f301ae0470da4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cfc82fcb81afea03c249cf5e489f301ae0470da4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cfc82fcb81afea03c249cf5e489f301ae0470da4"}],"stats":{"total":30,"additions":19,"deletions":11},"files":[{"sha":"a87d06f1e4ed16d67d8afb545b24cc27830be30c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ReportExec.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportExec.java?ref=ff4a543ca6d0a0259970191537942bf84a914844","patch":"@@ -24,7 +24,6 @@\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n-\n import org.apache.commons.lang.ArrayUtils;\n import org.apache.syncope.common.types.ReportExecStatus;\n "},{"sha":"0856cd0e7a0a82f73b8043013b4971ebd9194de0","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ReportController.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=ff4a543ca6d0a0259970191537942bf84a914844","patch":"@@ -39,6 +39,7 @@\n import org.apache.cocoon.sax.component.XMLGenerator;\n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.apache.cocoon.sax.component.XSLTTransformer;\n+import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.report.ReportletConf;\n import org.apache.syncope.common.to.ReportExecTO;\n@@ -348,12 +349,8 @@ public void exportExecutionResultInternal(final OutputStream os, final ReportExe\n         } catch (Exception e) {\n             LOG.error(\"While exporting content\", e);\n         } finally {\n-            try {\n-                zis.close();\n-                bais.close();\n-            } catch (IOException e) {\n-                LOG.error(\"While closing stream for execution result\", e);\n-            }\n+            IOUtils.closeQuietly(zis);\n+            IOUtils.closeQuietly(bais);\n         }\n \n         auditManager.audit(Category.report, ReportSubCategory.exportExecutionResult, Result.success,"},{"sha":"19d8691fe2ad9df87f5856058d0d51190b57ca7b","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff4a543ca6d0a0259970191537942bf84a914844/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=ff4a543ca6d0a0259970191537942bf84a914844","patch":"@@ -175,10 +175,15 @@ public void executeAndExport() throws IOException {\n         reportTO = createReport(reportTO);\n         assertNotNull(reportTO);\n \n+        int preExecs = reportTO.getExecutions().size();\n+\n         ReportExecTO execution = reportService.execute(reportTO.getId());\n         assertNotNull(execution);\n \n+        int i = 0;\n         int maxit = 50;\n+\n+        // wait for report execution completion (executions incremented)\n         do {\n             try {\n                 Thread.sleep(1000);\n@@ -187,11 +192,18 @@ public void executeAndExport() throws IOException {\n \n             reportTO = reportService.read(reportTO.getId());\n \n-            maxit--;\n-        } while (reportTO.getExecutions().isEmpty() && maxit > 0);\n-        assertEquals(1, reportTO.getExecutions().size());\n+            assertNotNull(reportTO);\n+            assertNotNull(reportTO.getExecutions());\n+\n+            i++;\n+        } while (preExecs == reportTO.getExecutions().size() && i < maxit);\n+        if (i == maxit) {\n+            throw new RuntimeException(\"Timeout when executing report \" + reportTO.getId());\n+        }\n+\n+        assertEquals(preExecs + 1, reportTO.getExecutions().size());\n \n-        long execId = reportTO.getExecutions().iterator().next().getId();\n+        long execId = reportTO.getExecutions().get(preExecs).getId();\n \n         checkExport(execId, ReportExecExportFormat.XML);\n         checkExport(execId, ReportExecExportFormat.HTML);"}]}