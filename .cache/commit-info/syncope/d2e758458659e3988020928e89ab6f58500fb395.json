{"sha":"d2e758458659e3988020928e89ab6f58500fb395","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQyZTc1ODQ1ODY1OWUzOTg4MDIwOTI4ZTg5YWI2ZjU4NTAwZmIzOTU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-13T17:30:59Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-13T17:30:59Z"},"message":"Bug-fix multi value selector\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247252 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"87fb956b6b5dae81adff12721f0c58d0a290963a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/87fb956b6b5dae81adff12721f0c58d0a290963a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d2e758458659e3988020928e89ab6f58500fb395","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2e758458659e3988020928e89ab6f58500fb395","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d2e758458659e3988020928e89ab6f58500fb395","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2e758458659e3988020928e89ab6f58500fb395/comments","author":null,"committer":null,"parents":[{"sha":"a3962b7c38456bdb7e91e57b78aa37272785fb19","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3962b7c38456bdb7e91e57b78aa37272785fb19","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a3962b7c38456bdb7e91e57b78aa37272785fb19"}],"stats":{"total":177,"additions":123,"deletions":54},"files":[{"sha":"531610bea3dc72922c7a6db1a6766f1f662a0568","filename":"client/src/main/java/org/syncope/client/util/AttributableOperations.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -63,7 +63,6 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n                     originalAttrs.get(entry.getKey()).getValues())\n                     : Collections.EMPTY_SET;\n \n-            updatedValues.removeAll(originalValues);\n             // avoid unwanted inputs\n             updatedValues.remove(\"\");\n             if (!entry.getValue().isReadonly()) {\n@@ -74,7 +73,6 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n                 }\n             }\n \n-            originalValues.removeAll(entry.getValue().getValues());\n             attrMod.setValuesToBeRemoved(new ArrayList<String>(originalValues));\n \n             if (!attrMod.isEmpty()) {"},{"sha":"8103e0426e61ac89195717996a61ee9f8508cc6e","filename":"client/src/main/java/org/syncope/types/ConnConfProperty.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -44,7 +44,7 @@ public List getValues() {\n         return values;\n     }\n \n-    public void setValues(List values) {\n+    public void setValues(final List values) {\n         this.values = values;\n     }\n "},{"sha":"f4b09db77adf0f538bcc8ebcac74657c2759359f","filename":"console/src/main/java/org/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -151,6 +151,7 @@ public Serializable getObject() {\n                                         label.getDefaultModelObjectAsString(),\n                                         new Model(\n                                         Long.valueOf(prop.getValue())),\n+                                        Long.class,\n                                         true);\n                                 break;\n "},{"sha":"aaa2ca8dc8139f15cfee0c28ae564abd27998a43","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":76,"deletions":30,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -45,12 +45,14 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.util.ClassUtils;\n import org.syncope.client.to.ConnBundleTO;\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.rest.ConnectorRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n@@ -66,12 +68,24 @@ public class ConnectorModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n \n+    // GuardedString is not in classpath\n     private static final String GUARDED_STRING =\n             \"org.identityconnectors.common.security.GuardedString\";\n \n-    private static final String STRING_ARRAY = \"[Ljava.lang.String;\";\n-\n-    private static final String BOOLEAN = \"java.lang.Boolean\";\n+    // GuardedByteArray is not in classpath\n+    private static final String GUARDED_BYTE_ARRAY =\n+            \"org.identityconnectors.common.security.GuardedByteArray\";\n+\n+    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n+                Integer.class,\n+                Double.class,\n+                Long.class,\n+                Float.class,\n+                Number.class,\n+                Integer.TYPE,\n+                Long.TYPE,\n+                Double.TYPE,\n+                Float.TYPE});\n \n     @SpringBean\n     private ConnectorRestClient restClient;\n@@ -84,7 +98,8 @@ public class ConnectorModalPage extends BaseModalPage {\n \n     private List<ConnectorCapability> selectedCapabilities;\n \n-    public ConnectorModalPage(final PageReference callerPageRef,\n+    public ConnectorModalPage(\n+            final PageReference callerPageRef,\n             final ModalWindow window,\n             final ConnInstanceTO connectorTO,\n             final boolean createFlag) {\n@@ -277,7 +292,11 @@ protected void populateItem(\n \n                 boolean required = false;\n \n+                boolean isArray = false;\n+\n                 if (GUARDED_STRING.equalsIgnoreCase(\n+                        property.getSchema().getType())\n+                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n                         property.getSchema().getType())) {\n \n                     field = new AjaxPasswordFieldPanel(\n@@ -286,48 +305,76 @@ protected void populateItem(\n                             new Model(),\n                             true);\n \n-                    ((PasswordTextField) field.getField()).\n-                                    setResetPassword(\n-                                    false);\n-                    \n-                    required = property.getSchema().isRequired();\n+                    ((PasswordTextField) field.getField()).setResetPassword(\n+                            false);\n \n-                } else if (BOOLEAN.equalsIgnoreCase(\n-                        property.getSchema().getType())) {\n-                    field = new AjaxCheckBoxPanel(\n-                            \"panel\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new Model(),\n-                            true);\n+                    required = property.getSchema().isRequired();\n \n                 } else {\n+                    Class propertySchemaClass;\n+\n+                    try {\n+                        propertySchemaClass = ClassUtils.forName(\n+                                property.getSchema().getType(),\n+                                ClassUtils.getDefaultClassLoader());\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error parsing attribute type\", e);\n+                        propertySchemaClass = String.class;\n+                    }\n \n-                    field = new AjaxTextFieldPanel(\n-                            \"panel\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new Model(),\n-                            true);\n+                    if (NUMBER.contains(propertySchemaClass)) {\n+                        field = new AjaxNumberFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                ClassUtils.resolvePrimitiveIfNecessary(\n+                                propertySchemaClass),\n+                                true);\n+\n+                        required = property.getSchema().isRequired();\n+                    } else if (Boolean.class.equals(propertySchemaClass)\n+                            || boolean.class.equals(propertySchemaClass)) {\n+                        field = new AjaxCheckBoxPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n \n-                    required = property.getSchema().isRequired();\n-                }\n+                    } else {\n \n-                field.setTitle(property.getSchema().getHelpMessage());\n+                        field = new AjaxTextFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n \n-                if (required) {\n-                    field.addRequiredLabel();\n+                        required = property.getSchema().isRequired();\n+                    }\n+\n+                    if (String[].class.equals(propertySchemaClass)) {\n+                        isArray = true;\n+                    }\n                 }\n \n-                if (STRING_ARRAY.equalsIgnoreCase(\n-                        property.getSchema().getType())) {\n+                field.setTitle(property.getSchema().getHelpMessage());\n \n+                if (isArray) {\n                     field.removeRequiredLabel();\n \n+                    if (property.getValues().isEmpty()) {\n+                        property.getValues().add(null);\n+                    }\n+\n                     item.add(new MultiValueSelectorPanel<String>(\n                             \"panel\",\n                             new PropertyModel<List<String>>(property, \"values\"),\n                             String.class,\n                             field));\n                 } else {\n+                    if (required) {\n+                        field.addRequiredLabel();\n+                    }\n+\n                     field.setNewModel(property.getValues());\n                     item.add(field);\n                 }\n@@ -383,8 +430,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                         restClient.update(connector);\n                     }\n \n-                    ((Resources) callerPageRef.getPage()).setModalResult(\n-                            true);\n+                    ((Resources) callerPageRef.getPage()).setModalResult(true);\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());"},{"sha":"7a0c7a5da8c6b1831a2e8d8635df058af39523c1","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -196,6 +196,7 @@ protected List<ConnConfProperty> load() {\n                 new AjaxNumberFieldPanel(\n                 \"propagationPriority\", getString(\"propagationPriority\"),\n                 new PropertyModel<Number>(resourceTO, \"propagationPriority\"),\n+                Integer.class,\n                 false);\n         form.add(propagationPriority);\n \n@@ -231,7 +232,7 @@ protected List<ConnConfProperty> load() {\n                 new PropertyModel(resourceTO, \"deleteTraceLevel\"),\n                 false);\n         deleteTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        form.add(deleteTraceLevel);        \n+        form.add(deleteTraceLevel);\n \n         final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel =\n                 new AjaxDropDownChoicePanel<TraceLevel>(\"syncTraceLevel\",\n@@ -257,7 +258,7 @@ protected void onUpdate(final AjaxRequestTarget art) {\n                     }\n                 });\n         form.add(resetToken);\n-        \n+\n         mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n         mappingContainer.setOutputMarkupId(true);\n         form.add(mappingContainer);"},{"sha":"10fa77b7b3048ca48e2540c40e437994e642de0c","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -55,7 +55,6 @@ public enum Mode {\n         ADMIN,\n         SELF,\n         TEMPLATE;\n-\n     }\n \n     private static final long serialVersionUID = 5002005009737457667L;"},{"sha":"bbce85b9976e1773bf20b78d9525d23ca904f382","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -125,7 +125,8 @@ protected void populateItem(final ListItem item) {\n                     item.add(new MultiValueSelectorPanel<String>(\n                             \"panel\",\n                             new PropertyModel(attributeTO, \"values\"),\n-                            String.class, panel));\n+                            String.class,\n+                            panel));\n                 }\n             }\n         };"},{"sha":"a55f9531429033720902ed11acfedf92848a0661","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -183,6 +183,7 @@ public void onComponentTag(\n                 \"failedLogins\",\n                 \"failedLogins\",\n                 new Model<Number>(userTO.getFailedLogins()),\n+                Integer.class,\n                 false);\n \n         failedLogins.setReadOnly(true);"},{"sha":"9e1985465f9d30ece11bd5d4e0c425f84618e91b","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -14,9 +14,11 @@\n  */\n package org.syncope.console.rest;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Set;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ConnBundleTO;\n import org.syncope.client.to.ConnInstanceTO;\n@@ -46,6 +48,7 @@ public List<ConnInstanceTO> getAllConnectors() {\n      * @param schemaTO\n      */\n     public void create(ConnInstanceTO connectorTO) {\n+        filterProperties(connectorTO.getConfiguration());\n         restTemplate.postForObject(baseURL\n                 + \"connector/create.json\", connectorTO, ConnInstanceTO.class);\n     }\n@@ -70,6 +73,7 @@ public ConnInstanceTO read(final Long connectorInstanceId) {\n     }\n \n     public void update(ConnInstanceTO connectorTO) {\n+        filterProperties(connectorTO.getConfiguration());\n         restTemplate.postForObject(baseURL + \"connector/update.json\",\n                 connectorTO, ConnInstanceTO.class);\n     }\n@@ -129,4 +133,19 @@ public List<ConnConfProperty> getConnectorProperties(\n \n         return properties;\n     }\n+\n+    private void filterProperties(final Set<ConnConfProperty> properties) {\n+\n+        for (ConnConfProperty property : properties) {\n+            final List parsed = new ArrayList();\n+\n+            for (Object obj : property.getValues()) {\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    parsed.add(obj);\n+                }\n+            }\n+\n+            property.setValues(parsed);\n+        }\n+    }\n }"},{"sha":"05bcfd18b5b106ca1c25b4c9d9ab208a95dbf038","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxNumberFieldPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -14,8 +14,6 @@\n  */\n package org.syncope.console.wicket.markup.html.form;\n \n-import java.util.Collections;\n-import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -26,17 +24,16 @@ public class AjaxNumberFieldPanel extends FieldPanel<Number> {\n \n     private static final long serialVersionUID = 238940918106696068L;\n \n-    private List<String> choices = Collections.EMPTY_LIST;\n-\n     public AjaxNumberFieldPanel(\n             final String id,\n             final String name,\n             final IModel<Number> model,\n+            final Class reference,\n             final boolean active) {\n \n         super(id, name, model, active);\n \n-        field = new TextField<Number>(\"numberField\", model);\n+        field = new TextField<Number>(\"numberField\", model, reference);\n \n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n "},{"sha":"ba1b8b1227c20e062b3d3d3c7c75b0c06e3b0285","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -34,6 +34,8 @@ public AjaxPasswordFieldPanel(\n \n         field = new PasswordTextField(\"passwordField\", model);\n \n+        field.setRequired(false);\n+\n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n         if (active) {"},{"sha":"e83ee732e1ce10eb2bd72d8d0e5b3e2f1f34ecf7","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -133,7 +133,9 @@ public Serializable getObject() {\n \n             @Override\n             public void setObject(final Serializable object) {\n-                item.setModelObject((T) object);\n+                if (object != null && !object.toString().isEmpty()) {\n+                    item.setModelObject((T) object);\n+                }\n             }\n         });\n         return this;"},{"sha":"ef99b160efdf86d39d31917daad2a1f25d44dce7","filename":"console/src/main/resources/org/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2e758458659e3988020928e89ab6f58500fb395/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=d2e758458659e3988020928e89ab6f58500fb395","patch":"@@ -73,6 +73,12 @@\n                         </div>\n                     </div>\n                 </div>\n+                <!-- inside the container in order to re-process javascript -->\n+                <script type=\"text/javascript\">\n+                    $(function() {\n+                        $('#tabs-1 #formtable div.tablerow:even').addClass(\"alt\");\n+                    });\n+                </script>\n             </div>\n             <div id=\"tabs-2\">\n                 <div id=\"formtable\">\n@@ -94,6 +100,13 @@\n                                 <span wicket:id=\"panel\">[panel]</span>\n                             </div>\n                         </div>\n+\n+                        <!-- inside the container in order to re-process javascript -->\n+                        <script type=\"text/javascript\">\n+                            $(function() {\n+                                $('#tabs-2 #formtable div.tablerow:even').addClass(\"alt\");\n+                            });\n+                        </script>\n                     </span>\n                 </div>\n             </div>\n@@ -102,17 +115,6 @@\n             </div>\n         </div>\n \n-        <!-- inside the container in order to re-process javascript -->\n-        <script type=\"text/javascript\">\n-            $(function() {\n-                $('#tabs-1 #formtable div.tablerow:even').addClass(\"alt\");\n-            });\n-            \n-            $(function() {\n-                $('#tabs-2 #formtable div.tablerow:even').addClass(\"alt\");\n-            });\n-        </script>\n-\n         <div style=\"margin: 20px 10px 0\">\n             <input type=\"submit\"\n                    class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\""}]}