{"sha":"03bf9c83817656d953a7fc7308ae1bfb1d125708","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzYmY5YzgzODE3NjU2ZDk1M2E3ZmM3MzA4YWUxYmZiMWQxMjU3MDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-10T14:17:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-10T14:17:20Z"},"message":"Unneeded constants","tree":{"sha":"b51335181320d6253980f9fcbec198964af7546f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b51335181320d6253980f9fcbec198964af7546f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03bf9c83817656d953a7fc7308ae1bfb1d125708","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03bf9c83817656d953a7fc7308ae1bfb1d125708","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03bf9c83817656d953a7fc7308ae1bfb1d125708","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03bf9c83817656d953a7fc7308ae1bfb1d125708/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"aa8e9f1e6e3797d40665855ee7cf13ab64c11e2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa8e9f1e6e3797d40665855ee7cf13ab64c11e2c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa8e9f1e6e3797d40665855ee7cf13ab64c11e2c"}],"stats":{"total":231,"additions":111,"deletions":120},"files":[{"sha":"a05a5b5ea2b6cc5c5a9d36956c6ce43944e9972b","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/FilesystemResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FFilesystemResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -21,7 +21,7 @@\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n+import java.nio.charset.StandardCharsets;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.util.io.IOUtils;\n import org.slf4j.Logger;\n@@ -56,7 +56,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n                     replace('/', File.separatorChar);\n             LOG.debug(\"Request for {}\", subPath);\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override"},{"sha":"8735f4a6442d295458c7f3c8689c11738f40f608","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefGETResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,9 +19,9 @@\n package org.apache.syncope.client.console.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.util.io.IOUtils;\n \n@@ -39,7 +39,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n         ResourceResponse response = new ResourceResponse();\n         response.disableCaching();\n         response.setContentType(MediaType.APPLICATION_JSON);\n-        response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+        response.setTextEncoding(StandardCharsets.UTF_8.name());\n         response.setWriteCallback(new WriteCallback() {\n \n             @Override"},{"sha":"342254582ee276b57597694ab9421baaa389c4c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.to.NotificationTO;\n@@ -88,8 +88,7 @@ public MailTemplateTO readTemplate(final String key) {\n     public String readTemplateFormat(final String key, final MailTemplateFormat format) {\n         try {\n             return IOUtils.toString(InputStream.class.cast(\n-                    getService(MailTemplateService.class).getFormat(key, format).getEntity()),\n-                    SyncopeConstants.DEFAULT_CHARSET);\n+                    getService(MailTemplateService.class).getFormat(key, format).getEntity()), StandardCharsets.UTF_8);\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving mail template {} as {}\", key, format, e);\n             return StringUtils.EMPTY;\n@@ -99,6 +98,6 @@ public String readTemplateFormat(final String key, final MailTemplateFormat form\n     @Override\n     public void updateTemplateFormat(final String key, final String content, final MailTemplateFormat format) {\n         getService(MailTemplateService.class).setFormat(\n-                key, format, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n+                key, format, IOUtils.toInputStream(content, StandardCharsets.UTF_8));\n     }\n }"},{"sha":"2eb3b00dc187439de642f49095b6df8e6d11e63e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.Date;\n import java.util.List;\n import javax.ws.rs.NotSupportedException;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n@@ -134,7 +134,7 @@ public String readTemplateFormat(final String key, final ReportTemplateFormat fo\n         try {\n             return IOUtils.toString(InputStream.class.cast(\n                     getService(ReportTemplateService.class).getFormat(key, format).getEntity()),\n-                    SyncopeConstants.DEFAULT_CHARSET);\n+                    StandardCharsets.UTF_8);\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving mail template {} as {}\", key, format, e);\n             return StringUtils.EMPTY;\n@@ -144,7 +144,7 @@ public String readTemplateFormat(final String key, final ReportTemplateFormat fo\n     @Override\n     public void updateTemplateFormat(final String key, final String content, final ReportTemplateFormat format) {\n         getService(ReportTemplateService.class).setFormat(\n-                key, format, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n+                key, format, IOUtils.toInputStream(content, StandardCharsets.UTF_8));\n     }\n \n     public BulkActionResult bulkAction(final BulkAction action) {"},{"sha":"32404e11f43f99e368c9d6101e5c225a31ebecee","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.service.RoleService;\n \n@@ -63,7 +63,7 @@ public String readConsoleLayoutInfo(final String roleKey) {\n         try {\n             return IOUtils.toString(InputStream.class.cast(\n                     getService(RoleService.class).getConsoleLayoutInfo(roleKey).getEntity()),\n-                    SyncopeConstants.DEFAULT_CHARSET);\n+                    StandardCharsets.UTF_8);\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving console layout info for role {}\", roleKey, e);\n             return StringUtils.EMPTY;\n@@ -72,7 +72,7 @@ public String readConsoleLayoutInfo(final String roleKey) {\n \n     public void setConsoleLayoutInfo(final String roleKey, final String content) {\n         getService(RoleService.class).setConsoleLayoutInfo(\n-                roleKey, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n+                roleKey, IOUtils.toInputStream(content, StandardCharsets.UTF_8));\n     }\n \n     public void removeConsoleLayoutInfo(final String roleKey) {"},{"sha":"cc34be57dd3f0e2450e91d1f881de94119091aaa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,6 +26,7 @@\n import de.agilecoders.wicket.jquery.JQuery;\n import de.agilecoders.wicket.jquery.function.IFunction;\n import java.io.ByteArrayInputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n@@ -35,7 +36,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n@@ -165,9 +165,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 final FileUpload uploadedFile = fileUpload.getFileUpload();\n                 if (uploadedFile != null) {\n                     final byte[] uploadedBytes = uploadedFile.getBytes();\n-                    final String uploaded = new String(\n-                            Base64.encodeBase64(uploadedBytes),\n-                            SyncopeConstants.DEFAULT_CHARSET);\n+                    final String uploaded = new String(Base64.encodeBase64(uploadedBytes), StandardCharsets.UTF_8);\n                     field.setModelObject(uploaded);\n                     target.add(field);\n "},{"sha":"406186ce5bc9c3c30140c635c4043493607ad036","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AnyTypeClassResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -56,7 +56,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             final List<AnyTypeClassTO> anyTypeClassTOs = anyTypeClassService.list();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n \n                 @Override"},{"sha":"6f07e180ab76f9df17a3ce1787805a2e65734173","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AnyTypeResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -39,7 +39,6 @@ public AnyTypeResource() {\n \n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n-\n         LOG.debug(\"Get all available auxiliary classes\");\n \n         ResourceResponse response = new ResourceResponse();\n@@ -56,7 +55,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             String kind = attributes.getParameters().get(0).toString();\n             final AnyTypeTO anyTypeTO = anyTypeService.read(kind);\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"8eb46b842a0325fd409284e3b03255ab52091f21","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/ExternalResourceResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -41,7 +41,6 @@ public ExternalResourceResource() {\n \n     @Override\n     protected AbstractResource.ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         LOG.debug(\"Search all available resources\");\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n@@ -57,7 +56,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n             final List<ResourceTO> resourceTOs = resourceService.list();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n \n                 @Override"},{"sha":"fc9f2802f10bfa90795f91fa2bb15690334d67d2","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n@@ -59,7 +60,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             final List<GroupTO> groupTOs = groupService.search(new AnyQuery.Builder().realm(realm).\n                     fiql(SyncopeClient.getGroupSearchConditionBuilder().isAssignable().query()).\n                     build()).getResult();\n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n \n                 @Override"},{"sha":"9c397d6f6e4b31f2a6bbea9df1e222089f3f7afb","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/InfoResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.PlatformInfoAdapter;\n import org.apache.syncope.client.enduser.util.SaltGenerator;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.cookies.CookieUtils;\n \n@@ -48,7 +48,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 sessionCookieUtils.save(SyncopeEnduserConstants.XSRF_COOKIE, SaltGenerator.generate(\n                         SyncopeEnduserSession.get().getId()));\n             }\n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override"},{"sha":"8f5035167ef87682a44b15ebd8db5cc05d0c0731","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LoginResource.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n import org.apache.syncope.client.enduser.model.Credentials;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.io.IOUtils;\n@@ -61,8 +61,9 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             } else if (!SyncopeEnduserApplication.get().getAdminUser().equalsIgnoreCase(username)\n                     && SyncopeEnduserSession.get().authenticate(username, password)) {\n                 // user has been authenticated successfully\n-                response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+                response.setTextEncoding(StandardCharsets.UTF_8.name());\n                 response.setWriteCallback(new WriteCallback() {\n+\n                     @Override\n                     public void writeData(final Attributes attributes) throws IOException {\n                         attributes.getResponse().write(username);"},{"sha":"421ce4033d890d1001ecd6513e6683071f25c682","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/RealmResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -54,7 +54,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             final List<RealmTO> realmTOs = realmService.list();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"94d7d1f4fe3e4725d5c2f544cccda5005eb7f91f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n@@ -27,7 +28,6 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.model.SchemaResponse;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -60,7 +60,6 @@ public SchemaResource() {\n \n     @Override\n     protected AbstractResource.ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         LOG.debug(\"Search all {} any type kind related schemas\", AnyTypeKind.USER.name());\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n@@ -126,7 +125,7 @@ public boolean evaluate(final GroupTO item) {\n                 }\n             }\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"db26cd3b45065833cfe4ed669ba50093b00a44e3","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SecurityQuestionResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -83,7 +83,7 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n             }\n \n             response.setContentType(MediaType.APPLICATION_JSON);\n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setStatusCode(Response.Status.OK.getStatusCode());\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving security questions\", e);"},{"sha":"e75e36b1d37c164f40fba2e9c6c8e11c82b5edc8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfChangePassword.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -59,7 +59,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n             final String responseMessage = new StringBuilder().append(\"Password changed correctly\").toString();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"0bf3e307d87a6a4657eceba99b2729bd2c540694","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfConfirmPasswordReset.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -65,7 +65,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n             final String responseMessage = new StringBuilder().append(\"Password changed correctly\").toString();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override"},{"sha":"fa9d67226af73a25fa4450e880db5bf94823a9db","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n@@ -32,7 +33,6 @@\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -177,7 +177,7 @@ public boolean evaluate(final MembershipTO item) {\n                 // adapt request and create user\n                 final Response res = userSelfService.create(userTO, true);\n \n-                response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+                response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n                 response.setWriteCallback(new WriteCallback() {\n "},{"sha":"00f935b2aaed00f8176b4f357da26af0da5d48a4","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfPasswordReset.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -78,7 +78,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             final String responseMessage = new StringBuilder().\n                     append(\"Password reset request sent for user \").append(usernameParam[0]).toString();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override"},{"sha":"dac8a3f185f4b12e6b745e76542438a34fb1b190","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n@@ -28,7 +29,6 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -94,7 +94,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n             final String selfTOJson = MAPPER.writeValueAsString(userTO);\n             response.setContentType(MediaType.APPLICATION_JSON);\n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"30a89d0997ebab42596b111b1b8e75faeb8643ed","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n@@ -32,7 +33,6 @@\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -167,12 +167,12 @@ public boolean evaluate(final MembershipTO item) {\n \n             final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n                     ? new StringBuilder().\n-                    append(\"User\").append(userTO.getUsername()).append(\" successfully updated\").toString()\n+                            append(\"User\").append(userTO.getUsername()).append(\" successfully updated\").toString()\n                     : new StringBuilder().\n-                    append(\"ErrorMessage{{ \").append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").\n-                    toString();\n+                            append(\"ErrorMessage{{ \").append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").\n+                            toString();\n \n-            response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override\n@@ -187,10 +187,10 @@ public void writeData(final Attributes attributes) throws IOException {\n             LOG.error(\"Error while updating user\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                     new StringBuilder().\n-                    append(\"ErrorMessage{{ \").\n-                    append(e.getMessage()).\n-                    append(\" }}\").\n-                    toString());\n+                            append(\"ErrorMessage{{ \").\n+                            append(e.getMessage()).\n+                            append(\" }}\").\n+                            toString());\n         }\n         return response;\n     }"},{"sha":"3c4e39bc4f84fc1424a3ab2a9a6ead38541826f2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.common.lib;\n \n-import java.nio.charset.Charset;\n import java.util.Collections;\n import java.util.Set;\n import java.util.regex.Pattern;\n@@ -53,10 +52,6 @@ public final class SyncopeConstants {\n \n     public static final String DEFAULT_DATE_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n \n-    public static final String DEFAULT_ENCODING = \"UTF-8\";\n-\n-    public static final Charset DEFAULT_CHARSET = Charset.forName(DEFAULT_ENCODING);\n-\n     public static final String ROOT_LOGGER = \"ROOT\";\n \n     public static final Pattern EMAIL_PATTERN = Pattern.compile("},{"sha":"5a273438f18e2a67184b311859afbffa90c93956","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -21,6 +21,7 @@\n import java.io.ByteArrayInputStream;\n import java.io.OutputStream;\n import java.lang.reflect.Method;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashMap;\n@@ -39,7 +40,6 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -235,7 +235,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n                 case HTML:\n                     XSLTTransformer xsl2html = new XSLTTransformer(new StreamSource(\n                             IOUtils.toInputStream(reportExec.getReport().getTemplate().getHTMLTemplate(),\n-                                    SyncopeConstants.DEFAULT_CHARSET)));\n+                                    StandardCharsets.UTF_8)));\n                     xsl2html.setParameters(parameters);\n                     pipeline.addComponent(xsl2html);\n                     pipeline.addComponent(XMLSerializer.createXHTMLSerializer());\n@@ -244,7 +244,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n                 case PDF:\n                     XSLTTransformer xsl2pdf = new XSLTTransformer(new StreamSource(\n                             IOUtils.toInputStream(reportExec.getReport().getTemplate().getFOTemplate(),\n-                                    SyncopeConstants.DEFAULT_CHARSET)));\n+                                    StandardCharsets.UTF_8)));\n                     xsl2pdf.setParameters(parameters);\n                     pipeline.addComponent(xsl2pdf);\n                     pipeline.addComponent(new FopSerializer(MimeConstants.MIME_PDF));\n@@ -253,7 +253,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n                 case RTF:\n                     XSLTTransformer xsl2rtf = new XSLTTransformer(new StreamSource(\n                             IOUtils.toInputStream(reportExec.getReport().getTemplate().getFOTemplate(),\n-                                    SyncopeConstants.DEFAULT_CHARSET)));\n+                                    StandardCharsets.UTF_8)));\n                     xsl2rtf.setParameters(parameters);\n                     pipeline.addComponent(xsl2rtf);\n                     pipeline.addComponent(new FopSerializer(MimeConstants.MIME_RTF));\n@@ -262,7 +262,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n                 case CSV:\n                     XSLTTransformer xsl2csv = new XSLTTransformer(new StreamSource(\n                             IOUtils.toInputStream(reportExec.getReport().getTemplate().getCSVTemplate(),\n-                                    SyncopeConstants.DEFAULT_CHARSET)));\n+                                    StandardCharsets.UTF_8)));\n                     xsl2csv.setParameters(parameters);\n                     pipeline.addComponent(xsl2csv);\n                     pipeline.addComponent(new TextSerializer());"},{"sha":"6d416865bb9999f0a915669cf7adc11e4b8ae45b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportJobDelegate.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -20,6 +20,7 @@\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Date;\n import java.util.zip.Deflater;\n import java.util.zip.ZipEntry;\n@@ -30,7 +31,6 @@\n import javax.xml.transform.sax.TransformerHandler;\n import javax.xml.transform.stream.StreamResult;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ReportExecStatus;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n@@ -107,7 +107,7 @@ public void execute(final String reportKey) throws JobExecutionException {\n             tFactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);\n             handler = tFactory.newTransformerHandler();\n             Transformer serializer = handler.getTransformer();\n-            serializer.setOutputProperty(OutputKeys.ENCODING, SyncopeConstants.DEFAULT_ENCODING);\n+            serializer.setOutputProperty(OutputKeys.ENCODING, StandardCharsets.UTF_8.name());\n             serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n \n             // a single ZipEntry in the ZipOutputStream"},{"sha":"6c7ce53fceb848ed4758ca484984de9fa50df6d9","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.charset.StandardCharsets;\n import java.sql.Blob;\n import java.sql.Connection;\n import java.sql.DatabaseMetaData;\n@@ -51,7 +52,6 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.provisioning.api.utils.FormatUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.content.ContentExporter;\n@@ -340,7 +340,7 @@ public void export(\n \n         TransformerHandler handler = transformerFactory.newTransformerHandler();\n         Transformer serializer = handler.getTransformer();\n-        serializer.setOutputProperty(OutputKeys.ENCODING, SyncopeConstants.DEFAULT_ENCODING);\n+        serializer.setOutputProperty(OutputKeys.ENCODING, StandardCharsets.UTF_8.name());\n         serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n         handler.setResult(streamResult);\n         handler.startDocument();"},{"sha":"3eda5edd6e61c4bd1f0ceab10d154f9f932497d1","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainAttrTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -25,10 +25,10 @@\n import static org.junit.Assert.fail;\n \n import java.io.UnsupportedEncodingException;\n+import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Random;\n import javax.validation.ValidationException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n@@ -207,7 +207,7 @@ public void saveWithBinary() throws UnsupportedEncodingException {\n \n         byte[] bytes = new byte[20];\n         new Random().nextBytes(bytes);\n-        String photoB64Value = new String(Base64.encode(bytes), SyncopeConstants.DEFAULT_CHARSET);\n+        String photoB64Value = new String(Base64.encode(bytes), StandardCharsets.UTF_8);\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n         attr.setOwner(user);"},{"sha":"6ea590a6d51690451c74aa244ac2e74a4927e6c2","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/MailTemplateServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -22,12 +22,12 @@\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.URI;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -84,7 +84,7 @@ public void write(final OutputStream os) throws IOException {\n     @Override\n     public void setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n         try {\n-            logic.setFormat(key, format, IOUtils.toString(templateIn, SyncopeConstants.DEFAULT_CHARSET));\n+            logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8));\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for mail template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);"},{"sha":"d63f5f6c67d6a5d354fee730a7545e1e74f51b81","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportTemplateServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -22,13 +22,13 @@\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.URI;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ReportTemplateTO;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -85,7 +85,7 @@ public void write(final OutputStream os) throws IOException {\n     @Override\n     public void setFormat(final String key, final ReportTemplateFormat format, final InputStream templateIn) {\n         try {\n-            logic.setFormat(key, format, IOUtils.toString(templateIn, SyncopeConstants.DEFAULT_CHARSET));\n+            logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8.name()));\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for report template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);"},{"sha":"a6a3f2e8324c1e3ad5ccb1248cc901623d982009","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -22,13 +22,13 @@\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.URI;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.RoleService;\n@@ -89,7 +89,7 @@ public void write(final OutputStream os) throws IOException {\n     @Override\n     public void setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n         try {\n-            logic.setConsoleLayoutInfo(key, IOUtils.toString(consoleLayoutIn, SyncopeConstants.DEFAULT_CHARSET));\n+            logic.setConsoleLayoutInfo(key, IOUtils.toString(consoleLayoutIn, StandardCharsets.UTF_8.name()));\n         } catch (final IOException e) {\n             LOG.error(\"While setting console layout info for role {}\", key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);"},{"sha":"af64177e670dc2e542b360eebeb7991f3309cf02","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -20,6 +20,7 @@\n \n import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n+import java.nio.charset.StandardCharsets;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n import java.util.Map;\n@@ -33,7 +34,6 @@\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.jasypt.commons.CommonUtils;\n import org.jasypt.digest.StandardStringDigester;\n@@ -163,7 +163,7 @@ private Encryptor(final String secretKey) {\n \n         try {\n             keySpec = new SecretKeySpec(ArrayUtils.subarray(\n-                    actualKey.getBytes(SyncopeConstants.DEFAULT_CHARSET), 0, 16),\n+                    actualKey.getBytes(StandardCharsets.UTF_8), 0, 16),\n                     CipherAlgorithm.AES.getAlgorithm());\n         } catch (Exception e) {\n             LOG.error(\"Error during key specification\", e);\n@@ -178,7 +178,7 @@ public String encode(final String value, final CipherAlgorithm cipherAlgorithm)\n \n         if (value != null) {\n             if (cipherAlgorithm == null || cipherAlgorithm == CipherAlgorithm.AES) {\n-                final byte[] cleartext = value.getBytes(SyncopeConstants.DEFAULT_CHARSET);\n+                final byte[] cleartext = value.getBytes(StandardCharsets.UTF_8);\n \n                 final Cipher cipher = Cipher.getInstance(CipherAlgorithm.AES.getAlgorithm());\n                 cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n@@ -221,12 +221,12 @@ public String decode(final String encodedValue, final CipherAlgorithm cipherAlgo\n         String value = null;\n \n         if (encodedValue != null && cipherAlgorithm == CipherAlgorithm.AES) {\n-            final byte[] encoded = encodedValue.getBytes(SyncopeConstants.DEFAULT_CHARSET);\n+            final byte[] encoded = encodedValue.getBytes(StandardCharsets.UTF_8);\n \n             final Cipher cipher = Cipher.getInstance(CipherAlgorithm.AES.getAlgorithm());\n             cipher.init(Cipher.DECRYPT_MODE, keySpec);\n \n-            value = new String(cipher.doFinal(Base64.decode(encoded)), SyncopeConstants.DEFAULT_CHARSET);\n+            value = new String(cipher.doFinal(Base64.decode(encoded)), StandardCharsets.UTF_8);\n         }\n \n         return value;"},{"sha":"ca0971866d90ea82dba770bef0695998bda58b3a","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.camel;\n \n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -32,7 +33,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.CamelRouteDAO;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n@@ -101,7 +101,7 @@ private void loadContext(final Collection<String> routes) {\n             for (String route : routes) {\n                 InputStream input = null;\n                 try {\n-                    input = IOUtils.toInputStream(route, SyncopeConstants.DEFAULT_CHARSET);\n+                    input = IOUtils.toInputStream(route, StandardCharsets.UTF_8);\n                     LSInput lsinput = domImpl.createLSInput();\n                     lsinput.setByteStream(input);\n "},{"sha":"4f19f5aed468ee8a35dcec2d8d0c5357d716a7bf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -25,6 +25,7 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Properties;\n@@ -43,7 +44,6 @@\n import org.apache.syncope.client.cli.commands.report.ReportCommand;\n import org.apache.syncope.client.cli.commands.role.RoleCommand;\n import org.apache.syncope.client.cli.commands.user.UserCommand;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.BeforeClass;\n import org.junit.Test;\n@@ -108,7 +108,7 @@ public void runScriptWithoutOptions() {\n             PROCESS_BUILDER.command(getCommand());\n             process = PROCESS_BUILDER.start();\n \n-            String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET).\n+            String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8).\n                     replaceAll(\"(?m)^\\\\s*$[\\n\\r]{1,}\", \"\");\n             assertTrue(result.startsWith(\"Usage: Main [options]\"));\n             assertTrue(result.contains(\n@@ -138,7 +138,7 @@ public void entitlementCount() {\n             process = PROCESS_BUILDER.start();\n \n             long entitlements = IterableUtils.countMatches(\n-                    IOUtils.readLines(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET),\n+                    IOUtils.readLines(process.getInputStream(), StandardCharsets.UTF_8),\n                     new Predicate<String>() {\n \n                 @Override\n@@ -166,7 +166,7 @@ public void connectorCount() {\n             process = PROCESS_BUILDER.start();\n \n             long bundles = IterableUtils.countMatches(\n-                    IOUtils.readLines(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET),\n+                    IOUtils.readLines(process.getInputStream(), StandardCharsets.UTF_8),\n                     new Predicate<String>() {\n \n                 @Override\n@@ -200,7 +200,7 @@ public void userRead() {\n                     UserCommand.UserOptions.READ_BY_KEY.getOptionName(),\n                     String.valueOf(userKey1)));\n             process1 = PROCESS_BUILDER.start();\n-            String result = IOUtils.toString(process1.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            String result = IOUtils.toString(process1.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(result.contains(\"username: \" + userService.read(userKey1).getUsername()));\n \n             PROCESS_BUILDER.command(getCommand(\n@@ -210,7 +210,7 @@ public void userRead() {\n                     String.valueOf(userKey3), String.valueOf(userKey4), String.valueOf(userKey5)));\n             process2 = PROCESS_BUILDER.start();\n             long users = IterableUtils.countMatches(\n-                    IOUtils.readLines(process2.getInputStream(), SyncopeConstants.DEFAULT_CHARSET),\n+                    IOUtils.readLines(process2.getInputStream(), StandardCharsets.UTF_8),\n                     new Predicate<String>() {\n \n                 @Override\n@@ -226,7 +226,7 @@ public boolean evaluate(final String line) {\n                     String.valueOf(userKey1), String.valueOf(userKey2),\n                     String.valueOf(userKey3), String.valueOf(userKey4), String.valueOf(userKey5)));\n             process3 = PROCESS_BUILDER.start();\n-            String result3 = IOUtils.toString(process3.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            String result3 = IOUtils.toString(process3.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(\n                     result3.contains(\"username: \" + userService.read(userKey1).getUsername())\n                     && result3.contains(\"username: \" + userService.read(userKey2).getUsername())\n@@ -258,7 +258,7 @@ public void roleRead() {\n                     RoleCommand.RoleOptions.READ.getOptionName(),\n                     roleId));\n             process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(result.contains(roleService.read(roleId).getEntitlements().iterator().next()));\n         } catch (IOException e) {\n             fail(e.getMessage());\n@@ -278,7 +278,7 @@ public void reportNotExists() {\n                     ReportCommand.ReportOptions.READ.getOptionName(),\n                     \"72\"));\n             process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(result.contains(\"- Report 72 doesn't exist\"));\n         } catch (IOException e) {\n             fail(e.getMessage());\n@@ -298,7 +298,7 @@ public void policyError() {\n                     PolicyCommand.PolicyOptions.READ.getOptionName(),\n                     \"wrong\"));\n             process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(result.contains(\"- Policy wrong doesn't exist\"));\n         } catch (IOException e) {\n             fail(e.getMessage());\n@@ -318,7 +318,7 @@ public void lastStatements() {\n                     LoggerCommand.LoggerOptions.LAST_STATEMENTS.getOptionName(),\n                     \"connid\"));\n             process = PROCESS_BUILDER.start();\n-            final String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n+            final String result = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);\n             assertTrue(result.contains(\"\\\"level\\\" : \\\"DEBUG\\\",\"));\n         } catch (IOException e) {\n             fail(e.getMessage());"},{"sha":"dabbc4ce448573aa93154e6f1c58407249675659","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConfigurationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -28,13 +28,13 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n@@ -147,7 +147,7 @@ public void dbExport() throws IOException {\n \n         Object entity = response.getEntity();\n         assertTrue(entity instanceof InputStream);\n-        String configExport = IOUtils.toString((InputStream) entity, SyncopeConstants.DEFAULT_ENCODING);\n+        String configExport = IOUtils.toString((InputStream) entity, StandardCharsets.UTF_8.name());\n         assertFalse(configExport.isEmpty());\n         assertTrue(configExport.length() > 1000);\n     }"},{"sha":"b7c79a0ab64c5b769e68a2ac1f8987ef56348798","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MailTemplateITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,12 +26,12 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n@@ -84,28 +84,28 @@ public void crud() throws IOException {\n         // 3. set TEXT\n         String textTemplate = \"Hi there, I am ${username}.\";\n         mailTemplateService.setFormat(\n-                key, MailTemplateFormat.TEXT, IOUtils.toInputStream(textTemplate, SyncopeConstants.DEFAULT_CHARSET));\n+                key, MailTemplateFormat.TEXT, IOUtils.toInputStream(textTemplate, StandardCharsets.UTF_8));\n \n         response = mailTemplateService.getFormat(key, MailTemplateFormat.TEXT);\n         assertEquals(200, response.getStatus());\n         assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_PLAIN));\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 textTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 3. set HTML\n         String htmlTemplate = \"<html><body>Hi there, I am ${username}.</body></html>\";\n         mailTemplateService.setFormat(\n-                key, MailTemplateFormat.HTML, IOUtils.toInputStream(htmlTemplate, SyncopeConstants.DEFAULT_CHARSET));\n+                key, MailTemplateFormat.HTML, IOUtils.toInputStream(htmlTemplate, StandardCharsets.UTF_8));\n \n         response = mailTemplateService.getFormat(key, MailTemplateFormat.HTML);\n         assertEquals(200, response.getStatus());\n         assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_HTML));\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 htmlTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 4. remove HTML\n         mailTemplateService.removeFormat(key, MailTemplateFormat.HTML);\n@@ -123,7 +123,7 @@ public void crud() throws IOException {\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 textTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 5. remove mail template\n         mailTemplateService.delete(key);"},{"sha":"b9d605fe2d1f787a0d7b424faa3020ef5acd52d7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RESTITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,6 +26,7 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.security.AccessControlException;\n import java.util.List;\n import javax.ws.rs.ForbiddenException;\n@@ -42,7 +43,6 @@\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.patch.StringReplacePatchItem;\n import org.apache.syncope.common.lib.patch.UserPatch;\n@@ -100,7 +100,7 @@ public void noContent() throws IOException {\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(\n                 StringUtils.EMPTY,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         group = getObject(response.getLocation(), GroupService.class, GroupTO.class);\n         assertNotNull(group);\n@@ -114,14 +114,14 @@ public void noContent() throws IOException {\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(\n                 StringUtils.EMPTY,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         response = noContentService.delete(group.getKey());\n         assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(\n                 StringUtils.EMPTY,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n     }\n \n     @Test"},{"sha":"1851e6df0c95f66f45ab11c7a90da9818f5b05a0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,14 +26,14 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.Date;\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.AuditReportletConf;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -185,7 +185,7 @@ private void checkExport(final String execKey, final ReportExecExportFormat fmt)\n \n         Object entity = response.getEntity();\n         assertTrue(entity instanceof InputStream);\n-        assertFalse(IOUtils.toString((InputStream) entity, SyncopeConstants.DEFAULT_ENCODING).isEmpty());\n+        assertFalse(IOUtils.toString((InputStream) entity, StandardCharsets.UTF_8.name()).isEmpty());\n     }\n \n     @Test"},{"sha":"c0882eefa65cd3e1130d32366b206a67b417b103","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportTemplateITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,12 +26,12 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ReportTemplateTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n@@ -85,29 +85,29 @@ public void crud() throws IOException {\n         String csvTemplate =\n                 \"<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'></xsl:stylesheet>\";\n         reportTemplateService.setFormat(\n-                key, ReportTemplateFormat.CSV, IOUtils.toInputStream(csvTemplate, SyncopeConstants.DEFAULT_CHARSET));\n+                key, ReportTemplateFormat.CSV, IOUtils.toInputStream(csvTemplate, StandardCharsets.UTF_8));\n \n         response = reportTemplateService.getFormat(key, ReportTemplateFormat.CSV);\n         assertEquals(200, response.getStatus());\n         assertTrue(response.getMediaType().toString().startsWith(MediaType.APPLICATION_XML));\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 csvTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 3. set HTML\n         String htmlTemplate =\n                 \"<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'></xsl:stylesheet>\";\n         reportTemplateService.setFormat(\n-                key, ReportTemplateFormat.HTML, IOUtils.toInputStream(htmlTemplate, SyncopeConstants.DEFAULT_CHARSET));\n+                key, ReportTemplateFormat.HTML, IOUtils.toInputStream(htmlTemplate, StandardCharsets.UTF_8));\n \n         response = reportTemplateService.getFormat(key, ReportTemplateFormat.HTML);\n         assertEquals(200, response.getStatus());\n         assertTrue(response.getMediaType().toString().startsWith(MediaType.APPLICATION_XML));\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 htmlTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 4. remove HTML\n         reportTemplateService.removeFormat(key, ReportTemplateFormat.HTML);\n@@ -125,7 +125,7 @@ public void crud() throws IOException {\n         assertTrue(response.getEntity() instanceof InputStream);\n         assertEquals(\n                 csvTemplate,\n-                IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET));\n+                IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n \n         // 5. remove report template\n         reportTemplateService.delete(key);"},{"sha":"89f4190e84229f8f2bcaebb8c6c526e1f95b1186","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/WorkflowITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03bf9c83817656d953a7fc7308ae1bfb1d125708/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java?ref=03bf9c83817656d953a7fc7308ae1bfb1d125708","patch":"@@ -26,9 +26,9 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n@@ -41,7 +41,7 @@ private void exportDefinition(final AnyTypeKind type) throws IOException {\n         assertTrue(response.getMediaType().toString().\n                 startsWith(clientFactory.getContentType().getMediaType().toString()));\n         assertTrue(response.getEntity() instanceof InputStream);\n-        String definition = IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET);\n+        String definition = IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8);\n         assertNotNull(definition);\n         assertFalse(definition.isEmpty());\n     }\n@@ -60,7 +60,7 @@ public void getGroupDefinition() throws IOException {\n \n     private void importDefinition(final AnyTypeKind type) throws IOException {\n         Response response = workflowService.exportDefinition(type);\n-        String definition = IOUtils.toString((InputStream) response.getEntity(), SyncopeConstants.DEFAULT_CHARSET);\n+        String definition = IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8);\n \n         workflowService.importDefinition(type, definition);\n     }"}]}