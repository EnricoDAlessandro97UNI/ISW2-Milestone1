{"sha":"26e062ac6c276316f0ee1b7ec5e43440e517db9e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2ZTA2MmFjNmMyNzYzMTZmMGVlMWI3ZWM1ZTQzNDQwZTUxN2RiOWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-20T12:45:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-20T15:26:47Z"},"message":"[SYNCOPE-1513] Adding options to console.properties and\nenduser.properties","tree":{"sha":"f291a3b451287e120a0af42efe06597a9ab6c360","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f291a3b451287e120a0af42efe06597a9ab6c360"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/26e062ac6c276316f0ee1b7ec5e43440e517db9e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26e062ac6c276316f0ee1b7ec5e43440e517db9e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26e062ac6c276316f0ee1b7ec5e43440e517db9e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26e062ac6c276316f0ee1b7ec5e43440e517db9e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cc5966346c8aa664454838967c7da40361e9d7b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc5966346c8aa664454838967c7da40361e9d7b6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc5966346c8aa664454838967c7da40361e9d7b6"}],"stats":{"total":523,"additions":394,"deletions":129},"files":[{"sha":"6e4372bb688f508de579ad5df91048bd2034cca1","filename":"client/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"added","additions":141,"deletions":0,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.stream.Stream;\n+import javax.servlet.ServletContext;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.jaxrs.client.Client;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.lib.AuthenticationHandler;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.info.NumbersInfo;\n+import org.apache.syncope.common.lib.info.PlatformInfo;\n+import org.apache.syncope.common.lib.info.SystemInfo;\n+import org.apache.syncope.common.lib.to.DomainTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.DomainService;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.util.tester.WicketTester;\n+import org.junit.jupiter.api.BeforeAll;\n+\n+public abstract class AbstractTest {\n+\n+    protected static Properties PROPS;\n+\n+    public interface SyncopeServiceClient extends SyncopeService, Client {\n+    }\n+\n+    @BeforeAll\n+    public static void loadProps() throws IOException {\n+        PROPS = new Properties();\n+        try (InputStream is = AbstractTest.class.getResourceAsStream(\"/console.properties\")) {\n+            PROPS.load(is);\n+        }\n+    }\n+\n+    protected static final WicketTester TESTER = new WicketTester(new SyncopeConsoleApplication() {\n+\n+        @Override\n+        protected void init() {\n+            ServletContext ctx = getServletContext();\n+            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+            lookup.load();\n+            ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n+\n+            MIMETypesLoader mimeTypes = new MIMETypesLoader();\n+            mimeTypes.load();\n+            ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n+\n+            super.init();\n+        }\n+\n+        @Override\n+        public List<String> getDomains() {\n+            return super.getDomains();\n+        }\n+\n+        private SyncopeService getSyncopeService() {\n+            SyncopeServiceClient service = mock(SyncopeServiceClient.class);\n+            when(service.type(anyString())).thenReturn(service);\n+            when(service.accept(anyString())).thenReturn(service);\n+\n+            when(service.platform()).thenReturn(new PlatformInfo());\n+            when(service.system()).thenReturn(new SystemInfo());\n+\n+            NumbersInfo numbersInfo = new NumbersInfo();\n+            Stream.of(NumbersInfo.ConfItem.values()).\n+                    forEach(item -> numbersInfo.getConfCompleteness().put(item.name(), true));\n+            when(service.numbers()).thenReturn(numbersInfo);\n+\n+            return service;\n+        }\n+\n+        private UserTO getUserTO() {\n+            UserTO userTO = new UserTO();\n+            userTO.setUsername(\"username\");\n+            return userTO;\n+        }\n+\n+        private DomainService getDomainService() {\n+            DomainService domainService = mock(DomainService.class);\n+            DomainTO domainTO = new DomainTO();\n+            domainTO.setKey(SyncopeConstants.MASTER_DOMAIN);\n+            when(domainService.list()).thenReturn(Collections.singletonList(domainTO));\n+            return domainService;\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public SyncopeClientFactoryBean newClientFactory() {\n+            SyncopeClient client = mock(SyncopeClient.class);\n+\n+            when(client.self()).thenReturn(Pair.of(new HashMap<>(), getUserTO()));\n+\n+            SyncopeService syncopeService = getSyncopeService();\n+            when(client.getService(SyncopeService.class)).thenReturn(syncopeService);\n+\n+            DomainService domainService = getDomainService();\n+            when(client.getService(DomainService.class)).thenReturn(domainService);\n+\n+            SyncopeClientFactoryBean clientFactory = mock(SyncopeClientFactoryBean.class);\n+            when(clientFactory.setDomain(any())).thenReturn(clientFactory);\n+            when(clientFactory.create(any(AuthenticationHandler.class))).thenReturn(client);\n+            when(clientFactory.create(anyString(), anyString())).thenReturn(client);\n+\n+            return clientFactory;\n+        }\n+    });\n+\n+}"},{"sha":"a1f0bd1a3ff5b35d62764459c88c51a812cc6011","filename":"client/console/src/test/java/org/apache/syncope/client/console/SyncopeConsoleApplicationTest.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.pages.Dashboard;\n+import org.apache.syncope.client.console.pages.Login;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.jupiter.api.Test;\n+\n+public class SyncopeConsoleApplicationTest extends AbstractTest {\n+\n+    private Map<String, String> getConfiguredSecurityHeaders() throws IOException {\n+        Map<String, String> securityHeaders = new HashMap<>();\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Enumeration<String> propNames = (Enumeration<String>) PROPS.propertyNames();\n+        while (propNames.hasMoreElements()) {\n+            String name = propNames.nextElement();\n+            if (name.startsWith(\"security.headers.\")) {\n+                securityHeaders.put(StringUtils.substringAfter(name, \"security.headers.\"), PROPS.getProperty(name));\n+            }\n+        }\n+\n+        return securityHeaders;\n+    }\n+\n+    @Test\n+    public void securityHeaders() throws IOException {\n+        Map<String, String> securityHeaders = getConfiguredSecurityHeaders();\n+        assertEquals(4, securityHeaders.size());\n+\n+        // 1. anonymous\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n+        securityHeaders.forEach((key, value) -> assertEquals(value, TESTER.getLastResponse().getHeader(key)));\n+\n+        // 2. authenticated\n+        FormTester formTester = TESTER.newFormTester(\"login\");\n+        formTester.setValue(\"username\", \"username\");\n+        formTester.setValue(\"password\", \"password\");\n+        formTester.submit(\"submit\");\n+\n+        TESTER.assertRenderedPage(Dashboard.class);\n+        securityHeaders.forEach((key, value) -> assertEquals(value, TESTER.getLastResponse().getHeader(key)));\n+    }\n+}"},{"sha":"28257a537d0fecf54e638209133b6218f58c37e5","filename":"client/console/src/test/resources/log4j2.xml","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+\n+    <Console name=\"main\" target=\"SYSTEM_OUT\">\n+      <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\"/>\n+    </Console>\n+    \n+  </appenders>\n+\n+  <loggers>\n+\n+    <asyncLogger name=\"org.apache.syncope.client.lib\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <root level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </root>\n+  \n+  </loggers>\n+  \n+</configuration>"},{"sha":"a5d64db79bcaa225cb984ac5ea735ab243ba47c8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n-\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -228,5 +226,4 @@ private void sortLinkedAccounts() {\n     private void checkAddButton() {\n         addAjaxLink.setVisible(SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_UPDATE));\n     }\n-\n }"},{"sha":"86e69aadc93efdbf3ad09999ab0647cb6916ccad","filename":"client/idrepo/console/pom.xml","status":"modified","additions":15,"deletions":9,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -117,28 +117,34 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n+      <artifactId>log4j-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>\n       <artifactId>disruptor</artifactId>\n     </dependency>\n+\n+    <!-- required by wicket tester -->\n     <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.12</version>\n+      <scope>test</scope>\n     </dependency>\n+\n     <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <scope>test</scope>\n     </dependency>\n     <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n     </dependency>\n   </dependencies>\n   "},{"sha":"41f69d97295d9446951a920d198e2edca1f21fb0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -23,7 +23,6 @@\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n-\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.HashMap;\n@@ -85,7 +84,7 @@ public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n     private static final String CONSOLE_PROPERTIES = \"console.properties\";\n \n     public static final List<Locale> SUPPORTED_LOCALES = List.of(\n-        Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE);\n+            Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE);\n \n     public static SyncopeWebApplication get() {\n         return (SyncopeWebApplication) WebApplication.get();\n@@ -162,6 +161,17 @@ protected void populatePageClasses(final Properties props) {\n         }\n     }\n \n+    protected void setSecurityHeaders(final Properties props, final WebResponse response) {\n+        @SuppressWarnings(\"unchecked\")\n+        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n+        while (propNames.hasMoreElements()) {\n+            String name = propNames.nextElement();\n+            if (name.startsWith(\"security.headers.\")) {\n+                response.setHeader(StringUtils.substringAfter(name, \"security.headers.\"), props.getProperty(name));\n+            }\n+        }\n+    }\n+\n     private NetworkService getNetworkService() {\n         NetworkService ns = new NetworkService();\n         ns.setType(NetworkService.Type.CONSOLE);\n@@ -194,8 +204,6 @@ protected void init() {\n         maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n         queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n \n-        boolean csrf = BooleanUtils.toBoolean(props.getProperty(\"csrf\"));\n-\n         // process page properties\n         pageClasses = new HashMap<>();\n         populatePageClasses(props);\n@@ -222,10 +230,6 @@ protected void init() {\n         getMarkupSettings().setStripWicketTags(true);\n         getMarkupSettings().setCompressWhitespace(true);\n \n-        if (csrf) {\n-            getRequestCycleListeners().add(new WebSocketAwareCsrfPreventionRequestCycleListener());\n-        }\n-\n         getRequestCycleListeners().add(new SyncopeUIRequestCycleListener() {\n \n             @Override\n@@ -244,15 +248,15 @@ protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n             }\n         });\n \n+        if (BooleanUtils.toBoolean(props.getProperty(\"csrf\"))) {\n+            getRequestCycleListeners().add(new WebSocketAwareCsrfPreventionRequestCycleListener());\n+        }\n         getRequestCycleListeners().add(new IRequestCycleListener() {\n \n             @Override\n             public void onEndRequest(final RequestCycle cycle) {\n                 if (cycle.getResponse() instanceof WebResponse && !(cycle.getResponse() instanceof WebSocketResponse)) {\n-                    WebResponse response = (WebResponse) cycle.getResponse();\n-                    response.setHeader(\"X-XSS-Protection\", \"1; mode=block\");\n-                    response.setHeader(\"X-Content-Type-Options\", \"nosniff\");\n-                    response.setHeader(\"X-Frame-Options\", \"sameorigin\");\n+                    setSecurityHeaders(props, (WebResponse) cycle.getResponse());\n                 }\n             }\n         });"},{"sha":"c68e3ba8ea3a7fee40e2cf42248f2e186ad14763","filename":"client/idrepo/console/src/main/resources/console.properties","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -25,8 +25,6 @@ maxUploadFileSizeMB=5\n # Max wait time on apply changes from modals/wizards (given in seconds)\n maxWaitTimeOnApplyChanges=30\n \n-csrf=true\n-\n reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n \n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n@@ -41,6 +39,14 @@ page.policies=org.apache.syncope.client.console.pages.Policies\n page.notifications=org.apache.syncope.client.console.pages.Notifications\n page.parameters=org.apache.syncope.client.console.pages.Parameters\n \n-executor.corePoolSize=10\n-executor.maxPoolSize=20\n-executor.queueCapacity=50\n+topology.corePoolSize=10\n+topology.maxPoolSize=20\n+topology.queueCapacity=50\n+\n+csrf=true\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"42912753cc676eabb808e732522b7b720d4da842","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -100,20 +100,16 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n+      <artifactId>log4j-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>\n       <artifactId>disruptor</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>"},{"sha":"63b6654f9b3abf3e15cbbd2cedce0b51cae35ea2","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":29,"deletions":9,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -27,6 +27,7 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n@@ -68,6 +69,9 @@\n import org.apache.wicket.request.Request;\n import org.apache.wicket.request.Response;\n import org.apache.wicket.request.component.IRequestablePage;\n+import org.apache.wicket.request.cycle.IRequestCycleListener;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.http.WebResponse;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -90,7 +94,7 @@ public class SyncopeWebApplication extends WicketBootStandardWebApplication {\n     private static final String CUSTOM_FORM_ATTRIBUTES_FILE = \"customFormAttributes.json\";\n \n     public static final List<Locale> SUPPORTED_LOCALES = List.of(\n-        Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE);\n+            Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE);\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n@@ -129,6 +133,17 @@ public static SyncopeWebApplication get() {\n \n     private Map<String, CustomAttributesInfo> customFormAttributes;\n \n+    protected void setSecurityHeaders(final Properties props, final WebResponse response) {\n+        @SuppressWarnings(\"unchecked\")\n+        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n+        while (propNames.hasMoreElements()) {\n+            String name = propNames.nextElement();\n+            if (name.startsWith(\"security.headers.\")) {\n+                response.setHeader(StringUtils.substringAfter(name, \"security.headers.\"), props.getProperty(name));\n+            }\n+        }\n+    }\n+\n     private NetworkService getNetworkService() {\n         NetworkService ns = new NetworkService();\n         ns.setType(NetworkService.Type.ENDUSER);\n@@ -153,9 +168,6 @@ protected void init() {\n         captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n         Args.notNull(captchaEnabled, \"<captcha>\");\n \n-        boolean xsrf = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n-        Args.notNull(xsrf, \"<xsrf>\");\n-\n         useGZIPCompression = BooleanUtils.toBoolean(props.getProperty(\"useGZIPCompression\"));\n         Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n         maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n@@ -268,10 +280,6 @@ public void renderHead(final IHeaderResponse response) {\n             }\n         });\n \n-        if (xsrf) {\n-            getRequestCycleListeners().add(new CsrfPreventionRequestCycleListener());\n-        }\n-\n         getRequestCycleListeners().add(new SyncopeUIRequestCycleListener() {\n \n             @Override\n@@ -291,6 +299,19 @@ protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n \n         });\n \n+        if (BooleanUtils.toBoolean(props.getProperty(\"csrf\"))) {\n+            getRequestCycleListeners().add(new CsrfPreventionRequestCycleListener());\n+        }\n+        getRequestCycleListeners().add(new IRequestCycleListener() {\n+\n+            @Override\n+            public void onEndRequest(final RequestCycle cycle) {\n+                if (cycle.getResponse() instanceof WebResponse) {\n+                    setSecurityHeaders(props, (WebResponse) cycle.getResponse());\n+                }\n+            }\n+        });\n+\n         // Confirm password reset page\n         mountPage(\"/confirmpasswordreset\", SelfConfirmPasswordReset.class);\n \n@@ -414,5 +435,4 @@ public static void extractAttrsFromExt(final String extAttrs, final UserTO userT\n             LOG.error(\"While extracting ext attributes\", e);\n         }\n     }\n-\n }"},{"sha":"27e3053eb0fbbdb6a476986d67c7647684dfbb06","filename":"client/idrepo/enduser/src/main/resources/enduser.properties","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -23,4 +23,10 @@ useGZIPCompression=true\n maxUploadFileSizeMB=5\n \n captcha=true\n-xsrf=true\n+csrf=true\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"d2fb118ce4d0cf339796cf61517ceed12e8113da","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Login_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin_it.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -18,5 +18,5 @@ username=Username\n password=Password\n submit=Login\n login-error=Username e/o password errati\n-self-registration=Registratione\n+self-registration=Registrazione\n self-pwd-reset=Reset Password"},{"sha":"ad2baf5de668c432c2c60fca0457e88ede6ad905","filename":"core/starter/pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/core%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/core%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fpom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -79,20 +79,16 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n+      <artifactId>log4j-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>\n       <artifactId>disruptor</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>"},{"sha":"5adb55a828af914ed05178b2d2255401c4e2d70f","filename":"docker/enduser/src/main/resources/enduser.properties","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc5966346c8aa664454838967c7da40361e9d7b6/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc5966346c8aa664454838967c7da40361e9d7b6/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=cc5966346c8aa664454838967c7da40361e9d7b6","patch":"@@ -1,26 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-enduser.directory=${conf.directory}\n-\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-adminUser=${adminUser}\n-useGZIPCompression=true\n-maxUploadFileSizeMB=5\n-\n-captcha=true\n-xsrf=true"},{"sha":"18158c50afc4745407f385855ce5c5f13ef93c48","filename":"fit/build-tools/pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -201,20 +201,16 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n+      <artifactId>log4j-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>\n       <artifactId>disruptor</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>"},{"sha":"0b51e786d36765c9970fa89e1601136c7e6d2325","filename":"fit/console-reference/src/main/resources/console.properties","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -25,8 +25,6 @@ maxUploadFileSizeMB=5\n # Max wait time on apply changes from modals/wizards (given in seconds)\n maxWaitTimeOnApplyChanges=30\n \n-csrf=true\n-\n reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n \n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n@@ -41,6 +39,14 @@ page.policies=org.apache.syncope.client.console.pages.Policies\n page.notifications=org.apache.syncope.client.console.pages.Notifications\n page.parameters=org.apache.syncope.client.console.pages.Parameters\n \n-executor.corePoolSize=50\n-executor.maxPoolSize=100\n-executor.queueCapacity=10\n+topology.corePoolSize=50\n+topology.maxPoolSize=100\n+topology.queueCapacity=10\n+\n+csrf=true\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"0c6250c997e6089093563e823ccd74eb89dad4f1","filename":"fit/core-reference/src/test/resources/console.properties","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -25,8 +25,6 @@ maxUploadFileSizeMB=5\n # Max wait time on apply changes from modals/wizards (given in seconds)\n maxWaitTimeOnApplyChanges=30\n \n-csrf=false\n-\n reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n \n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n@@ -45,3 +43,10 @@ executor.corePoolSize=50\n executor.maxPoolSize=100\n executor.queueCapacity=10\n \n+csrf=false\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"fc07dfaee619d2cf1496be1ba0181148d09fb540","filename":"fit/core-reference/src/test/resources/enduser.properties","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -22,4 +22,10 @@ adminUser=${adminUser}\n useGZIPCompression=true\n \n captcha=false\n-xsrf=false\n+csrf=false\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"27e3053eb0fbbdb6a476986d67c7647684dfbb06","filename":"fit/enduser-reference/src/main/resources/enduser.properties","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -23,4 +23,10 @@ useGZIPCompression=true\n maxUploadFileSizeMB=5\n \n captcha=true\n-xsrf=true\n+csrf=true\n+\n+security.headers.X-XSS-Protection=1; mode=block\n+security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+security.headers.X-Content-Type-Options=nosniff\n+security.headers.X-Frame-Options=sameorigin\n+#security.headers.Content-Security-Policy=default-src https:"},{"sha":"97a84fc31903104d9a98196951e2ad9a5c3ad000","filename":"fit/enduser-reference/src/test/resources/enduser.properties","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc5966346c8aa664454838967c7da40361e9d7b6/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc5966346c8aa664454838967c7da40361e9d7b6/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties?ref=cc5966346c8aa664454838967c7da40361e9d7b6","patch":"@@ -1,25 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-enduser.directory=${conf.directory}\n-\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-adminUser=${adminUser}\n-useGZIPCompression=true\n-\n-captcha=false\n-xsrf=false"},{"sha":"ec14e66c03cd6faec8968ab58b1c4477fb63364b","filename":"pom.xml","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -1499,16 +1499,16 @@ under the License.\n         <artifactId>log4j-core</artifactId>\n         <version>${log4j.version}</version>\n       </dependency>\n-      <dependency>\n-        <groupId>com.lmax</groupId>\n-        <artifactId>disruptor</artifactId>\n-        <version>${disruptor.version}</version>\n-      </dependency>\n       <dependency>\n         <groupId>org.apache.logging.log4j</groupId>\n         <artifactId>log4j-slf4j-impl</artifactId>\n         <version>${log4j.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>com.lmax</groupId>\n+        <artifactId>disruptor</artifactId>\n+        <version>${disruptor.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>commons-logging</groupId>\n         <artifactId>commons-logging</artifactId>\n@@ -1787,6 +1787,12 @@ under the License.\n         <version>${spring.version}</version>\n         <scope>test</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.mockito</groupId>\n+        <artifactId>mockito-core</artifactId>\n+        <version>3.1.0</version>\n+        <scope>test</scope>\n+      </dependency>\n       <dependency>\n         <groupId>org.junit.jupiter</groupId>\n         <artifactId>junit-jupiter</artifactId>"},{"sha":"db03aae2a32cbc48cd28b15f9236c9e1d4f280e3","filename":"sra/pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26e062ac6c276316f0ee1b7ec5e43440e517db9e/sra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26e062ac6c276316f0ee1b7ec5e43440e517db9e/sra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fpom.xml?ref=26e062ac6c276316f0ee1b7ec5e43440e517db9e","patch":"@@ -94,20 +94,16 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n+      <artifactId>log4j-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>com.lmax</groupId>\n       <artifactId>disruptor</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>"}]}