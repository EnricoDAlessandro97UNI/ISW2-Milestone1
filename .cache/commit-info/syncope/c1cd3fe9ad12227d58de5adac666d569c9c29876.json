{"sha":"c1cd3fe9ad12227d58de5adac666d569c9c29876","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMxY2QzZmU5YWQxMjIyN2Q1OGRlNWFkYWM2NjZkNTY5YzljMjk4NzY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-09T16:48:20Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-09T16:49:00Z"},"message":"[SYNCOPE-1079] fixes missing action toggle panel","tree":{"sha":"5e5333336a4db013bb1fff7318ab217e0621d224","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5e5333336a4db013bb1fff7318ab217e0621d224"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c1cd3fe9ad12227d58de5adac666d569c9c29876","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1cd3fe9ad12227d58de5adac666d569c9c29876","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1cd3fe9ad12227d58de5adac666d569c9c29876","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1cd3fe9ad12227d58de5adac666d569c9c29876/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"b34ff3f7e52567eb5a8506e500ed38e8bd1592cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b34ff3f7e52567eb5a8506e500ed38e8bd1592cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b34ff3f7e52567eb5a8506e500ed38e8bd1592cb"}],"stats":{"total":319,"additions":169,"deletions":150},"files":[{"sha":"e06608859d3b73d507c386f171a1eaaa9fc97ee5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -105,7 +105,7 @@\n \n     protected final BaseModal<W> displayAttributeModal = new BaseModal<>(\"outer\");\n \n-    private final ActionLinksTogglePanel<T> actionTogglePanel;\n+    private ActionLinksTogglePanel<T> actionTogglePanel;\n \n     /**\n      * Create simple unfiltered search result panel.\n@@ -354,6 +354,10 @@ protected ActionLinksTogglePanel<T> getTogglePanel() {\n         return actionTogglePanel;\n     }\n \n+    protected void setTogglePanel(final ActionLinksTogglePanel<T> actionTogglePanel) {\n+        this.actionTogglePanel = actionTogglePanel;\n+    }\n+\n     public static class EventDataWrapper {\n \n         private AjaxRequestTarget target;"},{"sha":"17573b6233dd7fffcb4f9c9e34d3b9b4adf9ddee","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -114,7 +114,9 @@ public TogglePanel<T> addInnerObject(final Component... childs) {\n     }\n \n     protected void setHeader(final AjaxRequestTarget target, final String header) {\n-        this.header.setDefaultModelObject(header.length() >= 40 ? (header.substring(0, 30) + \" ... \") : header);\n+        this.header.setDefaultModelObject(header == null\n+                ? StringUtils.EMPTY\n+                : header.length() >= 40 ? (header.substring(0, 30) + \" ... \") : header);\n         target.add(this.header);\n     }\n "},{"sha":"c387c32b362f2429259984d2b7597d8cf93f32be","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -98,6 +99,9 @@ public void toggleWithContent(\n             header = ((PolicyRuleWrapper) modelObject).getName();\n         } else if (modelObject instanceof ReportletWrapper) {\n             header = ((ReportletWrapper) modelObject).getName();\n+        } else if (modelObject instanceof JobTO) {\n+            header = ((JobTO) modelObject).getRefKey() == null\n+                    ? ((JobTO) modelObject).getRefDesc() : ((JobTO) modelObject).getRefKey();\n         } else {\n             header = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n         }"},{"sha":"82665f88d574521ffb45cdcdc4f4e627c38d5f76","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobActionPanel.java","status":"modified","additions":0,"deletions":141,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -18,36 +18,22 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.reports.ReportWizardBuilder;\n-import org.apache.syncope.client.console.reports.ReportletDirectoryPanel;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n-import org.apache.syncope.client.console.tasks.SchedTaskWizardBuilder;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxLink;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.types.JobAction;\n-import org.apache.syncope.common.lib.types.JobType;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.StringResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -57,10 +43,6 @@ public class JobActionPanel extends WizardMgtPanel<Serializable> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(JobActionPanel.class);\n \n-    private final BaseModal<Serializable> jobModal;\n-\n-    private final BaseModal<ReportTO> reportModal;\n-\n     private final NotificationRestClient notificationRestClient = new NotificationRestClient();\n \n     private final ReportRestClient reportRestClient = new ReportRestClient();\n@@ -71,117 +53,9 @@ public JobActionPanel(\n             final String id,\n             final JobTO jobTO,\n             final JobWidget widget,\n-            final BaseModal<Serializable> jobModal,\n-            final BaseModal<ReportTO> reportModal,\n             final PageReference pageRef) {\n         super(id, true);\n-        this.jobModal = jobModal;\n-        this.reportModal = reportModal;\n         setOutputMarkupId(true);\n-        setWindowClosedReloadCallback(jobModal);\n-        jobModal.size(Modal.Size.Large);\n-        setWindowClosedReloadCallback(reportModal);\n-        this.reportModal.size(Modal.Size.Large);\n-\n-        IndicatorAjaxLink<Void> link = new IndicatorAjaxLink<Void>(\"edit\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                switch (jobTO.getType()) {\n-                    case NOTIFICATION:\n-                        break;\n-\n-                    case REPORT:\n-                        ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n-\n-                        ReportWizardBuilder rwb = new ReportWizardBuilder(reportTO, pageRef);\n-                        rwb.setEventSink(JobActionPanel.this);\n-\n-                        target.add(jobModal.setContent(rwb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n-\n-                        jobModal.header(new StringResourceModel(\n-                                \"any.edit\",\n-                                this,\n-                                new Model<>(reportTO)));\n-\n-                        jobModal.show(true);\n-                        break;\n-\n-                    case TASK:\n-                        SchedTaskTO schedTaskTO = new TaskRestClient().\n-                                readSchedTask(SchedTaskTO.class, jobTO.getRefKey());\n-\n-                        SchedTaskWizardBuilder<SchedTaskTO> swb = new SchedTaskWizardBuilder<>(schedTaskTO, pageRef);\n-                        swb.setEventSink(JobActionPanel.this);\n-\n-                        target.add(jobModal.setContent(swb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n-\n-                        jobModal.header(new StringResourceModel(\n-                                \"any.edit\",\n-                                this,\n-                                new Model<>(schedTaskTO)));\n-\n-                        jobModal.show(true);\n-                        break;\n-\n-                    default:\n-                        break;\n-                }\n-            }\n-        };\n-        link.setOutputMarkupPlaceholderTag(true);\n-        link.setVisible(!(null != jobTO.getType() && JobType.NOTIFICATION.equals(jobTO.getType())));\n-        addInnerObject(link);\n-\n-        IndicatorAjaxLink<Void> composeLink;\n-        composeLink =\n-                new IndicatorAjaxLink<Void>(\"compose\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                if (null != jobTO.getType()) {\n-                    switch (jobTO.getType()) {\n-\n-                        case NOTIFICATION:\n-                            break;\n-\n-                        case REPORT:\n-\n-                            final ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n-\n-                            target.add(JobActionPanel.this.reportModal.setContent(\n-                                    new ReportletDirectoryPanel(reportModal, jobTO.getRefKey(), pageRef)));\n-\n-                            MetaDataRoleAuthorizationStrategy.authorize(\n-                                    reportModal.getForm(),\n-                                    ENABLE, StandardEntitlement.REPORT_UPDATE);\n-\n-                            reportModal.header(new StringResourceModel(\n-                                    \"reportlet.conf\", this, new Model<>(reportTO)\n-                            ));\n-\n-                            reportModal.show(true);\n-\n-                            break;\n-\n-                        case TASK:\n-                            break;\n-\n-                        default:\n-                            break;\n-                    }\n-                }\n-            }\n-        };\n-        composeLink.setOutputMarkupPlaceholderTag(true);\n-        composeLink.setVisible(!(null != jobTO.getType() && (JobType.TASK.equals(jobTO.getType())\n-                || JobType.NOTIFICATION.equals(jobTO.getType()))));\n-        addInnerObject(composeLink);\n \n         Fragment controls;\n         if (jobTO.isRunning()) {\n@@ -271,19 +145,4 @@ public AjaxRequestTarget getTarget() {\n         }\n \n     }\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n-            final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n-\n-            if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent\n-                    || event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n-                jobModal.close(target);\n-            }\n-        }\n-\n-        super.onEvent(event);\n-    }\n }"},{"sha":"aadd49ca958a9b2ededfd8e08c031f561be50577","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":156,"deletions":4,"changes":160,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.io.Serializable;\n@@ -32,20 +34,28 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.ExecMessageModal;\n+import org.apache.syncope.client.console.reports.ReportWizardBuilder;\n+import org.apache.syncope.client.console.reports.ReportletDirectoryPanel;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.tasks.SchedTaskWizardBuilder;\n import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.types.JobType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -76,6 +86,8 @@ public class JobWidget extends BaseWidget {\n \n     private static final int ROWS = 5;\n \n+    private final ActionLinksTogglePanel<JobTO> actionTogglePanel;\n+\n     private final BaseModal<Serializable> modal = new BaseModal<Serializable>(\"modal\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n@@ -105,7 +117,7 @@ protected void onConfigure() {\n         @Override\n         protected void onConfigure() {\n             super.onConfigure();\n-            setFooterVisible(true);\n+            setFooterVisible(false);\n         }\n     };\n \n@@ -197,6 +209,9 @@ protected void onTimer(final AjaxRequestTarget target) {\n         add(container);\n \n         container.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n+\n+        actionTogglePanel = new ActionLinksTogglePanel<>(\"actionTogglePanel\", pageRef);\n+        add(actionTogglePanel);\n     }\n \n     private List<JobTO> getUpdatedAvailable() {\n@@ -275,6 +290,10 @@ private class AvailableJobsPanel extends DirectoryPanel<JobTO, JobTO, AvailableJ\n \n         private static final long serialVersionUID = -8214546246301342868L;\n \n+        private final BaseModal<ReportTO> reportModal;\n+\n+        private final BaseModal<Serializable> jobModal;\n+\n         AvailableJobsPanel(final String id, final PageReference pageRef) {\n             super(id, new Builder<JobTO, JobTO, BaseRestClient>(null, pageRef) {\n \n@@ -286,6 +305,14 @@ protected WizardMgtPanel<JobTO> newInstance(final String id, final boolean wizar\n                 }\n             }.disableCheckBoxes().hidePaginator());\n \n+            super.setTogglePanel(actionTogglePanel);\n+\n+            this.reportModal = JobWidget.this.reportModal;\n+            setWindowClosedReloadCallback(reportModal);\n+\n+            this.jobModal = JobWidget.this.modal;\n+            setWindowClosedReloadCallback(jobModal);\n+\n             rows = ROWS;\n             initResultTable();\n         }\n@@ -326,8 +353,8 @@ public void populateItem(\n                         final IModel<JobTO> rowModel) {\n \n                     JobTO jobTO = rowModel.getObject();\n-                    JobActionPanel panel = new JobActionPanel(componentId, jobTO, JobWidget.this, JobWidget.this.modal,\n-                            JobWidget.this.reportModal, pageRef);\n+                    JobActionPanel panel\n+                            = new JobActionPanel(componentId, jobTO, JobWidget.this, pageRef);\n                     MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.ENABLE,\n                             String.format(\"%s,%s%s,%s\",\n                                     StandardEntitlement.TASK_EXECUTE,\n@@ -341,12 +368,137 @@ public void populateItem(\n                 public String getCssClass() {\n                     return \"col-xs-1\";\n                 }\n-\n             });\n \n             return columns;\n         }\n \n+        @Override\n+        protected ActionsPanel<JobTO> getActions(final IModel<JobTO> model) {\n+            final ActionsPanel<JobTO> panel = super.getActions(model);\n+\n+            final JobTO jobTO = model.getObject();\n+\n+            panel.add(new ActionLink<JobTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n+                    switch (jobTO.getType()) {\n+                        case NOTIFICATION:\n+                            break;\n+\n+                        case REPORT:\n+                            ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n+\n+                            ReportWizardBuilder rwb = new ReportWizardBuilder(reportTO, pageRef);\n+                            rwb.setEventSink(AvailableJobsPanel.this);\n+\n+                            target.add(jobModal.setContent(rwb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+\n+                            jobModal.header(new StringResourceModel(\n+                                    \"any.edit\",\n+                                    AvailableJobsPanel.this,\n+                                    new Model<>(reportTO)));\n+\n+                            jobModal.show(true);\n+                            break;\n+\n+                        case TASK:\n+                            SchedTaskTO schedTaskTO = new TaskRestClient().\n+                                    readSchedTask(SchedTaskTO.class, jobTO.getRefKey());\n+\n+                            SchedTaskWizardBuilder<SchedTaskTO> swb\n+                                    = new SchedTaskWizardBuilder<>(schedTaskTO, pageRef);\n+                            swb.setEventSink(AvailableJobsPanel.this);\n+\n+                            target.add(jobModal.setContent(swb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+\n+                            jobModal.header(new StringResourceModel(\n+                                    \"any.edit\",\n+                                    AvailableJobsPanel.this,\n+                                    new Model<>(schedTaskTO)));\n+\n+                            jobModal.show(true);\n+                            break;\n+\n+                        default:\n+                            break;\n+                    }\n+                }\n+\n+                @Override\n+                protected boolean statusCondition(final JobTO modelObject) {\n+                    return !(null != jobTO.getType() && JobType.NOTIFICATION.equals(jobTO.getType()));\n+                }\n+            }, ActionType.EDIT, StandardEntitlement.TASK_UPDATE);\n+\n+            panel.add(new ActionLink<JobTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n+\n+                    if (null != jobTO.getType()) {\n+                        switch (jobTO.getType()) {\n+\n+                            case NOTIFICATION:\n+                                break;\n+\n+                            case REPORT:\n+\n+                                final ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n+\n+                                target.add(AvailableJobsPanel.this.reportModal.setContent(\n+                                        new ReportletDirectoryPanel(reportModal, jobTO.getRefKey(), pageRef)));\n+\n+                                MetaDataRoleAuthorizationStrategy.authorize(\n+                                        reportModal.getForm(),\n+                                        ENABLE, StandardEntitlement.REPORT_UPDATE);\n+\n+                                reportModal.header(new StringResourceModel(\n+                                        \"reportlet.conf\", AvailableJobsPanel.this, new Model<>(reportTO)));\n+\n+                                reportModal.show(true);\n+\n+                                break;\n+\n+                            case TASK:\n+                                break;\n+\n+                            default:\n+                                break;\n+                        }\n+                    }\n+                }\n+\n+                @Override\n+                protected boolean statusCondition(final JobTO modelObject) {\n+                    return !(null != jobTO.getType() && (JobType.TASK.equals(jobTO.getType())\n+                            || JobType.NOTIFICATION.equals(jobTO.getType())));\n+                }\n+\n+            }, ActionType.COMPOSE, StandardEntitlement.TASK_UPDATE);\n+\n+            return panel;\n+        }\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public void onEvent(final IEvent<?> event) {\n+            if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+                final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n+\n+                if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent\n+                        || event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                    jobModal.close(target);\n+                }\n+            }\n+\n+            super.onEvent(event);\n+        }\n     }\n \n     protected final class AvailableJobsProvider extends DirectoryDataProvider<JobTO> {"},{"sha":"e94f2922c1728a6141e04cc4e428ecc585064c64","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobActionPanel.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.html?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -27,8 +27,5 @@\n     <wicket:fragment wicket:id=\"notRunningFragment\">\n       <a href=\"#\" wicket:id=\"start\" class=\"fa fa-play-circle\"></a>\n     </wicket:fragment>\n-    <!--<div wicket:id=\"modal\"/>-->\n-    <a href=\"#\" wicket:id=\"edit\" ><i id=\"actionLink\" class=\"glyphicon glyphicon-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a> \n-    <a href=\"#\" wicket:id=\"compose\" ><i id=\"actionLink\" class=\"fa fa-puzzle-piece\" alt=\"compose icon\" title=\"Compose\"></i></a> \n   </wicket:extend>\n </html>"},{"sha":"7346aa130490bd87baa89e162cc32134cfbbd63e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobWidget.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1cd3fe9ad12227d58de5adac666d569c9c29876/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html?ref=c1cd3fe9ad12227d58de5adac666d569c9c29876","patch":"@@ -33,5 +33,6 @@ <h3 class=\"box-title\"><wicket:message key=\"jobs\"/></h3>\n     <div wicket:id=\"modal\"/>\n     <div wicket:id=\"detailModal\"/>\n     <div wicket:id=\"reportModal\"/>\n+    <div wicket:id=\"actionTogglePanel\"/>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"}]}