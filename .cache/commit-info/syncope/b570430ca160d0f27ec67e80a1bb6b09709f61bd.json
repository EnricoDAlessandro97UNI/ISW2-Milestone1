{"sha":"b570430ca160d0f27ec67e80a1bb6b09709f61bd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI1NzA0MzBjYTE2MGQwZjI3ZWM2N2U4MGExYmI2YjA5NzA5ZjYxYmQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-10-15T15:16:51Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-10-15T15:17:22Z"},"message":"[SYNCOPE-1385] makes PriorityPropagationTaskExecutor timeout closer to the maximum connector connection request timeout","tree":{"sha":"0ea7f27d8cfad509787f22f165d13e8f7cb27a2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0ea7f27d8cfad509787f22f165d13e8f7cb27a2e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b570430ca160d0f27ec67e80a1bb6b09709f61bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b570430ca160d0f27ec67e80a1bb6b09709f61bd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b570430ca160d0f27ec67e80a1bb6b09709f61bd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b570430ca160d0f27ec67e80a1bb6b09709f61bd/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fd24dd8b49a47f7868f0f995c0d180e559b4896b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fd24dd8b49a47f7868f0f995c0d180e559b4896b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fd24dd8b49a47f7868f0f995c0d180e559b4896b"}],"stats":{"total":27,"additions":21,"deletions":6},"files":[{"sha":"84339c8f07433f536b0af1138341b4e604d27247","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b570430ca160d0f27ec67e80a1bb6b09709f61bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b570430ca160d0f27ec67e80a1bb6b09709f61bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=b570430ca160d0f27ec67e80a1bb6b09709f61bd","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.propagation;\n \n import java.io.Serializable;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n@@ -31,7 +32,6 @@\n import java.util.concurrent.ExecutorCompletionService;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n@@ -83,11 +83,26 @@ protected void doExecute(\n             final PropagationReporter reporter,\n             final boolean nullPriorityAsync) {\n \n-        Map<PropagationTaskTO, ExternalResource> taskToResource = tasks.stream().\n-                collect(Collectors.toMap(Function.identity(), task -> resourceDAO.find(task.getResource())));\n+        Map<PropagationTaskTO, ExternalResource> taskToResource = new HashMap<>(tasks.size());\n+        List<PropagationTaskTO> prioritizedTasks = new ArrayList<>();\n+\n+        int[] connRequestTimeout = { 60 };\n+\n+        tasks.forEach(task -> {\n+            ExternalResource resource = resourceDAO.find(task.getResource());\n+            taskToResource.put(task, resource);\n+\n+            if (resource.getPropagationPriority() != null) {\n+                prioritizedTasks.add(task);\n+\n+                if (resource.getConnector().getConnRequestTimeout() != null\n+                        && connRequestTimeout[0] < resource.getConnector().getConnRequestTimeout()) {\n+                    connRequestTimeout[0] = resource.getConnector().getConnRequestTimeout();\n+                    LOG.debug(\"Upgrade request connection timeout to {}\", connRequestTimeout);\n+                }\n+            }\n+        });\n \n-        List<PropagationTaskTO> prioritizedTasks = tasks.stream().\n-                filter(task -> taskToResource.get(task).getPropagationPriority() != null).collect(Collectors.toList());\n         Collections.sort(prioritizedTasks, new PriorityComparator(taskToResource));\n         LOG.debug(\"Propagation tasks sorted by priority, for serial execution: {}\", prioritizedTasks);\n \n@@ -140,7 +155,7 @@ protected void doExecute(\n                                 LOG.error(\"Unexpected exception\", e);\n                             }\n                         }\n-                    }).get(60, TimeUnit.SECONDS);\n+                    }).get(connRequestTimeout[0], TimeUnit.SECONDS);\n                 } catch (Exception e) {\n                     LOG.error(\"Unexpected exception\", e);\n                 } finally {"}]}