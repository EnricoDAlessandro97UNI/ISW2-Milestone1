{"sha":"03f524c271960f893d51f39ed6527514ef381089","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzZjUyNGMyNzE5NjBmODkzZDUxZjM5ZWQ2NTI3NTE0ZWYzODEwODk=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-13T18:47:42Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-13T18:47:42Z"},"message":"SYNCOPE-198: provided table implementation and bulk actions for tasks\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1456085 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"560cbbf88cd9002768d33f67d25feef4d8c2b851","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/560cbbf88cd9002768d33f67d25feef4d8c2b851"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03f524c271960f893d51f39ed6527514ef381089","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03f524c271960f893d51f39ed6527514ef381089","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03f524c271960f893d51f39ed6527514ef381089","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03f524c271960f893d51f39ed6527514ef381089/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"dc582d3f89fb53d969ba696ef4a76fa50b334519","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dc582d3f89fb53d969ba696ef4a76fa50b334519","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dc582d3f89fb53d969ba696ef4a76fa50b334519"}],"stats":{"total":15677,"additions":656,"deletions":15021},"files":[{"sha":"f1b2b22e460f429675814a9ae0fc86bf709bfe5d","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/TaskServiceProxy.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -28,6 +28,8 @@\n import javax.xml.ws.WebServiceException;\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.TaskService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.JobClassTO;\r\n import org.apache.syncope.common.to.NotificationTaskTO;\r\n import org.apache.syncope.common.to.PropagationTaskTO;\r\n@@ -216,4 +218,9 @@ private Class<? extends TaskTO> getTOClass(final TaskType type) {\n                 throw new IllegalArgumentException(\"SchemaType is not supported: \" + type);\r\n         }\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n+        return getRestTemplate().postForObject(baseUrl + \"task/bulk\", bulkAction, BulkActionRes.class);\r\n+    }\r\n }\r"},{"sha":"b323f0541647fbebee032f0d89350b17cc16acf3","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserServiceProxy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -181,7 +181,7 @@ public int searchCount(final NodeCond searchCondition) {\n     }\n \n     @Override\n-    public BulkActionRes bulkAction(final BulkAction bulkActions) {\n-        return getRestTemplate().postForObject(baseUrl + \"user/bulk\", bulkActions, BulkActionRes.class);\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n+        return getRestTemplate().postForObject(baseUrl + \"user/bulk\", bulkAction, BulkActionRes.class);\n     }\n }"},{"sha":"292cc459ae6009ca1d92cef93688a31154742a36","filename":"common/src/main/java/org/apache/syncope/common/services/TaskService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -30,6 +30,8 @@\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n \r\n import org.apache.syncope.common.to.JobClassTO;\r\n import org.apache.syncope.common.to.ReportExecTO;\r\n@@ -146,4 +148,8 @@ List<? extends TaskTO> list(@PathParam(\"type\") TaskType taskType, @QueryParam(\"p\n     @PUT\r\n     @Path(\"{taskId}\")\r\n     void update(@PathParam(\"taskId\") Long taskId, TaskTO taskTO);\r\n+    \r\n+    @POST\r\n+    @Path(\"bulk\")\r\n+    BulkActionRes bulkAction(BulkAction bulkAction);\r\n }\r"},{"sha":"528802dc4c71f7442a2bc1a8da3e572f393457f9","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAction.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -32,7 +32,9 @@ public enum Type {\n \n         DELETE,\n         REACTIVATE,\n-        SUSPEND\n+        SUSPEND,\n+        DRYRUN,\n+        EXECUTE\n \n     }\n "},{"sha":"5a720b743790f28f190ee079d69c7060b58fc9d0","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionModalPage.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -107,6 +107,12 @@ public IModel<T> model(T object) {\n                 case REACTIVATE:\n                     bulkAction.setOperation(BulkAction.Type.REACTIVATE);\n                     break;\n+                case EXECUTE:\n+                    bulkAction.setOperation(BulkAction.Type.EXECUTE);\n+                    break;\n+                case DRYRUN:\n+                    bulkAction.setOperation(BulkAction.Type.DRYRUN);\n+                    break;\n                 default:\n                     LOG.error(\"Bulk action type not supported\");\n             }\n@@ -148,9 +154,7 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n \n     private Object getTargetId(final Object target, final String idFieldName)\n             throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n-        final PropertyDescriptor propDesc =\n-                BeanUtils.getPropertyDescriptor(target.getClass(), idFieldName);\n-        final Object id = propDesc.getReadMethod().invoke(target, new Object[0]);\n-        return id;\n+        final PropertyDescriptor propDesc = BeanUtils.getPropertyDescriptor(target.getClass(), idFieldName);\n+        return propDesc.getReadMethod().invoke(target, new Object[0]);\n     }\n }"},{"sha":"f48f46fc358a3c62eea7f8d8ad807e8016a1003d","filename":"console/src/main/java/org/apache/syncope/console/pages/Tasks.java","status":"modified","additions":24,"deletions":6,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console.pages;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n@@ -27,15 +28,19 @@\n import org.apache.syncope.common.to.TaskExecTO;\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.console.pages.panels.AjaxDataTablePanel;\n import org.apache.syncope.console.pages.panels.NotificationTasks;\n import org.apache.syncope.console.pages.panels.PropagationTasks;\n import org.apache.syncope.console.pages.panels.SchedTasks;\n import org.apache.syncope.console.pages.panels.SyncTasks;\n+import org.apache.syncope.console.rest.BaseRestClient;\n import org.apache.syncope.console.rest.TaskRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n@@ -54,6 +59,8 @@ public Tasks(final PageParameters parameters) {\n         add(new NotificationTasks(\"notification\", getPageReference()));\n         add(new SchedTasks(\"sched\", getPageReference()));\n         add(new SyncTasks(\"sync\", getPageReference()));\n+\n+        getPageReference();\n     }\n \n     @Override\n@@ -189,14 +196,25 @@ public IModel<T> model(final T object) {\n      * @param currentPage current page index.\n      * @return data table.\n      */\n-    public static AjaxFallbackDefaultDataTable<TaskTO, String> updateTaskTable(\n+    public static AjaxDataTablePanel<TaskTO, String> updateTaskTable(\n             final List<IColumn<TaskTO, String>> columns,\n             final TasksProvider dataProvider,\n             final WebMarkupContainer container,\n-            final int currentPage) {\n-\n-        final AjaxFallbackDefaultDataTable<TaskTO, String> table = new AjaxFallbackDefaultDataTable<TaskTO, String>(\n-                \"datatable\", columns, dataProvider, dataProvider.paginatorRows);\n+            final int currentPage,\n+            final PageReference pageRef,\n+            final BaseRestClient restClient) {\n+\n+        final AjaxDataTablePanel<TaskTO, String> table = new AjaxDataTablePanel<TaskTO, String>(\n+                \"datatable\",\n+                columns,\n+                (ISortableDataProvider<TaskTO, String>) dataProvider,\n+                dataProvider.paginatorRows,\n+                Arrays.asList(new ActionLink.ActionType[]{\n+                    ActionLink.ActionType.DELETE, ActionLink.ActionType.DRYRUN, ActionLink.ActionType.EXECUTE}),\n+                restClient,\n+                \"id\",\n+                \"Tasks\",\n+                pageRef);\n \n         table.setCurrentPage(currentPage);\n         table.setOutputMarkupId(true);"},{"sha":"48f5e5e641604625c7c977b6173a13ddef30290b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":28,"deletions":12,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -40,8 +40,8 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -54,7 +54,7 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -85,7 +85,7 @@ public class NotificationTasks extends Panel {\n \n     private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n+    private AjaxDataTablePanel<TaskTO, String> table;\n \n     public NotificationTasks(final String id, final PageReference pageRef) {\n         super(id);\n@@ -100,15 +100,20 @@ public NotificationTasks(final String id, final PageReference pageRef) {\n \n         columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"sender\", this, null), \"sender\", \"sender\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"recipients\", this, null), \"recipients\", \"recipients\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"subject\", this, null), \"subject\", \"subject\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"traceLevel\", this, null), \"traceLevel\", \"traceLevel\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -189,7 +194,9 @@ public void onClick(final AjaxRequestTarget target) {\n                 columns,\n                 new TasksProvider<NotificationTaskTO>(restClient, paginatorRows, getId(), NotificationTaskTO.class),\n                 container,\n-                0);\n+                0,\n+                pageRef,\n+                restClient);\n \n         container.add(table);\n \n@@ -262,7 +269,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new TasksProvider<NotificationTaskTO>(restClient, paginatorRows, getId(),\n                         NotificationTaskTO.class),\n                         container,\n-                        table == null ? 0 : (int) table.getCurrentPage());\n+                        table == null ? 0 : (int) table.getCurrentPage(),\n+                        pageRef,\n+                        restClient);\n \n                 target.add(container);\n             }\n@@ -271,4 +280,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n     }\n+    \n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n+            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(container);\n+        }\n+    }\n }"},{"sha":"14d65ca252f0a3b46b5dd4b1050b03f3da538835","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":32,"deletions":15,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.console.pages.PropagationTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Tasks.TasksProvider;\n+import org.apache.syncope.console.pages.panels.AbstractSearchResultPanel.EventDataWrapper;\n import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n@@ -41,8 +42,8 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -55,7 +56,7 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -89,7 +90,7 @@ public class PropagationTasks extends Panel {\n \n     private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n+    private AjaxDataTablePanel<TaskTO, String> table;\n \n     public PropagationTasks(final String id, final PageReference pageRef) {\n         super(id);\n@@ -104,26 +105,31 @@ public PropagationTasks(final String id, final PageReference pageRef) {\n \n         columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"accountId\"), \"accountId\", \"accountId\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"resource\", this, null), \"resource\", \"resource\"));\n \n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"propagationMode\"), \"propagationMode\", \"propagationMode\"));\n+                new StringResourceModel(\"accountId\", this, null), \"accountId\", \"accountId\"));\n \n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"propagationOperation\"), \"propagationOperation\", \"propagationOperation\"));\n+                new StringResourceModel(\"propagationMode\", this, null), \"propagationMode\", \"propagationMode\"));\n \n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new StringResourceModel(\n+                \"propagationOperation\", this, null), \"propagationOperation\", \"propagationOperation\"));\n \n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"startDate\", this, null), \"startDate\", \"startDate\"));\n+\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"endDate\", this, null), \"endDate\", \"endDate\"));\n \n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -204,7 +210,9 @@ public void onClick(final AjaxRequestTarget target) {\n                 columns,\n                 new TasksProvider<PropagationTaskTO>(restClient, paginatorRows, getId(), PropagationTaskTO.class),\n                 container,\n-                0);\n+                0,\n+                pageRef,\n+                restClient);\n \n         window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n@@ -276,7 +284,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new TasksProvider<PropagationTaskTO>(restClient, paginatorRows,\n                         getId(), PropagationTaskTO.class),\n                         container,\n-                        table == null ? 0 : (int) table.getCurrentPage());\n+                        table == null ? 0 : (int) table.getCurrentPage(),\n+                        pageRef,\n+                        restClient);\n \n                 target.add(container);\n             }\n@@ -285,4 +295,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof EventDataWrapper) {\n+            ((EventDataWrapper) event.getPayload()).getTarget().add(container);\n+        }\n+    }\n }"},{"sha":"c6761d4e1a09e0f40f68e9a989eaf0839295e6cc","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":30,"deletions":19,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -42,8 +42,8 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -56,7 +56,7 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -85,7 +85,7 @@ public class SchedTasks extends Panel {\n \n     private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n+    private AjaxDataTablePanel<TaskTO, String> table;\n \n     public SchedTasks(final String id, final PageReference pageRef) {\n \n@@ -108,22 +108,22 @@ public SchedTasks(final String id, final PageReference pageRef) {\n \n         columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"description\"), \"description\", \"description\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n-\n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n-\n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n-\n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"description\", this, null), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"class\", this, null), \"jobClassName\", \"jobClassName\"));\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"lastExec\", this, null), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -221,7 +221,9 @@ public void onClick(final AjaxRequestTarget target) {\n                 columns,\n                 new TasksProvider<SchedTaskTO>(restClient, paginatorRows, getId(), SchedTaskTO.class),\n                 container,\n-                0);\n+                0,\n+                pageRef,\n+                restClient);\n \n         container.add(table);\n \n@@ -274,7 +276,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         columns,\n                         new TasksProvider<SchedTaskTO>(restClient, paginatorRows, getId(), SchedTaskTO.class),\n                         container,\n-                        table == null ? 0 : (int) table.getCurrentPage());\n+                        table == null ? 0 : (int) table.getCurrentPage(),\n+                        pageRef,\n+                        restClient);\n \n                 target.add(container);\n             }\n@@ -308,4 +312,11 @@ public Page createPage() {\n \n         add(createLink);\n     }\n+    \n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n+            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(container);\n+        }\n+    }\n }"},{"sha":"e49a68f7005c798f2bf7d6be2bad70d1694d777b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":30,"deletions":20,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -44,8 +44,8 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -58,7 +58,7 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -87,7 +87,7 @@ public class SyncTasks extends Panel {\n \n     private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n+    private AjaxDataTablePanel<TaskTO, String> table;\n \n     public SyncTasks(final String id, final PageReference pageRef) {\n         super(id);\n@@ -109,22 +109,21 @@ public SyncTasks(final String id, final PageReference pageRef) {\n \n         columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"description\"), \"description\", \"description\"));\n-\n-        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n-\n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n-\n-        columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n-\n         columns.add(new PropertyColumn<TaskTO, String>(\n-                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n-\n-        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"description\", this, null), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"resourceName\", this, null), \"resource\", \"resource\"));\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"lastExec\", this, null), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn<TaskTO>(\n+                new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new AbstractColumn<TaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -265,7 +264,9 @@ public void onClick(final AjaxRequestTarget target) {\n                 columns,\n                 new TasksProvider<SyncTaskTO>(restClient, paginatorRows, getId(), SyncTaskTO.class),\n                 container,\n-                0);\n+                0,\n+                pageRef,\n+                restClient);\n \n         container.add(table);\n \n@@ -317,7 +318,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         columns,\n                         new TasksProvider<SyncTaskTO>(restClient, paginatorRows, getId(), SyncTaskTO.class),\n                         container,\n-                        table == null ? 0 : (int) table.getCurrentPage());\n+                        table == null ? 0 : (int) table.getCurrentPage(),\n+                        pageRef,\n+                        restClient);\n \n                 target.add(container);\n             }\n@@ -352,4 +355,11 @@ public Page createPage() {\n \n         add(createLink);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n+            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(container);\n+        }\n+    }\n }"},{"sha":"7dd1236baaa13209fa942868b8d1ae36d7af5207","filename":"console/src/main/java/org/apache/syncope/console/rest/TaskRestClient.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -21,6 +21,9 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.services.TaskService;\n+import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.JobClassTO;\n import org.apache.syncope.common.to.NotificationTaskTO;\n import org.apache.syncope.common.to.PropagationTaskTO;\n@@ -164,4 +167,8 @@ public void updateSchedTask(final SchedTaskTO taskTO) {\n     public void updateSyncTask(final SyncTaskTO taskTO) {\n         getService(TaskService.class).update(taskTO.getId(), taskTO);\n     }\n+\n+    public BulkActionRes bulkAction(final BulkAction action) {\n+        return getService(TaskService.class).bulkAction(action);\n+    }\n }"},{"sha":"45c67c68e2c9822361663dbba685a1f006f5e543","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.html","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -16,24 +16,6 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n-    <style type=\"text/css\">\n-        /* Style for autocomplete field */\n-        div.wicket-aa {\n-            font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n-            font-size: 12px;\n-            background-color: white;\n-            border-width: 1px;\n-            border-color: #cccccc;\n-            border-style: solid;\n-            padding: 2px;\n-            margin: 1px 0 0 0;\n-            text-align:left;\n-        }\n-        div.wicket-aa ul { list-style:none; padding: 2px; margin:0; }\n-        div.wicket-aa ul li.selected { background-color: #FFFF00; padding: 2px; margin:0; }\n-    </style>\n-</wicket:head>\n <wicket:extend>\n     <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n <div style=\"margin:10px\">"},{"sha":"2d3294218bfbd70aa9bbb32bbe249dcf8a6a6377","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/NotificationTasks.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -42,8 +42,7 @@\n         <a wicket:id=\"reload\">\n           <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n         </a>\n-        <table class=\"ui-widget ui-widget-content table-hover\"\n-               wicket:id=\"datatable\"/>\n+        <span wicket:id=\"datatable\">[datatabel]</span>\n       </span>\n \n       <span style=\"float:right\">"},{"sha":"28fae5f0df68d4bd1edb0ce054b3e51702b628aa","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PropagationTasks.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -42,8 +42,7 @@\n         <a wicket:id=\"reload\">\n           <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n         </a>\n-        <table class=\"ui-widget ui-widget-content table-hover\"\n-               wicket:id=\"datatable\"/>\n+        <span wicket:id=\"datatable\">[datatabel]</span>\n       </span>\n       <span style=\"float:right\">\n         <form wicket:id=\"PaginatorForm\" style=\"display:inline\">"},{"sha":"3b0e3d11f7d65fe3899fc3ae72c092cecd5558a4","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -42,8 +42,7 @@\n         <a wicket:id=\"reload\">\n           <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n         </a>\n-        <table class=\"ui-widget ui-widget-content table-hover\"\n-               wicket:id=\"datatable\"/>\n+        <span wicket:id=\"datatable\">[datatabel]</span>\n       </span>\n \n       <span style=\"float:right\">"},{"sha":"4c2a1dbc3428cb4561d6b73777a909e7f193ec40","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SyncTasks.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -42,8 +42,7 @@\n         <a wicket:id=\"reload\">\n           <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n         </a>\n-        <table class=\"ui-widget ui-widget-content table-hover\"\n-               wicket:id=\"datatable\"/>\n+        <span wicket:id=\"datatable\">[datatable]</span>\n       </span>\n \n       <span style=\"float:right\">"},{"sha":"c7f6dfd5fc91276b90b861809fc2487df88ce62e","filename":"console/src/main/webapp/css/style.css","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -459,4 +459,28 @@ td.action{\n \n .tree-junction-expanded {\n   display: none;\n-}\n\\ No newline at end of file\n+}\n+\n+/* Style for autocomplete field */ \n+div.wicket-aa { \n+  font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n+  font-size: 12px;\n+  background-color: white;\n+  border-width: 1px;\n+  border-color: #cccccc;\n+  border-style: solid; \n+  padding: 2px;\n+  margin: 1px 0 0 0;\n+  text-align:left;\n+}\n+div.wicket-aa ul {\n+  list-style:none;\n+  padding: 2px; \n+  margin:0;\n+}\n+div.wicket-aa ul li.selected {\n+  background-color: #FFFF00;\n+  padding: 2px;\n+  margin:0;\n+}\n+"},{"sha":"111a9ccf129c76e80d376fc0b2b843f70f565d99","filename":"console/src/main/webapp/scripts/jquery-ui.js","status":"modified","additions":389,"deletions":14912,"changes":15301,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-ui.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-ui.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-ui.js?ref=03f524c271960f893d51f39ed6527514ef381089"},{"sha":"2c1a7b9319173d936e6a9cc9e21e80c308391ede","filename":"console/src/test/java/org/apache/syncope/console/TaskTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -29,11 +29,11 @@ public void execute() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n-        selenium.click(\"//*[div=1]/../td[9]/div/span[3]/a\");\n+        selenium.click(\"//*[div=1]/../td[10]/div/span[3]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n \n-        selenium.click(\"//*[div=1]/../td[9]/div/span[9]/a\");\n+        selenium.click(\"//*[div=1]/../td[10]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/div/span/div/div/div[2]/span/input\\\");\", \"30000\");\n@@ -50,7 +50,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n-        selenium.click(\"//table/tbody/tr/td[7]/div/span[11]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[11]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"6ff60e2a001ccd8d5afb7d87b997883582eaa997","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -23,6 +23,8 @@\n import java.util.List;\n import java.util.Set;\n import javax.servlet.http.HttpServletResponse;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.SchedTaskTO;\n import org.apache.syncope.common.to.SyncTaskTO;\n import org.apache.syncope.common.to.TaskExecTO;\n@@ -439,4 +441,53 @@ public TaskExecTO deleteExecution(@PathVariable(\"executionId\") final Long execut\n                 \"Successfully deleted task execution: \" + taskExec.getId());\n         return taskExecutionToDelete;\n     }\n+\n+    @PreAuthorize(\"(hasRole('TASK_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE) or \"\n+    + \"(hasRole('TASK_EXECUTE') and \"\n+    + \"(#bulkAction.operation == #bulkAction.operation.EXECUTE or \"\n+    + \"#bulkAction.operation == #bulkAction.operation.DRYRUN))\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/bulk\")\n+    public BulkActionRes bulkAction(@RequestBody final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+\n+        BulkActionRes res = new BulkActionRes();\n+\n+        switch (bulkAction.getOperation()) {\n+            case DELETE:\n+                for (String taskId : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(delete(Long.valueOf(taskId)).getId(), BulkActionRes.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing delete for task {}\", taskId, e);\n+                        res.add(taskId, BulkActionRes.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            case DRYRUN:\n+                for (String taskId : bulkAction.getTargets()) {\n+                    try {\n+                        execute(Long.valueOf(taskId), true);\n+                        res.add(taskId, BulkActionRes.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing dryrun for task {}\", taskId, e);\n+                        res.add(taskId, BulkActionRes.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            case EXECUTE:\n+                for (String taskId : bulkAction.getTargets()) {\n+                    try {\n+                        execute(Long.valueOf(taskId), false);\n+                        res.add(taskId, BulkActionRes.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing execute for task {}\", taskId, e);\n+                        res.add(taskId, BulkActionRes.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            default:\n+        }\n+\n+        return res;\n+    }\n }"},{"sha":"033adbc1fb841ccc79ddd30286badedb52dd55eb","filename":"core/src/main/java/org/apache/syncope/core/services/TaskServiceImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03f524c271960f893d51f39ed6527514ef381089/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03f524c271960f893d51f39ed6527514ef381089/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java?ref=03f524c271960f893d51f39ed6527514ef381089","patch":"@@ -26,6 +26,8 @@\n import javax.ws.rs.core.UriInfo;\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.TaskService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.JobClassTO;\r\n import org.apache.syncope.common.to.NotificationTaskTO;\r\n import org.apache.syncope.common.to.PropagationTaskTO;\r\n@@ -154,4 +156,9 @@ public void update(final Long taskId, final TaskTO taskTO) {\n     public void setUriInfo(final UriInfo ui) {\r\n         this.uriInfo = ui;\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(BulkAction bulkAction) {\r\n+        return taskController.bulkAction(bulkAction);\r\n+    }\r\n }\r"}]}