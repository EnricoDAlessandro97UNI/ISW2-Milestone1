{"sha":"44429a17dd83236caa82617a6f3dc5bbd79cde8f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ0NDI5YTE3ZGQ4MzIzNmNhYTgyNjE3YTZmM2RjNWJiZDc5Y2RlOGY=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-29T14:08:34Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-29T14:08:34Z"},"message":"[SYNCOPE-231]\n* Fixing UserServiceImpl annotations\n* Code Cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439899 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d2546ac482c8614b27e32fbc7f3f3599cb4785d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d2546ac482c8614b27e32fbc7f3f3599cb4785d9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/44429a17dd83236caa82617a6f3dc5bbd79cde8f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44429a17dd83236caa82617a6f3dc5bbd79cde8f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44429a17dd83236caa82617a6f3dc5bbd79cde8f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44429a17dd83236caa82617a6f3dc5bbd79cde8f/comments","author":null,"committer":null,"parents":[{"sha":"4c1884bfee4ab2fba7c428768c43da2ebdba961a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c1884bfee4ab2fba7c428768c43da2ebdba961a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c1884bfee4ab2fba7c428768c43da2ebdba961a"}],"stats":{"total":37,"additions":19,"deletions":18},"files":[{"sha":"1ca5bce78b60d62bb1172c4926f47dd8cec9b6e3","filename":"core/src/main/java/org/apache/syncope/core/services/LoggerServiceImpl.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java?ref=44429a17dd83236caa82617a6f3dc5bbd79cde8f","patch":"@@ -18,6 +18,7 @@\n  */\r\n package org.apache.syncope.core.services;\r\n \r\n+import java.text.ParseException;\r\n import java.util.List;\r\n \r\n import javax.ws.rs.BadRequestException;\r\n@@ -74,7 +75,9 @@ public void update(final LoggerType type, final String name, final LoggerTO logg\n             case AUDIT:\r\n                 try {\r\n                     loggerController.enableAudit(AuditLoggerName.fromLoggerName(name));\r\n-                } catch (Exception e) {\r\n+                } catch (IllegalArgumentException e) {\r\n+                    throw new BadRequestException(e);\r\n+                } catch (ParseException e) {\r\n                     throw new BadRequestException(e);\r\n                 }\r\n                 break;\r\n@@ -94,7 +97,9 @@ public void delete(final LoggerType type, final String name) {\n             case AUDIT:\r\n                 try {\r\n                     loggerController.disableAudit(AuditLoggerName.fromLoggerName(name));\r\n-                } catch (Exception e) {\r\n+                } catch (IllegalArgumentException e) {\r\n+                    throw new BadRequestException(e);\r\n+                } catch (ParseException e) {\r\n                     throw new BadRequestException(e);\r\n                 }\r\n                 break;\r"},{"sha":"976d53234edd21ac0c03e5b9978f877ce7df2525","filename":"core/src/main/java/org/apache/syncope/core/services/ReportServiceImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java?ref=44429a17dd83236caa82617a6f3dc5bbd79cde8f","patch":"@@ -40,12 +40,13 @@\n \n @Service\n public class ReportServiceImpl implements ReportService, ContextAware {\n+\n     @Autowired\n-    ReportController reportController;\n-    \n+    private ReportController reportController;\n+\n     @Autowired\n     private ReportDAO reportDAO;\n-    \n+\n     private UriInfo uriInfo;\n \n     @Override\n@@ -100,6 +101,7 @@ public Response exportExecutionResult(final Long executionId, final ReportExecEx\n         final ReportExecExportFormat format = (fmt == null) ? ReportExecExportFormat.XML : fmt;\n         final ReportExec reportExec = reportController.getAndCheckReportExecInternal(executionId);\n         return Response.ok(new StreamingOutput() {\n+            @Override\n             public void write(final OutputStream os) throws IOException {\n                 reportController.exportExecutionResultInternal(os, reportExec, format);\n             }"},{"sha":"e19ae5becf76f548bb4bf5fd1625ac1dece05abf","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44429a17dd83236caa82617a6f3dc5bbd79cde8f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=44429a17dd83236caa82617a6f3dc5bbd79cde8f","patch":"@@ -21,10 +21,7 @@\n import java.net.URI;\n import java.util.List;\n \n-import javax.ws.rs.MatrixParam;\n import javax.ws.rs.POST;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.core.Context;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriInfo;\n \n@@ -41,24 +38,24 @@\n \n @Service\n public class UserServiceImpl implements UserService, ContextAware {\n+\n     @Autowired\n-    UserController userController;\n-    \n+    private UserController userController;\n+\n     private UriInfo uriInfo;\n \n     @Override\n-    public UserTO activate(final @PathParam(\"userId\") long userId, final String token) {\n+    public UserTO activate(final long userId, final String token) {\n         return userController.activate(userId, token);\n     }\n \n     @Override\n-    public UserTO activate(final long userId, final String token,\n-            final PropagationRequestTO propagationRequestTO) {\n+    public UserTO activate(final long userId, final String token, final PropagationRequestTO propagationRequestTO) {\n         return userController.activate(userId, token, propagationRequestTO);\n     }\n \n     @Override\n-    public UserTO activateByUsername(final String username, final @MatrixParam(\"token\") String token) {\n+    public UserTO activateByUsername(final String username, final String token) {\n         return userController.activate(username, token);\n     }\n \n@@ -133,8 +130,7 @@ public UserTO reactivateByUsername(final String username) {\n     }\n \n     @Override\n-    public UserTO reactivateByUsername(final String username,\n-            PropagationRequestTO propagationRequestTO) {\n+    public UserTO reactivateByUsername(final String username, final PropagationRequestTO propagationRequestTO) {\n         return userController.reactivate(username, propagationRequestTO);\n     }\n \n@@ -204,9 +200,7 @@ public Boolean verifyPassword(final String username, final String password) {\n     }\n \n     @Override\n-    @Context\n     public void setUriInfo(final UriInfo uriInfo) {\n         this.uriInfo = uriInfo;\n     }\n-\n }"}]}