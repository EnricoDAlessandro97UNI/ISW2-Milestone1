{"sha":"8671ee51e7ab2abe77208725c8cadca936f3ea18","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg2NzFlZTUxZTdhYjJhYmU3NzIwODcyNWM4Y2FkY2E5MzZmM2VhMTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:12:15Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:12:15Z"},"message":"[SYNCOPE-641] Merge from master","tree":{"sha":"dbdfa97f9af11f2abd51178d0963767e37370067","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dbdfa97f9af11f2abd51178d0963767e37370067"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8671ee51e7ab2abe77208725c8cadca936f3ea18","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8671ee51e7ab2abe77208725c8cadca936f3ea18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8671ee51e7ab2abe77208725c8cadca936f3ea18","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8671ee51e7ab2abe77208725c8cadca936f3ea18/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e7415a5c312f1ab9ed0502d740323daebcedbc7d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e7415a5c312f1ab9ed0502d740323daebcedbc7d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e7415a5c312f1ab9ed0502d740323daebcedbc7d"}],"stats":{"total":71,"additions":0,"deletions":71},"files":[{"sha":"c7228c32e46051bf7924f2dd0e6a155fbdae0d54","filename":"client/src/test/java/org/apache/syncope/client/ConcurrencyTest.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e7415a5c312f1ab9ed0502d740323daebcedbc7d/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e7415a5c312f1ab9ed0502d740323daebcedbc7d/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FConcurrencyTest.java?ref=e7415a5c312f1ab9ed0502d740323daebcedbc7d","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client;\n-\n-import static org.junit.Assert.fail;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.services.ResourceService;\n-import org.junit.Test;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ConcurrencyTest {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConcurrencyTest.class);\n-\n-    private static final SyncopeClient client =\n-            new SyncopeClientFactoryBean().setAddress(\"http://url\").create(\"username\", \"password\");\n-\n-    @Test\n-    public void multiThreadTest()\n-            throws InterruptedException {\n-\n-        for (int i = 0; i < 10000; i++) {\n-            Thread execution = new Thread(\"Th-\" + StringUtils.leftPad(String.valueOf(i), 5, '0')) {\n-\n-                @Override\n-                public void run() {\n-\n-                    try {\n-                        client.getService(ResourceService.class);\n-\n-                        LOG.info(getName() + \" completed successfully!\");\n-                    } catch (Exception e) {\n-                        LOG.error(getName() + \" did not complete\", e);\n-                    }\n-                }\n-            };\n-            execution.start();\n-        }\n-\n-        Thread.sleep(10000);\n-    }\n-\n-    @Test\n-    public void multiCallTest() {\n-        try {\n-            for (int i = 0; i < 10000; i++) {\n-                client.getService(ResourceService.class);\n-            }\n-        } catch (Exception e) {\n-            fail(e.getMessage());\n-        }\n-    }\n-}"}]}