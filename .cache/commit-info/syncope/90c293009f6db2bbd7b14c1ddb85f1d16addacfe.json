{"sha":"90c293009f6db2bbd7b14c1ddb85f1d16addacfe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkwYzI5MzAwOWY2ZGIyYmJkN2IxNGMxZGRiODVmMWQxNmFkZGFjZmU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-07-28T10:33:42Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-07-28T10:33:42Z"},"message":"provided create and update functionalities for tasks\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247055 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c5e758d3f412159a2c614148cf98c6d65c375a2d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c5e758d3f412159a2c614148cf98c6d65c375a2d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/90c293009f6db2bbd7b14c1ddb85f1d16addacfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/90c293009f6db2bbd7b14c1ddb85f1d16addacfe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/90c293009f6db2bbd7b14c1ddb85f1d16addacfe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/comments","author":null,"committer":null,"parents":[{"sha":"60feab587b814e97456dc23c242bc54001d81c60","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/60feab587b814e97456dc23c242bc54001d81c60","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/60feab587b814e97456dc23c242bc54001d81c60"}],"stats":{"total":214,"additions":110,"deletions":104},"files":[{"sha":"14925c05310202a3d704878468ed04f17cd050e2","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -71,9 +71,9 @@ public final class Constants {\n     public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n \n     /* DATE FORMATS FOR TASKS */\n-    public static final String ITALIAN_DATE_FORMAT = \"dd/MM/yyyy hh:mm:ss\";\n+    public static final String ITALIAN_DATE_FORMAT = \"dd/MM/yyyy HH:mm:ss\";\n \n-    public static final String ENGLISH_DATE_FORMAT = \"MM/dd/yyyy hh:mm:ss\";\n+    public static final String ENGLISH_DATE_FORMAT = \"MM/dd/yyyy HH:mm:ss\";\n \n     public static final String[] SCHEMA_FIELDS = {\"name\", \"type\"};\n "},{"sha":"50bb32ad21b4564e82c6b4de4e006b5b05d4f17f","filename":"console/src/main/java/org/syncope/console/pages/GenericTasks.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGenericTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGenericTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGenericTasks.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -51,6 +51,7 @@\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -111,11 +112,11 @@ public GenericTasks(String id) {\n         columns.add(new PropertyColumn(\n                 new Model(getString(\"class\")), \"jobClassName\", \"jobClassName\"));\n \n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"lastExec\")), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn(new Model(getString(\"lastExec\")),\n+                \"lastExec\", \"lastExec\", null));\n \n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"nextExec\")), \"nextExec\", \"nextExec\"));\n+        columns.add(new DatePropertyColumn(new Model(getString(\"nextExec\")),\n+                \"nextExec\", \"nextExec\", null));\n \n         columns.add(new AbstractColumn<SchedTaskTO>(\n                 new Model<String>(getString(\"detail\"))) {\n@@ -307,7 +308,7 @@ public Page createPage() {\n \n         MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER,\n                 xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n-        \n+\n         add(createLink);\n     }\n \n@@ -319,8 +320,7 @@ public TasksProvider() {\n             super();\n             //Default sorting\n             setSort(\"id\", true);\n-            comparator =\n-                    new SortableDataProviderComparator<SchedTaskTO>(this);\n+            comparator = new SortableDataProviderComparator<SchedTaskTO>(this);\n         }\n \n         @Override"},{"sha":"d864ced251fdf526335dff51009328f34359b1ff","filename":"console/src/main/java/org/syncope/console/pages/STaskModalPage.java","status":"modified","additions":33,"deletions":22,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSTaskModalPage.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -17,7 +17,9 @@\n package org.syncope.console.pages;\n \n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.CheckBox;\n@@ -77,12 +79,23 @@ protected List<String> load() {\n                     }\n                 };\n \n-        final IModel<List<RoleTO>> allRoles =\n-                new LoadableDetachableModel<List<RoleTO>>() {\n+        final IModel<Map<Long, String>> allRoles =\n+                new LoadableDetachableModel<Map<Long, String>>() {\n \n                     @Override\n-                    protected List<RoleTO> load() {\n-                        return roleRestClient.getAllRoles();\n+                    protected Map<Long, String> load() {\n+                        final Map<Long, String> allRoles =\n+                                new HashMap<Long, String>();\n+\n+                        List<RoleTO> roles = roleRestClient.getAllRoles();\n+\n+                        if (roles != null) {\n+                            for (RoleTO role : roles) {\n+                                allRoles.put(role.getId(), role.getName());\n+                            }\n+                        }\n+\n+                        return allRoles;\n                     }\n                 };\n \n@@ -99,33 +112,31 @@ protected List<RoleTO> load() {\n                 Model.of(taskTO.isUpdateIdentities()));\n         profile.add(updates);\n \n-        final List<String> availableResources = new ArrayList<String>();\n-        for (String resourceName : allResources.getObject()) {\n-            if (!taskTO.getDefaultResources().contains(resourceName)) {\n-                availableResources.add(resourceName);\n-            }\n-        }\n-\n         final Palette<String> defaultResources = new Palette(\n                 \"defaultResources\",\n                 new PropertyModel(taskTO, \"defaultResources\"),\n-                new ListModel<String>(availableResources),\n+                new ListModel<String>(allResources.getObject()),\n                 new SelectChoiceRenderer(), 8, false);\n \n         form.add(defaultResources);\n \n-        final List<RoleTO> availableRoles = new ArrayList<RoleTO>();\n-        for (RoleTO roleTO : allRoles.getObject()) {\n-            if (!taskTO.getDefaultRoles().contains(roleTO.getId())) {\n-                availableRoles.add(roleTO);\n-            }\n-        }\n-\n-        final Palette<ResourceTO> defaultRoles = new Palette(\n+        final Palette<Long> defaultRoles = new Palette(\n                 \"defaultRoles\",\n                 new PropertyModel(taskTO, \"defaultRoles\"),\n-                new ListModel<RoleTO>(availableRoles),\n-                new ChoiceRenderer(\"name\", \"id\"), 8, false);\n+                new ListModel<Long>(\n+                new ArrayList<Long>(allRoles.getObject().keySet())),\n+                new ChoiceRenderer<Long>() {\n+\n+                    @Override\n+                    public String getDisplayValue(Long id) {\n+                        return allRoles.getObject().get(id);\n+                    }\n+\n+                    @Override\n+                    public String getIdValue(Long id, int index) {\n+                        return id.toString();\n+                    }\n+                }, 8, false);\n \n         form.add(defaultRoles);\n     }"},{"sha":"3d963fbb4a74b39c459f71209d16cb78b416df32","filename":"console/src/main/java/org/syncope/console/pages/SchedTaskModalPage.java","status":"modified","additions":24,"deletions":2,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -29,6 +29,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.syncope.client.to.SchedTaskTO;\n+import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.SelectChoiceRenderer;\n \n@@ -142,14 +143,35 @@ protected void onSubmit(\n                     final Form form) {\n \n                 SchedTaskTO taskTO = (SchedTaskTO) form.getModelObject();\n+                if (taskTO.getCronExpression() != null\n+                        && taskTO.getCronExpression().isEmpty()) {\n+                    taskTO.setCronExpression(null);\n+                }\n \n                 try {\n                     taskTO.setCronExpression(getCron(\n                             seconds, minutes, hours,\n                             daysOfMonth, months, daysOfWeek));\n \n-                    // update task\n-                    // taskRestClient.update(taskTO);\n+                    if (taskTO.getId() > 0) {\n+                        // update task\n+                        if (taskTO instanceof SyncTaskTO) {\n+                            taskTO = taskRestClient.updateSyncTask(\n+                                    (SyncTaskTO) taskTO);\n+                        } else {\n+                            taskTO = taskRestClient.updateSchedTask(\n+                                    taskTO);\n+                        }\n+                    } else {\n+                        if (taskTO instanceof SyncTaskTO) {\n+                            // create task\n+                            taskTO = taskRestClient.createSyncTask(\n+                                    (SyncTaskTO) taskTO);\n+                        } else {\n+                            taskTO = taskRestClient.createSchedTask(\n+                                    taskTO);\n+                        }\n+                    }\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     LOG.error(\"While creating or updating task\", e);"},{"sha":"43aa510976b991e6eff5b77def90f714616800cf","filename":"console/src/main/java/org/syncope/console/pages/SyncTasks.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTasks.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -51,6 +51,7 @@\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -111,11 +112,11 @@ public SyncTasks(String id) {\n         columns.add(new PropertyColumn(\n                 new Model(getString(\"resourceName\")), \"resource\", \"resource\"));\n \n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"lastExec\")), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn(new Model(getString(\"lastExec\")),\n+                \"lastExec\", \"lastExec\", null));\n \n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"nextExec\")), \"nextExec\", \"nextExec\"));\n+        columns.add(new DatePropertyColumn(new Model(getString(\"nextExec\")),\n+                \"nextExec\", \"nextExec\", null));\n \n         columns.add(new AbstractColumn<SyncTaskTO>(\n                 new Model<String>(getString(\"detail\"))) {"},{"sha":"8ec8d120b3291fc1f95b450bb4e22a6c544d80d6","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":1,"deletions":45,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -16,17 +16,13 @@\n  */\n package org.syncope.console.pages;\n \n-import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.syncope.console.commons.Constants;\n-import org.apache.wicket.datetime.DateConverter;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n@@ -49,6 +45,7 @@\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.SortableDataProviderComparator;\n+import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -239,47 +236,6 @@ public List<TaskExecTO> getTaskDB() {\n         }\n     }\n \n-    /**\n-     * Format column's value as date string.\n-     */\n-    protected class DatePropertyColumn<T> extends PropertyColumn<T> {\n-\n-        private SimpleDateFormat formatter;\n-\n-        public DatePropertyColumn(\n-                IModel<String> displayModel, String sortProperty,\n-                String propertyExpression, DateConverter converter) {\n-            super(displayModel, sortProperty, propertyExpression);\n-\n-            String language = \"en\";\n-            if (getSession().getLocale() != null) {\n-                language = getSession().getLocale().getLanguage();\n-            }\n-\n-            if (\"it\".equals(language)) {\n-                formatter = new SimpleDateFormat(Constants.ITALIAN_DATE_FORMAT);\n-            } else {\n-                formatter = new SimpleDateFormat(Constants.ENGLISH_DATE_FORMAT);\n-            }\n-        }\n-\n-        @Override\n-        public void populateItem(\n-                Item<ICellPopulator<T>> item, String componentId,\n-                IModel<T> rowModel) {\n-            IModel date = (IModel<Date>) createLabelModel(rowModel);\n-\n-            String convertedDate = \"\";\n-\n-            if (date.getObject() != null) {\n-                convertedDate = formatter.format(date.getObject());\n-                item.add(new Label(componentId, convertedDate));\n-            } else {\n-                item.add(new Label(componentId, convertedDate));\n-            }\n-        }\n-    }\n-\n     protected String getCronField(\n             final FormComponent formComponent, final int field) {\n         String cronField = null;"},{"sha":"cbfdf8850eb5f9bebb64d51d7607ff4203e1e916","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -30,6 +30,8 @@\n import org.apache.wicket.util.convert.converters.DateConverter;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.TaskTO;\n+import org.syncope.console.SyncopeApplication;\n+import org.syncope.console.SyncopeSession;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.commons.SelectOption;\n@@ -46,7 +48,7 @@ public class Tasks extends BasePage {\n         new SelectOption(\n         \"Fire at 12am (midnight) every Last day of the month\", \"0 0 0 L * ?\"),\n         new SelectOption(\n-        \"Fire at 12am (midnight) every Monday\", \"0 0 0 ? ? 2\")\n+        \"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\")\n     };\n \n     public Tasks(final PageParameters parameters) {\n@@ -107,7 +109,7 @@ public List<TaskExecTO> getTaskDB() {\n     /**\n      * Format column's value as date string.\n      */\n-    public class DatePropertyColumn<T> extends PropertyColumn<T> {\n+    public static class DatePropertyColumn<T> extends PropertyColumn<T> {\n \n         private SimpleDateFormat formatter;\n \n@@ -117,8 +119,8 @@ public DatePropertyColumn(\n             super(displayModel, sortProperty, propertyExpression);\n \n             String language = \"en\";\n-            if (getSession().getLocale() != null) {\n-                language = getSession().getLocale().getLanguage();\n+            if (SyncopeSession.get().getLocale() != null) {\n+                language = SyncopeSession.get().getLocale().getLanguage();\n             }\n \n             if (\"it\".equals(language)) {"},{"sha":"7c8f036de6e75804afa3e00890011d55315ece52","filename":"console/src/main/java/org/syncope/console/rest/TaskRestClient.java","status":"modified","additions":32,"deletions":18,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/90c293009f6db2bbd7b14c1ddb85f1d16addacfe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=90c293009f6db2bbd7b14c1ddb85f1d16addacfe","patch":"@@ -18,6 +18,8 @@\n import java.util.List;\n import java.util.Set;\n import org.springframework.stereotype.Component;\n+import org.syncope.client.mod.SchedTaskMod;\n+import org.syncope.client.mod.SyncTaskMod;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n@@ -97,24 +99,6 @@ public List<PropagationTaskTO> listPropagationTasks(\n                 PropagationTaskTO[].class, page, size));\n     }\n \n-    /**\n-     * Load an existing task.\n-     * @param taskId task to read.\n-     * @return TaskTO object if the configuration exists, null otherwise.\n-     */\n-    public PropagationTaskTO read(final String taskId) {\n-        PropagationTaskTO taskTO = null;\n-        try {\n-            taskTO = restTemplate.getForObject(\n-                    baseURL + \"task/read/{taskId}\",\n-                    PropagationTaskTO.class, taskId);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading a task\", e);\n-        }\n-\n-        return taskTO;\n-    }\n-\n     /**\n      * Get all executions.\n      * @return list of all executions\n@@ -153,4 +137,34 @@ public void deleteExecution(final Long taskExecId) {\n         restTemplate.delete(baseURL\n                 + \"task/execution/delete/{execId}\", taskExecId);\n     }\n+\n+    public SyncTaskTO createSyncTask(final SyncTaskTO taskTO) {\n+        return restTemplate.postForObject(baseURL\n+                + \"task/create/sync\", taskTO, SyncTaskTO.class);\n+    }\n+\n+    public SchedTaskTO createSchedTask(final SchedTaskTO taskTO) {\n+        return restTemplate.postForObject(baseURL\n+                + \"task/create/sched\", taskTO, SchedTaskTO.class);\n+    }\n+\n+    public SchedTaskTO updateSchedTask(final SchedTaskTO taskTO) {\n+        final SchedTaskMod taskMod = new SchedTaskMod();\n+        taskMod.setId(taskTO.getId());\n+        taskMod.setCronExpression(taskTO.getCronExpression());\n+\n+        return restTemplate.postForObject(baseURL\n+                + \"task/update/sched\", taskMod, SchedTaskTO.class);\n+    }\n+\n+    public SyncTaskTO updateSyncTask(final SyncTaskTO taskTO) {\n+        final SyncTaskMod taskMod = new SyncTaskMod();\n+        taskMod.setId(taskTO.getId());\n+        taskMod.setCronExpression(taskTO.getCronExpression());\n+        taskMod.setDefaultResources(taskTO.getDefaultResources());\n+        taskMod.setDefaultRoles(taskTO.getDefaultRoles());\n+\n+        return restTemplate.postForObject(baseURL\n+                + \"task/update/sync\", taskMod, SyncTaskTO.class);\n+    }\n }"}]}