{"sha":"e5bb44d903785433f8966964cd2f6807eb7face4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1YmI0NGQ5MDM3ODU0MzNmODk2Njk2NGNkMmY2ODA3ZWI3ZmFjZTQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-22T14:33:39Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-22T14:33:39Z"},"message":"[SYNCOPE-156] fix for entitlement management + clone operation on user, group and anyobject","tree":{"sha":"2efdfa5f89ec979aee49016d8d179a7f66b28874","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2efdfa5f89ec979aee49016d8d179a7f66b28874"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e5bb44d903785433f8966964cd2f6807eb7face4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5bb44d903785433f8966964cd2f6807eb7face4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5bb44d903785433f8966964cd2f6807eb7face4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5bb44d903785433f8966964cd2f6807eb7face4/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"5279aca98962f2ed0b86687b604776c9c0a5af09","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5279aca98962f2ed0b86687b604776c9c0a5af09","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5279aca98962f2ed0b86687b604776c9c0a5af09"}],"stats":{"total":226,"additions":150,"deletions":76},"files":[{"sha":"b034eda8bd653f0ff4259bf7ab167622d3b862c4","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -82,19 +82,25 @@ public BasePage(final PageParameters parameters) {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"realms\"));\n         add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"realms\", Realms.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.REALM_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"topology\"));\n         add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"topology\", Topology.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER,\n+                String.format(\"%s,%s\", StandardEntitlement.CONNECTOR_LIST, StandardEntitlement.RESOURCE_LIST));\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"reports\"));\n         add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"reports\", Reports.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.REPORT_LIST);\n \n         WebMarkupContainer confLIContainer = new WebMarkupContainer(getLIContainerId(\"configuration\"));\n         add(confLIContainer);\n         WebMarkupContainer confULContainer = new WebMarkupContainer(getULContainerId(\"configuration\"));\n         confLIContainer.add(confULContainer);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                liContainer, WebPage.RENDER, StandardEntitlement.CONFIGURATION_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"securityQuestions\"));\n         confULContainer.add(liContainer);\n@@ -114,6 +120,7 @@ public BasePage(final PageParameters parameters) {\n         final BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n         MetaDataRoleAuthorizationStrategy.authorize(logsLink, WebPage.ENABLE, StandardEntitlement.LOG_LIST);\n         liContainer.add(logsLink);\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.LOG_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"types\"));\n         confULContainer.add(liContainer);\n@@ -124,6 +131,7 @@ public BasePage(final PageParameters parameters) {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"policies\", Policies.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.POLICY_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"layouts\"));\n         confULContainer.add(liContainer);\n@@ -132,6 +140,7 @@ public BasePage(final PageParameters parameters) {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"notifications\"));\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"notifications\", Notifications.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.NOTIFICATION_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"camelRoutes\"));\n         add(liContainer);"},{"sha":"922dacc659e2b2a125fa4c3fcc123801e342a12c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":3,"deletions":13,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.panels.RealmModalPanel;\n@@ -146,10 +145,7 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n \n         deleteLink.add(new ConfirmationModalBehavior());\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.REALM_DELETE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(deleteLink, ENABLE, StandardEntitlement.REALM_DELETE);\n-        }\n+        MetaDataRoleAuthorizationStrategy.authorize(deleteLink, ENABLE, StandardEntitlement.REALM_DELETE);\n \n         content.addOrReplace(deleteLink);\n     }\n@@ -181,10 +177,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             }\n         };\n \n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.REALM_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, StandardEntitlement.REALM_CREATE);\n-        }\n-\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, StandardEntitlement.REALM_CREATE);\n         content.addOrReplace(createLink);\n     }\n \n@@ -214,10 +207,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             }\n         };\n \n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.REALM_UPDATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(editLink, ENABLE, StandardEntitlement.REALM_UPDATE);\n-        }\n-\n+        MetaDataRoleAuthorizationStrategy.authorize(editLink, ENABLE, StandardEntitlement.REALM_UPDATE);\n         content.addOrReplace(editLink);\n     }\n }"},{"sha":"4dcfee5942788135b6b6011ddf1c4afa790dbc04","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":32,"deletions":21,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -25,6 +25,7 @@\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n import org.apache.syncope.client.console.pages.BasePage;\n@@ -42,7 +43,9 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n@@ -65,16 +68,11 @@\n \n     protected final String pageID = \"Any\";\n \n-    protected final String entitlement;\n-\n-    protected AnyObjectSearchResultPanel(\n-            final String id, final AbstractSearchResultPanel.Builder<T> builder, final String entitlement) {\n+    protected AnyObjectSearchResultPanel(final String id, final AbstractSearchResultPanel.Builder<T> builder) {\n         super(id, builder);\n \n         modal.size(Modal.Size.Large);\n \n-        this.entitlement = entitlement;\n-\n         add(new Label(\"name\", builder.type));\n \n         this.schemaNames = new ArrayList<>();\n@@ -146,23 +144,35 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                                 new AnyObjectRestClient().<T>read(model.getObject().getKey())),\n                                         target));\n                     }\n-                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<T>() {\n+                }, ActionLink.ActionType.EDIT, String.format(\"%s_%s\", type, AnyEntitlement.READ)).add(\n+                        new ActionLink<T>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770645L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                        }\n-                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                        final T clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(0L);\n+                        send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<AnyHandler<T>>(new AnyHandler<T>(clone), target));\n                     }\n-                }, ActionLink.ActionType.DELETE, entitlement);\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<T>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770646L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                                try {\n+                                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                                }\n+                                ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, String.format(\"%s_%s\", type, AnyEntitlement.DELETE));\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -184,7 +194,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n+                }, ActionLink.ActionType.CHANGE_VIEW, String.format(\"%s_%s\", type, AnyEntitlement.READ)).add(\n+                        new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -194,7 +205,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement);\n+                }, ActionLink.ActionType.RELOAD, String.format(\"%s_%s\", type, AnyEntitlement.SEARCH));\n \n                 return panel.build(componentId);\n             }\n@@ -243,7 +254,7 @@ public Builder(\n \n         @Override\n         protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String id) {\n-            return new AnyObjectSearchResultPanel<>(id, this, type + \"_LIST\");\n+            return new AnyObjectSearchResultPanel<>(id, this);\n         }\n \n         @Override"},{"sha":"4712328bb80b73cd55947d0c7312d56bf177a448","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -25,6 +25,7 @@\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n@@ -58,8 +59,8 @@ public class GroupSearchResultPanel extends AnyObjectSearchResultPanel<GroupTO>\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected GroupSearchResultPanel(final String id, final Builder builder, final String entitlement) {\n-        super(id, builder, entitlement);\n+    protected GroupSearchResultPanel(final String id, final Builder builder) {\n+        super(id, builder);\n     }\n \n     @Override\n@@ -119,7 +120,18 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                                         new GroupHandler(new GroupRestClient().read(model.getObject().getKey())),\n                                         target));\n                     }\n-                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<GroupTO>() {\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n+                        final GroupTO clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(0L);\n+                        send(GroupSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<GroupHandler>(new GroupHandler(clone), target));\n+                    }\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.GROUP_CREATE).add(new ActionLink<GroupTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -135,7 +147,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, entitlement);\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n \n                 return panel.build(componentId);\n             }\n@@ -156,7 +168,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n+                }, ActionLink.ActionType.CHANGE_VIEW, StandardEntitlement.GROUP_READ).add(\n+                        new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -166,7 +179,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.GROUP_SEARCH).build(componentId);\n             }\n         });\n \n@@ -208,7 +221,7 @@ public Builder(\n \n         @Override\n         protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String id) {\n-            return new GroupSearchResultPanel(id, this, StandardEntitlement.GROUP_SEARCH);\n+            return new GroupSearchResultPanel(id, this);\n         }\n \n         @Override"},{"sha":"73d39e0df88f53888a3bff7a07beae90b56e5fff","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -36,9 +36,13 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.slf4j.Logger;\n@@ -125,6 +129,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                                 BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n                         build(id);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n                 break;\n             case GROUP:\n                 final GroupTO groupTO = new GroupTO();\n@@ -138,6 +143,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                                 BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n                         build(id);\n+                // list of group is available to all authenticated users\n                 break;\n             case ANY_OBJECT:\n                 final AnyObjectTO anyObjectTO = new AnyObjectTO();\n@@ -152,6 +158,8 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n                         build(id);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n+                        String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));\n                 break;\n             default:\n                 panel = new LabelPanel(id, null);"},{"sha":"f1a6fee4c5c743e9c586a179053e9eaf9c75cd3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -29,10 +31,12 @@\n import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.head.IHeaderResponse;\n@@ -151,6 +155,8 @@ protected void onComponentTag(final ComponentTag tag) {\n             fragment.addOrReplace(link);\n             fragment.setOutputMarkupId(true);\n             listItems.addOrReplace(fragment);\n+\n+            MetaDataRoleAuthorizationStrategy.authorize(link, ENABLE, StandardEntitlement.REALM_LIST);\n         }\n \n         return container;"},{"sha":"327d9fcfc0392b26fa2f2d059cd38313ca7faeb6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":23,"deletions":9,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -26,6 +26,7 @@\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.StatusModal;\n@@ -61,8 +62,8 @@ public class UserSearchResultPanel extends AnyObjectSearchResultPanel<UserTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected UserSearchResultPanel(final String id, final Builder builder, final String entitlement) {\n-        super(id, builder, entitlement);\n+    protected UserSearchResultPanel(final String id, final Builder builder) {\n+        super(id, builder);\n     }\n \n     @Override\n@@ -130,7 +131,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                 getString(\"any.edit\"), model.getObject().getKey())));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_LIST).add(new ActionLink<UserTO>() {\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -147,7 +148,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                 getString(\"any.edit\"), model.getObject().getKey())));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.ENABLE, entitlement).add(new ActionLink<UserTO>() {\n+                }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -158,7 +159,19 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                         new AnyHandler<UserTO>(new UserRestClient().read(model.getObject().getKey())),\n                                         target));\n                     }\n-                }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<UserTO>() {\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        final UserTO clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(0L);\n+                        send(UserSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<AnyHandler<UserTO>>(\n+                                        new AnyHandler<UserTO>(clone), target));\n+                    }\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -174,7 +187,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, entitlement);\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.USER_DELETE);\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -195,7 +208,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n+                }, ActionLink.ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).add(\n+                        new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -205,7 +219,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.USER_SEARCH).build(componentId);\n             }\n         });\n \n@@ -247,7 +261,7 @@ public Builder(\n \n         @Override\n         protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String id) {\n-            return new UserSearchResultPanel(id, this, StandardEntitlement.USER_LIST);\n+            return new UserSearchResultPanel(id, this);\n         }\n \n         @Override"},{"sha":"4ed3e68ba171f52cbd6135e3b4f148df6b1a00fa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -55,7 +55,7 @@ public final class GroupSelectionSearchResultPanel extends GroupSearchResultPane\n     private static final long serialVersionUID = -1100228004207271271L;\n \n     private GroupSelectionSearchResultPanel(final String id, final Builder builder) {\n-        super(id, builder, StandardEntitlement.GROUP_SEARCH);\n+        super(id, builder);\n     }\n \n     @Override\n@@ -132,7 +132,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.GROUP_SEARCH).build(componentId);\n             }\n         });\n "},{"sha":"1af99017cfe0169713b126ee10798479c3c3b3dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -55,7 +55,7 @@ public final class UserSelectionSearchResultPanel extends UserSearchResultPanel\n     private static final long serialVersionUID = -1100228004207271272L;\n \n     private UserSelectionSearchResultPanel(final String id, final UserSelectionSearchResultPanel.Builder builder) {\n-        super(id, builder, StandardEntitlement.USER_LIST);\n+        super(id, builder);\n     }\n \n     @Override\n@@ -134,7 +134,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.USER_SEARCH).build(componentId);\n             }\n         });\n "},{"sha":"55bf8f6c2e3480305a0e2108cffaaaf4a781b4df","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AnyEntitlement.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+public enum AnyEntitlement {\n+    SEARCH,\n+    LIST,\n+    CREATE,\n+    READ,\n+    UPDATE,\n+    DELETE;\n+\n+}"},{"sha":"37392a2095af0a1d755c19e1347af42d50d9fd6b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n@@ -101,7 +102,7 @@ public int searchCount(final SearchCond searchCond, final String realm) {\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(searchCond.hasAnyTypeCond(), EntitlementsHolder.AnyEntitlement.SEARCH)),\n+                        getFor(searchCond.hasAnyTypeCond(), AnyEntitlement.SEARCH)),\n                 realm);\n \n         return searchDAO.count(effectiveRealms, searchCond, AnyTypeKind.ANY_OBJECT);\n@@ -118,7 +119,7 @@ public List<AnyObjectTO> search(final SearchCond searchCond, final int page, fin\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(searchCond.hasAnyTypeCond(), EntitlementsHolder.AnyEntitlement.SEARCH)),\n+                        getFor(searchCond.hasAnyTypeCond(), AnyEntitlement.SEARCH)),\n                 realm);\n \n         List<AnyObject> matchingAnyObjects = searchDAO.search(\n@@ -145,7 +146,7 @@ public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO, fin\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(before.getLeft().getType(), EntitlementsHolder.AnyEntitlement.CREATE)),\n+                        getFor(before.getLeft().getType(), AnyEntitlement.CREATE)),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n@@ -167,7 +168,7 @@ public ProvisioningResult<AnyObjectTO> update(\n                 : anyObjectTO.getRealm();\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObjectTO.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObjectTO.getType(), AnyEntitlement.UPDATE)),\n                 realm);\n         securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n@@ -183,7 +184,7 @@ public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean null\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(before.getLeft().getType(), EntitlementsHolder.AnyEntitlement.DELETE)),\n+                        getFor(before.getLeft().getType(), AnyEntitlement.DELETE)),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), before.getLeft().getKey());\n \n@@ -201,7 +202,7 @@ public AnyObjectTO unlink(final Long key, final Collection<String> resources) {\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n \n@@ -224,7 +225,7 @@ public AnyObjectTO link(final Long key, final Collection<String> resources) {\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n \n@@ -249,7 +250,7 @@ public ProvisioningResult<AnyObjectTO> unassign(\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n \n@@ -278,7 +279,7 @@ public ProvisioningResult<AnyObjectTO> assign(\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n \n@@ -303,7 +304,7 @@ public ProvisioningResult<AnyObjectTO> deprovision(\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n \n@@ -327,7 +328,7 @@ public ProvisioningResult<AnyObjectTO> provision(\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), EntitlementsHolder.AnyEntitlement.UPDATE)),\n+                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n                 anyObject.getRealm());\n         securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n "},{"sha":"5a5d09a8f1a377d03feeee215a0bcbf40f7fa7e9","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/EntitlementsHolder.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FEntitlementsHolder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FEntitlementsHolder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FEntitlementsHolder.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -23,17 +23,9 @@\n import java.util.HashSet;\n import java.util.Set;\n \n-public final class EntitlementsHolder {\n-\n-    public enum AnyEntitlement {\n-        SEARCH,\n-        LIST,\n-        CREATE,\n-        READ,\n-        UPDATE,\n-        DELETE;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n \n-    }\n+public final class EntitlementsHolder {\n \n     private static final Object MONITOR = new Object();\n "},{"sha":"659952b754ffd0d83803f1caf97189f1e156aea8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5bb44d903785433f8966964cd2f6807eb7face4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=e5bb44d903785433f8966964cd2f6807eb7face4","patch":"@@ -28,6 +28,7 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.misc.EntitlementsHolder;\n import org.apache.syncope.core.misc.security.AuthContextUtils;\n@@ -64,7 +65,7 @@ protected AnyUtils init() {\n     @Override\n     protected void securityChecks(final AnyObject anyObject) {\n         Set<String> authRealms = AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                getFor(anyObject.getType().getKey(), EntitlementsHolder.AnyEntitlement.READ));\n+                getFor(anyObject.getType().getKey(), AnyEntitlement.READ));\n         boolean authorized = IterableUtils.matchesAny(authRealms, new Predicate<String>() {\n \n             @Override"}]}