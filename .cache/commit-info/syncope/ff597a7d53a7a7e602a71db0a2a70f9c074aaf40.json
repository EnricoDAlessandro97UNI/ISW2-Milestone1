{"sha":"ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZmNTk3YTdkNTNhN2E3ZTYwMmE3MWRiMGEyYTcwZjljMDc0YWFmNDA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-09T04:31:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-09T04:31:05Z"},"message":"[SYNCOPE-1270] Bringing back to JUnit 5 (as it should have been)","tree":{"sha":"edde16413ce88c946dfc2378c04474a80ef42be3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/edde16413ce88c946dfc2378c04474a80ef42be3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d5cfe764bf8853c4f87d74e7b5772da4f9083338","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5cfe764bf8853c4f87d74e7b5772da4f9083338","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5cfe764bf8853c4f87d74e7b5772da4f9083338"}],"stats":{"total":54,"additions":15,"deletions":39},"files":[{"sha":"1e268db593b995e6c50b42970d18f3dd128a333a","filename":"fit/core-reference/pom.xml","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","patch":"@@ -211,30 +211,6 @@ under the License.\n       <artifactId>bcpkix-jdk15on</artifactId>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.seleniumhq.selenium</groupId>\n-      <artifactId>selenium-java</artifactId>\n-      <scope>test</scope>\n-      <version>2.44.0</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.opera</groupId>\n-      <artifactId>operadriver</artifactId>\n-      <scope>test</scope>\n-      <version>1.5</version>\n-      <exclusions>\n-        <exclusion>\n-          <groupId>org.seleniumhq.selenium</groupId>\n-          <artifactId>selenium-remote-driver</artifactId>\n-        </exclusion>\n-      </exclusions>\n-    </dependency>\n-    <dependency>\n-      <groupId>junit</groupId>\n-      <artifactId>junit</artifactId>\n-      <scope>test</scope>\n-      <version>4.11</version>\n-    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"85def669d62907aff37af53f2bd335e5f2657525","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/OIDCClientITCase.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff597a7d53a7a7e602a71db0a2a70f9c074aaf40/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCClientITCase.java?ref=ff597a7d53a7a7e602a71db0a2a70f9c074aaf40","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.fit.core;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -39,18 +40,17 @@\n import org.apache.syncope.common.rest.api.service.OIDCProviderService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.apache.syncope.fit.OIDCClientDetector;\n-import org.junit.AfterClass;\n-import org.junit.Assume;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n \n public class OIDCClientITCase extends AbstractITCase {\n \n     private static SyncopeClient anonymous;\n \n     private static SyncopeClient admin;\n \n-    @BeforeClass\n+    @BeforeAll\n     public static void setup() {\n         anonymous = new SyncopeClientFactoryBean().\n                 setAddress(ADDRESS).\n@@ -61,7 +61,7 @@ public static void setup() {\n                 create(new BasicAuthenticationHandler(ADMIN_UNAME, ADMIN_PWD));\n     }\n \n-    @BeforeClass\n+    @BeforeAll\n     public static void createOIDCProviderWithoutDiscovery() throws Exception {\n         if (!OIDCClientDetector.isOIDCClientAvailable()) {\n             return;\n@@ -82,7 +82,7 @@ public static void createOIDCProviderWithoutDiscovery() throws Exception {\n         admin.getService(OIDCProviderService.class).create(oidcProviderTO);\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void clearProviders() throws Exception {\n         if (!OIDCClientDetector.isOIDCClientAvailable()) {\n             return;\n@@ -95,7 +95,7 @@ public static void clearProviders() throws Exception {\n \n     @Test\n     public void createLoginRequest() {\n-        Assume.assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n+        assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n \n         OIDCLoginRequestTO loginRequest = anonymous.getService(OIDCClientService.class).\n                 createLoginRequest(\"http://localhost:9080/syncope-console/oidcclient/code-consumer\", \"Google\");\n@@ -111,7 +111,7 @@ public void createLoginRequest() {\n \n     @Test\n     public void setProviderMapping() {\n-        Assume.assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n+        assumeTrue(OIDCClientDetector.isOIDCClientAvailable());\n \n         OIDCProviderTO ssoCircle = IterableUtils.find(oidcProviderService.list(), new Predicate<OIDCProviderTO>() {\n "}]}