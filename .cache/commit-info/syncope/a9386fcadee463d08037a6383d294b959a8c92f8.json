{"sha":"a9386fcadee463d08037a6383d294b959a8c92f8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE5Mzg2ZmNhZGVlNDYzZDA4MDM3YTYzODNkMjk0Yjk1OWE4YzkyZjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-11-19T13:43:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-11-19T13:47:36Z"},"message":"[SYNCOPE-1603] Ensuring PushCorrelationRule is always applied if available","tree":{"sha":"1001f81dbecf75ec070949673c838e461690ef87","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1001f81dbecf75ec070949673c838e461690ef87"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a9386fcadee463d08037a6383d294b959a8c92f8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9386fcadee463d08037a6383d294b959a8c92f8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9386fcadee463d08037a6383d294b959a8c92f8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9386fcadee463d08037a6383d294b959a8c92f8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ff32f95588b3ff975050c3ee68bfbb9093efd4ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff32f95588b3ff975050c3ee68bfbb9093efd4ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ff32f95588b3ff975050c3ee68bfbb9093efd4ad"}],"stats":{"total":190,"additions":45,"deletions":145},"files":[{"sha":"7cb39797488c1470c17255da00a69685748e4511","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationManager.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationManager.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -142,28 +142,12 @@ List<PropagationTaskInfo> getDeleteTasks(\n             PropagationByResource<Pair<String, String>> propByLinkedAccount,\n             Collection<String> noPropResourceKeys);\n \n-    /**\n-     * Create the delete tasks for the any object from each resource associated, unless in {@code noPropResourceKeys}.\n-     *\n-     * @param key any object key\n-     * @param propByRes operation to be performed per resource\n-     * @param propByLinkedAccount operation to be performed for linked accounts\n-     * @param noPropResourceKeys external resource keys not to be considered for propagation\n-     * @return list of propagation tasks\n-     */\n-    List<PropagationTaskInfo> getUserDeleteTasks(\n-            String key,\n-            PropagationByResource<String> propByRes,\n-            PropagationByResource<Pair<String, String>> propByLinkedAccount,\n-            Collection<String> noPropResourceKeys);\n-\n     PropagationTaskInfo newTask(\n             DerAttrHandler derAttrHandler,\n             Any<?> any,\n             ExternalResource resource,\n             ResourceOperation operation,\n             Provision provision,\n-            boolean deleteOnResource,\n             Stream<? extends Item> mappingItems,\n             Pair<String, Set<Attribute>> preparedAttrs);\n "},{"sha":"4751c5f677f38cbdf3b7587c07ef18f577fcf7a8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -213,7 +213,8 @@ public List<PropagationStatus> delete(\n         // information could only be available after uwfAdapter.delete(), which\n         // will also effectively remove user from db, thus making virtually\n         // impossible by NotificationManager to fetch required user information\n-        List<PropagationTaskInfo> taskInfos = propagationManager.getUserDeleteTasks(\n+        List<PropagationTaskInfo> taskInfos = propagationManager.getDeleteTasks(\n+                AnyTypeKind.USER,\n                 key,\n                 propByRes,\n                 propByLinkedAccount,"},{"sha":"a12f3db76172fcb086183729ff15cf3df6722400","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -509,7 +509,16 @@ public PropagationByResource<String> update(final AnyObject toBeUpdated, final A\n         }\n \n         // Re-merge any pending change from above\n-        anyObjectDAO.save(anyObject);\n+        AnyObject saved = anyObjectDAO.save(anyObject);\n+\n+        // ensure not to DELETE on External Resources that remain assigned\n+        Set<String> assigned = saved.getResources().stream().\n+                map(ExternalResource::getKey).collect(Collectors.toCollection(HashSet::new));\n+        assigned.addAll(saved.getMemberships().stream().\n+                flatMap(m -> m.getRightEnd().getResources().stream()).map(ExternalResource::getKey).\n+                collect(Collectors.toSet()));\n+        propByRes.removeAll(ResourceOperation.DELETE, assigned);\n+\n         return propByRes;\n     }\n }"},{"sha":"70ad56a86cb9b943ccae6df67fd44033a5f9ec33","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -725,7 +725,16 @@ public Pair<PropagationByResource<String>, PropagationByResource<Pair<String, St\n         }\n \n         // Re-merge any pending change from above\n-        userDAO.save(user);\n+        User saved = userDAO.save(user);\n+\n+        // ensure not to DELETE on External Resources that remain assigned\n+        Set<String> assigned = saved.getResources().stream().\n+                map(ExternalResource::getKey).collect(Collectors.toCollection(HashSet::new));\n+        assigned.addAll(saved.getMemberships().stream().\n+                flatMap(m -> m.getRightEnd().getResources().stream()).map(ExternalResource::getKey).\n+                collect(Collectors.toSet()));\n+        propByRes.removeAll(ResourceOperation.DELETE, assigned);\n+\n         return Pair.of(propByRes, propByLinkedAccount);\n     }\n "},{"sha":"bc88e914cc16847dc33aef0b2ef1fe97f110b2aa","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":4,"deletions":52,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -272,61 +272,13 @@ protected Uid delete(\n \n         Uid result;\n         if (beforeObj == null) {\n-            LOG.debug(\"{} not found on external resource: ignoring delete\", task.getConnObjectKey());\n+            LOG.debug(\"{} not found on {}: ignoring delete\", task.getConnObjectKey(), task.getResource().getKey());\n             result = null;\n         } else {\n-            /*\n-             * We must choose here whether to\n-             * a. actually delete the provided entity from the external resource\n-             * b. just update the provided entity data onto the external resource\n-             *\n-             * (a) happens when either there is no entity associated with the PropagationTask (this takes place\n-             * when the task is generated via Logic's delete()) or the provided updated\n-             * entity hasn't the current resource assigned (when the task is generated via\n-             * Logic's update()).\n-             *\n-             * (b) happens when the provided updated entity does have the current resource assigned (when the task\n-             * is generated via Logic's update()): this basically means that before such\n-             * update, this entity used to have the current resource assigned by more than one mean (for example,\n-             * two different memberships with the same resource).\n-             */\n-            Collection<String> resources = Set.of();\n-            if (task.getEntityKey() != null && task.getAnyTypeKind() != null) {\n-                switch (task.getAnyTypeKind()) {\n-                    case USER:\n-                        try {\n-                        resources = userDAO.findAllResourceKeys(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read user {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n-\n-                    case GROUP:\n-                        try {\n-                        resources = groupDAO.findAllResourceKeys(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read group {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n+            LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n \n-                    case ANY_OBJECT:\n-                    default:\n-                        try {\n-                        resources = anyObjectDAO.findAllResourceKeys(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read any object {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n-                }\n-            }\n-            if (task.getAnyTypeKind() == null || !resources.contains(task.getResource().getKey())) {\n-                LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n-\n-                connector.delete(beforeObj.getObjectClass(), beforeObj.getUid(), null, propagationAttempted);\n-                result = beforeObj.getUid();\n-            } else {\n-                result = createOrUpdate(task, beforeObj, connector, propagationAttempted);\n-            }\n+            connector.delete(beforeObj.getObjectClass(), beforeObj.getUid(), null, propagationAttempted);\n+            result = beforeObj.getUid();\n         }\n \n         return result;"},{"sha":"627384ce1e0f38f0e12bbe51994fc5c61a7f8f00","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":14,"deletions":61,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -36,10 +36,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n-import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n@@ -83,15 +79,6 @@ public class PropagationManagerImpl implements PropagationManager {\n     @Autowired\n     protected VirSchemaDAO virSchemaDAO;\n \n-    @Autowired\n-    protected AnyObjectDAO anyObjectDAO;\n-\n-    @Autowired\n-    protected UserDAO userDAO;\n-\n-    @Autowired\n-    protected GroupDAO groupDAO;\n-\n     @Autowired\n     protected ExternalResourceDAO resourceDAO;\n \n@@ -110,25 +97,6 @@ public class PropagationManagerImpl implements PropagationManager {\n     @Autowired\n     protected AnyUtilsFactory anyUtilsFactory;\n \n-    protected AnyDAO<? extends Any<?>> dao(final AnyTypeKind kind) {\n-        AnyDAO<? extends Any<?>> dao;\n-        switch (kind) {\n-            case ANY_OBJECT:\n-                dao = anyObjectDAO;\n-                break;\n-\n-            case GROUP:\n-                dao = groupDAO;\n-                break;\n-\n-            case USER:\n-            default:\n-                dao = userDAO;\n-        }\n-\n-        return dao;\n-    }\n-\n     @Override\n     public List<PropagationTaskInfo> getCreateTasks(\n             final AnyTypeKind kind,\n@@ -139,7 +107,7 @@ public List<PropagationTaskInfo> getCreateTasks(\n             final Collection<String> noPropResourceKeys) {\n \n         return getCreateTasks(\n-                dao(kind).authFind(key),\n+                anyUtilsFactory.getInstance(kind).dao().authFind(key),\n                 null,\n                 enable,\n                 propByRes,\n@@ -159,7 +127,7 @@ public List<PropagationTaskInfo> getUserCreateTasks(\n             final Collection<String> noPropResourceKeys) {\n \n         return getCreateTasks(\n-                userDAO.authFind(key),\n+                anyUtilsFactory.getInstance(AnyTypeKind.USER).dao().authFind(key),\n                 password,\n                 enable,\n                 propByRes,\n@@ -194,7 +162,7 @@ protected List<PropagationTaskInfo> getCreateTasks(\n             }\n         }\n \n-        return createTasks(any, password, true, enable, false, propByRes, propByLinkedAccount, vAttrs);\n+        return createTasks(any, password, true, enable, propByRes, propByLinkedAccount, vAttrs);\n     }\n \n     @Override\n@@ -209,7 +177,7 @@ public List<PropagationTaskInfo> getUpdateTasks(\n             final Collection<String> noPropResourceKeys) {\n \n         return getUpdateTasks(\n-                dao(kind).authFind(key),\n+                anyUtilsFactory.getInstance(kind).dao().authFind(key),\n                 null,\n                 changePwd,\n                 enable,\n@@ -226,7 +194,7 @@ public List<PropagationTaskInfo> getUserUpdateTasks(\n             final Collection<String> noPropResourceKeys) {\n \n         return getUpdateTasks(\n-                userDAO.authFind(wfResult.getResult().getLeft().getKey()),\n+                anyUtilsFactory.getInstance(AnyTypeKind.USER).dao().authFind(wfResult.getResult().getLeft().getKey()),\n                 wfResult.getResult().getLeft().getPassword() == null\n                 ? null\n                 : wfResult.getResult().getLeft().getPassword().getValue(),\n@@ -259,7 +227,8 @@ public List<PropagationTaskInfo> getUserUpdateTasks(final UserWorkflowResult<Pai\n                     wfResult.getPerformedTasks());\n \n             Set<String> pwdResourceNames = new HashSet<>(userUR.getPassword().getResources());\n-            Collection<String> allResourceNames = userDAO.findAllResourceKeys(userUR.getKey());\n+            Collection<String> allResourceNames = anyUtilsFactory.getInstance(AnyTypeKind.USER).\n+                    dao().findAllResourceKeys(userUR.getKey());\n             pwdResourceNames.retainAll(allResourceNames);\n \n             pwdWFResult.getPropByRes().addAll(ResourceOperation.UPDATE, pwdResourceNames);\n@@ -321,7 +290,6 @@ protected List<PropagationTaskInfo> getUpdateTasks(\n                 password,\n                 changePwd,\n                 enable,\n-                false,\n                 Optional.ofNullable(propByRes).orElseGet(PropagationByResource::new),\n                 propByLinkedAccount,\n                 vAttrs);\n@@ -335,17 +303,9 @@ public List<PropagationTaskInfo> getDeleteTasks(\n             final PropagationByResource<Pair<String, String>> propByLinkedAccount,\n             final Collection<String> noPropResourceKeys) {\n \n-        return getDeleteTasks(dao(kind).authFind(key), propByRes, propByLinkedAccount, noPropResourceKeys);\n-    }\n-\n-    @Override\n-    public List<PropagationTaskInfo> getUserDeleteTasks(\n-            final String key,\n-            final PropagationByResource<String> propByRes,\n-            final PropagationByResource<Pair<String, String>> propByLinkedAccount,\n-            final Collection<String> noPropResourceKeys) {\n-\n-        return getDeleteTasks(userDAO.authFind(key), propByRes, propByLinkedAccount, noPropResourceKeys);\n+        return getDeleteTasks(\n+                anyUtilsFactory.getInstance(kind).dao().authFind(key),\n+                propByRes, propByLinkedAccount, noPropResourceKeys);\n     }\n \n     protected List<PropagationTaskInfo> getDeleteTasks(\n@@ -359,7 +319,7 @@ protected List<PropagationTaskInfo> getDeleteTasks(\n         if (propByRes == null || propByRes.isEmpty()) {\n             localPropByRes.addAll(\n                     ResourceOperation.DELETE,\n-                    dao(any.getType().getKind()).findAllResourceKeys(any.getKey()));\n+                    anyUtilsFactory.getInstance(any).dao().findAllResourceKeys(any.getKey()));\n         } else {\n             localPropByRes.merge(propByRes);\n         }\n@@ -377,7 +337,7 @@ protected List<PropagationTaskInfo> getDeleteTasks(\n             }\n         }\n \n-        return createTasks(any, null, false, false, true, localPropByRes, propByLinkedAccount, null);\n+        return createTasks(any, null, false, false, localPropByRes, propByLinkedAccount, null);\n     }\n \n     @Override\n@@ -387,17 +347,14 @@ public PropagationTaskInfo newTask(\n             final ExternalResource resource,\n             final ResourceOperation operation,\n             final Provision provision,\n-            final boolean deleteOnResource,\n             final Stream<? extends Item> mappingItems,\n             final Pair<String, Set<Attribute>> preparedAttrs) {\n \n         PropagationTaskInfo task = new PropagationTaskInfo(resource);\n         task.setObjectClassName(provision.getObjectClass().getObjectClassValue());\n         task.setAnyTypeKind(any.getType().getKind());\n         task.setAnyType(any.getType().getKey());\n-        if (!deleteOnResource) {\n-            task.setEntityKey(any.getKey());\n-        }\n+        task.setEntityKey(any.getKey());\n         task.setOperation(operation);\n         task.setConnObjectKey(preparedAttrs.getLeft());\n \n@@ -437,7 +394,6 @@ public PropagationTaskInfo newTask(\n      * @param password clear text password to be provisioned\n      * @param changePwd whether password should be included for propagation attributes or not\n      * @param enable whether user must be enabled or not\n-     * @param deleteOnResource whether any must be deleted anyway from external resource or not\n      * @param propByRes operation to be performed per resource\n      * @param propByLinkedAccount operation to be performed on linked accounts\n      * @param vAttrs virtual attributes to be set\n@@ -448,7 +404,6 @@ protected List<PropagationTaskInfo> createTasks(\n             final String password,\n             final boolean changePwd,\n             final Boolean enable,\n-            final boolean deleteOnResource,\n             final PropagationByResource<String> propByRes,\n             final PropagationByResource<Pair<String, String>> propByLinkedAccount,\n             final Collection<Attr> vAttrs) {\n@@ -463,7 +418,7 @@ protected List<PropagationTaskInfo> createTasks(\n         Set<String> virtualResources = new HashSet<>();\n         virtualResources.addAll(propByRes.get(ResourceOperation.CREATE));\n         virtualResources.addAll(propByRes.get(ResourceOperation.UPDATE));\n-        virtualResources.addAll(dao(any.getType().getKind()).findAllResourceKeys(any.getKey()));\n+        virtualResources.addAll(anyUtilsFactory.getInstance(any).dao().findAllResourceKeys(any.getKey()));\n \n         Map<String, Set<Attribute>> vAttrMap = new HashMap<>();\n         if (vAttrs != null) {\n@@ -527,7 +482,6 @@ protected List<PropagationTaskInfo> createTasks(\n                         resource,\n                         operation,\n                         provision,\n-                        deleteOnResource,\n                         mappingItems,\n                         preparedAttrs);\n                 task.setOldConnObjectKey(propByRes.getOldConnObjectKey(resourceKey));\n@@ -571,7 +525,6 @@ protected List<PropagationTaskInfo> createTasks(\n                             account.getResource(),\n                             operation,\n                             provision,\n-                            deleteOnResource,\n                             mappingItems,\n                             Pair.of(account.getConnObjectKeyValue(),\n                                     mappingManager.prepareAttrsFromLinkedAccount("},{"sha":"887968b3e971fe5adbba1d386fac784c9fe078b9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamAnyObjectPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamAnyObjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamAnyObjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamAnyObjectPushResultHandler.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -61,7 +61,6 @@ protected void provision(final Any<?> any, final Boolean enabled, final Provisio\n                 profile.getTask().getResource(),\n                 ResourceOperation.CREATE,\n                 provision,\n-                false,\n                 items,\n                 preparedAttrs);\n         propagationTask.setConnector(profile.getConnector());"},{"sha":"f3411abcf38138928ed479bc89d19171be19d612","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamGroupPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamGroupPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamGroupPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamGroupPushResultHandler.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -61,7 +61,6 @@ protected void provision(final Any<?> any, final Boolean enabled, final Provisio\n                 profile.getTask().getResource(),\n                 ResourceOperation.CREATE,\n                 provision,\n-                false,\n                 items,\n                 preparedAttrs);\n         propagationTask.setConnector(profile.getConnector());"},{"sha":"45a6dcb004885a8809545a5e9b5d04083e30a0ae","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamUserPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamUserPushResultHandler.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -61,7 +61,6 @@ protected void provision(final Any<?> any, final Boolean enabled, final Provisio\n                 profile.getTask().getResource(),\n                 ResourceOperation.CREATE,\n                 provision,\n-                false,\n                 items,\n                 preparedAttrs);\n         propagationTask.setConnector(profile.getConnector());"},{"sha":"46b6165401d5d3ce65fb2a510092c3fc2218cdea","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/DeleteProducer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeleteProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeleteProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeleteProducer.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -74,7 +74,8 @@ public void process(final Exchange exchange) throws Exception {\n                     // information could only be available after uwfAdapter.delete(), which\n                     // will also effectively remove user from db, thus making virtually\n                     // impossible by NotificationManager to fetch required user information\n-                    taskInfos = getPropagationManager().getUserDeleteTasks(\n+                    taskInfos = getPropagationManager().getDeleteTasks(\n+                            AnyTypeKind.USER,\n                             key,\n                             propByRes,\n                             propByLinkedAccount,"},{"sha":"c501aaead4f56bd596094a4083d80a23b5dd0514","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9386fcadee463d08037a6383d294b959a8c92f8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9386fcadee463d08037a6383d294b959a8c92f8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=a9386fcadee463d08037a6383d294b959a8c92f8","patch":"@@ -1299,9 +1299,7 @@ public void restResource() {\n         userCR.getResources().add(RESOURCE_NAME_REST);\n \n         // 1. create\n-        ProvisioningResult<UserTO> result = userService.create(userCR).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+        ProvisioningResult<UserTO> result = createUser(userCR);\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(ExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n         assertEquals(RESOURCE_NAME_REST, result.getPropagationStatuses().get(0).getResource());\n@@ -1317,9 +1315,7 @@ public void restResource() {\n         UserUR userUR = new UserUR.Builder(result.getEntity().getKey()).\n                 plainAttr(new AttrPatch.Builder(new Attr.Builder(\"surname\").value(\"surname2\").build()).build()).\n                 build();\n-        result = userService.update(userUR).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+        result = updateUser(userUR);\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(ExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n         assertEquals(RESOURCE_NAME_REST, result.getPropagationStatuses().get(0).getResource());\n@@ -1331,9 +1327,7 @@ public void restResource() {\n         assertNotNull(response.getEntity());\n \n         // 3. delete\n-        result = userService.delete(result.getEntity().getKey()).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+        result = deleteUser(result.getEntity().getKey());\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(ExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n         assertEquals(RESOURCE_NAME_REST, result.getPropagationStatuses().get(0).getResource());"}]}