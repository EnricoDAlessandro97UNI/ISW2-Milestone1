{"sha":"455d98219a40dd7b454f57d9b8eac020536ddcea","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ1NWQ5ODIxOWE0MGRkN2I0NTRmNTdkOWI4ZWFjMDIwNTM2ZGRjZWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-19T16:50:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-20T07:43:34Z"},"message":"Cleanup Realm REST endpoints","tree":{"sha":"ec0cf39dfd434c738584f3fb162c409a649998fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ec0cf39dfd434c738584f3fb162c409a649998fb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/455d98219a40dd7b454f57d9b8eac020536ddcea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/455d98219a40dd7b454f57d9b8eac020536ddcea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/455d98219a40dd7b454f57d9b8eac020536ddcea","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/455d98219a40dd7b454f57d9b8eac020536ddcea/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5ebce68fa3740cd47ba34d7ddd9109a84bc1f665","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ebce68fa3740cd47ba34d7ddd9109a84bc1f665","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ebce68fa3740cd47ba34d7ddd9109a84bc1f665"}],"stats":{"total":38,"additions":32,"deletions":6},"files":[{"sha":"7bdf463ca889a4f3c52d523709849e786092589b","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/RealmQuery.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/455d98219a40dd7b454f57d9b8eac020536ddcea/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FRealmQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/455d98219a40dd7b454f57d9b8eac020536ddcea/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FRealmQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FRealmQuery.java?ref=455d98219a40dd7b454f57d9b8eac020536ddcea","patch":"@@ -36,13 +36,20 @@ public Builder keyword(final String keyword) {\n             return this;\n         }\n \n+        public Builder base(final String base) {\n+            instance.setBase(base);\n+            return this;\n+        }\n+\n         public RealmQuery build() {\n             return instance;\n         }\n     }\n \n     private String keyword;\n \n+    private String base;\n+\n     public String getKeyword() {\n         return keyword;\n     }\n@@ -52,6 +59,15 @@ public void setKeyword(final String keyword) {\n         this.keyword = keyword;\n     }\n \n+    public String getBase() {\n+        return base;\n+    }\n+\n+    @QueryParam(\"base\")\n+    public void setBase(final String base) {\n+        this.base = base;\n+    }\n+\n     @Override\n     public boolean equals(final Object obj) {\n         if (this == obj) {\n@@ -67,6 +83,7 @@ public boolean equals(final Object obj) {\n         return new EqualsBuilder().\n                 appendSuper(super.equals(obj)).\n                 append(keyword, other.keyword).\n+                append(base, other.base).\n                 build();\n     }\n \n@@ -75,6 +92,7 @@ public int hashCode() {\n         return new HashCodeBuilder().\n                 appendSuper(super.hashCode()).\n                 append(keyword).\n+                append(base).\n                 build();\n     }\n }"},{"sha":"7e182570db5843a1acaf2072b6ee6aa361ead300","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/455d98219a40dd7b454f57d9b8eac020536ddcea/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/455d98219a40dd7b454f57d9b8eac020536ddcea/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=455d98219a40dd7b454f57d9b8eac020536ddcea","patch":"@@ -60,7 +60,7 @@ public interface RealmService extends JAXRSService {\n \n     /**\n      * Returns a list of existing realms matching the given query (not including descendant realms) and the total number\n-     * of descedant realms.\n+     * of descendant realms.\n      *\n      * @param query query conditions\n      * @return list of existing realms matching the given query (not including descendant realms) and the total number\n@@ -86,7 +86,7 @@ public interface RealmService extends JAXRSService {\n      * Creates a new realm under the given path.\n      *\n      * @param parentPath full path of the parent realm\n-     * @param realmTO new realm.\n+     * @param realmTO new realm\n      * @return Response object featuring Location header of created realm as well as the realm itself\n      * enriched with propagation status information\n      */"},{"sha":"6db99ec6099d0ffd2f8336d6d03d2b8b3e03b27d","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/455d98219a40dd7b454f57d9b8eac020536ddcea/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/455d98219a40dd7b454f57d9b8eac020536ddcea/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java?ref=455d98219a40dd7b454f57d9b8eac020536ddcea","patch":"@@ -73,11 +73,19 @@ public class RealmLogic extends AbstractTransactionalLogic<RealmTO> {\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.REALM_LIST + \"')\")\n     @Transactional(readOnly = true)\n-    public Pair<Integer, List<RealmTO>> search(final String keyword) {\n-        Set<String> bases = AuthContextUtils.getAuthorizations().get(IdRepoEntitlement.REALM_LIST);\n+    public Pair<Integer, List<RealmTO>> search(final String keyword, final String base) {\n+        Realm baseRealm = base == null ? realmDAO.getRoot() : realmDAO.findByFullPath(base);\n+        if (baseRealm == null) {\n+            LOG.error(\"Could not find realm '\" + base + \"'\");\n+\n+            throw new NotFoundException(base);\n+        }\n+\n+        Set<String> roots = AuthContextUtils.getAuthorizations().get(IdRepoEntitlement.REALM_LIST).stream().\n+                filter(auth -> auth.startsWith(baseRealm.getFullPath())).collect(Collectors.toSet());\n \n         Set<Realm> match = realmDAO.findMatching(keyword).stream().\n-                filter(realm -> bases.stream().anyMatch(base -> realm.getFullPath().startsWith(base))).\n+                filter(realm -> roots.stream().anyMatch(root -> realm.getFullPath().startsWith(root))).\n                 collect(Collectors.toSet());\n \n         int descendants = Math.toIntExact("},{"sha":"7916a203d6b06abca4d04959133aae4ecd492799","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RealmServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/455d98219a40dd7b454f57d9b8eac020536ddcea/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/455d98219a40dd7b454f57d9b8eac020536ddcea/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java?ref=455d98219a40dd7b454f57d9b8eac020536ddcea","patch":"@@ -44,7 +44,7 @@ public class RealmServiceImpl extends AbstractServiceImpl implements RealmServic\n     public PagedResult<RealmTO> search(final RealmQuery query) {\n         String keyword = query.getKeyword() == null ? null : query.getKeyword().replace('*', '%');\n \n-        Pair<Integer, List<RealmTO>> result = logic.search(keyword);\n+        Pair<Integer, List<RealmTO>> result = logic.search(keyword, query.getBase());\n         return buildPagedResult(result.getRight(), 1, result.getRight().size(), result.getLeft());\n     }\n "}]}