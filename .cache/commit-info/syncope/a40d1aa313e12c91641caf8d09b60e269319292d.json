{"sha":"a40d1aa313e12c91641caf8d09b60e269319292d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE0MGQxYWEzMTNlMTJjOTE2NDFjYWY4ZDA5YjYwZTI2OTMxOTI5MmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T09:42:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T09:42:24Z"},"message":"Upgrading Swagger UI","tree":{"sha":"9847790f0381d17ed724e3b8cb4d070b1981aedc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9847790f0381d17ed724e3b8cb4d070b1981aedc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a40d1aa313e12c91641caf8d09b60e269319292d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a40d1aa313e12c91641caf8d09b60e269319292d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a40d1aa313e12c91641caf8d09b60e269319292d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a40d1aa313e12c91641caf8d09b60e269319292d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4a6bd031d3d5f91967d13b6b6b4aa93a8e9254ee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a6bd031d3d5f91967d13b6b6b4aa93a8e9254ee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a6bd031d3d5f91967d13b6b6b4aa93a8e9254ee"}],"stats":{"total":354,"additions":306,"deletions":48},"files":[{"sha":"157803282e388152a88e9b8a75856fbab5d11dcc","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/Swagger2Feature.java","status":"modified","additions":271,"deletions":0,"changes":271,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a40d1aa313e12c91641caf8d09b60e269319292d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSwagger2Feature.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a40d1aa313e12c91641caf8d09b60e269319292d/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSwagger2Feature.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSwagger2Feature.java?ref=a40d1aa313e12c91641caf8d09b60e269319292d","patch":"@@ -18,9 +18,54 @@\n  */\n package org.apache.syncope.core.rest.cxf;\n \n+import io.swagger.jaxrs.config.BeanConfig;\n+import io.swagger.jaxrs.config.DefaultReaderConfig;\n+import io.swagger.jaxrs.config.ReaderConfig;\n+import io.swagger.jaxrs.listing.ApiListingResource;\n+import io.swagger.jaxrs.listing.SwaggerSerializers;\n+import io.swagger.models.Operation;\n+import io.swagger.models.Path;\n+import io.swagger.models.Swagger;\n+import io.swagger.models.Tag;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.net.URI;\n import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import javax.servlet.ServletContext;\n+import javax.ws.rs.HttpMethod;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.core.UriInfo;\n+import org.apache.commons.collections4.ComparatorUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.JAXRSServiceFactoryBean;\n+import org.apache.cxf.jaxrs.ext.MessageContext;\n+import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n+import org.apache.cxf.jaxrs.model.OperationResourceInfo;\n+import org.apache.cxf.jaxrs.model.doc.DocumentationProvider;\n+import org.apache.cxf.jaxrs.provider.ServerProviderFactory;\n+import org.apache.cxf.jaxrs.utils.InjectionUtils;\n+import org.apache.cxf.jaxrs.utils.JAXRSUtils;\n \n /**\n  * Automatically loads available javadocs from class loader (when {@link java.net.URLClassLoader}).\n@@ -37,4 +82,230 @@ public void initialize(final Server server, final Bus bus) {\n         super.initialize(server, bus);\n     }\n \n+    // ------- Remove the code below this point when CXF-6990 is part of next CXF release (3.1.8?) -----\n+    @Override\n+    protected void addSwaggerResource(final Server server, final Bus bus) {\n+        List<Object> swaggerResources = new LinkedList<>();\n+        ApiListingResource apiListingResource = new ApiListingResource();\n+        swaggerResources.add(apiListingResource);\n+        if (SWAGGER_UI_RESOURCE_ROOT != null) {\n+            swaggerResources.add(new SwaggerUIService());\n+            bus.setProperty(\"swagger.service.ui.available\", \"true\");\n+        }\n+        JAXRSServiceFactoryBean sfb =\n+                (JAXRSServiceFactoryBean) server.getEndpoint().get(JAXRSServiceFactoryBean.class.getName());\n+        sfb.setResourceClassesFromBeans(swaggerResources);\n+\n+        List<ClassResourceInfo> cris = sfb.getClassResourceInfo();\n+\n+        List<Object> providers = new ArrayList<>();\n+        for (ClassResourceInfo cri : cris) {\n+            if (ApiListingResource.class == cri.getResourceClass()) {\n+                InjectionUtils.injectContextProxies(cri, apiListingResource);\n+            }\n+        }\n+        if (SWAGGER_UI_RESOURCE_ROOT != null) {\n+            providers.add(new SwaggerUIFilter());\n+        }\n+        providers.add(new Swagger2Serializers(dynamicBasePath, replaceTags, javadocProvider, cris));\n+        providers.add(new ReaderConfigFilter());\n+        ((ServerProviderFactory) server.getEndpoint().get(\n+                ServerProviderFactory.class.getName())).setUserProviders(providers);\n+\n+        BeanConfig beanConfig = new BeanConfig();\n+        beanConfig.setResourcePackage(getResourcePackage());\n+        beanConfig.setVersion(getVersion());\n+        String basePath = getBasePath();\n+        beanConfig.setBasePath(basePath);\n+        beanConfig.setHost(getHost());\n+        beanConfig.setSchemes(getSchemes());\n+        beanConfig.setTitle(getTitle());\n+        beanConfig.setDescription(getDescription());\n+        beanConfig.setContact(getContact());\n+        beanConfig.setLicense(getLicense());\n+        beanConfig.setLicenseUrl(getLicenseUrl());\n+        beanConfig.setTermsOfServiceUrl(getTermsOfServiceUrl());\n+        beanConfig.setScan(isScan());\n+        beanConfig.setPrettyPrint(isPrettyPrint());\n+        beanConfig.setFilterClass(getFilterClass());\n+    }\n+\n+    protected class ReaderConfigFilter implements ContainerRequestFilter {\n+\n+        @Context\n+        protected MessageContext mc;\n+\n+        @Override\n+        public void filter(final ContainerRequestContext requestContext) throws IOException {\n+            ServletContext servletContext = mc.getServletContext();\n+            if (servletContext != null && servletContext.getAttribute(ReaderConfig.class.getName()) == null) {\n+                if (mc.getServletConfig() != null\n+                        && Boolean.valueOf(mc.getServletConfig().getInitParameter(\"scan.all.resources\"))) {\n+                    addReaderConfig(mc.getServletConfig().getInitParameter(\"ignore.routes\"));\n+                } else if (isScanAllResources()) {\n+                    addReaderConfig(getIgnoreRoutes());\n+                }\n+            }\n+        }\n+\n+        protected void addReaderConfig(final String ignoreRoutesParam) {\n+            DefaultReaderConfig rc = new DefaultReaderConfig();\n+            rc.setScanAllResources(true);\n+            if (ignoreRoutesParam != null) {\n+                Set<String> routes = new LinkedHashSet<>();\n+                for (String route : StringUtils.split(ignoreRoutesParam, \",\")) {\n+                    routes.add(route.trim());\n+                }\n+                rc.setIgnoredRoutes(routes);\n+            }\n+            mc.getServletContext().setAttribute(ReaderConfig.class.getName(), rc);\n+        }\n+    }\n+\n+    @PreMatching\n+    protected static class SwaggerUIFilter implements ContainerRequestFilter {\n+\n+        private static final Pattern PATTERN =\n+                Pattern.compile(\".*[.]js|/css/.*|/images/.*|/lib/.*|.*ico|/fonts/.*\");\n+\n+        @Override\n+        public void filter(final ContainerRequestContext rc) throws IOException {\n+            if (HttpMethod.GET.equals(rc.getRequest().getMethod())) {\n+                UriInfo ui = rc.getUriInfo();\n+                String path = \"/\" + ui.getPath();\n+                if (PATTERN.matcher(path).matches()) {\n+                    rc.setRequestUri(URI.create(\"api-docs\" + path));\n+                }\n+            }\n+        }\n+    }\n+\n+    protected static class Swagger2Serializers extends SwaggerSerializers {\n+\n+        protected final boolean dynamicBasePath;\n+\n+        protected final boolean replaceTags;\n+\n+        protected final DocumentationProvider javadocProvider;\n+\n+        protected final List<ClassResourceInfo> cris;\n+\n+        public Swagger2Serializers(\n+                final boolean dynamicBasePath,\n+                final boolean replaceTags,\n+                final DocumentationProvider javadocProvider,\n+                final List<ClassResourceInfo> cris) {\n+\n+            super();\n+\n+            this.dynamicBasePath = dynamicBasePath;\n+            this.replaceTags = replaceTags;\n+            this.javadocProvider = javadocProvider;\n+            this.cris = cris;\n+        }\n+\n+        @Override\n+        public void writeTo(\n+                final Swagger data,\n+                final Class<?> type,\n+                final Type genericType,\n+                final Annotation[] annotations,\n+                final MediaType mediaType,\n+                final MultivaluedMap<String, Object> headers,\n+                final OutputStream out) throws IOException {\n+\n+            if (dynamicBasePath) {\n+                MessageContext ctx = JAXRSUtils.createContextValue(\n+                        JAXRSUtils.getCurrentMessage(), null, MessageContext.class);\n+                data.setBasePath(StringUtils.substringBeforeLast(ctx.getHttpServletRequest().\n+                        getRequestURI(), \"/\"));\n+            }\n+\n+            if (replaceTags || javadocProvider != null) {\n+                Map<String, ClassResourceInfo> operations = new HashMap<>();\n+                Map<Pair<String, String>, OperationResourceInfo> methods = new HashMap<>();\n+                for (ClassResourceInfo cri : cris) {\n+                    for (OperationResourceInfo ori : cri.getMethodDispatcher().getOperationResourceInfos()) {\n+                        String normalizedPath = getNormalizedPath(\n+                                cri.getURITemplate().getValue(), ori.getURITemplate().getValue());\n+\n+                        operations.put(normalizedPath, cri);\n+                        methods.put(ImmutablePair.of(ori.getHttpMethod(), normalizedPath), ori);\n+                    }\n+                }\n+\n+                if (replaceTags && data.getTags() != null) {\n+                    data.getTags().clear();\n+                }\n+                for (final Map.Entry<String, Path> entry : data.getPaths().entrySet()) {\n+                    Tag tag = null;\n+                    if (replaceTags && operations.containsKey(entry.getKey())) {\n+                        ClassResourceInfo cri = operations.get(entry.getKey());\n+\n+                        tag = new Tag();\n+                        tag.setName(cri.getURITemplate().getValue());\n+                        if (javadocProvider != null) {\n+                            tag.setDescription(javadocProvider.getClassDoc(cri));\n+                        }\n+\n+                        data.addTag(tag);\n+                    }\n+\n+                    for (Map.Entry<io.swagger.models.HttpMethod, Operation> subentry : entry.getValue().\n+                            getOperationMap().entrySet()) {\n+                        if (replaceTags && tag != null) {\n+                            subentry.getValue().setTags(Collections.singletonList(tag.getName()));\n+                        }\n+\n+                        Pair<String, String> key = ImmutablePair.of(subentry.getKey().name(), entry.getKey());\n+                        if (methods.containsKey(key) && javadocProvider != null) {\n+                            OperationResourceInfo ori = methods.get(key);\n+\n+                            subentry.getValue().setSummary(javadocProvider.getMethodDoc(ori));\n+                            for (int i = 0; i < subentry.getValue().getParameters().size(); i++) {\n+                                subentry.getValue().getParameters().get(i).\n+                                        setDescription(javadocProvider.getMethodParameterDoc(ori, i));\n+                            }\n+\n+                            if (subentry.getValue().getResponses() != null\n+                                    && !subentry.getValue().getResponses().isEmpty()) {\n+\n+                                subentry.getValue().getResponses().entrySet().iterator().next().getValue().\n+                                        setDescription(javadocProvider.getMethodResponseDoc(ori));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            if (replaceTags && data.getTags() != null) {\n+                Collections.sort(data.getTags(), new Comparator<Tag>() {\n+\n+                    @Override\n+                    public int compare(final Tag tag1, final Tag tag2) {\n+                        return ComparatorUtils.<String>naturalComparator().compare(tag1.getName(), tag2.getName());\n+                    }\n+                });\n+            }\n+\n+            super.writeTo(data, type, genericType, annotations, mediaType, headers, out);\n+        }\n+\n+        protected String getNormalizedPath(final String classResourcePath, final String operationResourcePath) {\n+            StringBuilder normalizedPath = new StringBuilder();\n+\n+            String[] segments = org.apache.commons.lang3.StringUtils.split(classResourcePath + operationResourcePath,\n+                    \"/\");\n+            for (String segment : segments) {\n+                if (!org.apache.commons.lang3.StringUtils.isEmpty(segment)) {\n+                    normalizedPath.append(\"/\").append(segment);\n+                }\n+            }\n+            // Adapt to Swagger's path expression\n+            if (normalizedPath.toString().endsWith(\":.*}\")) {\n+                normalizedPath.setLength(normalizedPath.length() - 4);\n+                normalizedPath.append('}');\n+            }\n+            return StringUtils.EMPTY.equals(normalizedPath.toString()) ? \"/\" : normalizedPath.toString();\n+        }\n+    }\n }"},{"sha":"889cd92dd7723c233abad0e425882569a3d50f45","filename":"ext/swagger-ui/src/main/resources/META-INF/resources/swagger/index.html","status":"modified","additions":34,"deletions":47,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a40d1aa313e12c91641caf8d09b60e269319292d/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a40d1aa313e12c91641caf8d09b60e269319292d/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fswagger%2Findex.html?ref=a40d1aa313e12c91641caf8d09b60e269319292d","patch":"@@ -31,15 +31,18 @@\n   <link href='css/screen.css' media='screen' rel='stylesheet' type='text/css'/>\n   <link href='css/reset.css' media='print' rel='stylesheet' type='text/css'/>\n   <link href='css/print.css' media='print' rel='stylesheet' type='text/css'/>\n+\n+  <script src='lib/object-assign-pollyfill.js' type='text/javascript'></script>\n   <script src='lib/jquery-1.8.0.min.js' type='text/javascript'></script>\n   <script src='lib/jquery.slideto.min.js' type='text/javascript'></script>\n   <script src='lib/jquery.wiggle.min.js' type='text/javascript'></script>\n   <script src='lib/jquery.ba-bbq.min.js' type='text/javascript'></script>\n   <script src='lib/handlebars-2.0.0.js' type='text/javascript'></script>\n-  <script src='lib/underscore-min.js' type='text/javascript'></script>\n+  <script src='lib/lodash.min.js' type='text/javascript'></script>\n   <script src='lib/backbone-min.js' type='text/javascript'></script>\n   <script src='swagger-ui.js' type='text/javascript'></script>\n-  <script src='lib/highlight.7.3.pack.js' type='text/javascript'></script>\n+  <script src='lib/highlight.9.1.0.pack.js' type='text/javascript'></script>\n+  <script src='lib/highlight.9.1.0.pack_extended.js' type='text/javascript'></script>\n   <script src='lib/jsoneditor.min.js' type='text/javascript'></script>\n   <script src='lib/marked.js' type='text/javascript'></script>\n   <script src='lib/swagger-oauth.js' type='text/javascript'></script>\n@@ -51,15 +54,19 @@\n \n   <script type=\"text/javascript\">\n     $(function () {\n-        // <ApacheSyncope>\n-        /*var url = window.location.search.match(/url=([^&]+)/);\n+      // <ApacheSyncope>\n+      /*var url = window.location.search.match(/url=([^&]+)/);\n       if (url && url.length > 1) {\n         url = decodeURIComponent(url[1]);\n       } else {\n         url = \"http://petstore.swagger.io/v2/swagger.json\";\n-         }*/\n-        var url = window.location.href.substring(0, window.location.href.lastIndexOf('/')) + \"/../rest/swagger.json\";\n-        // </ApacheSyncope>\n+      }*/\n+      var url = window.location.href.substring(0, window.location.href.lastIndexOf('/')) + \"/../rest/swagger.json\";\n+      // </ApacheSyncope>\n+\n+      hljs.configure({\n+        highlightSizeThreshold: 5000\n+      });\n \n       // Pre load translate...\n       if(window.SwaggerTranslator) {\n@@ -75,7 +82,7 @@\n               clientId: \"your-client-id\",\n               clientSecret: \"your-client-secret-if-required\",\n               realm: \"your-realms\",\n-              appName: \"your-app-name\", \n+              appName: \"your-app-name\",\n               scopeSeparator: \",\",\n               additionalQueryStringParams: {}\n             });\n@@ -84,55 +91,35 @@\n           if(window.SwaggerTranslator) {\n             window.SwaggerTranslator.translate();\n           }\n-\n-          $('pre code').each(function(i, e) {\n-            hljs.highlightBlock(e)\n-          });\n-\n+          \n           addApiKeyAuthorization();\n         },\n         onFailure: function(data) {\n           log(\"Unable to Load SwaggerUI\");\n         },\n         docExpansion: \"none\",\n         jsonEditor: false,\n-        apisSorter: \"alpha\",\n         defaultModelRendering: 'schema',\n         showRequestHeaders: false\n       });\n \n-        function addApiKeyAuthorization() {\n-          // <ApacheSyncope>\n-          /*var key = encodeURIComponent($('#input_apiKey')[0].value);\n-           if (key && key.trim() != \"\") {\n-            var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization(\"api_key\", key, \"query\");\n-            window.swaggerUi.api.clientAuthorizations.add(\"api_key\", apiKeyAuth);\n-            log(\"added key \" + key);\n-           }*/\n-          var username = $('#input_username').val().trim();\n-          var password = $('#input_password').val().trim();\n-          if (username !== \"\" && password !== \"\") {\n-            window.swaggerUi.api.clientAuthorizations.add(\n+      // <ApacheSyncope>\n+      function addApiKeyAuthorization() {\n+        var username = $('#input_username').val().trim();\n+        var password = $('#input_password').val().trim();\n+        if (username !== \"\" && password !== \"\") {\n+          window.swaggerUi.api.clientAuthorizations.add(\n                     \"basicAuth\", new SwaggerClient.PasswordAuthorization(username, password));\n         }\n-          // </ApacheSyncope>\n       }\n \n-        // <ApacheSyncope>\n-        //$('#input_apiKey').change(addApiKeyAuthorization);\n-        $(\"#input_username\").blur(function () {\n+      $(\"#input_username\").blur(function () {\n           addApiKeyAuthorization();\n-        });\n-        $(\"#input_password\").blur(function () {\n+      });\n+      $(\"#input_password\").blur(function () {\n           addApiKeyAuthorization();\n-        });\n-        // </ApacheSyncope>\n-\n-      // if you have an apiKey you would like to pre-populate on the page for demonstration purposes...\n-      /*\n-        var apiKey = \"myApiKeyXXXX123456789\";\n-        $('#input_apiKey').val(apiKey);\n-      */\n+      });\n+      // </ApacheSyncope>\n \n       window.swaggerUi.load();\n \n@@ -148,15 +135,15 @@\n <body class=\"swagger-section\">\n <div id='header'>\n   <div class=\"swagger-ui-wrap\">\n-    <a id=\"logo\" href=\"http://swagger.io\">swagger</a>\n+    <a id=\"logo\" href=\"http://swagger.io\"><img class=\"logo__img\" alt=\"swagger\" height=\"30\" width=\"30\" src=\"images/logo_small.png\" /><span class=\"logo__title\">swagger</span></a>\n     <form id='api_selector'>\n-       <!-- <ApacheSyncope -->\n+      <!-- <ApacheSyncope -->\n       <!--<div class='input'><input placeholder=\"http://example.com/api\" id=\"input_baseUrl\" name=\"baseUrl\" type=\"text\"/></div>-->\n-      <!--<div class='input'><input placeholder=\"api_key\" id=\"input_apiKey\" name=\"apiKey\" type=\"text\"/></div>-->\n-      <!--<div class='input'><a id=\"explore\" href=\"#\" data-sw-translate>Explore</a></div>-->\n-          <div class='input'><input placeholder=\"username\" id=\"input_username\" name=\"username\" type=\"text\"/></div>\n-          <div class='input'><input placeholder=\"password\" id=\"input_password\" name=\"password\" type=\"password\"/></div>\n-          <!-- </ApacheSyncope -->\n+      <div class='input'><input placeholder=\"username\" id=\"input_username\" name=\"username\" type=\"text\"/></div>\n+      <div id='auth_container'></div>\n+      <!--<div class='input'><a id=\"explore\" class=\"header__btn\" href=\"#\" data-sw-translate>Explore</a></div>-->\n+      <div class='input'><input placeholder=\"password\" id=\"input_password\" name=\"password\" type=\"password\"/></div>\n+      <!-- </ApacheSyncope -->\n     </form>\n   </div>\n </div>"},{"sha":"874ea8295ae005d0c20df385cfb8032dbf5752c5","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a40d1aa313e12c91641caf8d09b60e269319292d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a40d1aa313e12c91641caf8d09b60e269319292d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a40d1aa313e12c91641caf8d09b60e269319292d","patch":"@@ -393,7 +393,7 @@ under the License.\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n \n     <swagger-core.version>1.5.9</swagger-core.version>    \n-    <swagger-ui.version>2.1.4</swagger-ui.version>\n+    <swagger-ui.version>2.1.5</swagger-ui.version>\n         \n     <jquery.version>2.2.4</jquery.version>\n     <jquery-ui.version>1.11.4</jquery-ui.version>"}]}