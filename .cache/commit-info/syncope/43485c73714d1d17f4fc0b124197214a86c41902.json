{"sha":"43485c73714d1d17f4fc0b124197214a86c41902","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzNDg1YzczNzE0ZDFkMTdmNGZjMGIxMjQxOTcyMTRhODZjNDE5MDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-25T08:40:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-25T08:40:09Z"},"message":"[SYNCOPE-426] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1535657 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9ceb3924ded175d0fe04d5f9d5df7f23a0fbe2c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9ceb3924ded175d0fe04d5f9d5df7f23a0fbe2c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43485c73714d1d17f4fc0b124197214a86c41902","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43485c73714d1d17f4fc0b124197214a86c41902","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43485c73714d1d17f4fc0b124197214a86c41902","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43485c73714d1d17f4fc0b124197214a86c41902/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d4d7fd505b7f64bc862ba33369fb1f1423ff3938","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4d7fd505b7f64bc862ba33369fb1f1423ff3938","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d4d7fd505b7f64bc862ba33369fb1f1423ff3938"},{"sha":"fcba4ceb069085f6aa7bb33050d7d77ef476be94","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fcba4ceb069085f6aa7bb33050d7d77ef476be94","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fcba4ceb069085f6aa7bb33050d7d77ef476be94"}],"stats":{"total":65,"additions":39,"deletions":26},"files":[{"sha":"8c79ad30920994011486387f15bf206193be0adb","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43485c73714d1d17f4fc0b124197214a86c41902/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43485c73714d1d17f4fc0b124197214a86c41902/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=43485c73714d1d17f4fc0b124197214a86c41902","patch":"@@ -207,7 +207,7 @@ int searchCount(@Description(\"search condition\") NodeCond searchCondition)\n      * @param userMod modification to be applied to user matching the provided userId\n      * @return Updated user.\n      */\n-    @PUT\n+    @POST\n     @Path(\"{userId}\")\n     @Descriptions({\n         @Description(target = DocTarget.METHOD, value = \"Updates user matching the provided userId\"),"},{"sha":"dbe95470456212481f936b1680e91871f7e5ba07","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=43485c73714d1d17f4fc0b124197214a86c41902","patch":"@@ -110,6 +110,7 @@ public RoleTO selfRead(final Long roleId) {\n \r\n     @Override\r\n     public RoleTO update(final Long roleId, final RoleMod roleMod) {\r\n+        roleMod.setId(roleId);\r\n         return controller.update(roleMod);\r\n     }\r\n \r"},{"sha":"529eda1ea3b4add36feb7e514fc0378b8a2cc238","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=43485c73714d1d17f4fc0b124197214a86c41902","patch":"@@ -165,6 +165,7 @@ public UserTO suspendByUsername(final String username, final PropagationRequestT\n \n     @Override\n     public UserTO update(final Long userId, final UserMod userMod) {\n+        userMod.setId(userId);\n         return controller.update(userMod);\n     }\n "},{"sha":"e0afcf76372ad40271061d02cf203b4eb7e62fba","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":36,"deletions":25,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43485c73714d1d17f4fc0b124197214a86c41902/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=43485c73714d1d17f4fc0b124197214a86c41902","patch":"@@ -142,8 +142,7 @@ public static UserTO getSampleTO(final String email) {\n \n     @Test\n     public void selfRead() {\n-        UserService userService2 =\n-                clientFactory.create(\"rossini\", ADMIN_PWD).getService(UserService.class);\n+        UserService userService2 = clientFactory.create(\"rossini\", ADMIN_PWD).getService(UserService.class);\n \n         try {\n             userService2.read(1L);\n@@ -207,8 +206,8 @@ public void issue172() {\n         } finally {\n             for (PasswordPolicyTO policyTO : policies) {\n                 Response response = policyService.create(policyTO);\n-                PasswordPolicyTO cPolicyTO =\n-                        adminClient.getObject(response.getLocation(), PolicyService.class, PasswordPolicyTO.class);\n+                PasswordPolicyTO cPolicyTO = adminClient.getObject(\n+                        response.getLocation(), PolicyService.class, PasswordPolicyTO.class);\n                 assertNotNull(cPolicyTO);\n             }\n         }\n@@ -470,17 +469,17 @@ public void create() {\n         assertEquals(maxTaskExecutions, taskTO.getExecutions().size());\n \n         // 3. verify password\n-        UserService userService1 =\n-                clientFactory.create(newUserTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService1 = clientFactory.create(\n+                newUserTO.getUsername(), \"password123\").getService(UserService.class);\n         try {\n             UserTO user = userService1.readSelf();\n             assertNotNull(user);\n         } catch (AccessControlException e) {\n             fail(\"Credentials should be valid and not cause AccessControlException\");\n         }\n \n-        UserService userService2 =\n-                clientFactory.create(newUserTO.getUsername(), \"passwordXX\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(\n+                newUserTO.getUsername(), \"passwordXX\").getService(UserService.class);\n         try {\n             userService2.readSelf();\n             fail(\"Credentials are invalid, thus request should raise AccessControlException\");\n@@ -577,8 +576,8 @@ public void createWithReject() {\n         assertNull(form.getOwner());\n \n         // 3. claim task from rossini, not in role 7 (designated for approval in workflow definition): fail\n-        UserWorkflowService userService2 =\n-                clientFactory.create(\"rossini\", ADMIN_PWD).getService(UserWorkflowService.class);\n+        UserWorkflowService userService2 = clientFactory.create(\n+                \"rossini\", ADMIN_PWD).getService(UserWorkflowService.class);\n \n         try {\n             userService2.claimForm(form.getTaskId());\n@@ -588,8 +587,8 @@ public void createWithReject() {\n         }\n \n         // 4. claim task from bellini, in role 7\n-        UserWorkflowService userService3 =\n-                clientFactory.create(\"bellini\", ADMIN_PWD).getService(UserWorkflowService.class);\n+        UserWorkflowService userService3 = clientFactory.create(\n+                \"bellini\", ADMIN_PWD).getService(UserWorkflowService.class);\n \n         form = userService3.claimForm(form.getTaskId());\n         assertNotNull(form);\n@@ -610,7 +609,7 @@ public void createWithReject() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] {userTO.getUsername()}, Integer.class);\n+                    new String[] { userTO.getUsername() }, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -644,7 +643,7 @@ public void createWithApproval() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] {userTO.getUsername()}, Integer.class);\n+                    new String[] { userTO.getUsername() }, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -968,7 +967,6 @@ public void verifyTaskRegistration() {\n         // --------------------------------------\n         // Create operation\n         // --------------------------------------\n-\n         UserTO userTO = getUniqueSampleTO(\"t@p.mode\");\n \n         // add a membership\n@@ -1857,16 +1855,16 @@ public void issueSYNCOPE122() {\n \n         final String pwdOnSyncope = userTO.getPassword();\n \n-        ConnObjectTO userOnDb =\n-                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n+        ConnObjectTO userOnDb = resourceService.getConnectorObject(\n+                RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDbAttr = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n-        ConnObjectTO userOnDb2 =\n-                resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n+        ConnObjectTO userOnDb2 = resourceService.getConnectorObject(\n+                \"resource-testdb2\", AttributableType.USER, userTO.getId());\n         final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n@@ -2140,8 +2138,8 @@ public void issueSYNCOPE354() {\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         // 3. read role on resource, check that user DN is included in uniqueMember\n-        ConnObjectTO connObj =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n+        ConnObjectTO connObj = resourceService.getConnectorObject(\n+                RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n         assertNotNull(connObj);\n         assertTrue(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n@@ -2190,8 +2188,8 @@ public void issueSYNCOPE357() {\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         // 3. read user on resource\n-        ConnObjectTO connObj =\n-                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+        ConnObjectTO connObj = resourceService.getConnectorObject(\n+                RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n         assertNotNull(connObj);\n \n         // 4. remove role\n@@ -2376,8 +2374,8 @@ public void issueSYNCOPE15() {\n         assertNotNull(form);\n \n         // 3. first claim ny bellini ....\n-        UserWorkflowService userService3 =\n-                clientFactory.create(\"bellini\", ADMIN_PWD).getService(UserWorkflowService.class);\n+        UserWorkflowService userService3 = clientFactory.create(\n+                \"bellini\", ADMIN_PWD).getService(UserWorkflowService.class);\n \n         form = userService3.claimForm(form.getTaskId());\n         assertNotNull(form);\n@@ -2552,4 +2550,17 @@ public void issueSYNCOPE420() {\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(\"14\", userTO.getAttrMap().get(\"makeItDouble\").getValues().get(0));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE426() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope426@syncope.apache.org\");\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setPassword(\"anotherPassword123\");\n+        userTO = userService.update(userTO.getId(), userMod);\n+        assertNotNull(userTO);\n+    }\n+\n }"}]}