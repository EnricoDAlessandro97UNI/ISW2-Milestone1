{"sha":"9197adc15d0d78e2c01c25e75b5bcfd23404441f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkxOTdhZGMxNWQwZDc4ZTJjMDFjMjVlNzViNWJjZmQyMzQwNDQ0MWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-27T11:55:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-27T12:20:13Z"},"message":"[SYNCOPE-1531] CSV export now takes into account page, size and sort","tree":{"sha":"f55121700efa68c5aef1e14457928e6fcd54fdf8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f55121700efa68c5aef1e14457928e6fcd54fdf8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9197adc15d0d78e2c01c25e75b5bcfd23404441f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9197adc15d0d78e2c01c25e75b5bcfd23404441f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9197adc15d0d78e2c01c25e75b5bcfd23404441f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9197adc15d0d78e2c01c25e75b5bcfd23404441f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"43b05dea91097162c95e99184bab4bb724c6bb7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43b05dea91097162c95e99184bab4bb724c6bb7f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43b05dea91097162c95e99184bab4bb724c6bb7f"}],"stats":{"total":43,"additions":34,"deletions":9},"files":[{"sha":"999575f53fa9dd4f19e3045fe0b3c4ebedb36545","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AnyDirectoryPanel;\n import org.apache.syncope.client.console.panels.DisplayAttributesModalPanel;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.AjaxDownloadBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wizards.CSVPullWizardBuilder;\n@@ -68,6 +69,7 @@ public void add(\n             final String type,\n             final String realm,\n             final String fiql,\n+            final int rows,\n             final List<String> pSchemaNames,\n             final List<String> dSchemaNames,\n             final PageReference pageRef) {\n@@ -134,7 +136,7 @@ protected Panel customResultBody(\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 CSVPushSpec spec = csvPushSpec(type, panel, pSchemaNames, dSchemaNames);\n-                AnyQuery query = csvAnyQuery(realm, fiql);\n+                AnyQuery query = csvAnyQuery(realm, fiql, rows, panel.getDataProvider());\n \n                 target.add(modal.setContent(new CSVPushWizardBuilder(spec, query, csvDownloadBehavior, pageRef).\n                         setEventSink(csvEventSink).\n@@ -195,8 +197,16 @@ protected CSVPullSpec csvPullSpec(final String type, final String realm) {\n         return spec;\n     }\n \n-    protected AnyQuery csvAnyQuery(final String realm, final String fiql) {\n-        return new AnyQuery.Builder().realm(realm).fiql(fiql).build();\n+    protected AnyQuery csvAnyQuery(\n+            final String realm,\n+            final String fiql,\n+            final int rows,\n+            final AnyDataProvider<?> dataProvider) {\n+\n+        return new AnyQuery.Builder().realm(realm).\n+                fiql(fiql).page(dataProvider.getCurrentPage() + 1).size(rows).\n+                orderBy(BaseRestClient.toOrderBy(dataProvider.getSort())).\n+                build();\n     }\n \n     @Override"},{"sha":"4c00af2b016c584c5c52197b13dcfd48a1d1e6f2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -57,6 +57,8 @@\n \n     protected final PageReference pageRef;\n \n+    protected int currentPage;\n+\n     public AnyDataProvider(\n             final AbstractAnyRestClient<A> restClient,\n             final int paginatorRows,\n@@ -97,14 +99,17 @@ public Iterator<A> iterator(final long first, final long count) {\n         List<A> result = new ArrayList<>();\n \n         try {\n-            final int page = (int) first / paginatorRows;\n+            currentPage = ((int) first / paginatorRows);\n+            if (currentPage < 0) {\n+                currentPage = 0;\n+            }\n \n             if (filtered) {\n                 result = fiql == null\n-                        ? new ArrayList<>()\n-                        : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n+                        ? List.of()\n+                        : restClient.search(realm, fiql, currentPage + 1, paginatorRows, getSort(), type);\n             } else {\n-                result = restClient.search(realm, null, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n+                result = restClient.search(realm, null, currentPage + 1, paginatorRows, getSort(), type);\n             }\n         } catch (Exception e) {\n             LOG.error(\"While searching with FIQL {}\", fiql, e);\n@@ -148,4 +153,8 @@ public AnyDataProvider<A> setFIQL(final String fiql) {\n     public IModel<A> model(final A object) {\n         return new CompoundPropertyModel<>(object);\n     }\n+\n+    public int getCurrentPage() {\n+        return currentPage;\n+    }\n }"},{"sha":"4414c75511f18135425041157ca83ec63af7ab2d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAdditionalActionsProvider.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -33,6 +33,7 @@ void add(AnyDirectoryPanel<?, ?> panel,\n             String type,\n             String realm,\n             String fiql,\n+            int rows,\n             List<String> pSchemaNames,\n             List<String> dSchemaNames,\n             PageReference pageRef);"},{"sha":"e88b6709ef27919fb4b58aa511c58016f0279661","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoAnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAdditionalActionsProvider.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -36,6 +36,7 @@ public void add(\n             final String type,\n             final String realm,\n             final String fiql,\n+            final int rows,\n             final List<String> pSchemaNames,\n             final List<String> dSchemaNames,\n             final PageReference pageRef) {"},{"sha":"4b61cc8fc36a5e8ad34463a25f5c950f7894692b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -139,7 +139,7 @@ public void onClose(final AjaxRequestTarget target) {\n         initResultTable();\n \n         SyncopeWebApplication.get().getAnyDirectoryPanelAdditionalActionsProvider().\n-                add(this, modal, container, type, realm, fiql, pSchemaNames, dSchemaNames, pageRef);\n+                add(this, modal, container, type, realm, fiql, rows, pSchemaNames, dSchemaNames, pageRef);\n     }\n \n     @Override\n@@ -209,6 +209,10 @@ protected AnyDataProvider<A> dataProvider() {\n         return new AnyDataProvider<>(restClient, rows, filtered, realm, type, pageRef).setFIQL(this.fiql);\n     }\n \n+    public AnyDataProvider<A> getDataProvider() {\n+        return dataProvider;\n+    }\n+\n     public void search(final String fiql, final AjaxRequestTarget target) {\n         this.fiql = fiql;\n         dataProvider.setFIQL(fiql);"},{"sha":"8127725ad3a762b2f1b0dec9300c3bf2e49e821e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9197adc15d0d78e2c01c25e75b5bcfd23404441f/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=9197adc15d0d78e2c01c25e75b5bcfd23404441f","patch":"@@ -58,7 +58,7 @@ protected static <T> void resetClient(final Class<T> serviceClass) {\n         SyncopeConsoleSession.get().resetClient(serviceClass);\n     }\n \n-    protected static String toOrderBy(final SortParam<String> sort) {\n+    public static String toOrderBy(final SortParam<String> sort) {\n         OrderByClauseBuilder builder = SyncopeClient.getOrderByClauseBuilder();\n \n         String property = sort.getProperty();"}]}