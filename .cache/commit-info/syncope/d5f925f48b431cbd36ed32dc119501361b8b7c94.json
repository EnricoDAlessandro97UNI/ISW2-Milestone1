{"sha":"d5f925f48b431cbd36ed32dc119501361b8b7c94","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ1ZjkyNWY0OGI0MzFjYmQzNmVkMzJkYzExOTUwMTM2MWI4YjdjOTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T10:47:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T11:21:51Z"},"message":"[SYNCOPE-1043] Further fixes for console","tree":{"sha":"4d692f9f158f0da76c2d6d963d3ea6bafc4c1f6f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4d692f9f158f0da76c2d6d963d3ea6bafc4c1f6f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d5f925f48b431cbd36ed32dc119501361b8b7c94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5f925f48b431cbd36ed32dc119501361b8b7c94","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5f925f48b431cbd36ed32dc119501361b8b7c94","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5f925f48b431cbd36ed32dc119501361b8b7c94/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"750c789aa2e79559ce0f5f875082473c11be8153","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/750c789aa2e79559ce0f5f875082473c11be8153","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/750c789aa2e79559ce0f5f875082473c11be8153"}],"stats":{"total":51,"additions":35,"deletions":16},"files":[{"sha":"e22266aa2764e2e93c717e21fe8d95a203d0a65c","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleRequestCycleListener.java","status":"modified","additions":28,"deletions":15,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5f925f48b431cbd36ed32dc119501361b8b7c94/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5f925f48b431cbd36ed32dc119501361b8b7c94/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java?ref=d5f925f48b431cbd36ed32dc119501361b8b7c94","patch":"@@ -23,13 +23,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.wicket.Page;\n import org.apache.wicket.authorization.UnauthorizedInstantiationException;\n import org.apache.wicket.core.request.handler.PageProvider;\n import org.apache.wicket.core.request.handler.RenderPageRequestHandler;\n import org.apache.wicket.markup.html.pages.ExceptionErrorPage;\n import org.apache.wicket.protocol.http.PageExpiredException;\n import org.apache.wicket.request.IRequestHandler;\n+import org.apache.wicket.request.component.IRequestablePage;\n import org.apache.wicket.request.cycle.AbstractRequestCycleListener;\n import org.apache.wicket.request.cycle.RequestCycle;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -40,11 +40,15 @@ public class SyncopeConsoleRequestCycleListener extends AbstractRequestCycleList\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleRequestCycleListener.class);\n \n-    private boolean instanceOf(final Exception e, final Class<? extends Exception> clazz) {\n+    private Throwable instanceOf(final Exception e, final Class<? extends Exception> clazz) {\n         return clazz.isAssignableFrom(e.getClass())\n-                || (e.getCause() != null && clazz.isAssignableFrom(e.getCause().getClass()))\n-                || (e.getCause() != null && e.getCause().getCause() != null\n-                && clazz.isAssignableFrom(e.getCause().getCause().getClass()));\n+                ? e\n+                : e.getCause() != null && clazz.isAssignableFrom(e.getCause().getClass())\n+                ? e.getCause()\n+                : e.getCause() != null && e.getCause().getCause() != null\n+                && clazz.isAssignableFrom(e.getCause().getCause().getClass())\n+                ? e.getCause().getCause()\n+                : null;\n     }\n \n     @Override\n@@ -53,19 +57,23 @@ public IRequestHandler onException(final RequestCycle cycle, final Exception e)\n \n         PageParameters errorParameters = new PageParameters();\n \n-        Page errorPage;\n-        if (instanceOf(e, UnauthorizedInstantiationException.class)) {\n+        IRequestablePage errorPage = null;\n+        if (instanceOf(e, UnauthorizedInstantiationException.class) != null) {\n             errorParameters.add(\"errorMessage\", \"unauthorizedInstantiationException\");\n             errorPage = new Login(errorParameters);\n-        } else if (instanceOf(e, AccessControlException.class)) {\n-            errorParameters.add(\"errorMessage\", \"accessControlException\");\n+        } else if (instanceOf(e, AccessControlException.class) != null) {\n+            if (instanceOf(e, AccessControlException.class).getMessage().contains(\"expired\")) {\n+                errorParameters.add(\"errorMessage\", \"pageExpiredException\");\n+            } else {\n+                errorParameters.add(\"errorMessage\", \"accessControlException\");\n+            }\n             errorPage = new Login(errorParameters);\n-        } else if (instanceOf(e, PageExpiredException.class) || !SyncopeConsoleSession.get().isSignedIn()) {\n+        } else if (instanceOf(e, PageExpiredException.class) != null || !SyncopeConsoleSession.get().isSignedIn()) {\n             errorParameters.add(\"errorMessage\", \"pageExpiredException\");\n             errorPage = new Login(errorParameters);\n-        } else if (instanceOf(e, BadRequestException.class)\n-                || instanceOf(e, WebServiceException.class)\n-                || instanceOf(e, SyncopeClientException.class)) {\n+        } else if (instanceOf(e, BadRequestException.class) != null\n+                || instanceOf(e, WebServiceException.class) != null\n+                || instanceOf(e, SyncopeClientException.class) != null) {\n \n             errorParameters.add(\"errorMessage\", \"restClientException\");\n             errorPage = new Login(errorParameters);\n@@ -75,8 +83,13 @@ public IRequestHandler onException(final RequestCycle cycle, final Exception e)\n         }\n \n         if (errorPage instanceof Login) {\n-            SyncopeConsoleSession.get().cleanup();\n-            SyncopeConsoleSession.get().invalidateNow();\n+            try {\n+                SyncopeConsoleSession.get().cleanup();\n+                SyncopeConsoleSession.get().invalidateNow();\n+            } catch (Throwable t) {\n+                // ignore\n+                LOG.debug(\"Unexpected error while forcing logout after error\", t);\n+            }\n         }\n \n         return new RenderPageRequestHandler(new PageProvider(errorPage));"},{"sha":"4bf0cd20022130954dcb6b8463e7d51da1d79003","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5f925f48b431cbd36ed32dc119501361b8b7c94/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5f925f48b431cbd36ed32dc119501361b8b7c94/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=d5f925f48b431cbd36ed32dc119501361b8b7c94","patch":"@@ -196,7 +196,7 @@ public UserTO getSelfTO() {\n     }\n \n     public boolean owns(final String entitlement) {\n-        return auth.containsKey(entitlement);\n+        return auth != null && auth.containsKey(entitlement);\n     }\n \n     @Override"},{"sha":"616f3e7b58bb121e455c85a99c28fa39db6cf30e","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5f925f48b431cbd36ed32dc119501361b8b7c94/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5f925f48b431cbd36ed32dc119501361b8b7c94/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=d5f925f48b431cbd36ed32dc119501361b8b7c94","patch":"@@ -386,6 +386,11 @@ public Set<SyncopeGrantedAuthority> authenticate(final JWTAuthentication authent\n         return authorities;\n     }\n \n+    @Transactional\n+    public void removeExpired(final String tokenKey) {\n+        accessTokenDAO.delete(tokenKey);\n+    }\n+\n     @Transactional(readOnly = true)\n     public void audit(\n             final AuditElements.EventCategoryType type,"},{"sha":"30e2be7ee9426edfa9b83f68d0496d5a5e0c273b","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5f925f48b431cbd36ed32dc119501361b8b7c94/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5f925f48b431cbd36ed32dc119501361b8b7c94/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java?ref=d5f925f48b431cbd36ed32dc119501361b8b7c94","patch":"@@ -61,6 +61,7 @@ public Void exec() {\n \n         Long expiryTime = claims.getExpiryTime();\n         if (expiryTime == null || expiryTime < referenceTime) {\n+            dataAccessor.removeExpired(claims.getTokenId());\n             throw new CredentialsExpiredException(\"JWT is expired\");\n         }\n "}]}