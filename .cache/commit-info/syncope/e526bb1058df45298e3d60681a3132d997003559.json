{"sha":"e526bb1058df45298e3d60681a3132d997003559","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1MjZiYjEwNThkZjQ1Mjk4ZTNkNjA2ODFhMzEzMmQ5OTcwMDM1NTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-20T17:09:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-20T17:09:52Z"},"message":"[SYNCOPE-1458] Changing Zookeeper-based Keymaster client to run tests without do DockeDocker, and moving Docker-based tests to a profile","tree":{"sha":"dbb5dd3c3d206b5f4a0d4a0e5662671eea979ab8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dbb5dd3c3d206b5f4a0d4a0e5662671eea979ab8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e526bb1058df45298e3d60681a3132d997003559","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e526bb1058df45298e3d60681a3132d997003559","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e526bb1058df45298e3d60681a3132d997003559","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e526bb1058df45298e3d60681a3132d997003559/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c2967d7691f5d9dbdf08f984d95c3de04c21879","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c2967d7691f5d9dbdf08f984d95c3de04c21879","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c2967d7691f5d9dbdf08f984d95c3de04c21879"}],"stats":{"total":191,"additions":147,"deletions":44},"files":[{"sha":"01acda0893176da1fabd4dcffafe677c5b479d00","filename":"common/keymaster/client-zookeeper/pom.xml","status":"modified","additions":66,"deletions":43,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml?ref=e526bb1058df45298e3d60681a3132d997003559","patch":"@@ -63,6 +63,12 @@ under the License.\n       <artifactId>jackson-databind</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.curator</groupId>\n+      <artifactId>curator-test</artifactId>\n+      <version>2.13.0</version>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-simple</artifactId>\n@@ -87,51 +93,9 @@ under the License.\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n       \n-      <plugin>\n-        <groupId>io.fabric8</groupId>\n-        <artifactId>docker-maven-plugin</artifactId>\n-        <configuration>\n-          <images>\n-            <image>\n-              <name>zookeeper:${zookeeper.version}</name>\n-              <run>\n-                <ports>\n-                  <port>2181:2181</port>\n-                </ports>\n-                <volumes>\n-                  <bind>\n-                    <volume>${project.build.outputDirectory}/zoo.cfg:/conf/zoo.cfg</volume>\n-                    <volume>${project.build.outputDirectory}/java.env:/conf/java.env</volume>\n-                    <volume>${project.build.outputDirectory}/server-jaas.conf:/conf/server-jaas.conf</volume>\n-                    <volume>${project.build.outputDirectory}/client-jaas.conf:/conf/client-jaas.conf</volume>\n-                  </bind>\n-                </volumes>\n-              </run>\n-            </image>\n-          </images>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <id>start-zookeeper</id>\n-            <phase>pre-integration-test</phase>\n-            <goals>\n-              <goal>start</goal>\n-            </goals>\n-          </execution>\n-          <execution>\n-            <id>stop-zookeeper</id>\n-            <phase>post-integration-test</phase>\n-            <goals>\n-              <goal>stop</goal>\n-              <goal>remove</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n-      \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-failsafe-plugin</artifactId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n         <inherited>true</inherited>\n       </plugin>\n     </plugins>\n@@ -143,4 +107,63 @@ under the License.\n       </resource>\n     </resources>\n   </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>zookeeper-it</id>\n+\n+      <build>\n+        <plugins>\n+\n+          <plugin>\n+            <groupId>io.fabric8</groupId>\n+            <artifactId>docker-maven-plugin</artifactId>\n+            <configuration>\n+              <images>\n+                <image>\n+                  <name>zookeeper:${zookeeper.version}</name>\n+                  <run>\n+                    <ports>\n+                      <port>2181:2181</port>\n+                    </ports>\n+                    <volumes>\n+                      <bind>\n+                        <volume>${project.build.outputDirectory}/zoo.cfg:/conf/zoo.cfg</volume>\n+                        <volume>${project.build.outputDirectory}/java.env:/conf/java.env</volume>\n+                        <volume>${project.build.outputDirectory}/server-jaas.conf:/conf/server-jaas.conf</volume>\n+                        <volume>${project.build.outputDirectory}/client-jaas.conf:/conf/client-jaas.conf</volume>\n+                      </bind>\n+                    </volumes>\n+                  </run>\n+                </image>\n+              </images>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>start-zookeeper</id>\n+                <phase>pre-integration-test</phase>\n+                <goals>\n+                  <goal>start</goal>\n+                </goals>\n+              </execution>\n+              <execution>\n+                <id>stop-zookeeper</id>\n+                <phase>post-integration-test</phase>\n+                <goals>\n+                  <goal>stop</goal>\n+                  <goal>remove</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+      \n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-failsafe-plugin</artifactId>\n+            <inherited>true</inherited>\n+          </plugin>          \n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n </project>"},{"sha":"19f5ebcdd0ed555044841ad688032eb5ec3fc20b","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperConfParamOpsTest.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsTest.java?ref=e526bb1058df45298e3d60681a3132d997003559","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicReference;\n+import javax.security.auth.login.AppConfigurationEntry;\n+import javax.security.auth.login.Configuration;\n+import org.apache.curator.test.InstanceSpec;\n+import org.apache.curator.test.TestingServer;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+\n+public class ZookeeperConfParamOpsTest extends ZookeeperConfParamOpsITCase {\n+\n+    private static TestingServer ZK_SERVER;\n+\n+    @BeforeAll\n+    public static void setUp() throws Exception {\n+        AtomicReference<String> username = new AtomicReference<>();\n+        AtomicReference<String> password = new AtomicReference<>();\n+        try (InputStream propStream = ZookeeperConfParamOpsTest.class.getResourceAsStream(\"/keymaster.properties\")) {\n+            Properties props = new Properties();\n+            props.load(propStream);\n+\n+            username.set(props.getProperty(\"keymaster.username\"));\n+            password.set(props.getProperty(\"keymaster.password\"));\n+        } catch (Exception e) {\n+            fail(\"Could not load /keymaster.properties\", e);\n+        }\n+\n+        Configuration.setConfiguration(new Configuration() {\n+\n+            private final AppConfigurationEntry[] entries = {\n+                new AppConfigurationEntry(\n+                \"org.apache.zookeeper.server.auth.DigestLoginModule\",\n+                AppConfigurationEntry.LoginModuleControlFlag.REQUIRED,\n+                Map.of(\n+                \"user_\" + username.get(), password.get()\n+                ))\n+            };\n+\n+            @Override\n+            public AppConfigurationEntry[] getAppConfigurationEntry(final String name) {\n+                return entries;\n+            }\n+        });\n+\n+        Map<String, Object> customProperties = new HashMap<>();\n+        customProperties.put(\"authProvider.1\", \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n+        InstanceSpec spec = new InstanceSpec(null, 2181, -1, -1, true, 1, -1, -1, customProperties);\n+        ZK_SERVER = new TestingServer(spec, true);\n+    }\n+\n+    @AfterAll\n+    public static void tearDown() throws Exception {\n+        ZK_SERVER.stop();\n+    }\n+}"},{"sha":"f3b7169d8fa0570decd201e4cf5a06e950b3c56c","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperTestContentLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e526bb1058df45298e3d60681a3132d997003559/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java?ref=e526bb1058df45298e3d60681a3132d997003559","patch":"@@ -40,7 +40,7 @@ public void afterPropertiesSet() throws Exception {\n             Map.Entry<String, JsonNode> param = itor.next();\n             Object value = MAPPER.treeToValue(param.getValue(), Object.class);\n             if (value != null) {\n-                confParamOps.set(ZookeeperConfParamOpsITCase.DOMAIN, param.getKey(), value);\n+                confParamOps.set(ZookeeperConfParamOpsTest.DOMAIN, param.getKey(), value);\n             }\n         }\n     }"}]}