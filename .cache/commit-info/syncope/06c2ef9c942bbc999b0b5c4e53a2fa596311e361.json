{"sha":"06c2ef9c942bbc999b0b5c4e53a2fa596311e361","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA2YzJlZjljOTQyYmJjOTk5YjBiNWM0ZTUzYTJmYTU5NjMxMWUzNjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-06T13:25:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-06T13:25:39Z"},"message":"More robust handling of post-migration checks on slower hw","tree":{"sha":"249884484af598da649a7dc8cf6c211f12ad6ab9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/249884484af598da649a7dc8cf6c211f12ad6ab9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/06c2ef9c942bbc999b0b5c4e53a2fa596311e361","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06c2ef9c942bbc999b0b5c4e53a2fa596311e361","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/06c2ef9c942bbc999b0b5c4e53a2fa596311e361","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06c2ef9c942bbc999b0b5c4e53a2fa596311e361/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f0e0199fc70774bcab8e2bfb0304cf0a05d15728","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f0e0199fc70774bcab8e2bfb0304cf0a05d15728","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f0e0199fc70774bcab8e2bfb0304cf0a05d15728"}],"stats":{"total":51,"additions":34,"deletions":17},"files":[{"sha":"24619f07117b531327f522f70b76d505b42308ca","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06c2ef9c942bbc999b0b5c4e53a2fa596311e361/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06c2ef9c942bbc999b0b5c4e53a2fa596311e361/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=06c2ef9c942bbc999b0b5c4e53a2fa596311e361","patch":"@@ -194,8 +194,8 @@ protected ProvisioningResult<UserTO> doCreate(\n             securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n         }\n \n-        Pair<String, List<PropagationStatus>> created = provisioningManager.create(before.getLeft(), storePassword,\n-                nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> created =\n+                provisioningManager.create(before.getLeft(), storePassword, nullPriorityAsync);\n \n         return after(binder.returnUserTO(binder.getUserTO(created.getKey())), created.getRight(), before.getRight());\n     }"},{"sha":"ed8d0dfff1ab77ce13ac33932a0c0ceb30774a09","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MigrationITCase.java","status":"modified","additions":32,"deletions":15,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06c2ef9c942bbc999b0b5c4e53a2fa596311e361/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06c2ef9c942bbc999b0b5c4e53a2fa596311e361/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java?ref=06c2ef9c942bbc999b0b5c4e53a2fa596311e361","patch":"@@ -481,11 +481,37 @@ public void migrateFromSyncope12() throws InterruptedException {\n         // 3. execute pull task\n         execProvisioningTask(taskService, pullTaskKey, 50, false);\n \n-        Thread.sleep(3000L);\n-\n         // 4. verify\n-        UserTO user = userService.read(\"rossini12\");\n+        UserTO user = null;\n+\n+        int i = 0;\n+        boolean membershipFound = false;\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            try {\n+                user = userService.read(\"rossini12\");\n+                assertNotNull(user);\n+\n+                membershipFound = IterableUtils.matchesAny(user.getMemberships(), new Predicate<MembershipTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final MembershipTO object) {\n+                        return \"1 root12\".equals(object.getGroupName());\n+                    }\n+                });\n+            } catch (Exception e) {\n+                // ignore\n+            }\n+\n+            i++;\n+        } while (!membershipFound && i < 50);\n         assertNotNull(user);\n+        assertTrue(membershipFound);\n+\n         assertEquals(\"/\" + MIGRATION_REALM, user.getRealm());\n         GroupTO group = groupService.read(\"12 aRoleForPropagation12\");\n         assertNotNull(group);\n@@ -498,22 +524,13 @@ public void migrateFromSyncope12() throws InterruptedException {\n         // 4b. user resources\n         assertTrue(user.getResources().contains(RESOURCE_NAME_TESTDB2));\n \n-        // 4c. user memberships\n-        assertTrue(IterableUtils.matchesAny(user.getMemberships(), new Predicate<MembershipTO>() {\n-\n-            @Override\n-            public boolean evaluate(final MembershipTO object) {\n-                return \"1 root12\".equals(object.getGroupName());\n-            }\n-        }));\n-\n-        // 4d. user password\n+        // 4c. user password\n         assertNotNull(clientFactory.create(\"bellini12\", ADMIN_PWD).self());\n \n-        // 4e. group plain attrs\n+        // 4d. group plain attrs\n         assertEquals(\"r12\", group.getPlainAttrMap().get(\"title\").getValues().get(0));\n \n-        // 4f. group resources\n+        // 4e. group resources\n         assertTrue(group.getResources().contains(RESOURCE_NAME_CSV));\n     }\n }"}]}