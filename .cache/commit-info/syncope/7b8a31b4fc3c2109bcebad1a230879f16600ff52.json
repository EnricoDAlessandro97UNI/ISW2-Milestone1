{"sha":"7b8a31b4fc3c2109bcebad1a230879f16600ff52","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdiOGEzMWI0ZmMzYzIxMDliY2ViYWQxYTIzMDg3OWYxNjYwMGZmNTI=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-30T14:56:05Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-30T14:56:05Z"},"message":"SYNCOPE-231 Fix error in cxf authentication\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440441 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"649fb3dd0cb089f26867e260f47092f545e84d16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/649fb3dd0cb089f26867e260f47092f545e84d16"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7b8a31b4fc3c2109bcebad1a230879f16600ff52","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b8a31b4fc3c2109bcebad1a230879f16600ff52","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7b8a31b4fc3c2109bcebad1a230879f16600ff52","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b8a31b4fc3c2109bcebad1a230879f16600ff52/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"ee4b0435e11e88b2427490ea6d96ddfcde40f918","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ee4b0435e11e88b2427490ea6d96ddfcde40f918","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ee4b0435e11e88b2427490ea6d96ddfcde40f918"}],"stats":{"total":80,"additions":42,"deletions":38},"files":[{"sha":"846ea60866df7a0da137cc292a7beaaaf3e22d4d","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -256,7 +256,7 @@ public void setupContentType(final Client restClient) {\n     // END CXF Initialization\n \n     @SuppressWarnings(\"unchecked\")\n-    public <T> T setupCredentials(final T proxy, final String username, final String password) {\n+    public <T> T setupCredentials(final T proxy, final Class<?> serviceInterface, final String username, final String password) {\n         if (proxy instanceof SpringServiceProxy) {\n             SpringServiceProxy service = (SpringServiceProxy) proxy;\n             if (username == null && password == null) {\n@@ -268,8 +268,8 @@ public <T> T setupCredentials(final T proxy, final String username, final String\n         } else {\n             restClientFactory.setUsername(username);\n             restClientFactory.setPassword(password);\n-            restClientFactory.setServiceClass(proxy.getClass());\n-            T serviceProxy = (T) restClientFactory.create(proxy.getClass());\n+            restClientFactory.setServiceClass(serviceInterface);\n+            T serviceProxy = (T) restClientFactory.create(serviceInterface);\n             setupContentType(WebClient.client(serviceProxy));\n             return serviceProxy;\n         }"},{"sha":"ac4f4ce120f1d4f35e0140a9cfe8ac9661026371","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -45,6 +45,7 @@\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n+import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -110,7 +111,7 @@ public void testUserSchemaAuthorization() {\n         assertNotNull(schemaTO);\n \n         // 4. read the schema created above (as user) - success\n-        SchemaService schemaService2 = setupCredentials(schemaService, userTO.getUsername(), \"password123\");\n+        SchemaService schemaService2 = setupCredentials(schemaService, SchemaService.class, userTO.getUsername(), \"password123\");\n \n         schemaTO = schemaService2.read(AttributableType.USER, SchemaService.SchemaType.NORMAL, \"authTestSchema\");\n         assertNotNull(schemaTO);\n@@ -150,12 +151,12 @@ public void testUserRead() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         UserTO readUserTO = userService2.read(1L);\n         assertNotNull(readUserTO);\n \n-        UserService userService3 = setupCredentials(userService, \"user2\", ADMIN_PWD);\n+        UserService userService3 = setupCredentials(userService, UserService.class, \"user2\", ADMIN_PWD);\n \n         SyncopeClientException exception = null;\n         try {\n@@ -171,7 +172,7 @@ public void testUserRead() {\n     }\n \n     @Test\n-    public void testUserSearch() {\n+    public void testUserSearch() throws InvalidSearchConditionException {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"testusersearch@test.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n@@ -185,7 +186,7 @@ public void testUserSearch() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         isNullCond.setSchema(\"loginDate\");\n@@ -200,7 +201,7 @@ public void testUserSearch() {\n         }\n         assertTrue(userIds.contains(1L));\n \n-        UserService userService3 = setupCredentials(userService, \"user2\", \"password\");\n+        UserService userService3 = setupCredentials(userService, UserService.class, \"user2\", \"password\");\n \n         matchedUsers = userService3.search(searchCondition);\n \n@@ -232,7 +233,7 @@ public void checkFailedLogins() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         UserTO readUserTO = userService2.read(userTO.getId());\n \n@@ -242,7 +243,7 @@ public void checkFailedLogins() {\n \n         // authentications failed ...\n \n-        UserService userService3 = setupCredentials(userService, userTO.getUsername(), \"wrongpwd1\");\n+        UserService userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n \n         Throwable t = null;\n \n@@ -271,7 +272,7 @@ public void checkFailedLogins() {\n         assertNotNull(readUserTO.getFailedLogins());\n         assertEquals(Integer.valueOf(2), readUserTO.getFailedLogins());\n \n-        UserService userService4 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        UserService userService4 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         readUserTO = userService4.read(userTO.getId());\n         assertNotNull(readUserTO);\n@@ -294,7 +295,7 @@ public void checkUserSuspension() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         userTO = userService2.read(userTO.getId());\n \n@@ -304,7 +305,7 @@ public void checkUserSuspension() {\n \n         // authentications failed ...\n \n-        UserService userService3 = setupCredentials(userService, userTO.getUsername(), \"wrongpwd1\");\n+        UserService userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n \n         Throwable t = null;\n \n@@ -347,7 +348,7 @@ public void checkUserSuspension() {\n \n         // last authentication before suspension\n         // TODO remove after CXF migration is complete\n-        userService3 = setupCredentials(userService, userTO.getUsername(), \"wrongpwd1\");\n+        userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n \n         try {\n             userService3.read(userTO.getId());\n@@ -370,7 +371,7 @@ public void checkUserSuspension() {\n \n         // check for authentication\n         // TODO remove after CXF migration is complete\n-        userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         try {\n             userService2.read(userTO.getId());\n@@ -391,7 +392,7 @@ public void checkUserSuspension() {\n         assertEquals(\"active\", userTO.getStatus());\n \n         // TODO remove after CXF migration is complete\n-        userService2 = setupCredentials(userService, userTO.getUsername(), \"password123\");\n+        userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n \n         userTO = userService2.read(userTO.getId());\n \n@@ -431,7 +432,7 @@ public void issueSYNCOPE48() {\n         role1Admin = createUser(role1Admin);\n         assertNotNull(role1Admin);\n \n-        UserService userService2 = setupCredentials(userService, role1Admin.getUsername(), \"password\");\n+        UserService userService2 = setupCredentials(userService, UserService.class, role1Admin.getUsername(), \"password\");\n \n         // User with role 1, created by user with child role created above\n         UserTO role1User = UserTestITCase.getUniqueSampleTO(\"syncope48user@apache.org\");"},{"sha":"bf0ea73884fd813233df83937103c5af9c6a2624","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -197,7 +197,7 @@ public void selfRead() {\n         assertTrue(userTO.getMembershipMap().containsKey(1L));\n         assertFalse(userTO.getMembershipMap().containsKey(3L));\n \n-        RoleService roleService2 = setupCredentials(roleService, \"user1\", ADMIN_PWD);\n+        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"user1\", ADMIN_PWD);\n \n         SyncopeClientException exception = null;\n         try {\n@@ -303,7 +303,7 @@ public void updateAsRoleOwner() {\n         roleMod.setName(\"Managing Director\");\n \n         // 3. try to update as user3, not owner of role 7 - fail\n-        RoleService roleService2 = setupCredentials(roleService, \"user2\", ADMIN_PWD);\n+        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"user2\", ADMIN_PWD);\n \n         try {\n             roleService2.update(roleMod.getId(), roleMod);\n@@ -314,7 +314,7 @@ public void updateAsRoleOwner() {\n \n         // 4. update as user5, owner of role 7 because owner of role 6 with\n         // inheritance - success\n-        RoleService roleService3 = setupCredentials(roleService, \"user5\", ADMIN_PWD);\n+        RoleService roleService3 = setupCredentials(roleService, RoleService.class, \"user5\", ADMIN_PWD);\n \n         roleTO = roleService3.update(roleMod.getId(), roleMod);\n         assertEquals(\"Managing Director\", roleTO.getName());"},{"sha":"731fe33d9f320344044b836346f9650b6e15669e","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.search.ResourceCond;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -42,7 +43,7 @@\n public class SearchTestITCase extends AbstractTest {\n \n     @Test\n-    public void searchUser() {\n+    public void searchUser() throws InvalidSearchConditionException {\n         // LIKE\n         AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond1.setSchema(\"fullname\");\n@@ -83,7 +84,7 @@ public void searchUser() {\n     }\n \n     @Test\n-    public void searchByUsernameAndId() {\n+    public void searchByUsernameAndId() throws InvalidSearchConditionException {\n         final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"user1\");\n@@ -106,7 +107,7 @@ public void searchByUsernameAndId() {\n     }\n \n     @Test\n-    public void searchByRolenameAndId() {\n+    public void searchByRolenameAndId() throws InvalidSearchConditionException {\n         final AttributableCond rolenameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         rolenameLeafCond.setSchema(\"name\");\n         rolenameLeafCond.setExpression(\"root\");\n@@ -129,7 +130,7 @@ public void searchByRolenameAndId() {\n     }\n \n     @Test\n-    public void searchUserByResourceName() {\n+    public void searchUserByResourceName() throws InvalidSearchConditionException {\n         ResourceCond ws2 = new ResourceCond();\n         ws2.setResourceName(\"ws-target-resource2\");\n \n@@ -154,7 +155,7 @@ public void searchUserByResourceName() {\n     }\n \n     @Test\n-    public void paginatedSearch() {\n+    public void paginatedSearch() throws InvalidSearchConditionException {\n         // LIKE\n         AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond1.setSchema(\"fullname\");\n@@ -194,7 +195,7 @@ public void paginatedSearch() {\n     }\n \n     @Test\n-    public void searchCount() {\n+    public void searchCount() throws InvalidSearchConditionException {\n         AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n         isNullCond.setSchema(\"loginDate\");\n         NodeCond searchCond = NodeCond.getLeafCond(isNullCond);\n@@ -205,7 +206,7 @@ public void searchCount() {\n     }\n \n     @Test\n-    public void searchByBooleanAttributableCond() {\n+    public void searchByBooleanAttributableCond() throws InvalidSearchConditionException {\n         final AttributableCond cond = new AttributableCond(AttributableCond.Type.EQ);\n         cond.setSchema(\"inheritAttributes\");\n         cond.setExpression(\"true\");\n@@ -218,7 +219,7 @@ public void searchByBooleanAttributableCond() {\n     }\n \n     @Test\n-    public void searchByEntitlement() {\n+    public void searchByEntitlement() throws InvalidSearchConditionException {\n         final EntitlementCond userListCond = new EntitlementCond();\n         userListCond.setExpression(\"USER_LIST\");\n \n@@ -235,7 +236,7 @@ public void searchByEntitlement() {\n     }\n \n     @Test\n-    public void searchByRelationshipAttributableCond() {\n+    public void searchByRelationshipAttributableCond() throws InvalidSearchConditionException {\n         final AttributableCond userOwnerCond = new AttributableCond(AttributableCond.Type.EQ);\n         userOwnerCond.setSchema(\"userOwner\");\n         userOwnerCond.setExpression(\"5\");"},{"sha":"198b83073ad9363437e65757e68f4a4001dbb3a6","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -51,6 +51,7 @@\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n+import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.impl.SyncJob;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n@@ -362,7 +363,7 @@ public void reconcileFromDB() {\n     }\n \n     @Test\n-    public void reconcileFromLDAP() {\n+    public void reconcileFromLDAP() throws InvalidSearchConditionException {\n         // Update sync task\n         SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n         assertNotNull(task);"},{"sha":"0ffb317860e747a67a8da96c830a9e5dd6723e21","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n+import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -47,7 +48,7 @@\n public class UserRequestTestITCase extends AbstractTest {\n \n     @Test\n-    public void create() {\n+    public void create() throws InvalidSearchConditionException {\n         // 1. set create request not allowed\n         ConfigurationTO configurationTO = new ConfigurationTO();\n         configurationTO.setKey(\"createRequest.allowed\");\n@@ -79,7 +80,7 @@ public void create() {\n         assertNotNull(configurationTO);\n \n         // 4. as anonymous, request user create works\n-        UserRequestService userRequestService2 = setupCredentials(userRequestService, null, null);\n+        UserRequestService userRequestService2 = setupCredentials(userRequestService, UserRequestService.class, null, null);\n         response = userRequestService2.create(new UserRequestTO(userTO));\n         UserRequestTO request = getObject(response, UserRequestTO.class, userRequestService2);\n \n@@ -121,7 +122,7 @@ public void update() {\n         }\n \n         // 3. auth as user just created\n-        UserRequestService userRequestService2 = setupCredentials(userRequestService, userTO.getUsername(),\n+        UserRequestService userRequestService2 = setupCredentials(userRequestService, UserRequestService.class, userTO.getUsername(),\n                 initialPassword);\n \n         // 4. update with same password: not matching password policy\n@@ -174,7 +175,7 @@ public void delete() {\n         }\n \n         // 3. auth as user just created\n-        UserRequestService userRequestService2 = setupCredentials(userRequestService, userTO.getUsername(),\n+        UserRequestService userRequestService2 = setupCredentials(userRequestService, UserRequestService.class, userTO.getUsername(),\n                 initialPassword);\n \n         // 4. now request user delete works"},{"sha":"71b34ed92e393359ee19f7f30a0be2f3959e07a0","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b8a31b4fc3c2109bcebad1a230879f16600ff52/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=7b8a31b4fc3c2109bcebad1a230879f16600ff52","patch":"@@ -107,7 +107,7 @@ public static UserTO getSampleTO(final String email) {\n \n     @Test\n     public void selfRead() {\n-        UserService userService2 = setupCredentials(userService, \"user1\", ADMIN_PWD);\n+        UserService userService2 = setupCredentials(userService, UserService.class, \"user1\", ADMIN_PWD);\n \n         try {\n             userService2.read(1L);\n@@ -586,7 +586,7 @@ public void createWithReject() {\n         assertNull(form.getOwner());\n \n         // 3. claim task from user1, not in role 7 (designated for approval in workflow definition): fail\n-        UserService userService2 = setupCredentials(userService, \"user1\", ADMIN_PWD);\n+        UserService userService2 = setupCredentials(userService, UserService.class, \"user1\", ADMIN_PWD);\n \n         try {\n             userService2.claimForm(form.getTaskId());\n@@ -596,7 +596,7 @@ public void createWithReject() {\n         }\n \n         // 4. claim task from user4, in role 7\n-        UserService userService3 = setupCredentials(userService, \"user4\", ADMIN_PWD);\n+        UserService userService3 = setupCredentials(userService, UserService.class, \"user4\", ADMIN_PWD);\n \n         form = userService3.claimForm(form.getTaskId());\n         assertNotNull(form);"}]}