{"sha":"c3eb0cac717a1f95f530216fc659db472dfb2b39","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMzZWIwY2FjNzE3YTFmOTVmNTMwMjE2ZmM2NTlkYjQ3MmRmYjJiMzk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-23T14:48:57Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-23T14:48:57Z"},"message":"Fixing some transactional reading issues with PGSQL and SyncJob\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247086 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bc773cf448cfdad4f7dd4a5d966ec1df1240869d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc773cf448cfdad4f7dd4a5d966ec1df1240869d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c3eb0cac717a1f95f530216fc659db472dfb2b39","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3eb0cac717a1f95f530216fc659db472dfb2b39","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c3eb0cac717a1f95f530216fc659db472dfb2b39","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3eb0cac717a1f95f530216fc659db472dfb2b39/comments","author":null,"committer":null,"parents":[{"sha":"c34736d750e546b27b0a4f1eafb5e766b4db733a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c34736d750e546b27b0a4f1eafb5e766b4db733a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c34736d750e546b27b0a4f1eafb5e766b4db733a"}],"stats":{"total":6,"additions":4,"deletions":2},"files":[{"sha":"e6a79e46f637557f8b76934a6354a057e186f2bb","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3eb0cac717a1f95f530216fc659db472dfb2b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3eb0cac717a1f95f530216fc659db472dfb2b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=c3eb0cac717a1f95f530216fc659db472dfb2b39","patch":"@@ -18,6 +18,7 @@\n import java.util.List;\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.Task;\n@@ -29,6 +30,7 @@ public class TaskDAOImpl extends AbstractDAOImpl\n         implements TaskDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends Task> T find(final Long id) {\n         return (T) entityManager.find(Task.class, id);\n     }\n@@ -53,9 +55,9 @@ public <T extends Task> List<T> findAll(\n \n         StringBuilder queryString = buildfindAllQuery(reference);\n         if (SchedTask.class.equals(reference)) {\n-                queryString.append(\"AND \");\n+            queryString.append(\"AND \");\n         } else {\n-                queryString.append(\"WHERE \");            \n+            queryString.append(\"WHERE \");\n         }\n         queryString.append(\"e.resource=:resource\");\n "}]}