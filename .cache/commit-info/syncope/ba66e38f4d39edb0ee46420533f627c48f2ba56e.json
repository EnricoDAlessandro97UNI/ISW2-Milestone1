{"sha":"ba66e38f4d39edb0ee46420533f627c48f2ba56e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJhNjZlMzhmNGQzOWVkYjBlZTQ2NDIwNTMzZjYyN2M0OGYyYmE1NmU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2019-12-27T16:09:43Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2019-12-30T10:12:17Z"},"message":"Fixed label for validation message","tree":{"sha":"238d1b2c8c1b94faa330a23176ac0efe62d3d9fe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/238d1b2c8c1b94faa330a23176ac0efe62d3d9fe"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ba66e38f4d39edb0ee46420533f627c48f2ba56e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba66e38f4d39edb0ee46420533f627c48f2ba56e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ba66e38f4d39edb0ee46420533f627c48f2ba56e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba66e38f4d39edb0ee46420533f627c48f2ba56e/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"8571883e34fe6926da557d4f0041e7bb73618ad6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8571883e34fe6926da557d4f0041e7bb73618ad6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8571883e34fe6926da557d4f0041e7bb73618ad6"}],"stats":{"total":21,"additions":12,"deletions":9},"files":[{"sha":"0ec0bd058e6ef4f41b1a3893603085ecaee43589","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -30,6 +30,7 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n \n@@ -44,7 +45,7 @@ public AjaxCheckBoxPanel(\n         super(id, name, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         if (enableOnChange && !isReadOnly()) {\n             field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {"},{"sha":"ee9815d36325195bb20be3b0e1c83e7c896a2151","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDateFieldPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public class AjaxDateFieldPanel extends DateFieldPanel {\n \n@@ -36,7 +37,7 @@ public AjaxDateFieldPanel(\n         super(id, name, model, datePattern);\n \n         field = new AjaxDatePicker(\"field\", model, getLocale(), datePattern.getPattern());\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n     }\n \n     @Override"},{"sha":"cb1ddec48b19f426cda9b5789bacab829adb161b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDateTimeFieldPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public class AjaxDateTimeFieldPanel extends DateFieldPanel {\n \n@@ -39,7 +40,7 @@ public AjaxDateTimeFieldPanel(\n         // dateTimePattern should be spit into separate date and time pattern strings in order to be passed to the\n         // AjaxDateTimePicker constructor, but there is no safe way to do that - ignoring\n         field = new AjaxDateTimePicker(\"field\", model, getLocale());\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n     }\n \n     @Override"},{"sha":"33e618ff10eac5aa2403a89cef737268e9509766","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -28,7 +28,7 @@\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public class AjaxDropDownChoicePanel<T extends Serializable> extends FieldPanel<T> implements Cloneable {\n \n@@ -44,7 +44,7 @@ public AjaxDropDownChoicePanel(\n         super(id, name, model);\n \n         field = new BootstrapSelect<>(\"dropDownChoiceField\", model, List.of(), new ChoiceRenderer<>());\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {\n             field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {"},{"sha":"1f83e1e7be2821eef64b6637349b97c6c2629433","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -56,7 +56,7 @@\n import org.apache.wicket.markup.html.form.upload.FileUpload;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.lang.Bytes;\n@@ -145,7 +145,7 @@ public String build() {\n         uploadForm.add(container);\n \n         field = new TextField<>(\"textField\", model);\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : '(' + mimeType + ')'));\n "},{"sha":"cc6cffb265ff70df985a52b3e2985270c04d1854","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba66e38f4d39edb0ee46420533f627c48f2ba56e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=ba66e38f4d39edb0ee46420533f627c48f2ba56e","patch":"@@ -55,7 +55,7 @@\n import org.apache.wicket.markup.html.form.upload.FileUpload;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.lang.Bytes;\n@@ -143,7 +143,7 @@ public String build() {\n         uploadForm.add(container);\n \n         field = new TextField<>(\"textField\", model);\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : '(' + mimeType + ')'));\n "}]}