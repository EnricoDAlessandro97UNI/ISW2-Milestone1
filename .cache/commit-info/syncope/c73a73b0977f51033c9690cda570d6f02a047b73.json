{"sha":"c73a73b0977f51033c9690cda570d6f02a047b73","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM3M2E3M2IwOTc3ZjUxMDMzYzk2OTBjZGE1NzBkNmYwMmEwNDdiNzM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-23T16:56:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-23T16:56:19Z"},"message":"[SYNCOPE-620] persistence-api and common-lib","tree":{"sha":"b4a1014731fa356d6f44256309af74fdb5df6770","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b4a1014731fa356d6f44256309af74fdb5df6770"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c73a73b0977f51033c9690cda570d6f02a047b73","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c73a73b0977f51033c9690cda570d6f02a047b73","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c73a73b0977f51033c9690cda570d6f02a047b73","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c73a73b0977f51033c9690cda570d6f02a047b73/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8fe7f5c4db4e672c93b04a09adb449a5dd914caf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8fe7f5c4db4e672c93b04a09adb449a5dd914caf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8fe7f5c4db4e672c93b04a09adb449a5dd914caf"}],"stats":{"total":7214,"additions":7214,"deletions":0},"files":[{"sha":"4c9ccccad44015e4b21be7e95b3ae4a990070e87","filename":"syncope620/common/lib/pom.xml","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fpom.xml?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-common</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Common Lib</name>\n+  <description>Apache Syncope Common Lib</description>\n+  <groupId>org.apache.syncope.common</groupId>\n+  <artifactId>syncope-lib</artifactId>\n+  <packaging>jar</packaging>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-annotations</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-lang3</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+    </dependency>\n+  </dependencies>\n+</project>"},{"sha":"07528ea5286b187b66a72c50bc7067975381661e","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/annotation/ClassList.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FClassList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FClassList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FClassList.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.annotation;\n+\n+import java.lang.annotation.Retention;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+@Retention(RUNTIME)\n+public @interface ClassList {\n+}"},{"sha":"74697312e81214abdd8c50bff06060b87614cc9e","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/annotation/SchemaList.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FSchemaList.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.annotation;\n+\n+import java.lang.annotation.Retention;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+@Retention(RUNTIME)\n+public @interface SchemaList {\n+\n+    boolean extended() default false;\n+}"},{"sha":"57bcf52bc3691affe48cba49cb9ce71e801b6094","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/report/ReportletConf.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.report;\n+\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+public interface ReportletConf {\n+\n+    /**\n+     * Give name of related reportlet instance.\n+     *\n+     * @return name of this reportlet instance\n+     */\n+    String getName();\n+}"},{"sha":"19530104b19a60f0cee267e309bdf4518253bb80","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/AbstractCommonsLangType.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractCommonsLangType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractCommonsLangType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractCommonsLangType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import java.io.Serializable;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+\n+@XmlType\n+public abstract class AbstractCommonsLangType implements Serializable {\n+\n+    private static final long serialVersionUID = 3119542005279892164L;\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+}"},{"sha":"8d5a792243f2e9720044310e0ff6179f6643de83","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/AccountPolicySpec.java","status":"added","additions":188,"deletions":0,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,188 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.annotation.SchemaList;\n+\n+@XmlType\n+public class AccountPolicySpec implements PolicySpec {\n+\n+    private static final long serialVersionUID = 3259256974414758406L;\n+\n+    /**\n+     * Minimum length.\n+     */\n+    private int maxLength;\n+\n+    /**\n+     * Maximum length.\n+     */\n+    private int minLength;\n+\n+    /**\n+     * Pattern (regular expression) that must match.\n+     */\n+    private String pattern;\n+\n+    /**\n+     * Substrings not permitted.\n+     */\n+    private List<String> wordsNotPermitted;\n+\n+    /**\n+     * User attribute values not permitted.\n+     */\n+    @SchemaList\n+    private List<String> schemasNotPermitted;\n+\n+    /**\n+     * Substrings not permitted as prefix.\n+     */\n+    private List<String> prefixesNotPermitted;\n+\n+    /**\n+     * Substrings not permitted as suffix.\n+     */\n+    private List<String> suffixesNotPermitted;\n+\n+    /**\n+     * Specify if one or more lowercase characters are permitted.\n+     */\n+    private boolean allUpperCase;\n+\n+    /**\n+     * Specify if one or more uppercase characters are permitted.\n+     */\n+    private boolean allLowerCase;\n+\n+    /**\n+     * Specify if, when reached the maximum allowed number of subsequent login failures, user shall be suspended.\n+     */\n+    private boolean propagateSuspension;\n+\n+    /**\n+     * Number of permitted login retries.\n+     * 0 disabled; &gt;0 enabled.\n+     * If the number of subsequent failed logins will be greater then this value\n+     * the account will be suspended (lock-out).\n+     */\n+    private int permittedLoginRetries;\n+\n+    public boolean isAllLowerCase() {\n+        return allLowerCase;\n+    }\n+\n+    public void setAllLowerCase(final boolean allLowerCase) {\n+        this.allLowerCase = allLowerCase;\n+    }\n+\n+    public boolean isAllUpperCase() {\n+        return allUpperCase;\n+    }\n+\n+    public void setAllUpperCase(final boolean allUpperCase) {\n+        this.allUpperCase = allUpperCase;\n+    }\n+\n+    public int getMaxLength() {\n+        return maxLength;\n+    }\n+\n+    public void setMaxLength(final int maxLength) {\n+        this.maxLength = maxLength;\n+    }\n+\n+    public int getMinLength() {\n+        return minLength;\n+    }\n+\n+    public void setMinLength(final int minLength) {\n+        this.minLength = minLength;\n+    }\n+\n+    public String getPattern() {\n+        return pattern;\n+    }\n+\n+    public void setPattern(final String pattern) {\n+        this.pattern = pattern;\n+    }\n+\n+    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n+    @XmlElement(name = \"prefix\")\n+    @JsonProperty(\"prefixesNotPermitted\")\n+    public List<String> getPrefixesNotPermitted() {\n+        if (prefixesNotPermitted == null) {\n+            prefixesNotPermitted = new ArrayList<String>();\n+        }\n+        return prefixesNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"schemasNotPermitted\")\n+    @XmlElement(name = \"schema\")\n+    @JsonProperty(\"schemasNotPermitted\")\n+    public List<String> getSchemasNotPermitted() {\n+        if (schemasNotPermitted == null) {\n+            schemasNotPermitted = new ArrayList<String>();\n+        }\n+        return schemasNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n+    @XmlElement(name = \"suffix\")\n+    @JsonProperty(\"suffixesNotPermitted\")\n+    public List<String> getSuffixesNotPermitted() {\n+        if (suffixesNotPermitted == null) {\n+            suffixesNotPermitted = new ArrayList<String>();\n+        }\n+        return suffixesNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"wordsNotPermitted\")\n+    @XmlElement(name = \"word\")\n+    @JsonProperty(\"wordsNotPermitted\")\n+    public List<String> getWordsNotPermitted() {\n+        if (wordsNotPermitted == null) {\n+            wordsNotPermitted = new ArrayList<String>();\n+        }\n+        return wordsNotPermitted;\n+    }\n+\n+    public boolean isPropagateSuspension() {\n+        return propagateSuspension;\n+    }\n+\n+    public void setPropagateSuspension(final boolean propagateSuspension) {\n+        this.propagateSuspension = propagateSuspension;\n+    }\n+\n+    public int getPermittedLoginRetries() {\n+        return permittedLoginRetries;\n+    }\n+\n+    public void setPermittedLoginRetries(final int permittedLoginRetries) {\n+        this.permittedLoginRetries = permittedLoginRetries;\n+    }\n+}"},{"sha":"2fc937b390d41c1e59f925a9fb02701a6a9c541a","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/AttrSchemaType.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import java.util.Date;\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum AttrSchemaType {\n+\n+    String(String.class),\n+    Long(Long.class),\n+    Double(Double.class),\n+    Boolean(Boolean.class),\n+    Date(Date.class),\n+    Enum(Enum.class),\n+    Encrypted(byte[].class),\n+    Binary(byte[].class);\n+\n+    final private Class<?> type;\n+\n+    AttrSchemaType(final Class<?> type) {\n+        this.type = type;\n+    }\n+\n+    public Class<?> getType() {\n+        return type;\n+    }\n+\n+    public boolean isConversionPatternNeeded() {\n+        return this == AttrSchemaType.Date\n+                || this == AttrSchemaType.Double\n+                || this == AttrSchemaType.Long;\n+    }\n+}"},{"sha":"6b989dfa8d7459a45b7f637a6a3cfd0b68843220","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/AttributableType.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum AttributableType {\n+\n+    USER,\n+    ROLE,\n+    MEMBERSHIP,\n+    CONFIGURATION;\n+\n+}"},{"sha":"af5592eb7284cafa7e3fc0bbb676aa15f900fb8b","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/CipherAlgorithm.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum CipherAlgorithm {\n+\n+    SHA(\"SHA-1\", false),\n+    SHA1(\"SHA-1\", false),\n+    SHA256(\"SHA-256\", false),\n+    SHA512(\"SHA-512\", false),\n+    AES(\"AES\", true),\n+    SMD5(\"S-MD5\", false),\n+    SSHA(\"S-SHA-1\", false),\n+    SSHA1(\"S-SHA-1\", false),\n+    SSHA256(\"S-SHA-256\", false),\n+    SSHA512(\"S-SHA-512\", false),\n+    BCRYPT(\"BCRYPT\", false);\n+\n+    final private String algorithm;\n+\n+    final private boolean invertible;\n+\n+    CipherAlgorithm(final String algorithm, final boolean invertible) {\n+        this.algorithm = algorithm;\n+        this.invertible = invertible;\n+    }\n+\n+    public String getAlgorithm() {\n+        return algorithm;\n+    }\n+\n+    public boolean isInvertible() {\n+        return invertible;\n+    }\n+}"},{"sha":"37308e1a97fa5fdf336ec0f7f9f692713a393dbb","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ConflictResolutionAction.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum ConflictResolutionAction {\n+\n+    // ignore sync\n+    IGNORE,\n+    // sync first matcgh\n+    FIRSTMATCH,\n+    // sync last match\n+    LASTMATCH,\n+    // sync all\n+    ALL;\n+}"},{"sha":"02ca7aa8cc5529a916ebca0bed504fe8816fb277","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfPropSchema.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlRootElement\n+@XmlType\n+public class ConnConfPropSchema extends AbstractCommonsLangType implements Comparable<ConnConfPropSchema> {\n+\n+    private static final long serialVersionUID = -1976365781005801296L;\n+\n+    private String name;\n+\n+    private String displayName;\n+\n+    private String helpMessage;\n+\n+    private String type;\n+\n+    private boolean required;\n+\n+    private int order;\n+\n+    private boolean confidential;\n+\n+    private final List<Object> defaultValues = new ArrayList<>();\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n+    public boolean isRequired() {\n+        return required;\n+    }\n+\n+    public void setRequired(final boolean required) {\n+        this.required = required;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(final String type) {\n+        this.type = type;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(final String displayName) {\n+        this.displayName = displayName;\n+    }\n+\n+    public String getHelpMessage() {\n+        return helpMessage;\n+    }\n+\n+    public void setHelpMessage(final String helpMessage) {\n+        this.helpMessage = helpMessage;\n+    }\n+\n+    public int getOrder() {\n+        return order;\n+    }\n+\n+    public void setOrder(final int order) {\n+        this.order = order;\n+    }\n+\n+    public boolean isConfidential() {\n+        return confidential;\n+    }\n+\n+    public void setConfidential(final boolean confidential) {\n+        this.confidential = confidential;\n+    }\n+\n+    @XmlElementWrapper(name = \"defaultValues\")\n+    @XmlElement(name = \"defaultValue\")\n+    @JsonProperty(\"defaultValues\")\n+    public List<Object> getDefaultValues() {\n+        return defaultValues;\n+    }\n+\n+    @Override\n+    public int compareTo(final ConnConfPropSchema other) {\n+        return this.getOrder() > other.getOrder()\n+                ? 1\n+                : this.getOrder() < other.getOrder()\n+                        ? -1\n+                        : 0;\n+    }\n+}"},{"sha":"13b37b2fce7124783044490f5a4d2d0192c62d3a","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfProperty.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.ObjectUtils;\n+\n+@XmlRootElement\n+@XmlType\n+public class ConnConfProperty extends AbstractCommonsLangType implements Comparable<ConnConfProperty> {\n+\n+    private static final long serialVersionUID = -8391413960221862238L;\n+\n+    private ConnConfPropSchema schema;\n+\n+    private final List<Object> values = new ArrayList<>();\n+\n+    private boolean overridable;\n+\n+    public ConnConfPropSchema getSchema() {\n+        return schema;\n+    }\n+\n+    public void setSchema(final ConnConfPropSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @XmlElementWrapper(name = \"values\")\n+    @XmlElement(name = \"value\")\n+    @JsonProperty(\"values\")\n+    public List<Object> getValues() {\n+        return values;\n+    }\n+\n+    public boolean isOverridable() {\n+        return overridable;\n+    }\n+\n+    public void setOverridable(final boolean overridable) {\n+        this.overridable = overridable;\n+    }\n+\n+    @Override\n+    public int compareTo(final ConnConfProperty connConfProperty) {\n+        return ObjectUtils.compare(this.getSchema(), connConfProperty.getSchema());\n+    }\n+}"},{"sha":"a0e5781fc196ba8520ce19d1f98a800ac7dc712f","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnectorCapability.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+/**\n+ * Enum of all possible capabilities that a connector instance can expose.\n+ */\n+@XmlEnum\n+public enum ConnectorCapability {\n+\n+    AUTHENTICATE,\n+    ONE_PHASE_CREATE,\n+    TWO_PHASES_CREATE,\n+    ONE_PHASE_UPDATE,\n+    TWO_PHASES_UPDATE,\n+    ONE_PHASE_DELETE,\n+    TWO_PHASES_DELETE,\n+    SEARCH,\n+    SYNC;\n+\n+}"},{"sha":"2450c56bf24af5de4516afa2c02b095f14ef87a8","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/EntityViolationType.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum EntityViolationType {\n+\n+    Standard(\"\"),\n+    InvalidAccountPolicy(\"org.apache.syncope.core.validation.accountpolicy\"),\n+    InvalidConnInstanceLocation(\"org.apache.syncope.core.validation.conninstance.location\"),\n+    InvalidConnPoolConf(\"org.apache.syncope.core.validation.conninstance.poolConf\"),\n+    InvalidMapping(\"org.apache.syncope.core.validation.mapping\"),\n+    InvalidMSchema(\"org.apache.syncope.core.validation.attrvalue.mSchema\"),\n+    InvalidMDerSchema(\"org.apache.syncope.core.validation.attrvalue.mDerSchema\"),\n+    InvalidMVirSchema(\"org.apache.syncope.core.validation.attrvalue.mVirSchema\"),\n+    InvalidName(\"org.apache.syncope.core.validation.name\"),\n+    InvalidNotification(\"org.apache.syncope.core.validation.notification\"),\n+    InvalidPassword(\"org.apache.syncope.core.validation.syncopeuser.password\"),\n+    InvalidPasswordPolicy(\"org.apache.syncope.core.validation.passwordpolicy\"),\n+    InvalidPolicy(\"org.apache.syncope.core.validation.policy\"),\n+    InvalidPropagationTask(\"org.apache.syncope.core.validation.propagationtask\"),\n+    InvalidRSchema(\"org.apache.syncope.core.validation.attrvalue.rSchema\"),\n+    InvalidRDerSchema(\"org.apache.syncope.core.validation.attrvalue.rDerSchema\"),\n+    InvalidRVirSchema(\"org.apache.syncope.core.validation.attrvalue.rVirSchema\"),\n+    InvalidReport(\"org.apache.syncope.core.validation.report\"),\n+    InvalidResource(\"org.apache.syncope.core.validation.externalresource\"),\n+    InvalidRoleOwner(\"org.apache.syncope.core.validation.syncoperole.owner\"),\n+    InvalidSchemaEncrypted(\"org.apache.syncope.core.validation.schema.encrypted\"),\n+    InvalidSchemaEnum(\"org.apache.syncope.core.validation.schema.enum\"),\n+    InvalidSchemaMultivalueUnique(\"org.apache.syncope.core.validation.schema.multivalueUnique\"),\n+    InvalidSchedTask(\"org.apache.syncope.core.validation.schedtask\"),\n+    InvalidSyncTask(\"org.apache.syncope.core.validation.synctask\"),\n+    InvalidSyncPolicy(\"org.apache.syncope.core.validation.syncpolicy\"),\n+    InvalidUSchema(\"org.apache.syncope.core.validation.attrvalue.uSchema\"),\n+    InvalidUDerSchema(\"org.apache.syncope.core.validation.attrvalue.derSchema\"),\n+    InvalidUVirSchema(\"org.apache.syncope.core.validation.attrvalue.uVirSchema\"),\n+    InvalidUsername(\"org.apache.syncope.core.validation.syncopeuser.username\"),\n+    InvalidValueList(\"org.apache.syncope.core.validation.attr.valueList\"),\n+    MoreThanOneNonNull(\"org.apache.syncope.core.validation.attrvalue.moreThanOneNonNull\");\n+\n+    private String message;\n+\n+    EntityViolationType(final String message) {\n+        this.message = message;\n+    }\n+\n+    public void setMessage(final String message) {\n+        this.message = message;\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+}"},{"sha":"5fefcc99487a792c3b548b3c97f80d30869b3ca6","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/IntMappingType.java","status":"added","additions":201,"deletions":0,"changes":201,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,201 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+/**\n+ * Internal attribute mapping type.\n+ */\n+@XmlEnum\n+public enum IntMappingType {\n+\n+    // Unfortunately enum type cannot be extended ...\n+    // -------------------------\n+    // User attribute types (the same in UserMappingType)\n+    // -------------------------\n+    UserSchema(AttributableType.USER),\n+    UserDerivedSchema(AttributableType.USER),\n+    UserVirtualSchema(AttributableType.USER),\n+    UserId(AttributableType.USER),\n+    Username(AttributableType.USER),\n+    Password(AttributableType.USER),\n+    // -------------------------\n+    // Role attribute types (the same in RoleMappingType)\n+    // -------------------------\n+    RoleSchema(AttributableType.ROLE),\n+    RoleDerivedSchema(AttributableType.ROLE),\n+    RoleVirtualSchema(AttributableType.ROLE),\n+    RoleId(AttributableType.ROLE),\n+    RoleName(AttributableType.ROLE),\n+    RoleOwnerSchema(AttributableType.ROLE),\n+    // -------------------------\n+    // Membership attribute types (the same in MembershipMappingType)\n+    // -------------------------\n+    MembershipSchema(AttributableType.MEMBERSHIP),\n+    MembershipDerivedSchema(AttributableType.MEMBERSHIP),\n+    MembershipVirtualSchema(AttributableType.MEMBERSHIP),\n+    MembershipId(AttributableType.MEMBERSHIP);\n+\n+    private AttributableType attributableType;\n+\n+    private IntMappingType(final AttributableType attributableType) {\n+        this.attributableType = attributableType;\n+    }\n+\n+    public AttributableType getAttributableType() {\n+        return attributableType;\n+    }\n+\n+    /**\n+     * Get attribute types for a certain attributable type.\n+     *\n+     * @param attributableType attributable type\n+     * @param toBeFiltered types to be filtered from the result.\n+     * @return set of attribute types.\n+     */\n+    public static Set<IntMappingType> getAttributeTypes(\n+            final AttributableType attributableType, final Collection<IntMappingType> toBeFiltered) {\n+\n+        final Set<IntMappingType> res = getAttributeTypes(attributableType);\n+        res.removeAll(toBeFiltered);\n+\n+        return res;\n+    }\n+\n+    /**\n+     * Get attribute types for a certain attributable type.\n+     *\n+     * @param attributableType attributable type\n+     * @return set of attribute types.\n+     */\n+    public static Set<IntMappingType> getAttributeTypes(final AttributableType attributableType) {\n+        final EnumSet<?> enumset;\n+\n+        switch (attributableType) {\n+            case ROLE:\n+                enumset = EnumSet.allOf(RoleMappingType.class);\n+                break;\n+\n+            case MEMBERSHIP:\n+                enumset = EnumSet.allOf(MembershipMappingType.class);\n+                break;\n+\n+            case USER:\n+            default:\n+                enumset = EnumSet.allOf(UserMappingType.class);\n+        }\n+\n+        final Set<IntMappingType> result = new HashSet<IntMappingType>(enumset.size());\n+        for (Object obj : enumset) {\n+            result.add(IntMappingType.valueOf(obj.toString()));\n+        }\n+\n+        return result;\n+    }\n+\n+    public static Set<IntMappingType> getEmbedded() {\n+        return EnumSet.of(\n+                IntMappingType.UserId, IntMappingType.Username, IntMappingType.Password,\n+                IntMappingType.RoleId, IntMappingType.RoleName, IntMappingType.RoleOwnerSchema,\n+                IntMappingType.MembershipId);\n+    }\n+\n+    /**\n+     * Check if attribute type belongs to the specified attributable type set.\n+     *\n+     * @param attributableType attributable type.\n+     * @param type attribute type.\n+     * @return true if attribute type belongs to the specified attributable type set.\n+     */\n+    public static boolean contains(final AttributableType attributableType, final String type) {\n+        switch (attributableType) {\n+            case ROLE:\n+                for (RoleMappingType c : RoleMappingType.values()) {\n+                    if (c.name().equals(type)) {\n+                        return true;\n+                    }\n+                }\n+                break;\n+\n+            case MEMBERSHIP:\n+                for (MembershipMappingType c : MembershipMappingType.values()) {\n+                    if (c.name().equals(type)) {\n+                        return true;\n+                    }\n+                }\n+                break;\n+\n+            case USER:\n+            default:\n+                for (UserMappingType c : UserMappingType.values()) {\n+                    if (c.name().equals(type)) {\n+                        return true;\n+                    }\n+                }\n+                break;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * User attribute types.\n+     */\n+    private enum UserMappingType {\n+\n+        UserSchema,\n+        UserDerivedSchema,\n+        UserVirtualSchema,\n+        UserId,\n+        Username,\n+        Password;\n+\n+    }\n+\n+    /**\n+     * Role attribute types.\n+     */\n+    private enum RoleMappingType {\n+\n+        RoleSchema,\n+        RoleDerivedSchema,\n+        RoleVirtualSchema,\n+        RoleId,\n+        RoleName,\n+        RoleOwnerSchema;\n+\n+    }\n+\n+    /**\n+     * Membership attribute types.\n+     */\n+    private enum MembershipMappingType {\n+\n+        MembershipSchema,\n+        MembershipDerivedSchema,\n+        MembershipVirtualSchema,\n+        MembershipId;\n+\n+    }\n+}"},{"sha":"01f7d2eb23e912599b5a2e396ded1b8df0380a56","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/LoggerLevel.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+import org.apache.logging.log4j.Level;\n+\n+@XmlEnum\n+public enum LoggerLevel {\n+\n+    OFF(Level.OFF),\n+    FATAL(Level.FATAL),\n+    ERROR(Level.ERROR),\n+    WARN(Level.WARN),\n+    INFO(Level.INFO),\n+    DEBUG(Level.DEBUG),\n+    TRACE(Level.TRACE),\n+    ALL(Level.ALL);\n+\n+    private final Level level;\n+\n+    LoggerLevel(final Level level) {\n+        this.level = level;\n+    }\n+\n+    public Level getLevel() {\n+        return level;\n+    }\n+\n+    public static LoggerLevel fromLevel(final Level level) {\n+        return LoggerLevel.valueOf(level.name());\n+    }\n+}"},{"sha":"f77ed818eef338f8fd4b7464652e44a26ae5af88","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/LoggerType.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum LoggerType {\n+\n+    /**\n+     * This type describes a common logger used to handle system and application events.\n+     */\n+    LOG(\"\"),\n+    /**\n+     * Audit logger only focus on security related events, usually logging how did what and when.\n+     * In case of a security incident audit loggers should allow an administrator to recall all\n+     * actions a certain user has done.\n+     */\n+    AUDIT(\"syncope.audit\");\n+\n+    private String prefix;\n+\n+    LoggerType(final String prefix) {\n+        this.prefix = prefix;\n+    }\n+\n+    public String getPrefix() {\n+        return prefix;\n+    }\n+}"},{"sha":"dc8c23e118205244f1727597413dc788f5dc72a8","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/MappingPurpose.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+public enum MappingPurpose {\n+\n+    BOTH,\n+    SYNCHRONIZATION,\n+    PROPAGATION,\n+    NONE\n+\n+}"},{"sha":"39764d945efbe347ad4c2d0e3501b34bd5582c36","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/MatchingRule.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+/**\n+ * Sync/Push task matching rule.\n+ */\n+@XmlEnum\n+public enum MatchingRule {\n+\n+    /**\n+     * Do not perform any action.\n+     */\n+    IGNORE,\n+    /**\n+     * Update matching entity.\n+     */\n+    UPDATE,\n+    /**\n+     * Delete resource entity.\n+     */\n+    DEPROVISION,\n+    /**\n+     * Unlink resource and delete resource entity.\n+     */\n+    UNASSIGN,\n+    /**\n+     * Just unlink resource without performing any (de-)provisioning operation.\n+     */\n+    UNLINK,\n+    /**\n+     * Just link resource without performing any (de-)provisioning operation.\n+     */\n+    LINK\n+\n+}"},{"sha":"448fcebb772cf102997d77186d58173085a16b64","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/PasswordPolicySpec.java","status":"added","additions":367,"deletions":0,"changes":367,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,367 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.annotation.SchemaList;\n+\n+@XmlType\n+public class PasswordPolicySpec implements PolicySpec {\n+\n+    private static final long serialVersionUID = -7988778083915548547L;\n+\n+    /**\n+     * History length.\n+     */\n+    private int historyLength;\n+\n+    /**\n+     * Minimum length.\n+     */\n+    private int maxLength;\n+\n+    /**\n+     * Maximum length.\n+     */\n+    private int minLength;\n+\n+    /**\n+     * Substrings not permitted.\n+     */\n+    private List<String> wordsNotPermitted;\n+\n+    /**\n+     * User attribute values not permitted.\n+     */\n+    @SchemaList\n+    private List<String> schemasNotPermitted;\n+\n+    /**\n+     * Specify if one or more non alphanumeric characters are required.\n+     */\n+    private boolean nonAlphanumericRequired;\n+\n+    /**\n+     * Specify if one or more alphanumeric characters are required.\n+     */\n+    private boolean alphanumericRequired;\n+\n+    /**\n+     * Specify if one or more digits are required.\n+     */\n+    private boolean digitRequired;\n+\n+    /**\n+     * Specify if one or more lowercase alphabetic characters are required.\n+     */\n+    private boolean lowercaseRequired;\n+\n+    /**\n+     * Specify if one or more uppercase alphabetic characters are required.\n+     */\n+    private boolean uppercaseRequired;\n+\n+    /**\n+     * Specify if must start with a digit.\n+     */\n+    private boolean mustStartWithDigit;\n+\n+    /**\n+     * Specify if mustn't start with a digit.\n+     */\n+    private boolean mustntStartWithDigit;\n+\n+    /**\n+     * Specify if must end with a digit.\n+     */\n+    private boolean mustEndWithDigit;\n+\n+    /**\n+     * Specify if mustn't end with a digit.\n+     */\n+    private boolean mustntEndWithDigit;\n+\n+    /**\n+     * Specify if must start with a non alphanumeric character.\n+     */\n+    private boolean mustStartWithNonAlpha;\n+\n+    /**\n+     * Specify if must start with a alphanumeric character.\n+     */\n+    private boolean mustStartWithAlpha;\n+\n+    /**\n+     * Specify if mustn't start with a non alphanumeric character.\n+     */\n+    private boolean mustntStartWithNonAlpha;\n+\n+    /**\n+     * Specify if mustn't start with a alphanumeric character.\n+     */\n+    private boolean mustntStartWithAlpha;\n+\n+    /**\n+     * Specify if must end with a non alphanumeric character.\n+     */\n+    private boolean mustEndWithNonAlpha;\n+\n+    /**\n+     * Specify if must end with a alphanumeric character.\n+     */\n+    private boolean mustEndWithAlpha;\n+\n+    /**\n+     * Specify if mustn't end with a non alphanumeric character.\n+     */\n+    private boolean mustntEndWithNonAlpha;\n+\n+    /**\n+     * Specify if mustn't end with a alphanumeric character.\n+     */\n+    private boolean mustntEndWithAlpha;\n+\n+    /**\n+     * Specify if password shall not be stored internally.\n+     */\n+    private boolean allowNullPassword;\n+\n+    /**\n+     * Substrings not permitted as prefix.\n+     */\n+    private List<String> prefixesNotPermitted;\n+\n+    /**\n+     * Substrings not permitted as suffix.\n+     */\n+    private List<String> suffixesNotPermitted;\n+\n+    public boolean isDigitRequired() {\n+        return digitRequired;\n+    }\n+\n+    public void setDigitRequired(final boolean digitRequired) {\n+        this.digitRequired = digitRequired;\n+    }\n+\n+    public boolean isLowercaseRequired() {\n+        return lowercaseRequired;\n+    }\n+\n+    public void setLowercaseRequired(final boolean lowercaseRequired) {\n+        this.lowercaseRequired = lowercaseRequired;\n+    }\n+\n+    public int getMaxLength() {\n+        return maxLength;\n+    }\n+\n+    public void setMaxLength(final int maxLength) {\n+        this.maxLength = maxLength;\n+    }\n+\n+    public int getMinLength() {\n+        return minLength;\n+    }\n+\n+    public void setMinLength(final int minLength) {\n+        this.minLength = minLength;\n+    }\n+\n+    public boolean isMustEndWithDigit() {\n+        return mustEndWithDigit;\n+    }\n+\n+    public void setMustEndWithDigit(final boolean mustEndWithDigit) {\n+        this.mustEndWithDigit = mustEndWithDigit;\n+    }\n+\n+    public boolean isMustEndWithNonAlpha() {\n+        return mustEndWithNonAlpha;\n+    }\n+\n+    public void setMustEndWithNonAlpha(final boolean mustEndWithNonAlpha) {\n+        this.mustEndWithNonAlpha = mustEndWithNonAlpha;\n+    }\n+\n+    public boolean isMustStartWithDigit() {\n+        return mustStartWithDigit;\n+    }\n+\n+    public void setMustStartWithDigit(final boolean mustStartWithDigit) {\n+        this.mustStartWithDigit = mustStartWithDigit;\n+    }\n+\n+    public boolean isMustStartWithNonAlpha() {\n+        return mustStartWithNonAlpha;\n+    }\n+\n+    public void setMustStartWithNonAlpha(final boolean mustStartWithNonAlpha) {\n+        this.mustStartWithNonAlpha = mustStartWithNonAlpha;\n+    }\n+\n+    public boolean isMustntEndWithDigit() {\n+        return mustntEndWithDigit;\n+    }\n+\n+    public void setMustntEndWithDigit(final boolean mustntEndWithDigit) {\n+        this.mustntEndWithDigit = mustntEndWithDigit;\n+    }\n+\n+    public boolean isMustntEndWithNonAlpha() {\n+        return mustntEndWithNonAlpha;\n+    }\n+\n+    public void setMustntEndWithNonAlpha(final boolean mustntEndWithNonAlpha) {\n+        this.mustntEndWithNonAlpha = mustntEndWithNonAlpha;\n+    }\n+\n+    public boolean isMustntStartWithDigit() {\n+        return mustntStartWithDigit;\n+    }\n+\n+    public void setMustntStartWithDigit(final boolean mustntStartWithDigit) {\n+        this.mustntStartWithDigit = mustntStartWithDigit;\n+    }\n+\n+    public boolean isMustntStartWithNonAlpha() {\n+        return mustntStartWithNonAlpha;\n+    }\n+\n+    public void setMustntStartWithNonAlpha(final boolean mustntStartWithNonAlpha) {\n+        this.mustntStartWithNonAlpha = mustntStartWithNonAlpha;\n+    }\n+\n+    public boolean isNonAlphanumericRequired() {\n+        return nonAlphanumericRequired;\n+    }\n+\n+    public void setNonAlphanumericRequired(final boolean nonAlphanumericRequired) {\n+        this.nonAlphanumericRequired = nonAlphanumericRequired;\n+    }\n+\n+    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n+    @XmlElement(name = \"prefix\")\n+    @JsonProperty(\"prefixesNotPermitted\")\n+    public List<String> getPrefixesNotPermitted() {\n+        if (prefixesNotPermitted == null) {\n+            prefixesNotPermitted = new ArrayList<String>();\n+        }\n+        return prefixesNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"schemasNotPermitted\")\n+    @XmlElement(name = \"schema\")\n+    @JsonProperty(\"schemasNotPermitted\")\n+    public List<String> getSchemasNotPermitted() {\n+        if (schemasNotPermitted == null) {\n+            schemasNotPermitted = new ArrayList<String>();\n+        }\n+        return schemasNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n+    @XmlElement(name = \"suffix\")\n+    @JsonProperty(\"suffixesNotPermitted\")\n+    public List<String> getSuffixesNotPermitted() {\n+        if (suffixesNotPermitted == null) {\n+            suffixesNotPermitted = new ArrayList<String>();\n+        }\n+        return suffixesNotPermitted;\n+    }\n+\n+    public boolean isUppercaseRequired() {\n+        return uppercaseRequired;\n+    }\n+\n+    public void setUppercaseRequired(final boolean uppercaseRequired) {\n+        this.uppercaseRequired = uppercaseRequired;\n+    }\n+\n+    @XmlElementWrapper(name = \"wordsNotPermitted\")\n+    @XmlElement(name = \"word\")\n+    @JsonProperty(\"wordsNotPermitted\")\n+    public List<String> getWordsNotPermitted() {\n+        if (wordsNotPermitted == null) {\n+            wordsNotPermitted = new ArrayList<String>();\n+        }\n+        return wordsNotPermitted;\n+    }\n+\n+    public boolean isAlphanumericRequired() {\n+        return alphanumericRequired;\n+    }\n+\n+    public void setAlphanumericRequired(final boolean alphanumericRequired) {\n+        this.alphanumericRequired = alphanumericRequired;\n+    }\n+\n+    public boolean isMustEndWithAlpha() {\n+        return mustEndWithAlpha;\n+    }\n+\n+    public void setMustEndWithAlpha(final boolean mustEndWithAlpha) {\n+        this.mustEndWithAlpha = mustEndWithAlpha;\n+    }\n+\n+    public boolean isMustStartWithAlpha() {\n+        return mustStartWithAlpha;\n+    }\n+\n+    public void setMustStartWithAlpha(final boolean mustStartWithAlpha) {\n+        this.mustStartWithAlpha = mustStartWithAlpha;\n+    }\n+\n+    public boolean isMustntEndWithAlpha() {\n+        return mustntEndWithAlpha;\n+    }\n+\n+    public void setMustntEndWithAlpha(final boolean mustntEndWithAlpha) {\n+        this.mustntEndWithAlpha = mustntEndWithAlpha;\n+    }\n+\n+    public boolean isMustntStartWithAlpha() {\n+        return mustntStartWithAlpha;\n+    }\n+\n+    public void setMustntStartWithAlpha(final boolean mustntStartWithAlpha) {\n+        this.mustntStartWithAlpha = mustntStartWithAlpha;\n+    }\n+\n+    public int getHistoryLength() {\n+        return historyLength;\n+    }\n+\n+    public void setHistoryLength(final int historyLength) {\n+        this.historyLength = historyLength;\n+    }\n+\n+    public boolean isAllowNullPassword() {\n+        return allowNullPassword;\n+    }\n+\n+    public void setAllowNullPassword(final boolean allowNullPassword) {\n+        this.allowNullPassword = allowNullPassword;\n+    }\n+}"},{"sha":"cac7c1c23c399075c1044bacafc3cd728f85cb5c","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/PolicySpec.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicySpec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+public interface PolicySpec {\n+\n+}"},{"sha":"a8f12f76a9b75f29fd78480daf3e6f79cc937141","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/PolicyType.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum PolicyType {\n+\n+    /**\n+     * Account policy like:\n+     * password expire time, change password at first access, ...\n+     */\n+    ACCOUNT(\"Account Policy\"),\n+    GLOBAL_ACCOUNT(\"Account Global Policy\"),\n+    /**\n+     * Password policy regarding password syntax.\n+     */\n+    PASSWORD(\"Password Policy\"),\n+    GLOBAL_PASSWORD(\"Password Global Policy\"),\n+    /**\n+     * SYNC policy regarding account conflicts resolution.\n+     */\n+    SYNC(\"Synchronization Policy\"),\n+    GLOBAL_SYNC(\"Synchronization Global Policy\"),\n+    /**\n+     * PUSH policy regarding account conflicts resolution.\n+     */\n+    PUSH(\"Push Policy\"),\n+    GLOBAL_PUSH(\"Push Global Policy\");\n+\n+    private String description;\n+\n+    PolicyType(final String description) {\n+        this.description = description;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public static PolicyType fromString(final String value) {\n+        return PolicyType.valueOf(value.toUpperCase());\n+    }\n+}"},{"sha":"8b10bc8d90cfac34932a161f04ae59b777abbe6c","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationMode.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum PropagationMode {\n+\n+    ONE_PHASE,\n+    TWO_PHASES\n+\n+}"},{"sha":"2fe42edf5bf7579a1ae057e5d4cf3cc7eb705660","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ReportExecStatus.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum ReportExecStatus {\n+\n+    STARTED,\n+    RUNNING,\n+    SUCCESS,\n+    FAILURE;\n+\n+    public static ReportExecStatus fromString(final String value) {\n+        return ReportExecStatus.valueOf(value.toUpperCase());\n+    }\n+}"},{"sha":"b399b178c6e8ec2a7d47741a5eb0d3031b0d10e9","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceOperation.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum ResourceOperation {\n+\n+    CREATE,\n+    UPDATE,\n+    DELETE,\n+    NONE\n+\n+}"},{"sha":"0acd3147203f8b68e877b403218aeaefa7af5979","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/SubjectType.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum SubjectType {\n+\n+    USER,\n+    ROLE;\n+\n+    public AttributableType asAttributableType() {\n+        return this == USER\n+                ? AttributableType.USER\n+                : AttributableType.ROLE;\n+    }\n+}"},{"sha":"9894b9b4fd0850e2ebdb70cead9db8fc889ac3ca","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/SyncPolicySpec.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.annotation.ClassList;\n+import org.apache.syncope.common.lib.annotation.SchemaList;\n+\n+@XmlType\n+public class SyncPolicySpec implements PolicySpec {\n+\n+    private static final long serialVersionUID = -3144027171719498127L;\n+\n+    /**\n+     * SyncopeUser attributes and fields for matching during synchronization.\n+     */\n+    @SchemaList(extended = true)\n+    private final List<String> uAltSearchSchemas = new ArrayList<String>();\n+\n+    @ClassList\n+    private String userJavaRule;\n+\n+    /**\n+     * SyncopeRole attributes and fields for matching during synchronization.\n+     */\n+    @SchemaList(extended = true)\n+    private final List<String> rAltSearchSchemas = new ArrayList<String>();\n+\n+    @ClassList\n+    private String roleJavaRule;\n+\n+    /**\n+     * Conflict resolution action.\n+     */\n+    private ConflictResolutionAction conflictResolutionAction;\n+\n+    public ConflictResolutionAction getConflictResolutionAction() {\n+        return conflictResolutionAction == null\n+                ? ConflictResolutionAction.IGNORE\n+                : conflictResolutionAction;\n+    }\n+\n+    public void setConflictResolutionAction(final ConflictResolutionAction conflictResolutionAction) {\n+        this.conflictResolutionAction = conflictResolutionAction;\n+    }\n+\n+    @XmlElementWrapper(name = \"userAltSearchSchemas\")\n+    @XmlElement(name = \"userAltSearchSchema\")\n+    @JsonProperty(\"userAltSearchSchemas\")\n+    public List<String> getuAltSearchSchemas() {\n+        return uAltSearchSchemas;\n+    }\n+\n+    @XmlElementWrapper(name = \"roleAltSearchSchemas\")\n+    @XmlElement(name = \"roleAltSearchSchema\")\n+    @JsonProperty(\"roleAltSearchSchemas\")\n+    public List<String> getrAltSearchSchemas() {\n+        return rAltSearchSchemas;\n+    }\n+\n+    public String getRoleJavaRule() {\n+        return roleJavaRule;\n+    }\n+\n+    public void setRoleJavaRule(final String roleJavaRule) {\n+        this.roleJavaRule = roleJavaRule;\n+    }\n+\n+    public String getUserJavaRule() {\n+        return userJavaRule;\n+    }\n+\n+    public void setUserJavaRule(final String userJavaRule) {\n+        this.userJavaRule = userJavaRule;\n+    }\n+}"},{"sha":"e8232b832ab2e38de9e2ccf8c2e3469b06c43a29","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/TraceLevel.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum TraceLevel {\n+\n+    /**\n+     * No details at all.\n+     */\n+    NONE,\n+    /**\n+     * Only failed entries.\n+     */\n+    FAILURES,\n+    /**\n+     * Only an overall summary.\n+     */\n+    SUMMARY,\n+    /**\n+     * All available information, including per-entry information.\n+     */\n+    ALL\n+\n+}"},{"sha":"f579128b970f4346ce6b06bcbf7dda0af9e37020","filename":"syncope620/common/lib/src/main/java/org/apache/syncope/common/lib/types/UnmatchingRule.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+/**\n+ * Sync/Push task un-matching rule.\n+ */\n+@XmlEnum\n+public enum UnmatchingRule {\n+\n+    /**\n+     * Do not perform any action.\n+     */\n+    IGNORE,\n+    /**\n+     * Link the resource and create entity.\n+     */\n+    ASSIGN,\n+    /**\n+     * Create entity without linking the resource.\n+     */\n+    PROVISION,\n+    /**\n+     * Just unlink resource without performing any (de-)provisioning operation.\n+     * In case of sync task UNLINK and IGNORE will coincide.\n+     */\n+    UNLINK\n+\n+}"},{"sha":"0045a544221e5610ce7efd4a193f002aab04bce0","filename":"syncope620/common/pom.xml","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fcommon%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fcommon%2Fpom.xml?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Common</name>\n+  <description>Apache Syncope Common</description>\n+  <groupId>org.apache.syncope</groupId>\n+  <artifactId>syncope-common</artifactId>\n+  <packaging>pom</packaging>\n+\n+  <modules>\n+    <module>lib</module>\n+  </modules>\n+\n+</project>"},{"sha":"368c76e9aaaf722463eb54adb7e3c41b86f45b74","filename":"syncope620/pom.xml","status":"added","additions":401,"deletions":0,"changes":401,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fpom.xml?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,401 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <name>Apache Syncope</name>\n+  <description>Apache Syncope parent POM</description>\n+\n+  <groupId>org.apache.syncope</groupId>\n+  <artifactId>syncope</artifactId>\n+  <version>2.0.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <parent>\n+    <groupId>org.apache</groupId>\n+    <artifactId>apache</artifactId>\n+    <version>16</version>\n+    <relativePath />\n+  </parent>\n+\n+  <url>http://syncope.apache.org/</url>\n+\n+  <inceptionYear>2010</inceptionYear>\n+\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+  <scm>\n+    <connection>scm:git:https://git-wip-us.apache.org/repos/asf/syncope.git</connection>\n+    <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/syncope.git</developerConnection>\n+    <url>https://git-wip-us.apache.org/repos/asf?p=syncope.git</url>\n+  </scm>\n+\n+  <issueManagement>\n+    <system>jira</system>\n+    <url>https://issues.apache.org/jira/browse/SYNCOPE</url>\n+  </issueManagement>\n+\n+  <ciManagement>\n+    <system>Jenkins</system>\n+    <url>https://builds.apache.org/view/S-Z/view/Syncope/</url>\n+  </ciManagement>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>syncope.website</id>\n+      <name>Apache Syncope website</name>\n+      <url>${site.deploymentBaseUrl}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <mailingLists>\n+    <mailingList>\n+      <name>Syncope User List</name>\n+      <subscribe>user-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>user-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>user@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-user/</archive>\n+      <otherArchives>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n+        <otherArchive>http://syncope-user.1051894.n5.nabble.com/</otherArchive>\n+        <otherArchive>http://www.mail-archive.com/user@syncope.apache.org/</otherArchive>\n+      </otherArchives>\n+    </mailingList>\n+    <mailingList>\n+      <name>Syncope Developer List</name>\n+      <subscribe>dev-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>dev-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>dev@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-dev/</archive>\n+      <otherArchives>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n+        <otherArchive>http://syncope-dev.1063484.n5.nabble.com/</otherArchive>\n+        <otherArchive>http://www.mail-archive.com/dev@syncope.apache.org/</otherArchive>\n+      </otherArchives>\n+    </mailingList>\n+    <mailingList>\n+      <name>Syncope Commits List</name>\n+      <subscribe>commits-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>commits-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>commits@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-commits/</archive>\n+      <otherArchives>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n+        <otherArchive>http://www.mail-archive.com/commits@syncope.apache.org/</otherArchive>\n+      </otherArchives>\n+    </mailingList>\n+  </mailingLists>\n+\n+  <developers>\n+    <developer>\n+      <id>ilgrosso</id>\n+      <email>ilgrosso@apache.org</email>\n+      <name>Francesco Chicchiriccò</name>\n+      <organization>Tirasa</organization>\n+      <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+      <roles>\n+        <role>ASF member</role>\n+        <role>PMC chair</role>\n+      </roles>\n+      <url>http://people.apache.org/~ilgrosso/</url>\n+    </developer>\n+    <developer>\n+      <id>fmartelli</id>\n+      <name>Fabio Martelli</name>\n+      <organization>Tirasa</organization>\n+      <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+      <roles>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~fmartelli/</url>\n+    </developer>\n+    <developer>\n+      <id>mdisabatino</id>\n+      <name>Marco Di Sabatino Di Diodoro</name>\n+      <organization>Tirasa</organization>\n+      <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+      <roles>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~mdisabatino/</url>\n+    </developer>\n+    <developer>\n+      <id>massi</id>\n+      <name>Massimiliano Perrone</name>\n+      <organization>Tirasa</organization>\n+      <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+      <roles>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~massi/</url>\n+    </developer>    \n+    <developer>\n+      <id>rene</id>\n+      <name>René Mulder</name>\n+      <organization>Everett</organization>\n+      <organizationUrl>http://www.everett.nl/</organizationUrl>\n+      <roles>\n+        <role>committer</role>\n+      </roles>\n+      <url>http://people.apache.org/~rene/</url>\n+    </developer>\n+    <developer>\n+      <id>simonetripodi</id>\n+      <name>Simone Tripodi</name>\n+      <organization>The Apache Software Foundation</organization>\n+      <organizationUrl>http://www.apache.org/</organizationUrl>\n+      <roles>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~simonetripodi/</url>\n+    </developer>\n+    <developer>\n+      <id>elecharny</id>\n+      <name>Emmanuel Lecharny</name>\n+      <organization>The Apache Software Foundation</organization>\n+      <organizationUrl>http://www.apache.org/</organizationUrl>\n+      <roles>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~elecharny/</url>\n+    </developer>\n+    <developer>\n+      <id>anzelld</id>\n+      <name>Dino Anzellotti</name>\n+      <organization>Everett Italia</organization>\n+      <organizationUrl>http://www.everett.it/</organizationUrl>\n+      <roles>\n+        <role>committer</role>\n+      </roles>\n+      <url>http://people.apache.org/~anzelld/</url>\n+    </developer>\n+    <developer>\n+      <id>coheigea</id>\n+      <name>Colm O hEigeartaigh</name>\n+      <organization>Talend</organization>\n+      <organizationUrl>http://www.talend.com/</organizationUrl>\n+      <roles>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~coheigea/</url>\n+    </developer>\n+    <developer>\n+      <id>jbonofre</id>\n+      <name>Jean-Baptiste Onofré</name>\n+      <organization>Talend</organization>\n+      <organizationUrl>http://www.talend.com/</organizationUrl>\n+      <roles>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~jbonofre/</url>\n+    </developer>\n+    <developer>\n+      <id>jbernhardt</id>\n+      <name>Jan Bernhardt</name>\n+      <organization>Talend</organization>\n+      <organizationUrl>http://www.talend.com/</organizationUrl>\n+      <roles>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~jbernhardt/</url>\n+    </developer>\n+    <developer>\n+      <id>ashakirin</id>\n+      <name>Andrei Shakirin</name>\n+      <organization>Talend</organization>\n+      <organizationUrl>http://www.talend.com/</organizationUrl>\n+      <roles>\n+        <role>committer</role>\n+      </roles>\n+      <url>http://ashakirin.blogspot.de/</url>\n+    </developer>\n+    <developer>\n+      <id>cschneider</id>\n+      <name>Christian Schneider</name>\n+      <organization>Talend</organization>\n+      <organizationUrl>http://www.talend.com/</organizationUrl>\n+      <roles>\n+        <role>committer</role>\n+      </roles>\n+      <url>http://www.liquid-reality.de/</url>\n+      <email>chris@die-schneider.net</email>\n+    </developer>\n+    <developer>\n+      <id>gwimmel</id>\n+      <name>Guido Wimmel</name>\n+      <organization>Stadtwerke München Services GmbH</organization>\n+      <organizationUrl>http://www.swm.de/</organizationUrl>\n+      <roles>\n+        <role>PMC member</role>\n+      </roles>\n+      <url>http://people.apache.org/~gwimmel/</url>\n+      <email>gwimmel@apache.org</email>\n+    </developer>\n+    <developer>\n+      <id>andreapatricelli</id>\n+      <name>Andrea Patricelli</name>\n+      <organization>Tirasa</organization>\n+      <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+      <roles>\n+        <role>committer</role>\n+      </roles>\n+      <url>http://people.apache.org/~andreapatricelli/</url>\n+      <email>andreapatricelli@apache.org</email>\n+    </developer>\n+  </developers>\n+\n+  <contributors>\n+    <contributor>\n+      <name>Denis Signoretto</name>\n+      <email>denis.signoretto@intesys.it</email>\n+      <organization>Intesys</organization>\n+      <organizationUrl>http://www.intesys.it/</organizationUrl>\n+    </contributor>\n+    <contributor>\n+      <name>Bob Lannoy</name>\n+      <email>bob.lannoy@smals.be</email>\n+      <organization>Smals</organization>\n+      <organizationUrl>http://www.smals.be/</organizationUrl>\n+      <url>http://blogresearch.smalsrech.be/</url>\n+    </contributor>\n+    <contributor>\n+      <name>Bruno Rogério de Moura</name>\n+      <email>brunormoura@gmail.com</email>\n+      <organization>Exprivia</organization>\n+      <organizationUrl>http://www.exprivia.it/home</organizationUrl>\n+      <url>http://br.linkedin.com/pub/bruno-moura/1b/2a/806</url>\n+    </contributor>\n+  </contributors>\n+\n+  <prerequisites>\n+    <maven>[3.0.3,)</maven>\n+  </prerequisites>\n+\n+  <properties>\n+    <syncope.version>${project.version}</syncope.version>\n+\n+    <connid.version>1.4.0.0</connid.version>\n+\n+    <jackson.version>2.4.4</jackson.version>\n+\n+    <log4j.version>2.1</log4j.version>\n+\n+    <commons-lang.version>3.3.2</commons-lang.version>\n+\n+    <targetJdk>1.7</targetJdk>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+  </properties>\n+\n+  <dependencyManagement>\n+\n+    <dependencies>\n+      <dependency>\n+        <groupId>javax.validation</groupId>\n+        <artifactId>validation-api</artifactId>\n+        <version>1.1.0.Final</version>\n+      </dependency>\n+      \n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-annotations</artifactId>\n+        <version>${jackson.version}</version>\n+      </dependency>\n+      \n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-lang3</artifactId>\n+        <version>${commons-lang.version}</version>\n+      </dependency>\n+      \n+      <dependency>\n+        <groupId>net.tirasa.connid</groupId>\n+        <artifactId>connector-framework</artifactId>\n+        <version>${connid.version}</version>\n+      </dependency>\n+      \n+      <dependency>\n+        <groupId>org.apache.logging.log4j</groupId>\n+        <artifactId>log4j-api</artifactId>\n+        <version>${log4j.version}</version>\n+      </dependency>\n+    </dependencies>\n+\n+  </dependencyManagement>\n+\n+  <repositories>\n+    <repository>\n+      <id>sonatype</id>\n+      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+      <releases>\n+        <enabled>false</enabled>\n+      </releases>\n+      <snapshots>\n+        <enabled>true</enabled>\n+      </snapshots>\n+    </repository>\n+  </repositories>\n+\n+  <pluginRepositories>\n+    <pluginRepository>\n+      <id>apache.snapshots</id>\n+      <url>http://repository.apache.org/snapshots</url>\n+    </pluginRepository>\n+  </pluginRepositories>\n+\n+  <build>\n+    <defaultGoal>clean verify</defaultGoal>\n+\n+    <pluginManagement>\n+      <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-compiler-plugin</artifactId>\n+          <version>3.2</version> \n+          <configuration>\n+            <source>${targetJdk}</source>\n+            <target>${targetJdk}</target>\n+            <showWarnings>true</showWarnings>\n+            <showDeprecation>true</showDeprecation>\n+            <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->\n+          </configuration>\n+        </plugin>\n+      </plugins>\n+    </pluginManagement>\n+\n+    <plugins>\n+    </plugins>\n+  </build>\n+\n+  <modules>\n+    <module>common</module>\n+    <module>server</module>\n+  </modules>\n+</project>"},{"sha":"5f8824374e000f23ad4ab8160c9f4a761fe3cef2","filename":"syncope620/server/persistence-api/pom.xml","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fpom.xml?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-server</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Server Persistence API</name>\n+  <description>Apache Syncope Server Persistence API</description>\n+  <groupId>org.apache.syncope.server</groupId>\n+  <artifactId>syncope-persistence-api</artifactId>\n+  <packaging>jar</packaging>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.validation</groupId>\n+      <artifactId>validation-api</artifactId>\n+    </dependency>\n+      \n+    <dependency>\n+      <groupId>net.tirasa.connid</groupId>\n+      <artifactId>connector-framework</artifactId>\n+    </dependency>\n+      \n+    <dependency>\n+      <groupId>org.apache.syncope.common</groupId>\n+      <artifactId>syncope-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+</project>"},{"sha":"85b00b4034569947379a1a28b4e5e8a80f3e1727","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/AttrTemplateDAO.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FAttrTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FAttrTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FAttrTemplateDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.NormSchema;\n+\n+public interface AttrTemplateDAO<K extends NormSchema> extends DAO<AttrTemplate<K>> {\n+\n+    <T extends AttrTemplate<K>> T find(Long key, Class<T> reference);\n+\n+    <T extends AttrTemplate<K>> List<Number> findBySchemaName(String schemaName, Class<T> reference);\n+\n+    <T extends AttrTemplate<K>> void delete(Long key, Class<T> reference);\n+\n+    <T extends AttrTemplate<K>> void delete(T attrTemplate);\n+}"},{"sha":"2b9d97891abdbe00b20c5a83b3155f6be0126cb7","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/ConfDAO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import org.apache.syncope.persistence.api.entity.conf.CNormAttr;\n+import org.apache.syncope.persistence.api.entity.conf.Conf;\n+\n+public interface ConfDAO extends DAO<Conf> {\n+\n+    CNormAttr find(String key);\n+\n+    CNormAttr find(String key, String defaultValue);\n+\n+    Conf get();\n+\n+    Conf save(CNormAttr attr);\n+\n+    Conf delete(String key);\n+}"},{"sha":"54e9404de6936dd85f457e8cdc916ccb96c208b7","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/DAO.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import org.apache.syncope.persistence.api.entity.Entity;\n+\n+public interface DAO<T extends Entity> {\n+\n+    void refresh(T entity);\n+\n+    void detach(T entity);\n+\n+    void flush();\n+\n+    void clear();\n+}"},{"sha":"2c817342d04dcde72274be494078ede742163024","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/DerAttrDAO.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface DerAttrDAO<K extends NormAttr> extends DAO<DerAttr<K>> {\n+\n+    <T extends DerAttr<K>> T find(Long key, Class<T> reference);\n+\n+    <T extends DerAttr<K>> List<T> findAll(Class<T> reference);\n+\n+    <T extends DerAttr<K>> T save(T derAttr) throws InvalidEntityException;\n+\n+    <T extends DerAttr<K>> void delete(Long key, Class<T> reference);\n+\n+    <T extends DerAttr<K>> void delete(T derAttr);\n+}"},{"sha":"3d39d386c79cbcec3b13831349783ce3a93642c2","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/DerSchemaDAO.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.AttributableUtil;\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+import org.apache.syncope.persistence.api.entity.DerSchema;\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface DerSchemaDAO extends DAO<DerSchema> {\n+\n+    <T extends DerSchema> T find(String name, Class<T> reference);\n+\n+    <T extends DerSchema> List<T> findAll(Class<T> reference);\n+\n+    <T extends DerAttr<K>, K extends NormAttr> List<T> findAttrs(DerSchema schema, Class<T> reference);\n+\n+    <T extends DerSchema> T save(T derSchema) throws InvalidEntityException;\n+\n+    void delete(String name, AttributableUtil attributableUtil);\n+}"},{"sha":"c38076e8d2ba36d15534af7635532ed18343b6b5","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/EntitlementDAO.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Entitlement;\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+\n+public interface EntitlementDAO extends DAO<Entitlement> {\n+\n+    Entitlement find(String key);\n+\n+    List<Entitlement> findAll();\n+\n+    Entitlement save(Entitlement entitlement) throws InvalidEntityException;\n+\n+    Entitlement saveEntitlementRole(Role role);\n+\n+    void delete(String key);\n+\n+    void delete(Entitlement entitlement);\n+}"},{"sha":"3d03505425b4d3de122f2b8e42ae37afc58efac2","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/ExternalResourceDAO.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.MappingItem;\n+import org.apache.syncope.persistence.api.entity.Policy;\n+\n+public interface ExternalResourceDAO extends DAO<ExternalResource> {\n+\n+    ExternalResource find(String key);\n+\n+    List<ExternalResource> findByPolicy(Policy policy);\n+\n+    List<ExternalResource> findWithoutPolicy(PolicyType type);\n+\n+    List<ExternalResource> findAll();\n+\n+    List<ExternalResource> findAllByPriority();\n+\n+    ExternalResource save(ExternalResource resource) throws InvalidEntityException;\n+\n+    <T extends MappingItem> void deleteMapping(\n+            String schemaName, IntMappingType intMappingType, Class<T> reference);\n+\n+    void delete(String key);\n+}"},{"sha":"bcf0ac2837d2e7e822054d80ce6814128cb2cce9","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/LoggerDAO.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.LoggerType;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Logger;\n+\n+public interface LoggerDAO extends DAO<Logger> {\n+\n+    Logger find(String key);\n+\n+    List<Logger> findAll(LoggerType type);\n+\n+    Logger save(Logger logger) throws InvalidEntityException;\n+\n+    void delete(String key);\n+\n+    void delete(Logger logger);\n+}"},{"sha":"a586aae9465e4a079a9c4907a10480f1a06138fd","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/MembershipDAO.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.membership.Membership;\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+import org.apache.syncope.persistence.api.entity.user.User;\n+\n+public interface MembershipDAO extends DAO<Membership> {\n+\n+    Membership find(Long key);\n+\n+    Membership find(User user, Role role);\n+\n+    List<Membership> findAll();\n+\n+    Membership save(Membership membership) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+}"},{"sha":"2748c34cccc209019ed8466eb5f0781f9e74f2d3","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/NormAttrDAO.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface NormAttrDAO extends DAO<NormAttr> {\n+\n+    <T extends NormAttr> T find(Long key, Class<T> reference);\n+\n+    <T extends NormAttr> void delete(Long key, Class<T> reference);\n+\n+    <T extends NormAttr> void delete(T attr);\n+}"},{"sha":"4066913ff32e9b5ce8fe9672b9072e135eba18ff","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/NormAttrValueDAO.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormAttrValueDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public interface NormAttrValueDAO extends DAO<NormAttrValue> {\n+\n+    <T extends NormAttrValue> T find(Long key, Class<T> reference);\n+\n+    <T extends NormAttrValue> List<T> findAll(Class<T> reference);\n+\n+    <T extends NormAttrValue> T save(T attributeValue) throws InvalidEntityException;\n+\n+    <T extends NormAttrValue> void delete(Long key, Class<T> reference);\n+\n+    <T extends NormAttrValue> void delete(T attributeValue);\n+}"},{"sha":"88de3e145cfc2ea5a1f40ee8b9de7dddca923317","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/NormSchemaDAO.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNormSchemaDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.AttributableUtil;\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+import org.apache.syncope.persistence.api.entity.NormSchema;\n+\n+public interface NormSchemaDAO extends DAO<NormSchema> {\n+\n+    <T extends NormSchema> T find(String key, Class<T> reference);\n+\n+    <T extends NormSchema> List<T> findAll(Class<T> reference);\n+\n+    <T extends NormAttr> List<T> findAttrs(NormSchema schema, Class<T> reference);\n+\n+    <T extends NormSchema> T save(T schema) throws InvalidEntityException;\n+\n+    void delete(String name, AttributableUtil attributableUtil);\n+}"},{"sha":"2d9326d29c48ec5caab8875442b53e34dd078734","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/NotFoundException.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotFoundException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotFoundException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotFoundException.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+/**\n+ * Thrown when something is not found.\n+ */\n+public class NotFoundException extends RuntimeException {\n+\n+    private static final long serialVersionUID = 4810651769126663581L;\n+\n+    public NotFoundException(final String msg) {\n+        super(msg);\n+    }\n+\n+    public NotFoundException(final String msg, final Exception cause) {\n+        super(msg, cause);\n+    }\n+}"},{"sha":"34883036925e1d6434f17f2ecad74f980f87d4ec","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/NotificationDAO.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Notification;\n+\n+public interface NotificationDAO extends DAO<Notification> {\n+\n+    Notification find(Long key);\n+\n+    List<Notification> findAll();\n+\n+    Notification save(Notification notification) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+}"},{"sha":"27f4edf478c9eab398f02dedd991d516a9ad3ea1","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/PolicyDAO.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.persistence.api.entity.AccountPolicy;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.PasswordPolicy;\n+import org.apache.syncope.persistence.api.entity.Policy;\n+import org.apache.syncope.persistence.api.entity.SyncPolicy;\n+\n+public interface PolicyDAO extends DAO<Policy> {\n+\n+    <T extends Policy> T find(Long key);\n+\n+    <T extends Policy> List<T> find(PolicyType type);\n+\n+    List<AccountPolicy> findByResource(ExternalResource resource);\n+\n+    PasswordPolicy getGlobalPasswordPolicy();\n+\n+    AccountPolicy getGlobalAccountPolicy();\n+\n+    SyncPolicy getGlobalSyncPolicy();\n+\n+    List<Policy> findAll();\n+\n+    <T extends Policy> T save(T policy);\n+\n+    <T extends Policy> void delete(T policy);\n+}"},{"sha":"eef08f7f0e1813481e96983f72543bdf03ad5716","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/ReportDAO.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Report;\n+\n+public interface ReportDAO extends DAO<Report> {\n+\n+    Report find(Long key);\n+\n+    List<Report> findAll();\n+\n+    List<Report> findAll(int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n+\n+    int count();\n+\n+    Report save(Report report) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+\n+    void delete(Report report);\n+}"},{"sha":"1cad2c3690edb038b8a4a077eb17c11cd71e2cae","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/ReportExecDAO.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Report;\n+import org.apache.syncope.persistence.api.entity.ReportExec;\n+\n+public interface ReportExecDAO extends DAO<ReportExec> {\n+\n+    ReportExec find(Long key);\n+\n+    ReportExec findLatestStarted(Report report);\n+\n+    ReportExec findLatestEnded(Report report);\n+\n+    List<ReportExec> findAll();\n+\n+    ReportExec save(ReportExec execution) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+\n+    void delete(ReportExec execution);\n+}"},{"sha":"a45b67602ec9a5b1676620b1401e5246eadf9b5f","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/RoleDAO.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.Entitlement;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.Policy;\n+import org.apache.syncope.persistence.api.entity.membership.Membership;\n+import org.apache.syncope.persistence.api.entity.role.RDerAttr;\n+import org.apache.syncope.persistence.api.entity.role.RNormAttr;\n+import org.apache.syncope.persistence.api.entity.role.RNormAttrValue;\n+import org.apache.syncope.persistence.api.entity.role.RVirAttr;\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+\n+public interface RoleDAO extends SubjectDAO<RNormAttr, RDerAttr, RVirAttr> {\n+\n+    Role find(Long key);\n+\n+    List<Role> find(String name);\n+\n+    Role find(String name, Long parent);\n+\n+    List<Role> findOwnedByUser(Long userId);\n+\n+    List<Role> findOwnedByRole(Long roleId);\n+\n+    List<Role> findByEntitlement(Entitlement entitlement);\n+\n+    List<Role> findByPolicy(Policy policy);\n+\n+    List<Role> findWithoutPolicy(PolicyType type);\n+\n+    List<Role> findAncestors(Role role);\n+\n+    List<Role> findChildren(Role role);\n+\n+    List<Role> findDescendants(Role role);\n+\n+    List<Role> findByDerAttrValue(String schemaName, String value);\n+\n+    List<Role> findByAttrValue(String schemaName, RNormAttrValue attrValue);\n+\n+    Role findByAttrUniqueValue(String schemaName, RNormAttrValue attrUniqueValue);\n+\n+    List<Role> findByResource(ExternalResource resource);\n+\n+    List<Role> findAll();\n+\n+    List<Role> findAll(int page, int itemsPerPage, List<OrderByClause> orderBy);\n+\n+    List<Membership> findMemberships(Role role);\n+\n+    int count();\n+\n+    Role save(Role syncopeRole) throws InvalidEntityException;\n+\n+    void delete(Role role);\n+\n+    void delete(Long key);\n+}"},{"sha":"a1ce799451f52be8703ceffb9ab4034c7a305021","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/SecurityQuestionDAO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.user.SecurityQuestion;\n+\n+public interface SecurityQuestionDAO extends DAO<SecurityQuestion> {\n+\n+    SecurityQuestion find(Long key);\n+\n+    List<SecurityQuestion> findAll();\n+\n+    SecurityQuestion save(SecurityQuestion securityQuestion) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+\n+}"},{"sha":"9f8dccc13fc40a40b44c687f4dddcd014de8d515","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/SubjectDAO.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.entity.AttributableUtil;\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+import org.apache.syncope.persistence.api.entity.Subject;\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface SubjectDAO<N extends NormAttr, D extends DerAttr<N>, V extends VirAttr> extends DAO<Subject<N, D, V>> {\n+\n+    <T extends Subject<N, D, V>> List<T> findByAttrValue(String schemaName,\n+            NormAttrValue attrValue, AttributableUtil attrUtil);\n+\n+    <T extends Subject<N, D, V>> T findByAttrUniqueValue(String schemaName,\n+            NormAttrValue attrUniqueValue, AttributableUtil attrUtil);\n+\n+    <T extends Subject<N, D, V>> List<T> findByDerAttrValue(\n+            String schemaName, String value, AttributableUtil attrUtil);\n+\n+    <T extends Subject<N, D, V>> List<T> findByResource(ExternalResource resource, Class<T> reference);\n+}"},{"sha":"b9cc194517ca1d8e0be744ceca242950f108a562","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/SubjectSearchDAO.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.persistence.api.entity.Subject;\n+\n+public interface SubjectSearchDAO extends DAO<Subject<?, ?, ?>> {\n+\n+    /**\n+     * @param adminRoles the set of admin roles owned by the caller\n+     * @param searchCondition the search condition\n+     * @param type user or role\n+     * @return size of search result\n+     */\n+    int count(Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n+\n+    /**\n+     * @param adminRoles the set of admin roles owned by the caller\n+     * @param searchCondition the search condition\n+     * @param type user or role\n+     * @param <T> user/role\n+     * @return the list of users/roles matching the given search condition\n+     */\n+    <T extends Subject<?, ?, ?>> List<T> search(Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n+\n+    /**\n+     * @param adminRoles the set of admin roles owned by the caller\n+     * @param searchCondition the search condition\n+     * @param orderBy list of ordering clauses\n+     * @param type user or role\n+     * @param <T> user/role\n+     * @return the list of users/roles matching the given search condition\n+     */\n+    <T extends Subject<?, ?, ?>> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n+            List<OrderByClause> orderBy, SubjectType type);\n+\n+    /**\n+     * @param adminRoles the set of admin roles owned by the caller\n+     * @param searchCondition the search condition\n+     * @param page position of the first result, start from 1\n+     * @param itemsPerPage number of results per page\n+     * @param orderBy list of ordering clauses\n+     * @param type user or role\n+     * @param <T> user/role\n+     * @return the list of users/roles matching the given search condition (in the given page)\n+     */\n+    <T extends Subject<?, ?, ?>> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n+            int page, int itemsPerPage, List<OrderByClause> orderBy, SubjectType type);\n+\n+    /**\n+     * Verify if user/role matches the given search condition.\n+     *\n+     * @param subject to be checked\n+     * @param searchCondition to be verified\n+     * @param type user or role\n+     * @param <T> user/role\n+     * @return true if user/role matches searchCondition\n+     */\n+    <T extends Subject<?, ?, ?>> boolean matches(T subject, SearchCond searchCondition, SubjectType type);\n+}"},{"sha":"5ab5b6a7f057d656bff8c180e6da72cea0bbcfeb","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/TaskDAO.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.task.Task;\n+\n+public interface TaskDAO extends DAO<Task> {\n+\n+    <T extends Task> T find(Long key);\n+\n+    <T extends Task> List<T> findToExec(Class<T> reference);\n+\n+    <T extends Task> List<T> findAll(ExternalResource resource, Class<T> reference);\n+\n+    <T extends Task> List<T> findAll(Class<T> reference);\n+\n+    <T extends Task> List<T> findAll(\n+            int page, int itemsPerPage, List<OrderByClause> orderByClauses, Class<T> reference);\n+\n+    <T extends Task> int count(Class<T> reference);\n+\n+    <T extends Task> T save(T task) throws InvalidEntityException;\n+\n+    <T extends Task> void delete(Long key);\n+\n+    <T extends Task> void delete(T task);\n+\n+    <T extends Task> void deleteAll(ExternalResource resource, Class<T> reference);\n+}"},{"sha":"05224b4ac492abde92373cfc9bb69651775963f0","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/TaskExecDAO.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.task.Task;\n+import org.apache.syncope.persistence.api.entity.task.TaskExec;\n+\n+public interface TaskExecDAO extends DAO<TaskExec> {\n+\n+    TaskExec find(Long key);\n+\n+    <T extends Task> TaskExec findLatestStarted(T task);\n+\n+    <T extends Task> TaskExec findLatestEnded(T task);\n+\n+    <T extends Task> List<TaskExec> findAll(Class<T> reference);\n+\n+    TaskExec save(TaskExec execution) throws InvalidEntityException;\n+\n+    void saveAndAdd(Long taskId, TaskExec execution) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+\n+    void delete(TaskExec execution);\n+}"},{"sha":"f70be0a073280328e822bba46ce4e9efbc2ac44c","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/UserDAO.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.user.SecurityQuestion;\n+import org.apache.syncope.persistence.api.entity.user.UDerAttr;\n+import org.apache.syncope.persistence.api.entity.user.UNormAttr;\n+import org.apache.syncope.persistence.api.entity.user.UNormAttrValue;\n+import org.apache.syncope.persistence.api.entity.user.UVirAttr;\n+import org.apache.syncope.persistence.api.entity.user.User;\n+\n+public interface UserDAO extends SubjectDAO<UNormAttr, UDerAttr, UVirAttr> {\n+\n+    User find(Long key);\n+\n+    User find(String username);\n+\n+    User findByWorkflowId(String workflowId);\n+\n+    User findByToken(String token);\n+\n+    List<User> findBySecurityQuestion(SecurityQuestion securityQuestion);\n+\n+    List<User> findByDerAttrValue(String schemaName, String value);\n+\n+    List<User> findByAttrValue(String schemaName, UNormAttrValue attrValue);\n+\n+    User findByAttrUniqueValue(String schemaName, UNormAttrValue attrUniqueValue);\n+\n+    List<User> findByResource(ExternalResource resource);\n+\n+    List<User> findAll(Set<Long> adminRoles, int page, int itemsPerPage);\n+\n+    List<User> findAll(Set<Long> adminRoles, int page, int itemsPerPage, List<OrderByClause> orderBy);\n+\n+    int count(Set<Long> adminRoles);\n+\n+    User save(User user) throws InvalidEntityException;\n+\n+    void delete(Long key);\n+\n+    void delete(User user);\n+\n+}"},{"sha":"7cae917ce24227f18ed1bf78ea8a27792cb16b39","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/VirAttrDAO.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface VirAttrDAO extends DAO<VirAttr> {\n+\n+    <T extends VirAttr> T find(Long key, Class<T> reference);\n+\n+    <T extends VirAttr> List<T> findAll(Class<T> reference);\n+\n+    <T extends VirAttr> T save(T virtualAttribute) throws InvalidEntityException;\n+\n+    <T extends VirAttr> void delete(Long key, Class<T> reference);\n+\n+    <T extends VirAttr> void delete(T virAttr);\n+}"},{"sha":"a53a9b7a96a6457c1ccb46bde4256b62e7b756b4","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/VirSchemaDAO.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidEntityException;\n+import org.apache.syncope.persistence.api.entity.AttributableUtil;\n+import org.apache.syncope.persistence.api.entity.VirSchema;\n+\n+public interface VirSchemaDAO extends DAO<VirSchema> {\n+\n+    <T extends VirSchema> T find(String key, Class<T> reference);\n+\n+    <T extends VirSchema> List<T> findAll(Class<T> reference);\n+\n+    <T extends VirSchema> List<T> findAttrs(VirSchema virSchema, Class<T> reference);\n+\n+    <T extends VirSchema> T save(T virSchema) throws InvalidEntityException;\n+\n+    void delete(String key, AttributableUtil attributableUtil);\n+}"},{"sha":"096f2b74663bdee91bb283a70455331d430097c8","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/AbstractSearchCond.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAbstractSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAbstractSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAbstractSearchCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+\n+public abstract class AbstractSearchCond implements Serializable {\n+\n+    private static final long serialVersionUID = 5376869884544910804L;\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+\n+    public abstract boolean isValid();\n+\n+}"},{"sha":"7ca3a3061fe2b4fc01860a6a4c7b69c566b92e54","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/AttributeCond.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAttributeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAttributeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAttributeCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+/**\n+ * Search condition to be applied when comparing attribute values.\n+ */\n+public class AttributeCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = 3275277728404021417L;\n+\n+    public enum Type {\n+\n+        LIKE,\n+        EQ,\n+        GT,\n+        LT,\n+        GE,\n+        LE,\n+        ISNULL,\n+        ISNOTNULL\n+\n+    }\n+\n+    private Type type;\n+\n+    private String schema;\n+\n+    private String expression;\n+\n+    public AttributeCond() {\n+        super();\n+    }\n+\n+    public AttributeCond(final Type conditionType) {\n+        super();\n+        this.type = conditionType;\n+    }\n+\n+    public final String getExpression() {\n+        return expression;\n+    }\n+\n+    public final void setExpression(final String conditionExpression) {\n+        this.expression = conditionExpression;\n+    }\n+\n+    public final String getSchema() {\n+        return schema;\n+    }\n+\n+    public final void setSchema(final String conditionSchema) {\n+        this.schema = conditionSchema;\n+    }\n+\n+    public final Type getType() {\n+        return type;\n+    }\n+\n+    public final void setType(final Type conditionType) {\n+        this.type = conditionType;\n+    }\n+\n+    @Override\n+    public final boolean isValid() {\n+        return type != null && schema != null && (type == Type.ISNULL || type == Type.ISNOTNULL || expression != null);\n+    }\n+}"},{"sha":"809e275e002a1fedeb2e2044bfd546a55d170946","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/EntitlementCond.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FEntitlementCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FEntitlementCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FEntitlementCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+public class EntitlementCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = -4077781080368377428L;\n+\n+    private String expression;\n+\n+    public String getExpression() {\n+        return expression;\n+    }\n+\n+    public void setExpression(final String expression) {\n+        this.expression = expression;\n+    }\n+\n+    @Override\n+    public boolean isValid() {\n+        return expression != null;\n+    }\n+}"},{"sha":"0036b1b702d8936edad616ca513e8c2ee06b6c0f","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/MembershipCond.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+/**\n+ * Search condition to be applied when searching for memberships.\n+ */\n+public class MembershipCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = -728155256293925989L;\n+\n+    private Long roleId;\n+\n+    public MembershipCond() {\n+        super();\n+    }\n+\n+    public Long getRoleId() {\n+        return roleId;\n+    }\n+\n+    public void setRoleId(final Long roleId) {\n+        this.roleId = roleId;\n+    }\n+\n+    @Override\n+    public final boolean isValid() {\n+        return roleId != null;\n+    }\n+}"},{"sha":"854f75e033e3b80c52534aec9557a504561910dd","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/OrderByClause.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FOrderByClause.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FOrderByClause.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FOrderByClause.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+\n+public class OrderByClause {\n+\n+    public enum Direction {\n+\n+        ASC,\n+        DESC\n+\n+    }\n+\n+    private String field;\n+\n+    private Direction direction;\n+\n+    public String getField() {\n+        return field;\n+    }\n+\n+    public void setField(final String field) {\n+        this.field = field;\n+    }\n+\n+    public Direction getDirection() {\n+        return direction == null ? Direction.ASC : direction;\n+    }\n+\n+    public void setDirection(final Direction direction) {\n+        this.direction = direction;\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+}"},{"sha":"fb2a08c6a7c2b3e67c59910800efbc23ea76744d","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/ResourceCond.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+/**\n+ * Search condition to be applied when searching for associated resources.\n+ */\n+public class ResourceCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = 466054166309460002L;\n+\n+    private String resourceName;\n+\n+    public String getResourceName() {\n+        return resourceName;\n+    }\n+\n+    public void setResourceName(final String resourceName) {\n+        this.resourceName = resourceName;\n+    }\n+\n+    @Override\n+    public final boolean isValid() {\n+        return resourceName != null;\n+    }\n+}"},{"sha":"3e9a59129ad421cf9384b860c170decddc5bc101","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/SearchCond.java","status":"added","additions":254,"deletions":0,"changes":254,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,254 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+import java.util.List;\n+\n+public class SearchCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = 661560782247499526L;\n+\n+    public enum Type {\n+\n+        LEAF,\n+        NOT_LEAF,\n+        AND,\n+        OR\n+\n+    }\n+\n+    private Type type;\n+\n+    private SubjectCond subjectCond;\n+\n+    private AttributeCond attributeCond;\n+\n+    private MembershipCond membershipCond;\n+\n+    private ResourceCond resourceCond;\n+\n+    private EntitlementCond entitlementCond;\n+\n+    private SearchCond leftNodeCond;\n+\n+    private SearchCond rightNodeCond;\n+\n+    public static SearchCond getLeafCond(final AttributeCond attributeCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        if (attributeCond instanceof SubjectCond) {\n+            nodeCond.subjectCond = (SubjectCond) attributeCond;\n+        } else {\n+            nodeCond.attributeCond = attributeCond;\n+        }\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getLeafCond(final MembershipCond membershipCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        nodeCond.membershipCond = membershipCond;\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getLeafCond(final ResourceCond resourceCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        nodeCond.resourceCond = resourceCond;\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getLeafCond(final EntitlementCond entitlementCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        nodeCond.entitlementCond = entitlementCond;\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getNotLeafCond(final AttributeCond attributeCond) {\n+        SearchCond nodeCond = getLeafCond(attributeCond);\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getNotLeafCond(final MembershipCond membershipCond) {\n+        SearchCond nodeCond = getLeafCond(membershipCond);\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getNotLeafCond(final ResourceCond resourceCond) {\n+        SearchCond nodeCond = getLeafCond(resourceCond);\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getNotLeafCond(final EntitlementCond entitlementCond) {\n+        SearchCond nodeCond = getLeafCond(entitlementCond);\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getNotLeafCond(final SearchCond nodeCond) {\n+        nodeCond.type = Type.NOT_LEAF;\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getAndCond(final SearchCond leftCond, final SearchCond rightCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.AND;\n+        nodeCond.leftNodeCond = leftCond;\n+        nodeCond.rightNodeCond = rightCond;\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getAndCond(final List<SearchCond> conditions) {\n+        if (conditions.size() > 2) {\n+            SearchCond removed = conditions.remove(0);\n+            return getAndCond(removed, getAndCond(conditions));\n+        } else {\n+            return getAndCond(conditions.get(0), conditions.get(1));\n+        }\n+    }\n+\n+    public static SearchCond getOrCond(final SearchCond leftCond, final SearchCond rightCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.OR;\n+        nodeCond.leftNodeCond = leftCond;\n+        nodeCond.rightNodeCond = rightCond;\n+\n+        return nodeCond;\n+    }\n+\n+    public static SearchCond getOrCond(final List<SearchCond> conditions) {\n+        if (conditions.size() > 2) {\n+            SearchCond removed = conditions.remove(0);\n+            return getOrCond(removed, getOrCond(conditions));\n+        } else {\n+            return getOrCond(conditions.get(0), conditions.get(1));\n+        }\n+    }\n+\n+    public SubjectCond getSubjectCond() {\n+        return subjectCond;\n+    }\n+\n+    public void setSubjectCond(final SubjectCond subjectCond) {\n+        this.subjectCond = subjectCond;\n+    }\n+\n+    public AttributeCond getAttributeCond() {\n+        return attributeCond;\n+    }\n+\n+    public void setAttributeCond(final AttributeCond attributeCond) {\n+        this.attributeCond = attributeCond;\n+    }\n+\n+    public MembershipCond getMembershipCond() {\n+        return membershipCond;\n+    }\n+\n+    public void setMembershipCond(final MembershipCond membershipCond) {\n+        this.membershipCond = membershipCond;\n+    }\n+\n+    public ResourceCond getResourceCond() {\n+        return resourceCond;\n+    }\n+\n+    public void setResourceCond(final ResourceCond resourceCond) {\n+        this.resourceCond = resourceCond;\n+    }\n+\n+    public EntitlementCond getEntitlementCond() {\n+        return entitlementCond;\n+    }\n+\n+    public void setEntitlementCond(final EntitlementCond entitlementCond) {\n+        this.entitlementCond = entitlementCond;\n+    }\n+\n+    public SearchCond getLeftNodeCond() {\n+        return leftNodeCond;\n+    }\n+\n+    public void setLeftNodeCond(final SearchCond leftNodeCond) {\n+        this.leftNodeCond = leftNodeCond;\n+    }\n+\n+    public SearchCond getRightNodeCond() {\n+        return rightNodeCond;\n+    }\n+\n+    public void setRightNodeCond(final SearchCond rightNodeCond) {\n+        this.rightNodeCond = rightNodeCond;\n+    }\n+\n+    public Type getType() {\n+        return type;\n+    }\n+\n+    public void setType(final Type type) {\n+        this.type = type;\n+    }\n+\n+    public boolean isValid() {\n+        boolean isValid = false;\n+\n+        if (type == null) {\n+            return isValid;\n+        }\n+\n+        switch (type) {\n+            case LEAF:\n+            case NOT_LEAF:\n+                isValid = (subjectCond != null || attributeCond != null || membershipCond != null\n+                        || resourceCond != null || entitlementCond != null)\n+                        && (subjectCond == null || subjectCond.isValid())\n+                        && (attributeCond == null || attributeCond.isValid())\n+                        && (membershipCond == null || membershipCond.isValid())\n+                        && (resourceCond == null || resourceCond.isValid())\n+                        && (entitlementCond == null || entitlementCond.isValid());\n+                break;\n+\n+            case AND:\n+            case OR:\n+                isValid = (leftNodeCond == null || rightNodeCond == null)\n+                        ? false\n+                        : leftNodeCond.isValid() && rightNodeCond.isValid();\n+                break;\n+\n+            default:\n+        }\n+\n+        return isValid;\n+    }\n+}"},{"sha":"c20b83a5c636f71bf9f0b38e24756ffb8d356265","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/search/SubjectCond.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.search;\n+\n+/**\n+ * Search condition to be applied when comparing bean field values.\n+ */\n+public class SubjectCond extends AttributeCond {\n+\n+    private static final long serialVersionUID = -1880319220462653955L;\n+\n+    public SubjectCond() {\n+    }\n+\n+    public SubjectCond(final Type conditionType) {\n+        super(conditionType);\n+    }\n+}"},{"sha":"196117394961cfb2594a84fb85af7c4211e7c5ec","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/validation/InvalidEntityException.java","status":"added","additions":129,"deletions":0,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidEntityException.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.validation;\n+\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.validation.ConstraintViolation;\n+import javax.validation.ValidationException;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+\n+/**\n+ * Exception thrown when any JPA entity fails bean validation.\n+ */\n+public class InvalidEntityException extends ValidationException {\n+\n+    private static final long serialVersionUID = 3249297275444409691L;\n+\n+    private final String entityClassSimpleName;\n+\n+    private final Map<Class<?>, Set<EntityViolationType>> violations = new HashMap<>();\n+\n+    /**\n+     * Constructs a singleton map of violations from given parameters.\n+     *\n+     * @param entityClass class of invalid entity\n+     * @param entityViolationType type of violation found\n+     * @param message message to be associated to the violation\n+     */\n+    public InvalidEntityException(final Class<?> entityClass,\n+            final EntityViolationType entityViolationType, final String message) {\n+\n+        super();\n+\n+        this.entityClassSimpleName = entityClass.getSimpleName();\n+\n+        entityViolationType.setMessage(message.trim());\n+\n+        this.violations.put(entityClass, EnumSet.noneOf(EntityViolationType.class));\n+        this.violations.get(entityClass).add(entityViolationType);\n+    }\n+\n+    /**\n+     * Constructs a map of violations out of given <tt>ConstraintViolation</tt> set.\n+     *\n+     * @param entityClassSimpleName simple class name of invalid entity\n+     * @param violations as returned by bean validation\n+     */\n+    public InvalidEntityException(final String entityClassSimpleName,\n+            final Set<ConstraintViolation<Object>> violations) {\n+\n+        super();\n+\n+        this.entityClassSimpleName = entityClassSimpleName;\n+\n+        for (ConstraintViolation<Object> violation : violations) {\n+            int firstComma = violation.getMessageTemplate().indexOf(';');\n+\n+            final String key = violation.getMessageTemplate().substring(\n+                    0, firstComma > 0 ? firstComma : violation.getMessageTemplate().length());\n+\n+            final String message = violation.getMessageTemplate().substring(firstComma > 0 ? firstComma + 1 : 0);\n+\n+            EntityViolationType entityViolationType;\n+\n+            try {\n+                entityViolationType = EntityViolationType.valueOf(key.trim());\n+            } catch (IllegalArgumentException e) {\n+                entityViolationType = EntityViolationType.Standard;\n+            }\n+\n+            entityViolationType.setMessage(message.trim());\n+\n+            if (!this.violations.containsKey(violation.getLeafBean().getClass())) {\n+                this.violations.put(violation.getLeafBean().getClass(), EnumSet.noneOf(EntityViolationType.class));\n+            }\n+\n+            this.violations.get(violation.getLeafBean().getClass()).add(entityViolationType);\n+        }\n+    }\n+\n+    public final boolean hasViolation(final EntityViolationType type) {\n+        boolean found = false;\n+        for (Class<?> entity : violations.keySet()) {\n+            if (violations.get(entity).contains(type)) {\n+                found = true;\n+            }\n+        }\n+\n+        return found;\n+    }\n+\n+    public String getEntityClassSimpleName() {\n+        return entityClassSimpleName;\n+    }\n+\n+    public final Map<Class<?>, Set<EntityViolationType>> getViolations() {\n+        return violations;\n+    }\n+\n+    @Override\n+    public String getMessage() {\n+        StringBuilder sb = new StringBuilder();\n+\n+        for (Class<?> entity : violations.keySet()) {\n+            sb.append(entity.getSimpleName()).append(\" \").append(violations.get(entity).toString()).append(\", \");\n+        }\n+        sb.delete(sb.lastIndexOf(\", \"), sb.length());\n+\n+        return sb.toString();\n+    }\n+}"},{"sha":"6afcd136b104285900598fca9d996479e3c9326b","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/validation/InvalidNormAttrValueException.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidNormAttrValueException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidNormAttrValueException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FInvalidNormAttrValueException.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.validation;\n+\n+import javax.validation.ValidationException;\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public class InvalidNormAttrValueException extends ValidationException {\n+\n+    private static final long serialVersionUID = -5023202610580202148L;\n+\n+    public InvalidNormAttrValueException(final String errorMessage) {\n+        super(errorMessage);\n+    }\n+\n+    public InvalidNormAttrValueException(final String errorMessage, final Throwable cause) {\n+        super(errorMessage, cause);\n+    }\n+\n+    public InvalidNormAttrValueException(final NormAttrValue value) {\n+        this(\"Could not validate \" + value.getValue());\n+    }\n+\n+    public InvalidNormAttrValueException(final NormAttrValue value, Throwable cause) {\n+        this(\"Could not validate \" + value.getValue(), cause);\n+    }\n+}"},{"sha":"056bfb9a3da4355e71b4163800cb397595b29b4e","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/validation/ParsingValidationException.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FParsingValidationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FParsingValidationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FParsingValidationException.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.validation;\n+\n+import javax.validation.ValidationException;\n+\n+public class ParsingValidationException extends ValidationException {\n+\n+    private static final long serialVersionUID = 5669262895008285522L;\n+\n+    public ParsingValidationException(final String message, final Throwable cause) {\n+        super(message, cause);\n+    }\n+}"},{"sha":"3d439a704ff52aae9ee65f41eb19b5f24315db2f","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/dao/validation/Validator.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fdao%2Fvalidation%2FValidator.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.dao.validation;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public interface Validator {\n+\n+    void validate(String value, NormAttrValue attrValue) throws ParsingValidationException, InvalidNormAttrValueException;\n+}"},{"sha":"2570f20d3204d0d2ba15969e108dd674a38855db","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/AccountPolicy.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+\n+public interface AccountPolicy extends Policy {\n+\n+    Set<String> getResourceNames();\n+\n+    Set<ExternalResource> getResources();\n+\n+    boolean addResource(ExternalResource resource);\n+\n+    boolean removeResource(ExternalResource resource);\n+\n+    void setResources(Collection<ExternalResource> resources);\n+}"},{"sha":"80a610d1dadf098682ebab4e53b9464e5c49a79e","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/AnnotatedEntity.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Date;\n+\n+public interface AnnotatedEntity<KEY> extends Entity<KEY> {\n+\n+    Date getCreationDate();\n+\n+    String getCreator();\n+\n+    Date getLastChangeDate();\n+\n+    String getLastModifier();\n+\n+    void setCreationDate(Date creationDate);\n+\n+    void setCreator(String creator);\n+\n+    void setLastChangeDate(Date lastChangeDate);\n+\n+    void setLastModifier(String lastModifier);\n+}"},{"sha":"7a54213555a99b6598301cf6f5eb063d2f730423","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Attr.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface Attr<S extends Schema> extends Entity<Long> {\n+\n+    Attributable<?, ?, ?> getOwner();\n+\n+    void setOwner(Attributable<?, ?, ?> owner);\n+\n+    S getSchema();\n+    \n+    void setSchema(S schema);\n+}"},{"sha":"0055b690518b78d20c7f527ca003629079e1a2f0","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/AttrTemplate.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+\n+public interface AttrTemplate<T extends Schema> extends Entity<Long> {\n+\n+    Role getOwner();\n+\n+    void setOwner(Role role);\n+\n+    T getSchema();\n+\n+    void setSchema(T schema);\n+}"},{"sha":"31eb9a46777af0bf594dd5c9fa2b1b64cb42c1ca","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Attributable.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributable.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+\n+public interface Attributable<N extends NormAttr, D extends DerAttr, V extends VirAttr> extends AnnotatedEntity<Long> {\n+\n+    boolean addNormAttr(N attr);\n+\n+    boolean addDerAttr(D attr);\n+\n+    boolean addVirAttr(V attr);\n+\n+    N getNormAttr(String normSchemaName);\n+\n+    List<N> getNormAttrs();\n+\n+    D getDerAttr(String derSchemaName);\n+\n+    List<D> getDerAttrs();\n+\n+    V getVirAttr(String virSchemaName);\n+\n+    List<V> getVirAttrs();\n+\n+    boolean removeNormAttr(N attr);\n+\n+    boolean removeDerAttr(D derAttr);\n+\n+    boolean removeVirAttr(V virAttr);\n+}"},{"sha":"58205fd2f071759ed1c839dbb102a4c984c7dd2f","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/AttributableUtil.java","status":"added","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FAttributableUtil.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.AttributableType;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+\n+public interface AttributableUtil {\n+\n+    AttributableType getType();\n+\n+    <T extends Attributable> Class<T> attributableClass();\n+\n+    <T extends NormSchema> Class<T> normSchemaClass();\n+\n+    <T extends NormAttr> Class<T> normAttrClass();\n+\n+    <T extends NormAttr> T newNormAttr();\n+\n+    <T extends NormAttrValue> Class<T> attrUniqueValueClass();\n+\n+    <T extends NormAttrValue> T newNormAttrUniqueValue();\n+\n+    <T extends NormAttrValue> Class<T> attrValueClass();\n+\n+    <T extends NormAttrValue> T newNormAttrValue();\n+\n+    <T extends AttrTemplate<NormSchema>> Class<T> normAttrTemplateClass();\n+\n+    <T extends DerSchema> Class<T> derSchemaClass();\n+\n+    <T extends DerSchema> T newDerSchema();\n+\n+    <T extends DerAttr> Class<T> derAttrClass();\n+\n+    <T extends DerAttr> T newDerAttr();\n+\n+    <T extends AttrTemplate<DerSchema>> Class<T> derAttrTemplateClass();\n+\n+    <T extends VirSchema> Class<T> virSchemaClass();\n+\n+    <T extends VirSchema> T newVirSchema();\n+\n+    <T extends VirAttr> Class<T> virAttrClass();\n+\n+    <T extends VirAttr> T newVirAttr();\n+\n+    <T extends AttrTemplate<VirSchema>> Class<T> virAttrTemplateClass();\n+\n+    <T extends MappingItem> T getAccountIdItem(ExternalResource resource);\n+\n+    String getAccountLink(ExternalResource resource);\n+\n+    <T extends MappingItem> List<T> getMappingItems(ExternalResource resource, MappingPurpose purpose);\n+\n+    <T extends MappingItem> List<T> getUidToMappingItems(\n+            ExternalResource resource, MappingPurpose purpose, AttributableType type);\n+\n+    IntMappingType intMappingType();\n+\n+    IntMappingType derIntMappingType();\n+\n+    IntMappingType virIntMappingType();\n+\n+    <T extends MappingItem> Class<T> mappingItemClass();\n+\n+}"},{"sha":"e582779e0216ddfb9628eca1b7944de6164a128b","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/ConnInstance.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n+\n+public interface ConnInstance extends Entity<Long> {\n+\n+    boolean addCapability(ConnectorCapability capabitily);\n+\n+    boolean addResource(ExternalResource resource);\n+\n+    String getBundleName();\n+\n+    Set<ConnectorCapability> getCapabilities();\n+\n+    Set<ConnConfProperty> getConfiguration();\n+\n+    Integer getConnRequestTimeout();\n+\n+    String getConnectorName();\n+\n+    String getDisplayName();\n+\n+    String getLocation();\n+\n+    ConnPoolConf getPoolConf();\n+\n+    List<ExternalResource> getResources();\n+\n+    String getVersion();\n+\n+    boolean removeCapability(ConnectorCapability capabitily);\n+\n+    boolean removeResource(ExternalResource resource);\n+\n+    void setBundleName(String bundleName);\n+\n+    void setCapabilities(Set<ConnectorCapability> capabilities);\n+\n+    void setConfiguration(Set<ConnConfProperty> configuration);\n+\n+    void setConnRequestTimeout(Integer connRequestTimeout);\n+\n+    void setConnectorName(String connectorName);\n+\n+    void setDisplayName(String displayName);\n+\n+    void setLocation(String location);\n+\n+    void setPoolConf(ConnPoolConf poolConf);\n+\n+    void setResources(List<ExternalResource> resources);\n+\n+    void setVersion(String version);\n+}"},{"sha":"bd8602433925a424e2fe17d623f2cb197e28f572","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/ConnPoolConf.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnPoolConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnPoolConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FConnPoolConf.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface ConnPoolConf {\n+\n+    Integer getMaxObjects();\n+\n+    void setMaxObjects(Integer maxObjects);\n+\n+    Integer getMinIdle();\n+\n+    void setMinIdle(Integer minIdle);\n+\n+    Integer getMaxIdle();\n+\n+    void setMaxIdle(Integer maxIdle);\n+\n+    Long getMaxWait();\n+\n+    void setMaxWait(Long maxWait);\n+\n+    Long getMinEvictableIdleTimeMillis();\n+\n+    void setMinEvictableIdleTimeMillis(Long minEvictableIdleTimeMillis);\n+}"},{"sha":"7a6812effbcd6af7b253fc54ad7756911ea3c0cb","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/DerAttr.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Collection;\n+\n+public interface DerAttr<N extends NormAttr> extends Attr<DerSchema> {\n+\n+    String getValue(Collection<N> attrs);\n+}"},{"sha":"e8e9e5089730d3df25323c8583c31de35df292ac","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/DerSchema.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FDerSchema.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface DerSchema extends Schema {\n+\n+    String getExpression();\n+\n+    void setExpression(String expression);\n+}"},{"sha":"4e6ace9850d52a4be4aea37bc35b60810dcda070","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Entitlement.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntitlement.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface Entitlement extends Entity<String> {\n+\n+    String getDescription();\n+\n+    void setKey(String key);\n+\n+    void setDescription(String description);\n+\n+}"},{"sha":"b1b4e000e7fe8fd38a668e754d50fe7f15a2237e","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Entity.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FEntity.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,24 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface Entity<KEY> {\n+\n+    KEY getKey();\n+}"},{"sha":"c54729a1f3cd29f10c2453ea29ad5016b754853d","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Exec.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Date;\n+\n+public interface Exec extends Entity<Long> {\n+\n+    Date getEndDate();\n+\n+    String getMessage();\n+\n+    Date getStartDate();\n+\n+    String getStatus();\n+\n+    void setEndDate(Date endDate);\n+\n+    /**\n+     * Set a message for this execution, taking care of replacing every null character with newline.\n+     *\n+     * @param message the message to set for this execution\n+     */\n+    void setMessage(String message);\n+\n+    void setStartDate(Date startDate);\n+\n+    void setStatus(String status);\n+}"},{"sha":"3e96e13d8765da8825bfce8df4f54ef0270c305a","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/ExternalResource.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.persistence.api.entity.user.UMapping;\n+import org.apache.syncope.persistence.api.entity.role.RMapping;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.PropagationMode;\n+import org.apache.syncope.common.lib.types.TraceLevel;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n+\n+public interface ExternalResource extends Entity<String> {\n+\n+    AccountPolicy getAccountPolicy();\n+\n+    PasswordPolicy getPasswordPolicy();\n+\n+    SyncPolicy getSyncPolicy();\n+\n+    Set<ConnConfProperty> getConnInstanceConfiguration();\n+\n+    ConnInstance getConnector();\n+\n+    TraceLevel getCreateTraceLevel();\n+\n+    TraceLevel getUpdateTraceLevel();\n+\n+    TraceLevel getDeleteTraceLevel();\n+\n+    TraceLevel getSyncTraceLevel();\n+\n+    List<String> getPropagationActionsClassNames();\n+\n+    PropagationMode getPropagationMode();\n+\n+    Integer getPropagationPriority();\n+\n+    UMapping getUmapping();\n+\n+    RMapping getRmapping();\n+\n+    SyncToken getUsyncToken();\n+\n+    String getSerializedUSyncToken();\n+\n+    SyncToken getRsyncToken();\n+\n+    String getSerializedRSyncToken();\n+\n+    boolean isEnforceMandatoryCondition();\n+\n+    boolean isPropagationPrimary();\n+\n+    boolean isRandomPwdIfNotProvided();\n+\n+    void setKey(String name);\n+\n+    void setAccountPolicy(AccountPolicy accountPolicy);\n+\n+    void setPasswordPolicy(PasswordPolicy passwordPolicy);\n+\n+    void setSyncPolicy(SyncPolicy syncPolicy);\n+\n+    void setConnInstanceConfiguration(Set<ConnConfProperty> properties);\n+\n+    void setConnector(ConnInstance connector);\n+\n+    void setCreateTraceLevel(TraceLevel createTraceLevel);\n+\n+    void setUpdateTraceLevel(TraceLevel updateTraceLevel);\n+\n+    void setDeleteTraceLevel(TraceLevel deleteTraceLevel);\n+\n+    void setSyncTraceLevel(TraceLevel syncTraceLevel);\n+\n+    void setPropagationMode(PropagationMode propagationMode);\n+\n+    void setPropagationPriority(Integer priority);\n+\n+    void setUmapping(UMapping umapping);\n+\n+    void setRmapping(RMapping rmapping);\n+\n+    void setSerializedUSyncToken(String token);\n+\n+    void setSerializedRSyncToken(String token);\n+\n+    void setEnforceMandatoryCondition(boolean enforce);\n+\n+    void setPropagationPrimary(boolean condition);\n+\n+    void setRandomPwdIfNotProvided(boolean condition);\n+\n+    void setUsyncToken(SyncToken syncToken);\n+\n+    void setRsyncToken(SyncToken syncToken);\n+}"},{"sha":"ca6e17bcd5e353c8b1ffdb801a999ed05904dc52","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Logger.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FLogger.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.apache.syncope.common.lib.types.LoggerType;\n+\n+public interface Logger extends Entity<String> {\n+\n+    void setName(String name);\n+\n+    LoggerLevel getLevel();\n+\n+    void setLevel(LoggerLevel level);\n+\n+    LoggerType getType();\n+\n+    void setType(LoggerType type);\n+}"},{"sha":"9e538a6054ac23d542bd707c778ed47efb419d23","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Mapping.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMapping.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+\n+public interface Mapping<T extends MappingItem> extends Entity<Long> {\n+\n+    T getAccountIdItem();\n+\n+    String getAccountLink();\n+\n+    List<T> getItems();\n+\n+    ExternalResource getResource();\n+\n+    boolean addItem(T item);\n+\n+    boolean removeItem(T item);\n+\n+    void setAccountIdItem(T item);\n+\n+    void setAccountLink(String accountLink);\n+\n+    void setItems(List<T> items);\n+\n+    void setResource(ExternalResource resource);\n+}"},{"sha":"33d312771473d9012d6aeb547e33f13cbdcef626","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/MappingItem.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FMappingItem.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+\n+public interface MappingItem extends Entity<Long> {\n+\n+    String getExtAttrName();\n+\n+    String getIntAttrName();\n+\n+    IntMappingType getIntMappingType();\n+\n+    String getMandatoryCondition();\n+\n+    <T extends MappingItem> Mapping<T> getMapping();\n+\n+    MappingPurpose getPurpose();\n+\n+    boolean isAccountid();\n+\n+    boolean isPassword();\n+\n+    void setAccountid(boolean accountid);\n+\n+    void setExtAttrName(String extAttrName);\n+\n+    void setIntAttrName(String intAttrName);\n+\n+    void setIntMappingType(IntMappingType intMappingType);\n+\n+    void setMandatoryCondition(String condition);\n+\n+    void setMapping(Mapping mapping);\n+\n+    void setPassword(boolean password);\n+\n+    void setPurpose(MappingPurpose purpose);\n+}"},{"sha":"c5bbccb0a452a8ab4a46b2e215a31fdd339fff61","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/NormAttr.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.dao.validation.InvalidNormAttrValueException;\n+\n+public interface NormAttr extends Attr<NormSchema> {\n+\n+    void addValue(String value, AttributableUtil attributableUtil) throws InvalidNormAttrValueException;\n+\n+    NormAttrValue getUniqueValue();\n+\n+    List<? extends NormAttrValue> getValues();\n+\n+    List<String> getValuesAsStrings();\n+\n+    boolean removeValue(NormAttrValue attrValue);\n+\n+    void setUniqueValue(NormAttrValue uniqueValue);\n+}"},{"sha":"3873c700b1838579df78ee0d7eb7f7f0764b5052","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/NormAttrValue.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormAttrValue.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Date;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.persistence.api.dao.validation.ParsingValidationException;\n+\n+public interface NormAttrValue extends Entity<Long> {\n+\n+    NormAttr getNormAttr();\n+\n+    byte[] getBinaryValue();\n+\n+    Boolean getBooleanValue();\n+\n+    Date getDateValue();\n+\n+    Double getDoubleValue();\n+\n+    Long getLongValue();\n+\n+    String getStringValue();\n+\n+    <V> V getValue();\n+\n+    String getValueAsString();\n+\n+    String getValueAsString(AttrSchemaType type);\n+\n+    void parseValue(NormSchema schema, String value) throws ParsingValidationException;\n+\n+    void setNormAttr(NormAttr attr);\n+\n+    void setBinaryValue(byte[] binaryValue);\n+\n+    void setBooleanValue(Boolean booleanValue);\n+\n+    void setDateValue(Date dateValue);\n+\n+    void setDoubleValue(Double doubleValue);\n+\n+    void setLongValue(Long longValue);\n+\n+    void setStringValue(String stringValue);\n+}"},{"sha":"53072ade510af26cd8d577a68c6416f7f710a867","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/NormSchema.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNormSchema.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.persistence.api.dao.validation.Validator;\n+\n+public interface NormSchema extends Schema {\n+\n+    CipherAlgorithm getCipherAlgorithm();\n+\n+    String getConversionPattern();\n+\n+    String getEnumerationKeys();\n+\n+    String getEnumerationValues();\n+\n+    String getMimeType();\n+\n+    String getSecretKey();\n+\n+    Validator getValidator();\n+\n+    String getValidatorClass();\n+\n+    void setCipherAlgorithm(CipherAlgorithm cipherAlgorithm);\n+\n+    void setConversionPattern(String conversionPattern);\n+\n+    void setEnumerationKeys(String enumerationKeys);\n+\n+    void setEnumerationValues(String enumerationValues);\n+\n+    void setMimeType(String mimeType);\n+\n+    void setSecretKey(String secretKey);\n+\n+    void setValidatorClass(String validatorClass);\n+\n+}"},{"sha":"d4aaaa9c49ef8edd7f02449db6c52eea2c5889bd","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Notification.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FNotification.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.TraceLevel;\n+\n+public interface Notification extends Entity<Long> {\n+\n+    boolean addEvent(String event);\n+\n+    boolean addStaticRecipient(String staticRecipient);\n+\n+    List<String> getEvents();\n+\n+    Long getId();\n+\n+    String getRecipientAttrName();\n+\n+    IntMappingType getRecipientAttrType();\n+\n+    String getRecipients();\n+\n+    String getRoleAbout();\n+\n+    String getSender();\n+\n+    List<String> getStaticRecipients();\n+\n+    String getSubject();\n+\n+    String getTemplate();\n+\n+    TraceLevel getTraceLevel();\n+\n+    String getUserAbout();\n+\n+    boolean isActive();\n+\n+    boolean isSelfAsRecipient();\n+\n+    boolean removeEvent(String event);\n+\n+    boolean removeStaticRecipient(String staticRecipient);\n+\n+    void setActive(boolean active);\n+\n+    void setEvents(List<String> events);\n+\n+    void setRecipientAttrName(String recipientAttrName);\n+\n+    void setRecipientAttrType(IntMappingType recipientAttrType);\n+\n+    void setRecipients(String recipients);\n+\n+    void setRoleAbout(String roleAbout);\n+\n+    void setSelfAsRecipient(boolean selfAsRecipient);\n+\n+    void setSender(String sender);\n+\n+    void setStaticRecipients(List<String> staticRecipients);\n+\n+    void setSubject(String subject);\n+\n+    void setTemplate(String template);\n+\n+    void setTraceLevel(TraceLevel traceLevel);\n+\n+    void setUserAbout(String userAbout);\n+}"},{"sha":"cc82917a35ba32c9e972fe5284d3e0f923fc2a0d","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/PasswordPolicy.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface PasswordPolicy extends Policy {\n+    \n+}"},{"sha":"dc501e10ab99027eef9e9b30eb60f97095f0dd7d","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Policy.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FPolicy.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.PolicySpec;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+\n+public interface Policy extends Entity<Long> {\n+\n+    String getDescription();\n+\n+    <T extends PolicySpec> T getSpecification(Class<T> reference);\n+\n+    PolicyType getType();\n+\n+    void setDescription(String description);\n+\n+    void setSpecification(PolicySpec policy);\n+}"},{"sha":"f158743bb0f31630f06adf15e05835c5632f9bd7","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Report.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReport.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.report.ReportletConf;\n+\n+public interface Report extends Entity<Long> {\n+\n+    String getName();\n+\n+    boolean addExec(ReportExec exec);\n+\n+    boolean addReportletConf(ReportletConf reportletConf);\n+\n+    String getCronExpression();\n+\n+    List<ReportExec> getExecs();\n+\n+    List<ReportletConf> getReportletConfs();\n+\n+    boolean removeExec(ReportExec exec);\n+\n+    boolean removeReportletConf(ReportletConf reportletConf);\n+\n+    void setCronExpression(String cronExpression);\n+\n+    void setExecs(List<ReportExec> executions);\n+\n+    void setName(String name);\n+\n+    void setReportletConfs(List<ReportletConf> reportletConfs);\n+}"},{"sha":"1cbd6b39d8f61c6887b28b02213fbe1114aa7d0a","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/ReportExec.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReportExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReportExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FReportExec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.ReportExecStatus;\n+\n+public interface ReportExec extends Exec {\n+\n+    byte[] getExecResult();\n+\n+    Report getReport();\n+\n+    void setExecResult(byte[] execResult);\n+\n+    void setReport(Report report);\n+\n+    void setStatus(ReportExecStatus status);\n+}"},{"sha":"d05f8ec85e37f6f33e0c53a8fc01b454842e94ed","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Schema.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSchema.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+\n+public interface Schema extends Entity<String> {\n+\n+    AttrSchemaType getType();\n+\n+    String getMandatoryCondition();\n+\n+    boolean isMultivalue();\n+\n+    boolean isReadonly();\n+\n+    boolean isUniqueConstraint();\n+\n+    void setName(String name);\n+\n+    void setType(AttrSchemaType type);\n+\n+    void setMandatoryCondition(String condition);\n+\n+    void setMultivalue(boolean multivalue);\n+\n+    void setReadonly(boolean readonly);\n+\n+    void setUniqueConstraint(boolean uniquevalue);\n+\n+}"},{"sha":"d75bcfafa23583c96885f055d12b86c6971388dc","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/Subject.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSubject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSubject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSubject.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.Set;\n+\n+public interface Subject<N extends NormAttr, D extends DerAttr<N>, V extends VirAttr> extends Attributable<N, D, V> {\n+\n+    boolean addResource(ExternalResource resource);\n+\n+    boolean removeResource(ExternalResource resource);\n+\n+    Set<String> getResourceNames();\n+\n+    Set<ExternalResource> getResources();\n+\n+    void setResources(Set<ExternalResource> resources);\n+}"},{"sha":"8f15dbce86fee7327575cd35d415e047bae8c093","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/SyncPolicy.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface SyncPolicy extends Policy {\n+    \n+}"},{"sha":"ce39d36a7b1f5a993eab9d547ce107556c041cb1","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/VirAttr.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+import java.util.List;\n+\n+public interface VirAttr extends Attr<VirSchema> {\n+\n+    List<String> getValues();\n+\n+    boolean addValue(String value);\n+\n+    boolean removeValue(String value);\n+\n+    void setValues(List<String> values);\n+}"},{"sha":"d222ac58afe78daa62985d7debb560a758bc1b02","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/VirSchema.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2FVirSchema.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity;\n+\n+public interface VirSchema extends Schema {\n+\n+}"},{"sha":"a294321b62e13a3f6afd353f848826c951d7d9fa","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/conf/CNormAttr.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FCNormAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FCNormAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FCNormAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.conf;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface CNormAttr extends NormAttr {\n+\n+}"},{"sha":"4c559c6db72611ebf47c4ab2cd52fe43d0a84aca","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/conf/Conf.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.conf;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.entity.Attributable;\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface Conf extends Attributable<CNormAttr, DerAttr<CNormAttr>, VirAttr> {\n+\n+    @Override\n+    boolean addNormAttr(CNormAttr attr);\n+\n+    @Override\n+    CNormAttr getNormAttr(String normSchemaName);\n+\n+    @Override\n+    List<CNormAttr> getNormAttrs();\n+\n+    @Override\n+    boolean removeNormAttr(CNormAttr attr);\n+}"},{"sha":"8cb04f802e71f8e219c3a6261509e5deb836eb3a","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MDerAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+\n+public interface MDerAttr extends DerAttr<MNormAttr> {\n+\n+    MDerAttrTemplate getTemplate();\n+\n+    void setTemplate(MDerAttrTemplate template);\n+}"},{"sha":"55c1c9f427ce7f7ac9cd3a0c85feb00bb648007e","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MDerAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMDerAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.DerSchema;\n+\n+public interface MDerAttrTemplate extends AttrTemplate<DerSchema> {\n+\n+}"},{"sha":"9804358db8180b0a4b82bb8f54ff1b33c0e9f114","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MNormAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface MNormAttr extends NormAttr {\n+\n+    MNormAttrTemplate getTemplate();\n+\n+    void setTemplate(MNormAttrTemplate template);\n+}"},{"sha":"7c21c40acc49999b3483c2d0f280ce65fa55258a","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MNormAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.NormSchema;\n+\n+public interface MNormAttrTemplate extends AttrTemplate<NormSchema> {\n+\n+}"},{"sha":"5031c7d069e67154c9010f200c4b3851c3f7d9d6","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MNormAttrValue.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMNormAttrValue.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public interface MNormAttrValue extends NormAttrValue {\n+\n+}"},{"sha":"43e42fecc73b0d7a79fcf01aa6a82ee65f4b64a3","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MVirAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface MVirAttr extends VirAttr {\n+\n+    MVirAttrTemplate getTemplate();\n+\n+    void setTemplate(MVirAttrTemplate template);\n+}"},{"sha":"6a47df019e9c70a419ae3a211e5856ef90dd597e","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/MVirAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMVirAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.VirSchema;\n+\n+public interface MVirAttrTemplate extends AttrTemplate<VirSchema> {\n+\n+}"},{"sha":"15c2ad054d82339d4970fed219235dfd5f6595e2","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/membership/Membership.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.membership;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.entity.Attributable;\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+import org.apache.syncope.persistence.api.entity.user.User;\n+\n+public interface Membership extends Attributable<MNormAttr, MDerAttr, MVirAttr> {\n+\n+    Role getRole();\n+\n+    User getUser();\n+\n+    void setRole(Role role);\n+\n+    void setUser(User user);\n+\n+    @Override\n+    boolean addNormAttr(MNormAttr attr);\n+\n+    @Override\n+    boolean addDerAttr(MDerAttr attr);\n+\n+    @Override\n+    boolean addVirAttr(MVirAttr attr);\n+\n+    @Override\n+    MNormAttr getNormAttr(String normSchemaName);\n+\n+    @Override\n+    List<MNormAttr> getNormAttrs();\n+\n+    @Override\n+    MDerAttr getDerAttr(String derSchemaName);\n+\n+    @Override\n+    List<MDerAttr> getDerAttrs();\n+\n+    @Override\n+    MVirAttr getVirAttr(String virSchemaName);\n+\n+    @Override\n+    List<MVirAttr> getVirAttrs();\n+\n+    @Override\n+    boolean removeNormAttr(MNormAttr attr);\n+\n+    @Override\n+    boolean removeDerAttr(MDerAttr derAttr);\n+\n+    @Override\n+    boolean removeVirAttr(MVirAttr virAttr);\n+}"},{"sha":"b08c0a6efd0e135a8839e27948adb72a0b47be70","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RDerAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+\n+public interface RDerAttr extends DerAttr<RNormAttr> {\n+\n+    RDerAttrTemplate getTemplate();\n+\n+    void setTemplate(RDerAttrTemplate template);\n+}"},{"sha":"832d8d26b968077c623ecc3a451aaad8e5886cf0","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RDerAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRDerAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.DerSchema;\n+\n+public interface RDerAttrTemplate extends AttrTemplate<DerSchema> {\n+\n+}"},{"sha":"23a0def5f1f03fb14d72a0aeeae020585404ea88","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RMapping.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMapping.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.Mapping;\n+\n+public interface RMapping extends Mapping<RMappingItem> {\n+    \n+}"},{"sha":"91746835e05db9071e4e4d6d9321ff2b6270ce75","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RMappingItem.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRMappingItem.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.MappingItem;\n+\n+public interface RMappingItem extends MappingItem {\n+\n+}"},{"sha":"fed258590b66084bc88cef3b892effe498be4ca1","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RNormAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface RNormAttr extends NormAttr {\n+\n+    RNormAttrTemplate getTemplate();\n+\n+    void setTemplate(RNormAttrTemplate template);\n+}"},{"sha":"83f2b51ba822bb2948e308d9f3e905ff68b9a04c","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RNormAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.NormSchema;\n+\n+public interface RNormAttrTemplate extends AttrTemplate<NormSchema> {\n+\n+}"},{"sha":"cbb8e74723f1d63605aac5e0fb89304d90a30018","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RNormAttrValue.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRNormAttrValue.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public interface RNormAttrValue extends NormAttrValue {\n+\n+}"},{"sha":"1ea651980207958fce404835e2358c7a45dda637","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RVirAttr.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface RVirAttr extends VirAttr {\n+\n+    RVirAttrTemplate getTemplate();\n+\n+    void setTemplate(RVirAttrTemplate template);\n+}"},{"sha":"3e07013b66f1eaa8d23340a2569123731d8f0189","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/RVirAttrTemplate.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRVirAttrTemplate.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.VirSchema;\n+\n+public interface RVirAttrTemplate extends AttrTemplate<VirSchema> {\n+\n+}"},{"sha":"3d314e2adf8239abce0886add3feb702b8576751","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/role/Role.java","status":"added","additions":170,"deletions":0,"changes":170,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Frole%2FRole.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.role;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.persistence.api.entity.AccountPolicy;\n+import org.apache.syncope.persistence.api.entity.AttrTemplate;\n+import org.apache.syncope.persistence.api.entity.Entitlement;\n+import org.apache.syncope.persistence.api.entity.PasswordPolicy;\n+import org.apache.syncope.persistence.api.entity.Schema;\n+import org.apache.syncope.persistence.api.entity.Subject;\n+import org.apache.syncope.persistence.api.entity.user.User;\n+\n+public interface Role extends Subject<RNormAttr, RDerAttr, RVirAttr> {\n+\n+    String getName();\n+\n+    Role getParent();\n+\n+    boolean addEntitlement(Entitlement entitlement);\n+\n+    boolean removeEntitlement(Entitlement entitlement);\n+\n+    /**\n+     * Get all inherited attributes from the ancestors.\n+     *\n+     * @return a list of inherited and only inherited attributes.\n+     */\n+    List<RNormAttr> findLastInheritedAncestorNormAttrs();\n+\n+    /**\n+     * Get all inherited derived attributes from the ancestors.\n+     *\n+     * @return a list of inherited and only inherited attributes.\n+     */\n+    List<RDerAttr> findLastInheritedAncestorDerAttrs();\n+\n+    /**\n+     * Get all inherited virtual attributes from the ancestors.\n+     *\n+     * @return a list of inherited and only inherited attributes.\n+     */\n+    List<RVirAttr> findLastInheritedAncestorVirAttrs();\n+\n+    /**\n+     * Get first valid account policy.\n+     *\n+     * @return parent account policy if isInheritAccountPolicy is 'true' and parent is not null, local account policy\n+     * otherwise.\n+     */\n+    AccountPolicy getAccountPolicy();\n+\n+    <T extends AttrTemplate<K>, K extends Schema> List<T> findInheritedTemplates(Class<T> reference);\n+\n+    <T extends AttrTemplate<K>, K extends Schema> T getAttrTemplate(\n+            Class<T> reference, String schemaName);\n+\n+    <T extends AttrTemplate<K>, K extends Schema> List<K> getAttrTemplateSchemas(Class<T> reference);\n+\n+    <T extends AttrTemplate<Schema>> List<T> getAttrTemplates(Class<T> reference);\n+\n+    Set<Entitlement> getEntitlements();\n+\n+    /**\n+     * Get first valid password policy.\n+     *\n+     * @return parent password policy if isInheritPasswordPolicy is 'true' and parent is not null, local password policy\n+     * otherwise\n+     */\n+    PasswordPolicy getPasswordPolicy();\n+\n+    Role getRoleOwner();\n+\n+    User getUserOwner();\n+\n+    boolean isInheritAccountPolicy();\n+\n+    boolean isInheritAttrs();\n+\n+    boolean isInheritDerAttrs();\n+\n+    boolean isInheritOwner();\n+\n+    boolean isInheritPasswordPolicy();\n+\n+    boolean isInheritTemplates();\n+\n+    boolean isInheritVirAttrs();\n+\n+    void setAccountPolicy(AccountPolicy accountPolicy);\n+\n+    void setEntitlements(List<Entitlement> entitlements);\n+\n+    void setInheritAccountPolicy(boolean condition);\n+\n+    void setInheritAttrs(boolean inheritAttrs);\n+\n+    void setInheritDerAttrs(boolean inheritDerAttrs);\n+\n+    void setInheritOwner(boolean inheritOwner);\n+\n+    void setInheritPasswordPolicy(boolean condition);\n+\n+    void setInheritTemplates(boolean condition);\n+\n+    void setInheritVirAttrs(boolean inheritVirAttrs);\n+\n+    void setName(String name);\n+\n+    void setParent(Role parent);\n+\n+    void setPasswordPolicy(PasswordPolicy passwordPolicy);\n+\n+    void setRoleOwner(Role roleOwner);\n+\n+    void setUserOwner(User userOwner);\n+\n+    @Override\n+    boolean addNormAttr(RNormAttr attr);\n+\n+    @Override\n+    boolean addDerAttr(RDerAttr attr);\n+\n+    @Override\n+    boolean addVirAttr(RVirAttr attr);\n+\n+    @Override\n+    RNormAttr getNormAttr(String normSchemaName);\n+\n+    @Override\n+    List<RNormAttr> getNormAttrs();\n+\n+    @Override\n+    RDerAttr getDerAttr(String derSchemaName);\n+\n+    @Override\n+    List<RDerAttr> getDerAttrs();\n+\n+    @Override\n+    RVirAttr getVirAttr(String virSchemaName);\n+\n+    @Override\n+    List<RVirAttr> getVirAttrs();\n+\n+    @Override\n+    boolean removeNormAttr(RNormAttr attr);\n+\n+    @Override\n+    boolean removeDerAttr(RDerAttr derAttr);\n+\n+    @Override\n+    boolean removeVirAttr(RVirAttr virAttr);\n+}"},{"sha":"a60ee2b4518d5b5c3f5432411fdfd5a10ec8bfc9","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/NotificationTask.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.TraceLevel;\n+\n+public interface NotificationTask extends Task {\n+\n+    String getHtmlBody();\n+\n+    Set<String> getRecipients();\n+\n+    String getSender();\n+\n+    String getSubject();\n+\n+    String getTextBody();\n+\n+    TraceLevel getTraceLevel();\n+\n+    boolean isExecuted();\n+\n+    void setExecuted(boolean executed);\n+\n+    void setHtmlBody(String htmlBody);\n+\n+    boolean addRecipient(String recipient);\n+\n+    boolean removeRecipient(String recipient);\n+\n+    void setRecipients(Set<String> recipients);\n+\n+    void setSender(String sender);\n+\n+    void setSubject(String subject);\n+\n+    void setTextBody(String textBody);\n+\n+    void setTraceLevel(TraceLevel traceLevel);\n+}"},{"sha":"0de12ee9164837e8d82acc59861ca985340d1df8","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/PropagationTask.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.AttributableType;\n+import org.apache.syncope.common.lib.types.PropagationMode;\n+import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+\n+public interface PropagationTask extends Task {\n+\n+    String getAccountId();\n+\n+    Set<Attribute> getAttributes();\n+\n+    String getObjectClassName();\n+\n+    String getOldAccountId();\n+\n+    PropagationMode getPropagationMode();\n+\n+    ResourceOperation getPropagationOperation();\n+\n+    ExternalResource getResource();\n+\n+    Long getSubjectId();\n+\n+    AttributableType getSubjectType();\n+\n+    void setAccountId(String accountId);\n+\n+    void setAttributes(Set<Attribute> attributes);\n+\n+    void setObjectClassName(String objectClassName);\n+\n+    void setOldAccountId(String oldAccountId);\n+\n+    void setPropagationMode(PropagationMode propagationMode);\n+\n+    void setPropagationOperation(ResourceOperation operation);\n+\n+    void setResource(ExternalResource resource);\n+\n+    void setSubjectId(Long subjectId);\n+\n+    void setSubjectType(AttributableType subjectType);\n+}"},{"sha":"5b376480f844bfcfe3e5b6dd1b2d5c55ad9a2d46","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/ProvisioningTask.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.MatchingRule;\n+import org.apache.syncope.common.lib.types.UnmatchingRule;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+\n+public interface ProvisioningTask extends SchedTask {\n+\n+    List<String> getActionsClassNames();\n+\n+    MatchingRule getMatchingRule();\n+\n+    ExternalResource getResource();\n+\n+    UnmatchingRule getUnmatchingRule();\n+\n+    boolean isPerformCreate();\n+\n+    boolean isPerformDelete();\n+\n+    boolean isPerformUpdate();\n+\n+    boolean isSyncStatus();\n+\n+    void setMatchingRule(MatchingRule matchigRule);\n+\n+    void setPerformCreate(boolean performCreate);\n+\n+    void setPerformDelete(boolean performDelete);\n+\n+    void setPerformUpdate(boolean performUpdate);\n+\n+    void setResource(ExternalResource resource);\n+\n+    void setSyncStatus(boolean syncStatus);\n+\n+    void setUnmatchingRule(UnmatchingRule unmatchigRule);\n+\n+}"},{"sha":"e72ac5b54a9eadae0eb52d62a6c249243a22f72d","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/PushTask.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+public interface PushTask extends ProvisioningTask {\n+\n+    String getRoleFilter();\n+\n+    String getUserFilter();\n+\n+    void setRoleFilter(String roleFilter);\n+\n+    void setUserFilter(String filter);\n+}"},{"sha":"f64eb9b5a07ca95509aef57362c429a0fab497ba","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/SchedTask.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+public interface SchedTask extends Task {\n+\n+    String getCronExpression();\n+\n+    String getDescription();\n+\n+    String getJobClassName();\n+\n+    String getName();\n+\n+    void setCronExpression(String cronExpression);\n+\n+    void setDescription(String description);\n+\n+    void setJobClassName(String jobClassName);\n+\n+    void setName(String name);\n+}"},{"sha":"e51f37964c2d7b14cffb2683aa7cb0274428cf28","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/SyncTask.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+public interface SyncTask extends ProvisioningTask {\n+\n+    String getRoleTemplate();\n+\n+    String getUserTemplate();\n+\n+    boolean isFullReconciliation();\n+\n+    void setFullReconciliation(boolean condition);\n+\n+    void setRoleTemplate(String roleTemplate);\n+\n+    void setUserTemplate(String userTemplate);\n+}"},{"sha":"baf8637de298d105108244781514749ebb1abc90","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/Task.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+import java.util.List;\n+import org.apache.syncope.persistence.api.entity.Entity;\n+\n+public interface Task extends Entity<Long> {\n+\n+    boolean addExec(TaskExec exec);\n+\n+    boolean removeExec(TaskExec exec);\n+\n+    List<TaskExec> getExecs();\n+\n+    void setExecs(List<TaskExec> executions);\n+}"},{"sha":"ba0dc3749162764c6d812295c59689dceaa0f089","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/task/TaskExec.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.task;\n+\n+import org.apache.syncope.persistence.api.entity.Exec;\n+\n+public interface TaskExec extends Exec {\n+\n+    Task getTask();\n+\n+    void setTask(Task task);\n+}"},{"sha":"9efe547847c76ee1e50d39a7f9b32ad8880da817","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/SecurityQuestion.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.Entity;\n+\n+public interface SecurityQuestion extends Entity<Long> {\n+\n+    String getContent();\n+\n+    void setContent(String content);\n+}"},{"sha":"ffec8bac7b8207b3c9e9740aa1ce7579a3832430","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UDerAttr.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUDerAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.DerAttr;\n+\n+public interface UDerAttr extends DerAttr<UNormAttr> {\n+\n+}"},{"sha":"479d34ea004b4a1597abb7f7e5fcc1424f40c169","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UMapping.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMapping.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.Mapping;\n+\n+public interface UMapping extends Mapping<UMappingItem> {\n+\n+    UMappingItem getPasswordItem();\n+\n+    boolean setPasswordItem(UMappingItem item);\n+}"},{"sha":"e14eefe6140f03e772cab9d5a826218b6104921a","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UMappingItem.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUMappingItem.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.MappingItem;\n+\n+public interface UMappingItem extends MappingItem {\n+\n+}"},{"sha":"ed0ea4a1f4a84d048252f93bd2b93dc801f46668","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UNormAttr.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttr;\n+\n+public interface UNormAttr extends NormAttr {\n+\n+}"},{"sha":"2340fb846160191bd5525939deb09376cf961ad6","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UNormAttrValue.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUNormAttrValue.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.NormAttrValue;\n+\n+public interface UNormAttrValue extends NormAttrValue {\n+\n+}"},{"sha":"baf744df440e18334dd0ac6f02972e944a806ee0","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/UVirAttr.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUVirAttr.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import org.apache.syncope.persistence.api.entity.VirAttr;\n+\n+public interface UVirAttr extends VirAttr {\n+\n+}"},{"sha":"c7aaf9f774489bbe45f3530a88fa2c5ac6b72a4c","filename":"syncope620/server/persistence-api/src/main/java/org/apache/syncope/persistence/api/entity/user/User.java","status":"added","additions":152,"deletions":0,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.persistence.api.entity.user;\n+\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.persistence.api.entity.ExternalResource;\n+import org.apache.syncope.persistence.api.entity.Subject;\n+import org.apache.syncope.persistence.api.entity.membership.Membership;\n+import org.apache.syncope.persistence.api.entity.role.Role;\n+\n+public interface User extends Subject<UNormAttr, UDerAttr, UVirAttr> {\n+\n+    boolean addMembership(Membership membership);\n+\n+    boolean canDecodePassword();\n+\n+    boolean checkToken(String token);\n+\n+    void generateToken(int tokenLength, int tokenExpireTime);\n+\n+    Date getChangePwdDate();\n+\n+    CipherAlgorithm getCipherAlgorithm();\n+\n+    String getClearPassword();\n+\n+    Integer getFailedLogins();\n+\n+    Date getLastLoginDate();\n+\n+    Membership getMembership(Long syncopeRoleId);\n+\n+    List<Membership> getMemberships();\n+\n+    Set<ExternalResource> getOwnResources();\n+\n+    String getPassword();\n+\n+    List<String> getPasswordHistory();\n+\n+    Set<Long> getRoleIds();\n+\n+    List<Role> getRoles();\n+\n+    String getSecurityAnswer();\n+\n+    SecurityQuestion getSecurityQuestion();\n+\n+    String getStatus();\n+\n+    String getToken();\n+\n+    Date getTokenExpireTime();\n+\n+    String getUsername();\n+\n+    String getWorkflowId();\n+\n+    boolean hasTokenExpired();\n+\n+    Boolean isSuspended();\n+\n+    void removeClearPassword();\n+\n+    boolean removeMembership(Membership membership);\n+\n+    void removeToken();\n+\n+    void setChangePwdDate(Date changePwdDate);\n+\n+    void setCipherAlgorithm(CipherAlgorithm cipherAlgorithm);\n+\n+    void setEncodedPassword(String password, CipherAlgorithm cipherAlgoritm);\n+\n+    void setFailedLogins(Integer failedLogins);\n+\n+    void setLastLoginDate(Date lastLoginDate);\n+\n+    void setMemberships(List<Membership> memberships);\n+\n+    void setPassword(String password, CipherAlgorithm cipherAlgoritm);\n+\n+    void setSecurityAnswer(String securityAnswer);\n+\n+    void setSecurityQuestion(SecurityQuestion securityQuestion);\n+\n+    void setStatus(String status);\n+\n+    void setSuspended(Boolean suspended);\n+\n+    void setUsername(String username);\n+\n+    void setWorkflowId(String workflowId);\n+\n+    boolean verifyPasswordHistory(String password, int size);\n+\n+    @Override\n+    boolean addNormAttr(UNormAttr attr);\n+\n+    @Override\n+    boolean addDerAttr(UDerAttr attr);\n+\n+    @Override\n+    boolean addVirAttr(UVirAttr attr);\n+\n+    @Override\n+    UNormAttr getNormAttr(String normSchemaName);\n+\n+    @Override\n+    List<UNormAttr> getNormAttrs();\n+\n+    @Override\n+    UDerAttr getDerAttr(String derSchemaName);\n+\n+    @Override\n+    List<UDerAttr> getDerAttrs();\n+\n+    @Override\n+    UVirAttr getVirAttr(String virSchemaName);\n+\n+    @Override\n+    List<UVirAttr> getVirAttrs();\n+\n+    @Override\n+    boolean removeNormAttr(UNormAttr attr);\n+\n+    @Override\n+    boolean removeDerAttr(UDerAttr derAttr);\n+\n+    @Override\n+    boolean removeVirAttr(UVirAttr virAttr);\n+\n+}"},{"sha":"b8c05036f26574f8ac07a6032127b4499c8fbb02","filename":"syncope620/server/pom.xml","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c73a73b0977f51033c9690cda570d6f02a047b73/syncope620%2Fserver%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope620%2Fserver%2Fpom.xml?ref=c73a73b0977f51033c9690cda570d6f02a047b73","patch":"@@ -0,0 +1,41 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Server</name>\n+  <description>Apache Syncope Server</description>\n+  <groupId>org.apache.syncope</groupId>\n+  <artifactId>syncope-server</artifactId>\n+  <packaging>pom</packaging>\n+\n+  <modules>\n+    <module>persistence-api</module>\n+    <!--<module>persistence-jpa</module>-->\n+  </modules>\n+\n+</project>"}]}