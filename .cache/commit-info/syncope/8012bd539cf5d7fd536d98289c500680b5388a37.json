{"sha":"8012bd539cf5d7fd536d98289c500680b5388a37","node_id":"C_kwDOJfYA1toAKDgwMTJiZDUzOWNmNWQ3ZmQ1MzZkOTgyODljNTAwNjgwYjUzODhhMzc","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-12-30T13:28:00Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-12-30T13:28:00Z"},"message":"Fix following CAS code changes","tree":{"sha":"03158e61198224022978a20476da585031893694","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/03158e61198224022978a20476da585031893694"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8012bd539cf5d7fd536d98289c500680b5388a37","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8012bd539cf5d7fd536d98289c500680b5388a37","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8012bd539cf5d7fd536d98289c500680b5388a37","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8012bd539cf5d7fd536d98289c500680b5388a37/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"392d3ca0a5f659f5edd6f57aace70da5adca3fae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/392d3ca0a5f659f5edd6f57aace70da5adca3fae","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/392d3ca0a5f659f5edd6f57aace70da5adca3fae"}],"stats":{"total":38,"additions":20,"deletions":18},"files":[{"sha":"348d3f8df847649f07239dcef8d0470e9b04a70c","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/config/SyncopeWARefreshContextJob.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWARefreshContextJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWARefreshContextJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FSyncopeWARefreshContextJob.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -52,7 +52,7 @@ public void execute(final JobExecutionContext jobExecutionContext) throws JobExe\n             LOG.debug(\"Attempting to refresh WA application context\");\n             if (!WARestClient.isReady()) {\n                 LOG.debug(\"Syncope client is not yet ready\");\n-                throw new RuntimeException(\"Syncope core is not yet ready to access requests\");\n+                throw new IllegalStateException(\"Syncope core is not yet ready to access requests\");\n             }\n             contextRefresher.refresh();\n             LOG.info(\"Refreshed application context to bootstrap property sources, etc...\");\n@@ -62,8 +62,7 @@ public void execute(final JobExecutionContext jobExecutionContext) throws JobExe\n             LOG.info(\"Generated SAML2 IdP metadata for {}\", document.getAppliesTo());\n \n             advertiseReady();\n-\n-        } catch (RuntimeException e) {\n+        } catch (Exception e) {\n             throw new JobExecutionException(\"While generating SAML2 IdP metadata\", e);\n         }\n     }"},{"sha":"6b481e11ce0f182933b634caac540e72446a3d4e","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/oidc/SyncopeWAOIDCJWKSGeneratorService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FSyncopeWAOIDCJWKSGeneratorService.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -58,7 +58,7 @@ public SyncopeWAOIDCJWKSGeneratorService(\n     @Override\n     public JsonWebKeySet store(final JsonWebKeySet jsonWebKeySet) throws Exception {\n         if (!WARestClient.isReady()) {\n-            throw new RuntimeException(\"Syncope core is not yet ready\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready\");\n         }\n         OIDCJWKSService service = waRestClient.getSyncopeClient().getService(OIDCJWKSService.class);\n         OIDCJWKSTO to = new OIDCJWKSTO();\n@@ -75,7 +75,7 @@ public Optional<Resource> find() {\n     @Override\n     public Resource generate() {\n         if (!WARestClient.isReady()) {\n-            throw new RuntimeException(\"Syncope core is not yet ready\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready\");\n         }\n \n         OIDCJWKSService service = waRestClient.getSyncopeClient().getService(OIDCJWKSService.class);\n@@ -95,7 +95,7 @@ public Resource generate() {\n             }\n         }\n         if (jwksTO == null) {\n-            throw new RuntimeException(\"Unable to determine OIDC JWKS resource\");\n+            throw new IllegalStateException(\"Unable to determine OIDC JWKS resource\");\n         }\n         return new ByteArrayResource(jwksTO.getJson().getBytes(StandardCharsets.UTF_8), \"OIDC JWKS\");\n     }"},{"sha":"a89068aa4848ffa1812d3498e70a871d0e50cded","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/saml/idp/metadata/RestfulSamlIdPMetadataGenerator.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataGenerator.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -83,19 +83,23 @@ protected SamlIdPMetadataDocument finalizeMetadataDocument(\n     }\n \n     @Override\n-    public Pair<String, String> buildSelfSignedEncryptionCert(final Optional<SamlRegisteredService> registeredService) {\n+    public Pair<String, String> buildSelfSignedEncryptionCert(final Optional<SamlRegisteredService> registeredService)\n+            throws Exception {\n+\n         return generateCertificateAndKey();\n     }\n \n     @Override\n-    public Pair<String, String> buildSelfSignedSigningCert(final Optional<SamlRegisteredService> registeredService) {\n+    public Pair<String, String> buildSelfSignedSigningCert(final Optional<SamlRegisteredService> registeredService)\n+            throws Exception {\n+\n         return generateCertificateAndKey();\n     }\n \n     private SyncopeClient getSyncopeClient() {\n         if (!WARestClient.isReady()) {\n             LOG.info(\"Syncope client is not yet ready\");\n-            throw new RuntimeException(\"Syncope core is not yet ready to access requests\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready to access requests\");\n         }\n         return restClient.getSyncopeClient();\n     }"},{"sha":"b66b2cade8d8b04b54a3bca18ddfc263619913f7","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/saml/idp/metadata/RestfulSamlIdPMetadataLocator.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsaml%2Fidp%2Fmetadata%2FRestfulSamlIdPMetadataLocator.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -20,10 +20,13 @@\n \n import com.github.benmanes.caffeine.cache.Cache;\n import java.nio.charset.StandardCharsets;\n+import java.util.Base64;\n+import java.util.Optional;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.SAML2IdPEntityTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.rest.api.service.SAML2IdPEntityService;\n import org.apache.syncope.wa.bootstrap.WARestClient;\n import org.apereo.cas.support.saml.idp.metadata.locator.AbstractSamlIdPMetadataLocator;\n import org.apereo.cas.support.saml.services.SamlRegisteredService;\n@@ -32,10 +35,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.Base64;\n-import java.util.Optional;\n-import org.apache.syncope.common.rest.api.service.SAML2IdPEntityService;\n-\n public class RestfulSamlIdPMetadataLocator extends AbstractSamlIdPMetadataLocator {\n \n     private static final Logger LOG = LoggerFactory.getLogger(RestfulSamlIdPMetadataLocator.class);\n@@ -89,7 +88,7 @@ public SamlIdPMetadataDocument fetchInternal(final Optional<SamlRegisteredServic\n             return null;\n         } catch (Exception e) {\n             if (e instanceof SyncopeClientException\n-                && ((SyncopeClientException) e).getType() == ClientExceptionType.NotFound) {\n+                    && ((SyncopeClientException) e).getType() == ClientExceptionType.NotFound) {\n                 LOG.info(e.getMessage());\n             } else {\n                 if (LOG.isDebugEnabled()) {\n@@ -125,7 +124,7 @@ private SAML2IdPEntityTO fetchFromCore(final Optional<SamlRegisteredService> reg\n     private SyncopeClient getSyncopeClient() {\n         if (!WARestClient.isReady()) {\n             LOG.info(\"Syncope client is not yet ready\");\n-            throw new RuntimeException(\"Syncope core is not yet ready to access requests\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready to access requests\");\n         }\n         return restClient.getSyncopeClient();\n     }"},{"sha":"8d42f04cbb5d71b764b4d70b08f2fa468fc282ab","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/surrogate/SyncopeWASurrogateAuthenticationService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsurrogate%2FSyncopeWASurrogateAuthenticationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsurrogate%2FSyncopeWASurrogateAuthenticationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fsurrogate%2FSyncopeWASurrogateAuthenticationService.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -64,7 +64,7 @@ public Collection<String> getEligibleAccountsForSurrogateToProxy(final String us\n \n     private ImpersonationService getImpersonationService() {\n         if (!WARestClient.isReady()) {\n-            throw new RuntimeException(\"Syncope core is not yet ready\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready\");\n         }\n         return waRestClient.getSyncopeClient().getService(ImpersonationService.class);\n     }"},{"sha":"9dae3d55eaaffe019b015410840fd73ebe18f2ec","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/u2f/SyncopeWAU2FDeviceRepository.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fu2f%2FSyncopeWAU2FDeviceRepository.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fu2f%2FSyncopeWAU2FDeviceRepository.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fu2f%2FSyncopeWAU2FDeviceRepository.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -148,7 +148,7 @@ public void removeAll() {\n \n     private U2FRegistrationService getU2FService() {\n         if (!WARestClient.isReady()) {\n-            throw new RuntimeException(\"Syncope core is not yet ready\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready\");\n         }\n         return waRestClient.getSyncopeClient().getService(U2FRegistrationService.class);\n     }"},{"sha":"e5fd732c218d481f5ae2df0708c108839689b8d7","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/webauthn/SyncopeWAWebAuthnCredentialRepository.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fwebauthn%2FSyncopeWAWebAuthnCredentialRepository.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8012bd539cf5d7fd536d98289c500680b5388a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fwebauthn%2FSyncopeWAWebAuthnCredentialRepository.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fwebauthn%2FSyncopeWAWebAuthnCredentialRepository.java?ref=8012bd539cf5d7fd536d98289c500680b5388a37","patch":"@@ -129,7 +129,7 @@ public Collection<CredentialRegistration> getRegistrationsByUsername(final Strin\n \n     private WebAuthnRegistrationService getService() {\n         if (!WARestClient.isReady()) {\n-            throw new RuntimeException(\"Syncope core is not yet ready\");\n+            throw new IllegalStateException(\"Syncope core is not yet ready\");\n         }\n         return waRestClient.getSyncopeClient().getService(WebAuthnRegistrationService.class);\n     }"}]}