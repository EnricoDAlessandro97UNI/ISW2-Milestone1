{"sha":"bdd102378669407fca7885e0b0e39c1bf3b7205e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJkZDEwMjM3ODY2OTQwN2ZjYTc4ODVlMGIwZTM5YzFiZjNiNzIwNWU=","commit":{"author":{"name":"DimaAy","email":"dima.ayash@tirasa.net","date":"2020-02-14T08:32:26Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2020-02-14T09:31:10Z"},"message":"[SYNCOPE-1535] Provision Sorter Implementation (#166)\n\n* [SYNCOPE-1535] Provision Sorter Implementation\n\n* [SYNCOPE-1535] resolve sort\n\n* solve checkStyle","tree":{"sha":"f6f2e50e81c73ae6d7b6a3730327b642c5a9d61b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f6f2e50e81c73ae6d7b6a3730327b642c5a9d61b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bdd102378669407fca7885e0b0e39c1bf3b7205e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bdd102378669407fca7885e0b0e39c1bf3b7205e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bdd102378669407fca7885e0b0e39c1bf3b7205e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bdd102378669407fca7885e0b0e39c1bf3b7205e/comments","author":{"login":"DimaAy","id":19169906,"node_id":"MDQ6VXNlcjE5MTY5OTA2","avatar_url":"https://avatars.githubusercontent.com/u/19169906?v=4","gravatar_id":"","url":"https://api.github.com/users/DimaAy","html_url":"https://github.com/DimaAy","followers_url":"https://api.github.com/users/DimaAy/followers","following_url":"https://api.github.com/users/DimaAy/following{/other_user}","gists_url":"https://api.github.com/users/DimaAy/gists{/gist_id}","starred_url":"https://api.github.com/users/DimaAy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimaAy/subscriptions","organizations_url":"https://api.github.com/users/DimaAy/orgs","repos_url":"https://api.github.com/users/DimaAy/repos","events_url":"https://api.github.com/users/DimaAy/events{/privacy}","received_events_url":"https://api.github.com/users/DimaAy/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f057013572f20bccc9732aa0bdb4ca737bb6c55b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f057013572f20bccc9732aa0bdb4ca737bb6c55b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f057013572f20bccc9732aa0bdb4ca737bb6c55b"}],"stats":{"total":378,"additions":296,"deletions":82},"files":[{"sha":"174c813940e32996e9c37c68075431ff2d5ae0de","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMImplementationInfoProvider.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -68,7 +68,7 @@ public List<String> getClasses(final ImplementationTO implementation, final View\n \n     @Override\n     public String getGroovyTemplateClassName(final String implementationType) {\n-        String templateClassName = null;\n+        String templateClassName;\n \n         switch (implementationType) {\n             case IdMImplementationType.ITEM_TRANSFORMER:\n@@ -99,6 +99,10 @@ public String getGroovyTemplateClassName(final String implementationType) {\n                 templateClassName = \"MyPushCorrelationRule\";\n                 break;\n \n+            case IdMImplementationType.PROVISION_SORTER:\n+                templateClassName = \"MyProvisionSorter\";                \n+                break;\n+                \n             default:\n                 templateClassName = super.getGroovyTemplateClassName(implementationType);\n         }\n@@ -108,7 +112,7 @@ public String getGroovyTemplateClassName(final String implementationType) {\n \n     @Override\n     public Class<?> getClass(final String implementationType, final String name) {\n-        Class<?> clazz = null;\n+        Class<?> clazz;\n         switch (implementationType) {\n             case IdMImplementationType.PULL_CORRELATION_RULE:\n                 clazz = lookup.getPullCorrelationRuleConfs().get(name);"},{"sha":"2023c99b766853ae4e1665da79a85365cf20396b","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -56,6 +56,17 @@ protected List<String> load() {\n         }\n     };\n \n+    private final IModel<List<String>> provisionSorters = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 4659376149825914247L;\n+\n+        @Override\n+        protected List<String> load() {\n+            return ImplementationRestClient.list(IdMImplementationType.PROVISION_SORTER).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+        }\n+    };\n+\n     public ResourceDetailsPanel(final ResourceTO resourceTO, final boolean createFlag) {\n         super();\n         setOutputMarkupId(true);\n@@ -102,6 +113,11 @@ public ResourceDetailsPanel(final ResourceTO resourceTO, final boolean createFla\n                 false).\n                 setChoices(Arrays.stream(TraceLevel.values()).collect(Collectors.toList())).setNullValid(false));\n \n+        container.add(new AjaxDropDownChoicePanel<>(\n+                \"provisionSorter\", \"provisionSorter\",\n+                new PropertyModel<>(resourceTO, \"provisionSorter\"), false).\n+                setChoices(provisionSorters));\n+\n         container.add(new AjaxDropDownChoicePanel<>(\n                 \"updateTraceLevel\",\n                 new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").getObject(),"},{"sha":"6dd792cc6d03439d73cfecba82cf8bb1970a3bf8","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.html?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -43,6 +43,10 @@\n         <span wicket:id=\"propagationActions\">[propagationActions]</span>\n       </div>\n \n+      <div class=\"form-group\">\n+        <span wicket:id=\"provisionSorter\">[provisionSorter]</span>\n+      </div>\n+\n       <div class=\"form-group\">\n         <span wicket:id=\"createTraceLevel\">[createTraceLevel]</span>\n       </div>"},{"sha":"004dd025628d04de55aea63c8d55299bd1dd63d9","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -20,6 +20,7 @@ enforceMandatoryCondition=Enforce mandatory condition\n propagationPriority=Propagation priority\n randomPwdIfNotProvided=Generate random passwords when missing\n propagationActions=Propagation Actions\n+provisionSorter=Provision Sorter\n createTraceLevel=Propagation: create trace level\n updateTraceLevel=Propagation: update trace level\n deleteTraceLevel=Propagation: delete trace level"},{"sha":"587a5f2a7ebb7cbc588550b846c345b8cd149444","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_fr_CA.properties","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_fr_CA.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -17,10 +17,11 @@\n name=Nom de la ressource\n connector=Raccordement\n enforceMandatoryCondition=Application de la condition obligatoire\n-propagationPriority=PrioritÔøΩ de propagation\n-randomPwdIfNotProvided=GÔøΩnÔøΩrer des mots de passe alÔøΩatoires si manquants.\n+propagationPriority=Priorit\\u00e9 de propagation\n+randomPwdIfNotProvided=G\\u00e9n\\u00e9rer des mots de passe al\\u00e9atoires si manquants.\n propagationActions=Actions de propagation\n-createTraceLevel=Propagation : crÔøΩation d'un niveau de trace\n-updateTraceLevel=Propagation : mise ÔøΩ jour du niveau de trace\n+provisionSorter=Trieur de provision\n+createTraceLevel=Propagation : cr\\u00e9ation d'un niveau de trace\n+updateTraceLevel=Propagation : mise \\u00e0 jour du niveau de trace\n deleteTraceLevel=Propagation : effacer le niveau de trace\n provisioningTraceLevel=Push/pull le niveau de trace"},{"sha":"3d69ca0e5fca8494d2efedeb9655cbad964c27c5","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_it.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -20,6 +20,7 @@ enforceMandatoryCondition=Abilita mandatory condition\n propagationPriority=Priorit\\u00e0 in propagazione\n randomPwdIfNotProvided=Genera password casuali se mancanti\n propagationActions=Azioni di Propagazione\n+provisionSorter=Provision Sorter\n createTraceLevel=Propagazione: tracciamento creazione\n updateTraceLevel=Propagazione: tracciamento aggiornamento\n deleteTraceLevel=Propagazione: tracciamento rimozione"},{"sha":"477b0e8167e8060d2e80e97d1a64b86659b6ff76","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ja.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -20,6 +20,7 @@ enforceMandatoryCondition=\\u5fc5\\u9808\\u6761\\u4ef6\\u306b\\u5f93\\u3046\n propagationPriority=\\u4f1d\\u64ad\\u512a\\u5148\\u5ea6\n randomPwdIfNotProvided=\\u898b\\u3064\\u304b\\u3089\\u306a\\u3044\\u5834\\u5408\\u306f\\u30e9\\u30f3\\u30c0\\u30e0\\u306a\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u3092\\u751f\\u6210\n propagationActions=\\u4f1d\\u64ad\\u30a2\\u30af\\u30b7\\u30e7\\u30f3\n+provisionSorter=\\u30bd\\u30fc\\u30bf\\u30fc\\u306e\\u30d7\\u30ed\\u30d3\\u30b8\\u30e7\\u30cb\\u30f3\\u30b0\n createTraceLevel=\\u4f1d\\u64ad: \\u4f5c\\u6210\\u30c8\\u30ec\\u30fc\\u30b9\\u30ec\\u30d9\\u30eb\n updateTraceLevel=\\u4f1d\\u64ad: \\u66f4\\u65b0\\u30c8\\u30ec\\u30fc\\u30b9\\u30ec\\u30d9\\u30eb\n deleteTraceLevel=\\u4f1d\\u64ad: \\u524a\\u9664\\u30c8\\u30ec\\u30fc\\u30b9\\u30ec\\u30d9\\u30eb"},{"sha":"79ac8ed1f34a584474e0b10ab0feac985a5c88d7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_pt_BR.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -20,6 +20,7 @@ enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver\n propagationActions=A\\u00e7\\u00f5es de Propaga\\u00e7\\u00e3o\n+provisionSorter=Classificador de Provis\\u00f5es\n createTraceLevel=Propagation: create trace level\n updateTraceLevel=Propagation: update trace level\n deleteTraceLevel=Propagation: delete trace level"},{"sha":"c2ef730c0b1781e7e25637da949de22221784e2b","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel_ru.properties?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -21,6 +21,7 @@ enforceMandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\n propagationPriority=\\u041f\\u0440\\u0438\\u043e\\u0440\\u0438\\u0442\\u0435\\u0442 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439\n randomPwdIfNotProvided=\\u0421\\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0441\\u043b\\u0443\\u0447\\u0430\\u0439\\u043d\\u044b\\u0439 \\u043f\\u0430\\u0440\\u043e\\u043b\\u044c, \\u0435\\u0441\\u043b\\u0438 \\u043e\\u043d \\u043d\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043d\n propagationActions=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u044f\\u0435\\u043c\\u044b\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+provisionSorter=\\u0421\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u0449\\u0438\\u043a \\u043f\\u0440\\u043e\\u0432\\u0438\\u0437\\u0438\\u0438\n createTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044e\n updateTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044e\n deleteTraceLevel=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439: \\u0443\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u043f\\u043e \\u0443\\u0434\\u0430\\u043b\\u0435\\u043d\\u0438\\u044e"},{"sha":"c59a91ce14f6f46c891f17edc97f95c1e439fee7","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyProvisionSorter.groovy","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyProvisionSorter.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyProvisionSorter.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyProvisionSorter.groovy?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -0,0 +1,33 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.ProvisionSorter\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision\n+\n+\n+@CompileStatic\n+class MyProvisionSorter implements ProvisionSorter {\n+ \n+  @Override\n+  int compare(Provision provision1, Provision provision2) {\n+    return 0;\n+  }\n+  \n+}\n\\ No newline at end of file"},{"sha":"20a86283fcc615c04fdeb8844d4ef0f82620e0da","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -80,6 +80,8 @@ public class ResourceTO implements EntityTO {\n \n     private String pushPolicy;\n \n+    private String provisionSorter;\n+\n     private final List<ConnConfProperty> confOverride = new ArrayList<>();\n \n     private boolean overrideCapabilities = false;\n@@ -195,6 +197,14 @@ public void setPushPolicy(final String pushPolicy) {\n         this.pushPolicy = pushPolicy;\n     }\n \n+    public String getProvisionSorter() {\n+        return provisionSorter;\n+    }\n+\n+    public void setProvisionSorter(final String provisionSorter) {\n+        this.provisionSorter = provisionSorter;\n+    }\n+\n     @JsonIgnore\n     public Optional<ProvisionTO> getProvision(final String anyType) {\n         return provisions.stream().filter("},{"sha":"a3aff0ad000a4af08db87c56b3a9d5b8e912c7b8","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/types/IdMImplementationType.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMImplementationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMImplementationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMImplementationType.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -37,14 +37,17 @@ public final class IdMImplementationType {\n \n     public static final String PUSH_CORRELATION_RULE = \"PUSH_CORRELATION_RULE\";\n \n+    public static final String PROVISION_SORTER = \"PROVISION_SORTER\";\n+\n     private static final Map<String, String> VALUES = Map.ofEntries(\n             Pair.of(ITEM_TRANSFORMER, \"org.apache.syncope.core.spring.security.JWTSSOProvider\"),\n             Pair.of(RECON_FILTER_BUILDER, \"org.apache.syncope.core.persistence.api.dao.Reportlet\"),\n             Pair.of(PROPAGATION_ACTIONS, \"org.apache.syncope.core.persistence.api.dao.AccountRule\"),\n             Pair.of(PULL_ACTIONS, \"org.apache.syncope.core.persistence.api.dao.PasswordRule\"),\n             Pair.of(PUSH_ACTIONS, \"org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate\"),\n             Pair.of(PULL_CORRELATION_RULE, \"org.apache.syncope.core.provisioning.api.LogicActions\"),\n-            Pair.of(PUSH_CORRELATION_RULE, \"org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\"));\n+            Pair.of(PUSH_CORRELATION_RULE, \"org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\"),\n+            Pair.of(PROVISION_SORTER, \"org.apache.syncope.core.provisioning.api.ProvisionSorter\"));\n \n     public static Map<String, String> values() {\n         return VALUES;"},{"sha":"5baf2e5dafed1efbf740a1605a1a334f957636c1","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -53,6 +53,7 @@\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n import org.apache.syncope.core.persistence.api.dao.PushCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.PushCorrelationRuleConfClass;\n+import org.apache.syncope.core.provisioning.api.ProvisionSorter;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n import org.apache.syncope.core.provisioning.java.data.JEXLItemTransformerImpl;\n@@ -238,6 +239,10 @@ public void load() {\n                     classNames.get(IdRepoImplementationType.AUDIT_APPENDER).add(clazz.getName());\n                     auditAppenderClasses.add(clazz);\n                 }\n+\n+                if (ProvisionSorter.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n+                    classNames.get(IdMImplementationType.PROVISION_SORTER).add(bd.getBeanClassName());\n+                }\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }"},{"sha":"1bb44d978c4cd296c18ed7fed05837cefa00943b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -63,6 +63,10 @@ public interface ExternalResource extends ProvidedKeyEntity {\n     void setPullPolicy(PullPolicy pullPolicy);\n \n     PushPolicy getPushPolicy();\n+    \n+    Implementation getProvisionSorter();\n+\n+    void setProvisionSorter(Implementation provisionSorter);\n \n     void setPushPolicy(PushPolicy pushPolicy);\n "},{"sha":"ef97aa6ab1ad790c8dfce5fa24626cd2e33e4245","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -136,6 +136,9 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAPushPolicy pushPolicy;\n \n+    @ManyToOne\n+    private JPAImplementation provisionSorter;\n+\n     /**\n      * Configuration properties that are overridden from the connector instance.\n      */\n@@ -329,6 +332,18 @@ public void setPushPolicy(final PushPolicy pushPolicy) {\n         this.pushPolicy = (JPAPushPolicy) pushPolicy;\n     }\n \n+    @Override\n+    public Implementation getProvisionSorter() {\n+        return provisionSorter;\n+    }\n+\n+    @Override\n+    public void setProvisionSorter(final Implementation provisionSorter) {\n+        checkType(provisionSorter, JPAImplementation.class);\n+        checkImplementationType(provisionSorter, IdMImplementationType.PROVISION_SORTER);\n+        this.provisionSorter = (JPAImplementation) provisionSorter;\n+    }\n+\n     @Override\n     public Set<ConnConfProperty> getConfOverride() {\n         Set<ConnConfProperty> confOverride = new HashSet<>();"},{"sha":"ad9d3a18c12446ca707ddc7dc79e9acdc56fdc25","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ProvisionSorter.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisionSorter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisionSorter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisionSorter.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api;\n+\n+import java.util.Comparator;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+\n+public interface ProvisionSorter extends Comparator<Provision> {\n+\n+}"},{"sha":"0acd40d7cb4f03c6e697aea77104ec7acd9a7bbf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultProvisionSorter.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultProvisionSorter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultProvisionSorter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultProvisionSorter.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import org.apache.commons.lang3.ObjectUtils;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.ProvisionSorter;\n+\n+public class DefaultProvisionSorter implements ProvisionSorter {\n+\n+    @Override\n+    public int compare(final Provision provision1, final Provision provision2) {\n+        if (provision1.getAnyType().getKind() == AnyTypeKind.USER) {\n+            return -1;\n+        }\n+        if (provision2.getAnyType().getKind() == AnyTypeKind.USER) {\n+            return 1;\n+        }\n+        if (provision1.getAnyType().getKind() == AnyTypeKind.GROUP) {\n+            return -1;\n+        }\n+        if (provision2.getAnyType().getKind() == AnyTypeKind.GROUP) {\n+            return 1;\n+        }\n+        return ObjectUtils.compare(provision1.getAnyType().getKey(), provision2.getAnyType().getKey());\n+    }\n+\n+}"},{"sha":"0cfe2ff1b5001e7655bf35a10e8c55b9f5f22462","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ImplementationDataBinderImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.PushCorrelationRule;\n+import org.apache.syncope.core.provisioning.api.ProvisionSorter;\n import org.apache.syncope.core.provisioning.api.notification.RecipientsProvider;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n@@ -144,6 +145,10 @@ public void update(final Implementation implementation, final ImplementationTO i\n                     base = RecipientsProvider.class;\n                     break;\n \n+                case IdMImplementationType.PROVISION_SORTER:\n+                    base = ProvisionSorter.class;\n+                    break;\n+\n                 default:\n             }\n "},{"sha":"1df550eb86917d2afda76c5ae6807ad4256920de","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -358,6 +358,18 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n         resource.setPushPolicy(resourceTO.getPushPolicy() == null\n                 ? null : (PushPolicy) policyDAO.find(resourceTO.getPushPolicy()));\n \n+        if (resourceTO.getProvisionSorter() == null) {\n+            resource.setProvisionSorter(null);\n+        } else {\n+            Implementation provisionSorter = implementationDAO.find(resourceTO.getProvisionSorter());\n+            if (provisionSorter == null) {\n+                LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \" {}, ignoring...\",\n+                        resourceTO.getProvisionSorter());\n+            } else {\n+                resource.setProvisionSorter(provisionSorter);\n+            }\n+        }\n+\n         resource.setConfOverride(new HashSet<>(resourceTO.getConfOverride()));\n \n         resource.setOverrideCapabilities(resourceTO.isOverrideCapabilities());\n@@ -675,6 +687,9 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setPushPolicy(resource.getPushPolicy() == null\n                 ? null : resource.getPushPolicy().getKey());\n \n+        resourceTO.setProvisionSorter(resource.getProvisionSorter() == null\n+                ? null : resource.getProvisionSorter().getKey());\n+\n         resourceTO.getConfOverride().addAll(resource.getConfOverride());\n         Collections.sort(resourceTO.getConfOverride());\n "},{"sha":"ded6b13ca205c9db0f9a117da4690161cf075337","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":84,"deletions":71,"changes":155,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -25,6 +25,7 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n@@ -49,6 +50,7 @@\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.ProvisionSorter;\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n@@ -62,6 +64,7 @@\n import org.identityconnectors.framework.common.objects.OperationOptions;\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n+import org.apache.syncope.core.provisioning.java.DefaultProvisionSorter;\n import org.apache.syncope.core.spring.ImplementationManager;\n \n public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> implements SyncopePullExecutor {\n@@ -270,89 +273,99 @@ protected String doExecuteProvisioning(\n             }\n         }\n \n+        ProvisionSorter provisionSorter = new DefaultProvisionSorter();\n+        if (pullTask.getResource().getProvisionSorter() != null) {\n+            try {\n+                provisionSorter = ImplementationManager.build(pullTask.getResource().getProvisionSorter());\n+            } catch (Exception e) {\n+                LOG.error(\"While building {}\", pullTask.getResource().getProvisionSorter(), e);\n+            }\n+        }\n         // ...then provisions for any types\n         SyncopePullResultHandler handler;\n         GroupPullResultHandler ghandler = buildGroupHandler();\n-        for (Provision provision : pullTask.getResource().getProvisions()) {\n-            if (provision.getMapping() != null) {\n-                status.set(\"Pulling \" + provision.getObjectClass().getObjectClassValue());\n+        for (Provision provision : pullTask.getResource().getProvisions().stream().\n+                filter(provision -> provision.getMapping() != null).sorted(provisionSorter).\n+                collect(Collectors.toList())) {\n+\n+            status.set(\"Pulling \" + provision.getObjectClass().getObjectClassValue());\n \n-                switch (provision.getAnyType().getKind()) {\n-                    case USER:\n-                        handler = buildUserHandler();\n+            switch (provision.getAnyType().getKind()) {\n+                case USER:\n+                    handler = buildUserHandler();\n+                    break;\n+\n+                case GROUP:\n+                    handler = ghandler;\n+                    break;\n+\n+                case ANY_OBJECT:\n+                default:\n+                    handler = buildAnyObjectHandler();\n+            }\n+            handler.setProfile(profile);\n+            handler.setPullExecutor(this);\n+\n+            try {\n+                Set<String> moreAttrsToGet = new HashSet<>();\n+                actions.forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, provision)));\n+\n+                Stream<? extends Item> mapItems = Stream.concat(\n+                        MappingUtils.getPullItems(provision.getMapping().getItems().stream()),\n+                        virSchemaDAO.findByProvision(provision).stream().map(VirSchema::asLinkingMappingItem));\n+\n+                OperationOptions options = MappingUtils.buildOperationOptions(\n+                        mapItems, moreAttrsToGet.toArray(new String[0]));\n+\n+                switch (pullTask.getPullMode()) {\n+                    case INCREMENTAL:\n+                        if (!dryRun) {\n+                            latestSyncTokens.put(provision.getObjectClass(), provision.getSyncToken());\n+                        }\n+\n+                        connector.sync(\n+                                provision.getObjectClass(),\n+                                provision.getSyncToken(),\n+                                handler,\n+                                options);\n+\n+                        if (!dryRun) {\n+                            provision.setSyncToken(latestSyncTokens.get(provision.getObjectClass()));\n+                            resourceDAO.save(provision.getResource());\n+                        }\n                         break;\n \n-                    case GROUP:\n-                        handler = ghandler;\n+                    case FILTERED_RECONCILIATION:\n+                        connector.filteredReconciliation(\n+                                provision.getObjectClass(),\n+                                ImplementationManager.build(pullTask.getReconFilterBuilder()),\n+                                handler,\n+                                options);\n                         break;\n \n-                    case ANY_OBJECT:\n+                    case FULL_RECONCILIATION:\n                     default:\n-                        handler = buildAnyObjectHandler();\n+                        connector.fullReconciliation(\n+                                provision.getObjectClass(),\n+                                handler,\n+                                options);\n+                        break;\n                 }\n-                handler.setProfile(profile);\n-                handler.setPullExecutor(this);\n-\n-                try {\n-                    Set<String> moreAttrsToGet = new HashSet<>();\n-                    actions.forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, provision)));\n-\n-                    Stream<? extends Item> mapItems = Stream.concat(\n-                            MappingUtils.getPullItems(provision.getMapping().getItems().stream()),\n-                            virSchemaDAO.findByProvision(provision).stream().map(VirSchema::asLinkingMappingItem));\n-\n-                    OperationOptions options = MappingUtils.buildOperationOptions(\n-                            mapItems, moreAttrsToGet.toArray(new String[0]));\n-\n-                    switch (pullTask.getPullMode()) {\n-                        case INCREMENTAL:\n-                            if (!dryRun) {\n-                                latestSyncTokens.put(provision.getObjectClass(), provision.getSyncToken());\n-                            }\n-\n-                            connector.sync(\n-                                    provision.getObjectClass(),\n-                                    provision.getSyncToken(),\n-                                    handler,\n-                                    options);\n-\n-                            if (!dryRun) {\n-                                provision.setSyncToken(latestSyncTokens.get(provision.getObjectClass()));\n-                                resourceDAO.save(provision.getResource());\n-                            }\n-                            break;\n-\n-                        case FILTERED_RECONCILIATION:\n-                            connector.filteredReconciliation(\n-                                    provision.getObjectClass(),\n-                                    ImplementationManager.build(pullTask.getReconFilterBuilder()),\n-                                    handler,\n-                                    options);\n-                            break;\n-\n-                        case FULL_RECONCILIATION:\n-                        default:\n-                            connector.fullReconciliation(\n-                                    provision.getObjectClass(),\n-                                    handler,\n-                                    options);\n-                            break;\n-                    }\n-\n-                    if (provision.getUidOnCreate() != null) {\n-                        AnyUtils anyUtils = anyUtilsFactory.getInstance(provision.getAnyType().getKind());\n-                        profile.getResults().stream().\n-                                filter(result -> result.getUidValue() != null && result.getKey() != null\n-                                && result.getOperation() == ResourceOperation.CREATE\n-                                && result.getAnyType().equals(provision.getAnyType().getKey())).\n-                                forEach(result -> {\n-                                    anyUtils.addAttr(result.getKey(), provision.getUidOnCreate(), result.getUidValue());\n-                                });\n-                    }\n-                } catch (Throwable t) {\n-                    throw new JobExecutionException(\"While pulling from connector\", t);\n+\n+                if (provision.getUidOnCreate() != null) {\n+                    AnyUtils anyUtils = anyUtilsFactory.getInstance(provision.getAnyType().getKind());\n+                    profile.getResults().stream().\n+                            filter(result -> result.getUidValue() != null && result.getKey() != null\n+                            && result.getOperation() == ResourceOperation.CREATE\n+                            && result.getAnyType().equals(provision.getAnyType().getKey())).\n+                            forEach(result -> {\n+                                anyUtils.addAttr(result.getKey(), provision.getUidOnCreate(), result.getUidValue());\n+                            });\n                 }\n+            } catch (Throwable t) {\n+                throw new JobExecutionException(\"While pulling from connector\", t);\n             }\n+\n         }\n         try {\n             setGroupOwners(ghandler);"},{"sha":"40834afa4c8558b32ec405db90255827944997e9","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -62,6 +62,7 @@\n import org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPullCorrelationRule;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPushCorrelationRule;\n+import org.apache.syncope.core.provisioning.java.DefaultProvisionSorter;\n import org.apache.syncope.core.provisioning.java.propagation.AzurePropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.DBPasswordPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.GoogleAppsPropagationActions;\n@@ -152,6 +153,9 @@ public class ITImplementationLookup implements ImplementationLookup {\n     private static final Set<Class<?>> AUDITAPPENDER_CLASSES = new HashSet<>(\n             List.of(TestFileAuditAppender.class, TestFileRewriteAuditAppender.class));\n \n+    private static final Set<Class<?>> PROVISION_SORTER_CLASSES = new HashSet<>(\n+            List.of(DefaultProvisionSorter.class));\n+\n     private static final Map<String, Set<String>> CLASS_NAMES = new HashMap<String, Set<String>>() {\n \n         private static final long serialVersionUID = 3109256773218160485L;\n@@ -232,6 +236,10 @@ public class ITImplementationLookup implements ImplementationLookup {\n             classNames = ITImplementationLookup.AUDITAPPENDER_CLASSES.stream().\n                     map(Class::getName).collect(Collectors.toSet());\n             put(IdRepoImplementationType.AUDIT_APPENDER, classNames);\n+\n+            classNames = ITImplementationLookup.PROVISION_SORTER_CLASSES.stream().\n+                    map(Class::getName).collect(Collectors.toSet());\n+            put(IdMImplementationType.PROVISION_SORTER, classNames);\n         }\n     };\n "},{"sha":"9e4096d88ec0f0f21ff64c0f52180b81f9ce7e33","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/view/ResourceExplorerTopComponent.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdd102378669407fca7885e0b0e39c1bf3b7205e/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdd102378669407fca7885e0b0e39c1bf3b7205e/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java?ref=bdd102378669407fca7885e0b0e39c1bf3b7205e","patch":"@@ -183,7 +183,7 @@ private void resourceExplorerTreeMouseClicked(final java.awt.event.MouseEvent ev\n                     getLastSelectedPathComponent();\n             DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) selectedNode.getParent();\n             String parentNodeName = Optional.ofNullable(parentNode)\n-                .map(node -> String.valueOf(node.getUserObject())).orElse(null);\n+                    .map(node -> String.valueOf(node.getUserObject())).orElse(null);\n             if (selectedNode.isLeaf() && StringUtils.isNotBlank(parentNodeName)) {\n                 String leafNodeName = (String) selectedNode.getUserObject();\n                 DefaultMutableTreeNode grandParentNode = (DefaultMutableTreeNode) parentNode.getParent();\n@@ -298,7 +298,7 @@ static void readProperties(final java.util.Properties p) {\n     private void addMailTemplates() {\n         List<MailTemplateTO> mailTemplateList = mailTemplateManagerService.list();\n         mailTemplateList\n-            .forEach(mailTemplate -> this.mailTemplates.add(new DefaultMutableTreeNode(mailTemplate.getKey())));\n+                .forEach(mailTemplate -> this.mailTemplates.add(new DefaultMutableTreeNode(mailTemplate.getKey())));\n         treeModel.reload();\n     }\n \n@@ -446,6 +446,10 @@ private void folderRightClickAction(final MouseEvent evt, final DefaultMutableTr\n                                 templateClassName = \"MyRecipientsProvider\";\n                                 break;\n \n+                            case IdMImplementationType.PROVISION_SORTER:\n+                                templateClassName = \"MyProvisionSorter\";\n+                                break;\n+\n                             default:\n                         }\n                         newNode.setBody(IOUtils.toString(getClass().getResourceAsStream(\n@@ -719,8 +723,6 @@ protected void okButtonActionPerformed(final ActionEvent evt) {\n                 componentClosed();\n                 componentOpened();\n             }\n-\n         };\n     }\n-\n }"}]}