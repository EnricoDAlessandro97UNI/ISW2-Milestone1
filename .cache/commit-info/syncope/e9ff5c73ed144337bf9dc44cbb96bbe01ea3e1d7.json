{"sha":"e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU5ZmY1YzczZWQxNDQzMzdiZjlkYzQ0Y2JiOTZiYmUwMWVhM2UxZDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-25T11:25:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-25T11:25:46Z"},"message":"[SYNCOPE-735] Merge from 1_2_X","tree":{"sha":"2c551fee8cc5d1c7eb246eef448e1138d1f4ae8d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2c551fee8cc5d1c7eb246eef448e1138d1f4ae8d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0f938e72d6723517fe451010ec3a2e398b3e4ecc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f938e72d6723517fe451010ec3a2e398b3e4ecc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f938e72d6723517fe451010ec3a2e398b3e4ecc"},{"sha":"560fc4df106825c80520f941beb2e0e601cb056f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/560fc4df106825c80520f941beb2e0e601cb056f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/560fc4df106825c80520f941beb2e0e601cb056f"}],"stats":{"total":59,"additions":56,"deletions":3},"files":[{"sha":"b26c9cd75d744ae8e89e376fc24cdb4ceb1ee24f","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":50,"deletions":3,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","patch":"@@ -38,7 +38,6 @@\n import org.activiti.editor.constants.ModelDataJsonConstants;\n import org.activiti.editor.language.json.converter.BpmnJsonConverter;\n import org.activiti.engine.ActivitiException;\n-import org.activiti.engine.ProcessEngine;\n import org.activiti.engine.form.FormProperty;\n import org.activiti.engine.form.FormType;\n import org.activiti.engine.form.TaskFormData;\n@@ -71,10 +70,12 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n+import org.apache.syncope.core.workflow.activiti.spring.DomainProcessEngine;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.workflow.java.AbstractUserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -128,7 +129,7 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     protected String adminUser;\n \n     @Autowired\n-    protected ProcessEngine engine;\n+    protected DomainProcessEngine engine;\n \n     @Autowired\n     protected UserDataBinder userDataBinder;\n@@ -193,8 +194,42 @@ protected Set<String> getPerformedTasks(final User user) {\n         return result;\n     }\n \n+    protected void cleanupHistory(final User user) {\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(engine.getDataSource());\n+\n+        List<String> taskIds = jdbcTemplate.queryForList(\n+                \"SELECT TASK_ID_ FROM ACT_HI_VARINST WHERE NAME_='\" + TASK_IS_FORM\n+                + \"' AND LONG_=1 AND PROC_INST_ID_='\" + user.getWorkflowId() + \"'\", String.class);\n+\n+        StringBuilder update = new StringBuilder();\n+\n+        update.append(\"DELETE FROM ACT_HI_VARINST WHERE PROC_INST_ID_='\").append(user.getWorkflowId()).append(\"' \");\n+        for (String taskId : taskIds) {\n+            update.append(\"AND TASK_ID_<>'\").append(taskId).append(\"' \");\n+        }\n+        jdbcTemplate.execute(update.toString());\n+\n+        update.setLength(0);\n+        update.append(\"DELETE FROM ACT_HI_TASKINST WHERE PROC_INST_ID_='\").append(user.getWorkflowId()).append(\"' \");\n+        for (String taskId : taskIds) {\n+            update.append(\"AND ID_<>'\").append(taskId).append(\"' \");\n+        }\n+        jdbcTemplate.execute(update.toString());\n+\n+        update.setLength(0);\n+        update.append(\"DELETE FROM ACT_HI_ACTINST WHERE PROC_INST_ID_='\").append(user.getWorkflowId()).append(\"' \");\n+        for (String taskId : taskIds) {\n+            update.append(\"AND TASK_ID_<>'\").append(taskId).append(\"' \");\n+        }\n+        jdbcTemplate.execute(update.toString());\n+    }\n+\n     /**\n      * Saves resources to be propagated and password for later - after form submission - propagation.\n+     *\n+     * @param user user\n+     * @param password pasword\n+     * @param propByRes current propagation actions against resources\n      */\n     protected void saveForFormSubmit(final User user, final String password, final PropagationByResource propByRes) {\n         String formTaskId = getFormTask(user);\n@@ -268,8 +303,12 @@ public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boo\n \n         saveForFormSubmit(user, userTO.getPassword(), propByRes);\n \n+        Set<String> tasks = getPerformedTasks(user);\n+\n+        cleanupHistory(user);\n+\n         return new WorkflowResult<Pair<Long, Boolean>>(\n-                new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, getPerformedTasks(user));\n+                new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, tasks);\n     }\n \n     protected Set<String> doExecuteTask(final User user, final String task, final Map<String, Object> moreVariables) {\n@@ -306,6 +345,9 @@ protected Set<String> doExecuteTask(final User user, final String task, final Ma\n         Set<String> postTasks = getPerformedTasks(user);\n         postTasks.removeAll(preTasks);\n         postTasks.add(task);\n+\n+        cleanupHistory(user);\n+\n         return postTasks;\n     }\n \n@@ -760,6 +802,9 @@ protected Pair<Task, TaskFormData> checkTask(final String taskId, final String a\n         Task task;\n         try {\n             task = engine.getTaskService().createTaskQuery().taskId(taskId).singleResult();\n+            if (task == null) {\n+                throw new ActivitiException(\"NULL result\");\n+            }\n         } catch (ActivitiException e) {\n             throw new NotFoundException(\"Activiti Task \" + taskId, e);\n         }\n@@ -861,6 +906,8 @@ public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n             }\n         }\n \n+        cleanupHistory(user);\n+\n         return new WorkflowResult<>(userPatch, propByRes, postTasks);\n     }\n }"},{"sha":"f851e080bd9eb37e621e093a4dffcb6d59335a71","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/spring/DomainProcessEngine.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Fspring%2FDomainProcessEngine.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Fspring%2FDomainProcessEngine.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Fspring%2FDomainProcessEngine.java?ref=e9ff5c73ed144337bf9dc44cbb96bbe01ea3e1d7","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collections;\n import java.util.Map;\n+import javax.sql.DataSource;\n import org.activiti.engine.DynamicBpmnService;\n import org.activiti.engine.FormService;\n import org.activiti.engine.HistoryService;\n@@ -30,6 +31,7 @@\n import org.activiti.engine.RepositoryService;\n import org.activiti.engine.RuntimeService;\n import org.activiti.engine.TaskService;\n+import org.activiti.engine.impl.ProcessEngineImpl;\n import org.apache.syncope.core.misc.security.AuthContextUtils;\n \n /**\n@@ -105,4 +107,8 @@ public DynamicBpmnService getDynamicBpmnService() {\n         return engines.get(AuthContextUtils.getDomain()).getDynamicBpmnService();\n     }\n \n+    public DataSource getDataSource() {\n+        ProcessEngineImpl engine = (ProcessEngineImpl) engines.get(AuthContextUtils.getDomain());\n+        return engine.getProcessEngineConfiguration().getDataSource();\n+    }\n }"}]}