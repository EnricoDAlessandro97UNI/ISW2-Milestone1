{"sha":"ae9f6c8cfd6603d34860811833b6b043b3143f46","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFlOWY2YzhjZmQ2NjAzZDM0ODYwODExODMzYjZiMDQzYjMxNDNmNDY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2020-06-04T13:48:11Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-06-04T13:48:11Z"},"message":"[SYNCOPE-1565] Remove JAXB in favor of Jackson Dataformat XML + enabling Travis CI f… (#192)","tree":{"sha":"3f665e6570f2666053918b99e82a46980ab52814","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3f665e6570f2666053918b99e82a46980ab52814"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ae9f6c8cfd6603d34860811833b6b043b3143f46","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2PubCRBK7hj4Ov3rIwAAdHIIAJDJKEdaY6OKjTBWXAP69XEc\nEEFv5lcIMRDBE4/YkB/+AdU05VZr8axd2TI+jqZqKg69pEiuV7FMBmzk9VxD2SZ8\n15JSZIRhf9KbTXJ1IIu3nR5hkldCy9MTbmMx7EwLnu/U8LlOXihlLQ+vU7OQ0qOo\n1KYT3zdsmX2SjkPVzwnLkHxLpd8I1jIkeNzYP+ngJL/epa7XxOVouXt4s9Y89YcI\n5CzVwfnaeMHz4L27LgVCmbxtBwG+jsGbQIK9FMaVJTKl6jdcNau3IlYfuNmLZBIe\nD4ihGgcA4MlZUnsJHU73NNyvcaI7/3O3smodEBVJBHzWmivPbi1jXEPQZuRRGI0=\n=Te9P\n-----END PGP SIGNATURE-----\n","payload":"tree 3f665e6570f2666053918b99e82a46980ab52814\nparent d38a5f27372080c1acf731eadf1c4b85a2dd60de\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1591278491 +0200\ncommitter GitHub <noreply@github.com> 1591278491 +0200\n\n[SYNCOPE-1565] Remove JAXB in favor of Jackson Dataformat XML + enabling Travis CI f… (#192)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae9f6c8cfd6603d34860811833b6b043b3143f46","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ae9f6c8cfd6603d34860811833b6b043b3143f46","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae9f6c8cfd6603d34860811833b6b043b3143f46/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"d38a5f27372080c1acf731eadf1c4b85a2dd60de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d38a5f27372080c1acf731eadf1c4b85a2dd60de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d38a5f27372080c1acf731eadf1c4b85a2dd60de"}],"stats":{"total":6628,"additions":1972,"deletions":4656},"files":[{"sha":"428e276327a7d15dbb0e28aa1d906ce3aeeb4bdb","filename":".travis.yml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/.travis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/.travis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.travis.yml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -83,9 +83,9 @@ jobs:\n     - stage: fit\n       name: \"Integration Tests: Tomcat / H2 / JSON Content-Type\"\n       script: mvn -f fit/core-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n-      #- stage: fit\n-      #name: \"Integration Tests: Tomcat / H2 / XML Content-Type\"\n-      #script: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/xml -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Integration Tests: Tomcat / H2 / XML Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/xml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - stage: fit\n       name: \"Integration Tests: Tomcat / H2 / YAML Content-Type\"\n       script: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/yaml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"18f03a25309735a589dcbbae84a8c2056bd69037","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -170,12 +170,6 @@ under the License.\n           <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n-\n-        <dependency>\n-          <groupId>org.apache.syncope.ext</groupId>\n-          <artifactId>syncope-ext-swagger-ui</artifactId>\n-          <version>${syncope.version}</version>\n-        </dependency>\n       </dependencies>\n       \n       <build>        "},{"sha":"6062661374672bb5a2bbbc0c462e9d3bcbb80843","filename":"client/idrepo/lib/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/client%2Fidrepo%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/client%2Fidrepo%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -55,6 +55,10 @@ under the License.\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-json-provider</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-xml-provider</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-yaml-provider</artifactId>"},{"sha":"bec3941f496f2dfc871a9e7c82dad5165e650b5c","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClientFactoryBean.java","status":"modified","additions":33,"deletions":42,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,25 +18,26 @@\n  */\n package org.apache.syncope.client.lib;\n \n+import com.fasterxml.jackson.annotation.JsonSetter;\n+import com.fasterxml.jackson.annotation.Nulls;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n import com.fasterxml.jackson.datatype.joda.JodaModule;\n-import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n-import com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;\n+import com.fasterxml.jackson.jaxrs.yaml.JacksonYAMLProvider;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.Set;\n import javax.ws.rs.core.MediaType;\n-import javax.xml.bind.Marshaller;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.configuration.jsse.TLSClientParameters;\n import org.apache.cxf.ext.logging.LoggingFeature;\n import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n-import org.apache.cxf.jaxrs.provider.JAXBElementProvider;\n-import org.apache.cxf.staxutils.DocumentDepthProperties;\n-import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.rest.api.DateParamConverterProvider;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n@@ -71,11 +72,11 @@ public static ContentType fromString(final String value) {\n         }\n     }\n \n-    private JacksonJaxbJsonProvider jsonProvider;\n+    private JacksonJsonProvider jsonProvider;\n \n-    private JAXBElementProvider<?> jaxbProvider;\n+    private JacksonXMLProvider xmlProvider;\n \n-    private JacksonJaxbYAMLProvider yamlProvider;\n+    private JacksonYAMLProvider yamlProvider;\n \n     private RestClientExceptionMapper exceptionMapper;\n \n@@ -91,37 +92,28 @@ public static ContentType fromString(final String value) {\n \n     private JAXRSClientFactoryBean restClientFactoryBean;\n \n-    protected static JacksonJaxbJsonProvider defaultJsonProvider() {\n+    protected static JacksonJsonProvider defaultJsonProvider() {\n         ObjectMapper objectMapper = new ObjectMapper();\n         objectMapper.registerModule(new JodaModule());\n         objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n-        return new JacksonJaxbJsonProvider(objectMapper, JacksonJaxbJsonProvider.DEFAULT_ANNOTATIONS);\n+        return new JacksonJsonProvider(objectMapper);\n     }\n \n-    @SuppressWarnings({ \"rawtypes\" })\n-    protected static JAXBElementProvider<?> defaultJAXBProvider() {\n-        JAXBElementProvider<?> defaultJAXBProvider = new JAXBElementProvider();\n-\n-        DocumentDepthProperties depthProperties = new DocumentDepthProperties();\n-        depthProperties.setInnerElementCountThreshold(500);\n-        defaultJAXBProvider.setDepthProperties(depthProperties);\n-\n-        Map<String, Object> marshallerProperties = new HashMap<>();\n-        marshallerProperties.put(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);\n-        defaultJAXBProvider.setMarshallerProperties(marshallerProperties);\n-\n-        Map<String, String> collectionWrapperMap = new HashMap<>();\n-        collectionWrapperMap.put(PolicyTO.class.getName(), \"policies\");\n-        defaultJAXBProvider.setCollectionWrapperMap(collectionWrapperMap);\n-\n-        return defaultJAXBProvider;\n+    protected static JacksonXMLProvider defaultXmlProvider() {\n+        XmlMapper xmlMapper = new XmlMapper();\n+        xmlMapper.registerModule(new JodaModule());\n+        xmlMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n+        xmlMapper.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        xmlMapper.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        xmlMapper.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        return new JacksonXMLProvider(xmlMapper);\n     }\n \n-    protected static JacksonJaxbYAMLProvider defaultYamlProvider() {\n+    protected static JacksonYAMLProvider defaultYamlProvider() {\n         YAMLMapper yamlMapper = new YAMLMapper();\n         yamlMapper.registerModule(new JodaModule());\n         yamlMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n-        return new JacksonJaxbYAMLProvider(yamlMapper, JacksonJaxbJsonProvider.DEFAULT_ANNOTATIONS);\n+        return new JacksonYAMLProvider(yamlMapper);\n     }\n \n     protected static RestClientExceptionMapper defaultExceptionMapper() {\n@@ -149,39 +141,38 @@ protected JAXRSClientFactoryBean defaultRestClientFactoryBean() {\n         defaultRestClientFactoryBean.setProviders(List.of(\n                 new DateParamConverterProvider(),\n                 getJsonProvider(),\n-                getJaxbProvider(),\n+                getXmlProvider(),\n                 getYamlProvider(),\n                 getExceptionMapper()));\n \n         return defaultRestClientFactoryBean;\n     }\n \n-    public JacksonJaxbJsonProvider getJsonProvider() {\n+    public JacksonJsonProvider getJsonProvider() {\n         return Optional.ofNullable(jsonProvider).orElseGet(SyncopeClientFactoryBean::defaultJsonProvider);\n     }\n \n-    public void setJsonProvider(final JacksonJaxbJsonProvider jsonProvider) {\n+    public void setJsonProvider(final JacksonJsonProvider jsonProvider) {\n         this.jsonProvider = jsonProvider;\n     }\n \n-    public JAXBElementProvider<?> getJaxbProvider() {\n-        return jaxbProvider == null\n-                ? defaultJAXBProvider()\n-                : jaxbProvider;\n+    public JacksonXMLProvider getXmlProvider() {\n+        return xmlProvider == null\n+                ? defaultXmlProvider()\n+                : xmlProvider;\n     }\n \n-    public SyncopeClientFactoryBean setJaxbProvider(final JAXBElementProvider<?> jaxbProvider) {\n-        this.jaxbProvider = jaxbProvider;\n-        return this;\n+    public void setXmlProvider(final JacksonXMLProvider xmlProvider) {\n+        this.xmlProvider = xmlProvider;\n     }\n \n-    public JacksonJaxbYAMLProvider getYamlProvider() {\n+    public JacksonYAMLProvider getYamlProvider() {\n         return yamlProvider == null\n                 ? defaultYamlProvider()\n                 : yamlProvider;\n     }\n \n-    public void setYamlProvider(final JacksonJaxbYAMLProvider yamlProvider) {\n+    public void setYamlProvider(final JacksonYAMLProvider yamlProvider) {\n         this.yamlProvider = yamlProvider;\n     }\n "},{"sha":"b3ebdde54d222baf1ba5d314190a73a2fb7e8604","filename":"common/am/lib/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -44,11 +44,6 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n-    <dependency>\n-      <groupId>com.fasterxml.jackson.core</groupId>\n-      <artifactId>jackson-databind</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.junit.jupiter</groupId>\n       <artifactId>junit-jupiter</artifactId>"},{"sha":"089d24ca9ff6f971209055265b8da29b0d8bbddc","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/AbstractAuthModuleConf.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAbstractAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAbstractAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAbstractAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,9 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ JaasAuthModuleConf.class, StaticAuthModuleConf.class, LDAPAuthModuleConf.class,\n-    OIDCAuthModuleConf.class, GoogleMfaAuthModuleConf.class, SAML2IdPAuthModuleConf.class, U2FAuthModuleConf.class,\n-    JDBCAuthModuleConf.class, SyncopeAuthModuleConf.class, RadiusAuthModuleConf.class })\n-public abstract class AbstractAuthModuleConf implements Serializable, AuthModuleConf {\n+public abstract class AbstractAuthModuleConf implements BaseBean, AuthModuleConf {\n \n     private static final long serialVersionUID = 4153200197344709778L;\n \n@@ -44,5 +38,4 @@ public final String getName() {\n     public final void setName(final String name) {\n         this.name = name;\n     }\n-\n }"},{"sha":"35be339c6bfe0b77f2b617e5ebb1e59d0815fa5e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/AuthModuleConf.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,10 @@\n package org.apache.syncope.common.lib.auth;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlTransient;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlTransient\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface AuthModuleConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface AuthModuleConf extends BaseBean {\n \n     /**\n      * Given name of related authentication module instance."},{"sha":"4912fccbe655506f4444a5652af769685c638b0f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/GoogleMfaAuthModuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"googleMfaAuthModuleConf\")\n-@XmlType\n public class GoogleMfaAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -7883257599139312426L;"},{"sha":"658a3c35f6117bd698f9fbec6e175e332fc7c437","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JDBCAuthModuleConf.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,9 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-\n-import javax.xml.bind.annotation.XmlType;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n \n-@XmlRootElement(name = \"jdbcAuthModuleConf\")\n-@XmlType\n public class JDBCAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = 8383233437907219385L;\n@@ -68,7 +60,7 @@ public class JDBCAuthModuleConf extends AbstractAuthModuleConf {\n      * The database connection URL.\n      */\n     private String url = \"jdbc:h2:tcp://localhost:9092/mem:authdb;DB_CLOSE_DELAY=-1\";\n-    \n+\n     /**\n      * The database user.\n      * <p>\n@@ -119,9 +111,6 @@ public void setFieldDisabled(final String fieldDisabled) {\n         this.fieldDisabled = fieldDisabled;\n     }\n \n-    @XmlElementWrapper(name = \"principalAttributeList\")\n-    @XmlElement(name = \"principalAttributeList\")\n-    @JsonProperty(\"principalAttributeList\")\n     public List<String> getPrincipalAttributeList() {\n         return principalAttributeList;\n     }"},{"sha":"7291b8ee89b82aee4da467136c04ed3f32d69b4b","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JaasAuthModuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"jaasAuthModuleConf\")\n-@XmlType\n public class JaasAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -7775771400318503131L;"},{"sha":"97e4c269d5fc15203665d8d252f4b11ce1705a1c","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/LDAPAuthModuleConf.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,9 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n-@XmlRootElement(name = \"ldapAuthModuleConf\")\n-@XmlType\n public class LDAPAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n@@ -135,9 +126,6 @@ public void setBaseDn(final String baseDn) {\n         this.baseDn = baseDn;\n     }\n \n-    @XmlElementWrapper(name = \"principalAttributeList\")\n-    @XmlElement(name = \"principalAttributeList\")\n-    @JsonProperty(\"principalAttributeList\")\n     public List<String> getPrincipalAttributeList() {\n         return principalAttributeList;\n     }"},{"sha":"cd6b008963d4ec86795d95d0ed480cb47f37f66c","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/OIDCAuthModuleConf.java","status":"modified","additions":1,"deletions":14,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,9 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlType;\n import java.util.HashMap;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n-\n-@XmlRootElement(name = \"oidcAuthModuleConf\")\n-@XmlType\n+\n public class OIDCAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n@@ -78,7 +69,6 @@ public class OIDCAuthModuleConf extends AbstractAuthModuleConf {\n     /**\n      * Custom parameters to send along in authZ requests, etc.\n      */\n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> customParams = new HashMap<>(0);\n \n     /**\n@@ -157,9 +147,6 @@ public void setMaxClockSkew(final int maxClockSkew) {\n         this.maxClockSkew = maxClockSkew;\n     }\n \n-    @XmlElementWrapper(name = \"customParams\")\n-    @XmlElement(name = \"customParam\")\n-    @JsonProperty(\"customParams\")\n     public Map<String, String> getCustomParams() {\n         return customParams;\n     }"},{"sha":"46f4eb2a57ab7b362258cf59fd8f3f7a7c6eed5e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/RadiusAuthModuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"radiusAuthModuleConf\")\n-@XmlType\n public class RadiusAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -2235771400318503131L;"},{"sha":"43bf7c3ae916d1d530a5ad3982b6c4420642bd08","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SAML2IdPAuthModuleConf.java","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,9 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"saml2IdPAuthModuleConf\")\n-@XmlType\n public class SAML2IdPAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n@@ -55,7 +48,6 @@ public class SAML2IdPAuthModuleConf extends AbstractAuthModuleConf {\n      */\n     private String privateKeyPassword;\n \n-\n     /**\n      * The metadata location of the identity provider that is to handle authentications.\n      */\n@@ -279,9 +271,6 @@ public void setNameIdPolicyAllowCreate(final String nameIdPolicyAllowCreate) {\n         this.nameIdPolicyAllowCreate = nameIdPolicyAllowCreate;\n     }\n \n-    @XmlElementWrapper(name = \"authnContextClassRefs\")\n-    @XmlElement(name = \"authnContextClassRef\")\n-    @JsonProperty(\"authnContextClassRefs\")\n     public List<String> getAuthnContextClassRefs() {\n         return authnContextClassRefs;\n     }\n@@ -366,23 +355,14 @@ public void setSignServiceProviderLogoutRequest(final boolean signServiceProvide\n         this.signServiceProviderLogoutRequest = signServiceProviderLogoutRequest;\n     }\n \n-    @XmlElementWrapper(name = \"blackListedSignatureSigningAlgorithms\")\n-    @XmlElement(name = \"blackListedSignatureSigningAlgorithm\")\n-    @JsonProperty(\"blackListedSignatureSigningAlgorithms\")\n     public List<String> getBlackListedSignatureSigningAlgorithms() {\n         return blackListedSignatureSigningAlgorithms;\n     }\n \n-    @XmlElementWrapper(name = \"signatureAlgorithms\")\n-    @XmlElement(name = \"signatureAlgorithm\")\n-    @JsonProperty(\"signatureAlgorithms\")\n     public List<String> getSignatureAlgorithms() {\n         return signatureAlgorithms;\n     }\n \n-    @XmlElementWrapper(name = \"signatureReferenceDigestMethods\")\n-    @XmlElement(name = \"signatureReferenceDigestMethod\")\n-    @JsonProperty(\"signatureReferenceDigestMethods\")\n     public List<String> getSignatureReferenceDigestMethods() {\n         return signatureReferenceDigestMethods;\n     }"},{"sha":"d73b34713b08989701e99aa65c32f22e56e8b334","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/StaticAuthModuleConf.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,30 +18,16 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlType;\n import java.util.HashMap;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n-@XmlRootElement(name = \"staticAuthModuleConf\")\n-@XmlType\n public class StaticAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -7775771400318503131L;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> users = new HashMap<>();\n \n-    @XmlElementWrapper(name = \"users\")\n-    @XmlElement(name = \"user\")\n-    @JsonProperty(\"users\")\n     public Map<String, String> getUsers() {\n         return users;\n     }\n-\n }"},{"sha":"f83ae248f3747c8ebf9eb51b3ca1084bcce5761a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SyncopeAuthModuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"syncopeAuthModuleConf\")\n-@XmlType\n public class SyncopeAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -3334329948161152222L;"},{"sha":"e7a84c0630f00063611fe8902952e3c544af37db","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/U2FAuthModuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"u2fAuthModuleConf\")\n-@XmlType\n public class U2FAuthModuleConf extends AbstractAuthModuleConf {\n \n     private static final long serialVersionUID = -1235771400318503131L;"},{"sha":"f5ebb4ebceab40f7ee0d5bcbd1206f4c6b84b218","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAccessPolicyConf.java","status":"modified","additions":22,"deletions":17,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccessPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,20 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import java.io.Serializable;\n-import java.util.LinkedHashMap;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ DefaultAccessPolicyConf.class })\n-public abstract class AbstractAccessPolicyConf implements Serializable, AccessPolicyConf {\n+public abstract class AbstractAccessPolicyConf implements BaseBean, AccessPolicyConf {\n \n     private static final long serialVersionUID = 1153200197344709778L;\n \n@@ -42,8 +41,10 @@ public abstract class AbstractAccessPolicyConf implements Serializable, AccessPo\n \n     private boolean ssoEnabled = true;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n-    private final Map<String, Set<String>> requiredAttrs = new LinkedHashMap<>();\n+    @JacksonXmlElementWrapper(localName = \"requiredAttrs\")\n+    @JacksonXmlProperty(localName = \"requiredAttr\")\n+    @JsonProperty(\"requiredAttrs\")\n+    private final List<Attr> requiredAttrList = new ArrayList<>();\n \n     public AbstractAccessPolicyConf() {\n         setName(getClass().getName());\n@@ -76,11 +77,15 @@ public void setSsoEnabled(final boolean ssoEnabled) {\n         this.ssoEnabled = ssoEnabled;\n     }\n \n-    @XmlElementWrapper(name = \"requiredAttrs\")\n-    @XmlElement(name = \"requiredAttr\")\n-    @JsonProperty(\"requiredAttrs\")\n+    @JsonIgnore\n     @Override\n     public Map<String, Set<String>> getRequiredAttrs() {\n-        return requiredAttrs;\n+        return requiredAttrList.stream().\n+                collect(Collectors.toUnmodifiableMap(Attr::getSchema, attr -> new HashSet<>(attr.getValues())));\n+    }\n+\n+    public void addRequiredAttr(final String key, final Set<String> values) {\n+        requiredAttrList.removeIf(attr -> attr.getSchema().equals(key));\n+        requiredAttrList.add(new Attr.Builder(key).values(values).build());\n     }\n }"},{"sha":"5013c4b8a4356e466b1a2e4dd39d5a741d008f4f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAttrReleasePolicyConf.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAttrReleasePolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAttrReleasePolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAttrReleasePolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,9 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ AllowedAttrReleasePolicyConf.class })\n-public abstract class AbstractAttrReleasePolicyConf implements Serializable, AttrReleasePolicyConf {\n+public abstract class AbstractAttrReleasePolicyConf implements BaseBean, AttrReleasePolicyConf {\n \n     private static final long serialVersionUID = 1153200197344709778L;\n "},{"sha":"1a668009b6e0f4392d62bea96b0a8a4b9ce7b1f8","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAuthPolicyConf.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,9 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ DefaultAuthPolicyConf.class })\n-public abstract class AbstractAuthPolicyConf implements Serializable, AuthPolicyConf {\n+public abstract class AbstractAuthPolicyConf implements BaseBean, AuthPolicyConf {\n \n     private static final long serialVersionUID = 9185127128182430142L;\n "},{"sha":"8f9bd14294af838af3c09bb32235c1a206c6db97","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAuthPolicyCriteriaConf.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyCriteriaConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyCriteriaConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAuthPolicyCriteriaConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,7 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import java.io.Serializable;\n-\n-@XmlType\n-@XmlSeeAlso({ DefaultAuthPolicyCriteriaConf.class })\n-public abstract class AbstractAuthPolicyCriteriaConf implements AuthPolicyCriteriaConf, Serializable {\n+public abstract class AbstractAuthPolicyCriteriaConf implements AuthPolicyCriteriaConf {\n \n     private static final long serialVersionUID = -6882164291962510245L;\n "},{"sha":"da2e53cf7db78275ea8b568c0f0ff2f476a1b362","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AccessPolicyConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface AccessPolicyConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface AccessPolicyConf extends BaseBean {\n \n     /**\n      * Give name of related access policy."},{"sha":"093ca7a65735dfc0f016eaba35695f2b3d36b3a5","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AccessPolicyTO.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,22 +20,18 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"accessPolicy\")\n-@XmlType\n public class AccessPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -6711411162433533300L;\n \n     private AccessPolicyConf conf;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.AccessPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.AccessPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"889c3025f979ab4fdcc129e30ad186386b707b96","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AllowedAttrReleasePolicyConf.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,9 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n \n-@XmlRootElement(name = \"allowedAttrReleasePolicyConf\")\n-@XmlType\n public class AllowedAttrReleasePolicyConf extends AbstractAttrReleasePolicyConf implements AttrReleasePolicyConf {\n \n     private static final long serialVersionUID = -1969836661359025380L;\n@@ -38,9 +31,6 @@ public class AllowedAttrReleasePolicyConf extends AbstractAttrReleasePolicyConf\n      */\n     private final List<String> allowedAttrs = new ArrayList<>();\n \n-    @XmlElementWrapper(name = \"allowedAttrs\")\n-    @XmlElement(name = \"allowedAttr\")\n-    @JsonProperty(\"allowedAttrs\")\n     public List<String> getAllowedAttrs() {\n         return allowedAttrs;\n     }"},{"sha":"fbd8c2e909882312c862244b44855e3ef4f3f9ac","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AttrReleasePolicyConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface AttrReleasePolicyConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface AttrReleasePolicyConf extends BaseBean {\n \n     /**\n      * Give name of related attr release policy."},{"sha":"5e43b9afdc26e19b5126c35b61fe664299bf3231","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AttrReleasePolicyTO.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,22 +19,18 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"attrReleasePolicy\")\n-@XmlType\n public class AttrReleasePolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -1432411162433533300L;\n \n     private AttrReleasePolicyConf conf;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.AttrReleasePolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.AttrReleasePolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"e8a09453fcf3dc0882bafe8e4f6b1ff91d04f5a0","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AuthPolicyConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface AuthPolicyConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface AuthPolicyConf extends BaseBean {\n \n     /**\n      * Give name of related authentication policy instance."},{"sha":"6597368ea179407ffed64ce2d7f43983b8776b37","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AuthPolicyCriteriaConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyCriteriaConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyCriteriaConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyCriteriaConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n /**\n  * Determine the criteria by which the authentication policy\n@@ -29,8 +29,8 @@\n  * or \"any module can validate the user\" before the policy can consider it\n  * a success.\n  */\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface AuthPolicyCriteriaConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface AuthPolicyCriteriaConf extends BaseBean {\n \n     /**\n      * Describe the name of the authentication policy criteria."},{"sha":"f54e1b24617eadb41b760e5039b34e020840d239","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AuthPolicyTO.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,22 +19,18 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"authPolicy\")\n-@XmlType\n public class AuthPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -6711411162433533300L;\n \n     private AuthPolicyConf conf;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.AuthPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.AuthPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"490f31104ed2b50c97bd6f616ac1507584b7d837","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccessPolicyConf.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,12 +18,8 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"defaultAccessPolicyConf\")\n-@XmlType\n public class DefaultAccessPolicyConf extends AbstractAccessPolicyConf implements AccessPolicyConf {\n \n     private static final long serialVersionUID = -1969836600059025380L;\n+\n }"},{"sha":"1c705920a9c05935220231c86ffc369bfed05fa3","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAuthPolicyConf.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,25 +18,15 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n \n-@XmlRootElement(name = \"defaultAuthPolicyConf\")\n-@XmlType\n public class DefaultAuthPolicyConf extends AbstractAuthPolicyConf implements AuthPolicyConf {\n \n     private static final long serialVersionUID = -2969836600059025380L;\n \n     private final List<String> authModules = new ArrayList<>();\n \n-    @XmlElementWrapper(name = \"authModules\")\n-    @XmlElement(name = \"authModule\")\n-    @JsonProperty(\"authModules\")\n     public List<String> getAuthModules() {\n         return authModules;\n     }"},{"sha":"4d0f4b60bb456c5220c28fdca4063cb1ad7234ef","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAuthPolicyCriteriaConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyCriteriaConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyCriteriaConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAuthPolicyCriteriaConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"defaultAuthPolicyCriteriaConf\")\n-@XmlType\n public class DefaultAuthPolicyCriteriaConf extends AbstractAuthPolicyCriteriaConf {\n \n     private static final long serialVersionUID = 3928807032588105869L;"},{"sha":"d3c7ee739d986a98f687a3f54ebee7e0b842b502","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/package-info.java","status":"removed","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,30 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.policy;\n-\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n-\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-\n-import java.util.Date;"},{"sha":"9d4d7f61c7541f62d98ea34d8ffc74c96f6fc21d","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/AuthModuleTO.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthModuleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthModuleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthModuleTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.auth.AuthModuleConf;\n \n-@XmlRootElement(name = \"authModule\")\n-@XmlType\n-public class AuthModuleTO extends BaseBean implements EntityTO {\n+public class AuthModuleTO implements EntityTO {\n \n     private static final long serialVersionUID = -7490425997956703057L;\n \n@@ -83,9 +75,6 @@ public void setConf(final AuthModuleConf conf) {\n         this.conf = conf;\n     }\n \n-    @XmlElementWrapper(name = \"items\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"items\")\n     public List<ItemTO> getItems() {\n         return items;\n     }"},{"sha":"dc4cb2d48a5703df4249e8861d9ecfbe83800c53","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/AuthProfileTO.java","status":"modified","additions":8,"deletions":17,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,24 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-import org.apache.syncope.common.lib.types.GoogleMfaAuthToken;\n-\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.types.GoogleMfaAuthToken;\n \n-@XmlRootElement(name = \"authProfile\")\n-@XmlType\n-public class AuthProfileTO extends BaseBean implements EntityTO {\n+public class AuthProfileTO implements EntityTO {\n \n     private static final long serialVersionUID = -6543425997956703057L;\n \n@@ -64,9 +56,8 @@ public void setOwner(final String owner) {\n         this.owner = owner;\n     }\n \n-    @XmlElementWrapper(name = \"googleMfaAuthTokens\")\n-    @XmlElement(name = \"googleMfaAuthTokens\")\n-    @JsonProperty(\"googleMfaAuthTokens\")\n+    @JacksonXmlElementWrapper(localName = \"googleMfaAuthTokens\")\n+    @JacksonXmlProperty(localName = \"googleMfaAuthToken\")\n     public List<GoogleMfaAuthToken> getGoogleMfaAuthTokens() {\n         return googleMfaAuthTokens;\n     }"},{"sha":"fe8d9874bda86f00de57c1be652536afae11d6e6","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/GatewayRouteTO.java","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGatewayRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGatewayRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGatewayRouteTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.GatewayRouteFilter;\n import org.apache.syncope.common.lib.types.GatewayRoutePredicate;\n import org.apache.syncope.common.lib.types.GatewayRouteStatus;\n \n-@XmlRootElement(name = \"gatewayRoute\")\n-@XmlType\n public class GatewayRouteTO implements NamedEntityTO {\n \n     private static final long serialVersionUID = 4044528284951757870L;\n@@ -90,16 +83,10 @@ public void setTarget(final URI target) {\n         this.target = target;\n     }\n \n-    @XmlElementWrapper(name = \"filters\")\n-    @XmlElement(name = \"filter\")\n-    @JsonProperty(\"filters\")\n     public List<GatewayRouteFilter> getFilters() {\n         return filters;\n     }\n \n-    @XmlElementWrapper(name = \"predicates\")\n-    @XmlElement(name = \"predicate\")\n-    @JsonProperty(\"predicates\")\n     public List<GatewayRoutePredicate> getPredicates() {\n         return predicates;\n     }"},{"sha":"e6263b55bb2cd749e9f3a8f64977a81eed7d118a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPMetadataTO.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPMetadataTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPMetadataTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPMetadataTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,13 +21,8 @@\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"saml2idpMetadata\")\n-@XmlType\n-public class SAML2IdPMetadataTO extends BaseBean implements EntityTO {\n+public class SAML2IdPMetadataTO implements EntityTO {\n \n     private static final long serialVersionUID = 7215073386484048953L;\n \n@@ -178,5 +173,4 @@ public int hashCode() {\n                 append(appliesTo).\n                 build();\n     }\n-\n }"},{"sha":"d2c1fb41a30e53ee5af3cfd97444cdf40bd913e8","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/SAML2SPKeystoreTO.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPKeystoreTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPKeystoreTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPKeystoreTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,15 +21,9 @@\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"saml2spMetadataKeystore\")\n-@XmlType\n-public class SAML2SPKeystoreTO extends BaseBean implements EntityTO {\n+public class SAML2SPKeystoreTO implements EntityTO {\n \n     private static final long serialVersionUID = 3211073386484148953L;\n \n@@ -69,10 +63,10 @@ public void setOwner(final String owner) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n-            append(key).\n-            append(keystore).\n-            append(owner).\n-            build();\n+                append(key).\n+                append(keystore).\n+                append(owner).\n+                build();\n     }\n \n     @Override\n@@ -88,19 +82,19 @@ public boolean equals(final Object obj) {\n         }\n         SAML2SPKeystoreTO other = (SAML2SPKeystoreTO) obj;\n         return new EqualsBuilder().\n-            append(key, other.key).\n-            append(keystore, other.keystore).\n-            append(owner, other.owner).\n-            build();\n+                append(key, other.key).\n+                append(keystore, other.keystore).\n+                append(owner, other.owner).\n+                build();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this)\n-            .appendSuper(super.toString())\n-            .append(\"key\", key)\n-            .append(\"owner\", owner)\n-            .toString();\n+                .appendSuper(super.toString())\n+                .append(\"key\", key)\n+                .append(\"owner\", owner)\n+                .toString();\n     }\n \n     public static class Builder {\n@@ -121,5 +115,4 @@ public SAML2SPKeystoreTO build() {\n             return instance;\n         }\n     }\n-\n }"},{"sha":"07ae1b7d14333b7512fe3e7c98332f1095b3c3f3","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/SAML2SPMetadataTO.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPMetadataTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPMetadataTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2SPMetadataTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,15 +21,9 @@\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"saml2spMetadata\")\n-@XmlType\n-public class SAML2SPMetadataTO extends BaseBean implements EntityTO {\n+public class SAML2SPMetadataTO implements EntityTO {\n \n     private static final long serialVersionUID = 6215073386484048953L;\n \n@@ -69,10 +63,10 @@ public void setOwner(final String owner) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n-            append(key).\n-            append(metadata).\n-            append(owner).\n-            build();\n+                append(key).\n+                append(metadata).\n+                append(owner).\n+                build();\n     }\n \n     @Override\n@@ -88,22 +82,21 @@ public boolean equals(final Object obj) {\n         }\n         SAML2SPMetadataTO other = (SAML2SPMetadataTO) obj;\n         return new EqualsBuilder().\n-            append(key, other.key).\n-            append(metadata, other.metadata).\n-            append(owner, other.owner).\n-            build();\n+                append(key, other.key).\n+                append(metadata, other.metadata).\n+                append(owner, other.owner).\n+                build();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this)\n-            .appendSuper(super.toString())\n-            .append(\"key\", key)\n-            .append(\"owner\", owner)\n-            .toString();\n+                .appendSuper(super.toString())\n+                .append(\"key\", key)\n+                .append(\"owner\", owner)\n+                .toString();\n     }\n \n-\n     public static class Builder {\n \n         private final SAML2SPMetadataTO instance = new SAML2SPMetadataTO();\n@@ -122,5 +115,4 @@ public SAML2SPMetadataTO build() {\n             return instance;\n         }\n     }\n-\n }"},{"sha":"8700c8cf108cfc2110eb9a0c691d60213f276a0a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/client/ClientAppTO.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FClientAppTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FClientAppTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FClientAppTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,28 +21,22 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.EntityTO;\n \n-@XmlRootElement(name = \"clientApp\")\n-@XmlType\n-@XmlSeeAlso({ OIDCRPTO.class, SAML2SPTO.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\", \"description\" })\n-@Schema(subTypes = { OIDCRPTO.class, SAML2SPTO.class }, discriminatorProperty = \"@class\")\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\", \"description\" })\n+@Schema(subTypes = { OIDCRPTO.class, SAML2SPTO.class }, discriminatorProperty = \"_class\")\n public abstract class ClientAppTO implements EntityTO {\n \n     private static final long serialVersionUID = 6577639976115661357L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String key;\n@@ -59,7 +53,7 @@ public abstract class ClientAppTO implements EntityTO {\n \n     private String attrReleasePolicy;\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {"},{"sha":"fbecde7b4d9072034d855061c8b3a96d6ba1c59d","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/client/OIDCRPTO.java","status":"modified","additions":6,"deletions":21,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FOIDCRPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FOIDCRPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FOIDCRPTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,22 +19,16 @@\n package org.apache.syncope.common.lib.to.client;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n \n-@XmlRootElement(name = \"oidcrp\")\n-@XmlType\n @Schema(allOf = { ClientAppTO.class })\n public class OIDCRPTO extends ClientAppTO {\n \n@@ -56,9 +50,9 @@ public class OIDCRPTO extends ClientAppTO {\n \n     private final Set<String> supportedResponseTypes = new HashSet<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.client.OIDCRPTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.client.OIDCRPTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -80,23 +74,14 @@ public void setClientSecret(final String clientSecret) {\n         this.clientSecret = clientSecret;\n     }\n \n-    @XmlElementWrapper(name = \"redirectUris\")\n-    @XmlElement(name = \"redirectUri\")\n-    @JsonProperty(\"redirectUris\")\n     public List<String> getRedirectUris() {\n         return redirectUris;\n     }\n \n-    @XmlElementWrapper(name = \"supportedGrantTypes\")\n-    @XmlElement(name = \"supportedGrantType\")\n-    @JsonProperty(\"supportedGrantTypes\")\n     public Set<String> getSupportedGrantTypes() {\n         return supportedGrantTypes;\n     }\n \n-    @XmlElementWrapper(name = \"supportedResponseTypes\")\n-    @XmlElement(name = \"supportedResponseType\")\n-    @JsonProperty(\"supportedResponseTypes\")\n     public Set<String> getSupportedResponseTypes() {\n         return supportedResponseTypes;\n     }"},{"sha":"cdedf9e65bf8f880dc132302da061112b52ce803","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/client/SAML2SPTO.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FSAML2SPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FSAML2SPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2FSAML2SPTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,16 +19,12 @@\n package org.apache.syncope.common.lib.to.client;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.SAML2SPNameId;\n \n-@XmlRootElement(name = \"saml2SP\")\n-@XmlType\n @Schema(allOf = { ClientAppTO.class })\n public class SAML2SPTO extends ClientAppTO {\n \n@@ -60,9 +56,9 @@ public class SAML2SPTO extends ClientAppTO {\n \n     private String serviceProviderNameIdQualifier;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.client.SAML2SPTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.client.SAML2SPTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"503eff0041dbc57e2fab4f5abcaa74738f1972ba","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/client/package-info.java","status":"removed","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2Fclient%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,30 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.to.client;\n-\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n-\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-\n-import java.util.Date;"},{"sha":"3bf730e6a1ebdec0d8e984c1b2b6da57d95a4235","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/ClientAppType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientAppType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientAppType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientAppType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ClientAppType {\n     SAML2SP,\n     OIDCRP;"},{"sha":"5d71698b623d8645c10412e110b6d62c725d5719","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/FilterFactory.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FFilterFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FFilterFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FFilterFactory.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum FilterFactory {\n     ADD_REQUEST_HEADER,\n     ADD_REQUEST_PARAMETER,"},{"sha":"687b11bc849716c92331295a8c6ed0576dade382","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/GatewayRouteFilter.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteFilter.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,11 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"gatewayRouteFilter\")\n-@XmlType\n-public class GatewayRouteFilter implements Serializable {\n+public class GatewayRouteFilter implements BaseBean {\n \n     private static final long serialVersionUID = -635785645207375128L;\n "},{"sha":"2c0c3c788fece1833f069f508f349efa7b6df336","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/GatewayRoutePredicate.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRoutePredicate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRoutePredicate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRoutePredicate.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,11 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"gatewayRoutePredicate\")\n-@XmlType\n-public class GatewayRoutePredicate implements Serializable {\n+public class GatewayRoutePredicate implements BaseBean {\n \n     private static final long serialVersionUID = -635785645207375128L;\n "},{"sha":"5155a1d358f5095ba7d3311053ee8f5821bcd7a1","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/GatewayRouteStatus.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGatewayRouteStatus.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum GatewayRouteStatus {\n     DRAFT,\n     STAGING,"},{"sha":"8d3ec83863a945dc6c4906da3aa013575a60e271","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/GoogleMfaAuthToken.java","status":"modified","additions":24,"deletions":30,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGoogleMfaAuthToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGoogleMfaAuthToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FGoogleMfaAuthToken.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,23 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.common.lib.types;\n \n+import java.util.Date;\n+import java.util.Optional;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+public class GoogleMfaAuthToken implements BaseBean {\n \n-import java.io.Serializable;\n-import java.util.Date;\n-import java.util.Optional;\n-\n-@XmlRootElement(name = \"googleMfaAuthToken\")\n-@XmlType\n-public class GoogleMfaAuthToken implements Serializable {\n     private static final long serialVersionUID = 2185073386484048953L;\n \n     private String key;\n@@ -69,23 +63,23 @@ public void setOwner(final String owner) {\n \n     public Date getIssueDate() {\n         return Optional.ofNullable(this.issueDate).\n-            map(date -> new Date(date.getTime())).orElse(null);\n+                map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public void setIssueDate(final Date issueDate) {\n         this.issueDate = Optional.ofNullable(issueDate).\n-            map(date -> new Date(date.getTime())).orElse(null);\n+                map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n-            .appendSuper(super.hashCode())\n-            .append(key)\n-            .append(token)\n-            .append(owner)\n-            .append(issueDate)\n-            .toHashCode();\n+                .appendSuper(super.hashCode())\n+                .append(key)\n+                .append(token)\n+                .append(owner)\n+                .append(issueDate)\n+                .toHashCode();\n     }\n \n     @Override\n@@ -101,24 +95,24 @@ public boolean equals(final Object obj) {\n         }\n         GoogleMfaAuthToken rhs = (GoogleMfaAuthToken) obj;\n         return new EqualsBuilder()\n-            .appendSuper(super.equals(obj))\n-            .append(this.key, rhs.key)\n-            .append(this.token, rhs.token)\n-            .append(this.owner, rhs.owner)\n-            .append(this.issueDate, rhs.issueDate)\n-            .isEquals();\n+                .appendSuper(super.equals(obj))\n+                .append(this.key, rhs.key)\n+                .append(this.token, rhs.token)\n+                .append(this.owner, rhs.owner)\n+                .append(this.issueDate, rhs.issueDate)\n+                .isEquals();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this)\n-            .append(\"key\", key)\n-            .append(\"token\", token)\n-            .append(\"owner\", owner)\n-            .append(\"issueDate\", issueDate)\n-            .toString();\n+                .append(\"key\", key)\n+                .append(\"token\", token)\n+                .append(\"owner\", owner)\n+                .append(\"issueDate\", issueDate)\n+                .toString();\n     }\n-    \n+\n     public static class Builder {\n \n         private final GoogleMfaAuthToken instance = new GoogleMfaAuthToken();"},{"sha":"9a1caeca9b7109e8c23bf2856e277c0d516cfb26","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/OIDCSubjectType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCSubjectType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCSubjectType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCSubjectType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum OIDCSubjectType {\n     PAIRWISE,\n     PUBLIC"},{"sha":"c62ff78257cd01d14fa090947167350fe44c4db6","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/PredicateCond.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateCond.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum PredicateCond {\n     AND,\n     OR"},{"sha":"3c343a2c9d22803d1e85a2981f6b4e5f53d5c77a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/PredicateFactory.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPredicateFactory.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum PredicateFactory {\n     AFTER,\n     BEFORE,"},{"sha":"a7b60b9acc7af9957573ad1119f395ca15f143eb","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/SAML2SPNameId.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPNameId.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPNameId.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPNameId.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum SAML2SPNameId {\n \n     EMAIL_ADDRESS(\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"),"},{"sha":"6c2a55f74422779cc69948830d662b7668682991","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/WAClientApp.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,15 @@\n  */\n package org.apache.syncope.common.lib.wa;\n \n-import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.AuthPolicyConf;\n import org.apache.syncope.common.lib.to.client.ClientAppTO;\n \n-public class WAClientApp implements Serializable {\n+public class WAClientApp implements BaseBean {\n \n     private static final long serialVersionUID = 6633251825655119506L;\n "},{"sha":"14d547df88883af40869341663533656f3b602f2","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/JSONTest.java","status":"renamed","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,12 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n package org.apache.syncope.common.lib;\n \n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+public class JSONTest extends SerializationTest {\n+\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return OBJECT_MAPPER;\n+    }\n+}","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/package-info.java"},{"sha":"28ac120aa7c191a5511cc750d6267d9c2ca204b6","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/SerializationTest.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n+import org.junit.jupiter.api.Test;\n+\n+public abstract class SerializationTest {\n+\n+    protected abstract ObjectMapper objectMapper();\n+\n+    @Test\n+    public void accessPolicyConf() throws IOException {\n+        AccessPolicyTO policy = new AccessPolicyTO();\n+        policy.setDescription(\"Test Access policy\");\n+\n+        DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n+        conf.setEnabled(true);\n+        conf.setName(\"TestAccessPolicyConf\");\n+        conf.addRequiredAttr(\"cn\", Set.of(\"admin\", \"Admin\", \"TheAdmin\"));\n+        policy.setConf(conf);\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, policy);\n+\n+        AccessPolicyTO actual = objectMapper().readValue(writer.toString(), AccessPolicyTO.class);\n+        assertEquals(policy, actual);\n+    }\n+}"},{"sha":"25f2a2a8a0909a0eb0e5665601d72431a0dbe0f6","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/XMLTest.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+import com.fasterxml.jackson.annotation.JsonSetter;\n+import com.fasterxml.jackson.annotation.Nulls;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class XMLTest extends SerializationTest {\n+\n+    private static final XmlMapper XML_MAPPER;\n+\n+    static {\n+        XML_MAPPER = new XmlMapper();\n+        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+    }\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return XML_MAPPER;\n+    }\n+}"},{"sha":"5ff49001c769d8bcf508957115888e8f0fd3e974","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/YAMLTest.java","status":"renamed","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,15 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.wa;\n+package org.apache.syncope.common.lib;\n \n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n \n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n+public class YAMLTest extends SerializationTest {\n \n-import java.util.Date;\n+    private static final YAMLMapper YAML_MAPPER = new YAMLMapper();\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return YAML_MAPPER;\n+    }\n+}","previous_filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/package-info.java"},{"sha":"f8fdfe6ac778fe19cfe94ac24e78bf3303e91899","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/wa/GoogleMfaAuthTokenService.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FGoogleMfaAuthTokenService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FGoogleMfaAuthTokenService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FGoogleMfaAuthTokenService.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -30,14 +30,14 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import java.util.Date;\n-import java.util.List;\n import io.swagger.v3.oas.annotations.headers.Header;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.types.GoogleMfaAuthToken;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.JAXRSService;\n@@ -103,23 +103,17 @@ GoogleMfaAuthToken findTokenFor(\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Path(\"tokens/owners/${owner}\")\n-    List<GoogleMfaAuthToken> findTokensFor(@NotNull @PathParam(\"owner\") String owner);\n+    PagedResult<GoogleMfaAuthToken> findTokensFor(@NotNull @PathParam(\"owner\") String owner);\n \n     @GET\n     @Path(\"tokens/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     GoogleMfaAuthToken findTokenFor(@NotNull @PathParam(\"key\") String key);\n \n-    @GET\n-    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    @Path(\"tokens/${owner}/count\")\n-    long countTokensForOwner(@NotNull @PathParam(\"owner\") String owner);\n-\n     @GET\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Path(\"tokens/count\")\n-    long countTokens();\n+    PagedResult<GoogleMfaAuthToken> countTokens();\n }"},{"sha":"c3b9d0356e11e0e73b71877c3ba5fe1cd330e79a","filename":"common/idm/lib/pom.xml","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -43,17 +43,6 @@ under the License.\n       <artifactId>syncope-common-idrepo-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>com.fasterxml.jackson.core</groupId>\n-      <artifactId>jackson-databind</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.junit.jupiter</groupId>\n-      <artifactId>junit-jupiter</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n   </dependencies>\n   \n   <build>"},{"sha":"0b0911bb226067888878ef882909c40ee956d244","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnBundleTO.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n \n-@XmlRootElement(name = \"connectorBundle\")\n-@XmlType\n-public class ConnBundleTO implements Serializable {\n+public class ConnBundleTO implements BaseBean {\n \n     private static final long serialVersionUID = 7215115961910138005L;\n \n@@ -78,9 +73,8 @@ public void setConnectorName(final String connectorName) {\n         this.connectorName = connectorName;\n     }\n \n-    @XmlElementWrapper(name = \"properties\")\n-    @XmlElement(name = \"connConfPropSchema\")\n-    @JsonProperty(\"properties\")\n+    @JacksonXmlElementWrapper(localName = \"properties\")\n+    @JacksonXmlProperty(localName = \"connConfPropSchema\")\n     public List<ConnConfPropSchema> getProperties() {\n         return properties;\n     }"},{"sha":"93b4a4fec871d39a0091d71676d28e59f437bdae","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n \n /**\n  * Metadata description of ConnId ObjectClass.\n  */\n-@XmlRootElement(name = \"connIdObjectClass\")\n-@XmlType\n-public class ConnIdObjectClassTO implements Serializable {\n+public class ConnIdObjectClassTO implements BaseBean {\n \n     private static final long serialVersionUID = -3719658595689434648L;\n \n@@ -68,9 +63,8 @@ public void setAuxiliary(final boolean auxiliary) {\n         this.auxiliary = auxiliary;\n     }\n \n-    @XmlElementWrapper(name = \"attributes\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"attributes\")\n+    @JacksonXmlElementWrapper(localName = \"attributes\")\n+    @JacksonXmlProperty(localName = \"attribute\")\n     public List<PlainSchemaTO> getAttributes() {\n         return attributes;\n     }"},{"sha":"08f93ad264523683652b5eea388f79d84b1022bc","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceTO.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,24 +19,19 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.EnumSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n \n-@XmlRootElement(name = \"connInstance\")\n-@XmlType\n public class ConnInstanceTO implements EntityTO {\n \n     private static final long serialVersionUID = 2707778645445168671L;\n@@ -114,9 +109,8 @@ public void setVersion(final String version) {\n         this.version = version;\n     }\n \n-    @XmlElementWrapper(name = \"conf\")\n-    @XmlElement(name = \"property\")\n-    @JsonProperty(\"conf\")\n+    @JacksonXmlElementWrapper(localName = \"conf\")\n+    @JacksonXmlProperty(localName = \"property\")\n     public List<ConnConfProperty> getConf() {\n         return this.conf;\n     }\n@@ -126,9 +120,8 @@ public Optional<ConnConfProperty> getConf(final String schemaName) {\n         return conf.stream().filter(property -> property.getSchema().getName().equals(schemaName)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"capabilities\")\n-    @XmlElement(name = \"capability\")\n-    @JsonProperty(\"capabilities\")\n+    @JacksonXmlElementWrapper(localName = \"capabilities\")\n+    @JacksonXmlProperty(localName = \"capability\")\n     public Set<ConnectorCapability> getCapabilities() {\n         return capabilities;\n     }"},{"sha":"3ac82319ee5bbc397a69db3dcbb18731d2bafd84","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnPoolConfTO.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,11 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"connPoolConf\")\n-@XmlType\n-public class ConnPoolConfTO implements Serializable {\n+public class ConnPoolConfTO implements BaseBean {\n \n     private static final long serialVersionUID = -214360178113476623L;\n "},{"sha":"c29246a84fb586e0c2a78c78bd7366d5284878f6","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":9,"deletions":18,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,22 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"mapping\")\n-@XmlType\n-public class MappingTO implements ItemContainerTO, Serializable {\n+public class MappingTO implements ItemContainerTO {\n \n     private static final long serialVersionUID = 8447688036282611118L;\n \n@@ -66,12 +59,11 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n         return Optional.ofNullable(connObjectKeyItem)\n-            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+                .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n-    @XmlElementWrapper(name = \"items\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"items\")\n+    @JacksonXmlElementWrapper(localName = \"items\")\n+    @JacksonXmlProperty(localName = \"item\")\n     @Override\n     public List<ItemTO> getItems() {\n         return items;\n@@ -80,16 +72,15 @@ public List<ItemTO> getItems() {\n     @Override\n     public boolean add(final ItemTO item) {\n         return Optional.ofNullable(item)\n-            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+                .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {\n         return this.items.remove(item);\n     }\n \n-    @XmlElementWrapper(name = \"linkingItems\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"linkingItems\")\n+    @JacksonXmlElementWrapper(localName = \"linkingItems\")\n+    @JacksonXmlProperty(localName = \"linkingItem\")\n     public List<ItemTO> getLinkingItems() {\n         return linkingItems;\n     }"},{"sha":"29cf7616609fcd4a7051c7474b2f839dbeb135aa","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/OrgUnitTO.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"orgUnit\")\n-@XmlType\n public class OrgUnitTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = -1868877794174953177L;\n@@ -105,12 +99,11 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n         return Optional.ofNullable(connObjectKeyItem)\n-            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+                .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n-    @XmlElementWrapper(name = \"items\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"items\")\n+    @JacksonXmlElementWrapper(localName = \"items\")\n+    @JacksonXmlProperty(localName = \"item\")\n     @Override\n     public List<ItemTO> getItems() {\n         return items;\n@@ -119,7 +112,7 @@ public List<ItemTO> getItems() {\n     @Override\n     public boolean add(final ItemTO item) {\n         return Optional.ofNullable(item)\n-            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+                .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {"},{"sha":"57e2d1f10186397ef4d1412fc3e50f697088544e","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/PagedConnObjectTOResult.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"pagedConnObjectResult\")\n-@XmlType\n-public class PagedConnObjectTOResult implements Serializable {\n+public class PagedConnObjectTOResult implements BaseBean {\n \n     private static final long serialVersionUID = -2832908019064402976L;\n \n@@ -112,9 +107,8 @@ public void setAllResultsReturned(final boolean allResultsReturned) {\n         this.allResultsReturned = allResultsReturned;\n     }\n \n-    @XmlElementWrapper(name = \"result\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"result\")\n+    @JacksonXmlElementWrapper(localName = \"result\")\n+    @JacksonXmlProperty(localName = \"item\")\n     public List<ConnObjectTO> getResult() {\n         return result;\n     }"},{"sha":"fb1190ec3f397d765fb2bc251b47e50423f3071e","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisionTO.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"provision\")\n-@XmlType\n public class ProvisionTO implements EntityTO {\n \n     private static final long serialVersionUID = 8298910216218007927L;\n@@ -78,9 +73,8 @@ public void setObjectClass(final String objectClass) {\n         this.objectClass = objectClass;\n     }\n \n-    @XmlElementWrapper(name = \"auxClasses\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"auxClasses\")\n+    @JacksonXmlElementWrapper(localName = \"auxClasses\")\n+    @JacksonXmlProperty(localName = \"class\")\n     public List<String> getAuxClasses() {\n         return auxClasses;\n     }\n@@ -117,9 +111,8 @@ public void setMapping(final MappingTO mapping) {\n         this.mapping = mapping;\n     }\n \n-    @XmlElementWrapper(name = \"virSchemas\")\n-    @XmlElement(name = \"virSchema\")\n-    @JsonProperty(\"virSchemas\")\n+    @JacksonXmlElementWrapper(localName = \"virSchemas\")\n+    @JacksonXmlProperty(localName = \"virSchema\")\n     public List<String> getVirSchemas() {\n         return virSchemas;\n     }"},{"sha":"7ca1a573f864a010d43becb331f7d4aad197d709","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningReport.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningReport.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,17 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n import java.util.Collection;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-@XmlRootElement(name = \"provisioningReport\")\n-@XmlType\n-public class ProvisioningReport implements Serializable {\n+public class ProvisioningReport implements BaseBean {\n \n     private static final long serialVersionUID = 9201119472070963385L;\n \n-    @XmlEnum\n     public enum Status {\n \n         SUCCESS,"},{"sha":"eb4bd15045cebb0889c01d4a0d4dfdf44029c2b9","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ReconStatus.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,18 +19,14 @@\n package org.apache.syncope.common.lib.to;\n \n import io.swagger.v3.oas.annotations.media.Schema;\n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MatchType;\n \n /**\n  * Reconciliation status.\n  */\n-@XmlRootElement(name = \"reconStatus\")\n-@XmlType\n-public class ReconStatus implements Serializable {\n+public class ReconStatus implements BaseBean {\n \n     private static final long serialVersionUID = -8516345256596521490L;\n "},{"sha":"8f7528a80ce520bc08f0b2df7d2a04b3f5ee34f2","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/RemediationTO.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,18 +21,12 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Date;\n import java.util.Optional;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyUR;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n-@XmlRootElement(name = \"remediation\")\n-@XmlType\n-public class RemediationTO extends BaseBean implements EntityTO {\n+public class RemediationTO implements EntityTO {\n \n     private static final long serialVersionUID = 3983540425142284975L;\n "},{"sha":"344b0a617dd93268ae5dfbe516789b42ed949756","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,25 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.EnumSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-@XmlRootElement(name = \"resource\")\n-@XmlType\n public class ResourceTO implements EntityTO {\n \n     private static final long serialVersionUID = -9193551354041698963L;\n@@ -232,9 +225,6 @@ public Optional<ProvisionTO> getProvision(final String anyType) {\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"provisions\")\n-    @XmlElement(name = \"provision\")\n-    @JsonProperty(\"provisions\")\n     public List<ProvisionTO> getProvisions() {\n         return provisions;\n     }\n@@ -247,9 +237,6 @@ public void setOrgUnit(final OrgUnitTO orgUnit) {\n         this.orgUnit = orgUnit;\n     }\n \n-    @XmlElementWrapper(name = \"confOverride\")\n-    @XmlElement(name = \"property\")\n-    @JsonProperty(\"confOverride\")\n     public List<ConnConfProperty> getConfOverride() {\n         return confOverride;\n     }\n@@ -262,9 +249,6 @@ public void setOverrideCapabilities(final boolean overrideCapabilities) {\n         this.overrideCapabilities = overrideCapabilities;\n     }\n \n-    @XmlElementWrapper(name = \"capabilitiesOverride\")\n-    @XmlElement(name = \"capability\")\n-    @JsonProperty(\"capabilitiesOverride\")\n     public Set<ConnectorCapability> getCapabilitiesOverride() {\n         return capabilitiesOverride;\n     }\n@@ -277,9 +261,6 @@ public void setProvisioningTraceLevel(final TraceLevel provisioningTraceLevel) {\n         this.provisioningTraceLevel = provisioningTraceLevel;\n     }\n \n-    @XmlElementWrapper(name = \"propagationActions\")\n-    @XmlElement(name = \"propagationAction\")\n-    @JsonProperty(\"propagationActions\")\n     public List<String> getPropagationActions() {\n         return propagationActions;\n     }"},{"sha":"e2c7a2ed69f6e99fe5c67e58d136a4f0f83d4035","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfPropSchema.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,15 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement\n-@XmlType\n-public class ConnConfPropSchema implements Serializable, Comparable<ConnConfPropSchema> {\n+public class ConnConfPropSchema implements BaseBean, Comparable<ConnConfPropSchema> {\n \n     private static final long serialVersionUID = -1976365781005801296L;\n \n@@ -107,9 +102,8 @@ public void setConfidential(final boolean confidential) {\n         this.confidential = confidential;\n     }\n \n-    @XmlElementWrapper(name = \"defaultValues\")\n-    @XmlElement(name = \"defaultValue\")\n-    @JsonProperty(\"defaultValues\")\n+    @JacksonXmlElementWrapper(localName = \"defaultValues\")\n+    @JacksonXmlProperty(localName = \"defaultValue\")\n     public List<Object> getDefaultValues() {\n         return defaultValues;\n     }"},{"sha":"b9a931dd2977bebfd7f6f67b5cfd03f11945a4da","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfProperty.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,16 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.ObjectUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement\n-@XmlType\n-public class ConnConfProperty implements Serializable, Comparable<ConnConfProperty> {\n+public class ConnConfProperty implements BaseBean, Comparable<ConnConfProperty> {\n \n     private static final long serialVersionUID = -8391413960221862238L;\n \n@@ -50,9 +45,8 @@ public void setSchema(final ConnConfPropSchema schema) {\n         this.schema = schema;\n     }\n \n-    @XmlElementWrapper(name = \"values\")\n-    @XmlElement(name = \"value\")\n-    @JsonProperty(\"values\")\n+    @JacksonXmlElementWrapper(localName = \"values\")\n+    @JacksonXmlProperty(localName = \"value\")\n     public List<Object> getValues() {\n         return values;\n     }"},{"sha":"1abf35f88a0ac695c4c5f7ed00a06bba3a7fcce2","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/types/ConnectorCapability.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n /**\n  * Enum of all possible capabilities that a connector instance can expose.\n  */\n-@XmlEnum\n public enum ConnectorCapability {\n \n     AUTHENTICATE,"},{"sha":"3efa2a2e4718591a0b88712de5aafd0e56c61d5d","filename":"common/idm/lib/src/test/java/org/apache/syncope/common/lib/JAXBTest.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n-import java.io.StringReader;\n-import java.io.StringWriter;\n-import java.util.UUID;\n-import javax.xml.bind.JAXBContext;\n-import javax.xml.bind.JAXBException;\n-import javax.xml.bind.Marshaller;\n-import javax.xml.bind.Unmarshaller;\n-import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.junit.jupiter.api.Test;\n-\n-public class JAXBTest {\n-\n-    @Test\n-    public void provisioningResult() throws JAXBException {\n-        JAXBContext context = JAXBContext.newInstance(ProvisioningResult.class);\n-        Marshaller marshaller = context.createMarshaller();\n-        Unmarshaller unmarshaller = context.createUnmarshaller();\n-\n-        GroupTO group = new GroupTO();\n-        group.setName(UUID.randomUUID().toString());\n-        group.setRealm(SyncopeConstants.ROOT_REALM);\n-        group.getVirAttrs().add(new Attr.Builder(\"rvirtualdata\").value(\"rvirtualvalue\").build());\n-        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n-\n-        ProvisioningResult<GroupTO> original = new ProvisioningResult<>();\n-        original.setEntity(group);\n-\n-        PropagationStatus status = new PropagationStatus();\n-        status.setFailureReason(\"failed\");\n-        status.setBeforeObj(new ConnObjectTO());\n-        original.getPropagationStatuses().add(status);\n-\n-        StringWriter writer = new StringWriter();\n-        marshaller.marshal(original, writer);\n-\n-        Object actual = unmarshaller.unmarshal(new StringReader(writer.toString()));\n-        assertEquals(original, actual);\n-    }\n-}"},{"sha":"ec2e89bbf5811739c3e2d9a312a625de6b6a793d","filename":"common/idm/lib/src/test/java/org/apache/syncope/common/lib/JSONTest.java","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,62 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.util.UUID;\n-import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.junit.jupiter.api.Test;\n-\n-public class JSONTest {\n-\n-    @Test\n-    public void provisioningResult() throws IOException {\n-        GroupTO group = new GroupTO();\n-        group.setName(UUID.randomUUID().toString());\n-        group.setRealm(SyncopeConstants.ROOT_REALM);\n-        group.getVirAttrs().add(new Attr.Builder(\"rvirtualdata\").value(\"rvirtualvalue\").build());\n-        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n-\n-        ProvisioningResult<GroupTO> original = new ProvisioningResult<>();\n-        original.setEntity(group);\n-\n-        PropagationStatus status = new PropagationStatus();\n-        status.setFailureReason(\"failed\");\n-        status.setBeforeObj(new ConnObjectTO());\n-        original.getPropagationStatuses().add(status);\n-\n-        ObjectMapper mapper = new ObjectMapper();\n-\n-        StringWriter writer = new StringWriter();\n-        mapper.writeValue(writer, original);\n-\n-        ProvisioningResult<GroupTO> actual = mapper.readValue(writer.toString(),\n-                new TypeReference<ProvisioningResult<GroupTO>>() {\n-        });\n-        assertEquals(original, actual);\n-    }\n-}"},{"sha":"8c57f6b797322291c84a750bdbcca6f2f6070d86","filename":"common/idrepo/lib/pom.xml","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -51,12 +51,14 @@ under the License.\n     <dependency>\n       <groupId>com.fasterxml.jackson.core</groupId>\n       <artifactId>jackson-annotations</artifactId>\n-    </dependency>\n-    \n+    </dependency>    \n     <dependency>\n       <groupId>com.fasterxml.jackson.dataformat</groupId>\n       <artifactId>jackson-dataformat-yaml</artifactId>\n-      <version>${jackson.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.dataformat</groupId>\n+      <artifactId>jackson-dataformat-xml</artifactId>\n     </dependency>\n \n     <dependency>\n@@ -73,11 +75,6 @@ under the License.\n       <artifactId>log4j-api</artifactId>\n     </dependency>\n     \n-    <dependency>\n-      <groupId>com.fasterxml.jackson.core</groupId>\n-      <artifactId>jackson-databind</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.junit.jupiter</groupId>\n       <artifactId>junit-jupiter</artifactId>"},{"sha":"a555bff1f12277e19a0269b6c49659cbd9309b3d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/Attr.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,16 @@\n package org.apache.syncope.common.lib;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"attr\")\n-@XmlType\n-public class Attr implements Serializable {\n+public class Attr implements BaseBean {\n \n     private static final long serialVersionUID = 4941691338796323623L;\n \n@@ -79,7 +74,6 @@ public Attr build() {\n      * @return the name of the schema that this attribute is referring to\n      */\n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getSchema() {\n         return schema;\n     }\n@@ -96,9 +90,9 @@ public void setSchema(final String schema) {\n     /**\n      * @return attribute values as strings\n      */\n-    @XmlElementWrapper(name = \"values\", required = true)\n-    @XmlElement(name = \"value\", required = true)\n-    @JsonProperty(value = \"values\", required = true)\n+    @JacksonXmlElementWrapper(localName = \"values\")\n+    @JacksonXmlProperty(localName = \"value\")\n+    @JsonProperty(required = true)\n     public List<String> getValues() {\n         return values;\n     }"},{"sha":"3ff56bda721d947fc1dd6a807d7c3a786df2cddb","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/BaseBean.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FBaseBean.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,18 +19,7 @@\n package org.apache.syncope.common.lib;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.log.AuditEntry;\n-import org.apache.syncope.common.lib.to.AbstractStartEndBean;\n-import org.apache.syncope.common.lib.to.AccessTokenTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.RealmTO;\n \n-@XmlType\n-@XmlSeeAlso({ AbstractStartEndBean.class, AccessTokenTO.class, AuditEntry.class, AnyTO.class, RealmTO.class })\n-public abstract class BaseBean implements Serializable {\n-\n-    private static final long serialVersionUID = 8243277089603485380L;\n+public interface BaseBean extends Serializable {\n \n }"},{"sha":"6f5843ae172bcd1686b8416408737c8142139f61","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -23,10 +23,6 @@\n \n public final class SyncopeConstants {\n \n-    public static final String NS_PREFIX = \"syncope30\";\n-\n-    public static final String NS = \"http://syncope.apache.org/3.0\";\n-\n     public static final String MASTER_DOMAIN = \"Master\";\n \n     public static final String ROOT_REALM = \"/\";"},{"sha":"379df8c70db2a8f9dbdecd1db84f621d4e9ae4ff","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/JavaImplInfo.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,13 @@\n  */\n package org.apache.syncope.common.lib.info;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.HashSet;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"javaImplInfo\")\n-@XmlType\n-public class JavaImplInfo implements Serializable {\n+public class JavaImplInfo implements BaseBean {\n \n     private static final long serialVersionUID = 4036793959111794959L;\n \n@@ -45,9 +40,8 @@ public void setType(final String type) {\n         this.type = type;\n     }\n \n-    @XmlElementWrapper(name = \"classes\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"classes\")\n+    @JacksonXmlElementWrapper(localName = \"classes\")\n+    @JacksonXmlProperty(localName = \"class\")\n     public Set<String> getClasses() {\n         return classes;\n     }"},{"sha":"a2a087410b56059e09a6b70c1a980bbf776524dc","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/NumbersInfo.java","status":"modified","additions":2,"deletions":26,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,26 +18,16 @@\n  */\n package org.apache.syncope.common.lib.info;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"numbersInfo\")\n-@XmlType\n-public class NumbersInfo implements Serializable {\n+public class NumbersInfo implements BaseBean {\n \n     private static final long serialVersionUID = 7691187370598649583L;\n \n-    @XmlEnum\n-    @XmlType(name = \"confItem\")\n     public enum ConfItem {\n \n         RESOURCE(20),\n@@ -67,8 +57,6 @@ public static int getScore(final String name) {\n         }\n     }\n \n-    @XmlRootElement(name = \"taskExecutorInfo\")\n-    @XmlType\n     public class TaskExecutorInfo {\n \n         private int size;\n@@ -144,36 +132,30 @@ public boolean equals(final Object obj) {\n \n     private int totalUsers;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Integer> usersByRealm = new HashMap<>();\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Integer> usersByStatus = new HashMap<>();\n \n     private int totalGroups;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Integer> groupsByRealm = new HashMap<>();\n \n     private String anyType1;\n \n     private Integer totalAny1;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Integer> any1ByRealm = new HashMap<>();\n \n     private String anyType2;\n \n     private Integer totalAny2;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Integer> any2ByRealm = new HashMap<>();\n \n     private int totalResources;\n \n     private int totalRoles;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Boolean> confCompleteness = new HashMap<>();\n \n     private final TaskExecutorInfo asyncConnectorExecutor = new TaskExecutorInfo();\n@@ -244,32 +226,26 @@ public void setTotalRoles(final int totalRoles) {\n         this.totalRoles = totalRoles;\n     }\n \n-    @JsonProperty\n     public Map<String, Integer> getUsersByRealm() {\n         return usersByRealm;\n     }\n \n-    @JsonProperty\n     public Map<String, Integer> getUsersByStatus() {\n         return usersByStatus;\n     }\n \n-    @JsonProperty\n     public Map<String, Integer> getGroupsByRealm() {\n         return groupsByRealm;\n     }\n \n-    @JsonProperty\n     public Map<String, Integer> getAny1ByRealm() {\n         return any1ByRealm;\n     }\n \n-    @JsonProperty\n     public Map<String, Integer> getAny2ByRealm() {\n         return any2ByRealm;\n     }\n \n-    @JsonProperty\n     public Map<String, Boolean> getConfCompleteness() {\n         return confCompleteness;\n     }"},{"sha":"380fd2862edd45fdadd76d437708c28ef66db4c5","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/PlatformInfo.java","status":"modified","additions":23,"deletions":42,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,27 +19,20 @@\n package org.apache.syncope.common.lib.info;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"platformInfo\")\n-@XmlType\n-public class PlatformInfo implements Serializable {\n+public class PlatformInfo implements BaseBean {\n \n     private static final long serialVersionUID = -7941853999417673827L;\n \n-    @XmlRootElement(name = \"provisioningInfo\")\n-    @XmlType\n-    public static class ProvisioningInfo implements Serializable {\n+    public static class ProvisioningInfo implements BaseBean {\n \n         private static final long serialVersionUID = 533340357732839568L;\n \n@@ -114,9 +107,7 @@ public void setAuditManager(final String auditManager) {\n         }\n     }\n \n-    @XmlRootElement(name = \"workflowInfo\")\n-    @XmlType\n-    public static class WorkflowInfo implements Serializable {\n+    public static class WorkflowInfo implements BaseBean {\n \n         private static final long serialVersionUID = 6736937721099195324L;\n \n@@ -151,9 +142,7 @@ public void setGroupWorkflowAdapter(final String groupWorkflowAdapter) {\n         }\n     }\n \n-    @XmlRootElement(name = \"persistenceInfo\")\n-    @XmlType\n-    public static class PersistenceInfo implements Serializable {\n+    public static class PersistenceInfo implements BaseBean {\n \n         private static final long serialVersionUID = 2902980556801069487L;\n \n@@ -316,9 +305,8 @@ public boolean isPwdResetRequiringSecurityQuestions() {\n         return pwdResetRequiringSecurityQuestions;\n     }\n \n-    @XmlElementWrapper(name = \"connIdLocations\")\n-    @XmlElement(name = \"connIdLocation\")\n-    @JsonProperty(\"connIdLocations\")\n+    @JacksonXmlElementWrapper(localName = \"connIdLocations\")\n+    @JacksonXmlProperty(localName = \"connIdLocation\")\n     public Set<String> getConnIdLocations() {\n         return connIdLocations;\n     }\n@@ -331,44 +319,38 @@ public void setPasswordGenerator(final String passwordGenerator) {\n         this.passwordGenerator = passwordGenerator;\n     }\n \n-    @XmlElementWrapper(name = \"anyTypes\")\n-    @XmlElement(name = \"anyType\")\n-    @JsonProperty(\"anyTypes\")\n+    @JacksonXmlElementWrapper(localName = \"anyTypes\")\n+    @JacksonXmlProperty(localName = \"anyType\")\n     public List<String> getAnyTypes() {\n         return anyTypes;\n     }\n \n-    @XmlElementWrapper(name = \"userClasses\")\n-    @XmlElement(name = \"userClass\")\n-    @JsonProperty(\"userClasses\")\n+    @JacksonXmlElementWrapper(localName = \"userClasses\")\n+    @JacksonXmlProperty(localName = \"userClass\")\n     public List<String> getUserClasses() {\n         return userClasses;\n     }\n \n-    @XmlElementWrapper(name = \"anyTypeClasses\")\n-    @XmlElement(name = \"anyTypeClass\")\n-    @JsonProperty(\"anyTypeClasses\")\n+    @JacksonXmlElementWrapper(localName = \"anyTypeClasses\")\n+    @JacksonXmlProperty(localName = \"anyTypeClass\")\n     public List<String> getAnyTypeClasses() {\n         return anyTypeClasses;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public List<String> getResources() {\n         return resources;\n     }\n \n-    @XmlElementWrapper(name = \"entitlements\")\n-    @XmlElement(name = \"entitlement\")\n-    @JsonProperty(\"entitlements\")\n+    @JacksonXmlElementWrapper(localName = \"entitlements\")\n+    @JacksonXmlProperty(localName = \"entitlement\")\n     public Set<String> getEntitlements() {\n         return entitlements;\n     }\n \n-    @XmlElementWrapper(name = \"implementationTypes\")\n-    @XmlElement(name = \"implementationType\")\n-    @JsonProperty(\"implementationTypes\")\n+    @JacksonXmlElementWrapper(localName = \"implementationTypes\")\n+    @JacksonXmlProperty(localName = \"implementationType\")\n     public Set<String> getImplementationTypes() {\n         return implementationTypes;\n     }\n@@ -378,9 +360,8 @@ public Optional<JavaImplInfo> getJavaImplInfo(final String type) {\n         return javaImplInfos.stream().filter(javaImplInfo -> javaImplInfo.getType().equals(type)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"javaImplInfos\")\n-    @XmlElement(name = \"javaImplInfo\")\n-    @JsonProperty(\"javaImplInfos\")\n+    @JacksonXmlElementWrapper(localName = \"javaImplInfos\")\n+    @JacksonXmlProperty(localName = \"javaImplInfo\")\n     public Set<JavaImplInfo> getJavaImplInfos() {\n         return javaImplInfos;\n     }"},{"sha":"2f447969a2e28673c05852f49506c1f4d3b4059c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/SystemInfo.java","status":"modified","additions":3,"deletions":16,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,11 @@\n  */\n package org.apache.syncope.common.lib.info;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n import java.util.Queue;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.collections.CircularFifoQueue;\n \n-@XmlRootElement(name = \"systemInfo\")\n-@XmlType\n-public class SystemInfo implements Serializable {\n+public class SystemInfo implements BaseBean {\n \n     private static final long serialVersionUID = -352727968865892499L;\n \n@@ -85,16 +78,11 @@ public void setStartTime(final long startTime) {\n         this.startTime = startTime;\n     }\n \n-    @XmlElementWrapper(name = \"load\")\n-    @XmlElement(name = \"instant\")\n-    @JsonProperty(\"load\")\n     public Queue<LoadInstant> getLoad() {\n         return load;\n     }\n \n-    @XmlRootElement(name = \"loadInstant\")\n-    @XmlType\n-    public static class LoadInstant implements Serializable {\n+    public static class LoadInstant implements BaseBean {\n \n         private static final long serialVersionUID = 1700788373758716478L;\n \n@@ -148,5 +136,4 @@ public void setMaxMemory(final long maxMemory) {\n             this.maxMemory = maxMemory;\n         }\n     }\n-\n }"},{"sha":"4093ba399cb13ad2742f01e7a7b61dc37e229962","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.info;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"f6d481dc47343f0d4c7d51e59557327db93e455e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/DateAdapter.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FDateAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FDateAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FDateAdapter.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.adapters.XmlAdapter;\n-import org.apache.commons.lang3.time.FastDateFormat;\n-\n-public class DateAdapter extends XmlAdapter<String, Date> {\n-\n-    private static final String DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n-\n-    @Override\n-    public Date unmarshal(final String value) throws Exception {\n-        return FastDateFormat.getInstance(DATE_FORMAT).parse(value);\n-    }\n-\n-    @Override\n-    public String marshal(final Date value) throws Exception {\n-        return FastDateFormat.getInstance(DATE_FORMAT).format(value);\n-    }\n-}"},{"sha":"95ad262925eeff2865a5c5c9f7bce35a4e963e07","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/EntityTOType.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-\n-@XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class, RealmTO.class })\n-@XmlAccessorType(XmlAccessType.PROPERTY)\n-public class EntityTOType {\n-\n-    @XmlEnum\n-    public enum Type {\n-        USER,\n-        GROUP,\n-        ANY_OBJECT,\n-        REALM\n-\n-    }\n-\n-    private Type type;\n-\n-    private Object value;\n-\n-    public Type getType() {\n-        return type;\n-    }\n-\n-    public void setType(final Type type) {\n-        this.type = type;\n-    }\n-\n-    public Object getValue() {\n-        return value;\n-    }\n-\n-    public void setValue(final Object value) {\n-        this.value = value;\n-    }\n-\n-}"},{"sha":"a4188378b545a4d2437215dd7d9bc4dd3b4d145e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/GenericMapEntryType.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapEntryType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapEntryType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapEntryType.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,56 +0,0 @@\n-/*\n- * Copyright 2011 John Yeary <jyeary@bluelotussoftware.com>.\n- * Copyright 2011 Bluelotus Software, LLC.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import java.util.Map;\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlElement;\n-\n-@XmlAccessorType(XmlAccessType.PROPERTY)\n-public class GenericMapEntryType<K, V> {\n-\n-    private K key;\n-\n-    private V value;\n-\n-    public GenericMapEntryType() {\n-    }\n-\n-    public GenericMapEntryType(final Map.Entry<K, V> e) {\n-        key = e.getKey();\n-        value = e.getValue();\n-    }\n-\n-    @XmlElement\n-    public K getKey() {\n-        return key;\n-    }\n-\n-    public void setKey(final K key) {\n-        this.key = key;\n-    }\n-\n-    @XmlElement\n-    public V getValue() {\n-        return value;\n-    }\n-\n-    public void setValue(final V value) {\n-        this.value = value;\n-    }\n-}"},{"sha":"48dca0b722d5282056475a0b960d137a6502651c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/GenericMapType.java","status":"removed","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FGenericMapType.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,44 +0,0 @@\n-/*\n- * Copyright 2011 John Yeary <jyeary@bluelotussoftware.com>.\n- * Copyright 2011 Bluelotus Software, LLC.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-\n-public class GenericMapType<K, V> {\n-\n-    private final List<GenericMapEntryType<K, V>> entry = new ArrayList<>();\n-\n-    public GenericMapType() {\n-    }\n-\n-    public GenericMapType(final Map<K, V> map) {\n-        map.entrySet().forEach(e -> entry.add(new GenericMapEntryType<>(e)));\n-    }\n-\n-    public List<GenericMapEntryType<K, V>> getEntry() {\n-        return entry;\n-    }\n-\n-    public void setEntry(final List<GenericMapEntryType<K, V>> entry) {\n-        this.entry.clear();\n-        if (entry != null) {\n-            this.entry.addAll(entry);\n-        }\n-    }\n-}"},{"sha":"99400fdaa4bad98d2c3ef5f4d6b01789ae5f7e41","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/XmlEntityTOAdapter.java","status":"removed","additions":0,"deletions":65,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,65 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import javax.xml.bind.annotation.adapters.XmlAdapter;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-\n-public class XmlEntityTOAdapter<E extends EntityTO> extends XmlAdapter<EntityTOType, E> {\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public E unmarshal(final EntityTOType v) throws Exception {\n-        E result = null;\n-\n-        switch (v.getType()) {\n-            case USER:\n-            case GROUP:\n-            case ANY_OBJECT:\n-            case REALM:\n-                result = (E) v.getValue();\n-                break;\n-\n-            default:\n-        }\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public EntityTOType marshal(final E v) throws Exception {\n-        EntityTOType result = new EntityTOType();\n-        if (v instanceof UserTO) {\n-            result.setType(EntityTOType.Type.USER);\n-        } else if (v instanceof GroupTO) {\n-            result.setType(EntityTOType.Type.GROUP);\n-        } else if (v instanceof AnyObjectTO) {\n-            result.setType(EntityTOType.Type.ANY_OBJECT);\n-        } else if (v instanceof RealmTO) {\n-            result.setType(EntityTOType.Type.REALM);\n-        }\n-        result.setValue(v);\n-\n-        return result;\n-    }\n-}"},{"sha":"63d6825135d6bdf71ece206c705935a71df2c062","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/XmlGenericMapAdapter.java","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlGenericMapAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlGenericMapAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlGenericMapAdapter.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,47 +0,0 @@\n-/*\n- * Copyright 2011 John Yeary <jyeary@bluelotussoftware.com>.\n- * Copyright 2011 Bluelotus Software, LLC.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-import javax.xml.bind.annotation.adapters.XmlAdapter;\n-\n-public class XmlGenericMapAdapter<K, V> extends XmlAdapter<GenericMapType<K, V>, Map<K, V>> {\n-\n-    @Override\n-    public Map<K, V> unmarshal(final GenericMapType<K, V> v) throws Exception {\n-        Map<K, V> map = new HashMap<>();\n-\n-        v.getEntry().forEach(mapEntryType -> map.put(mapEntryType.getKey(), mapEntryType.getValue()));\n-\n-        return map;\n-    }\n-\n-    @Override\n-    public GenericMapType<K, V> marshal(final Map<K, V> v) throws Exception {\n-        GenericMapType<K, V> mapType = new GenericMapType<>();\n-\n-        v.entrySet().stream().map(entry -> {\n-            GenericMapEntryType<K, V> mapEntryType = new GenericMapEntryType<>();\n-            mapEntryType.setKey(entry.getKey());\n-            mapEntryType.setValue(entry.getValue());\n-            return mapEntryType;\n-        }).forEachOrdered(mapEntryType -> mapType.getEntry().add(mapEntryType));\n-\n-        return mapType;\n-    }\n-}"},{"sha":"53754c971f5cb8a2f4d36a3d929f0fbde8f53d1f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/package-info.java","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,31 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.jaxb;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"ab50384ccb5c090462ff8978c454ab89cefa0864","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/AuditEntry.java","status":"modified","additions":5,"deletions":11,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FAuditEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FAuditEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FAuditEntry.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,18 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n \n-@XmlRootElement(name = \"auditEntry\")\n-@XmlType\n-public class AuditEntry extends BaseBean {\n+public class AuditEntry implements BaseBean {\n \n     private static final long serialVersionUID = 1215115961911228005L;\n \n@@ -88,9 +83,8 @@ public String getBefore() {\n         return before;\n     }\n \n-    @XmlElementWrapper(name = \"inputs\")\n-    @XmlElement(name = \"input\")\n-    @JsonProperty(\"inputs\")\n+    @JacksonXmlElementWrapper(localName = \"inputs\")\n+    @JacksonXmlProperty(localName = \"input\")\n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public List<String> getInputs() {\n         return inputs;"},{"sha":"cf49f981c9f39a223510fd52496c1ec7ee84768f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/EventCategory.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,15 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.AuditElements;\n \n-@XmlRootElement(name = \"eventCategory\")\n-@XmlType\n-public class EventCategory implements Serializable {\n+public class EventCategory implements BaseBean {\n \n     private static final long serialVersionUID = -4340060002701633401L;\n \n@@ -85,9 +79,8 @@ public void setSubcategory(final String subcategory) {\n         this.subcategory = subcategory;\n     }\n \n-    @XmlElementWrapper(name = \"events\")\n-    @XmlElement(name = \"event\")\n-    @JsonProperty(\"events\")\n+    @JacksonXmlElementWrapper(localName = \"events\")\n+    @JacksonXmlProperty(localName = \"event\")\n     public List<String> getEvents() {\n         return events;\n     }"},{"sha":"1d075897b4f6b1e6ae909aa65efd4957d7814332","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/LogAppender.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-public class LogAppender implements Serializable {\n+public class LogAppender implements BaseBean {\n \n     private static final long serialVersionUID = 5975199884460548302L;\n "},{"sha":"64ba4cd219213a07fd3761569134478af536d10c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/LogStatement.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n \n-@XmlRootElement(name = \"logStatement\")\n-@XmlType\n-public class LogStatement implements Serializable {\n+public class LogStatement implements BaseBean {\n \n     private static final long serialVersionUID = -2931205859104653385L;\n "},{"sha":"5646fe017d0497bbf4793e807b995a93f923f813","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/LoggerTO.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,13 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import java.io.Serializable;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n \n-@XmlRootElement(name = \"logger\")\n-@XmlType\n-public class LoggerTO implements Serializable {\n+public class LoggerTO implements BaseBean {\n \n     private static final long serialVersionUID = -7794833835668648505L;\n "},{"sha":"0f715791adea38245c44b23f06fd975bc771b2e3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/log/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.log;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"881423af6acbcf291d4d63ad3e44024dc0c92983","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAccountRuleConf.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ DefaultAccountRuleConf.class })\n-public abstract class AbstractAccountRuleConf implements Serializable, AccountRuleConf {\n+public abstract class AbstractAccountRuleConf implements BaseBean, AccountRuleConf {\n \n     private static final long serialVersionUID = -4080475005967851092L;\n "},{"sha":"e88c84031517ea8664e3e2de0b6d4906e460f937","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractCorrelationRuleConf.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ DefaultPullCorrelationRuleConf.class, DefaultPushCorrelationRuleConf.class })\n-public abstract class AbstractCorrelationRuleConf implements Serializable, RuleConf {\n+public abstract class AbstractCorrelationRuleConf implements BaseBean, RuleConf {\n \n     private static final long serialVersionUID = -4080475005967851092L;\n "},{"sha":"83e2f20da0f9076bb534a0a06ba0c34b851767d2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractPasswordRuleConf.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ DefaultPasswordRuleConf.class })\n-public abstract class AbstractPasswordRuleConf implements Serializable, PasswordRuleConf {\n+public abstract class AbstractPasswordRuleConf implements BaseBean, PasswordRuleConf {\n \n     private static final long serialVersionUID = -5814018872387142339L;\n "},{"sha":"fee5590e5cf08befe3d272d4f00a844ed3f93134","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountPolicyTO.java","status":"modified","additions":9,"deletions":16,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccountPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccountPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccountPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,17 +19,12 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"accountPolicy\")\n-@XmlType\n @Schema(allOf = { PolicyTO.class })\n public class AccountPolicyTO extends PolicyTO implements ComposablePolicy {\n \n@@ -43,9 +38,9 @@ public class AccountPolicyTO extends PolicyTO implements ComposablePolicy {\n \n     private final List<String> passthroughResources = new ArrayList<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.AccountPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.AccountPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -67,17 +62,15 @@ public void setMaxAuthenticationAttempts(final int maxAuthenticationAttempts) {\n         this.maxAuthenticationAttempts = maxAuthenticationAttempts;\n     }\n \n-    @XmlElementWrapper(name = \"rules\")\n-    @XmlElement(name = \"rule\")\n-    @JsonProperty(\"rules\")\n+    @JacksonXmlElementWrapper(localName = \"rules\")\n+    @JacksonXmlProperty(localName = \"rule\")\n     @Override\n     public List<String> getRules() {\n         return rules;\n     }\n \n-    @XmlElementWrapper(name = \"passthroughResources\")\n-    @XmlElement(name = \"passthroughResource\")\n-    @JsonProperty(\"passthroughResources\")\n+    @JacksonXmlElementWrapper(localName = \"passthroughResources\")\n+    @JacksonXmlProperty(localName = \"passthroughResource\")\n     public List<String> getPassthroughResources() {\n         return passthroughResources;\n     }"},{"sha":"ba877f77da4df4ed9a8d2c7f3dfa412a3b0fe1cd","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/ComposablePolicy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FComposablePolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FComposablePolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FComposablePolicy.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import java.io.Serializable;\n import java.util.List;\n+import org.apache.syncope.common.lib.BaseBean;\n \n @FunctionalInterface\n-public interface ComposablePolicy extends Serializable {\n+public interface ComposablePolicy extends BaseBean {\n \n     /**\n      * Return policy rules."},{"sha":"7d0dfa5eeb522a01be096d29e2272b14d100ee3d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccountRuleConf.java","status":"modified","additions":10,"deletions":19,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n-@XmlRootElement(name = \"defaultAccountRuleConf\")\n-@XmlType\n public class DefaultAccountRuleConf extends AbstractAccountRuleConf implements AccountRuleConf {\n \n     private static final long serialVersionUID = 3259256974414758406L;\n@@ -122,30 +117,26 @@ public void setPattern(final String pattern) {\n         this.pattern = pattern;\n     }\n \n-    @XmlElementWrapper(name = \"wordsNotPermitted\")\n-    @XmlElement(name = \"word\")\n-    @JsonProperty(\"wordsNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"wordsNotPermitted\")\n+    @JacksonXmlProperty(localName = \"word\")\n     public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n-    @XmlElement(name = \"prefix\")\n-    @JsonProperty(\"prefixesNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"prefixesNotPermitted\")\n+    @JacksonXmlProperty(localName = \"prefix\")\n     public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"schemasNotPermitted\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemasNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"schemasNotPermitted\")\n+    @JacksonXmlProperty(localName = \"schema\")\n     public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n-    @XmlElement(name = \"suffix\")\n-    @JsonProperty(\"suffixesNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"suffixesNotPermitted\")\n+    @JacksonXmlProperty(localName = \"suffix\")\n     public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\n     }"},{"sha":"b56d7ef9922bd038c459dcbfb190d571894b6c29","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPasswordRuleConf.java","status":"modified","additions":10,"deletions":19,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n-@XmlRootElement(name = \"defaultPasswordRuleConf\")\n-@XmlType\n public class DefaultPasswordRuleConf extends AbstractPasswordRuleConf {\n \n     private static final long serialVersionUID = -7988778083915548547L;\n@@ -317,30 +312,26 @@ public void setUsernameAllowed(final boolean usernameAllowed) {\n         this.usernameAllowed = usernameAllowed;\n     }\n \n-    @XmlElementWrapper(name = \"wordsNotPermitted\")\n-    @XmlElement(name = \"word\")\n-    @JsonProperty(\"wordsNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"wordsNotPermitted\")\n+    @JacksonXmlProperty(localName = \"word\")\n     public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n-    @XmlElement(name = \"prefix\")\n-    @JsonProperty(\"prefixesNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"prefixesNotPermitted\")\n+    @JacksonXmlProperty(localName = \"prefix\")\n     public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"schemasNotPermitted\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemasNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"schemasNotPermitted\")\n+    @JacksonXmlProperty(localName = \"schema\")\n     public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\n     }\n \n-    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n-    @XmlElement(name = \"suffix\")\n-    @JsonProperty(\"suffixesNotPermitted\")\n+    @JacksonXmlElementWrapper(localName = \"suffixesNotPermitted\")\n+    @JacksonXmlProperty(localName = \"suffix\")\n     public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\n     }"},{"sha":"e19003eb1e18fb7c9020a82588ee2352df8b43c4","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPullCorrelationRuleConf.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,11 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"defaultPullCorrelationRuleConf\")\n-@XmlType\n public class DefaultPullCorrelationRuleConf extends AbstractCorrelationRuleConf implements PullCorrelationRuleConf {\n \n     private static final long serialVersionUID = 429126085793346273L;\n@@ -44,9 +39,8 @@ public void setOrSchemas(final boolean orSchemas) {\n         this.orSchemas = orSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"schemas\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemas\")\n+    @JacksonXmlElementWrapper(localName = \"schemas\")\n+    @JacksonXmlProperty(localName = \"schema\")\n     public List<String> getSchemas() {\n         return schemas;\n     }"},{"sha":"b8a7974a2022f3d4fa6a7a021023c878d8ac5308","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPushCorrelationRuleConf.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,11 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"defaultPushCorrelationRuleConf\")\n-@XmlType\n public class DefaultPushCorrelationRuleConf extends AbstractCorrelationRuleConf implements PushCorrelationRuleConf {\n \n     private static final long serialVersionUID = 429126085793346273L;\n@@ -44,9 +39,8 @@ public void setOrSchemas(final boolean orSchemas) {\n         this.orSchemas = orSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"schemas\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemas\")\n+    @JacksonXmlElementWrapper(localName = \"schemas\")\n+    @JacksonXmlProperty(localName = \"schema\")\n     public List<String> getSchemas() {\n         return schemas;\n     }"},{"sha":"ec38b311db7af3f5ba789fe2b9b92f604a12406e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/HaveIBeenPwnedPasswordRuleConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHaveIBeenPwnedPasswordRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHaveIBeenPwnedPasswordRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHaveIBeenPwnedPasswordRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"haveIBeenPwnedPasswordRuleConf\")\n-@XmlType\n public class HaveIBeenPwnedPasswordRuleConf extends AbstractPasswordRuleConf {\n \n     private static final long serialVersionUID = -8962889598888347921L;"},{"sha":"7f2ef4f0f6caec0007aa4c0f5062c5345f555b5b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordPolicyTO.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,19 +19,14 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import io.swagger.v3.oas.annotations.media.Schema;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"passwordPolicy\")\n-@XmlType\n @Schema(allOf = { PolicyTO.class })\n public class PasswordPolicyTO extends PolicyTO implements ComposablePolicy {\n \n@@ -43,9 +38,9 @@ public class PasswordPolicyTO extends PolicyTO implements ComposablePolicy {\n \n     private final List<String> rules = new ArrayList<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.PasswordPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.PasswordPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -67,9 +62,8 @@ public void setHistoryLength(final int historyLength) {\n         this.historyLength = historyLength;\n     }\n \n-    @XmlElementWrapper(name = \"rules\")\n-    @XmlElement(name = \"rule\")\n-    @JsonProperty(\"rules\")\n+    @JacksonXmlElementWrapper(localName = \"rules\")\n+    @JacksonXmlProperty(localName = \"rule\")\n     @Override\n     public List<String> getRules() {\n         return rules;"},{"sha":"fc303d0fa5d7ee8fe1fc018fa583bc29c335f8df","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":12,"deletions":22,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,34 +21,27 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.EntityTO;\n \n-@XmlRootElement(name = \"policy\")\n-@XmlType\n-@XmlSeeAlso({ AccountPolicyTO.class, PasswordPolicyTO.class, ProvisioningPolicyTO.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\", \"description\" })\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\", \"description\" })\n @Schema(\n         subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class, PullPolicyTO.class },\n-        discriminatorProperty = \"@class\")\n+        discriminatorProperty = \"_class\")\n public abstract class PolicyTO implements EntityTO {\n \n     private static final long serialVersionUID = -2903888572649721035L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String key;\n@@ -59,7 +52,7 @@ public abstract class PolicyTO implements EntityTO {\n \n     private final List<String> usedByRealms = new ArrayList<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n@@ -79,7 +72,6 @@ public void setKey(final String key) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getDescription() {\n         return description;\n     }\n@@ -89,17 +81,15 @@ public void setDescription(final String description) {\n     }\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    @XmlElementWrapper(name = \"usedByResources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"usedByResources\")\n+    @JacksonXmlElementWrapper(localName = \"usedByResources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public List<String> getUsedByResources() {\n         return usedByResources;\n     }\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    @XmlElementWrapper(name = \"usedByRealms\")\n-    @XmlElement(name = \"group\")\n-    @JsonProperty(\"usedByRealms\")\n+    @JacksonXmlElementWrapper(localName = \"usedByRealms\")\n+    @JacksonXmlProperty(localName = \"group\")\n     public List<String> getUsedByRealms() {\n         return usedByRealms;\n     }"},{"sha":"548a402f8ccb530c4b1d420b96533789686423bc","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/ProvisioningPolicyTO.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,28 +18,19 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n \n-@XmlType\n-@XmlSeeAlso({ PullPolicyTO.class, PushPolicyTO.class })\n @Schema(allOf = { PolicyTO.class })\n public abstract class ProvisioningPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -3786048942148269602L;\n \n     private ConflictResolutionAction conflictResolutionAction;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> correlationRules = new HashMap<>();\n \n     public ConflictResolutionAction getConflictResolutionAction() {\n@@ -50,7 +41,6 @@ public void setConflictResolutionAction(final ConflictResolutionAction conflictR\n         this.conflictResolutionAction = conflictResolutionAction;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getCorrelationRules() {\n         return correlationRules;\n     }"},{"sha":"1cd2939870b8c24e1e086702a28359e0f38e9e0b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PullPolicyTO.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,17 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"pullPolicy\")\n-@XmlType\n-@Schema(allOf = { ProvisioningPolicyTO.class, PolicyTO.class })\n+@Schema(allOf = { ProvisioningPolicyTO.class })\n public class PullPolicyTO extends ProvisioningPolicyTO {\n \n     private static final long serialVersionUID = 993024634238024242L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.PullPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.PullPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"8b958d4c3ef31fd0871ec87b1f5a75618fbbc46f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PushPolicyTO.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,17 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"pushPolicy\")\n-@XmlType\n-@Schema(allOf = { ProvisioningPolicyTO.class, PolicyTO.class })\n+@Schema(allOf = { ProvisioningPolicyTO.class })\n public class PushPolicyTO extends ProvisioningPolicyTO {\n \n     private static final long serialVersionUID = 993024634238024242L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.policy.PushPolicyTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.PushPolicyTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"795c0bb2e1c5f810bf6e25d0dae52cd0673bd05d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/RuleConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRuleConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n @FunctionalInterface\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface RuleConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface RuleConf extends BaseBean {\n \n     /**\n      * Give name of related rule instance."},{"sha":"1850d20478e494274e2be4d9dfc5183b07d4891e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.policy;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"11026aaf89fc659605918b8381cb8950be81b63f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractAnyReportletConf.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType\n public abstract class AbstractAnyReportletConf extends AbstractReportletConf {\n \n     private static final long serialVersionUID = -5388597116592877789L;"},{"sha":"975fb70327d7469ccf275d239824851e00a6ae4b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractReportletConf.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,10 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({\n-    StaticReportletConf.class, UserReportletConf.class, GroupReportletConf.class,\n-    AuditReportletConf.class, ReconciliationReportletConf.class })\n-public abstract class AbstractReportletConf implements Serializable, ReportletConf {\n+public abstract class AbstractReportletConf implements BaseBean, ReportletConf {\n \n     private static final long serialVersionUID = -6130008602014516608L;\n "},{"sha":"e248bb5b168bd1d668f0c527eb9bf6f2c7aaafdf","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/AuditReportletConf.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAuditReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAuditReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAuditReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"auditReportletConf\")\n-@XmlType\n public class AuditReportletConf extends AbstractReportletConf {\n \n     private static final long serialVersionUID = -4814950086361753689L;\n@@ -44,5 +39,4 @@ public int getSize() {\n     public void setSize(final int size) {\n         this.size = size;\n     }\n-\n }"},{"sha":"ad0aec3a8f4a5a0425a1bc9691b8df6d8852df89","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/GroupReportletConf.java","status":"modified","additions":10,"deletions":22,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,26 +18,18 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import org.apache.syncope.common.lib.Schema;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n-@XmlRootElement(name = \"groupReportletConf\")\n-@XmlType\n public class GroupReportletConf extends AbstractAnyReportletConf {\n \n     private static final long serialVersionUID = -8488503068032439699L;\n \n-    @XmlEnum\n-    @XmlType(name = \"groupReportletConfFeature\")\n     public enum Feature {\n \n         key,\n@@ -71,23 +63,20 @@ public void setMatchingCond(final String matchingCond) {\n         this.matchingCond = matchingCond;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     public List<String> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"derAttrs\")\n+    @JacksonXmlProperty(localName = \"derAttr\")\n     public List<String> getDerAttrs() {\n         return derAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     public List<String> getVirAttrs() {\n         return virAttrs;\n     }\n@@ -100,9 +89,8 @@ public GroupReportletConf(final String name) {\n         super(name);\n     }\n \n-    @XmlElementWrapper(name = \"features\")\n-    @XmlElement(name = \"feature\")\n-    @JsonProperty(\"features\")\n+    @JacksonXmlElementWrapper(localName = \"features\")\n+    @JacksonXmlProperty(localName = \"feature\")\n     public List<Feature> getFeatures() {\n         return features;\n     }"},{"sha":"e2fb8f40211b03e65bb0270f99568147f0043ffa","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/ReconciliationReportletConf.java","status":"modified","additions":5,"deletions":14,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,15 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"reconciliationReportletConf\")\n-@XmlType\n+\n public class ReconciliationReportletConf extends AbstractReportletConf {\n \n     private static final long serialVersionUID = 6602717600064602764L;\n \n-    @XmlEnum\n-    @XmlType(name = \"reconciliationReportletConfFeature\")\n     public enum Feature {\n \n         key,\n@@ -92,9 +84,8 @@ public void setAnyObjectMatchingCond(final String anyObjectMatchingCond) {\n         this.anyObjectMatchingCond = anyObjectMatchingCond;\n     }\n \n-    @XmlElementWrapper(name = \"features\")\n-    @XmlElement(name = \"feature\")\n-    @JsonProperty(\"features\")\n+    @JacksonXmlElementWrapper(localName = \"features\")\n+    @JacksonXmlProperty(localName = \"feature\")\n     public List<Feature> getFeatures() {\n         return features;\n     }"},{"sha":"0f3777f2a0e5642b8b920d24a040b4783d9d625a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/ReportletConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.common.lib.report;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n @FunctionalInterface\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public interface ReportletConf extends Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface ReportletConf extends BaseBean {\n \n     /**\n      * Give name of related reportlet instance."},{"sha":"23adbeac45a612b853cc1569b9e89a62e4cb37c0","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/StaticReportletConf.java","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,14 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-@XmlRootElement(name = \"staticReportletConf\")\n-@XmlType\n public class StaticReportletConf extends AbstractReportletConf {\n \n     private static final long serialVersionUID = -4814950086361753689L;\n@@ -72,9 +66,8 @@ public void setDoubleField(final Double doubleField) {\n         this.doubleField = doubleField;\n     }\n \n-    @XmlElementWrapper(name = \"listField\")\n-    @XmlElement(name = \"field\")\n-    @JsonProperty(\"listField\")\n+    @JacksonXmlElementWrapper(localName = \"listField\")\n+    @JacksonXmlProperty(localName = \"field\")\n     public List<String> getListField() {\n         return listField;\n     }"},{"sha":"1c50bf354886e1d818b6ea22f803f268c3f797ec","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/UserReportletConf.java","status":"modified","additions":10,"deletions":23,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,14 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n-@XmlRootElement(name = \"userReportletConf\")\n-@XmlType\n public class UserReportletConf extends AbstractAnyReportletConf {\n \n     private static final long serialVersionUID = 6602717600064602764L;\n@@ -45,8 +39,6 @@ public class UserReportletConf extends AbstractAnyReportletConf {\n     @Schema(anyTypeKind = AnyTypeKind.USER, type = { SchemaType.VIRTUAL })\n     private final List<String> virAttrs = new ArrayList<>();\n \n-    @XmlEnum\n-    @XmlType(name = \"userReportletConfFeature\")\n     public enum Feature {\n \n         key,\n@@ -69,23 +61,20 @@ public enum Feature {\n     @SearchCondition(type = \"USER\")\n     protected String matchingCond;\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     public List<String> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"derAttrs\")\n+    @JacksonXmlProperty(localName = \"derAttr\")\n     public List<String> getDerAttrs() {\n         return derAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     public List<String> getVirAttrs() {\n         return virAttrs;\n     }\n@@ -108,11 +97,9 @@ public void setMatchingCond(final String matchingCond) {\n         this.matchingCond = matchingCond;\n     }\n \n-    @XmlElementWrapper(name = \"features\")\n-    @XmlElement(name = \"feature\")\n-    @JsonProperty(\"features\")\n+    @JacksonXmlElementWrapper(localName = \"features\")\n+    @JacksonXmlProperty(localName = \"feature\")\n     public List<Feature> getFeatures() {\n         return features;\n     }\n-\n }"},{"sha":"cd2f3675ce449d642bc3e2955176f0aeb42fafe7","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/report/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.report;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"00a118d19108bc6709cb4c2a34e57b42e784cf4e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AbstractPatch.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatch.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,16 +18,12 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.PatchOperation;\n \n-@XmlType\n-@XmlSeeAlso({ AbstractPatchItem.class, AttrPatch.class, MembershipUR.class, RelationshipUR.class })\n-public abstract class AbstractPatch implements Serializable {\n+public abstract class AbstractPatch implements BaseBean {\n \n     private static final long serialVersionUID = -4729181508529829580L;\n "},{"sha":"2ef71385abd2c56f5f4ad7a264f39af107ddf8f4","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AbstractPatchItem.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractPatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,14 +19,9 @@\n package org.apache.syncope.common.lib.request;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlType\n-@XmlSeeAlso({ AbstractReplacePatchItem.class, LongPatchItem.class, StringPatchItem.class })\n public abstract class AbstractPatchItem<T> extends AbstractPatch {\n \n     private static final long serialVersionUID = -8889326446009942028L;\n@@ -44,7 +39,6 @@ public B value(final T value) {\n     private T value;\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public T getValue() {\n         return value;\n     }"},{"sha":"11832982a18e676aee8360e40169b27015ec03ec","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AbstractReplacePatchItem.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAbstractReplacePatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n \n /**\n@@ -29,8 +27,6 @@\n  *\n  * @param <T> {@code String}, {@code Boolean}\n  */\n-@XmlType\n-@XmlSeeAlso({ BooleanReplacePatchItem.class, StringReplacePatchItem.class })\n public abstract class AbstractReplacePatchItem<T> extends AbstractPatchItem<T> {\n \n     private static final long serialVersionUID = 2027599764019829563L;"},{"sha":"7b658380766a3e38e85e2a855ba8ce0c3b1d5c60","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AnyCR.java","status":"modified","additions":16,"deletions":29,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyCR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -22,29 +22,24 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.RealmMember;\n \n-@XmlType\n-@XmlSeeAlso({ UserUR.class, GroupUR.class, AnyObjectUR.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\" })\n-@Schema(subTypes = { UserCR.class, GroupCR.class, AnyObjectCR.class }, discriminatorProperty = \"@class\")\n-public abstract class AnyCR implements Serializable, RealmMember {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\" })\n+@Schema(subTypes = { UserCR.class, GroupCR.class, AnyObjectCR.class }, discriminatorProperty = \"_class\")\n+public abstract class AnyCR implements BaseBean, RealmMember {\n \n     private static final long serialVersionUID = -1180587903919947455L;\n \n@@ -142,8 +137,8 @@ public R build() {\n         }\n     }\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String realm;\n@@ -156,15 +151,14 @@ public R build() {\n \n     private final Set<String> resources = new HashSet<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     @Override\n     public String getRealm() {\n         return realm;\n@@ -175,9 +169,6 @@ public void setRealm(final String realm) {\n         this.realm = realm;\n     }\n \n-    @XmlElementWrapper(name = \"auxClasses\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"auxClasses\")\n     @Override\n     public Set<String> getAuxClasses() {\n         return auxClasses;\n@@ -189,9 +180,8 @@ public Optional<Attr> getPlainAttr(final String schema) {\n         return plainAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     @Override\n     public Set<Attr> getPlainAttrs() {\n         return plainAttrs;\n@@ -203,7 +193,6 @@ public Optional<Attr> getDerAttr(final String schema) {\n         return Optional.empty();\n     }\n \n-    @XmlTransient\n     @JsonIgnore\n     @Override\n     public Set<Attr> getDerAttrs() {\n@@ -216,17 +205,15 @@ public Optional<Attr> getVirAttr(final String schema) {\n         return virAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     @Override\n     public Set<Attr> getVirAttrs() {\n         return virAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     @Override\n     public Set<String> getResources() {\n         return resources;"},{"sha":"7d80f39145be117850a84846308f68b9513fc76f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AnyObjectCR.java","status":"modified","additions":10,"deletions":17,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,24 +21,20 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n \n-@XmlRootElement(name = \"anyObjectCR\")\n-@XmlType\n-@JsonPropertyOrder(value = { \"@class\", \"name\" })\n+@JsonPropertyOrder(value = { \"_class\", \"name\" })\n @Schema(allOf = { AnyCR.class })\n public class AnyObjectCR extends AnyCR implements GroupableRelatableTO {\n \n@@ -96,15 +92,15 @@ public Builder memberships(final Collection<MembershipTO> memberships) {\n \n     private final List<MembershipTO> memberships = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.AnyObjectCR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.AnyObjectCR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getType() {\n         return type;\n     }\n@@ -114,7 +110,6 @@ public void setType(final String type) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getName() {\n         return name;\n     }\n@@ -131,9 +126,8 @@ public Optional<RelationshipTO> getRelationship(final String type, final String\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     @Override\n     public List<RelationshipTO> getRelationships() {\n         return relationships;\n@@ -145,9 +139,8 @@ public Optional<MembershipTO> getMembership(final String groupKey) {\n         return memberships.stream().filter(membership -> groupKey.equals(membership.getGroupKey())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     @Override\n     public List<MembershipTO> getMemberships() {\n         return memberships;"},{"sha":"893852eb4f913b3dd7432123da07e87c4dedb71d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AnyObjectUR.java","status":"modified","additions":9,"deletions":15,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,16 @@\n package org.apache.syncope.common.lib.request;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"anyObjectUR\")\n-@XmlType\n @Schema(allOf = { AnyUR.class })\n public class AnyObjectUR extends AnyUR {\n \n@@ -92,8 +87,9 @@ public Builder memberships(final Collection<MembershipUR> memberships) {\n \n     private final Set<MembershipUR> memberships = new HashSet<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.AnyObjectUR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.AnyObjectUR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -107,16 +103,14 @@ public void setName(final StringReplacePatchItem name) {\n         this.name = name;\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     public Set<RelationshipUR> getRelationships() {\n         return relationships;\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     public Set<MembershipUR> getMemberships() {\n         return memberships;\n     }"},{"sha":"cf92b34c348800f4512f5c3160d90851b16c4f22","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AnyUR.java","status":"modified","additions":18,"deletions":28,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -22,28 +22,23 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ UserUR.class, GroupUR.class, AnyObjectUR.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\" })\n-@Schema(subTypes = { UserUR.class, GroupUR.class, AnyObjectUR.class }, discriminatorProperty = \"@class\")\n-public abstract class AnyUR implements Serializable {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\" })\n+@Schema(subTypes = { UserUR.class, GroupUR.class, AnyObjectUR.class }, discriminatorProperty = \"_class\")\n+public abstract class AnyUR implements BaseBean {\n \n     private static final long serialVersionUID = -7445489774552440544L;\n \n@@ -147,8 +142,8 @@ public R build() {\n         }\n     }\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String key;\n@@ -163,15 +158,14 @@ public R build() {\n \n     private final Set<StringPatchItem> resources = new HashSet<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getKey() {\n         return key;\n     }\n@@ -189,30 +183,26 @@ public void setRealm(final StringReplacePatchItem realm) {\n         this.realm = realm;\n     }\n \n-    @XmlElementWrapper(name = \"auxClasses\")\n-    @XmlElement(name = \"auxClass\")\n-    @JsonProperty(\"auxClasses\")\n+    @JacksonXmlElementWrapper(localName = \"auxClasses\")\n+    @JacksonXmlProperty(localName = \"auxClass\")\n     public Set<StringPatchItem> getAuxClasses() {\n         return auxClasses;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     public Set<AttrPatch> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     public Set<Attr> getVirAttrs() {\n         return virAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public Set<StringPatchItem> getResources() {\n         return resources;\n     }"},{"sha":"1da239df121111d9a19c7f2c50e1c7ba97dae90e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AttrPatch.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAttrPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAttrPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAttrPatch.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,14 +19,10 @@\n package org.apache.syncope.common.lib.request;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n \n-@XmlRootElement(name = \"attrPatch\")\n-@XmlType\n public class AttrPatch extends AbstractPatch {\n \n     private static final long serialVersionUID = 6881634224246176673L;"},{"sha":"f0a3fb3ea95951d08c2ed8aef721eada621bc0b9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/BooleanReplacePatchItem.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FBooleanReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FBooleanReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FBooleanReplacePatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"booleanReplacePatchItem\")\n-@XmlType\n public class BooleanReplacePatchItem extends AbstractReplacePatchItem<Boolean> {\n \n     private static final long serialVersionUID = 4013349284181583101L;"},{"sha":"c47edbb300fcca315432fd0fb85fe5644217b51b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/GroupCR.java","status":"modified","additions":8,"deletions":17,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupCR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,25 +20,19 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n \n-@XmlRootElement(name = \"groupCR\")\n-@XmlType\n-@JsonPropertyOrder(value = { \"@class\", \"name\" })\n+@JsonPropertyOrder(value = { \"_class\", \"name\" })\n @Schema(allOf = { AnyCR.class })\n public class GroupCR extends AnyCR {\n \n@@ -100,20 +94,19 @@ public Builder typeExtensions(final Collection<TypeExtensionTO> typeExtensions)\n \n     private String udynMembershipCond;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> adynMembershipConds = new HashMap<>();\n \n     private final List<TypeExtensionTO> typeExtensions = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.GroupCR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.GroupCR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getName() {\n         return name;\n     }\n@@ -146,14 +139,12 @@ public void setUDynMembershipCond(final String uDynMembershipCond) {\n         this.udynMembershipCond = uDynMembershipCond;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getADynMembershipConds() {\n         return adynMembershipConds;\n     }\n \n-    @XmlElementWrapper(name = \"typeExtensions\")\n-    @XmlElement(name = \"typeExtension\")\n-    @JsonProperty(\"typeExtensions\")\n+    @JacksonXmlElementWrapper(localName = \"typeExtensions\")\n+    @JacksonXmlProperty(localName = \"typeExtension\")\n     public List<TypeExtensionTO> getTypeExtensions() {\n         return typeExtensions;\n     }"},{"sha":"34cc36a1d42273465b947d41e2964a6fc075948d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/GroupUR.java","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,25 +20,19 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n \n-@XmlRootElement(name = \"groupUR\")\n-@XmlType\n @Schema(allOf = { AnyUR.class })\n public class GroupUR extends AnyUR {\n \n@@ -104,13 +98,13 @@ public Builder typeExtensions(final Collection<TypeExtensionTO> typeExtensions)\n \n     private String udynMembershipCond;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> adynMembershipConds = new HashMap<>();\n \n     private final List<TypeExtensionTO> typeExtensions = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.GroupUR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.GroupUR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -148,7 +142,6 @@ public void setUDynMembershipCond(final String udynMembershipCond) {\n         this.udynMembershipCond = udynMembershipCond;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getADynMembershipConds() {\n         return adynMembershipConds;\n     }\n@@ -159,9 +152,8 @@ public Optional<TypeExtensionTO> getTypeExtension(final String anyType) {\n                 typeExtension -> anyType != null && anyType.equals(typeExtension.getAnyType())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"typeExtensions\")\n-    @XmlElement(name = \"typeExtension\")\n-    @JsonProperty(\"typeExtensions\")\n+    @JacksonXmlElementWrapper(localName = \"typeExtensions\")\n+    @JacksonXmlProperty(localName = \"typeExtension\")\n     public List<TypeExtensionTO> getTypeExtensions() {\n         return typeExtensions;\n     }"},{"sha":"6156001460945f456ccfdedd4f3ea3666b67b8a2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/LinkedAccountUR.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLinkedAccountUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLinkedAccountUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLinkedAccountUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n \n-@XmlRootElement(name = \"linkedAccountPatch\")\n-@XmlType\n public class LinkedAccountUR extends AbstractPatch {\n \n     private static final long serialVersionUID = 7848357705991620487L;"},{"sha":"56609cd91c47cb326b3efc93b9caf94d66cd7e2f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/LongPatchItem.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLongPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLongPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FLongPatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"stringPatchItem\")\n-@XmlType\n public class LongPatchItem extends AbstractPatchItem<Long> {\n \n     private static final long serialVersionUID = 7308597905137875993L;"},{"sha":"2ec0c7fc235a0c6e1b45f9f4cd29bc6ee2c71d8b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/MembershipUR.java","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FMembershipUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FMembershipUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FMembershipUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,22 +18,16 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n \n-@XmlRootElement(name = \"membershipUR\")\n-@XmlType\n public class MembershipUR extends AbstractPatch {\n \n     private static final long serialVersionUID = -6783121761221554433L;\n@@ -95,16 +89,14 @@ public void setGroup(final String group) {\n         this.group = group;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     public Set<Attr> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     public Set<Attr> getVirAttrs() {\n         return virAttrs;\n     }"},{"sha":"c681ede524975aa7e0410e5722511537d3a03be9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/PasswordPatch.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FPasswordPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FPasswordPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FPasswordPatch.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,14 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"passwordPatch\")\n-@XmlType\n-@XmlSeeAlso({ ResourceAR.class, StatusR.class })\n public class PasswordPatch extends StringReplacePatchItem {\n \n     private static final long serialVersionUID = 961023537479513071L;\n@@ -88,9 +81,8 @@ public void setOnSyncope(final boolean onSyncope) {\n         this.onSyncope = onSyncope;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public List<String> getResources() {\n         return resources;\n     }"},{"sha":"45da77ad5f93a7cc133675af3d4f62a9eaae65e2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/RelationshipUR.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FRelationshipUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FRelationshipUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FRelationshipUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n \n-@XmlRootElement(name = \"relationshipUR\")\n-@XmlType\n public class RelationshipUR extends AbstractPatch {\n \n     private static final long serialVersionUID = 1314175521205206511L;"},{"sha":"1caad4d35486fb36ba086ec7357c21c875537140","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/ResourceAR.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceAR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceAR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceAR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,17 +20,13 @@\n \n import java.util.Collection;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n \n /**\n  * Resource Association Request.\n  */\n-@XmlRootElement(name = \"resourceAR\")\n-@XmlType\n public class ResourceAR extends PasswordPatch {\n \n     private static final long serialVersionUID = 6295778399633883767L;"},{"sha":"481742f5f97e79e60231ff6dc8a6f802396c077d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/ResourceDR.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceDR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceDR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FResourceDR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,24 +18,19 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n \n /**\n  * Resource De-association Request.\n  */\n-@XmlRootElement(name = \"resourceDR\")\n-@XmlType\n-public class ResourceDR implements Serializable {\n+public class ResourceDR implements BaseBean {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n \n@@ -105,9 +100,8 @@ public void setAction(final ResourceDeassociationAction action) {\n         this.action = action;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public List<String> getResources() {\n         return resources;\n     }"},{"sha":"ea68c497353385b90ab89437bf3fadcfc651f057","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/StatusR.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,14 +20,10 @@\n \n import java.util.Collection;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.StatusRType;\n \n-@XmlRootElement(name = \"statusR\")\n-@XmlType\n public class StatusR extends PasswordPatch {\n \n     private static final long serialVersionUID = 99309988426922612L;"},{"sha":"c5ade296826f45fa9d0f89d1247c1f6582adb23a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/StringPatchItem.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringPatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"stringPatchItem\")\n-@XmlType\n public class StringPatchItem extends AbstractPatchItem<String> {\n \n     private static final long serialVersionUID = -4956965404796800689L;"},{"sha":"dcf363ef1206ef5eb4e36458c8ec981c825b8b75","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/StringReplacePatchItem.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStringReplacePatchItem.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,6 @@\n  */\n package org.apache.syncope.common.lib.request;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"stringReplacePatchItem\")\n-@XmlType\n-@XmlSeeAlso({ PasswordPatch.class })\n public class StringReplacePatchItem extends AbstractReplacePatchItem<String> {\n \n     private static final long serialVersionUID = -5631052324901928363L;"},{"sha":"e8ba7a932a6c311e225c37286bdd4c232a02697a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/UserCR.java","status":"modified","additions":14,"deletions":22,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,27 +21,23 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n \n-@XmlRootElement(name = \"userCR\")\n-@XmlType\n-@JsonPropertyOrder(value = { \"@class\", \"username\" })\n+@JsonPropertyOrder(value = { \"_class\", \"username\" })\n @Schema(allOf = { AnyCR.class })\n public class UserCR extends AnyCR implements GroupableRelatableTO {\n \n@@ -165,15 +161,15 @@ public Builder linkedAccounts(final Collection<LinkedAccountTO> linkedAccounts)\n \n     private final List<LinkedAccountTO> linkedAccounts = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.UserCR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.UserCR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getUsername() {\n         return username;\n     }\n@@ -230,9 +226,8 @@ public Optional<RelationshipTO> getRelationship(final String type, final String\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     @Override\n     public List<RelationshipTO> getRelationships() {\n         return relationships;\n@@ -244,9 +239,8 @@ public Optional<MembershipTO> getMembership(final String groupKey) {\n         return memberships.stream().filter(membership -> groupKey.equals(membership.getGroupKey())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     @Override\n     public List<MembershipTO> getMemberships() {\n         return memberships;\n@@ -257,16 +251,14 @@ public List<MembershipTO> getDynMemberships() {\n         return List.of();\n     }\n \n-    @XmlElementWrapper(name = \"roles\")\n-    @XmlElement(name = \"role\")\n-    @JsonProperty(\"roles\")\n+    @JacksonXmlElementWrapper(localName = \"roles\")\n+    @JacksonXmlProperty(localName = \"role\")\n     public Set<String> getRoles() {\n         return roles;\n     }\n \n-    @XmlElementWrapper(name = \"linkedAccounts\")\n-    @XmlElement(name = \"linkedAccount\")\n-    @JsonProperty(\"linkedAccounts\")\n+    @JacksonXmlElementWrapper(localName = \"linkedAccounts\")\n+    @JacksonXmlProperty(localName = \"linkedAccount\")\n     public List<LinkedAccountTO> getLinkedAccounts() {\n         return linkedAccounts;\n     }"},{"sha":"3fa32da3f5efa1efb25e56fa3763f4375bda3886","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/UserUR.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserUR.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,17 @@\n package org.apache.syncope.common.lib.request;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Collection;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"userUR\")\n-@XmlType\n @Schema(allOf = { AnyUR.class })\n public class UserUR extends AnyUR {\n \n@@ -139,8 +135,9 @@ public Builder roles(final Collection<StringPatchItem> roles) {\n \n     private final List<LinkedAccountUR> linkedAccounts = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.request.UserUR\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.request.UserUR\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -186,30 +183,26 @@ public void setMustChangePassword(final BooleanReplacePatchItem mustChangePasswo\n         this.mustChangePassword = mustChangePassword;\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     public Set<RelationshipUR> getRelationships() {\n         return relationships;\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     public Set<MembershipUR> getMemberships() {\n         return memberships;\n     }\n \n-    @XmlElementWrapper(name = \"roles\")\n-    @XmlElement(name = \"role\")\n-    @JsonProperty(\"roles\")\n+    @JacksonXmlElementWrapper(localName = \"roles\")\n+    @JacksonXmlProperty(localName = \"role\")\n     public Set<StringPatchItem> getRoles() {\n         return roles;\n     }\n \n-    @XmlElementWrapper(name = \"linkedAccounts\")\n-    @XmlElement(name = \"linkedAccount\")\n-    @JsonProperty(\"linkedAccounts\")\n+    @JacksonXmlElementWrapper(localName = \"linkedAccounts\")\n+    @JacksonXmlProperty(localName = \"linkedAccount\")\n     public List<LinkedAccountUR> getLinkedAccounts() {\n         return linkedAccounts;\n     }"},{"sha":"4f2bccf9448dbcd2a621be469903eddbb70f4ba3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.request;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"6ddeaf8b6f37e9e2fbcee34e13153ab0aa8be1c5","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/search/AbstractFiqlSearchConditionBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,20 @@\n  */\n package org.apache.syncope.common.lib.search;\n \n-import java.io.Serializable;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import org.apache.cxf.jaxrs.ext.search.SearchUtils;\n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n import org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder;\n import org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser;\n+import org.apache.syncope.common.lib.BaseBean;\n \n public abstract class AbstractFiqlSearchConditionBuilder<\n         P extends SyncopeProperty<C>,\n         PA extends SyncopePartialCondition<P, C>, \n         C extends SyncopeCompleteCondition<PA, P>>\n-        extends FiqlSearchConditionBuilder implements Serializable {\n+        extends FiqlSearchConditionBuilder implements BaseBean {\n \n     private static final long serialVersionUID = 9043884238032703381L;\n "},{"sha":"e510f6fe818090b1dc605b0a99fd2048f9d65fa8","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/search/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.search;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"5a36ebb085b10703edbc27dbbfd4a9b5cd2efe72","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractStartEndBean.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,15 +21,11 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Date;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlType\n-@XmlSeeAlso({ ExecTO.class, ReportTO.class, TaskTO.class })\n-public class AbstractStartEndBean extends BaseBean {\n+public class AbstractStartEndBean implements BaseBean {\n \n     private static final long serialVersionUID = 2399577415544539917L;\n "},{"sha":"c8e0784e4c2d613f01bcfe3949b25accbab8725e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AccessTokenTO.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,16 +20,10 @@\n \n import java.util.Date;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"accessToken\")\n-@XmlType\n-public class AccessTokenTO extends BaseBean implements EntityTO {\n+public class AccessTokenTO implements EntityTO {\n \n     private static final long serialVersionUID = 6577639976115661357L;\n "},{"sha":"affa16721bbde7082ecd6ecf5da654c02dd758f0","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":11,"deletions":19,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,20 +20,15 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"anyObject\")\n-@XmlType\n @Schema(allOf = { AnyTO.class })\n public class AnyObjectTO extends AnyTO implements GroupableRelatableTO {\n \n@@ -47,9 +42,9 @@ public class AnyObjectTO extends AnyTO implements GroupableRelatableTO {\n \n     private final List<MembershipTO> dynMemberships = new ArrayList<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.AnyObjectTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.AnyObjectTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -71,9 +66,8 @@ public Optional<RelationshipTO> getRelationship(final String type, final String\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     @Override\n     public List<RelationshipTO> getRelationships() {\n         return relationships;\n@@ -85,17 +79,15 @@ public Optional<MembershipTO> getMembership(final String groupKey) {\n         return memberships.stream().filter(membership -> groupKey.equals(membership.getGroupKey())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     @Override\n     public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n-    @XmlElementWrapper(name = \"dynMemberships\")\n-    @XmlElement(name = \"dynMembership\")\n-    @JsonProperty(\"dynMemberships\")\n+    @JacksonXmlElementWrapper(localName = \"dynMemberships\")\n+    @JacksonXmlProperty(localName = \"dynMembership\")\n     @Override\n     public List<MembershipTO> getDynMemberships() {\n         return dynMemberships;"},{"sha":"942ffc04392bd0631872347631975a2ff164a0c1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":19,"deletions":33,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -23,35 +23,29 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.RealmMember;\n \n-@XmlType\n-@XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\", \"type\", \"realm\", \"username\", \"name\" })\n-@Schema(subTypes = { UserTO.class, GroupTO.class, AnyObjectTO.class }, discriminatorProperty = \"@class\")\n-public abstract class AnyTO extends BaseBean implements EntityTO, RealmMember {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\", \"type\", \"realm\", \"username\", \"name\" })\n+@Schema(subTypes = { UserTO.class, GroupTO.class, AnyObjectTO.class }, discriminatorProperty = \"_class\")\n+public abstract class AnyTO implements EntityTO, RealmMember {\n \n     private static final long serialVersionUID = -754311920679872084L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     /**\n@@ -98,7 +92,7 @@ public abstract class AnyTO extends BaseBean implements EntityTO, RealmMember {\n \n     private final Set<String> resources = new HashSet<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n@@ -188,9 +182,8 @@ public void setRealm(final String realm) {\n         this.realm = realm;\n     }\n \n-    @XmlElementWrapper(name = \"dynRealms\")\n-    @XmlElement(name = \"dynRealmF\")\n-    @JsonProperty(\"dynRealms\")\n+    @JacksonXmlElementWrapper(localName = \"dynRealms\")\n+    @JacksonXmlProperty(localName = \"dynRealmF\")\n     public List<String> getDynRealms() {\n         return dynRealms;\n     }\n@@ -203,17 +196,15 @@ public void setStatus(final String status) {\n         this.status = status;\n     }\n \n-    @XmlElementWrapper(name = \"auxClasses\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"auxClasses\")\n+    @JacksonXmlElementWrapper(localName = \"auxClasses\")\n+    @JacksonXmlProperty(localName = \"class\")\n     @Override\n     public Set<String> getAuxClasses() {\n         return auxClasses;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     @Override\n     public Set<Attr> getPlainAttrs() {\n         return plainAttrs;\n@@ -225,9 +216,8 @@ public Optional<Attr> getPlainAttr(final String schema) {\n         return plainAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"derAttrs\")\n+    @JacksonXmlProperty(localName = \"derAttr\")\n     @Override\n     public Set<Attr> getDerAttrs() {\n         return derAttrs;\n@@ -239,9 +229,8 @@ public Optional<Attr> getDerAttr(final String schema) {\n         return derAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     @Override\n     public Set<Attr> getVirAttrs() {\n         return virAttrs;\n@@ -253,9 +242,6 @@ public Optional<Attr> getVirAttr(final String schema) {\n         return virAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n     @Override\n     public Set<String> getResources() {\n         return resources;"},{"sha":"40615bfef2d7511ebc5dd6f3fbbb052707b9eaee","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":10,"deletions":20,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"anyTypeClass\")\n-@XmlType\n public class AnyTypeClassTO implements EntityTO {\n \n     private static final long serialVersionUID = -591757688607551266L;\n@@ -54,32 +49,27 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @XmlElementWrapper(name = \"plainSchemas\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"plainSchemas\")\n+    @JacksonXmlElementWrapper(localName = \"plainSchemas\")\n+    @JacksonXmlProperty(localName = \"plainSchema\")\n     public List<String> getPlainSchemas() {\n         return plainSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"derSchemas\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"derSchemas\")\n+    @JacksonXmlElementWrapper(localName = \"derSchemas\")\n+    @JacksonXmlProperty(localName = \"derSchema\")\n     public List<String> getDerSchemas() {\n         return derSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"virSchemas\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"virSchemas\")\n+    @JacksonXmlElementWrapper(localName = \"virSchemas\")\n+    @JacksonXmlProperty(localName = \"virSchema\")\n     public List<String> getVirSchemas() {\n         return virSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"inUseByTypes\")\n-    @XmlElement(name = \"anyTypeClass\")\n-    @JsonProperty(\"inUseByTypes\")\n+    @JacksonXmlElementWrapper(localName = \"inUseByTypes\")\n+    @JacksonXmlProperty(localName = \"inUseByType\")\n     public List<String> getInUseByTypes() {\n         return inUseByTypes;\n     }\n-\n }"},{"sha":"94dd6ffc3f2aa5ede7e13d1aa82cbcb6583ed688","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n-@XmlRootElement(name = \"anyType\")\n-@XmlType\n public class AnyTypeTO implements EntityTO {\n \n     private static final long serialVersionUID = 6771657557616874373L;\n@@ -61,9 +56,8 @@ public void setKind(final AnyTypeKind kind) {\n         this.kind = kind;\n     }\n \n-    @XmlElementWrapper(name = \"classes\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"classes\")\n+    @JacksonXmlElementWrapper(localName = \"classes\")\n+    @JacksonXmlProperty(localName = \"class\")\n     public List<String> getClasses() {\n         return classes;\n     }"},{"sha":"f9c37328f4e9a5766f509a808b65ff1e252ef53a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ApplicationTO.java","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"application\")\n-@XmlType\n public class ApplicationTO implements EntityTO {\n \n     private static final long serialVersionUID = -4117796727736925215L;\n@@ -58,11 +53,9 @@ public void setDescription(final String description) {\n         this.description = description;\n     }\n \n-    @XmlElementWrapper(name = \"privileges\")\n-    @XmlElement(name = \"privilege\")\n-    @JsonProperty(\"privileges\")\n+    @JacksonXmlElementWrapper(localName = \"privileges\")\n+    @JacksonXmlProperty(localName = \"privilege\")\n     public List<PrivilegeTO> getPrivileges() {\n         return privileges;\n     }\n-\n }"},{"sha":"fc1158f300c082ee59cc5396667bf79fe33a62a2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ConnObjectTO.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,30 +19,24 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.LinkedHashSet;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"connObject\")\n-@XmlType\n-public class ConnObjectTO implements Serializable {\n+public class ConnObjectTO implements BaseBean {\n \n     private static final long serialVersionUID = 5139554911265442497L;\n \n     private final Set<Attr> attrs = new LinkedHashSet<>();\n \n-    @XmlElementWrapper(name = \"attrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"attrs\")\n+    @JacksonXmlElementWrapper(localName = \"attrs\")\n+    @JacksonXmlProperty(localName = \"attr\")\n     public Set<Attr> getAttrs() {\n         return attrs;\n     }"},{"sha":"b467ce24bfc1aae8d8d211ba9ab56940fea7ea65","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/DerSchemaTO.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,25 +19,21 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"derSchema\")\n-@XmlType\n @Schema(allOf = { SchemaTO.class })\n public class DerSchemaTO extends SchemaTO {\n \n     private static final long serialVersionUID = -6747399803792103108L;\n \n     private String expression;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.DerSchemaTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.DerSchemaTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"e8a3033f18911ac3ffbeaaee0f9a7a29115ace00","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/DynRealmTO.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,24 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.HashMap;\n import java.util.Map;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n-@XmlRootElement(name = \"dynRealm\")\n-@XmlType\n public class DynRealmTO implements EntityTO {\n \n     private static final long serialVersionUID = 4560822655754800031L;\n \n     private String key;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> dynMembershipConds = new HashMap<>();\n \n     @Override\n@@ -49,7 +41,6 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getDynMembershipConds() {\n         return dynMembershipConds;\n     }"},{"sha":"e2d158f3aa3891303476391ef5be3444abb06a4c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/EntityTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-public interface EntityTO extends Serializable {\n+public interface EntityTO extends BaseBean {\n \n     String getKey();\n "},{"sha":"4460ae16addbbd13b55b5d1fc3d247c68ced2f6d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ErrorTO.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n \n-@XmlRootElement(name = \"error\")\n-@XmlType\n-public class ErrorTO implements Serializable {\n+public class ErrorTO implements BaseBean {\n \n     private static final long serialVersionUID = 2435764161719225927L;\n \n@@ -56,11 +51,9 @@ public void setType(final ClientExceptionType type) {\n         this.type = type;\n     }\n \n-    @XmlElementWrapper(name = \"elements\")\n-    @XmlElement(name = \"element\")\n-    @JsonProperty(\"elements\")\n+    @JacksonXmlElementWrapper(localName = \"elements\")\n+    @JacksonXmlProperty(localName = \"element\")\n     public List<String> getElements() {\n         return elements;\n     }\n-\n }"},{"sha":"80eb0f84f8419586d90545615a364d91cafeeefa","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ExecTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,14 +18,10 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.JobType;\n \n-@XmlRootElement(name = \"exec\")\n-@XmlType()\n public class ExecTO extends AbstractStartEndBean implements EntityTO {\n \n     private static final long serialVersionUID = -4621191979198357081L;"},{"sha":"c0a1005514e438ed4f7591e9be4e6e0942ffd76a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"modified","additions":7,"deletions":17,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,25 +20,18 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n-@XmlRootElement(name = \"group\")\n-@XmlType\n @Schema(allOf = { AnyTO.class })\n public class GroupTO extends AnyTO {\n \n@@ -60,14 +53,13 @@ public class GroupTO extends AnyTO {\n \n     private int dynamicAnyObjectMembershipCount;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> adynMembershipConds = new HashMap<>();\n \n     private final List<TypeExtensionTO> typeExtensions = new ArrayList<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.GroupTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.GroupTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -147,7 +139,6 @@ public void setDynamicAnyObjectMembershipCount(final int dynamicAnyObjectMembers\n         this.dynamicAnyObjectMembershipCount = dynamicAnyObjectMembershipCount;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getADynMembershipConds() {\n         return adynMembershipConds;\n     }\n@@ -159,9 +150,8 @@ public Optional<TypeExtensionTO> getTypeExtension(final String anyType) {\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"typeExtensions\")\n-    @XmlElement(name = \"typeExtension\")\n-    @JsonProperty(\"typeExtensions\")\n+    @JacksonXmlElementWrapper(localName = \"typeExtensions\")\n+    @JacksonXmlProperty(localName = \"typeExtension\")\n     public List<TypeExtensionTO> getTypeExtensions() {\n         return typeExtensions;\n     }"},{"sha":"a328a4b990c91e0c77a3e88ed98b831a9df76ea7","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ImplementationTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,14 +19,10 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n \n-@XmlRootElement(name = \"implementation\")\n-@XmlType\n public class ImplementationTO implements EntityTO {\n \n     private static final long serialVersionUID = 2703397698393060586L;"},{"sha":"a8b3ff3c21a2271d84cc18939644b3b629745b2a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ItemContainerTO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemContainerTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemContainerTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemContainerTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,8 +19,9 @@\n package org.apache.syncope.common.lib.to;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-public interface ItemContainerTO {\n+public interface ItemContainerTO extends BaseBean {\n \n     ItemTO getConnObjectKeyItem();\n "},{"sha":"2bd53cae7238637d89b40850fcca0040171b5713","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ItemTO.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n \n-@XmlRootElement(name = \"item\")\n-@XmlType\n public class ItemTO implements EntityTO {\n \n     private static final long serialVersionUID = 2983498836767176862L;\n@@ -154,9 +149,8 @@ public void setPullJEXLTransformer(final String pullJEXLTransformer) {\n         this.pullJEXLTransformer = pullJEXLTransformer;\n     }\n \n-    @XmlElementWrapper(name = \"transformers\")\n-    @XmlElement(name = \"transformer\")\n-    @JsonProperty(\"transformers\")\n+    @JacksonXmlElementWrapper(localName = \"transformers\")\n+    @JacksonXmlProperty(localName = \"transformer\")\n     public List<String> getTransformers() {\n         return transformers;\n     }"},{"sha":"58d9fce5a11b7c19baf8d09e508ed5721796527d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/JobTO.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n import java.util.Date;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.JobType;\n \n-@XmlRootElement(name = \"job\")\n-@XmlType\n-public class JobTO implements Serializable {\n+public class JobTO implements BaseBean {\n \n     private static final long serialVersionUID = -7254450981751326711L;\n \n@@ -101,5 +96,4 @@ public String getStatus() {\n     public void setStatus(final String status) {\n         this.status = status;\n     }\n-\n }"},{"sha":"72dd158139c2997fd9b562d91d331e23b8ee6878","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/LinkedAccountTO.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,20 +19,15 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n \n-@XmlRootElement(name = \"linkedAccount\")\n-@XmlType\n public class LinkedAccountTO implements EntityTO {\n \n     private static final long serialVersionUID = 7396929732310559535L;\n@@ -137,9 +132,8 @@ public void setSuspended(final boolean suspended) {\n         this.suspended = suspended;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     public Set<Attr> getPlainAttrs() {\n         return plainAttrs;\n     }\n@@ -149,9 +143,8 @@ public Optional<Attr> getPlainAttr(final String schema) {\n         return plainAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"privileges\")\n-    @XmlElement(name = \"privilege\")\n-    @JsonProperty(\"privileges\")\n+    @JacksonXmlElementWrapper(localName = \"privileges\")\n+    @JacksonXmlProperty(localName = \"privilege\")\n     public Set<String> getPrivileges() {\n         return privileges;\n     }"},{"sha":"72fdce13d854013f8d17cf78c5d0aa74c13b52f8","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/MailTemplateTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,13 +19,9 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"mailTemplate\")\n-@XmlType\n public class MailTemplateTO implements EntityTO {\n \n     private static final long serialVersionUID = 8389755049666062735L;"},{"sha":"d129b215c568562c3c35c62e88d80c776ec33c7c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -23,23 +23,18 @@\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.Attributable;\n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"membership\")\n-@XmlType\n-public class MembershipTO implements Serializable, Attributable {\n+public class MembershipTO implements BaseBean, Attributable {\n \n     private static final long serialVersionUID = 5992828670273935861L;\n \n@@ -117,9 +112,8 @@ public void setGroupName(final String groupName) {\n         this.groupName = groupName;\n     }\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"plainAttrs\")\n+    @JacksonXmlProperty(localName = \"plainAttr\")\n     @Override\n     public Set<Attr> getPlainAttrs() {\n         return plainAttrs;\n@@ -131,9 +125,8 @@ public Optional<Attr> getPlainAttr(final String schema) {\n         return plainAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"derAttrs\")\n+    @JacksonXmlProperty(localName = \"derAttr\")\n     @Override\n     public Set<Attr> getDerAttrs() {\n         return derAttrs;\n@@ -145,9 +138,8 @@ public Optional<Attr> getDerAttr(final String schema) {\n         return derAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n+    @JacksonXmlElementWrapper(localName = \"virAttrs\")\n+    @JacksonXmlProperty(localName = \"virAttr\")\n     @Override\n     public Set<Attr> getVirAttrs() {\n         return virAttrs;\n@@ -194,8 +186,8 @@ public boolean equals(final Object obj) {\n     @Override\n     public String toString() {\n         return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n-            append(this.groupKey).\n-            append(this.groupName).\n-            build();\n+                append(this.groupKey).\n+                append(this.groupName).\n+                build();\n     }\n }"},{"sha":"2fbf12314a7ae60d2b175eedf5f0634c9f02a098","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":6,"deletions":17,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,24 +18,17 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-@XmlRootElement(name = \"notification\")\n-@XmlType\n public class NotificationTO implements EntityTO {\n \n     private static final long serialVersionUID = -6145117115632592612L;\n@@ -44,7 +37,6 @@ public class NotificationTO implements EntityTO {\n \n     private final List<String> events = new ArrayList<>();\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> abouts = new HashMap<>();\n \n     private String recipientsFIQL;\n@@ -67,21 +59,18 @@ public class NotificationTO implements EntityTO {\n \n     private boolean active;\n \n-    @JsonProperty\n     public Map<String, String> getAbouts() {\n         return abouts;\n     }\n \n-    @XmlElementWrapper(name = \"events\")\n-    @XmlElement(name = \"event\")\n-    @JsonProperty(\"events\")\n+    @JacksonXmlElementWrapper(localName = \"events\")\n+    @JacksonXmlProperty(localName = \"event\")\n     public List<String> getEvents() {\n         return events;\n     }\n \n-    @XmlElementWrapper(name = \"staticRecipients\")\n-    @XmlElement(name = \"staticRecipient\")\n-    @JsonProperty(\"staticRecipients\")\n+    @JacksonXmlElementWrapper(localName = \"staticRecipients\")\n+    @JacksonXmlProperty(localName = \"staticRecipient\")\n     public List<String> getStaticRecipients() {\n         return staticRecipients;\n     }"},{"sha":"18bc4ad179ca4d47154598cf245c89e72d91275b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,21 +19,16 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashSet;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-@XmlRootElement(name = \"notificationTask\")\n-@XmlType\n @Schema(allOf = { TaskTO.class })\n public class NotificationTaskTO extends TaskTO {\n \n@@ -59,9 +54,9 @@ public class NotificationTaskTO extends TaskTO {\n \n     private TraceLevel traceLevel;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.NotificationTaskTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.NotificationTaskTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -95,9 +90,8 @@ public void setEntityKey(final String entityKey) {\n     }\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    @XmlElementWrapper(name = \"recipients\")\n-    @XmlElement(name = \"recipient\")\n-    @JsonProperty(\"recipients\")\n+    @JacksonXmlElementWrapper(localName = \"recipients\")\n+    @JacksonXmlProperty(localName = \"recipient\")\n     public Set<String> getRecipients() {\n         return recipients;\n     }"},{"sha":"b0980769e99f4d330329f10b4f8b5b75bf81bc90","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PagedResult.java","status":"modified","additions":5,"deletions":14,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"pagedResult\")\n-@XmlType\n-public class PagedResult<T extends BaseBean> implements Serializable {\n+public class PagedResult<T extends BaseBean> implements BaseBean {\n \n     private static final long serialVersionUID = 3472875885259250934L;\n \n@@ -66,10 +59,8 @@ public void setNext(final URI next) {\n         this.next = next;\n     }\n \n-    @XmlElementWrapper(name = \"result\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"result\")\n-    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+    @JacksonXmlElementWrapper(localName = \"result\")\n+    @JacksonXmlProperty(localName = \"item\")\n     public List<T> getResult() {\n         return result;\n     }"},{"sha":"5525b5b7c782526caece959586c031a264c5e206","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PlainSchemaTO.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,19 +19,14 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n \n-@XmlRootElement(name = \"plainSchema\")\n-@XmlType\n @Schema(allOf = { SchemaTO.class })\n public class PlainSchemaTO extends SchemaTO {\n \n@@ -61,9 +56,9 @@ public class PlainSchemaTO extends SchemaTO {\n \n     private String mimeType;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.PlainSchemaTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.PlainSchemaTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"946f91ae05ac967e7d2fc952e2749a795c6ad8ab","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PrivilegeTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"privilege\")\n-@XmlType\n public class PrivilegeTO implements EntityTO {\n \n     private static final long serialVersionUID = 5461846770586031758L;"},{"sha":"e41b4471df582d4d494cc3c5ca7105dd6a6374c7","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationStatus.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.types.ExecStatus;\n \n /**\n  * Single propagation status.\n  */\n-@XmlRootElement(name = \"propagationStatus\")\n-@XmlType\n-public class PropagationStatus implements Serializable {\n+public class PropagationStatus implements BaseBean {\n \n     private static final long serialVersionUID = 3921498450222857690L;\n "},{"sha":"ecf8f5a1882aeb8c389a20a458eeaa0cb649f358","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationTaskTO.java","status":"modified","additions":4,"deletions":17,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,18 +19,13 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n-@XmlRootElement(name = \"propagationTask\")\n-@XmlType\n @Schema(allOf = { TaskTO.class })\n public class PropagationTaskTO extends TaskTO {\n \n@@ -54,16 +49,15 @@ public class PropagationTaskTO extends TaskTO {\n \n     private String entityKey;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.PropagationTaskTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.PropagationTaskTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getConnObjectKey() {\n         return connObjectKey;\n     }\n@@ -81,7 +75,6 @@ public void setOldConnObjectKey(final String oldConnObjectKey) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getResource() {\n         return resource;\n     }\n@@ -91,7 +84,6 @@ public void setResource(final String resource) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public ResourceOperation getOperation() {\n         return operation;\n     }\n@@ -101,7 +93,6 @@ public void setOperation(final ResourceOperation operation) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getAttributes() {\n         return attributes;\n     }\n@@ -111,7 +102,6 @@ public void setAttributes(final String attributes) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getObjectClassName() {\n         return objectClassName;\n     }\n@@ -121,7 +111,6 @@ public void setObjectClassName(final String objectClassName) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public AnyTypeKind getAnyTypeKind() {\n         return anyTypeKind;\n     }\n@@ -131,7 +120,6 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getAnyType() {\n         return anyType;\n     }\n@@ -141,7 +129,6 @@ public void setAnyType(final String anyType) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getEntityKey() {\n         return entityKey;\n     }"},{"sha":"94702842c21c63d3ac73a0e8b143c395ad4fdafa","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningResult.java","status":"modified","additions":6,"deletions":20,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,35 +18,22 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlEntityTOAdapter;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"provisioningResult\")\n-@XmlType\n-public class ProvisioningResult<E extends EntityTO> implements Serializable {\n+public class ProvisioningResult<E extends EntityTO> implements BaseBean {\n \n     private static final long serialVersionUID = 351317476398082746L;\n \n-    @XmlJavaTypeAdapter(XmlEntityTOAdapter.class)\n     private E entity;\n \n     private final List<PropagationStatus> propagationStatuses = new ArrayList<>();\n \n-    @XmlTransient\n-    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-    @JsonProperty\n     public E getEntity() {\n         return entity;\n     }\n@@ -55,9 +42,8 @@ public void setEntity(final E entity) {\n         this.entity = entity;\n     }\n \n-    @XmlElementWrapper(name = \"propagationStatuses\")\n-    @XmlElement(name = \"propagationStatus\")\n-    @JsonProperty(\"propagationStatuses\")\n+    @JacksonXmlElementWrapper(localName = \"propagationStatuses\")\n+    @JacksonXmlProperty(localName = \"propagationStatus\")\n     public List<PropagationStatus> getPropagationStatuses() {\n         return propagationStatuses;\n     }"},{"sha":"2632cdf07178373b3403553d0af41dc7b5e410b3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningTaskTO.java","status":"modified","additions":5,"deletions":13,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,24 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n \n-@XmlRootElement(name = \"provisioningTask\")\n-@XmlType\n-@XmlSeeAlso({ PushTaskTO.class, PullTaskTO.class })\n @Schema(allOf = { SchedTaskTO.class },\n-        subTypes = { PushTaskTO.class, PullTaskTO.class }, discriminatorProperty = \"@class\")\n+        subTypes = { PushTaskTO.class, PullTaskTO.class }, discriminatorProperty = \"_class\")\n public abstract class ProvisioningTaskTO extends SchedTaskTO {\n \n     private static final long serialVersionUID = -5722284116974636425L;\n@@ -58,7 +52,6 @@ public abstract class ProvisioningTaskTO extends SchedTaskTO {\n     private final List<String> actions = new ArrayList<>();\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getResource() {\n         return resource;\n     }\n@@ -99,9 +92,8 @@ public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = syncStatus;\n     }\n \n-    @XmlElementWrapper(name = \"actions\")\n-    @XmlElement(name = \"action\")\n-    @JsonProperty(\"actions\")\n+    @JacksonXmlElementWrapper(localName = \"actions\")\n+    @JacksonXmlProperty(localName = \"action\")\n     public List<String> getActions() {\n         return actions;\n     }"},{"sha":"425eb281b5168fe44bc6fcc6fb61ae7b90cd105b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PullTaskTO.java","status":"modified","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,50 +19,37 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashMap;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.PullMode;\n \n-@XmlRootElement(name = \"pullTask\")\n-@XmlType\n-@XmlAccessorType(XmlAccessType.FIELD)\n @Schema(allOf = { ProvisioningTaskTO.class })\n public class PullTaskTO extends ProvisioningTaskTO implements TemplatableTO {\n \n     private static final long serialVersionUID = -2143537546915809017L;\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     private PullMode pullMode;\n \n     private String reconFilterBuilder;\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     private String destinationRealm;\n \n     private boolean remediation;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.PullTaskTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.PullTaskTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n     public PullMode getPullMode() {\n@@ -89,7 +76,6 @@ public void setDestinationRealm(final String destinationRealm) {\n         this.destinationRealm = destinationRealm;\n     }\n \n-    @JsonProperty\n     @Override\n     public Map<String, AnyTO> getTemplates() {\n         return templates;"},{"sha":"6c41491d70af1cece6d7a94390a1c13428477c49","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PushTaskTO.java","status":"modified","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,38 +19,26 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashMap;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n-@XmlRootElement(name = \"pushTask\")\n-@XmlType\n-@XmlAccessorType(XmlAccessType.FIELD)\n @Schema(allOf = { ProvisioningTaskTO.class })\n public class PushTaskTO extends ProvisioningTaskTO {\n \n     private static final long serialVersionUID = -2143537546915809018L;\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     private String sourceRealm;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> filters = new HashMap<>();\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.PushTaskTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.PushTaskTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"6e7158f9a55777e5f0ddc254f19db37626d9d607","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":7,"deletions":19,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,27 +18,19 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n-@XmlRootElement(name = \"realm\")\n-@XmlType\n-public class RealmTO extends BaseBean implements NamedEntityTO, TemplatableTO {\n+public class RealmTO implements NamedEntityTO, TemplatableTO {\n \n     private static final long serialVersionUID = 516330662956254391L;\n \n@@ -62,7 +54,6 @@ public class RealmTO extends BaseBean implements NamedEntityTO, TemplatableTO {\n \n     private final List<String> actions = new ArrayList<>();\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n     private final Set<String> resources = new HashSet<>();\n@@ -144,22 +135,19 @@ public void setAttrReleasePolicy(final String attrReleasePolicy) {\n         this.attrReleasePolicy = attrReleasePolicy;\n     }\n \n-    @XmlElementWrapper(name = \"actions\")\n-    @XmlElement(name = \"action\")\n-    @JsonProperty(\"actions\")\n+    @JacksonXmlElementWrapper(localName = \"actions\")\n+    @JacksonXmlProperty(localName = \"action\")\n     public List<String> getActions() {\n         return actions;\n     }\n \n-    @JsonProperty\n     @Override\n     public Map<String, AnyTO> getTemplates() {\n         return templates;\n     }\n \n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n+    @JacksonXmlElementWrapper(localName = \"resources\")\n+    @JacksonXmlProperty(localName = \"resource\")\n     public Set<String> getResources() {\n         return resources;\n     }"},{"sha":"fd491cea37bd623f1d8b179230f53e0832dd2922","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTO.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,11 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"relationship\")\n-@XmlType\n-public class RelationshipTO implements Serializable {\n+public class RelationshipTO implements BaseBean {\n \n     private static final long serialVersionUID = 360672942026613929L;\n "},{"sha":"0475ee2f45d6834962a7af03938f1a221543ce74","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTypeTO.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.Path;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"relationshipType\")\n-@XmlType\n public class RelationshipTypeTO implements EntityTO {\n \n     private static final long serialVersionUID = -1884088415277925817L;\n@@ -50,5 +46,4 @@ public String getDescription() {\n     public void setDescription(final String description) {\n         this.description = description;\n     }\n-\n }"},{"sha":"364ea00f82d1188a5849331c6d89504fc1660088","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTO.java","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,22 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"report\")\n-@XmlType\n public class ReportTO extends AbstractStartEndBean implements NamedEntityTO {\n \n     private static final long serialVersionUID = 5274568072084814410L;\n@@ -59,7 +53,7 @@ public class ReportTO extends AbstractStartEndBean implements NamedEntityTO {\n     private String template;\n \n     private String lastExecutor;\n-    \n+\n     @Override\n     public String getKey() {\n         return key;\n@@ -81,9 +75,8 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n-    @XmlElementWrapper(name = \"reportlets\")\n-    @XmlElement(name = \"reportlets\")\n-    @JsonProperty(\"reportlets\")\n+    @JacksonXmlElementWrapper(localName = \"reportlets\")\n+    @JacksonXmlProperty(localName = \"reportlets\")\n     public List<String> getReportlets() {\n         return reportlets;\n     }\n@@ -96,9 +89,8 @@ public void setCronExpression(final String cronExpression) {\n         this.cronExpression = cronExpression;\n     }\n \n-    @XmlElementWrapper(name = \"executions\")\n-    @XmlElement(name = \"execution\")\n-    @JsonProperty(\"executions\")\n+    @JacksonXmlElementWrapper(localName = \"executions\")\n+    @JacksonXmlProperty(localName = \"execution\")\n     public List<ExecTO> getExecutions() {\n         return executions;\n     }"},{"sha":"03aaa9e89f4dfe9a3dc996d8396354077ae362d9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTemplateTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"reportTemplate\")\n-@XmlType\n public class ReportTemplateTO implements EntityTO {\n \n     private static final long serialVersionUID = 7776679004906244896L;"},{"sha":"3be4d55fed2c999ba638abeeaa263e5b35d668c2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":10,"deletions":19,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"role\")\n-@XmlType\n public class RoleTO implements EntityTO {\n \n     private static final long serialVersionUID = 4560822655754800031L;\n@@ -60,23 +55,20 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @XmlElementWrapper(name = \"entitlements\")\n-    @XmlElement(name = \"entitlement\")\n-    @JsonProperty(\"entitlements\")\n+    @JacksonXmlElementWrapper(localName = \"entitlements\")\n+    @JacksonXmlProperty(localName = \"entitlement\")\n     public Set<String> getEntitlements() {\n         return entitlements;\n     }\n \n-    @XmlElementWrapper(name = \"realms\")\n-    @XmlElement(name = \"realm\")\n-    @JsonProperty(\"realms\")\n+    @JacksonXmlElementWrapper(localName = \"realms\")\n+    @JacksonXmlProperty(localName = \"realm\")\n     public List<String> getRealms() {\n         return realms;\n     }\n \n-    @XmlElementWrapper(name = \"dynRealms\")\n-    @XmlElement(name = \"dynRealm\")\n-    @JsonProperty(\"dynRealms\")\n+    @JacksonXmlElementWrapper(localName = \"dynRealms\")\n+    @JacksonXmlProperty(localName = \"dynRealm\")\n     public List<String> getDynRealms() {\n         return dynRealms;\n     }\n@@ -89,9 +81,8 @@ public void setDynMembershipCond(final String dynMembershipCond) {\n         this.dynMembershipCond = dynMembershipCond;\n     }\n \n-    @XmlElementWrapper(name = \"privileges\")\n-    @XmlElement(name = \"privilege\")\n-    @JsonProperty(\"privileges\")\n+    @JacksonXmlElementWrapper(localName = \"privileges\")\n+    @JacksonXmlProperty(localName = \"privilege\")\n     public Set<String> getPrivileges() {\n         return privileges;\n     }"},{"sha":"75d7b40886b43904c0bdfb7b66b35c6311b59e02","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/SchedTaskTO.java","status":"modified","additions":5,"deletions":14,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,22 +19,14 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Date;\n import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"schedTask\")\n-@XmlType\n-@XmlSeeAlso({ ProvisioningTaskTO.class })\n-@Schema(allOf = { TaskTO.class }, subTypes = { ProvisioningTaskTO.class }, discriminatorProperty = \"@class\")\n+@Schema(allOf = { TaskTO.class }, subTypes = { ProvisioningTaskTO.class }, discriminatorProperty = \"_class\")\n public class SchedTaskTO extends TaskTO implements NamedEntityTO {\n \n     private static final long serialVersionUID = -5722284116974636425L;\n@@ -55,9 +47,9 @@ public class SchedTaskTO extends TaskTO implements NamedEntityTO {\n \n     private boolean active = true;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.SchedTaskTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.SchedTaskTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -119,7 +111,6 @@ public String getName() {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     @Override\n     public void setName(final String name) {\n         this.name = name;"},{"sha":"ed102c7a300cbba619fefe10c8b933b9c0cf61e8","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/SchemaTO.java","status":"modified","additions":8,"deletions":18,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -22,42 +22,33 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n-\n-@XmlRootElement(name = \"schema\")\n-@XmlType\n-@XmlSeeAlso({ PlainSchemaTO.class, DerSchemaTO.class, VirSchemaTO.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\" })\n-@Schema(subTypes = { PlainSchemaTO.class, DerSchemaTO.class, VirSchemaTO.class }, discriminatorProperty = \"@class\")\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\" })\n+@Schema(subTypes = { PlainSchemaTO.class, DerSchemaTO.class, VirSchemaTO.class }, discriminatorProperty = \"_class\")\n public abstract class SchemaTO implements EntityTO {\n \n     private static final long serialVersionUID = 4088388951694301759L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String key;\n \n     private String anyTypeClass;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<Locale, String> labels = new HashMap<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n@@ -88,7 +79,6 @@ public String getLabel(final Locale locale) {\n         return labels.getOrDefault(locale, key);\n     }\n \n-    @JsonProperty\n     public Map<Locale, String> getLabels() {\n         return labels;\n     }"},{"sha":"7bc8c2093b82b9b123ac089a204f3bf8672c5a8c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/SecurityQuestionTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,13 +19,9 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"securityQuestion\")\n-@XmlType\n public class SecurityQuestionTO implements EntityTO {\n \n     private static final long serialVersionUID = 5969810939993556530L;"},{"sha":"f10b0ca027b00846b4002d7b92b14acf2054831e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":11,"deletions":19,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,33 +21,26 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlTransient;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"task\")\n-@XmlType\n-@XmlSeeAlso({ PropagationTaskTO.class, ProvisioningTaskTO.class, NotificationTaskTO.class })\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n-@JsonPropertyOrder(value = { \"@class\", \"key\" })\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"key\" })\n @Schema(\n         subTypes = { PropagationTaskTO.class, ProvisioningTaskTO.class, NotificationTaskTO.class },\n-        discriminatorProperty = \"@class\")\n+        discriminatorProperty = \"_class\")\n public abstract class TaskTO extends AbstractStartEndBean implements EntityTO {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n     private String discriminator;\n \n     private String key;\n@@ -58,7 +51,7 @@ public abstract class TaskTO extends AbstractStartEndBean implements EntityTO {\n \n     private final List<ExecTO> executions = new ArrayList<>();\n \n-    @Schema(name = \"@class\", required = true)\n+    @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n@@ -94,11 +87,10 @@ public String getLastExecutor() {\n     public void setLastExecutor(final String lastExecutor) {\n         this.lastExecutor = lastExecutor;\n     }\n-    \n+\n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    @XmlElementWrapper(name = \"executions\")\n-    @XmlElement(name = \"execution\")\n-    @JsonProperty(\"executions\")\n+    @JacksonXmlElementWrapper(localName = \"executions\")\n+    @JacksonXmlProperty(localName = \"execution\")\n     public List<ExecTO> getExecutions() {\n         return executions;\n     }"},{"sha":"08e0850f86ea2a728ae207dfd48b3c50f71c82d6","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/TemplatableTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTemplatableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTemplatableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTemplatableTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.io.Serializable;\n import java.util.Map;\n+import org.apache.syncope.common.lib.BaseBean;\n \n @FunctionalInterface\n-public interface TemplatableTO extends Serializable {\n+public interface TemplatableTO extends BaseBean {\n \n     Map<String, AnyTO> getTemplates();\n }"},{"sha":"0f35fe1f6c1fd0687ced98adfed71c251c7b2fac","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/TypeExtensionTO.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"typeExtension\")\n-@XmlType\n-public class TypeExtensionTO implements Serializable {\n+public class TypeExtensionTO implements BaseBean {\n \n     private static final long serialVersionUID = -5422809645030924811L;\n \n@@ -47,9 +42,8 @@ public void setAnyType(final String anyType) {\n         this.anyType = anyType;\n     }\n \n-    @XmlElementWrapper(name = \"auxClasses\")\n-    @XmlElement(name = \"class\")\n-    @JsonProperty(\"auxClasses\")\n+    @JacksonXmlElementWrapper(localName = \"auxClasses\")\n+    @JacksonXmlProperty(localName = \"class\")\n     public List<String> getAuxClasses() {\n         return auxClasses;\n     }"},{"sha":"2711b8082a8db7c897ac2e49614da733c2f7ffd4","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":19,"deletions":30,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,23 +20,19 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n-@XmlRootElement(name = \"user\")\n-@XmlType\n @Schema(allOf = { AnyTO.class })\n public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n@@ -78,8 +74,9 @@ public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private final List<LinkedAccountTO> linkedAccounts = new ArrayList<>();\n \n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.UserTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.UserTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();\n@@ -127,7 +124,6 @@ public void setTokenExpireTime(final Date tokenExpireTime) {\n     }\n \n     @JsonProperty(required = true)\n-    @XmlElement(required = true)\n     public String getUsername() {\n         return username;\n     }\n@@ -214,9 +210,8 @@ public Optional<RelationshipTO> getRelationship(final String type, final String\n                 findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"relationships\")\n-    @XmlElement(name = \"relationship\")\n-    @JsonProperty(\"relationships\")\n+    @JacksonXmlElementWrapper(localName = \"relationships\")\n+    @JacksonXmlProperty(localName = \"relationship\")\n     @Override\n     public List<RelationshipTO> getRelationships() {\n         return relationships;\n@@ -228,46 +223,40 @@ public Optional<MembershipTO> getMembership(final String groupKey) {\n         return memberships.stream().filter(membership -> groupKey.equals(membership.getGroupKey())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"memberships\")\n-    @XmlElement(name = \"membership\")\n-    @JsonProperty(\"memberships\")\n+    @JacksonXmlElementWrapper(localName = \"memberships\")\n+    @JacksonXmlProperty(localName = \"membership\")\n     @Override\n     public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n-    @XmlElementWrapper(name = \"dynMemberships\")\n-    @XmlElement(name = \"dynMembership\")\n-    @JsonProperty(\"dynMemberships\")\n+    @JacksonXmlElementWrapper(localName = \"dynMemberships\")\n+    @JacksonXmlProperty(localName = \"dynMembership\")\n     @Override\n     public List<MembershipTO> getDynMemberships() {\n         return dynMemberships;\n     }\n \n-    @XmlElementWrapper(name = \"roles\")\n-    @XmlElement(name = \"role\")\n-    @JsonProperty(\"roles\")\n+    @JacksonXmlElementWrapper(localName = \"roles\")\n+    @JacksonXmlProperty(localName = \"role\")\n     public List<String> getRoles() {\n         return roles;\n     }\n \n-    @XmlElementWrapper(name = \"dynRoles\")\n-    @XmlElement(name = \"role\")\n-    @JsonProperty(\"dynRoles\")\n+    @JacksonXmlElementWrapper(localName = \"dynRoles\")\n+    @JacksonXmlProperty(localName = \"dynRole\")\n     public List<String> getDynRoles() {\n         return dynRoles;\n     }\n \n-    @XmlElementWrapper(name = \"privileges\")\n-    @XmlElement(name = \"privilege\")\n-    @JsonProperty(\"privileges\")\n+    @JacksonXmlElementWrapper(localName = \"privileges\")\n+    @JacksonXmlProperty(localName = \"privilege\")\n     public Set<String> getPrivileges() {\n         return privileges;\n     }\n \n-    @XmlElementWrapper(name = \"linkedAccounts\")\n-    @XmlElement(name = \"linkedAccount\")\n-    @JsonProperty(\"linkedAccounts\")\n+    @JacksonXmlElementWrapper(localName = \"linkedAccounts\")\n+    @JacksonXmlProperty(localName = \"linkedAccount\")\n     public List<LinkedAccountTO> getLinkedAccounts() {\n         return linkedAccounts;\n     }"},{"sha":"7150ff34b472fea240fd2afec4242e0336d90abc","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/VirSchemaTO.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,13 +19,11 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlTransient;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-@XmlRootElement(name = \"virSchema\")\n @Schema(allOf = { SchemaTO.class })\n public class VirSchemaTO extends SchemaTO {\n \n@@ -39,9 +37,9 @@ public class VirSchemaTO extends SchemaTO {\n \n     private String extAttrName;\n \n-    @XmlTransient\n-    @JsonProperty(\"@class\")\n-    @Schema(name = \"@class\", required = true, example = \"org.apache.syncope.common.lib.to.VirSchemaTO\")\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.VirSchemaTO\")\n     @Override\n     public String getDiscriminator() {\n         return getClass().getName();"},{"sha":"168ac494b0306fc1f7d133303f6fe6b76bc411a9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AnyTypeKind.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyTypeKind.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyTypeKind.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyTypeKind.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n import org.apache.syncope.common.lib.request.AnyObjectUR;\n@@ -32,7 +31,6 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n-@XmlEnum\n public enum AnyTypeKind {\n \n     USER(UserTO.class, UserCR.class, UserUR.class),"},{"sha":"b8e162d31f1927200dfacdef39aa7f43f49fed4f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AttrSchemaType.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.common.lib.types;\n \n import java.util.Date;\n-import javax.xml.bind.annotation.XmlEnum;\n \n-@XmlEnum\n public enum AttrSchemaType {\n \n     String(String.class),"},{"sha":"d978bc75090b3fdc17cc66bbe93be7fc68b88c31","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AuditElements.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,16 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlEnum;\n+import org.apache.syncope.common.lib.BaseBean;\n \n-public final class AuditElements implements Serializable {\n+public final class AuditElements implements BaseBean {\n \n     private static final long serialVersionUID = -4385059255522273254L;\n \n     public static final String AUTHENTICATION_CATEGORY = \"Authentication\";\n \n     public static final String LOGIN_EVENT = \"login\";\n \n-    @XmlEnum\n     public enum EventCategoryType {\n \n         LOGIC(\"LOGIC\"),\n@@ -52,7 +50,6 @@ public String toString() {\n         }\n     }\n \n-    @XmlEnum\n     public enum Result {\n \n         SUCCESS,"},{"sha":"4298ead8e3fabd766831f2f783536216cfe07159","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,20 +20,19 @@\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n import java.text.ParseException;\n import java.util.Map;\n import java.util.Optional;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.log.EventCategory;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n \n-public class AuditLoggerName implements Serializable {\n+public class AuditLoggerName implements BaseBean {\n \n     private static final long serialVersionUID = -647989486671786839L;\n "},{"sha":"f03ca78c801d9f6fc35b13155446395455f49f04","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/CipherAlgorithm.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum CipherAlgorithm {\n \n     SHA(\"SHA-1\", false),"},{"sha":"59ed582ef4f6555664baf906ae973cfc0d748c20","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ConflictResolutionAction.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ConflictResolutionAction {\n \n     /**"},{"sha":"7dc934509615335a408ffce634a75a7537d57fef","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/EntityViolationType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum EntityViolationType {\n \n     Standard(\"\"),"},{"sha":"2319ff1852bee5fafe76e1c056ffd7a232c0cd63","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ExecStatus.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FExecStatus.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,10 @@\n package org.apache.syncope.common.lib.types;\n \n import javax.ws.rs.core.Response;\n-import javax.xml.bind.annotation.XmlEnum;\n \n /**\n  * Status of some execution.\n  */\n-@XmlEnum\n public enum ExecStatus {\n \n     CREATED(Response.Status.CREATED.getStatusCode()),"},{"sha":"15b444314e6c34ca52aa06a4bea4bcdfe474a627","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ImplementationEngine.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationEngine.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationEngine.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationEngine.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ImplementationEngine {\n \n     JAVA(\"application/java\"),\n@@ -35,5 +32,4 @@ public enum ImplementationEngine {\n     public String getMimeType() {\n         return mimeType;\n     }\n-\n }"},{"sha":"36911fc20f68a50df035f97f20d8a480f82cfa8e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/JobAction.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobAction.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum JobAction {\n \n     START,"},{"sha":"8ab73e39ddc3f866fd457f4acaf3cfff032422b1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/JobType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FJobType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum JobType {\n     NOTIFICATION,\n     REPORT,"},{"sha":"dd54348f1b5b43d9867146d15ce83966ae1eef0c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/LoggerLevel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerLevel.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,10 +18,8 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n import org.apache.logging.log4j.Level;\n \n-@XmlEnum\n public enum LoggerLevel {\n \n     OFF(Level.OFF),"},{"sha":"c696d6ef509cdc5836de9c32e3fa9abf45d1a879","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/LoggerType.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FLoggerType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,10 +18,8 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n import org.apache.commons.lang3.StringUtils;\n \n-@XmlEnum\n public enum LoggerType {\n \n     /**"},{"sha":"5f2948442fdcbd8eee60e22f3417935c73c8c5f3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/MailTemplateFormat.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.common.lib.types;\n \n import javax.ws.rs.core.MediaType;\n-import javax.xml.bind.annotation.XmlEnum;\n \n-@XmlEnum\n public enum MailTemplateFormat {\n \n     HTML(MediaType.TEXT_HTML_TYPE),\n@@ -36,5 +34,4 @@ public enum MailTemplateFormat {\n     public MediaType getMediaType() {\n         return mediaType;\n     }\n-\n }"},{"sha":"1eace457638ce2e0060a581f2b79b8921f7990ff","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/MatchType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum MatchType {\n     ANY,\n     LINKED_ACCOUNT;"},{"sha":"f0bfa58e6ffa2171e3dc5449726e81e7a760d82f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/MatchingRule.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMatchingRule.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n /**\n- * Sync/Push task matching rule.\n+ * Pull/Push task matching rule.\n  */\n-@XmlEnum\n public enum MatchingRule {\n \n     /**"},{"sha":"19c775274300bca3fa51445024f91a86c275fb80","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/PatchOperation.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPatchOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPatchOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPatchOperation.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum PatchOperation {\n \n     ADD_REPLACE,"},{"sha":"3272e7934f43fa3d1e0bbdd4ebed1d11421ebf96","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/PolicyType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum PolicyType {\n \n     /**"},{"sha":"f1120ce772d19a9bb0ec0e2981f1108888850369","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ProvisionAction.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FProvisionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FProvisionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FProvisionAction.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ProvisionAction {\n \n     PROVISION,"},{"sha":"26933f93feabe8f3f1ae9d84977a37bb788c7364","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/PullMode.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum PullMode {\n     FULL_RECONCILIATION,\n     FILTERED_RECONCILIATION,"},{"sha":"9b95af22b27bd961e8383751951272d48548e32a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ReportExecExportFormat.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecExportFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecExportFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecExportFormat.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ReportExecExportFormat {\n \n     XML,"},{"sha":"2cbece1e7c453e3750fe317c714a9edf9da26749","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ReportExecStatus.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportExecStatus.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ReportExecStatus {\n \n     STARTED,"},{"sha":"cd91e0741d0ef63076cb07daf1c4b739f774b7bd","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ReportTemplateFormat.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportTemplateFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportTemplateFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FReportTemplateFormat.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ReportTemplateFormat {\n \n     FO,"},{"sha":"f17b6ec4e5cd37a68a5bab551fc449f9da453d00","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceAssociationAction.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationAction.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ResourceAssociationAction {\n \n     /**"},{"sha":"cabedcfbeeb0cdc69016e80c5f44e317d72d2bad","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceDeassociationAction.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationAction.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ResourceDeassociationAction {\n \n     /**"},{"sha":"dee3d717877272671cc024bdbc10d553002ba1de","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceOperation.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceOperation.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum ResourceOperation {\n \n     CREATE,"},{"sha":"3f75868705741ebf9355332ffb99edf19a29ff1f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/SchemaType.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSchemaType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,11 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n \n-@XmlEnum\n public enum SchemaType {\n \n     /**"},{"sha":"3c7b2d9d901c147c50577b8a5598f57c8847904a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/StatusRType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStatusRType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStatusRType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStatusRType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum StatusRType {\n \n     ACTIVATE,"},{"sha":"97d79df00a73df096d21d9039e424ba04e6076ff","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/TaskType.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,15 +18,13 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n import org.apache.syncope.common.lib.to.NotificationTaskTO;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.TaskTO;\n \n-@XmlEnum\n public enum TaskType {\n \n     PROPAGATION(PropagationTaskTO.class),"},{"sha":"2de1500f0a89ea830beebaece68ee4098b7c92ac","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/TraceLevel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTraceLevel.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum TraceLevel {\n \n     /**"},{"sha":"f286812923b23a7591a32d03489a38c8f25e76d1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/UnmatchingRule.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUnmatchingRule.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n /**\n  * Pull/Push task un-matching rule.\n  */\n-@XmlEnum\n public enum UnmatchingRule {\n \n     /**"},{"sha":"2a43129910be83fc1195beddbf7ba9ac4d2a0103","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/package-info.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2Fpackage-info.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.types;\n-\n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;"},{"sha":"cc6aa4f7c965b157aa8f22a69ff58ddd32c767c9","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/JAXBTest.java","status":"removed","additions":0,"deletions":110,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,110 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n-import java.io.StringReader;\n-import java.io.StringWriter;\n-import java.util.Calendar;\n-import java.util.Date;\n-import javax.xml.bind.JAXBContext;\n-import javax.xml.bind.JAXBException;\n-import javax.xml.bind.Marshaller;\n-import javax.xml.bind.Unmarshaller;\n-import org.apache.commons.lang3.exception.ExceptionUtils;\n-import org.apache.syncope.common.lib.info.NumbersInfo;\n-import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.report.UserReportletConf;\n-import org.apache.syncope.common.lib.to.ExecTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.junit.jupiter.api.Test;\n-\n-public class JAXBTest {\n-\n-    @Test\n-    public void marshal() {\n-        try {\n-            JAXBContext context = JAXBContext.newInstance(UserTO.class, UserUR.class, UserReportletConf.class);\n-            Marshaller marshaller = context.createMarshaller();\n-            marshaller.marshal(new UserTO(), new StringWriter());\n-            marshaller.marshal(new UserUR(), new StringWriter());\n-        } catch (JAXBException e) {\n-            fail(() -> ExceptionUtils.getStackTrace(e));\n-        }\n-    }\n-\n-    @Test\n-    public void numbersInfo() throws JAXBException {\n-        JAXBContext context = JAXBContext.newInstance(NumbersInfo.class);\n-        Marshaller marshaller = context.createMarshaller();\n-        Unmarshaller unmarshaller = context.createUnmarshaller();\n-\n-        NumbersInfo original = new NumbersInfo();\n-        original.setTotalUsers(5);\n-        original.getUsersByRealm().put(\"/\", 4);\n-        original.getUsersByRealm().put(\"/even\", 1);\n-        original.getUsersByStatus().put(\"active\", 5);\n-        original.setTotalGroups(16);\n-        original.getGroupsByRealm().put(\"/\", 14);\n-        original.getGroupsByRealm().put(\"/even\", 1);\n-        original.getGroupsByRealm().put(\"/odd\", 1);\n-        original.setAnyType1(\"PRINTER\");\n-        original.setTotalAny1(3);\n-        original.getAny1ByRealm().put(\"/\", 2);\n-        original.getAny1ByRealm().put(\"/even/two\", 1);\n-        original.setTotalResources(21);\n-        original.setTotalRoles(4);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.ANY_TYPE.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.PULL_TASK.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.ROLE.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.NOTIFICATION.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.PASSWORD_POLICY.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.ACCOUNT_POLICY.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.RESOURCE.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.VIR_SCHEMA.name(), Boolean.TRUE);\n-        original.getConfCompleteness().put(NumbersInfo.ConfItem.SECURITY_QUESTION.name(), Boolean.TRUE);\n-\n-        StringWriter writer = new StringWriter();\n-        marshaller.marshal(original, writer);\n-\n-        Object actual = unmarshaller.unmarshal(new StringReader(writer.toString()));\n-        assertEquals(original, actual);\n-    }\n-\n-    @Test\n-    public void issueSYNCOPE1541() throws JAXBException {\n-        JAXBContext context = JAXBContext.newInstance(ExecTO.class);\n-        Marshaller marshaller = context.createMarshaller();\n-\n-        Calendar cal = Calendar.getInstance();\n-        cal.setTime(new Date());\n-        cal.set(Calendar.MILLISECOND, 0);\n-\n-        ExecTO exec = new ExecTO();\n-        exec.setStart(cal.getTime());\n-\n-        StringWriter writer = new StringWriter();\n-        marshaller.marshal(exec, writer);\n-\n-        assertTrue(writer.toString().contains(\".000\"));\n-    }\n-}"},{"sha":"14d547df88883af40869341663533656f3b602f2","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/JSONTest.java","status":"modified","additions":5,"deletions":49,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,58 +18,14 @@\n  */\n package org.apache.syncope.common.lib;\n \n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-\n import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.util.UUID;\n-import org.apache.syncope.common.lib.request.GroupUR;\n-import org.apache.syncope.common.lib.request.PasswordPatch;\n-import org.apache.syncope.common.lib.request.StringPatchItem;\n-import org.apache.syncope.common.lib.request.StringReplacePatchItem;\n-import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.types.PatchOperation;\n-import org.junit.jupiter.api.Test;\n-\n-public class JSONTest {\n-\n-    @Test\n-    public void map() throws IOException {\n-        GroupUR prop = new GroupUR();\n-        prop.getADynMembershipConds().put(\"key1\", \"value1\");\n-        prop.getADynMembershipConds().put(\"key2\", \"value2\");\n-\n-        ObjectMapper mapper = new ObjectMapper();\n-\n-        StringWriter writer = new StringWriter();\n-        mapper.writeValue(writer, prop);\n-\n-        GroupUR unserializedProp = mapper.readValue(writer.toString(), GroupUR.class);\n-        assertEquals(prop, unserializedProp);\n-    }\n-\n-    @Test\n-    public void patch() throws IOException {\n-        UserUR req = new UserUR();\n-        req.setKey(UUID.randomUUID().toString());\n-        req.setUsername(new StringReplacePatchItem.Builder().value(\"newusername\").build());\n-        assertNotNull(req.getUsername().getValue());\n-        req.setPassword(new PasswordPatch.Builder().\n-                onSyncope(false).\n-                resource(\"ext1\").resource(\"ext2\").\n-                value(\"newpassword\").\n-                build());\n-        assertNotNull(req.getPassword().getValue());\n-        req.getRoles().add(new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(\"role\").build());\n \n-        ObjectMapper mapper = new ObjectMapper();\n+public class JSONTest extends SerializationTest {\n \n-        StringWriter writer = new StringWriter();\n-        mapper.writeValue(writer, req);\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n-        UserUR actual = mapper.readValue(writer.toString(), UserUR.class);\n-        assertEquals(req, actual);\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return OBJECT_MAPPER;\n     }\n }"},{"sha":"09db8ab5b43a6fa92308d81e2cf440e177746165","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/SerializationTest.java","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,127 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.UUID;\n+import org.apache.syncope.common.lib.request.GroupUR;\n+import org.apache.syncope.common.lib.request.PasswordPatch;\n+import org.apache.syncope.common.lib.request.StringPatchItem;\n+import org.apache.syncope.common.lib.request.StringReplacePatchItem;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.types.PatchOperation;\n+import org.junit.jupiter.api.Test;\n+\n+public abstract class SerializationTest {\n+\n+    protected abstract ObjectMapper objectMapper();\n+\n+    @Test\n+    public void map() throws IOException {\n+        GroupUR req = new GroupUR();\n+        req.setKey(UUID.randomUUID().toString());\n+        req.getADynMembershipConds().put(\"key1\", \"value1\");\n+        req.getADynMembershipConds().put(\"key2\", \"value2\");\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, req);\n+\n+        GroupUR actual = objectMapper().readValue(writer.toString(), GroupUR.class);\n+        assertEquals(req, actual);\n+    }\n+\n+    @Test\n+    public void patch() throws IOException {\n+        UserUR req = new UserUR();\n+        req.setKey(UUID.randomUUID().toString());\n+        req.setUsername(new StringReplacePatchItem.Builder().value(\"newusername\").build());\n+        assertNotNull(req.getUsername().getValue());\n+        req.setPassword(new PasswordPatch.Builder().\n+                onSyncope(false).\n+                resource(\"ext1\").resource(\"ext2\").\n+                value(\"newpassword\").\n+                build());\n+        assertNotNull(req.getPassword().getValue());\n+        req.getRoles().add(new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(\"role\").build());\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, req);\n+\n+        UserUR actual = objectMapper().readValue(writer.toString(), UserUR.class);\n+        assertEquals(req, actual);\n+    }\n+\n+    @Test\n+    public void pagedResult() throws IOException {\n+        GroupTO group = new GroupTO();\n+        group.setName(UUID.randomUUID().toString());\n+        group.setRealm(SyncopeConstants.ROOT_REALM);\n+        group.getPlainAttrs().add(new Attr.Builder(\"style\").value(\"cool\").value(\"great\").build());\n+        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n+\n+        PagedResult<GroupTO> original = new PagedResult<>();\n+        original.getResult().add(group);\n+        original.setSize(1);\n+        original.setTotalCount(1);\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, original);\n+\n+        PagedResult<GroupTO> actual = objectMapper().readValue(writer.toString(),\n+                new TypeReference<PagedResult<GroupTO>>() {\n+        });\n+        assertEquals(original, actual);\n+    }\n+\n+    @Test\n+    public void provisioningResult() throws IOException {\n+        GroupTO group = new GroupTO();\n+        group.setName(UUID.randomUUID().toString());\n+        group.setRealm(SyncopeConstants.ROOT_REALM);\n+        group.getVirAttrs().add(new Attr.Builder(\"rvirtualdata\").value(\"rvirtualvalue\").build());\n+        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n+\n+        ProvisioningResult<GroupTO> original = new ProvisioningResult<>();\n+        original.setEntity(group);\n+\n+        PropagationStatus status = new PropagationStatus();\n+        status.setFailureReason(\"failed\");\n+        status.setBeforeObj(new ConnObjectTO());\n+        original.getPropagationStatuses().add(status);\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, original);\n+\n+        ProvisioningResult<GroupTO> actual = objectMapper().readValue(writer.toString(),\n+                new TypeReference<ProvisioningResult<GroupTO>>() {\n+        });\n+        assertEquals(original, actual);\n+    }\n+}"},{"sha":"25f2a2a8a0909a0eb0e5665601d72431a0dbe0f6","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/XMLTest.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+import com.fasterxml.jackson.annotation.JsonSetter;\n+import com.fasterxml.jackson.annotation.Nulls;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class XMLTest extends SerializationTest {\n+\n+    private static final XmlMapper XML_MAPPER;\n+\n+    static {\n+        XML_MAPPER = new XmlMapper();\n+        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+    }\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return XML_MAPPER;\n+    }\n+}"},{"sha":"5ff49001c769d8bcf508957115888e8f0fd3e974","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/YAMLTest.java","status":"renamed","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FYAMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,15 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n-package org.apache.syncope.common.lib.auth;\n+package org.apache.syncope.common.lib;\n \n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n \n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n+public class YAMLTest extends SerializationTest {\n \n-import java.util.Date;\n+    private static final YAMLMapper YAML_MAPPER = new YAMLMapper();\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return YAML_MAPPER;\n+    }\n+}","previous_filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/package-info.java"},{"sha":"7599c8deeee08ff9eb1b0fd6a6ed90372bfc3baf","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/GoogleMfaAuthTokenLogic.java","status":"modified","additions":55,"deletions":66,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGoogleMfaAuthTokenLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGoogleMfaAuthTokenLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGoogleMfaAuthTokenLogic.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,9 +16,14 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.logic;\n \n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.function.Predicate;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.to.AuthProfileTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n@@ -34,15 +39,9 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.UUID;\n-import java.util.function.Predicate;\n-\n @Component\n public class GoogleMfaAuthTokenLogic extends AbstractTransactionalLogic<AuthProfileTO> {\n+\n     @Autowired\n     private AuthProfileDAO authProfileDAO;\n \n@@ -53,24 +52,24 @@ public class GoogleMfaAuthTokenLogic extends AbstractTransactionalLogic<AuthProf\n     private AuthProfileDataBinder authProfileDataBinder;\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final Date expirationDate) {\n         authProfileDAO.\n-            findAll().\n-            forEach(profile -> removeTokenAndSave(profile,\n+                findAll().\n+                forEach(profile -> removeTokenAndSave(profile,\n                 token -> token.getIssueDate().compareTo(expirationDate) >= 0));\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner, final Integer otp) {\n         authProfileDAO.findByOwner(owner).\n-            ifPresent(profile -> removeTokenAndSave(profile,\n+                ifPresent(profile -> removeTokenAndSave(profile,\n                 token -> token.getToken().equals(otp)));\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n             profile.setGoogleMfaAuthTokens(List.of());\n@@ -79,99 +78,89 @@ public void delete(final String owner) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final Integer otp) {\n         authProfileDAO.findAll().\n-            forEach(profile -> removeTokenAndSave(profile,\n+                forEach(profile -> removeTokenAndSave(profile,\n                 token -> token.getToken().equals(otp)));\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void deleteAll() {\n         authProfileDAO.findAll().\n-            forEach(profile -> {\n-                profile.setGoogleMfaAuthTokens(List.of());\n-                authProfileDAO.save(profile);\n-            });\n+                forEach(profile -> {\n+                    profile.setGoogleMfaAuthTokens(List.of());\n+                    authProfileDAO.save(profile);\n+                });\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_SAVE_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public GoogleMfaAuthToken save(final GoogleMfaAuthToken token) {\n         AuthProfile profile = authProfileDAO.findByOwner(token.getOwner()).\n-            orElseGet(() -> {\n-                final AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n-                authProfile.setOwner(token.getOwner());\n-                return authProfile;\n-            });\n+                orElseGet(() -> {\n+                    final AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n+                    authProfile.setOwner(token.getOwner());\n+                    return authProfile;\n+                });\n \n         if (token.getKey() == null) {\n             token.setKey(UUID.randomUUID().toString());\n         }\n         profile.add(token);\n         profile = authProfileDAO.save(profile);\n         return profile.getGoogleMfaAuthTokens().\n-            stream().\n-            filter(t -> t.getToken().equals(token.getToken())).\n-            findFirst().\n-            orElse(null);\n+                stream().\n+                filter(t -> t.getToken().equals(token.getToken())).\n+                findFirst().\n+                orElse(null);\n \n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public GoogleMfaAuthToken read(final String owner, final Integer otp) {\n         return authProfileDAO.findByOwner(owner).\n-            stream().\n-            map(AuthProfile::getGoogleMfaAuthTokens).\n-            flatMap(List::stream).\n-            filter(token -> token.getToken().equals(otp)).\n-            findFirst().\n-            orElseThrow(() -> new NotFoundException(\"Could not find token for Owner \" + owner + \" and otp \" + otp));\n+                stream().\n+                map(AuthProfile::getGoogleMfaAuthTokens).\n+                flatMap(List::stream).\n+                filter(token -> token.getToken().equals(otp)).\n+                findFirst().\n+                orElseThrow(() -> new NotFoundException(\"Could not find token for Owner \" + owner + \" and otp \" + otp));\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public GoogleMfaAuthToken read(final String key) {\n         return authProfileDAO.findAll().\n-            stream().\n-            map(AuthProfile::getGoogleMfaAuthTokens).\n-            flatMap(List::stream).\n-            filter(token -> token.getKey().equals(key)).\n-            findFirst().\n-            orElse(null);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_COUNT_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n-    @Transactional(readOnly = true)\n-    public long countTokensFor(final String owner) {\n-        return authProfileDAO.findByOwner(owner).\n-            stream().\n-            mapToLong(profile -> profile.getGoogleMfaAuthTokens().size()).\n-            sum();\n+                stream().\n+                map(AuthProfile::getGoogleMfaAuthTokens).\n+                flatMap(List::stream).\n+                filter(token -> token.getKey().equals(key)).\n+                findFirst().\n+                orElse(null);\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_COUNT_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n-    public long countAll() {\n+    public int countAll() {\n         return authProfileDAO.findAll().\n-            stream().\n-            mapToLong(profile -> profile.getGoogleMfaAuthTokens().size()).\n-            sum();\n+                stream().\n+                mapToInt(profile -> profile.getGoogleMfaAuthTokens().size()).\n+                sum();\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_TOKEN + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<GoogleMfaAuthToken> findTokensFor(final String owner) {\n         return authProfileDAO.findByOwner(owner).\n-            map(profile -> new ArrayList<>(profile.getGoogleMfaAuthTokens())).\n-            orElse(new ArrayList<>(0));\n+                map(profile -> new ArrayList<>(profile.getGoogleMfaAuthTokens())).\n+                orElse(new ArrayList<>(0));\n     }\n \n     private void removeTokenAndSave(final AuthProfile profile, final Predicate<GoogleMfaAuthToken> criteria) {\n@@ -185,7 +174,7 @@ private void removeTokenAndSave(final AuthProfile profile, final Predicate<Googl\n \n     @Override\n     protected AuthProfileTO resolveReference(final Method method, final Object... args)\n-        throws UnresolvedReferenceException {\n+            throws UnresolvedReferenceException {\n         String key = null;\n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n@@ -200,8 +189,8 @@ protected AuthProfileTO resolveReference(final Method method, final Object... ar\n         if (key != null) {\n             try {\n                 return authProfileDAO.findByKey(key).\n-                    map(authProfileDataBinder::getAuthProfileTO).\n-                    orElseThrow();\n+                        map(authProfileDataBinder::getAuthProfileTO).\n+                        orElseThrow();\n             } catch (Throwable ignore) {\n                 LOG.debug(\"Unresolved reference\", ignore);\n                 throw new UnresolvedReferenceException(ignore);"},{"sha":"90ef78fa49193cc06ced036a571b54f52eff9cc9","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/wa/GoogleMfaAuthTokenServiceImpl.java","status":"modified","additions":25,"deletions":17,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FGoogleMfaAuthTokenServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FGoogleMfaAuthTokenServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FGoogleMfaAuthTokenServiceImpl.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,9 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.rest.cxf.service.wa;\n \n+import java.net.URI;\n+import java.util.Date;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.types.GoogleMfaAuthToken;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.wa.GoogleMfaAuthTokenService;\n@@ -27,14 +31,9 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n-import javax.ws.rs.core.Response;\n-\n-import java.net.URI;\n-import java.util.Date;\n-import java.util.List;\n-\n @Service\n public class GoogleMfaAuthTokenServiceImpl extends AbstractServiceImpl implements GoogleMfaAuthTokenService {\n+\n     @Autowired\n     private GoogleMfaAuthTokenLogic logic;\n \n@@ -73,8 +72,8 @@ public Response save(final GoogleMfaAuthToken tokenTO) {\n         final GoogleMfaAuthToken token = logic.save(tokenTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(token.getKey()).build();\n         return Response.created(location).\n-            header(RESTHeaders.RESOURCE_KEY, token.getKey()).\n-            build();\n+                header(RESTHeaders.RESOURCE_KEY, token.getKey()).\n+                build();\n     }\n \n     @Override\n@@ -83,8 +82,17 @@ public GoogleMfaAuthToken findTokenFor(final String owner, final Integer otp) {\n     }\n \n     @Override\n-    public List<GoogleMfaAuthToken> findTokensFor(final String owner) {\n-        return logic.findTokensFor(owner);\n+    public PagedResult<GoogleMfaAuthToken> findTokensFor(final String owner) {\n+        List<GoogleMfaAuthToken> tokens = logic.findTokensFor(owner);\n+\n+        PagedResult<GoogleMfaAuthToken> result = new PagedResult<>();\n+        result.getResult().addAll(tokens);\n+\n+        result.setPage(1);\n+        result.setSize(result.getResult().size());\n+        result.setTotalCount(result.getSize());\n+\n+        return result;\n     }\n \n     @Override\n@@ -93,12 +101,12 @@ public GoogleMfaAuthToken findTokenFor(final String key) {\n     }\n \n     @Override\n-    public long countTokensForOwner(final String owner) {\n-        return logic.countTokensFor(owner);\n-    }\n+    public PagedResult<GoogleMfaAuthToken> countTokens() {\n+        PagedResult<GoogleMfaAuthToken> result = new PagedResult<>();\n \n-    @Override\n-    public long countTokens() {\n-        return logic.countAll();\n+        result.setSize(logic.countAll());\n+        result.setTotalCount(result.getSize());\n+\n+        return result;\n     }\n }"},{"sha":"108b211863d1879ce5fff509dd09f47734da9e9e","filename":"core/idrepo/rest-cxf/pom.xml","status":"modified","additions":4,"deletions":17,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -67,6 +67,10 @@ under the License.\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-json-provider</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-xml-provider</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-yaml-provider</artifactId>\n@@ -118,23 +122,6 @@ under the License.\n       <artifactId>syncope-common-idrepo-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-            \n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery</artifactId>\n-    </dependency>    \n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery-ui</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery-ui-themes</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>highlightjs</artifactId>\n-    </dependency>\n \n     <!-- TEST -->\n     <dependency>"},{"sha":"c2b9c6d53d590907b034d105772e8cdec80edc2c","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RESTCXFContext.java","status":"modified","additions":15,"deletions":40,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.core.rest.cxf;\n \n-import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n-import com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;\n+import com.fasterxml.jackson.jaxrs.yaml.JacksonYAMLProvider;\n import io.swagger.v3.oas.models.security.SecurityScheme;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -35,14 +35,11 @@\n import org.apache.cxf.jaxrs.ext.search.SearchContextProvider;\n import org.apache.cxf.jaxrs.ext.search.SearchUtils;\n import org.apache.cxf.jaxrs.openapi.OpenApiFeature;\n-import org.apache.cxf.jaxrs.provider.JAXBElementProvider;\n import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n-import org.apache.cxf.staxutils.DocumentDepthProperties;\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n import org.apache.cxf.validation.BeanValidationProvider;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.SyncopeFiqlParser;\n import org.apache.syncope.common.rest.api.DateParamConverterProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -83,29 +80,22 @@ public DateParamConverterProvider dateParamConverterProvider() {\n     }\n \n     @Bean\n-    public JAXBElementProvider<?> jaxbProvider() {\n-        JAXBElementProvider<?> jaxbProvider = new JAXBElementProvider<>();\n-        jaxbProvider.setNamespacePrefixes(Map.of(SyncopeConstants.NS, SyncopeConstants.NS_PREFIX));\n-\n-        DocumentDepthProperties documentDepthProperties = new DocumentDepthProperties();\n-        documentDepthProperties.setInnerElementCountThreshold(500);\n-        jaxbProvider.setDepthProperties(documentDepthProperties);\n-\n-        jaxbProvider.setCollectionWrapperMap(Map.of(\"org.apache.syncope.common.lib.policy.PolicyTO\", \"policies\"));\n-\n-        return jaxbProvider;\n+    public JacksonJsonProvider jsonProvider() {\n+        JacksonJsonProvider jsonProvider = new JacksonJsonProvider();\n+        jsonProvider.setMapper(new SyncopeObjectMapper());\n+        return jsonProvider;\n     }\n \n     @Bean\n-    public JacksonJaxbJsonProvider jsonProvider() {\n-        JacksonJaxbJsonProvider jsonProvider = new JacksonJaxbJsonProvider();\n-        jsonProvider.setMapper(new SyncopeObjectMapper());\n-        return jsonProvider;\n+    public JacksonXMLProvider xmlProvider() {\n+        JacksonXMLProvider xmlProvider = new JacksonXMLProvider();\n+        xmlProvider.setMapper(new SyncopeXmlMapper());\n+        return xmlProvider;\n     }\n \n     @Bean\n-    public JacksonJaxbYAMLProvider yamlProvider() {\n-        JacksonJaxbYAMLProvider yamlProvider = new JacksonJaxbYAMLProvider();\n+    public JacksonYAMLProvider yamlProvider() {\n+        JacksonYAMLProvider yamlProvider = new JacksonYAMLProvider();\n         yamlProvider.setMapper(new SyncopeYAMLMapper());\n         return yamlProvider;\n     }\n@@ -160,20 +150,6 @@ public AddETagFilter addETagFilter() {\n         return new AddETagFilter();\n     }\n \n-    @Bean\n-    public WadlGenerator wadlGenerator() {\n-        WadlGenerator wadlGenerator = new WadlGenerator();\n-        wadlGenerator.setApplicationTitle(\"Apache Syncope \" + version);\n-        wadlGenerator.setNamespacePrefix(SyncopeConstants.NS_PREFIX);\n-        wadlGenerator.setIncrementNamespacePrefix(false);\n-        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n-        wadlGenerator.setUseJaxbContextForQnames(true);\n-        wadlGenerator.setAddResourceAndMethodIds(true);\n-        wadlGenerator.setIgnoreMessageWriters(true);\n-        wadlGenerator.setUsePathParamsToCompareOperations(false);\n-        return wadlGenerator;\n-    }\n-\n     @Bean\n     public OpenApiFeature openapiFeature() {\n         OpenApiFeature openapiFeature = new OpenApiFeature();\n@@ -224,15 +200,14 @@ public Server restContainer() {\n \n         restContainer.setProviders(List.of(\n                 dateParamConverterProvider(),\n-                jaxbProvider(),\n                 jsonProvider(),\n+                xmlProvider(),\n                 yamlProvider(),\n                 restServiceExceptionMapper(),\n                 searchContextProvider(),\n                 checkDomainFilter(),\n                 addDomainFilter(),\n-                addETagFilter(),\n-                wadlGenerator()));\n+                addETagFilter()));\n \n         restContainer.setInInterceptors(List.of(\n                 gzipInInterceptor(),"},{"sha":"6301769f9d2723fb9b2a581c82249cafc27f949b","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -60,7 +60,7 @@\n \n public class SyncopeOpenApiCustomizer extends OpenApiCustomizer {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(WadlGenerator.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeOpenApiCustomizer.class);\n \n     private final Environment env;\n "},{"sha":"a78f61d70fc7b0a1caaee3c5dec349a413a99165","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeXmlMapper.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeXmlMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeXmlMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeXmlMapper.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import com.fasterxml.jackson.annotation.JsonSetter;\n+import com.fasterxml.jackson.annotation.Nulls;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.datatype.joda.JodaModule;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class SyncopeXmlMapper extends XmlMapper {\n+\n+    private static final long serialVersionUID = 1022020055828974308L;\n+\n+    public SyncopeXmlMapper() {\n+        super();\n+\n+        registerModule(new JodaModule());\n+        configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n+        configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+    }\n+}"},{"sha":"89173b0a9e11907691095d4b95f5f091f50b3a4a","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLInitializer.java","status":"removed","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,42 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf;\n-\n-import javax.servlet.ServletContext;\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRegistration;\n-import org.springframework.boot.web.servlet.ServletContextInitializer;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n-import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n-\n-@Configuration\n-public class WADLInitializer implements WebMvcConfigurer, ServletContextInitializer {\n-\n-    @Override\n-    public void addViewControllers(final ViewControllerRegistry registry) {\n-        registry.addViewController(\"/\").setViewName(\"forward:/index.html\");\n-    }\n-\n-    @Override\n-    public void onStartup(final ServletContext sc) throws ServletException {\n-        ServletRegistration.Dynamic wadlServlet = sc.addServlet(\"WADLServlet\", WADLServlet.class);\n-        wadlServlet.addMapping(\"/index.html\", \"/schema_1_syncope30.html\", \"/syncope.wadl\");\n-    }\n-}"},{"sha":"8ef9a265c346a6c055c7d1bdce9295a4f709b06d","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,116 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf;\n-\n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.rmi.ServerException;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.cocoon.pipeline.CachingPipeline;\n-import org.apache.cocoon.pipeline.Pipeline;\n-import org.apache.cocoon.sax.SAXPipelineComponent;\n-import org.apache.cocoon.sax.component.XMLGenerator;\n-import org.apache.cocoon.sax.component.XMLSerializer;\n-import org.apache.cocoon.sax.component.XSLTTransformer;\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n-\n-public class WADLServlet extends HttpServlet {\n-\n-    private static final long serialVersionUID = -6737005675471095560L;\n-\n-    private static final Pattern SCHEMA_PATTERN = Pattern.compile(\"/schema_(.*)_(.*)\\\\.html\");\n-\n-    protected static void finish(final Pipeline<SAXPipelineComponent> pipeline, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        pipeline.addComponent(XMLSerializer.createHTML4Serializer());\n-        pipeline.setup(response.getOutputStream());\n-        try {\n-            pipeline.execute();\n-        } catch (Exception e) {\n-            throw new ServletException(e);\n-        }\n-    }\n-\n-    /**\n-     * Handles the HTTP {@code GET} method.\n-     *\n-     * @param request servlet request\n-     * @param response servlet response\n-     * @throws ServletException if a servlet-specific error occurs\n-     * @throws IOException if an I/O error occurs\n-     */\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        Matcher schemaMatcher = SCHEMA_PATTERN.matcher(request.getServletPath());\n-\n-        WadlGenerator wadlGenerator = ApplicationContextProvider.getApplicationContext().getBean(WadlGenerator.class);\n-        String wadl = wadlGenerator.getWadl();\n-\n-        Pipeline<SAXPipelineComponent> pipeline = new CachingPipeline<>();\n-        pipeline.addComponent(new XMLGenerator(wadl));\n-        if (StringUtils.isEmpty(request.getServletPath()) || \"/index.html\".equals(request.getServletPath())) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/index.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-\n-            finish(pipeline, response);\n-        } else if (schemaMatcher.matches()) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/schema.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            parameters.put(\"schema-position\", schemaMatcher.group(1));\n-            parameters.put(\"schema-prefix\", schemaMatcher.group(2));\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-\n-            finish(pipeline, response);\n-        } else if (\"/syncope.wadl\".equals(request.getServletPath())) {\n-            response.setContentType(MediaType.APPLICATION_XML);\n-\n-            try (InputStream in = new ByteArrayInputStream(wadl.getBytes());\n-                    OutputStream out = response.getOutputStream()) {\n-\n-                IOUtils.copy(in, out);\n-            }\n-        } else {\n-            throw new ServerException(\"URL not supported: \" + request.getRequestURI());\n-        }\n-    }\n-}"},{"sha":"8356a9d337caffac1ac48ed3d6c21c52c69d7532","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WadlGenerator.java","status":"removed","additions":0,"deletions":130,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,130 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf;\n-\n-import java.lang.annotation.Annotation;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.container.ContainerRequestContext;\n-import org.apache.cxf.BusFactory;\n-import org.apache.cxf.common.util.ClasspathScanner;\n-import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n-import org.apache.cxf.jaxrs.utils.InjectionUtils;\n-import org.apache.cxf.jaxrs.utils.ResourceUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.context.EnvironmentAware;\n-import org.springframework.core.env.Environment;\n-\n-/**\n- * Automatically loads available javadocs from class loader (when {@link java.net.URLClassLoader}).\n- */\n-public class WadlGenerator extends org.apache.cxf.jaxrs.model.wadl.WadlGenerator implements EnvironmentAware {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(WadlGenerator.class);\n-\n-    private Environment env;\n-\n-    private boolean inited = false;\n-\n-    private String wadl = null;\n-\n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n-\n-    private void init() {\n-        synchronized (this) {\n-            if (!inited) {\n-                URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n-                if (javaDocURLs == null) {\n-                    String[] javaDocPaths = JavaDocUtils.getJavaDocPaths(env);\n-                    if (javaDocPaths != null) {\n-                        try {\n-                            super.setJavaDocPaths(javaDocPaths);\n-                        } catch (Exception e) {\n-                            LOG.error(\"Could not set javadoc paths from {}\", List.of(javaDocPaths), e);\n-                        }\n-                    }\n-                } else {\n-                    super.setJavaDocURLs(javaDocURLs);\n-                }\n-\n-                inited = true;\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void filter(final ContainerRequestContext context) {\n-        init();\n-        super.filter(context);\n-    }\n-\n-    public String getWadl() {\n-        synchronized (this) {\n-            if (wadl == null) {\n-                init();\n-\n-                List<Class<?>> resourceClasses = new ArrayList<>();\n-                try {\n-                    List<Class<? extends Annotation>> anns = new ArrayList<>();\n-                    anns.add(Path.class);\n-                    Map<Class<? extends Annotation>, Collection<Class<?>>> discoveredClasses =\n-                            ClasspathScanner.findClasses(ClasspathScanner.parsePackages(\n-                                    \"org.apache.syncope.common.rest.api.service\"),\n-                                    anns);\n-                    if (discoveredClasses.containsKey(Path.class)) {\n-                        resourceClasses.addAll(discoveredClasses.get(Path.class));\n-                    }\n-                } catch (Exception e) {\n-                    // ignore\n-                }\n-\n-                List<ClassResourceInfo> classResourceInfos = new ArrayList<>();\n-                for (final Class<?> beanClass : resourceClasses) {\n-                    Optional<ClassResourceInfo> cri = classResourceInfos.stream().filter(c\n-                            -> c.isCreatedFromModel() && c.isRoot() && c.getServiceClass().isAssignableFrom(beanClass)).\n-                            findFirst();\n-                    if (cri.isPresent()) {\n-                        if (!InjectionUtils.isConcreteClass(cri.get().getServiceClass())) {\n-                            cri = Optional.of(new ClassResourceInfo(cri.get()));\n-                            classResourceInfos.add(cri.get());\n-                        }\n-                        cri.get().setResourceClass(beanClass);\n-                    } else {\n-                        cri = Optional.ofNullable(ResourceUtils.createClassResourceInfo(\n-                                beanClass, beanClass, true, true, BusFactory.getDefaultBus()));\n-                        cri.ifPresent(classResourceInfos::add);\n-                    }\n-                }\n-\n-                wadl = generateWADL(\"/\", classResourceInfos, false, null, null).toString();\n-            }\n-        }\n-\n-        return wadl;\n-    }\n-}"},{"sha":"68646166763714d9748400c675482927b5343b87","filename":"core/idrepo/rest-cxf/src/main/resources/META-INF/spring.factories","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,5 +16,4 @@\n # under the License.\n \n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.core.rest.cxf.RESTCXFContext,\\\n-  org.apache.syncope.core.rest.cxf.WADLInitializer\n+  org.apache.syncope.core.rest.cxf.RESTCXFContext"},{"sha":"e13ac2dd4f48500e917919fc5142b0f0ad75ecdf","filename":"core/idrepo/rest-cxf/src/main/resources/wadl2html/index.xsl","status":"removed","additions":0,"deletions":423,"changes":423,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,423 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one\n-  or more contributor license agreements.  See the NOTICE file\n-  distributed with this work for additional information\n-  regarding copyright ownership.  The ASF licenses this file\n-  to you under the Apache License, Version 2.0 (the\n-  \"License\"); you may not use this file except in compliance\n-  with the License.  You may obtain a copy of the License at\n-\n-   http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing,\n-  software distributed under the License is distributed on an\n-  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-  KIND, either express or implied.  See the License for the\n-  specific language governing permissions and limitations\n-  under the License.\n--->\n-<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n-                xmlns:xalan=\"http://xml.apache.org/xalan\"\n-                xmlns:wadl=\"http://wadl.dev.java.net/2009/02\"\n-                xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n-                exclude-result-prefixes=\"xalan wadl xs\"\n-                version=\"1.0\">\n-  \n-  <xsl:param name=\"contextPath\"/>\n-  \n-  <xsl:variable name=\"namespaces\">       \n-    <xsl:for-each select=\"/*/namespace::*\">\n-      <namespace prefix=\"{name()}\" url=\"{.}\"/>            \n-    </xsl:for-each>\n-  </xsl:variable>\n-\n-  <xsl:variable name=\"namespacePos\">       \n-    <xsl:for-each select=\"//xs:schema\">\n-      <namespace url=\"{@targetNamespace}\" position=\"{position()}\"/>\n-    </xsl:for-each>\n-  </xsl:variable>\n-\n-  <xsl:template match=\"/wadl:application\">  \n-    <html lang=\"en\">\n-      <head>\n-        <meta charset=\"utf-8\"/>\n-        <title>          \n-          <xsl:value-of select=\"wadl:doc/@title\"/>\n-        </title>\n-\n-        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui-themes/${jquery-ui.version}/smoothness/jquery-ui.min.css\"/>\n-        <style>\n-          body {\n-          font-family: \"Verdana,Arial,sans-serif\";\n-          font-size: 0.9em;\n-          }\n-\n-          table {\n-          font-family: \"Verdana,Arial,sans-serif\";\n-          font-size: 0.9em;\n-          border-width: 1px;\n-          border-color: #666666;\n-          border-collapse: collapse;\n-          }\n-          table th {\n-          border-width: 1px;\n-          padding: 8px;\n-          border-style: solid;\n-          border-color: #666666;\n-          background-color: #dedede;\n-          }\n-          td {\n-          border-width: 1px;\n-          padding: 8px;\n-          border-style: solid;\n-          border-color: #666666;\n-          background-color: #ffffff;\n-          vertical-align: top;\n-          }\n-\n-          .methods {\n-          padding: 5px;\n-          }\n-\n-          .representation-label {\n-          font-weight: bold;\n-          width: 80px;\n-          }\n-\n-          .ui-widget { font-size: 0.9em; }\n-          .ui-tabs-vertical { width: 60em; }\n-          .ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 16em; }\n-          .ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n-          .ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n-          .ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n-          .ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n-        </style>\n-        \n-        <script src=\"{$contextPath}/webjars/jquery/${jquery.version}/jquery.min.js\">\n-        </script>\n-        <script src=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\">          \n-        </script>\n-        <script>\n-          //<![CDATA[\n-          $(function() {\n-          //]]>\n-          <xsl:for-each select=\"wadl:resources/wadl:resource\">\n-            <xsl:sort select=\"@path\"/>\n-            <xsl:text>$( \"#accordion-</xsl:text>\n-            <xsl:value-of select=\"position()\"/>\n-            <xsl:text>\" ).accordion({\n-              collapsible: true,\n-              heightStyle: \"content\",\n-              active: false\n-              });\n-            </xsl:text>\n-            \n-            <xsl:variable name=\"parentResourcePath\" select=\"translate(@path, '|/{}:.*', '_______')\"/>\n-            <xsl:call-template name=\"dialog-init\">\n-              <xsl:with-param name=\"resourcePath\" select=\"$parentResourcePath\"/>\n-            </xsl:call-template>\n-            <xsl:for-each select=\"wadl:resource\">\n-              <xsl:variable name=\"childResourcePath\" select=\"translate(@path, '|/{}:.*', '_______')\"/>\n-              <xsl:call-template name=\"dialog-init\">\n-                <xsl:with-param name=\"resourcePath\" select=\"concat($parentResourcePath, $childResourcePath)\"/>\n-              </xsl:call-template>\n-            </xsl:for-each>\n-          </xsl:for-each>\n-          //<![CDATA[\n-          $( \"#tabs\" ).tabs().addClass( \"ui-tabs-vertical ui-helper-clearfix\" );\n-          $( \"#tabs li\" ).removeClass( \"ui-corner-top\" ).addClass( \"ui-corner-left\" );\n-          });\n-          //]]>\n-        </script>\n-      </head>\n-      <body>\n-        <h1>\n-          <xsl:value-of select=\"wadl:doc/@title\"/>\n-        </h1>        \n-        \n-        <h3>Namespaces</h3>                                \n-        <table>\n-          <tr>\n-            <th>Prefix</th>\n-            <th>URI</th>\n-            <th>XSD</th>\n-            <th>WADL</th>\n-          </tr>\n-          <xsl:apply-templates select=\"wadl:grammars/xs:schema\"/>\n-        </table>\n-                                                                                              \n-        <h3>REST resources</h3>                                \n-        <div id=\"tabs\">\n-          <ul>\n-            <xsl:for-each select=\"wadl:resources/wadl:resource\">\n-              <xsl:sort select=\"@path\"/>\n-              <li>\n-                <a href=\"#tabs-{position()}\">\n-                  <xsl:value-of select=\"@path\"/>\n-                </a>\n-              </li>\n-            </xsl:for-each>\n-          </ul>\n-          \n-          <xsl:apply-templates select=\"wadl:resources/wadl:resource\">\n-            <xsl:sort select=\"@path\"/>            \n-          </xsl:apply-templates>\n-        </div>\n-      </body>\n-    </html>       \n-  </xsl:template>\n-  \n-  <xsl:template name=\"dialog-init\">\n-    <xsl:param name=\"resourcePath\"/>\n-    \n-    <xsl:for-each select=\"wadl:method\">\n-      <xsl:text>$(function() {\n-        $( \"#dialog</xsl:text>\n-      <xsl:value-of select=\"$resourcePath\"/>_<xsl:value-of select=\"position()\"/>\n-      <xsl:text>\" ).dialog({\n-        autoOpen: false,\n-        modal: true,\n-        height: \"auto\",\n-        width: \"auto\",\n-        resizable: false\n-        });\n- \n-        $( \"#opener</xsl:text>\n-      <xsl:value-of select=\"$resourcePath\"/>_<xsl:value-of select=\"position()\"/>\n-      <xsl:text>\" ).click(function() {\n-        $( \"#dialog</xsl:text>\n-      <xsl:value-of select=\"$resourcePath\"/>_<xsl:value-of select=\"position()\"/>\n-      <xsl:text>\" ).dialog( \"open\" );\n-        });\n-        });\n-      </xsl:text>\n-    </xsl:for-each>\n-  </xsl:template>\n-  \n-  <xsl:template match=\"xs:schema\">\n-    <xsl:variable name=\"targetNamespace\" select=\"@targetNamespace\"/>\n-\n-    <xsl:variable name=\"prefix\" \n-                  select=\"xalan:nodeset($namespaces)/namespace[@url = $targetNamespace]/@prefix\"/>\n-\n-    <tr>\n-      <td>\n-        <xsl:value-of select=\"$prefix\"/>\n-      </td>\n-      <td>\n-        <xsl:value-of select=\"@targetNamespace\"/>\n-      </td>\n-      <td>\n-        <a href=\"schema_{position()}_{$prefix}.html\" \n-           onClick=\"window.open('', 'schema', '', true).focus();\" target=\"schema\">\n-          <xsl:value-of select=\"$prefix\"/>.xsd</a>\n-      </td>\n-      <td>\n-        <a href=\"syncope.wadl\"\n-           onClick=\"window.open('', 'wadl', '', true).focus();\" target=\"wadl\">syncope.wadl</a>\n-      </td>\n-    </tr>\n-  </xsl:template>\n-    \n-  <xsl:template match=\"wadl:resource\">\n-    <div id=\"tabs-{position()}\">\n-      <h2>\n-        <xsl:value-of select=\"@path\"/>\n-      </h2>\n-      \n-      <xsl:if test=\"string-length(wadl:doc) &gt; 0\">\n-        <p>\n-          <xsl:value-of select=\"wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-        </p>\n-      </xsl:if>\n-            \n-      <xsl:call-template name=\"parameters\"/>\n-      \n-      <xsl:call-template name=\"methods\">\n-        <xsl:with-param name=\"resourcePath\" select=\"@path\"/>\n-      </xsl:call-template>\n-      \n-      <xsl:variable name=\"parentPath\" select=\"@path\"/>\n-      <div id=\"accordion-{position()}\">\n-        <xsl:for-each select=\"descendant::*[local-name() = 'resource']\">\n-          <xsl:sort select=\"@path\"/>\n-          <xsl:call-template name=\"subresource\">\n-            <xsl:with-param name=\"parentPath\" select=\"$parentPath\"/>\n-          </xsl:call-template>\n-        </xsl:for-each>\n-      </div>\n-    </div>\n-  </xsl:template>\n- \n-  <xsl:template name=\"methods\">\n-    <xsl:param name=\"resourcePath\"/>\n-\n-    <xsl:variable name=\"escapedPath\" select=\"translate($resourcePath, '|/{}:.*', '_______')\"/>\n-    <div class=\"methods\">\n-      <xsl:for-each select=\"wadl:method\">\n-        <button id=\"opener{$escapedPath}_{position()}\">\n-          <xsl:value-of select=\"@name\"/>\n-          <xsl:if test=\"string-length(@id) &gt; 0\">\n-            <br/>\n-            (<em>\n-              <xsl:value-of select=\"@id\"/>\n-            </em>)\n-          </xsl:if>\n-        </button>\n-        <div id=\"dialog{$escapedPath}_{position()}\" title=\"{@name} {$resourcePath}\">\n-          <xsl:apply-templates select=\".\"/>\n-        </div>\n-      </xsl:for-each>     \n-    </div>           \n-  </xsl:template>\n-  \n-  <xsl:template name=\"subresource\">\n-    <xsl:param name=\"parentPath\"/>\n-    \n-    <h3>\n-      <xsl:value-of select=\"@path\"/>\n-    </h3>\n-    \n-    <div>\n-      <xsl:if test=\"string-length(wadl:doc) &gt; 0\">\n-        <p>\n-          <xsl:value-of select=\"wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-        </p>\n-      </xsl:if>\n-\n-      <xsl:call-template name=\"parameters\"/>\n-\n-      <xsl:call-template name=\"methods\">\n-        <xsl:with-param name=\"resourcePath\" select=\"concat($parentPath, @path)\"/>\n-      </xsl:call-template>\n-    </div>\n-  </xsl:template>\n- \n-  <xsl:template match=\"wadl:method\">\n-    <xsl:if test=\"string-length(wadl:doc) &gt; 0\">\n-      <p>\n-        <xsl:value-of select=\"wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-      </p>\n-    </xsl:if>\n-    \n-    <xsl:if test=\"count(wadl:request/@*) + count(wadl:request/*) &gt; 0\">\n-      <xsl:apply-templates select=\"wadl:request\"/>\n-    </xsl:if>\n-    <xsl:if test=\"count(wadl:response/@*) + count(wadl:response/*) &gt; 0\">\n-      <xsl:apply-templates select=\"wadl:response\"/>\n-    </xsl:if>\n-  </xsl:template>\n-  \n-  <xsl:template match=\"wadl:request|wadl:response\">\n-    <xsl:call-template name=\"parameters\"/>\n-    \n-    <h4>\n-      R<xsl:value-of select=\"substring-after(local-name(), 'r')\"/>\n-    </h4>\n-    \n-    <xsl:if test=\"string-length(wadl:doc) &gt; 0\">\n-      <p>\n-        <xsl:value-of select=\"wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-      </p>\n-    </xsl:if>\n-    \n-    <table>\n-      <xsl:if test=\"string-length(@status) &gt;0 \">\n-        <tr>\n-          <td class=\"representation-label\">Status</td>\n-          <td>\n-            <xsl:value-of select=\"@status\"/>\n-          </td>\n-        </tr>\n-      </xsl:if>\n-      <xsl:if test=\"count(wadl:representation) &gt; 0\">\n-        <tr>\n-          <td class=\"representation-label\">Content type</td>\n-          <td>\n-            <xsl:if test=\"count(wadl:representation/@element) &gt; 0\">\n-              <xsl:choose>\n-                <xsl:when test=\"starts-with(wadl:representation/@element, 'xs:')\">\n-                  <xsl:value-of select=\"wadl:representation/@element\"/>                  \n-                </xsl:when>\n-                <xsl:otherwise>\n-                  <xsl:variable name=\"schema-prefix\" \n-                                select=\"substring-before(wadl:representation/@element, ':')\"/>\n-                  <xsl:variable name=\"nsURL\" \n-                                select=\"xalan:nodeset($namespaces)/namespace[@prefix = $schema-prefix]/@url\"/>\n-                  <xsl:variable name=\"schema-position\" \n-                                select=\"xalan:nodeset($namespacePos)/namespace[@url = $nsURL]/@position\"/>\n-                  \n-                  <a href=\"schema_{$schema-position}_{$schema-prefix}.html#{substring-after(wadl:representation/@element, ':')}\"\n-                     onClick=\"window.open('', 'schema', '', true).focus();\" target=\"schema\">\n-                    <xsl:value-of select=\"wadl:representation/@element\"/>\n-                  </a>\n-                </xsl:otherwise>\n-              </xsl:choose>\n-            </xsl:if>\n-            <xsl:if test=\"count(wadl:representation/wadl:param) &gt; 0\">\n-              <xsl:value-of select=\"wadl:representation/wadl:param/@type\"/>\n-            </xsl:if>\n-            <xsl:if test=\"count(wadl:representation/wadl:doc) &gt; 0\">\n-              <br/>\n-              <xsl:value-of select=\"wadl:representation/wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-            </xsl:if>            \n-          </td>\n-        </tr>\n-        <tr>\n-          <td class=\"representation-label\">Media types</td>\n-          <td>\n-            <xsl:for-each select=\"wadl:representation\">\n-              <xsl:value-of select=\"@mediaType\"/>\n-              <br/>\n-            </xsl:for-each>\n-          </td>\n-        </tr>\n-      </xsl:if>\n-    </table>\n-  </xsl:template>\n-\n-  <xsl:template name=\"parameters\">\n-    <xsl:if test=\"count(wadl:param) &gt; 0\">\n-      <h5>Parameters</h5>\n-      <table>\n-        <tr>\n-          <th>Name</th>\n-          <th>Description</th>\n-          <th>Style</th>\n-          <th>Type</th>\n-          <th>Default</th>\n-        </tr>\n-        <xsl:for-each select=\"wadl:param\">\n-          <tr>\n-            <td>\n-              <xsl:value-of select=\"@name\"/>\n-            </td>\n-            <td>\n-              <xsl:value-of select=\"wadl:doc/text()\" disable-output-escaping=\"yes\"/>\n-            </td>\n-            <td>\n-              <xsl:value-of select=\"@style\"/>\n-            </td>\n-            <td>\n-              <xsl:value-of select=\"@type\"/>\n-              <xsl:if test=\"count(wadl:option) &gt; 0\">\n-                <ul>\n-                  <xsl:for-each select=\"wadl:option\">\n-                    <li>\n-                      <xsl:value-of select=\"@value\"/>\n-                    </li>\n-                  </xsl:for-each>\n-                </ul>\n-              </xsl:if>\n-            </td>\n-            <td>\n-              <xsl:value-of select=\"@default\"/>\n-            </td>\n-          </tr>\n-        </xsl:for-each>\n-      </table>\n-    </xsl:if>\n-  </xsl:template>\n-\n-</xsl:stylesheet>"},{"sha":"6551d096873a139fe3f02e9e3c75ff7e6743275c","filename":"core/idrepo/rest-cxf/src/main/resources/wadl2html/schema.xsl","status":"removed","additions":0,"deletions":148,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,148 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one\n-  or more contributor license agreements.  See the NOTICE file\n-  distributed with this work for additional information\n-  regarding copyright ownership.  The ASF licenses this file\n-  to you under the Apache License, Version 2.0 (the\n-  \"License\"); you may not use this file except in compliance\n-  with the License.  You may obtain a copy of the License at\n-\n-   http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing,\n-  software distributed under the License is distributed on an\n-  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-  KIND, either express or implied.  See the License for the\n-  specific language governing permissions and limitations\n-  under the License.\n--->\n-<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n-                xmlns:wadl=\"http://wadl.dev.java.net/2009/02\"\n-                xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n-                exclude-result-prefixes=\"wadl xs\"\n-                version=\"1.0\">\n-  \n-  <xsl:strip-space elements=\"*\"/>\n-\n-  <xsl:param name=\"contextPath\"/>\n-  <xsl:param name=\"schema-position\"/>  \n-  <xsl:param name=\"schema-prefix\"/>  \n-  \n-  <xsl:template match=\"/wadl:application\">  \n-    <html lang=\"en\">\n-      <head>\n-        <meta charset=\"utf-8\"/>\n-        <title>          \n-          <xsl:value-of select=\"wadl:doc/@title\"/>\n-        </title>\n-                  \n-        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/highlightjs/${highlightjs.version}/styles/default.min.css\"/>\n-        \n-        <script src=\"{$contextPath}/webjars/highlightjs/${highlightjs.version}/highlight.min.js\">           \n-        </script>\n-        <script>\n-          hljs.initHighlightingOnLoad();\n-        </script>\n-      </head>\n-      <body>        \n-        <pre>\n-          <code class=\"xml\">\n-            <xsl:apply-templates select=\"//xs:schema[position() = $schema-position]\" mode=\"verb\"/>\n-          </code>\n-        </pre>\n-      </body>\n-    </html>\n-  </xsl:template>\n-\n-  <xsl:template match=\"*|@*\" mode=\"verb\">\n-    <xsl:variable name=\"node-type\">\n-      <xsl:call-template name=\"node-type\"/>\n-    </xsl:variable>\n-    <xsl:choose>\n-      <xsl:when test=\"$node-type='element'\">\n-        <xsl:for-each select=\"ancestor::node()\">\n-          <xsl:if test=\"position() &gt; 3\">\n-            <xsl:text>&#160;&#160;</xsl:text>\n-          </xsl:if>\n-        </xsl:for-each>\n-\n-        <xsl:choose>\n-          <xsl:when test=\"name() = 'xs:complexType' or name() = 'xs:simpleType'\">\n-            <a name=\"int_{@name}\">\n-              <xsl:text>&lt;</xsl:text>\n-              <xsl:value-of select=\"name()\"/>\n-            </a>          \n-          </xsl:when>\n-          <xsl:when test=\"name() = 'xs:element'\">\n-            <a name=\"{@name}\">\n-              <xsl:text>&lt;</xsl:text>\n-              <xsl:value-of select=\"name()\"/>\n-            </a>          \n-          </xsl:when>\n-          <xsl:otherwise>\n-            <xsl:text>&lt;</xsl:text>\n-            <xsl:value-of select=\"name()\"/>\n-          </xsl:otherwise>\n-        </xsl:choose>\n-        \n-        <xsl:apply-templates select=\"@*\" mode=\"verb\"/>        \n-\n-        <xsl:choose>\n-          <xsl:when test=\"count(descendant::node()) = 0\">\n-            <xsl:text>/&gt;&#10;</xsl:text>\n-          </xsl:when>\n-          <xsl:otherwise>\n-            <xsl:text>&gt;&#10;</xsl:text>\n-            \n-            <xsl:apply-templates mode=\"verb\"/>\n-                \n-            <xsl:for-each select=\"ancestor::node()\">\n-              <xsl:if test=\"position() &gt; 3\">\n-                <xsl:text>&#160;&#160;</xsl:text>\n-              </xsl:if>\n-            </xsl:for-each>\n-\n-            <xsl:text>&lt;/</xsl:text>\n-            <xsl:value-of select=\"name()\"/>\n-            <xsl:text>&gt;&#10;</xsl:text>\n-          </xsl:otherwise>\n-        </xsl:choose>                        \n-      </xsl:when>\n-      <xsl:when test=\"$node-type='text'\">\n-        <xsl:value-of select=\"self::text()\"/>\n-      </xsl:when>\n-      <xsl:when test=\"$node-type='attribute'\">\n-        <xsl:text> </xsl:text>\n-        <xsl:value-of select=\"name()\"/>\n-        <xsl:text>=\"</xsl:text>\n-        <xsl:choose>\n-          <xsl:when test=\"contains(., ':') and not(starts-with(., 'xs:'))\">\n-            <a>\n-              <xsl:variable name=\"current\" select=\".\"/>\n-              <xsl:attribute name=\"href\">\n-                <xsl:choose>\n-                  <xsl:when test=\"name() = 'ref'\">#<xsl:value-of select=\"substring-after($current, ':')\"/></xsl:when>\n-                  <xsl:otherwise>#int_<xsl:value-of select=\"substring-after($current, ':')\"/></xsl:otherwise>\n-                </xsl:choose>                \n-              </xsl:attribute>\n-              <xsl:value-of select=\"$current\"/>                          \n-            </a>\n-          </xsl:when>\n-          <xsl:otherwise>\n-            <xsl:value-of select=\".\"/>            \n-          </xsl:otherwise>\n-        </xsl:choose>\n-        <xsl:text>\"</xsl:text>\n-      </xsl:when>\n-    </xsl:choose>\n-  </xsl:template>\n-\n-  <xsl:template name=\"node-type\">\n-    <xsl:param name=\"node\" select=\".\"/>\n-    <xsl:apply-templates mode=\"nodetype\" select=\"$node\"/>\n-  </xsl:template>\n-  <xsl:template mode=\"nodetype\" match=\"*\">element</xsl:template>\n-  <xsl:template mode=\"nodetype\" match=\"@*\">attribute</xsl:template>\n-  <xsl:template mode=\"nodetype\" match=\"text()\">text</xsl:template>\n-</xsl:stylesheet>"},{"sha":"8f2690c8f5b676de4569262731b4b2366a1c2c77","filename":"core/idrepo/rest-cxf/src/test/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceTest.java","status":"modified","additions":18,"deletions":20,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -31,10 +31,9 @@\n import static org.mockito.Mockito.when;\n \n import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n-import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n-import com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;\n+import com.fasterxml.jackson.jaxrs.yaml.JacksonYAMLProvider;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Arrays;\n@@ -44,8 +43,6 @@\n import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriInfo;\n-import javax.xml.bind.JAXBContext;\n-import javax.xml.bind.JAXBException;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.endpoint.Server;\n import org.apache.cxf.helpers.IOUtils;\n@@ -59,7 +56,6 @@\n import org.apache.cxf.jaxrs.impl.MetadataMap;\n import org.apache.cxf.jaxrs.impl.UriBuilderImpl;\n import org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;\n-import org.apache.cxf.jaxrs.provider.JAXBElementProvider;\n import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n@@ -79,6 +75,9 @@\n import org.apache.syncope.core.persistence.api.search.SearchCondVisitor;\n import org.apache.syncope.core.rest.cxf.AddETagFilter;\n import org.apache.syncope.core.rest.cxf.RestServiceExceptionMapper;\n+import org.apache.syncope.core.rest.cxf.SyncopeObjectMapper;\n+import org.apache.syncope.core.rest.cxf.SyncopeXmlMapper;\n+import org.apache.syncope.core.rest.cxf.SyncopeYAMLMapper;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -87,7 +86,6 @@\n import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n import org.springframework.test.util.ReflectionTestUtils;\n \n-//@SpringJUnitConfig(locations = { \"classpath:restCXFTest.xml\" })\n @SpringJUnitConfig(classes = { RESTCXFTestContext.class })\n public class AnyObjectServiceTest {\n \n@@ -96,16 +94,16 @@ public class AnyObjectServiceTest {\n     private static Server SERVER;\n \n     @Autowired\n-    private JAXBElementProvider<?> jaxbProvider;\n+    private DateParamConverterProvider dateParamConverterProvider;\n \n     @Autowired\n-    private DateParamConverterProvider dateParamConverterProvider;\n+    private JacksonJsonProvider jsonProvider;\n \n     @Autowired\n-    private JacksonJaxbJsonProvider jsonProvider;\n+    private JacksonXMLProvider xmlProvider;\n \n     @Autowired\n-    private JacksonJaxbYAMLProvider yamlProvider;\n+    private JacksonYAMLProvider yamlProvider;\n \n     @Autowired\n     private RestServiceExceptionMapper exceptionMapper;\n@@ -198,7 +196,7 @@ public void setup() {\n             sf.setInInterceptors(Arrays.asList(gzipInInterceptor, validationInInterceptor));\n             sf.setOutInterceptors(Arrays.asList(gzipOutInterceptor));\n \n-            sf.setProviders(Arrays.asList(dateParamConverterProvider, jaxbProvider, jsonProvider, yamlProvider,\n+            sf.setProviders(Arrays.asList(dateParamConverterProvider, jsonProvider, xmlProvider, yamlProvider,\n                     exceptionMapper, searchContextProvider, addETagFilter));\n \n             SERVER = sf.create();\n@@ -209,7 +207,7 @@ public void setup() {\n \n     private WebClient client(final MediaType mediaType) {\n         WebClient client = WebClient.create(LOCAL_ADDRESS, Arrays.asList(\n-                dateParamConverterProvider, jsonProvider, jaxbProvider, yamlProvider));\n+                dateParamConverterProvider, jsonProvider, xmlProvider, yamlProvider));\n         WebClient.getConfig(client).getRequestContext().put(LocalConduit.DIRECT_DISPATCH, Boolean.TRUE);\n         return client.accept(mediaType).type(mediaType).path(\"anyObjects\");\n     }\n@@ -239,27 +237,27 @@ private void checkList(final PagedResult<AnyObjectTO> list) {\n     public void jsonList() throws IOException {\n         InputStream in = list(MediaType.APPLICATION_JSON_TYPE);\n \n-        PagedResult<AnyObjectTO> list = new ObjectMapper().\n+        PagedResult<AnyObjectTO> list = new SyncopeObjectMapper().\n                 readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n                 });\n         checkList(list);\n     }\n \n     @Test\n-    public void xmlList() throws IOException, JAXBException {\n+    public void xmlList() throws IOException {\n         InputStream in = list(MediaType.APPLICATION_XML_TYPE);\n \n-        JAXBContext context = JAXBContext.newInstance(PagedResult.class, AnyObjectTO.class);\n-        @SuppressWarnings(\"unchecked\")\n-        PagedResult<AnyObjectTO> list = (PagedResult<AnyObjectTO>) context.createUnmarshaller().unmarshal(in);\n+        PagedResult<AnyObjectTO> list = new SyncopeXmlMapper().\n+                readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n+                });\n         checkList(list);\n     }\n \n     @Test\n     public void yamlList() throws IOException {\n         InputStream in = list(RESTHeaders.APPLICATION_YAML_TYPE);\n \n-        PagedResult<AnyObjectTO> list = new YAMLMapper().\n+        PagedResult<AnyObjectTO> list = new SyncopeYAMLMapper().\n                 readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n                 });\n         checkList(list);"},{"sha":"83f0efcac420566736effd4f95bd451654da571d","filename":"core/idrepo/rest-cxf/src/test/java/org/apache/syncope/core/rest/cxf/service/RESTCXFTestContext.java","status":"modified","additions":12,"deletions":21,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRESTCXFTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRESTCXFTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRESTCXFTestContext.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,21 +18,19 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n-import com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider;\n-import java.util.Map;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;\n+import com.fasterxml.jackson.jaxrs.yaml.JacksonYAMLProvider;\n import org.apache.cxf.jaxrs.ext.search.SearchContextProvider;\n-import org.apache.cxf.jaxrs.provider.JAXBElementProvider;\n import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n-import org.apache.cxf.staxutils.DocumentDepthProperties;\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n import org.apache.cxf.validation.BeanValidationProvider;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.rest.api.DateParamConverterProvider;\n import org.apache.syncope.core.rest.cxf.AddETagFilter;\n import org.apache.syncope.core.rest.cxf.RestServiceExceptionMapper;\n import org.apache.syncope.core.rest.cxf.SyncopeObjectMapper;\n+import org.apache.syncope.core.rest.cxf.SyncopeXmlMapper;\n import org.apache.syncope.core.rest.cxf.SyncopeYAMLMapper;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n@@ -46,29 +44,22 @@ public DateParamConverterProvider dateParamConverterProvider() {\n     }\n \n     @Bean\n-    public JAXBElementProvider<?> jaxbProvider() {\n-        JAXBElementProvider<?> jaxbProvider = new JAXBElementProvider<>();\n-        jaxbProvider.setNamespacePrefixes(Map.of(SyncopeConstants.NS, SyncopeConstants.NS_PREFIX));\n-\n-        DocumentDepthProperties documentDepthProperties = new DocumentDepthProperties();\n-        documentDepthProperties.setInnerElementCountThreshold(500);\n-        jaxbProvider.setDepthProperties(documentDepthProperties);\n-\n-        jaxbProvider.setCollectionWrapperMap(Map.of(\"org.apache.syncope.common.lib.policy.PolicyTO\", \"policies\"));\n-\n-        return jaxbProvider;\n+    public JacksonXMLProvider xmlProvider() {\n+        JacksonXMLProvider xmlProvider = new JacksonXMLProvider();\n+        xmlProvider.setMapper(new SyncopeXmlMapper());\n+        return xmlProvider;\n     }\n \n     @Bean\n-    public JacksonJaxbJsonProvider jsonProvider() {\n-        JacksonJaxbJsonProvider jsonProvider = new JacksonJaxbJsonProvider();\n+    public JacksonJsonProvider jsonProvider() {\n+        JacksonJsonProvider jsonProvider = new JacksonJsonProvider();\n         jsonProvider.setMapper(new SyncopeObjectMapper());\n         return jsonProvider;\n     }\n \n     @Bean\n-    public JacksonJaxbYAMLProvider yamlProvider() {\n-        JacksonJaxbYAMLProvider yamlProvider = new JacksonJaxbYAMLProvider();\n+    public JacksonYAMLProvider yamlProvider() {\n+        JacksonYAMLProvider yamlProvider = new JacksonYAMLProvider();\n         yamlProvider.setMapper(new SyncopeYAMLMapper());\n         return yamlProvider;\n     }"},{"sha":"1bd28de6f5156fb96ecc96011b47c9f1c85e8f66","filename":"core/persistence-jpa-json/src/main/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -80,7 +80,7 @@ under the License.\n   <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"\n                plainAttrs=\"[{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;SSHA256&quot;}],&quot;schema&quot;:&quot;password.cipher.algorithm&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;&quot;}],&quot;schema&quot;:&quot;notificationjob.cronExpression&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:3}],&quot;schema&quot;:&quot;notification.maxRetries&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:256}],&quot;schema&quot;:&quot;token.length&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:60}],&quot;schema&quot;:&quot;token.expireTime&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;selfRegistration.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.securityQuestion&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;username&quot;},{&quot;stringValue&quot;:&quot;email&quot;}],&quot;schema&quot;:&quot;authentication.attributes&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;created&quot;},{&quot;stringValue&quot;:&quot;active&quot;}],&quot;schema&quot;:&quot;authentication.statuses&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;log.lastlogindate&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:false}],&quot;schema&quot;:&quot;return.password.value&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:120}],&quot;schema&quot;:&quot;jwt.lifetime.minutes&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}]}]\"/>\n \n->>>>>>> b33cc1415... [SYNCOPE-1517] Initial changes\n+  >>>>>>> b33cc1415... [SYNCOPE-1517] Initial changes\n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n@@ -169,7 +169,7 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n </dataset>"},{"sha":"6422c3566ef3b34b2aacda8d29e502912575467c","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":41,"deletions":41,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -22,66 +22,66 @@ under the License.\n   <PasswordPolicy id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" description=\"a password policy\"\n                   historyLength=\"1\" allowNullPassword=\"1\"/>\n   <Implementation id=\"DefaultPasswordRuleConf1\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" implementation_id=\"DefaultPasswordRuleConf1\"/>\n   <PasswordPolicy id=\"986d1236-3ac5-4a19-810c-5ab21d79cba1\"\n                   description=\"sample password policy\" historyLength=\"0\" allowNullPassword=\"1\"/> \n   <Implementation id=\"DefaultPasswordRuleConf2\" type=\"PASSWORD_RULE\"  engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"986d1236-3ac5-4a19-810c-5ab21d79cba1\" implementation_id=\"DefaultPasswordRuleConf2\"/>\n   <AccountPolicy id=\"20ab5a8c-4b0c-432c-b957-f7fb9784d9f7\" description=\"an account policy\"\n                  propagateSuspension=\"0\" maxAuthenticationAttempts=\"0\"/>\n   <Implementation id=\"DefaultAccountRuleConf1\" type=\"ACCOUNT_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":0,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":0,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[],\"suffixesNotPermitted\":[]}'/>\n   <AccountPolicyRule policy_id=\"20ab5a8c-4b0c-432c-b957-f7fb9784d9f7\" implementation_id=\"DefaultAccountRuleConf1\"/>\n   <AccountPolicy id=\"06e2ed52-6966-44aa-a177-a0ca7434201f\" description=\"sample account policy\"\n                  propagateSuspension=\"0\" maxAuthenticationAttempts=\"3\"/>\n   <Implementation id=\"DefaultAccountRuleConf2\" type=\"ACCOUNT_RULE\"  engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":4,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":4,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <AccountPolicyRule policy_id=\"06e2ed52-6966-44aa-a177-a0ca7434201f\" implementation_id=\"DefaultAccountRuleConf2\"/>\n   <PasswordPolicy id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" description=\"sample password policy\" historyLength=\"0\" allowNullPassword=\"0\"/> \n   <Implementation id=\"DefaultPasswordRuleConf3\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" implementation_id=\"DefaultPasswordRuleConf3\"/>\n   \n   <!-- Authentication policies -->\n   <AuthPolicy id=\"659b9906-4b6e-4bc0-aca0-6809dff346d4\" description=\"MyDefaultAuthPolicyConf\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n   <AuthPolicy id=\"b912a0d4-a890-416f-9ab8-84ab077eb028\" description=\"DefaultAuthPolicy\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n \n   <!-- Access policies -->\n   <AccessPolicy id=\"419935c7-deb3-40b3-8a9a-683037e523a2\" description=\"MyDefaultAccessPolicyConf\"\n-                jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"name\":\"MyDefaultAccessPolicyConf\",\"enabled\":true,\"ssoEnabled\":true}'/>\n+                jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"name\":\"MyDefaultAccessPolicyConf\",\"enabled\":true,\"ssoEnabled\":true}'/>\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy id=\"319935c7-deb3-40b3-8a9a-683037e523a2\" description=\"AllowedAttrReleasePolicy\"\n-                     jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"AllowedAttrReleasePolicy\",\"allowedAttributes\":[\"cn\",\"givenName\",\"uid\"]}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"AllowedAttrReleasePolicy\",\"allowedAttributes\":[\"cn\",\"givenName\",\"uid\"]}'/>\n   <AttrReleasePolicy id=\"219935c7-deb3-40b3-8a9a-683037e523a2\" description=\"DenyAttrReleasePolicy\"\n-                     jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"DenyAttrReleasePolicyConf\"}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"DenyAttrReleasePolicyConf\"}'/>\n   \n   <!-- Authentication modules -->\n   <AuthModule id=\"be456831-593d-4003-b273-4c3fb61700df\" name=\"DefaultLDAPAuthModule\" \n-              description=\"LDAP auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"name\":\"MyLDAPAuthModuleConf\",\"userIdAttribute\":\"uid\",\"bindCredential\":\"Password\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"dc=example,dc=org\",\"subtreeSearch\":true}'/>\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"name\":\"MyLDAPAuthModuleConf\",\"userIdAttribute\":\"uid\",\"bindCredential\":\"Password\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"dc=example,dc=org\",\"subtreeSearch\":true}'/>\n   <AuthModule id=\"4c3ed7e8-7008-11ea-bc55-0242ac130003\" name=\"DefaultJDBCAuthModule\"\n-              description=\"JDBC auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"name\":\"MyJDBCAuthModuleConf\", \"sql\":\"SELECT * FROM table WHERE name=?\"}'/>\n+              description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"name\":\"MyJDBCAuthModuleConf\", \"sql\":\"SELECT * FROM table WHERE name=?\"}'/>\n   <AuthModule id=\"4c3ed4e6-7008-11ea-bc55-0242ac130003\" name=\"DefaultGoogleMfaAuthModule\"\n-              description=\"Google Mfa auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.GoogleMfaAuthModuleConf\",\"name\":\"MyGoogleMfaAuthModuleConf\",\"codeDigits\":6,\"issuer\":\"SyncopeTest\", \"label\":\"SyncopeTest\", \"timeStepSize\":30, \"windowSize\":3}'/>\n+              description=\"Google Mfa auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.GoogleMfaAuthModuleConf\",\"name\":\"MyGoogleMfaAuthModuleConf\",\"codeDigits\":6,\"issuer\":\"SyncopeTest\", \"label\":\"SyncopeTest\", \"timeStepSize\":30, \"windowSize\":3}'/>\n   <AuthModule id=\"4c3ed8f6-7008-11ea-bc55-0242ac130003\" name=\"DefaultOIDCAuthModule\"\n               description=\"OIDC auth module\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"name\":\"MyOIDCAuthModuleConf\", \"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"name\":\"MyOIDCAuthModuleConf\", \"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n   <AuthModule id=\"4c3ed9d2-7008-11ea-bc55-0242ac130003\" name=\"DefaultSAML2IdPAuthModule\"\n-              description=\"SAML2 IdP auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"name\":\"MySAML2IdPAuthModuleConf\", \"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"classpath:/idp-metadata.xml\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n+              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"name\":\"MySAML2IdPAuthModuleConf\", \"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"classpath:/idp-metadata.xml\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n   <AuthModule id=\"4c3edbbc-7008-11ea-bc55-0242ac130003\" name=\"DefaultJaasAuthModule\"\n-              description=\"Jaas auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"name\":\"MyJaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\"}'/>\n+              description=\"Jaas auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"name\":\"MyJaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\"}'/>\n   <AuthModule id=\"4c3edc98-7008-11ea-bc55-0242ac130003\" name=\"DefaultStaticAuthModule\"\n-              description=\"Static auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"name\":\"MyStaticAuthModuleConf\",\"users\":{\"user1\": \"testUserPassword123\"}}'/>\n+              description=\"Static auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"name\":\"MyStaticAuthModuleConf\",\"users\":{\"user1\": \"testUserPassword123\"}}'/>\n   <AuthModule id=\"4c3edd60-7008-11ea-bc55-0242ac130003\" name=\"DefaultSyncopeAuthModule\"\n-              description=\"Syncope auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"name\":\"MySyncopeAuthModuleConf\",\"domain\":\"Master\",\"url\":\"http://mydomain.com/syncope/rest\"}'/>\n+              description=\"Syncope auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"name\":\"MySyncopeAuthModuleConf\",\"domain\":\"Master\",\"url\":\"http://mydomain.com/syncope/rest\"}'/>\n   <AuthModule id=\"07c528f3-63b4-4dc1-a4da-87f35b8bdec8\" name=\"DefaultRadiusAuthModule\"\n-              description=\"Radius auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.RadiusAuthModuleConf\",\"name\":\"MyRadiusAuthModuleConf\",\"protocol\":\"MSCHAPv2\",\"inetAddress\":\"1.2.3.4\", \"sharedSecret\":\"thesecret\"}'/>\n+              description=\"Radius auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.RadiusAuthModuleConf\",\"name\":\"MyRadiusAuthModuleConf\",\"protocol\":\"MSCHAPv2\",\"inetAddress\":\"1.2.3.4\", \"sharedSecret\":\"thesecret\"}'/>\n   <AuthModule id=\"f6e1288d-50d9-45fe-82ee-597c42242205\" name=\"DefaultU2FAuthModule\"\n-              description=\"U2F auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"name\":\"MyU2FAuthModuleConf\",\"expireDevices\":40}'/>\n+              description=\"U2F auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"name\":\"MyU2FAuthModuleConf\",\"expireDevices\":40}'/>\n \n   <RelationshipType id=\"inclusion\" description=\"Models the act that an object is included in another\"/>\n   <RelationshipType id=\"neighborhood\" description=\"Models the act that an object is near another\"/>\n@@ -457,7 +457,7 @@ under the License.\n   <PullPolicy id=\"66691e96-285f-4464-bc19-e68384ea4c85\" description=\"a pull policy\" conflictResolutionAction=\"IGNORE\"/>\n   <PullPolicy id=\"880f8553-069b-4aed-9930-2cd53873f544\" description=\"another pull policy\" conflictResolutionAction=\"ALL\"/>\n   <Implementation id=\"TestPullCorrelationRule\" type=\"PULL_CORRELATION_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"schemas\":[\"username\",\"firstname\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"schemas\":[\"username\",\"firstname\"]}'/>\n   <PullCorrelationRuleEntity id=\"10e3d196-7486-4c88-aefd-59e40d93a0c1\" pullPolicy_id=\"880f8553-069b-4aed-9930-2cd53873f544\" \n                              anyType_id=\"USER\" implementation_id=\"TestPullCorrelationRule\"/>\n   <PullPolicy id=\"4ad10d94-e002-4b3f-b771-16089cc71da9\" description=\"pull policy 1\" conflictResolutionAction=\"IGNORE\"/>\n@@ -466,7 +466,7 @@ under the License.\n   <!-- push policies -->\n   <PushPolicy id=\"fb6530e5-892d-4f47-a46b-180c5b6c5c83\" description=\"a push policy\" conflictResolutionAction=\"IGNORE\"/>\n   <Implementation id=\"TestPushCorrelationRule\" type=\"PUSH_CORRELATION_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"schemas\":[\"surname\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"schemas\":[\"surname\"]}'/>\n   <PushCorrelationRuleEntity id=\"24463935-32a0-4272-bc78-04d6d0adc69e\" pushPolicy_id=\"fb6530e5-892d-4f47-a46b-180c5b6c5c83\" \n                              anyType_id=\"USER\" implementation_id=\"TestPushCorrelationRule\"/>\n   \n@@ -1015,10 +1015,10 @@ under the License.\n         jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"b3772d66-ec06-4133-bf38-b3273845ac5b\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Implementation id=\"TestSampleJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\"/>\n   <Task DTYPE=\"SchedTask\" id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n@@ -1035,9 +1035,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n@@ -1048,9 +1048,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplatePullTask id=\"fda22ff3-98f3-42e4-a2ae-cd9a28282d57\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n   <Implementation id=\"LDAPMembershipPullActions\" type=\"PULL_ACTIONS\"  engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <PullTaskAction task_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" implementation_id=\"LDAPMembershipPullActions\"/>\n@@ -1127,9 +1127,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n@@ -1324,7 +1324,7 @@ $$ }&#10;\n     &lt;/html&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n     &lt;/h2&gt;&#10;\n@@ -1374,7 +1374,7 @@ $$ }&#10;\n     &lt;/xsl:if&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;h3&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n     &#10;\n@@ -1519,7 +1519,7 @@ $$ }&#10;\n        &#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h2&gt;&#10;\n     &lt;xsl:for-each select=&quot;group&quot;&gt;&#10;\n       &lt;h3&gt;Group &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n@@ -1685,7 +1685,7 @@ $$ }&#10;\n &#10;\n   &lt;xsl:variable name=&quot;delimiter&quot; select=&quot;';'&quot;/&gt;&#10;\n    &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/staticAttributes&quot;/&gt;&#10;\n     &lt;/xsl:call-template&gt;&#10;\n@@ -1743,7 +1743,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/userAttributes&quot;/&gt;&#10;\n@@ -1824,7 +1824,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/groupAttributes&quot;/&gt;&#10;\n@@ -1966,7 +1966,7 @@ $$ }&#10;\n     &lt;/fo:root&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n &#10;\n     &lt;fo:block font-size=&quot;14pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot;&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n@@ -2025,7 +2025,7 @@ $$ }&#10;\n         &#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;\n@@ -2189,7 +2189,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;\n@@ -2366,14 +2366,14 @@ $$ }&#10;\n   \n   <Report id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" name=\"test\" active=\"1\" template_id=\"sample\"/>\n   <Implementation id=\"UserReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.UserReportletConf\",\"name\":\"testUserReportlet\",\"matchingCond\":null,\"plainAttrs\":[\"fullname\",\"gender\"],\"derAttrs\":[\"cn\"],\"virAttrs\":[\"virtualdata\"],\"features\":[\"key\",\"username\",\"status\",\"creationDate\",\"lastLoginDate\",\"changePwdDate\",\"passwordHistorySize\",\"failedLoginCount\",\"memberships\",\"resources\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.UserReportletConf\",\"name\":\"testUserReportlet\",\"matchingCond\":null,\"plainAttrs\":[\"fullname\",\"gender\"],\"derAttrs\":[\"cn\"],\"virAttrs\":[\"virtualdata\"],\"features\":[\"key\",\"username\",\"status\",\"creationDate\",\"lastLoginDate\",\"changePwdDate\",\"passwordHistorySize\",\"failedLoginCount\",\"memberships\",\"resources\"]}'/>\n   <ReportReportlet report_id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" implementation_id=\"UserReportletConf\"/>\n   <ReportExec report_id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" id=\"c13f39c5-0d35-4bff-ba79-3cd5de940369\"\n               status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n \n   <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n   <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>"},{"sha":"6cbeb13ed5f1986c26146bb340b31d2dafc51d16","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -108,7 +108,7 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n </dataset>"},{"sha":"cb1e1082a24e3f93d9ca4d30f760b7648b8182f9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AbstractClientAppTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.jpa.inner;\n \n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf;\n@@ -56,7 +55,7 @@ protected AccessPolicy buildAndSaveAccessPolicy() {\n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n         conf.setEnabled(true);\n         conf.setName(\"Example Access Policy for an application\");\n-        conf.getRequiredAttrs().putAll(Map.of(\"attribute1\", Set.of(\"value1\", \"value2\")));\n+        conf.addRequiredAttr(\"attribute1\", Set.of(\"value1\", \"value2\"));\n         conf.setSsoEnabled(false);\n         accessPolicy.setConf(conf);\n "},{"sha":"6301474782f88e7eb63d4a1be4c1aa6399fde514","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -25,7 +25,6 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n import java.util.UUID;\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n@@ -192,7 +191,7 @@ public void create() {\n         accessPolicy.setDescription(\"AttrReleasePolicyAllowEverything\");\n \n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n-        conf.getRequiredAttrs().putAll(Map.of(\"cn\", Set.of(\"syncope\")));\n+        conf.addRequiredAttr(\"cn\", Set.of(\"syncope\"));\n         conf.setName(\"AttrReleasePolicyAllowEverything\");\n         accessPolicy.setConf(conf);\n "},{"sha":"170659fa80951bb72a6bf873139b220c418e167c","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":41,"deletions":41,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -22,66 +22,66 @@ under the License.\n   <PasswordPolicy id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" description=\"a password policy\"\n                   historyLength=\"1\" allowNullPassword=\"1\"/>\n   <Implementation id=\"DefaultPasswordRuleConf1\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" implementation_id=\"DefaultPasswordRuleConf1\"/>\n   <PasswordPolicy id=\"986d1236-3ac5-4a19-810c-5ab21d79cba1\"\n                   description=\"sample password policy\" historyLength=\"0\" allowNullPassword=\"1\"/> \n   <Implementation id=\"DefaultPasswordRuleConf2\" type=\"PASSWORD_RULE\"  engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"986d1236-3ac5-4a19-810c-5ab21d79cba1\" implementation_id=\"DefaultPasswordRuleConf2\"/>\n   <AccountPolicy id=\"20ab5a8c-4b0c-432c-b957-f7fb9784d9f7\" description=\"an account policy\"\n                  propagateSuspension=\"0\" maxAuthenticationAttempts=\"0\"/>\n   <Implementation id=\"DefaultAccountRuleConf1\" type=\"ACCOUNT_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":0,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":0,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[],\"suffixesNotPermitted\":[]}'/>\n   <AccountPolicyRule policy_id=\"20ab5a8c-4b0c-432c-b957-f7fb9784d9f7\" implementation_id=\"DefaultAccountRuleConf1\"/>\n   <AccountPolicy id=\"06e2ed52-6966-44aa-a177-a0ca7434201f\" description=\"sample account policy\"\n                  propagateSuspension=\"0\" maxAuthenticationAttempts=\"3\"/>\n   <Implementation id=\"DefaultAccountRuleConf2\" type=\"ACCOUNT_RULE\"  engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":4,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":4,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <AccountPolicyRule policy_id=\"06e2ed52-6966-44aa-a177-a0ca7434201f\" implementation_id=\"DefaultAccountRuleConf2\"/>\n   <PasswordPolicy id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" description=\"sample password policy\" historyLength=\"0\" allowNullPassword=\"0\"/> \n   <Implementation id=\"DefaultPasswordRuleConf3\" type=\"PASSWORD_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n   <PasswordPolicyRule policy_id=\"55e5de0b-c79c-4e66-adda-251b6fb8579a\" implementation_id=\"DefaultPasswordRuleConf3\"/>\n   \n   <!-- Authentication policies -->\n   <AuthPolicy id=\"659b9906-4b6e-4bc0-aca0-6809dff346d4\" description=\"MyDefaultAuthPolicyConf\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n   <AuthPolicy id=\"b912a0d4-a890-416f-9ab8-84ab077eb028\" description=\"DefaultAuthPolicy\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n \n   <!-- Access policies -->\n   <AccessPolicy id=\"419935c7-deb3-40b3-8a9a-683037e523a2\" description=\"MyDefaultAccessPolicyConf\"\n-                jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"name\":\"MyDefaultAccessPolicyConf\",\"enabled\":true,\"ssoEnabled\":true}'/>\n+                jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"name\":\"MyDefaultAccessPolicyConf\",\"enabled\":true,\"ssoEnabled\":true}'/>\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy id=\"319935c7-deb3-40b3-8a9a-683037e523a2\" description=\"AllowedAttrReleasePolicy\"\n-                     jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"AllowedAttrReleasePolicy\",\"allowedAttributes\":[\"cn\",\"givenName\",\"uid\"]}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"AllowedAttrReleasePolicy\",\"allowedAttributes\":[\"cn\",\"givenName\",\"uid\"]}'/>\n   <AttrReleasePolicy id=\"219935c7-deb3-40b3-8a9a-683037e523a2\" description=\"DenyAttrReleasePolicy\"\n-                     jsonConf='{\"@class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"DenyAttrReleasePolicyConf\"}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.AllowedAttrReleasePolicyConf\",\"name\":\"DenyAttrReleasePolicyConf\"}'/>\n \n   <!-- Authentication modules -->\n   <AuthModule id=\"be456831-593d-4003-b273-4c3fb61700df\" name=\"DefaultLDAPAuthModule\"\n-              description=\"LDAP auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"name\":\"MyLDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"cn=Directory Manager,dc=example,dc=org\", \"bindCredential\":\"Password\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=people,dc=example,dc=org\",\"subtreeSearch\":true}'/>\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"name\":\"MyLDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"cn=Directory Manager,dc=example,dc=org\", \"bindCredential\":\"Password\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=people,dc=example,dc=org\",\"subtreeSearch\":true}'/>\n   <AuthModule id=\"4c3ed7e8-7008-11ea-bc55-0242ac130003\" name=\"DefaultJDBCAuthModule\"\n-              description=\"JDBC auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"name\":\"MyJDBCAuthModuleConf\", \"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n+              description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"name\":\"MyJDBCAuthModuleConf\", \"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n   <AuthModule id=\"4c3ed4e6-7008-11ea-bc55-0242ac130003\" name=\"DefaultGoogleMfaAuthModule\"\n-              description=\"Google Mfa auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.GoogleMfaAuthModuleConf\",\"name\":\"MyGoogleMfaAuthModuleConf\",\"codeDigits\":6,\"issuer\":\"SyncopeTest\", \"label\":\"SyncopeTest\", \"timeStepSize\":30, \"windowSize\":3}'/>\n+              description=\"Google Mfa auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.GoogleMfaAuthModuleConf\",\"name\":\"MyGoogleMfaAuthModuleConf\",\"codeDigits\":6,\"issuer\":\"SyncopeTest\", \"label\":\"SyncopeTest\", \"timeStepSize\":30, \"windowSize\":3}'/>\n   <AuthModule id=\"4c3ed8f6-7008-11ea-bc55-0242ac130003\" name=\"DefaultOIDCAuthModule\"\n               description=\"OIDC auth module\"\n-              jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"name\":\"MyOIDCAuthModuleConf\", \"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n+              jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"name\":\"MyOIDCAuthModuleConf\", \"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n   <AuthModule id=\"4c3ed9d2-7008-11ea-bc55-0242ac130003\" name=\"DefaultSAML2IdPAuthModule\"\n-              description=\"SAML2 IdP auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"name\":\"MySAML2IdPAuthModuleConf\", \"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"classpath:/idp-metadata.xml\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n+              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"name\":\"MySAML2IdPAuthModuleConf\", \"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"classpath:/idp-metadata.xml\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n   <AuthModule id=\"4c3edbbc-7008-11ea-bc55-0242ac130003\" name=\"DefaultJaasAuthModule\"\n-              description=\"Jaas auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"name\":\"MyJaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\", \"loginConfigType\": \"JavaLoginConfig\", \"loginConfigurationFile\": \"file:/etc/jaas/login.conf\"}'/>\n+              description=\"Jaas auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"name\":\"MyJaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\", \"loginConfigType\": \"JavaLoginConfig\", \"loginConfigurationFile\": \"file:/etc/jaas/login.conf\"}'/>\n   <AuthModule id=\"4c3edc98-7008-11ea-bc55-0242ac130003\" name=\"DefaultStaticAuthModule\"\n-              description=\"Static auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"name\":\"MyStaticAuthModuleConf\",\"users\":{\"syncope1\": \"$cynop3\"}}'/>\n+              description=\"Static auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"name\":\"MyStaticAuthModuleConf\",\"users\":{\"syncope1\": \"$cynop3\"}}'/>\n   <AuthModule id=\"4c3edd60-7008-11ea-bc55-0242ac130003\" name=\"DefaultSyncopeAuthModule\"\n-              description=\"Syncope auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"name\":\"MySyncopeAuthModuleConf\",\"domain\":\"Master\",\"url\":\"http://localhost:9080/syncope/rest\"}'/>\n+              description=\"Syncope auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"name\":\"MySyncopeAuthModuleConf\",\"domain\":\"Master\",\"url\":\"http://localhost:9080/syncope/rest\"}'/>\n   <AuthModule id=\"07c528f3-63b4-4dc1-a4da-87f35b8bdec8\" name=\"DefaultRadiusAuthModule\"\n-              description=\"Radius auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.RadiusAuthModuleConf\",\"name\":\"MyRadiusAuthModuleConf\",\"protocol\":\"PAP\",\"inetAddress\":\"localhost\", \"sharedSecret\":\"testing123\"}'/>\n+              description=\"Radius auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.RadiusAuthModuleConf\",\"name\":\"MyRadiusAuthModuleConf\",\"protocol\":\"PAP\",\"inetAddress\":\"localhost\", \"sharedSecret\":\"testing123\"}'/>\n   <AuthModule id=\"f6e1288d-50d9-45fe-82ee-597c42242205\" name=\"DefaultU2FAuthModule\"\n-              description=\"U2F auth module\" jsonConf='{\"@class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"name\":\"MyU2FAuthModuleConf\",\"expireDevices\":40}'/>\n+              description=\"U2F auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"name\":\"MyU2FAuthModuleConf\",\"expireDevices\":40}'/>\n \n   <RelationshipType id=\"inclusion\" description=\"Models the act that an object is included in another\"/>\n   <RelationshipType id=\"neighborhood\" description=\"Models the act that an object is near another\"/>\n@@ -544,7 +544,7 @@ under the License.\n   <PullPolicy id=\"66691e96-285f-4464-bc19-e68384ea4c85\" description=\"a pull policy\" conflictResolutionAction=\"IGNORE\"/>\n   <PullPolicy id=\"880f8553-069b-4aed-9930-2cd53873f544\" description=\"another pull policy\" conflictResolutionAction=\"ALL\"/>\n   <Implementation id=\"TestPullCorrelationRule\" type=\"PULL_CORRELATION_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"schemas\":[\"username\",\"firstname\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"schemas\":[\"username\",\"firstname\"]}'/>\n   <PullCorrelationRuleEntity id=\"10e3d196-7486-4c88-aefd-59e40d93a0c1\" pullPolicy_id=\"880f8553-069b-4aed-9930-2cd53873f544\" \n                              anyType_id=\"USER\" implementation_id=\"TestPullCorrelationRule\"/>\n   <PullPolicy id=\"4ad10d94-e002-4b3f-b771-16089cc71da9\" description=\"pull policy 1\" conflictResolutionAction=\"IGNORE\"/>\n@@ -553,7 +553,7 @@ under the License.\n   <!-- push policies -->\n   <PushPolicy id=\"fb6530e5-892d-4f47-a46b-180c5b6c5c83\" description=\"a push policy\" conflictResolutionAction=\"IGNORE\"/>\n   <Implementation id=\"TestPushCorrelationRule\" type=\"PUSH_CORRELATION_RULE\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"schemas\":[\"surname\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf\",\"schemas\":[\"surname\"]}'/>\n   <PushCorrelationRuleEntity id=\"24463935-32a0-4272-bc78-04d6d0adc69e\" pushPolicy_id=\"fb6530e5-892d-4f47-a46b-180c5b6c5c83\" \n                              anyType_id=\"USER\" implementation_id=\"TestPushCorrelationRule\"/>\n   \n@@ -1102,10 +1102,10 @@ under the License.\n         jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"b3772d66-ec06-4133-bf38-b3273845ac5b\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Implementation id=\"TestSampleJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\"/>\n   <Task DTYPE=\"SchedTask\" id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n@@ -1122,9 +1122,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n@@ -1135,9 +1135,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplatePullTask id=\"fda22ff3-98f3-42e4-a2ae-cd9a28282d57\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n   <Implementation id=\"LDAPMembershipPullActions\" type=\"PULL_ACTIONS\"  engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <PullTaskAction task_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" implementation_id=\"LDAPMembershipPullActions\"/>\n@@ -1214,9 +1214,9 @@ under the License.\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n+                       template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n@@ -1411,7 +1411,7 @@ $$ }&#10;\n     &lt;/html&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n     &lt;/h2&gt;&#10;\n@@ -1461,7 +1461,7 @@ $$ }&#10;\n     &lt;/xsl:if&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;h3&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n     &#10;\n@@ -1606,7 +1606,7 @@ $$ }&#10;\n        &#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h2&gt;&#10;\n     &lt;xsl:for-each select=&quot;group&quot;&gt;&#10;\n       &lt;h3&gt;Group &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n@@ -1772,7 +1772,7 @@ $$ }&#10;\n &#10;\n   &lt;xsl:variable name=&quot;delimiter&quot; select=&quot;';'&quot;/&gt;&#10;\n    &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/staticAttributes&quot;/&gt;&#10;\n     &lt;/xsl:call-template&gt;&#10;\n@@ -1830,7 +1830,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/userAttributes&quot;/&gt;&#10;\n@@ -1911,7 +1911,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/groupAttributes&quot;/&gt;&#10;\n@@ -2053,7 +2053,7 @@ $$ }&#10;\n     &lt;/fo:root&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n &#10;\n     &lt;fo:block font-size=&quot;14pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot;&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n@@ -2112,7 +2112,7 @@ $$ }&#10;\n         &#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;\n@@ -2276,7 +2276,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[_class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;\n@@ -2453,14 +2453,14 @@ $$ }&#10;\n   \n   <Report id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" name=\"test\" active=\"1\" template_id=\"sample\"/>\n   <Implementation id=\"UserReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.UserReportletConf\",\"name\":\"testUserReportlet\",\"matchingCond\":null,\"plainAttrs\":[\"fullname\",\"gender\"],\"derAttrs\":[\"cn\"],\"virAttrs\":[\"virtualdata\"],\"features\":[\"key\",\"username\",\"status\",\"creationDate\",\"lastLoginDate\",\"changePwdDate\",\"passwordHistorySize\",\"failedLoginCount\",\"memberships\",\"resources\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.UserReportletConf\",\"name\":\"testUserReportlet\",\"matchingCond\":null,\"plainAttrs\":[\"fullname\",\"gender\"],\"derAttrs\":[\"cn\"],\"virAttrs\":[\"virtualdata\"],\"features\":[\"key\",\"username\",\"status\",\"creationDate\",\"lastLoginDate\",\"changePwdDate\",\"passwordHistorySize\",\"failedLoginCount\",\"memberships\",\"resources\"]}'/>\n   <ReportReportlet report_id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" implementation_id=\"UserReportletConf\"/>\n   <ReportExec report_id=\"0062ea9c-924d-4ecf-9961-4492a8cc6d1b\" id=\"c13f39c5-0d35-4bff-ba79-3cd5de940369\"\n               status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n \n   <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n   \n   <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>"},{"sha":"a01d65907fc957a158c6932df014c4eadde1afab","filename":"core/starter/pom.xml","status":"modified","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -102,6 +102,58 @@ under the License.\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <phase>generate-resources</phase>\n+            <goals>\n+              <goal>unpack</goal>\n+            </goals>\n+            <configuration>\n+              <artifactItems>\n+                <artifactItem>\n+                  <groupId>org.webjars</groupId>\n+                  <artifactId>swagger-ui</artifactId>\n+                  <version>${swagger-ui.version}</version>\n+                  <overWrite>true</overWrite>\n+                  <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>\n+                  <excludes>**/*.gz</excludes>\n+                </artifactItem>\n+              </artifactItems>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-resources-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>copy-swagger-resources-in-place</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy-resources</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.outputDirectory}/META-INF/resources/</outputDirectory>\n+              <resources>\n+                <resource>\n+                  <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>\n+                  <excludes>\n+                    <exclude>index.html</exclude>\n+                  </excludes>\n+                </resource>\n+              </resources>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>"},{"sha":"732c64450cd24e0ecb3d7fc03bc285955aa649ba","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/SwaggerUIInitializer.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSwaggerUIInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSwaggerUIInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSwaggerUIInitializer.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.swaggerui;\n+package org.apache.syncope.core.starter;\n \n import org.springframework.context.annotation.Configuration;\n import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n@@ -27,6 +27,6 @@ public class SwaggerUIInitializer implements WebMvcConfigurer {\n \n     @Override\n     public void addViewControllers(final ViewControllerRegistry registry) {\n-        registry.addViewController(\"/swagger/\").setViewName(\"forward:/swagger/index.html\");\n+        registry.addViewController(\"/\").setViewName(\"forward:/index.html\");\n     }\n }","previous_filename":"ext/swagger-ui/src/main/java/org/apache/syncope/ext/swaggerui/SwaggerUIInitializer.java"},{"sha":"c804db7082250ee11e5fa7518dab56f26cb28e66","filename":"core/starter/src/main/resources/META-INF/resources/index.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Findex.html?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -61,7 +61,7 @@\n       const ui = SwaggerUIBundle({\n     // <ApacheSyncope>\n     urls: [{\n-      url: window.location.href.substring(0, window.location.href.lastIndexOf('/')) + \"/../rest/openapi.json\",\n+      url: window.location.href.substring(0, window.location.href.lastIndexOf('/')) + \"/rest/openapi.json\",\n       name: \"Apache Syncope\"\n     }],\n     docExpansion: 'none',","previous_filename":"ext/swagger-ui/src/main/resources/META-INF/resources/swagger/index.html"},{"sha":"702ff16a0affe7d3d244e9219a85de80fa35497e","filename":"docker/core/pom.xml","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -136,12 +136,6 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.apache.syncope.ext</groupId>\n-      <artifactId>syncope-ext-swagger-ui</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-\n     <!-- JDBC drivers -->\n     <dependency>\n       <groupId>org.postgresql</groupId>"},{"sha":"8f1d977139affa8c80110674f6558536182551ef","filename":"ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/to/CamelMetrics.java","status":"modified","additions":4,"deletions":13,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,23 +18,16 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"camelMetrics\")\n-@XmlType\n public class CamelMetrics implements Serializable {\n \n     private static final long serialVersionUID = -391404198406614231L;\n \n-    @XmlRootElement(name = \"meanRate\")\n-    @XmlType\n     public static class MeanRate implements Serializable {\n \n         private static final long serialVersionUID = -233921226510124154L;\n@@ -63,11 +56,9 @@ public void setValue(final double value) {\n \n     private final List<MeanRate> responseMeanRates = new ArrayList<>();\n \n-    @XmlElementWrapper(name = \"responseMeanRates\")\n-    @XmlElement(name = \"meanRate\")\n-    @JsonProperty(\"responseMeanRates\")\n+    @JacksonXmlElementWrapper(localName = \"responseMeanRates\")\n+    @JacksonXmlProperty(localName = \"meanRate\")\n     public List<MeanRate> getResponseMeanRates() {\n         return responseMeanRates;\n     }\n-\n }"},{"sha":"5b007c58657ded3b6bc620c1b0cb6200c46dbda2","filename":"ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/to/CamelRouteTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,8 @@\n package org.apache.syncope.common.lib.to;\n \n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n-@XmlRootElement(name = \"camelRoute\")\n-@XmlType\n public class CamelRouteTO implements EntityTO {\n \n     private static final long serialVersionUID = 6431992877435181674L;"},{"sha":"ecfaf415be6f94f6632aad906bf34fd11741dfd9","filename":"ext/flowable/client-common-ui/src/main/java/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,9 +19,9 @@\n package org.apache.syncope.ext.client.common.ui.panels;\n \n import java.text.ParseException;\n-import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n@@ -33,6 +33,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.UserRequestFormProperty;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.UserRequestFormPropertyValue;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -133,15 +134,23 @@ public void setObject(final Date object) {\n                     case Enum:\n                         field = new AjaxDropDownChoicePanel(\n                                 \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues())).\n-                                setChoices(new ArrayList<>(prop.getEnumValues().keySet()));\n+                                setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n+                                        collect(Collectors.toMap(\n+                                                UserRequestFormPropertyValue::getKey,\n+                                                UserRequestFormPropertyValue::getValue)))).\n+                                setChoices(prop.getEnumValues().stream().\n+                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n                         break;\n \n                     case Dropdown:\n                         field = new AjaxDropDownChoicePanel(\n                                 \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues())).\n-                                setChoices(new ArrayList<>(prop.getDropdownValues().keySet()));\n+                                setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n+                                        collect(Collectors.toMap(\n+                                                UserRequestFormPropertyValue::getKey,\n+                                                UserRequestFormPropertyValue::getValue)))).\n+                                setChoices(prop.getDropdownValues().stream().\n+                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n                         break;\n \n                     case Long:"},{"sha":"2f66323d20647f77fcb6ba9caae8bf7da8de6164","filename":"ext/flowable/common-lib/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -43,6 +43,12 @@ under the License.\n       <artifactId>syncope-common-idm-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"c766d001e83a5e361870cd020a69d4852509644d","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/BpmnProcess.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"bpmnProcess\")\n-@XmlType\n public class BpmnProcess implements EntityTO {\n \n     private static final long serialVersionUID = -7044543391316529128L;"},{"sha":"229859cb81b9f9ac58f2ebbc96ef16ff08e20659","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequest.java","status":"modified","additions":51,"deletions":7,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,17 +18,26 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.Date;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import java.util.Optional;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n \n-@XmlRootElement(name = \"userRequest\")\n-@XmlType\n-public class UserRequest extends BaseBean {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"bpmnProcess\" })\n+public class UserRequest implements BaseBean {\n \n     private static final long serialVersionUID = -8430826310789942133L;\n \n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    private final String clazz = \"org.apache.syncope.common.lib.to.UserRequest\";\n+\n     private String bpmnProcess;\n \n     private Date startTime;\n@@ -52,11 +61,11 @@ public void setBpmnProcess(final String bpmnProcess) {\n     }\n \n     public Date getStartTime() {\n-        return startTime;\n+        return Optional.ofNullable(startTime).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public void setStartTime(final Date startTime) {\n-        this.startTime = startTime;\n+        this.startTime = Optional.ofNullable(startTime).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public String getUsername() {\n@@ -99,4 +108,39 @@ public void setHasForm(final boolean hasForm) {\n         this.hasForm = hasForm;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(bpmnProcess).\n+                append(startTime).\n+                append(username).\n+                append(executionId).\n+                append(activityId).\n+                append(taskId).\n+                append(hasForm).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        UserRequest other = (UserRequest) obj;\n+        return new EqualsBuilder().\n+                append(bpmnProcess, other.bpmnProcess).\n+                append(startTime, other.startTime).\n+                append(username, other.username).\n+                append(executionId, other.executionId).\n+                append(activityId, other.activityId).\n+                append(taskId, other.taskId).\n+                append(hasForm, other.hasForm).\n+                build();\n+    }\n }"},{"sha":"7a6d76918aa6e17a4057fb5d4c4db3123d741ecb","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequestForm.java","status":"modified","additions":63,"deletions":28,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -20,23 +20,29 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.request.UserUR;\n \n-@XmlRootElement(name = \"userRequestForm\")\n-@XmlType\n-public class UserRequestForm extends BaseBean {\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n+@JsonPropertyOrder(value = { \"_class\", \"bpmnProcess\" })\n+public class UserRequestForm implements BaseBean {\n \n     private static final long serialVersionUID = -7044543391316529128L;\n \n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    private final String clazz = \"org.apache.syncope.common.lib.to.UserRequestForm\";\n+\n     private String bpmnProcess;\n \n     private String username;\n@@ -100,33 +106,19 @@ public void setFormKey(final String formKey) {\n     }\n \n     public Date getCreateTime() {\n-        if (createTime != null) {\n-            return new Date(createTime.getTime());\n-        }\n-        return null;\n+        return Optional.ofNullable(createTime).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public void setCreateTime(final Date createTime) {\n-        if (createTime != null) {\n-            this.createTime = new Date(createTime.getTime());\n-        } else {\n-            this.createTime = null;\n-        }\n+        this.createTime = Optional.ofNullable(createTime).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public Date getDueDate() {\n-        if (dueDate != null) {\n-            return new Date(dueDate.getTime());\n-        }\n-        return null;\n+        return Optional.ofNullable(dueDate).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public void setDueDate(final Date dueDate) {\n-        if (dueDate != null) {\n-            this.dueDate = new Date(dueDate.getTime());\n-        } else {\n-            this.dueDate = null;\n-        }\n+        this.dueDate = Optional.ofNullable(dueDate).map(date -> new Date(date.getTime())).orElse(null);\n     }\n \n     public String getAssignee() {\n@@ -158,10 +150,53 @@ public Optional<UserRequestFormProperty> getProperty(final String id) {\n         return properties.stream().filter(property -> id.equals(property.getId())).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"properties\")\n-    @XmlElement(name = \"property\")\n-    @JsonProperty(\"properties\")\n+    @JacksonXmlElementWrapper(localName = \"properties\")\n+    @JacksonXmlProperty(localName = \"property\")\n     public List<UserRequestFormProperty> getProperties() {\n         return properties;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(bpmnProcess).\n+                append(username).\n+                append(executionId).\n+                append(taskId).\n+                append(formKey).\n+                append(createTime).\n+                append(dueDate).\n+                append(assignee).\n+                append(userTO).\n+                append(userUR).\n+                append(properties).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        UserRequestForm other = (UserRequestForm) obj;\n+        return new EqualsBuilder().\n+                append(bpmnProcess, other.bpmnProcess).\n+                append(username, other.username).\n+                append(executionId, other.executionId).\n+                append(taskId, other.taskId).\n+                append(formKey, other.formKey).\n+                append(createTime, other.createTime).\n+                append(dueDate, other.dueDate).\n+                append(assignee, other.assignee).\n+                append(userTO, other.userTO).\n+                append(userUR, other.userUR).\n+                append(properties, other.properties).\n+                build();\n+    }\n }"},{"sha":"603e7fc34e618f1faa9aa9fb17d08ed2f3d538bf","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequestFormProperty.java","status":"modified","additions":56,"deletions":17,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,18 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.io.Serializable;\n-import java.util.HashMap;\n-import java.util.Map;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n \n-@XmlRootElement(name = \"userRequestFormProperty\")\n-@XmlType\n public class UserRequestFormProperty implements Serializable {\n \n     private static final long serialVersionUID = 9139969592634304261L;\n@@ -48,11 +45,9 @@ public class UserRequestFormProperty implements Serializable {\n \n     private String datePattern;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n-    private final Map<String, String> enumValues = new HashMap<>();\n+    private final List<UserRequestFormPropertyValue> enumValues = new ArrayList<>();\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n-    private final Map<String, String> dropdownValues = new HashMap<>();\n+    private final List<UserRequestFormPropertyValue> dropdownValues = new ArrayList<>();\n \n     private String value;\n \n@@ -112,13 +107,15 @@ public void setDatePattern(final String datePattern) {\n         this.datePattern = datePattern;\n     }\n \n-    @JsonProperty\n-    public Map<String, String> getEnumValues() {\n+    @JacksonXmlElementWrapper(localName = \"enumValues\")\n+    @JacksonXmlProperty(localName = \"enumValue\")\n+    public List<UserRequestFormPropertyValue> getEnumValues() {\n         return enumValues;\n     }\n \n-    @JsonProperty\n-    public Map<String, String> getDropdownValues() {\n+    @JacksonXmlElementWrapper(localName = \"dropdownValues\")\n+    @JacksonXmlProperty(localName = \"dropdownValue\")\n+    public List<UserRequestFormPropertyValue> getDropdownValues() {\n         return dropdownValues;\n     }\n \n@@ -129,4 +126,46 @@ public String getValue() {\n     public void setValue(final String value) {\n         this.value = value;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(id).\n+                append(name).\n+                append(type).\n+                append(readable).\n+                append(writable).\n+                append(required).\n+                append(datePattern).\n+                append(enumValues).\n+                append(dropdownValues).\n+                append(value).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        UserRequestFormProperty other = (UserRequestFormProperty) obj;\n+        return new EqualsBuilder().\n+                append(id, other.id).\n+                append(name, other.name).\n+                append(type, other.type).\n+                append(readable, other.readable).\n+                append(writable, other.writable).\n+                append(required, other.required).\n+                append(datePattern, other.datePattern).\n+                append(enumValues, other.enumValues).\n+                append(dropdownValues, other.dropdownValues).\n+                append(value, other.value).\n+                build();\n+    }\n }"},{"sha":"3a166bc1635595e63cbdc08aabb4aca1ef7a3200","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequestFormPropertyValue.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormPropertyValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormPropertyValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormPropertyValue.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+\n+public class UserRequestFormPropertyValue implements Serializable {\n+\n+    private static final long serialVersionUID = 9139969597634304261L;\n+\n+    private final String key;\n+\n+    private final String value;\n+\n+    @JsonCreator\n+    public UserRequestFormPropertyValue(\n+            @JsonProperty(\"key\") final String key,\n+            @JsonProperty(\"value\") final String value) {\n+\n+        this.key = key;\n+        this.value = value;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(value).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        UserRequestFormPropertyValue other = (UserRequestFormPropertyValue) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(value, other.value).\n+                build();\n+    }\n+}"},{"sha":"1a341c80aad5fb6de360363963aad3481a36e17b","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowTask.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"workflowTask\")\n-@XmlType\n public class WorkflowTask implements Serializable {\n \n     private static final long serialVersionUID = -3095016727396210808L;"},{"sha":"b90381854e856e9fe8211144deb6e5303276f4f5","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowTaskExecInput.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,25 +18,17 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n-@XmlRootElement(name = \"workflowTaskExecInput\")\n-@XmlType\n public class WorkflowTaskExecInput implements Serializable {\n \n     private static final long serialVersionUID = 8060283119070901756L;\n \n     private String userKey;\n \n-    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, String> variables = new HashMap<>();\n \n     public String getUserKey() {\n@@ -48,7 +40,6 @@ public void setUserKey(final String userKey) {\n         this.userKey = userKey;\n     }\n \n-    @JsonProperty\n     public Map<String, String> getVariables() {\n         return variables;\n     }"},{"sha":"a8e174e84776ddcab92539a0fefcd85802eab34b","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/types/BpmnProcessFormat.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FBpmnProcessFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FBpmnProcessFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FBpmnProcessFormat.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,12 +18,23 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n+import javax.ws.rs.core.MediaType;\n+\n /**\n  * Format for import / export of workflow definition.\n  */\n public enum BpmnProcessFormat {\n \n-    XML,\n-    JSON\n+    XML(MediaType.APPLICATION_XML_TYPE),\n+    JSON(MediaType.APPLICATION_JSON_TYPE);\n+\n+    private final MediaType mediaType;\n+\n+    BpmnProcessFormat(final MediaType mediaType) {\n+        this.mediaType = mediaType;\n+    }\n \n+    public MediaType getMediaType() {\n+        return mediaType;\n+    }\n }"},{"sha":"35b1df7079db4a93a34a319c63ef248e063db6de","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/types/UserRequestFormPropertyType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUserRequestFormPropertyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUserRequestFormPropertyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FUserRequestFormPropertyType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum UserRequestFormPropertyType {\n \n     String,"},{"sha":"92fd7d89ce6208aa3ffe3bcaf276614066fdfbbf","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/types/WorkflowTasks.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FWorkflowTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FWorkflowTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FWorkflowTasks.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,9 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n-import javax.xml.bind.annotation.XmlRootElement;\n \n-@XmlRootElement\n public class WorkflowTasks {\n \n     private List<String> tasks;"},{"sha":"16b93058462fa1bb5471fbf13a5fb407920b3520","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/JSONTest.java","status":"renamed","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJSONTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,15 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-@XmlSchema(namespace = SyncopeConstants.NS)\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n package org.apache.syncope.common.lib.to;\n \n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n \n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n+public class JSONTest extends SerializationTest {\n \n-import java.util.Date;\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return OBJECT_MAPPER;\n+    }\n+}","previous_filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/package-info.java"},{"sha":"c3024dbf78724a9da2b4d5ef78568eaf50bb57e2","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/SerializationTest.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.Date;\n+import java.util.UUID;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.request.AttrPatch;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n+import org.junit.jupiter.api.Test;\n+\n+public abstract class SerializationTest {\n+\n+    protected abstract ObjectMapper objectMapper();\n+\n+    @Test\n+    public void userRequestForm() throws IOException {\n+        UserRequestForm form = new UserRequestForm();\n+        form.setBpmnProcess(\"process\");\n+        form.setCreateTime(new Date());\n+        form.setUsername(\"username\");\n+        form.setExecutionId(\"434343\");\n+        form.setFormKey(\"123456\");\n+\n+        UserTO userTO = new UserTO();\n+        userTO.setKey(UUID.randomUUID().toString());\n+        form.setUserTO(userTO);\n+\n+        UserUR userUR = new UserUR();\n+        userUR.setKey(userTO.getKey());\n+        userUR.getPlainAttrs().add(new AttrPatch.Builder(new Attr.Builder(\"schema1\").value(\"value1\").build()).build());\n+        form.setUserUR(userUR);\n+\n+        UserRequestFormProperty property = new UserRequestFormProperty();\n+        property.setId(\"printMode\");\n+        property.setName(\"Preferred print mode\");\n+        property.setType(UserRequestFormPropertyType.Dropdown);\n+        property.getDropdownValues().add(\n+                new UserRequestFormPropertyValue(\"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\", \"value1\"));\n+        property.getDropdownValues().add(\n+                new UserRequestFormPropertyValue(UUID.randomUUID().toString(), \"value2 / value3\"));\n+        form.getProperties().add(property);\n+\n+        PagedResult<UserRequestForm> original = new PagedResult<>();\n+        original.getResult().add(form);\n+        original.setSize(1);\n+        original.setTotalCount(1);\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, original);\n+\n+        PagedResult<UserRequestForm> actual = objectMapper().readValue(writer.toString(),\n+                new TypeReference<PagedResult<UserRequestForm>>() {\n+        });\n+        assertEquals(original, actual);\n+    }\n+}"},{"sha":"e71448049ee8a0097670a5119032a1901b4dba9d","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/XMLTest.java","status":"renamed","additions":24,"deletions":12,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -16,17 +16,29 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-@XmlSchema(\n-        namespace = SyncopeConstants.NS,\n-        xmlns = { @XmlNs(prefix = SyncopeConstants.NS_PREFIX,\n-                    namespaceURI = SyncopeConstants.NS) })\n-@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(type = Date.class, value = DateAdapter.class), })\n package org.apache.syncope.common.lib.to;\n \n-import java.util.Date;\n-import javax.xml.bind.annotation.XmlNs;\n-import javax.xml.bind.annotation.XmlSchema;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.jaxb.DateAdapter;\n+import com.fasterxml.jackson.annotation.JsonSetter;\n+import com.fasterxml.jackson.annotation.Nulls;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class XMLTest extends SerializationTest {\n+\n+    private static final XmlMapper XML_MAPPER;\n+\n+    static {\n+        XML_MAPPER = new XmlMapper();\n+        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+    }\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return XML_MAPPER;\n+    }\n+}","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/package-info.java"},{"sha":"1d589ff5b4069b91ed0c452e12ccefce231ab250","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/YAMLTest.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FYAMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FYAMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FYAMLTest.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n+\n+public class YAMLTest extends SerializationTest {\n+\n+    private static final YAMLMapper YAML_MAPPER = new YAMLMapper();\n+\n+    @Override\n+    protected ObjectMapper objectMapper() {\n+        return YAML_MAPPER;\n+    }\n+}"},{"sha":"536c29b504779b6d5de8079c9eb9681b722b96cc","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestFormProperty;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.UserRequestFormPropertyValue;\n import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n@@ -428,15 +429,19 @@ protected UserRequestForm getForm(\n                     break;\n \n                 case Enum:\n-                    propertyTO.getEnumValues().putAll((Map<String, String>) fProp.getType().getInformation(\"values\"));\n+                    ((Map<String, String>) fProp.getType().getInformation(\"values\")).forEach((key, value) -> {\n+                        propertyTO.getEnumValues().add(new UserRequestFormPropertyValue(key, value));\n+                    });\n                     break;\n \n                 case Dropdown:\n                     String valueProviderBean = (String) fProp.getType().getInformation(DropdownValueProvider.NAME);\n                     try {\n                         DropdownValueProvider valueProvider = ApplicationContextProvider.getApplicationContext().\n                                 getBean(valueProviderBean, DropdownValueProvider.class);\n-                        propertyTO.getDropdownValues().putAll(valueProvider.getValues());\n+                        valueProvider.getValues().forEach((key, value) -> {\n+                            propertyTO.getDropdownValues().add(new UserRequestFormPropertyValue(key, value));\n+                        });\n                     } catch (Exception e) {\n                         LOG.error(\"Could not find bean {} of type {} for form property {}\",\n                                 valueProviderBean, DropdownValueProvider.class.getName(), propertyTO.getId(), e);"},{"sha":"530ca1c9effe360741f716ad022ad2c3c9373bda","filename":"ext/flowable/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/BpmnProcessServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FBpmnProcessServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FBpmnProcessServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FBpmnProcessServiceImpl.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -51,8 +51,7 @@ public Response get(final String key) {\n         StreamingOutput sout = os -> logic.exportDefinition(key, format, os);\n \n         return Response.ok(sout).\n-                type(format == BpmnProcessFormat.JSON\n-                        ? MediaType.APPLICATION_JSON_TYPE : MediaType.APPLICATION_XHTML_XML_TYPE).\n+                type(format.getMediaType()).\n                 build();\n     }\n "},{"sha":"81898094e0f49ae3428bf783e45ab9ced815cb86","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginRequestTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"oidcLoginRequest\")\n-@XmlType\n public class OIDCLoginRequestTO implements Serializable {\n \n     private static final long serialVersionUID = -3509031322459942441L;"},{"sha":"40b86f8e41201b554ff5b95145d6dc1e81a0e969","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginResponseTO.java","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,20 +19,15 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.io.Serializable;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.Attr;\n \n-@XmlRootElement(name = \"oidcLoginResponse\")\n-@XmlType\n public class OIDCLoginResponseTO implements Serializable {\n \n     private static final long serialVersionUID = -5971442076182154492L;\n@@ -94,11 +89,9 @@ public Optional<Attr> getAttr(final String schema) {\n         return attrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"attrs\")\n-    @XmlElement(name = \"attr\")\n-    @JsonProperty(\"attrs\")\n+    @JacksonXmlElementWrapper(localName = \"attrs\")\n+    @JacksonXmlProperty(localName = \"attr\")\n     public Set<Attr> getAttrs() {\n         return attrs;\n     }\n-\n }"},{"sha":"4fd28f3cbc2ab0359befe859cefb95f9bc0832c6","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLogoutRequestTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"oidcLogoutRequest\")\n-@XmlType\n public class OIDCLogoutRequestTO implements Serializable {\n \n     private static final long serialVersionUID = -4708360216757961537L;"},{"sha":"76da99bb781b313dbee4de07b4cc477c56a23795","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCProviderTO.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,19 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"oidcprovider\")\n-@XmlType\n public class OIDCProviderTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = -1229802774546135794L;\n@@ -207,12 +201,11 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n         return Optional.ofNullable(connObjectKeyItem)\n-            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+                .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n-    @XmlElementWrapper(name = \"items\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"items\")\n+    @JacksonXmlElementWrapper(localName = \"items\")\n+    @JacksonXmlProperty(localName = \"item\")\n     @Override\n     public List<ItemTO> getItems() {\n         return items;\n@@ -221,16 +214,15 @@ public List<ItemTO> getItems() {\n     @Override\n     public boolean add(final ItemTO item) {\n         return Optional.ofNullable(item)\n-            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+                .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {\n         return this.items.remove(item);\n     }\n \n-    @XmlElementWrapper(name = \"actions\")\n-    @XmlElement(name = \"action\")\n-    @JsonProperty(\"actions\")\n+    @JacksonXmlElementWrapper(localName = \"actions\")\n+    @JacksonXmlProperty(localName = \"action\")\n     public List<String> getActions() {\n         return actions;\n     }"},{"sha":"395da209305a0ad4a73cf8a69468c96f5109809c","filename":"ext/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -79,7 +79,6 @@ under the License.\n   <modules>\n     <module>flowable</module>\n     <module>camel</module>\n-    <module>swagger-ui</module>\n     <module>saml2sp</module>\n     <module>elasticsearch</module>\n     <module>scimv2</module>"},{"sha":"a67f80a92db3f849cb1a1bd90aa2cd3501040b0e","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":9,"deletions":18,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,20 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-\n import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n-@XmlRootElement(name = \"saml2idp\")\n-@XmlType\n public class SAML2IdPTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = 4426527052873779881L;\n@@ -179,31 +173,28 @@ protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {\n \n     @Override\n     public boolean setConnObjectKeyItem(final ItemTO connObjectKeyItem) {\n-        return Optional.ofNullable(connObjectKeyItem)\n-            .map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n+        return Optional.ofNullable(connObjectKeyItem).\n+                map(this::addConnObjectKeyItem).orElseGet(() -> remove(getConnObjectKeyItem()));\n     }\n \n-    @XmlElementWrapper(name = \"items\")\n-    @XmlElement(name = \"item\")\n-    @JsonProperty(\"items\")\n+    @JacksonXmlElementWrapper(localName = \"items\")\n+    @JacksonXmlProperty(localName = \"item\")\n     @Override\n     public List<ItemTO> getItems() {\n         return items;\n     }\n \n     @Override\n     public boolean add(final ItemTO item) {\n-        return Optional.ofNullable(item)\n-            .filter(itemTO -> this.items.contains(itemTO) || this.items.add(itemTO)).isPresent();\n+        return Optional.ofNullable(item).filter(itemTO -> items.contains(itemTO) || items.add(itemTO)).isPresent();\n     }\n \n     public boolean remove(final ItemTO item) {\n         return this.items.remove(item);\n     }\n \n-    @XmlElementWrapper(name = \"actions\")\n-    @XmlElement(name = \"action\")\n-    @JsonProperty(\"actions\")\n+    @JacksonXmlElementWrapper(localName = \"actions\")\n+    @JacksonXmlProperty(localName = \"action\")\n     public List<String> getActions() {\n         return actions;\n     }"},{"sha":"debb84af20e997ba630d712f31df35157c726c6b","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2LoginResponseTO.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,20 +19,15 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.io.Serializable;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.Attr;\n \n-@XmlRootElement(name = \"saml2LoginResponse\")\n-@XmlType\n public class SAML2LoginResponseTO implements Serializable {\n \n     private static final long serialVersionUID = 794772343787258010L;\n@@ -134,9 +129,8 @@ public Optional<Attr> getAttr(final String schema) {\n         return attrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n \n-    @XmlElementWrapper(name = \"attrs\")\n-    @XmlElement(name = \"attr\")\n-    @JsonProperty(\"attrs\")\n+    @JacksonXmlElementWrapper(localName = \"attrs\")\n+    @JacksonXmlProperty(localName = \"attr\")\n     public Set<Attr> getAttrs() {\n         return attrs;\n     }"},{"sha":"525afaf72ce9b86fe196174eeb4ca48fbf1ee69b","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2ReceivedResponseTO.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,8 @@\n package org.apache.syncope.common.lib.to;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n \n-@XmlRootElement(name = \"saml2ReceivedResponse\")\n-@XmlType\n public class SAML2ReceivedResponseTO implements Serializable {\n \n     private static final long serialVersionUID = 6102419133516694822L;\n@@ -68,5 +64,4 @@ public String getRelayState() {\n     public void setRelayState(final String relayState) {\n         this.relayState = relayState;\n     }\n-\n }"},{"sha":"50937f3a4fbfeba6bfdb1a9cbaa38b276e93df36","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2RequestTO.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -19,12 +19,8 @@\n package org.apache.syncope.common.lib.to;\n \n import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n-@XmlRootElement(name = \"saml2request\")\n-@XmlType\n public class SAML2RequestTO implements Serializable {\n \n     private static final long serialVersionUID = -2454209295007372086L;\n@@ -88,5 +84,4 @@ public String getSignature() {\n     public void setSignature(final String signature) {\n         this.signature = signature;\n     }\n-\n }"},{"sha":"48cbe56f6fbdf7aa54fbb758d7b19bbb18d30441","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/types/SAML2BindingType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2BindingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2BindingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2BindingType.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n public enum SAML2BindingType {\n     POST(\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"),\n     REDIRECT(\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\");"},{"sha":"1c3633049f0072a74306f3d04def79c69c7a941f","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/types/SignatureAlgorithm.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSignatureAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSignatureAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSignatureAlgorithm.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -55,5 +55,4 @@ public enum SignatureAlgorithm {\n     public String getAlgorithm() {\n         return algorithm;\n     }\n-\n }"},{"sha":"6693efc6f74db15d2cc3dbf089d624d03c3406d2","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/RESTSCIMCXFContext.java","status":"modified","additions":1,"deletions":21,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -21,10 +21,8 @@\n import java.util.List;\n import java.util.Map;\n \n-import javax.annotation.Resource;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n-import org.apache.cxf.jaxrs.model.wadl.WadlGenerator;\n import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n@@ -45,9 +43,6 @@ public class RESTSCIMCXFContext {\n     @Autowired\n     private ApplicationContext ctx;\n \n-    @Resource(name = \"version\")\n-    private String version;\n-\n     @Bean\n     public SCIMJacksonJsonProvider scimJacksonJsonProvider() {\n         return new SCIMJacksonJsonProvider();\n@@ -63,20 +58,6 @@ public AddETagFilter scimAddETagFilter() {\n         return new AddETagFilter();\n     }\n \n-    @Bean\n-    public WadlGenerator scimWADLGenerator() {\n-        WadlGenerator wadlGenerator = new WadlGenerator();\n-        wadlGenerator.setApplicationTitle(\"Apache Syncope SCIMv2 \" + version);\n-        wadlGenerator.setNamespacePrefix(\"syncope30\");\n-        wadlGenerator.setIncrementNamespacePrefix(false);\n-        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n-        wadlGenerator.setUseJaxbContextForQnames(true);\n-        wadlGenerator.setAddResourceAndMethodIds(true);\n-        wadlGenerator.setIgnoreMessageWriters(true);\n-        wadlGenerator.setUsePathParamsToCompareOperations(false);\n-        return wadlGenerator;\n-    }\n-\n     @Bean\n     public Server scimv2Container() {\n         SpringJAXRSServerFactoryBean scimv2Container = new SpringJAXRSServerFactoryBean();\n@@ -98,8 +79,7 @@ public Server scimv2Container() {\n         scimv2Container.setProviders(List.of(\n                 scimJacksonJsonProvider(),\n                 scimExceptionMapper(),\n-                scimAddETagFilter(),\n-                scimWADLGenerator()));\n+                scimAddETagFilter()));\n \n         scimv2Container.setApplicationContext(ctx);\n         return scimv2Container.create();"},{"sha":"9fea5ec4899b378ec7f747ecb7bef12410676d2e","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/SelfKeymasterContext.java","status":"modified","additions":3,"deletions":23,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -18,13 +18,11 @@\n  */\n package org.apache.syncope.ext.self.keymaster.cxf;\n \n-import com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n import java.util.List;\n import java.util.Map;\n-import javax.annotation.Resource;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n-import org.apache.cxf.jaxrs.model.wadl.WadlGenerator;\n import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n@@ -62,25 +60,8 @@ public class SelfKeymasterContext {\n     @Autowired\n     private ApplicationContext ctx;\n \n-    @Resource(name = \"version\")\n-    private String version;\n-\n-    @Bean\n-    public WadlGenerator selfKeymasterWADLGenerator() {\n-        WadlGenerator wadlGenerator = new WadlGenerator();\n-        wadlGenerator.setApplicationTitle(\"Apache Syncope Self Keymaster \" + version);\n-        wadlGenerator.setNamespacePrefix(\"syncope30\");\n-        wadlGenerator.setIncrementNamespacePrefix(false);\n-        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n-        wadlGenerator.setUseJaxbContextForQnames(true);\n-        wadlGenerator.setAddResourceAndMethodIds(true);\n-        wadlGenerator.setIgnoreMessageWriters(true);\n-        wadlGenerator.setUsePathParamsToCompareOperations(false);\n-        return wadlGenerator;\n-    }\n-\n     @Bean\n-    public Server selfKeymasterContainer() {\n+    public Server selfKeymasterContainer(final JacksonJsonProvider jsonProvider) {\n         SpringJAXRSServerFactoryBean selfKeymasterContainer = new SpringJAXRSServerFactoryBean();\n         selfKeymasterContainer.setBus(bus);\n         selfKeymasterContainer.setAddress(\"/keymaster\");\n@@ -99,8 +80,7 @@ public Server selfKeymasterContainer() {\n \n         selfKeymasterContainer.setProviders(List.of(\n                 ctx.getBean(RestServiceExceptionMapper.class),\n-                ctx.getBean(JacksonJaxbJsonProvider.class),\n-                selfKeymasterWADLGenerator()));\n+                jsonProvider));\n \n         selfKeymasterContainer.setApplicationContext(ctx);\n         return selfKeymasterContainer.create();"},{"sha":"f38353ba30097179203fe2f1f39550f91a653096","filename":"ext/swagger-ui/pom.xml","status":"removed","additions":0,"deletions":133,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/ext%2Fswagger-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/ext%2Fswagger-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fpom.xml?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,133 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope</groupId>\n-    <artifactId>syncope-ext</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Ext: Swagger UI</name>\n-  <description>Apache Syncope Ext: Swagger UI</description>\n-  <groupId>org.apache.syncope.ext</groupId>\n-  <artifactId>syncope-ext-swagger-ui</artifactId>\n-  <packaging>jar</packaging>\n-  \n-  <properties>\n-    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-webmvc</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.fasterxml.jackson.dataformat</groupId>\n-      <artifactId>jackson-dataformat-xml</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.fasterxml.jackson.datatype</groupId>\n-      <artifactId>jackson-datatype-joda</artifactId>\n-    </dependency>  \n- \n-    <dependency>\n-      <groupId>joda-time</groupId>\n-      <artifactId>joda-time</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.google.guava</groupId>\n-      <artifactId>guava</artifactId>\n-    </dependency>\n-  </dependencies>\n-\n-  <build>\n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-dependency-plugin</artifactId>\n-        <inherited>true</inherited>\n-        <executions>\n-          <execution>\n-            <phase>generate-resources</phase>\n-            <goals>\n-              <goal>unpack</goal>\n-            </goals>\n-            <configuration>\n-              <artifactItems>\n-                <artifactItem>\n-                  <groupId>org.webjars</groupId>\n-                  <artifactId>swagger-ui</artifactId>\n-                  <version>${swagger-ui.version}</version>\n-                  <overWrite>true</overWrite>\n-                  <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>\n-                  <excludes>**/*.gz</excludes>\n-                </artifactItem>\n-              </artifactItems>\n-            </configuration>\n-          </execution>\n-        </executions>\n-      </plugin>\n-\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-resources-plugin</artifactId>\n-        <inherited>true</inherited>\n-        <executions>\n-          <execution>\n-            <id>copy-swagger-resources-in-place</id>\n-            <phase>process-resources</phase>\n-            <goals>\n-              <goal>copy-resources</goal>\n-            </goals>\n-            <configuration>\n-              <outputDirectory>${project.build.outputDirectory}/META-INF/resources/swagger</outputDirectory>\n-              <resources>\n-                <resource>\n-                  <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>\n-                  <excludes>\n-                    <exclude>index.html</exclude>\n-                  </excludes>\n-                </resource>\n-              </resources>\n-            </configuration>\n-          </execution>\n-        </executions>\n-      </plugin>\n-         \n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-    \n-    <resources>\n-      <resource>\n-        <directory>src/main/resources</directory>\n-        <filtering>true</filtering>\n-      </resource>\n-    </resources>\n-  </build>\n-</project>"},{"sha":"c0a91e03fc6a795941bd1534f52912a91e1b32b0","filename":"ext/swagger-ui/src/main/resources/META-INF/spring.factories","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38a5f27372080c1acf731eadf1c4b85a2dd60de/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38a5f27372080c1acf731eadf1c4b85a2dd60de/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=d38a5f27372080c1acf731eadf1c4b85a2dd60de","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.ext.swaggerui.SwaggerUIInitializer"},{"sha":"e823618e213f11b0cb40b45c5e9665ce2e9841d0","filename":"fit/build-tools/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -352,7 +352,7 @@ under the License.\n               </container>\n               <configuration>\n                 <properties>\n-                  <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                  <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled</cargo.jvmargs>\n                 </properties>\n               </configuration>\n@@ -407,7 +407,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.glassfish.removeDefaultDatasource>false</cargo.glassfish.removeDefaultDatasource>\n-                  <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                  <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled</cargo.jvmargs>\n                 </properties>\n               </configuration>"},{"sha":"23f78bb6d118bae4abd8ebe135c55a878324a9f9","filename":"fit/console-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -216,7 +216,7 @@ under the License.\n                   <cargo.jvmargs>\n                     -Dspring.profiles.active=embedded\n                     -Dwicket.core.settings.general.configuration-type=development\n-                    -Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                    -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseG1GC -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>"},{"sha":"f6c3a1592cba2e9815ffadc5faa1cbae48f801ac","filename":"fit/core-reference/pom.xml","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -266,6 +266,17 @@ under the License.\n         </executions>\n       </plugin>\n \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <configuration>\n+          <systemPropertyVariables>\n+            <jaxrsContentType>${jaxrs.content.type}</jaxrsContentType>\n+            <obscureSecretKey>${obscureSecretKey}</obscureSecretKey>\n+          </systemPropertyVariables>\n+        </configuration>\n+      </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-failsafe-plugin</artifactId>\n@@ -1700,7 +1711,7 @@ under the License.\n                 <properties>\n                   <cargo.jvmargs>\n                     -Dspring.profiles.active=embedded\n-                    -Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                    -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseG1GC -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n@@ -1813,12 +1824,6 @@ under the License.\n           <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n-        \n-        <dependency>\n-          <groupId>org.apache.syncope.ext</groupId>\n-          <artifactId>syncope-ext-swagger-ui</artifactId>\n-          <version>${project.version}</version>\n-        </dependency>\n       </dependencies>\n       \n       <build>"},{"sha":"75eee0a4bab1c201c6d7f20d8d7c9a996d654928","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -23,6 +23,7 @@\n import static org.junit.jupiter.api.Assertions.fail;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -163,6 +164,8 @@ public abstract class AbstractITCase {\n \n     protected static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n+    protected static final XmlMapper XML_MAPPER = new XmlMapper();\n+\n     protected static final YAMLMapper YAML_MAPPER = new YAMLMapper();\n \n     protected static final String ADMIN_UNAME = \"admin\";\n@@ -902,7 +905,7 @@ protected static AccessPolicyTO buildAccessPolicyTO() {\n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n         conf.setEnabled(true);\n         conf.setName(\"TestAccessPolicyConf\");\n-        conf.getRequiredAttrs().put(\"cn\", Set.of(\"admin\", \"Admin\", \"TheAdmin\"));\n+        conf.addRequiredAttr(\"cn\", Set.of(\"admin\", \"Admin\", \"TheAdmin\"));\n         policy.setConf(conf);\n \n         return policy;"},{"sha":"097918ebd4524391d6d584d5b5e5dee1cfeda3ce","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/BatchITCase.java","status":"modified","additions":10,"deletions":21,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -28,7 +28,6 @@\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.StringWriter;\n import java.net.URI;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n@@ -39,10 +38,6 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import javax.xml.bind.JAXBContext;\n-import javax.xml.bind.JAXBException;\n-import javax.xml.bind.Marshaller;\n-import javax.xml.bind.Unmarshaller;\n import org.apache.commons.io.IOUtils;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -69,7 +64,7 @@\n \n public class BatchITCase extends AbstractITCase {\n \n-    private static String requestBody(final String boundary) throws JsonProcessingException, JAXBException {\n+    private static String requestBody(final String boundary) throws JsonProcessingException {\n         List<BatchRequestItem> reqItems = new ArrayList<>();\n \n         // 1. create user as YAML\n@@ -89,11 +84,7 @@ private static String requestBody(final String boundary) throws JsonProcessingEx\n \n         // 2. create group as XML\n         GroupCR groupCR = GroupITCase.getBasicSample(\"batch\");\n-        JAXBContext context = JAXBContext.newInstance(GroupCR.class);\n-        Marshaller marshaller = context.createMarshaller();\n-        StringWriter writer = new StringWriter();\n-        marshaller.marshal(groupCR, writer);\n-        String createGroupPayload = writer.toString();\n+        String createGroupPayload = XML_MAPPER.writeValueAsString(groupCR);\n \n         BatchRequestItem createGroup = new BatchRequestItem();\n         createGroup.setMethod(HttpMethod.POST);\n@@ -146,7 +137,7 @@ private static String requestBody(final String boundary) throws JsonProcessingEx\n         return body;\n     }\n \n-    private static void check(final List<BatchResponseItem> resItems) throws IOException, JAXBException {\n+    private static void check(final List<BatchResponseItem> resItems) throws IOException {\n         assertEquals(6, resItems.size());\n \n         assertEquals(Response.Status.CREATED.getStatusCode(), resItems.get(0).getStatus());\n@@ -167,11 +158,9 @@ private static void check(final List<BatchResponseItem> resItems) throws IOExcep\n         assertNotNull(resItems.get(1).getHeaders().get(RESTHeaders.RESOURCE_KEY));\n         assertEquals(MediaType.APPLICATION_XML, resItems.get(1).getHeaders().get(HttpHeaders.CONTENT_TYPE).get(0));\n \n-        JAXBContext context = JAXBContext.newInstance(ProvisioningResult.class, GroupCR.class);\n-        Unmarshaller unmarshaller = context.createUnmarshaller();\n-        @SuppressWarnings(\"unchecked\")\n-        ProvisioningResult<GroupTO> group = (ProvisioningResult<GroupTO>) unmarshaller.unmarshal(\n-                IOUtils.toInputStream(resItems.get(1).getContent(), StandardCharsets.UTF_8));\n+        ProvisioningResult<GroupTO> group = XML_MAPPER.readValue(\n+                resItems.get(1).getContent(), new TypeReference<ProvisioningResult<GroupTO>>() {\n+        });\n         assertNotNull(group.getEntity().getKey());\n \n         assertEquals(Response.Status.NO_CONTENT.getStatusCode(), resItems.get(2).getStatus());\n@@ -198,7 +187,7 @@ private static void check(final List<BatchResponseItem> resItems) throws IOExcep\n     }\n \n     @Test\n-    public void webClientSync() throws IOException, JAXBException {\n+    public void webClientSync() throws IOException {\n         String boundary = \"--batch_\" + UUID.randomUUID().toString();\n \n         Response response = WebClient.create(ADDRESS).path(\"batch\").\n@@ -219,7 +208,7 @@ public void webClientSync() throws IOException, JAXBException {\n     }\n \n     @Test\n-    public void webClientAsync() throws IOException, JAXBException {\n+    public void webClientAsync() throws IOException {\n         String boundary = \"--batch_\" + UUID.randomUUID().toString();\n \n         // request async processing\n@@ -311,7 +300,7 @@ private static BatchRequest batchRequest() {\n     }\n \n     @Test\n-    public void syncopeClientSync() throws IOException, JAXBException {\n+    public void syncopeClientSync() throws IOException {\n         BatchResponse batchResponse = batchRequest().commit();\n \n         Response response = batchResponse.getResponse();\n@@ -322,7 +311,7 @@ public void syncopeClientSync() throws IOException, JAXBException {\n     }\n \n     @Test\n-    public void syncopeClientAsync() throws IOException, JAXBException {\n+    public void syncopeClientAsync() throws IOException {\n         // request async processing\n         BatchResponse batchResponse = batchRequest().commit(true);\n "},{"sha":"493f0293fafe0865f0f2b5ec93828176325ca4d6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GoogleMfaAuthTokenITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGoogleMfaAuthTokenITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGoogleMfaAuthTokenITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGoogleMfaAuthTokenITCase.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -78,8 +78,8 @@ public void create() {\n     public void count() {\n         GoogleMfaAuthToken token = createGoogleMfaAuthToken();\n         googleMfaAuthTokenService.save(token);\n-        assertEquals(1, googleMfaAuthTokenService.countTokens());\n-        assertEquals(1, googleMfaAuthTokenService.countTokensForOwner(token.getOwner()));\n+        assertEquals(1, googleMfaAuthTokenService.countTokens().getTotalCount());\n+        assertEquals(1, googleMfaAuthTokenService.findTokensFor(token.getOwner()).getTotalCount());\n     }\n \n     @Test\n@@ -104,7 +104,7 @@ public void deleteByToken() {\n         assertNotNull(key);\n         response = googleMfaAuthTokenService.deleteToken(token.getToken());\n         assertEquals(response.getStatusInfo().getStatusCode(), Response.Status.NO_CONTENT.getStatusCode());\n-        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).isEmpty());\n+        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).getResult().isEmpty());\n     }\n \n     @Test\n@@ -115,7 +115,7 @@ public void deleteByOwner() {\n         assertNotNull(key);\n         response = googleMfaAuthTokenService.deleteTokensFor(token.getOwner());\n         assertEquals(response.getStatusInfo().getStatusCode(), Response.Status.NO_CONTENT.getStatusCode());\n-        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).isEmpty());\n+        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).getResult().isEmpty());\n     }\n \n     @Test\n@@ -126,16 +126,16 @@ public void deleteByOwnerAndToken() {\n         assertNotNull(key);\n         response = googleMfaAuthTokenService.deleteToken(token.getOwner(), token.getToken());\n         assertEquals(response.getStatusInfo().getStatusCode(), Response.Status.NO_CONTENT.getStatusCode());\n-        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).isEmpty());\n+        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).getResult().isEmpty());\n     }\n \n     @Test\n     public void deleteByDate() {\n         Date dateTime = Date.from(LocalDateTime.now().minusDays(1).atZone(ZoneId.systemDefault()).toInstant());\n         GoogleMfaAuthToken token = createGoogleMfaAuthToken();\n-        final Response response = googleMfaAuthTokenService.deleteTokensByDate(dateTime);\n+        Response response = googleMfaAuthTokenService.deleteTokensByDate(dateTime);\n         assertEquals(response.getStatusInfo().getStatusCode(), Response.Status.NO_CONTENT.getStatusCode());\n-        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).isEmpty());\n-        assertEquals(0, googleMfaAuthTokenService.countTokensForOwner(token.getOwner()));\n+        assertTrue(googleMfaAuthTokenService.findTokensFor(token.getOwner()).getResult().isEmpty());\n+        assertEquals(0, googleMfaAuthTokenService.findTokensFor(token.getOwner()).getTotalCount());\n     }\n }"},{"sha":"45edfbfb182435bb1ca2d755ae03fd46dd9e9d3e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae9f6c8cfd6603d34860811833b6b043b3143f46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=ae9f6c8cfd6603d34860811833b6b043b3143f46","patch":"@@ -59,7 +59,7 @@\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n \n public class PolicyITCase extends AbstractITCase {\n- \n+\n     private PullPolicyTO buildPullPolicyTO() throws IOException {\n         ImplementationTO corrRule = null;\n         try {\n@@ -247,13 +247,12 @@ public void updateAuthPolicy() {\n \n     @Test\n     public void updateAccessPolicy() {\n-        AccessPolicyTO newAccessPolicyTO = buildAccessPolicyTO();\n-        newAccessPolicyTO = createPolicy(PolicyType.ACCESS, newAccessPolicyTO);\n+        AccessPolicyTO newAccessPolicyTO = createPolicy(PolicyType.ACCESS, buildAccessPolicyTO());\n         assertNotNull(newAccessPolicyTO);\n \n         DefaultAccessPolicyConf accessPolicyConf = (DefaultAccessPolicyConf) newAccessPolicyTO.getConf();\n-        accessPolicyConf.getRequiredAttrs().put(\"ou\", Set.of(\"test\"));\n-        accessPolicyConf.getRequiredAttrs().put(\"cn\", Set.of(\"admin\", \"Admin\"));\n+        accessPolicyConf.addRequiredAttr(\"ou\", Set.of(\"test\"));\n+        accessPolicyConf.addRequiredAttr(\"cn\", Set.of(\"admin\", \"Admin\"));\n \n         // update new authentication policy\n         policyService.update(PolicyType.ACCESS, newAccessPolicyTO);\n@@ -319,9 +318,7 @@ public void delete() throws IOException {\n             assertNotNull(e);\n         }\n \n-        AccessPolicyTO accessPolicy = buildAccessPolicyTO();\n-\n-        AccessPolicyTO accessPolicyTO = createPolicy(PolicyType.ACCESS, accessPolicy);\n+        AccessPolicyTO accessPolicyTO = createPolicy(PolicyType.ACCESS, buildAccessPolicyTO());\n         assertNotNull(accessPolicyTO);\n \n         policyService.delete(PolicyType.ACCESS, accessPolicyTO.getKey());"}]}