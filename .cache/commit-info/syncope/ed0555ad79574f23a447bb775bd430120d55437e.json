{"sha":"ed0555ad79574f23a447bb775bd430120d55437e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkMDU1NWFkNzk1NzRmMjNhNDQ3YmI3NzViZDQzMDEyMGQ1NTQzN2U=","commit":{"author":{"name":"skylark17","email":"skylark17@apache.org","date":"2019-12-11T09:00:43Z"},"committer":{"name":"skylark17","email":"skylark17@apache.org","date":"2019-12-11T09:00:43Z"},"message":"[SYNCOPE-957] Added missing sections for reconciliation process","tree":{"sha":"135003011f527b009b5caefede832316a9f0bca9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/135003011f527b009b5caefede832316a9f0bca9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ed0555ad79574f23a447bb775bd430120d55437e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed0555ad79574f23a447bb775bd430120d55437e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ed0555ad79574f23a447bb775bd430120d55437e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed0555ad79574f23a447bb775bd430120d55437e/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"94462a6e1d6c7f784a73e091c451a3e5ce6e15c4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/94462a6e1d6c7f784a73e091c451a3e5ce6e15c4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/94462a6e1d6c7f784a73e091c451a3e5ce6e15c4"}],"stats":{"total":349,"additions":262,"deletions":87},"files":[{"sha":"29828490f15891d597016da99df64c4a60603d91","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.panels.LinkedAccountModalPanel;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n@@ -44,7 +45,7 @@\n \n     @Override\n     public List<Action<UserTO>> get(\n-            final UserTO modelObject,\n+            final IModel<UserTO> model,\n             final String realm,\n             final BaseModal<AnyWrapper<UserTO>> modal,\n             final String header,\n@@ -59,7 +60,7 @@ public List<Action<UserTO>> get(\n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(modelObject));\n+                        new AnyWrapper<>(model.getObject()));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n@@ -76,7 +77,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         }, ActionLink.ActionType.ENABLE);\n         enable.setEntitlements(IdRepoEntitlement.USER_UPDATE);\n         enable.setOnConfirm(false);\n-        enable.setRealms(realm, modelObject.getDynRealms());\n+        enable.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(enable);\n \n         Action<UserTO> manageResources = new Action<>(new ActionLink<UserTO>() {\n@@ -85,8 +86,9 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                model.setObject(new UserRestClient().read(model.getObject().getKey()));\n                 IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(modelObject));\n+                        new AnyWrapper<>(model.getObject()));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n@@ -104,7 +106,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         manageResources.setEntitlements(\n                 String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE));\n         manageResources.setOnConfirm(false);\n-        manageResources.setRealms(realm, modelObject.getDynRealms());\n+        manageResources.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(manageResources);\n \n         Action<UserTO> manageAccounts = new Action<>(new ActionLink<UserTO>() {\n@@ -113,8 +115,9 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                model.setObject(new UserRestClient().read(model.getObject().getKey()));\n                 modal.setFooterVisible(false);\n-                target.add(modal.setContent(new LinkedAccountModalPanel(modal, modelObject, pageRef)));\n+                target.add(modal.setContent(new LinkedAccountModalPanel(modal, model, pageRef, false)));\n \n                 modal.header(new Model<>(header));\n \n@@ -124,7 +127,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         manageAccounts.setEntitlements(\n                 String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE));\n         manageAccounts.setOnConfirm(false);\n-        manageAccounts.setRealms(realm, modelObject.getDynRealms());\n+        manageAccounts.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(manageAccounts);\n \n         return actions;"},{"sha":"899bda5645ca4738be8a29a5554605454be0eeee","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":132,"deletions":46,"changes":178,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -18,7 +18,8 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.io.Serializable;\n+import static org.apache.syncope.client.console.panels.DirectoryPanel.LOG;\n+\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -27,28 +28,35 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.status.ReconStatusPanel;\n+import org.apache.syncope.client.console.status.ReconTaskPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.LinkedAccountWizardBuilder;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.LinkedAccountUR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class LinkedAccountModalPanel extends AbstractModalPanel<Serializable> {\n+public class LinkedAccountModalPanel extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = -4603032036433309900L;\n \n@@ -66,20 +74,22 @@ public class LinkedAccountModalPanel extends AbstractModalPanel<Serializable> {\n \n     @SuppressWarnings(\"unchecked\")\n     public LinkedAccountModalPanel(\n-            final BaseModal<?> modal,\n-            final UserTO userTO,\n-            final PageReference pageRef) {\n+            final BaseModal<?> baseModal,\n+            final IModel<UserTO> model,\n+            final PageReference pageRef,\n+            final boolean recounciliationOnly) {\n \n-        super((BaseModal<Serializable>) modal, pageRef);\n+        super(BaseModal.getContentId(), model);\n \n-        UserTO readUserTO = userRestClient.read(userTO.getKey());\n+        final MultilevelPanel mlp = new MultilevelPanel(\"mlpContainer\");\n+        mlp.setOutputMarkupId(true);\n \n         setOutputMarkupId(true);\n \n         actionTogglePanel = new ActionLinksTogglePanel<>(\"toggle\", pageRef);\n         add(actionTogglePanel);\n \n-        wizard = new LinkedAccountWizardBuilder(readUserTO.getKey(), pageRef);\n+        wizard = new LinkedAccountWizardBuilder(model, pageRef);\n \n         final ListViewPanel.Builder<LinkedAccountTO> builder = new ListViewPanel.Builder<LinkedAccountTO>(\n                 LinkedAccountTO.class, pageRef) {\n@@ -116,7 +126,7 @@ protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n                 checkAddButton();\n \n                 linkedAccountTOs.clear();\n-                linkedAccountTOs.addAll(userRestClient.read(userTO.getKey()).getLinkedAccounts());\n+                linkedAccountTOs.addAll(model.getObject().getLinkedAccounts());\n                 sortLinkedAccounts();\n \n                 ListViewPanel.class.cast(list).refreshList(linkedAccountTOs);\n@@ -131,7 +141,7 @@ protected ActionLinksTogglePanel<LinkedAccountTO> getTogglePanel() {\n             }\n         };\n \n-        linkedAccountTOs = new ArrayList<>(readUserTO.getLinkedAccounts());\n+        linkedAccountTOs = new ArrayList<>(model.getObject().getLinkedAccounts());\n         sortLinkedAccounts();\n \n         builder.setItems(linkedAccountTOs);\n@@ -145,56 +155,131 @@ protected ActionLinksTogglePanel<LinkedAccountTO> getTogglePanel() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n-                try {\n-                    send(LinkedAccountModalPanel.this, Broadcast.DEPTH,\n-                            new AjaxWizard.NewItemActionEvent<>(linkedAccountTO, 1, target).setResourceModel(\n-                                    new StringResourceModel(\"inner.edit.linkedAccount\",\n-                                            LinkedAccountModalPanel.this,\n-                                            Model.of(linkedAccountTO))));\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While contacting linked account\", e);\n-                    SyncopeConsoleSession.get().error(\n-                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n-                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                mlp.next(linkedAccountTO.getResource(),\n+                        new ReconStatusPanel(\n+                                linkedAccountTO.getResource(),\n+                                model.getObject().getType(),\n+                                model.getObject().getKey()),\n+                        target);\n+                target.add(mlp);\n+\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+            }\n+        }, ActionLink.ActionType.VIEW, IdRepoEntitlement.USER_READ);\n+\n+        if (!recounciliationOnly) {\n+            builder.addAction(new ActionLink<LinkedAccountTO>() {\n+\n+                private static final long serialVersionUID = 2555747430358755813L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                    try {\n+                        send(LinkedAccountModalPanel.this, Broadcast.DEPTH,\n+                                new AjaxWizard.NewItemActionEvent<>(linkedAccountTO, 1, target).\n+                                        setResourceModel(new StringResourceModel(\"inner.edit.linkedAccount\",\n+                                                LinkedAccountModalPanel.this,\n+                                                Model.of(linkedAccountTO))));\n+\n+                    } catch (SyncopeClientException e) {\n+                        LOG.error(\"While contacting linked account\", e);\n+                        SyncopeConsoleSession.get().error(\n+                                StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+\n+                    send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                            new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n                 }\n+            }, ActionLink.ActionType.EDIT, IdRepoEntitlement.USER_READ);\n+        }\n+\n+        builder.addAction(new ActionLink<LinkedAccountTO>() {\n \n+            private static final long serialVersionUID = 2555747430358755813L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                mlp.next(\"PUSH \" + linkedAccountTO.getResource(),\n+                        new ReconTaskPanel(\n+                                linkedAccountTO.getResource(),\n+                                new PushTaskTO(),\n+                                model.getObject().getType(),\n+                                null,\n+                                linkedAccountTO.getConnObjectKeyValue(),\n+                                true,\n+                                mlp,\n+                                pageRef),\n+                        target);\n+                target.add(mlp);\n+\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n                         new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n             }\n-        }, ActionLink.ActionType.EDIT, IdRepoEntitlement.USER_READ).\n+        }, ActionLink.ActionType.RECONCILIATION_PUSH, IdRepoEntitlement.USER_READ).\n                 addAction(new ActionLink<LinkedAccountTO>() {\n \n                     private static final long serialVersionUID = 2555747430358755813L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n-                        try {\n-                            LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().\n-                                    operation(PatchOperation.DELETE).\n-                                    linkedAccountTO(linkedAccountTO).build();\n-                            linkedAccountPatch.setLinkedAccountTO(linkedAccountTO);\n-                            UserUR patch = new UserUR();\n-                            patch.setKey(readUserTO.getKey());\n-                            patch.getLinkedAccounts().add(linkedAccountPatch);\n-                            userRestClient.update(userRestClient.read(userTO.getKey()).getETagValue(), patch);\n-                            linkedAccountTOs.remove(linkedAccountTO);\n-\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (Exception e) {\n-                            LOG.error(\"While removing linked account {}\", linkedAccountTO.getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                    ? e.getClass().getName() : e.getMessage());\n-                        }\n-\n-                        checkAddButton();\n+                        mlp.next(\"PULL \" + linkedAccountTO.getResource(),\n+                                new ReconTaskPanel(\n+                                        linkedAccountTO.getResource(),\n+                                        new PullTaskTO(),\n+                                        model.getObject().getType(),\n+                                        null,\n+                                        linkedAccountTO.getConnObjectKeyValue(),\n+                                        true,\n+                                        mlp,\n+                                        pageRef),\n+                                target);\n+                        target.add(mlp);\n+\n                         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                        send(LinkedAccountModalPanel.this, Broadcast.DEPTH, new ListViewPanel.ListViewReload<>(target));\n+                        send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                                new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                    }\n+                }, ActionLink.ActionType.RECONCILIATION_PULL, IdRepoEntitlement.USER_READ);\n+\n+        if (!recounciliationOnly) {\n+            builder.addAction(new ActionLink<LinkedAccountTO>() {\n+\n+                private static final long serialVersionUID = 2555747430358755813L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                    try {\n+                        LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().\n+                                operation(PatchOperation.DELETE).\n+                                linkedAccountTO(linkedAccountTO).build();\n+                        linkedAccountPatch.setLinkedAccountTO(linkedAccountTO);\n+                        UserUR patch = new UserUR();\n+                        patch.setKey(model.getObject().getKey());\n+                        patch.getLinkedAccounts().add(linkedAccountPatch);\n+                        model.setObject(userRestClient.update(model.getObject().getETagValue(), patch).getEntity());\n+                        linkedAccountTOs.remove(linkedAccountTO);\n+\n+                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    } catch (Exception e) {\n+                        LOG.error(\"While removing linked account {}\", linkedAccountTO.getKey(), e);\n+                        SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                ? e.getClass().getName() : e.getMessage());\n                     }\n-                }, ActionLink.ActionType.DELETE, IdRepoEntitlement.USER_UPDATE, true);\n+\n+                    checkAddButton();\n+                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    send(LinkedAccountModalPanel.this, Broadcast.DEPTH, new ListViewPanel.ListViewReload<>(target));\n+                }\n+            }, ActionLink.ActionType.DELETE, IdRepoEntitlement.USER_UPDATE, true);\n+        }\n \n         builder.addNewItemPanelBuilder(wizard);\n \n-        list = builder.build(\"linkedAccountsList\");\n+        list = builder.build(MultilevelPanel.FIRST_LEVEL_ID);\n         list.setOutputMarkupId(true);\n         list.setReadOnly(!SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_UPDATE));\n \n@@ -213,8 +298,9 @@ public void onClick(final AjaxRequestTarget target) {\n                                 LinkedAccountModalPanel.this)));\n             }\n         };\n-        list.addOrReplaceInnerObject(addAjaxLink);\n-        add(list);\n+        list.addOrReplaceInnerObject(addAjaxLink.setEnabled(!recounciliationOnly).setVisible(!recounciliationOnly));\n+\n+        add(mlp.setFirstLevel(list));\n     }\n \n     private void sortLinkedAccounts() {"},{"sha":"ea4fc85aa5da441f19e8f62a35637e0f9c2e4b7d","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountsStatusModalPanel.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.model.IModel;\n+\n+public class LinkedAccountsStatusModalPanel extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = 8804361394735366181L;\n+\n+    public LinkedAccountsStatusModalPanel(\n+            final BaseModal<?> baseModal,\n+            final IModel<UserTO> model,\n+            final PageReference pageRef) {\n+\n+        super(MultilevelPanel.SECOND_LEVEL_ID);\n+\n+        add(new LinkedAccountModalPanel(baseModal, model, pageRef, true).setOutputMarkupId(true));\n+    }\n+}"},{"sha":"651b2c48f55658647a5e5d1481406c42a7fb1fb6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n+import org.apache.syncope.client.console.panels.LinkedAccountsStatusModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n@@ -63,6 +64,7 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n \n public class AnyStatusDirectoryPanel\n@@ -244,6 +246,33 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n             }, ActionLink.ActionType.RECONCILIATION_PULL, IdRepoEntitlement.TASK_EXECUTE);\n         }\n \n+        if (anyTO instanceof UserTO && !UserTO.class.cast(anyTO).getLinkedAccounts().isEmpty()) {\n+            UserTO userTO = UserTO.class.cast(anyTO);\n+\n+            if (!userTO.getLinkedAccounts().isEmpty()\n+                    && userTO.getLinkedAccounts().stream().anyMatch(linkedAccountTO -> {\n+                        return linkedAccountTO.getResource().equals(model.getObject().getResource());\n+                    })) {\n+\n+                panel.add(new ActionLink<StatusBean>() {\n+\n+                    private static final long serialVersionUID = 5168094747477174155L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n+                        multiLevelPanelRef.next(\"ACCOUNTS\",\n+                                new LinkedAccountsStatusModalPanel(\n+                                        baseModal, Model.of(UserTO.class.cast(anyTO)), pageRef),\n+                                target);\n+                        target.add(multiLevelPanelRef);\n+                        AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_ACCOUNTS,\n+                        String.format(\"%s,%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE,\n+                                IdMEntitlement.RESOURCE_GET_CONNOBJECT));\n+            }\n+        }\n+\n         return panel;\n     }\n "},{"sha":"520555ec4274c8f1cae271dd83c91bc2aaeabbe7","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ReconTaskPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -187,7 +187,9 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 } catch (Exception e) {\n                     LOG.error(\"While attempting reconciliation on {}\", reconQuery, form.getModelObject(), e);\n                     SyncopeConsoleSession.get().error(resource + \": \"\n-                            + (StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage()));\n+                            + (StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName()\n+                            : StringUtils.abbreviate(StringUtils.normalizeSpace(e.getMessage()), 280)));\n                 }\n                 multiLevelPanelRef.prev(target);\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);"},{"sha":"4e75d183adde41161be48d02c34a0d9ef4e42478","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel.java","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -18,11 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -49,6 +46,7 @@\n import org.apache.wicket.util.time.Duration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import java.util.concurrent.atomic.AtomicReference;\n \n public class LinkedAccountDetailsPanel extends WizardStep {\n \n@@ -60,7 +58,7 @@ public class LinkedAccountDetailsPanel extends WizardStep {\n \n     private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n \n-    private ArrayList<String> connObjectKeyFieldValues;\n+    private List<String> connObjectKeyFieldValues;\n \n     public LinkedAccountDetailsPanel(final LinkedAccountTO linkedAccountTO) {\n         super();\n@@ -157,31 +155,27 @@ private void setConnObjectFieldChoices(\n             final String resource,\n             final String searchTerm) {\n \n-        Set<String> choices = new HashSet<>();\n-        String resourceRemoteKey = ConnIdSpecialName.NAME;\n+        AtomicReference<String> resourceRemoteKey = new AtomicReference<>(ConnIdSpecialName.NAME);\n         try {\n-            resourceRemoteKey = resourceRestClient.read(resource).getProvision(AnyTypeKind.USER.name()).get().\n-                    getMapping().getConnObjectKeyItem().getExtAttrName();\n+            resourceRemoteKey.set(resourceRestClient.read(resource).getProvision(AnyTypeKind.USER.name()).get().\n+                    getMapping().getConnObjectKeyItem().getExtAttrName());\n         } catch (Exception ex) {\n             LOG.error(\"While reading mapping for resource {}\", resource, ex);\n         }\n \n         ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().size(SEARCH_SIZE);\n         if (StringUtils.isNotBlank(searchTerm)) {\n             builder.fiql(SyncopeClient.getConnObjectTOFiqlSearchConditionBuilder().\n-                    is(resourceRemoteKey).equalTo(searchTerm + \"*\").query()).build();\n+                    is(resourceRemoteKey.get()).equalTo(searchTerm + \"*\").query()).build();\n         }\n         Pair<String, List<ConnObjectTO>> items = resourceRestClient.searchConnObjects(resource,\n                 AnyTypeKind.USER.name(),\n                 builder,\n-                new SortParam<>(resourceRemoteKey, true));\n+                new SortParam<>(resourceRemoteKey.get(), true));\n \n-        choices.addAll(items.getRight().stream().map(item -> {\n-            return item.getAttr(ConnIdSpecialName.UID).get().getValues().get(0);\n-        }).collect(Collectors.toSet()));\n-\n-        connObjectKeyFieldValues = new ArrayList<>(choices);\n-        Collections.sort(connObjectKeyFieldValues);\n+        connObjectKeyFieldValues = items.getRight().stream().\n+                map(item -> item.getAttr(resourceRemoteKey.get()).get().getValues().get(0)).\n+                collect(Collectors.toList());\n         ajaxTextFieldPanel.setChoices(connObjectKeyFieldValues);\n     }\n "},{"sha":"ae5076d8ae42d2c63b20602b16a08db9e79f0405","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountWizardBuilder.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -35,6 +35,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.IModel;\n \n /**\n  * Accounts wizard builder.\n@@ -45,27 +46,23 @@ public class LinkedAccountWizardBuilder extends BaseAjaxWizardBuilder<LinkedAcco\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n-    private UserTO userTO;\n+    private final IModel<UserTO> model;\n \n-    private final String userKey;\n-\n-    public LinkedAccountWizardBuilder(final String userKey, final PageReference pageRef) {\n+    public LinkedAccountWizardBuilder(final IModel<UserTO> model, final PageReference pageRef) {\n         super(new LinkedAccountTO(), pageRef);\n-        this.userKey = userKey;\n-        this.userTO = userRestClient.read(userKey);\n+        this.model = model;\n     }\n \n     @Override\n     public AjaxWizard<LinkedAccountTO> build(final String id, final AjaxWizard.Mode mode) {\n-        this.userTO = userRestClient.read(userKey);\n         return super.build(id, mode);\n     }\n \n     @Override\n     protected WizardModel buildModelSteps(final LinkedAccountTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new LinkedAccountDetailsPanel(modelObject));\n         wizardModel.add(new LinkedAccountCredentialsPanel(modelObject));\n-        wizardModel.add(new LinkedAccountPlainAttrsPanel(new EntityWrapper<>(modelObject), userTO));\n+        wizardModel.add(new LinkedAccountPlainAttrsPanel(new EntityWrapper<>(modelObject), model.getObject()));\n         wizardModel.add(new LinkedAccountPrivilegesPanel(modelObject));\n         return wizardModel;\n     }\n@@ -77,9 +74,9 @@ protected Serializable onApplyInternal(final LinkedAccountTO modelObject) {\n         LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().linkedAccountTO(modelObject).build();\n         linkedAccountPatch.setLinkedAccountTO(modelObject);\n         UserUR patch = new UserUR();\n-        patch.setKey(userTO.getKey());\n+        patch.setKey(model.getObject().getKey());\n         patch.getLinkedAccounts().add(linkedAccountPatch);\n-        userRestClient.update(userTO.getETagValue(), patch);\n+        model.setObject(userRestClient.update(model.getObject().getETagValue(), patch).getEntity());\n \n         return modelObject;\n     }\n@@ -97,7 +94,7 @@ protected Serializable getCreateCustomPayloadEvent(final Serializable afterObjec\n         LinkedAccountTO linkedAccountTO = LinkedAccountTO.class.cast(afterObject);\n         return new CreateEvent(\n                 linkedAccountTO.getConnObjectKeyValue(),\n-                userTO,\n+                model.getObject(),\n                 target);\n     }\n "},{"sha":"012cf59c00101d7773bf8c087551c271cbd224a8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -27,11 +27,12 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.model.IModel;\n \n public interface AnyDirectoryPanelAditionalActionLinksProvider extends Serializable {\n \n     List<Action<UserTO>> get(\n-            UserTO modelObject,\n+            IModel<UserTO> model,\n             String realm,\n             BaseModal<AnyWrapper<UserTO>> modal,\n             String header,"},{"sha":"03e897ea447b7529d83b12976692c3548c965eae","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAnyDirectoryPanelAditionalActionLinksProvider.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.model.IModel;\n \n public class IdRepoAnyDirectoryPanelAditionalActionLinksProvider\n         implements AnyDirectoryPanelAditionalActionLinksProvider {\n@@ -34,7 +35,7 @@\n \n     @Override\n     public List<Action<UserTO>> get(\n-            final UserTO modelObject,\n+            final IModel<UserTO> model,\n             final String realm,\n             final BaseModal<AnyWrapper<UserTO>> modal,\n             final String header,"},{"sha":"0041eb506fc6677c55924e1216715a6ea07496ca","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -239,7 +239,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n             }\n \n             SyncopeWebApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n-                    model.getObject(),\n+                    model,\n                     realm,\n                     altDefaultModal,\n                     getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject()))),"},{"sha":"aadf84fab55140fb4d6288e92c767b74954d1be3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.html?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <span wicket:id=\"linkedAccountsList\">[linkedAccountsList]</span>\n-    <div wicket:id=\"toggle\"/>\n+    <span wicket:id=\"toggle\"/>\n+    <span wicket:id=\"mlpContainer\">[MlpContainer]</span>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"f6f3a6629a687852ec5b58e9880b19ffdb002a84","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LinkedAccountsStatusModalPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.html?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"content\"></div>\n+  </wicket:panel>\n+</html>"},{"sha":"2c9fd4bf8fb008a5c9fa9c748da48ae27fcf9f20","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed0555ad79574f23a447bb775bd430120d55437e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed0555ad79574f23a447bb775bd430120d55437e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=ed0555ad79574f23a447bb775bd430120d55437e","patch":"@@ -267,7 +267,7 @@ public void push(final ReconQuery query, final PushTaskTO pushTask) {\n                                         match.getLinkedAccount(),\n                                         pushTask);\n                                 if (result.getStatus() == ProvisioningReport.Status.FAILURE) {\n-                                    sce.getElements().add(results.get(0).getMessage());\n+                                    sce.getElements().add(result.getMessage());\n                                 } else {\n                                     results.add(result);\n                                 }"}]}