{"sha":"323ce79b01ca6e99eaf79084c6c365ae13f99c47","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMyM2NlNzliMDFjYTZlOTllYWY3OTA4NGM2YzM2NWFlMTNmOTljNDc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-03-24T12:20:42Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-03-24T12:20:42Z"},"message":"Various enhancements to Users usability\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246817 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b80cd9e638d6741ea3b9cf8bffbb3a9a0c068bbd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b80cd9e638d6741ea3b9cf8bffbb3a9a0c068bbd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/323ce79b01ca6e99eaf79084c6c365ae13f99c47","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/323ce79b01ca6e99eaf79084c6c365ae13f99c47","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/323ce79b01ca6e99eaf79084c6c365ae13f99c47","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/323ce79b01ca6e99eaf79084c6c365ae13f99c47/comments","author":null,"committer":null,"parents":[{"sha":"c6d4024eafef30512e5c5a5530b979645c98c262","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6d4024eafef30512e5c5a5530b979645c98c262","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6d4024eafef30512e5c5a5530b979645c98c262"}],"stats":{"total":698,"additions":441,"deletions":257},"files":[{"sha":"64c508d7ead316fbf1e0c419fd36ad2d39f21e36","filename":"client/src/main/java/org/syncope/client/search/MembershipCond.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,6 +22,7 @@\n public class MembershipCond extends AbstractBaseBean {\n \n     private Long roleId;\n+\n     private String roleName;\n \n     public MembershipCond() {"},{"sha":"6e85129d112cef0eb570a38977fea0ae8db72f27","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -21,8 +21,6 @@\n @JsonIgnoreProperties({\"displayName\", \"empty\"})\n public class RoleTO extends AbstractAttributableTO {\n \n-    static private final String EMPTY = \"\";\n-\n     private String name;\n \n     private long parent;\n@@ -95,6 +93,20 @@ public String getDisplayName() {\n     }\n \n     public String getEmpty() {\n-        return EMPTY;\n+        return \"\";\n+    }\n+\n+    public static long fromDisplayName(final String displayName) {\n+        long result = 0;\n+        if (displayName != null && !displayName.isEmpty()\n+                && displayName.indexOf(' ') != -1) {\n+\n+            try {\n+                result = Long.valueOf(displayName.split(\" \")[0]);\n+            } catch (NumberFormatException e) {\n+            }\n+        }\n+\n+        return result;\n     }\n }"},{"sha":"254afacbd8ef5afb92cab186ff79400bc6ded81e","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -57,6 +57,10 @@ public final class Constants {\n     public static final String PREF_TASKS_PAGINATOR_ROWS =\n             \"tasks.paginator.rows\";\n \n+    public static final String PAGEPARAM_CREATE = \"CREATE\";\n+\n+    public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n+\n     /* DATE FORMATS FOR TASKS */\n     public static final String ITALIAN_DATE_FORMAT = \"dd/MM/yyyy hh:mm:ss\";\n "},{"sha":"e69495a2981c87e05a6a9e76ad8c2b06369f2a4a","filename":"console/src/main/java/org/syncope/console/commons/SortableDataProviderComparator.java","status":"modified","additions":24,"deletions":13,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -16,37 +16,48 @@\n \n import java.io.Serializable;\n import java.util.Comparator;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n \n public class SortableDataProviderComparator<T> implements\n         Comparator<T>, Serializable {\n \n-    private final SortParam sortParam;\n+    protected final SortableDataProvider<T> provider;\n \n-    public SortableDataProviderComparator(SortParam sortParam) {\n-        this.sortParam = sortParam;\n+    public SortableDataProviderComparator(\n+            final SortableDataProvider<T> provider) {\n+\n+        this.provider = provider;\n     }\n \n-    @Override\n-    public int compare(final T o1, final T o2) {\n-        PropertyModel<Comparable> model1 =\n-                new PropertyModel<Comparable>(o1, sortParam.getProperty());\n-        PropertyModel<Comparable> model2 =\n-                new PropertyModel<Comparable>(o2, sortParam.getProperty());\n+    protected int compare(final IModel<Comparable> model1,\n+            IModel<Comparable> model2) {\n \n         int result;\n+\n         if (model1.getObject() == null && model2.getObject() == null) {\n             result = 0;\n         } else if (model1.getObject() == null) {\n             result = 1;\n         } else if (model2.getObject() == null) {\n             result = -1;\n         } else {\n-            result = ((Comparable) model1.getObject()).compareTo(\n-                    model2.getObject());\n+            result = model1.getObject().compareTo(model2.getObject());\n         }\n \n-        return sortParam.isAscending() ? result : -result;\n+        result = provider.getSort().isAscending() ? result : -result;\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public int compare(final T o1, final T o2) {\n+        IModel<Comparable> model1 = new PropertyModel<Comparable>(\n+                o1, provider.getSort().getProperty());\n+        IModel<Comparable> model2 = new PropertyModel<Comparable>(\n+                o2, provider.getSort().getProperty());\n+\n+        return compare(model1, model2);\n     }\n }"},{"sha":"657e72b2cc08cca75c35d12537f5a93e3c330a73","filename":"console/src/main/java/org/syncope/console/commons/SortableUserProviderComparator.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -0,0 +1,75 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.commons;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.syncope.client.to.UserTO;\n+\n+public class SortableUserProviderComparator\n+        extends SortableDataProviderComparator<UserTO> {\n+\n+    private static final Set<String> inlineProps;\n+\n+    static {\n+        inlineProps = new HashSet<String>();\n+        inlineProps.add(\"id\");\n+        inlineProps.add(\"status\");\n+        inlineProps.add(\"token\");\n+    }\n+\n+    public SortableUserProviderComparator(\n+            final SortableDataProvider<UserTO> provider) {\n+\n+        super(provider);\n+    }\n+\n+    @Override\n+    public int compare(final UserTO o1, final UserTO o2) {\n+        if (inlineProps.contains(provider.getSort().getProperty())) {\n+            return super.compare(o1, o2);\n+        }\n+\n+        return super.compare(new AttrModel(o1.getAttributeMap()),\n+                new AttrModel(o2.getAttributeMap()));\n+    }\n+\n+    private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n+\n+        private final Map<String, List<String>> attrMap;\n+\n+        public AttrModel(final Map<String, List<String>> attrMap) {\n+            super();\n+\n+            this.attrMap = attrMap;\n+        }\n+\n+        @Override\n+        public Comparable getObject() {\n+            Comparable result = null;\n+\n+            List<String> values = attrMap.get(provider.getSort().getProperty());\n+            if (values != null && !values.isEmpty()) {\n+                result = values.iterator().next();\n+            }\n+\n+            return result;\n+        }\n+    }\n+}"},{"sha":"5575f4c188550b35947417e50b083b8eef3ebebf","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -337,8 +337,8 @@ public void setOperationResult(boolean operationResult) {\n         public SyncopeConfProvider() {\n             //Default sorting\n             setSort(\"confKey\", true);\n-            comparator = new SortableDataProviderComparator<ConfigurationTO>(\n-                    getSort());\n+            comparator =\n+                    new SortableDataProviderComparator<ConfigurationTO>(this);\n         }\n \n         @Override"},{"sha":"6be5cd0b4ae543e2dfe275a6d0b23886e2fa094d","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -327,7 +327,7 @@ public ConnectorsProvider() {\n             setSort(\"id\", true);\n             comparator =\n                     new SortableDataProviderComparator<ConnectorInstanceTO>(\n-                    getSort());\n+                    this);\n         }\n \n         @Override"},{"sha":"d3c87965392fbed767a463f224d8a10f59900377","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -281,8 +281,8 @@ class ResourcesProvider extends SortableDataProvider<ResourceTO> {\n         public ResourcesProvider() {\n             //Default sorting\n             setSort(\"name\", true);\n-            comparator = new SortableDataProviderComparator<ResourceTO>(\n-                    getSort());\n+            comparator =\n+                    new SortableDataProviderComparator<ResourceTO>(this);\n         }\n \n         @Override"},{"sha":"b1c0304f6385d13ad55c3d689e5ee34c1649b7de","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":97,"deletions":87,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -36,7 +36,7 @@\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n@@ -46,6 +46,7 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n+import org.syncope.console.pages.DerivedSchemaModalPage.Entity;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -326,28 +327,30 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DerivedSchemaTO> model) {\n \n                 final DerivedSchemaTO schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n \n                         editRoleDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         DerivedSchemaModalPage form =\n                                                 new DerivedSchemaModalPage(\n                                                 Schema.this,\n                                                 editRoleDerivedSchemaWin,\n                                                 schemaTO, false);\n-                                        form.setEntity(\n-                                                DerivedSchemaModalPage.Entity.ROLE);\n+                                        form.setEntity(Entity.ROLE);\n                                         return form;\n                                     }\n                                 });\n@@ -370,9 +373,11 @@ public Page createPage() {\n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"delete\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DerivedSchemaTO> model) {\n \n                 final DerivedSchemaTO schemaTO = model.getObject();\n \n@@ -442,20 +447,23 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SchemaTO> model) {\n \n                 final SchemaTO schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n \n                         editUserSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         SchemaModalPage form =\n                                                 new SchemaModalPage(\n@@ -482,8 +490,8 @@ public Page createPage() {\n             }\n         });\n \n-        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n-                \"delete\"))) {\n+        userColumns.add(new AbstractColumn<SchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n \n             @Override\n             public void populateItem(\n@@ -561,28 +569,29 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DerivedSchemaTO> model) {\n \n                 final DerivedSchemaTO schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n-\n+                    public void onClick(final AjaxRequestTarget target) {\n                         editUserDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         DerivedSchemaModalPage window =\n                                                 new DerivedSchemaModalPage(\n                                                 Schema.this,\n                                                 editUserDerivedSchemaWin,\n                                                 schemaTO, false);\n-                                        window.setEntity(\n-                                                DerivedSchemaModalPage.Entity.USER);\n+                                        window.setEntity(Entity.USER);\n                                         return window;\n                                     }\n                                 });\n@@ -654,7 +663,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                     @Override\n-                    protected void onUpdate(AjaxRequestTarget target) {\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n                         prefMan.set(getWebRequestCycle().getWebRequest(),\n                                 getWebRequestCycle().getWebResponse(),\n                                 Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n@@ -679,20 +688,23 @@ protected void onUpdate(AjaxRequestTarget target) {\n         membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n                 getString(\"name\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SchemaTO> model) {\n \n                 final SchemaTO schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n \n                         editMembershipSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         SchemaModalPage form =\n                                                 new SchemaModalPage(\n@@ -791,19 +803,18 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n \n         columnsMembershipsDer.add(new PropertyColumn(\n-                new Model(getString(\"name\")),\n-                \"name\", \"name\"));\n+                new Model(getString(\"name\")), \"name\", \"name\"));\n \n         columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n-                \"expression\")),\n-                \"expression\", \"expression\"));\n+                \"expression\")), \"expression\", \"expression\"));\n \n         columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n \n             public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+                    final Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DerivedSchemaTO> model) {\n \n                 final DerivedSchemaTO schemaTO = model.getObject();\n \n@@ -815,14 +826,14 @@ public void onClick(AjaxRequestTarget target) {\n                         editMembershipDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         DerivedSchemaModalPage window =\n                                                 new DerivedSchemaModalPage(\n                                                 Schema.this,\n                                                 editMembershipDerivedSchemaWin,\n                                                 schemaTO, false);\n-                                        window.setEntity(\n-                                                DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                                        window.setEntity(Entity.MEMBERSHIP);\n                                         return window;\n                                     }\n                                 });\n@@ -886,7 +897,8 @@ public void onClick(final AjaxRequestTarget target) {\n                 SchemaDerivedType.MembershipDerivedSchema),\n                 membershipDerPageRows);\n \n-        Form membershipDerPaginatorForm = new Form(\"MembershipDerPaginatorForm\");\n+        Form membershipDerPaginatorForm =\n+                new Form(\"MembershipDerPaginatorForm\");\n \n         final DropDownChoice membershipDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n@@ -1054,6 +1066,7 @@ public void onClick(AjaxRequestTarget target) {\n                 createRoleSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n                                 SchemaModalPage form = new SchemaModalPage(\n                                         Schema.this,\n@@ -1080,11 +1093,12 @@ public Page createPage() {\n                 \"createRoleDerivedSchemaWinLink\") {\n \n             @Override\n-            public void onClick(AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n                 createRoleDerivedSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n                                 DerivedSchemaModalPage form =\n                                         new DerivedSchemaModalPage(\n@@ -1112,7 +1126,7 @@ public Page createPage() {\n                 \"createUserSchemaWinLink\") {\n \n             @Override\n-            public void onClick(AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n                 createUserSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n@@ -1142,20 +1156,20 @@ public Page createPage() {\n                 \"createUserDerSchemaWinLink\") {\n \n             @Override\n-            public void onClick(AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n                 createUserDerivedSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n                                 DerivedSchemaModalPage form =\n                                         new DerivedSchemaModalPage(\n                                         Schema.this,\n                                         new ModalWindow(\n                                         \"createUserDerSchemaModalWin\"),\n                                         null, true);\n-                                form.setEntity(\n-                                        DerivedSchemaModalPage.Entity.USER);\n+                                form.setEntity(Entity.USER);\n \n                                 return form;\n                             }\n@@ -1175,11 +1189,12 @@ public Page createPage() {\n                 \"createMembershipSchemaWinLink\") {\n \n             @Override\n-            public void onClick(AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n                 createMembershipSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n                                 SchemaModalPage form = new SchemaModalPage(\n                                         Schema.this,\n@@ -1206,20 +1221,20 @@ public Page createPage() {\n                 \"createMembershipDerSchemaWinLink\") {\n \n             @Override\n-            public void onClick(AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n                 createMembershipDerivedSchemaWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n                                 DerivedSchemaModalPage form =\n                                         new DerivedSchemaModalPage(\n                                         Schema.this,\n                                         new ModalWindow(\n                                         \"createMembershipDerivedSchemaWin\"),\n                                         null, true);\n-                                form.setEntity(\n-                                        DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                                form.setEntity(Entity.MEMBERSHIP);\n \n                                 return form;\n                             }\n@@ -1241,13 +1256,14 @@ public Page createPage() {\n      * @param window\n      * @param container\n      */\n-    public void setWindowClosedCallback(ModalWindow window,\n+    public void setWindowClosedCallback(final ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n-                    public void onClose(AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n                         target.addComponent(container);\n                         if (operationResult) {\n                             info(getString(\"operation_succeded\"));\n@@ -1258,32 +1274,29 @@ public void onClose(AjaxRequestTarget target) {\n                 });\n     }\n \n-    public boolean isOperationResult() {\n-        return operationResult;\n-    }\n-\n     public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n \n-    class SchemaProvider extends SortableDataProvider<SchemaTO> {\n+    private class SchemaProvider extends SortableDataProvider<SchemaTO> {\n \n-        private SortableDataProviderComparator<SchemaTO> comparator;\n+        private final SortableDataProviderComparator<SchemaTO> comparator;\n \n-        private SchemaType schema;\n+        private final SchemaType schemaType;\n \n-        public SchemaProvider(final SchemaType schema) {\n-            this.schema = schema;\n+        public SchemaProvider(final SchemaType schemaType) {\n+            super();\n+            this.schemaType = schemaType;\n \n             //Default sorting\n             setSort(\"name\", true);\n-            comparator = new SortableDataProviderComparator<SchemaTO>(\n-                    getSort());\n+\n+            comparator = new SortableDataProviderComparator<SchemaTO>(this);\n         }\n \n         @Override\n-        public Iterator<SchemaTO> iterator(int first, int count) {\n-            List<SchemaTO> list = getAttributesSchemaListDB();\n+        public Iterator<SchemaTO> iterator(final int first, final int count) {\n+            List<SchemaTO> list = getSchemaDB();\n \n             Collections.sort(list, comparator);\n \n@@ -1292,54 +1305,57 @@ public Iterator<SchemaTO> iterator(int first, int count) {\n \n         @Override\n         public int size() {\n-            return getAttributesSchemaListDB().size();\n+            return getSchemaDB().size();\n         }\n \n         @Override\n-        public IModel<SchemaTO> model(final SchemaTO user) {\n-            return new AbstractReadOnlyModel<SchemaTO>() {\n-\n-                @Override\n-                public SchemaTO getObject() {\n-                    return user;\n-                }\n-            };\n+        public IModel<SchemaTO> model(final SchemaTO object) {\n+            return new CompoundPropertyModel<SchemaTO>(object);\n         }\n \n-        public List<SchemaTO> getAttributesSchemaListDB() {\n+        private List<SchemaTO> getSchemaDB() {\n+            List<SchemaTO> list;\n+            switch (schemaType) {\n+                case UserSchema:\n+                    list = restClient.getAllUserSchemas();\n+                    break;\n+\n+                case RoleSchema:\n+                    list = restClient.getAllRoleSchemas();\n+                    break;\n \n-            List<SchemaTO> list = null;\n+                case MembershipSchema:\n+                    list = restClient.getAllMemberhipSchemas();\n+                    break;\n \n-            if (schema == SchemaType.RoleSchema) {\n-                list = restClient.getAllRoleSchemas();\n-            } else if (schema == SchemaType.UserSchema) {\n-                list = restClient.getAllUserSchemas();\n-            } else if (schema == SchemaType.MembershipSchema) {\n-                list = restClient.getAllMemberhipSchemas();\n+                default:\n+                    list = Collections.EMPTY_LIST;\n             }\n \n             return list;\n         }\n     }\n \n-    class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n+    private class DerivedSchemaProvider\n+            extends SortableDataProvider<DerivedSchemaTO> {\n \n         private SortableDataProviderComparator<DerivedSchemaTO> comparator;\n \n         private SchemaDerivedType schema;\n \n         public DerivedSchemaProvider(final SchemaDerivedType schema) {\n+            super();\n             this.schema = schema;\n \n             //Default sorting\n             setSort(\"name\", true);\n-            comparator = new SortableDataProviderComparator<DerivedSchemaTO>(\n-                    getSort());\n+            comparator =\n+                    new SortableDataProviderComparator<DerivedSchemaTO>(this);\n         }\n \n         @Override\n         public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n-            List<DerivedSchemaTO> list = getAttributesSchemaListDB();\n+            List<DerivedSchemaTO> list = getDerivedSchemaDB();\n \n             Collections.sort(list, comparator);\n \n@@ -1348,21 +1364,15 @@ public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n \n         @Override\n         public int size() {\n-            return getAttributesSchemaListDB().size();\n+            return getDerivedSchemaDB().size();\n         }\n \n         @Override\n-        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO schema) {\n-            return new AbstractReadOnlyModel<DerivedSchemaTO>() {\n-\n-                @Override\n-                public DerivedSchemaTO getObject() {\n-                    return schema;\n-                }\n-            };\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO object) {\n+            return new CompoundPropertyModel<DerivedSchemaTO>(object);\n         }\n \n-        public List<DerivedSchemaTO> getAttributesSchemaListDB() {\n+        private List<DerivedSchemaTO> getDerivedSchemaDB() {\n \n             List<DerivedSchemaTO> list = null;\n "},{"sha":"862fd1c672a86428aebdfceb677470dcdb726e2a","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -213,13 +213,14 @@ public TaskExecutionsProvider(TaskTO taskTO) {\n             this.taskTO = taskTO;\n             setSort(\"startDate\", true);\n             comparator =\n-                    new SortableDataProviderComparator<TaskExecutionTO>(\n-                    getSort());\n+                    new SortableDataProviderComparator<TaskExecutionTO>(this);\n         }\n \n         @Override\n-        public Iterator<TaskExecutionTO> iterator(int first, int count) {\n-            List<TaskExecutionTO> list = getTasksListDB();\n+        public Iterator<TaskExecutionTO> iterator(final int first,\n+                final int count) {\n+\n+            List<TaskExecutionTO> list = getTaskDB();\n \n             Collections.sort(list, comparator);\n \n@@ -228,7 +229,7 @@ public Iterator<TaskExecutionTO> iterator(int first, int count) {\n \n         @Override\n         public int size() {\n-            return getTasksListDB().size();\n+            return getTaskDB().size();\n         }\n \n         @Override\n@@ -244,7 +245,7 @@ public TaskExecutionTO getObject() {\n             };\n         }\n \n-        public List<TaskExecutionTO> getTasksListDB() {\n+        public List<TaskExecutionTO> getTaskDB() {\n             return taskTO.getExecutions();\n         }\n     }"},{"sha":"1f65f525cdb869397bd755513c5fc6733972ee1f","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -292,7 +292,7 @@ public TasksProvider() {\n             super();\n             //Default sorting\n             setSort(\"id\", true);\n-            comparator = new SortableDataProviderComparator<TaskTO>(getSort());\n+            comparator = new SortableDataProviderComparator<TaskTO>(this);\n         }\n \n         @Override"},{"sha":"a0f226a73a7565158c46a20685a4f6e96ece41c4","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -68,6 +68,7 @@\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.RoleTreeBuilder;\n import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.ResourceRestClient;\n@@ -110,7 +111,7 @@ public class UserModalPage extends BaseModalPage {\n \n     private List<MembershipTO> membershipTOs;\n \n-    private final ModalWindow createUserWin;\n+    private final ModalWindow membershipWin;\n \n     private UserTO oldUser;\n \n@@ -119,15 +120,17 @@ public class UserModalPage extends BaseModalPage {\n     public UserModalPage(final Users basePage, final ModalWindow window,\n             final UserTO userTO, final boolean createFlag) {\n \n+        super();\n+\n         if (!createFlag) {\n             cloneOldUserTO(userTO);\n         }\n \n-        createUserWin = new ModalWindow(\"membershipWin\");\n-        createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createUserWin.setPageMapName(\"create-membership-modal\");\n-        createUserWin.setCookieName(\"create-membership-modal\");\n-        add(createUserWin);\n+        membershipWin = new ModalWindow(\"membershipWin\");\n+        membershipWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        membershipWin.setPageMapName(\"create-membership-modal\");\n+        membershipWin.setCookieName(\"create-membership-modal\");\n+        add(membershipWin);\n \n         add(new Label(\"id\", String.valueOf(userTO.getId())));\n \n@@ -371,6 +374,8 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     }\n \n                     basePage.setModalResult(true);\n+                    basePage.getPageParameters().put(\n+                            Constants.PAGEPARAM_CREATE, createFlag);\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     LOG.error(\"While creating or updating user\", e);\n@@ -414,7 +419,7 @@ protected void onNodeLinkClicked(final Object node,\n                 final RoleTO roleTO = (RoleTO) ((DefaultMutableTreeNode) node).\n                         getUserObject();\n \n-                createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n+                membershipWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     private MembershipTO membershipTO;\n \n@@ -424,10 +429,10 @@ public Page createPage() {\n                         membershipTO.setRoleId(roleTO.getId());\n \n                         return new MembershipModalPage(getPage(),\n-                                createUserWin, membershipTO, true);\n+                                membershipWin, membershipTO, true);\n                     }\n                 });\n-                createUserWin.show(target);\n+                membershipWin.show(target);\n             }\n         };\n \n@@ -453,22 +458,22 @@ protected void populateItem(final ListItem item) {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        createUserWin.setPageCreator(\n+                        membershipWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n-\n                                         MembershipModalPage window =\n                                                 new MembershipModalPage(\n-                                                getPage(), createUserWin,\n+                                                getPage(), membershipWin,\n                                                 membershipTO,\n                                                 false);\n \n                                         return window;\n \n                                     }\n                                 });\n-                        createUserWin.show(target);\n+                        membershipWin.show(target);\n                     }\n                 };\n                 item.add(editLink);\n@@ -492,7 +497,7 @@ public void onClick(final AjaxRequestTarget target) {\n         membershipsContainer.add(membershipsView);\n         membershipsContainer.setOutputMarkupId(true);\n \n-        setWindowClosedCallback(createUserWin, membershipsContainer);\n+        setWindowClosedCallback(membershipWin, membershipsContainer);\n \n         userForm.add(membershipsContainer);\n         add(userForm);\n@@ -582,6 +587,7 @@ private void setWindowClosedCallback(final ModalWindow window,\n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n+                    @Override\n                     public void onClose(final AjaxRequestTarget target) {\n                         target.addComponent(container);\n                     }\n@@ -688,10 +694,6 @@ public List<MembershipTO> getMembershipTOs() {\n         return membershipTOs;\n     }\n \n-    private void setMembershipTOs(List<MembershipTO> membershipTOs) {\n-        this.membershipTOs = membershipTOs;\n-    }\n-\n     /**\n      * Updates the modified user object.\n      * @param userTO"},{"sha":"029de5a92a639eb70b1f4021478b5f5f06a94c72","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":187,"deletions":122,"changes":309,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -63,7 +63,7 @@\n import org.syncope.console.commons.SearchConditionWrapper;\n import org.syncope.console.commons.SearchConditionWrapper.FilterType;\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n-import org.syncope.console.commons.SortableDataProviderComparator;\n+import org.syncope.console.commons.SortableUserProviderComparator;\n import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.rest.UserRestClient;\n@@ -75,7 +75,7 @@ public class Users extends BasePage {\n \n     private final static int EDIT_MODAL_WIN_HEIGHT = 680;\n \n-    private final static int EDIT_MODAL_WIN_WIDTH = 1133;\n+    private final static int EDIT_MODAL_WIN_WIDTH = 800;\n \n     private final static int DISPLAYATTRS_MODAL_WIN_HEIGHT = 500;\n \n@@ -93,10 +93,6 @@ public class Users extends BasePage {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n-    final private ModalWindow editModalWin;\n-\n-    final private ModalWindow displayAttrsModalWin;\n-\n     final private int paginatorRows = prefMan.getPaginatorRows(\n             getWebRequestCycle().getWebRequest(),\n             Constants.PREF_USERS_PAGINATOR_ROWS);\n@@ -151,13 +147,16 @@ protected List<FilterType> load() {\n                 }\n             };\n \n-    private NodeCond searchCond;\n+    final private WebMarkupContainer listContainer;\n+\n+    final private WebMarkupContainer searchResultContainer;\n \n     public Users(final PageParameters parameters) {\n         super(parameters);\n \n         // Modal window for editing user attributes\n-        editModalWin = new ModalWindow(\"editModalWin\");\n+        final ModalWindow editModalWin =\n+                new ModalWindow(\"editModalWin\");\n         editModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editModalWin.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n         editModalWin.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n@@ -166,119 +165,55 @@ public Users(final PageParameters parameters) {\n         add(editModalWin);\n \n         // Modal window for choosing which attributes to display in tables\n-        displayAttrsModalWin = new ModalWindow(\"displayAttrsModalWin\");\n+        final ModalWindow displayAttrsModalWin =\n+                new ModalWindow(\"displayAttrsModalWin\");\n         displayAttrsModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         displayAttrsModalWin.setInitialHeight(DISPLAYATTRS_MODAL_WIN_HEIGHT);\n         displayAttrsModalWin.setInitialWidth(DISPLAYATTRS_MODAL_WIN_WIDTH);\n         displayAttrsModalWin.setPageMapName(\"user-displayAttrs-modal\");\n         displayAttrsModalWin.setCookieName(\"user-displayAttrs-modal\");\n         add(displayAttrsModalWin);\n \n+        // Modal window for editing user attributes (in search tab)\n+        final ModalWindow searchEditModalWin =\n+                new ModalWindow(\"searchEditModalWin\");\n+        searchEditModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        searchEditModalWin.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n+        searchEditModalWin.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n+        searchEditModalWin.setPageMapName(\"user-search-edit-modal\");\n+        searchEditModalWin.setCookieName(\"user-search-edit-modal\");\n+        add(searchEditModalWin);\n+\n         // Container for user list\n-        final WebMarkupContainer listContainer =\n-                new WebMarkupContainer(\"listContainer\");\n+        listContainer = new WebMarkupContainer(\"listContainer\");\n         listContainer.setOutputMarkupId(true);\n-        setWindowClosedCallback(editModalWin, listContainer);\n-        setWindowClosedCallback(displayAttrsModalWin, listContainer);\n         add(listContainer);\n \n         // Container for user search result\n-        final WebMarkupContainer searchResultContainer =\n-                new WebMarkupContainer(\"searchResultContainer\");\n+        searchResultContainer = new WebMarkupContainer(\"searchResultContainer\");\n         searchResultContainer.setOutputMarkupId(true);\n-        setWindowClosedCallback(editModalWin, searchResultContainer);\n         add(searchResultContainer);\n \n-        // columns to be displayed in tables\n-        List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"id\")), \"id\", \"id\"));\n-        columns.add(new PropertyColumn(\n-                new Model(getString(\"status\")), \"status\", \"status\"));\n-        columns.add(new TokenColumn(new Model(getString(\"token\")), \"token\"));\n-        for (String schemaName : prefMan.getList(getWebRequestCycle().\n-                getWebRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n-\n-            columns.add(new UserAttrColumn(\n-                    new Model<String>(schemaName), schemaName));\n-        }\n-        columns.add(new AbstractColumn<UserTO>(new Model<String>(getString(\n-                \"edit\"))) {\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<UserTO> model) {\n-\n-                Panel panel = new EditLinkPanel(componentId, model);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"read\"));\n-\n-                panel.add(new IndicatingAjaxLink(\"editLink\") {\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editModalWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new UserModalPage(Users.this,\n-                                                editModalWin,\n-                                                model.getObject(), false);\n-                                    }\n-                                });\n-\n-                        editModalWin.show(target);\n-                    }\n-                });\n-                cellItem.add(panel);\n-            }\n-        });\n-        columns.add(new AbstractColumn<UserTO>(new Model<String>(getString(\n-                \"delete\"))) {\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<UserTO> model) {\n-\n-                Panel panel = new DeleteLinkPanel(componentId, model);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"delete\"));\n-\n-                panel.add(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        try {\n-                            userRestClient.delete(model.getObject().getId());\n-                            info(getString(\"operation_succeded\"));\n-                        } catch (SyncopeClientCompositeErrorException scce) {\n-                            error(scce.getMessage());\n-                        }\n-                        target.addComponent(feedbackPanel);\n-                        target.addComponent(listContainer);\n-                        target.addComponent(searchResultContainer);\n-                    }\n-                });\n-                cellItem.add(panel);\n-            }\n-        });\n-\n         final AjaxFallbackDefaultDataTable<UserTO> listTable =\n                 new AjaxFallbackDefaultDataTable<UserTO>(\"listTable\",\n-                columns, new UserDataProvider(), paginatorRows);\n+                getColumns(editModalWin), new UserDataProvider(),\n+                paginatorRows);\n+        if (parameters.getAsBoolean(Constants.PAGEPARAM_CREATE, false)) {\n+            listTable.setCurrentPage(listTable.getPageCount() - 1);\n+            parameters.remove(Constants.PAGEPARAM_CREATE);\n+        } else {\n+            listTable.setCurrentPage(parameters.getAsInteger(\n+                    listTable.getId() + Constants.PAGEPARAM_CURRENT_PAGE, 0));\n+        }\n         listContainer.add(listTable);\n+        setWindowClosedReloadCallback(editModalWin, listTable);\n+        setWindowClosedReloadCallback(displayAttrsModalWin, listTable);\n \n         // create new user\n         AjaxLink createLink = new IndicatingAjaxLink(\"createLink\") {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-\n                 editModalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     @Override\n@@ -351,7 +286,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         final WebMarkupContainer searchFormContainer =\n                 new WebMarkupContainer(\"searchFormContainer\");\n         searchFormContainer.setOutputMarkupId(true);\n-        setWindowClosedCallback(editModalWin, searchFormContainer);\n         searchForm.add(searchFormContainer);\n \n         final List<SearchConditionWrapper> searchConditionList =\n@@ -396,27 +330,45 @@ protected void onSubmit(final AjaxRequestTarget target,\n         searchFormContainer.add(addOrButton);\n \n         // search result\n+        final UserSearchDataProvider searchDataProvider =\n+                new UserSearchDataProvider();\n         final AjaxFallbackDefaultDataTable<UserTO> searchResultTable =\n                 new AjaxFallbackDefaultDataTable<UserTO>(\"searchResultTable\",\n-                columns, new UserSearchDataProvider(), searchPaginatorRows);\n+                getColumns(searchEditModalWin), searchDataProvider,\n+                searchPaginatorRows);\n         searchResultTable.setOutputMarkupId(true);\n+        searchResultTable.setCurrentPage(parameters.getAsInteger(\n+                searchResultTable.getId()\n+                + Constants.PAGEPARAM_CURRENT_PAGE, 0));\n         searchResultContainer.add(searchResultTable);\n+\n+        searchEditModalWin.setWindowClosedCallback(\n+                new ModalWindow.WindowClosedCallback() {\n+\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n+                        doSearch(target, searchConditionList,\n+                                searchDataProvider, searchResultTable);\n+\n+                        if (modalResult) {\n+                            info(getString(\"operation_succeded\"));\n+\n+                            target.addComponent(feedbackPanel);\n+\n+                            modalResult = false;\n+                        }\n+                    }\n+                });\n+\n         searchForm.add(new IndicatingAjaxButton(\"search\", new Model(\n                 getString(\"search\"))) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n-                searchCond = buildSearchCond(searchConditionList);\n-                LOG.debug(\"Node condition \" + searchCond);\n-\n-                if (searchCond == null || !searchCond.checkValidity()) {\n-                    error(getString(\"search_error\"));\n-                    return;\n-                }\n-\n-                target.addComponent(searchResultTable);\n+                doSearch(target, searchConditionList, searchDataProvider,\n+                        searchResultTable);\n             }\n \n             @Override\n@@ -452,25 +404,131 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         searchPaginatorForm.add(searchRowsChooser);\n     }\n \n-    private void setWindowClosedCallback(final ModalWindow window,\n-            final WebMarkupContainer container) {\n+    private void setWindowClosedReloadCallback(final ModalWindow window,\n+            final AjaxFallbackDefaultDataTable<UserTO> table) {\n \n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n                     @Override\n                     public void onClose(final AjaxRequestTarget target) {\n-                        target.addComponent(container);\n-                        target.addComponent(feedbackPanel);\n-\n                         if (modalResult) {\n-                            info(getString(\"operation_succeded\"));\n+                            getSession().info(getString(\"operation_succeded\"));\n+\n+                            PageParameters params =\n+                                    getPage().getPageParameters();\n+                            params.put(table.getId()\n+                                    + Constants.PAGEPARAM_CURRENT_PAGE,\n+                                    table.getCurrentPage());\n+                            setResponsePage(Users.class, params);\n+\n+                            target.addComponent(feedbackPanel);\n+\n                             modalResult = false;\n                         }\n                     }\n                 });\n     }\n \n+    protected List<IColumn<UserTO>> getColumns(final ModalWindow editModalWin) {\n+        List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n+        columns.add(new PropertyColumn(\n+                new Model(getString(\"id\")), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(\n+                new Model(getString(\"status\")), \"status\", \"status\"));\n+        columns.add(new TokenColumn(new Model(getString(\"token\")), \"token\"));\n+        for (String schemaName : prefMan.getList(getWebRequestCycle().\n+                getWebRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+\n+            columns.add(new UserAttrColumn(\n+                    new Model<String>(schemaName), schemaName));\n+        }\n+        columns.add(new AbstractColumn<UserTO>(new Model<String>(getString(\n+                \"edit\"))) {\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<UserTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<UserTO> model) {\n+\n+                Panel panel = new EditLinkPanel(componentId, model);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"read\"));\n+\n+                panel.add(new IndicatingAjaxLink(\"editLink\") {\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        editModalWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n+\n+                                    @Override\n+                                    public Page createPage() {\n+                                        return new UserModalPage(Users.this,\n+                                                editModalWin,\n+                                                model.getObject(), false);\n+                                    }\n+                                });\n+\n+                        editModalWin.show(target);\n+                    }\n+                });\n+                cellItem.add(panel);\n+            }\n+        });\n+        columns.add(new AbstractColumn<UserTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<UserTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<UserTO> model) {\n+\n+                Panel panel = new DeleteLinkPanel(componentId, model);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"delete\"));\n+\n+                panel.add(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            userRestClient.delete(model.getObject().getId());\n+                            info(getString(\"operation_succeded\"));\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n+                            error(scce.getMessage());\n+                        }\n+                        target.addComponent(feedbackPanel);\n+                        target.addComponent(listContainer);\n+                        target.addComponent(searchResultContainer);\n+                    }\n+                });\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    private void doSearch(final AjaxRequestTarget target,\n+            final List<SearchConditionWrapper> searchConditionList,\n+            final UserSearchDataProvider searchDataProvider,\n+            final AjaxFallbackDefaultDataTable<UserTO> searchResultTable) {\n+\n+        NodeCond searchCond = buildSearchCond(searchConditionList);\n+        LOG.debug(\"Node condition \" + searchCond);\n+\n+        if (searchCond == null || !searchCond.checkValidity()) {\n+            error(getString(\"search_error\"));\n+            return;\n+        }\n+        searchDataProvider.setSearchCond(searchCond);\n+\n+        target.addComponent(searchResultTable);\n+    }\n+\n     public void setModalResult(final boolean modalResult) {\n         this.modalResult = modalResult;\n     }\n@@ -491,7 +549,8 @@ private NodeCond buildSearchCond(\n                     searchConditionWrapper.getFilterValue());\n         } else {\n             membershipCond = new MembershipCond();\n-            membershipCond.setRoleName(searchConditionWrapper.getFilterName());\n+            membershipCond.setRoleId(RoleTO.fromDisplayName(\n+                    searchConditionWrapper.getFilterName()));\n         }\n \n         if (conditions.size() == 1) {\n@@ -570,19 +629,19 @@ private NodeCond buildSearchCond(\n \n     private class UserDataProvider extends SortableDataProvider<UserTO> {\n \n-        private SortableDataProviderComparator<UserTO> comparator;\n+        private SortableUserProviderComparator comparator;\n \n         public UserDataProvider() {\n             super();\n             //Default sorting\n             setSort(\"id\", true);\n-            comparator = new SortableDataProviderComparator<UserTO>(getSort());\n+            comparator = new SortableUserProviderComparator(this);\n         }\n \n         @Override\n         public Iterator<UserTO> iterator(final int first, final int count) {\n             List<UserTO> users = userRestClient.list(\n-                    (first / paginatorRows) + 1, count);\n+                    (first / paginatorRows) + 1, paginatorRows);\n             Collections.sort(users, comparator);\n             return users.iterator();\n         }\n@@ -600,13 +659,19 @@ public IModel<UserTO> model(final UserTO object) {\n \n     private class UserSearchDataProvider extends SortableDataProvider<UserTO> {\n \n-        private SortableDataProviderComparator<UserTO> comparator;\n+        private SortableUserProviderComparator comparator;\n+\n+        private NodeCond searchCond = null;\n \n         public UserSearchDataProvider() {\n             super();\n             //Default sorting\n             setSort(\"id\", true);\n-            comparator = new SortableDataProviderComparator<UserTO>(getSort());\n+            comparator = new SortableUserProviderComparator(this);\n+        }\n+\n+        public void setSearchCond(NodeCond searchCond) {\n+            this.searchCond = searchCond;\n         }\n \n         @Override\n@@ -616,7 +681,7 @@ public Iterator<UserTO> iterator(final int first, final int count) {\n                 users = Collections.EMPTY_LIST;\n             } else {\n                 users = userRestClient.search(searchCond,\n-                        (first / paginatorRows) + 1, count);\n+                        (first / searchPaginatorRows) + 1, searchPaginatorRows);\n                 Collections.sort(users, comparator);\n             }\n \n@@ -666,7 +731,7 @@ private static class UserAttrColumn extends AbstractColumn<UserTO> {\n         public UserAttrColumn(final IModel<String> displayModel,\n                 final String schemaName) {\n \n-            super(displayModel);\n+            super(displayModel, schemaName);\n             this.schemaName = schemaName;\n         }\n "},{"sha":"60d24a5a291b48174d2f6abe04d4f266c38ad097","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/323ce79b01ca6e99eaf79084c6c365ae13f99c47/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=323ce79b01ca6e99eaf79084c6c365ae13f99c47","patch":"@@ -160,6 +160,9 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n                     </form>\n                 </span>\n             </div>\n+\n+            <div wicket:id=\"searchEditModalWin\">\n+            </div>\n         </div>\n     </div>\n "}]}